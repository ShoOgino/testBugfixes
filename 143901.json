{"path":"lucene/core/src/java/org/apache/lucene/document/Field#setBytesValue(BytesRef).mjava","commits":[{"id":"a78a90fc9701e511308346ea29f4f5e548bb39fe","date":1329489995,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBytesValue(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setValue(BytesRef).mjava","sourceNew":"  /**\n   * Expert: change the value of this field. See <a\n   * href=\"#setValue(java.lang.String)\">setValue(String)</a>.\n   *\n   * <p>NOTE: the provided BytesRef is not copied so be sure\n   * not to change it until you're done with this field.\n   */\n  public void setBytesValue(BytesRef value) {\n    if (!(fieldsData instanceof BytesRef)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to BytesRef\");\n    }\n    if (type.indexed()) {\n      throw new IllegalArgumentException(\"cannot set a Reader value on an indexed field\");\n    }\n    fieldsData = value;\n  }\n\n","sourceOld":"  /**\n   * Expert: change the value of this field. See <a\n   * href=\"#setValue(java.lang.String)\">setValue(String)</a>.\n   *\n   * <p>NOTE: the provided BytesRef is not copied so be sure\n   * not to change it until you're done with this field.\n   */\n  public void setValue(BytesRef value) {\n    if (!(fieldsData instanceof BytesRef)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to BytesRef\");\n    }\n    if (type.indexed()) {\n      throw new IllegalArgumentException(\"cannot set a Reader value on an indexed field\");\n    }\n    fieldsData = value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f57cd8babca580984c29b58cb3d63c30b9376726","date":1335142762,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBytesValue(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setBytesValue(BytesRef).mjava","sourceNew":"  /**\n   * Expert: change the value of this field. See \n   * {@link #setStringValue(String)}.\n   *\n   * <p>NOTE: the provided BytesRef is not copied so be sure\n   * not to change it until you're done with this field.\n   */\n  public void setBytesValue(BytesRef value) {\n    if (!(fieldsData instanceof BytesRef)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to BytesRef\");\n    }\n    if (type.indexed()) {\n      throw new IllegalArgumentException(\"cannot set a Reader value on an indexed field\");\n    }\n    fieldsData = value;\n  }\n\n","sourceOld":"  /**\n   * Expert: change the value of this field. See <a\n   * href=\"#setValue(java.lang.String)\">setValue(String)</a>.\n   *\n   * <p>NOTE: the provided BytesRef is not copied so be sure\n   * not to change it until you're done with this field.\n   */\n  public void setBytesValue(BytesRef value) {\n    if (!(fieldsData instanceof BytesRef)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to BytesRef\");\n    }\n    if (type.indexed()) {\n      throw new IllegalArgumentException(\"cannot set a Reader value on an indexed field\");\n    }\n    fieldsData = value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a461154242eae0ddb03e728f02224afc6c13cc74","date":1355344199,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBytesValue(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setBytesValue(BytesRef).mjava","sourceNew":"  /**\n   * Expert: change the value of this field. See \n   * {@link #setStringValue(String)}.\n   *\n   * <p>NOTE: the provided BytesRef is not copied so be sure\n   * not to change it until you're done with this field.\n   */\n  public void setBytesValue(BytesRef value) {\n    if (!(fieldsData instanceof BytesRef)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to BytesRef\");\n    }\n    if (type.indexed()) {\n      throw new IllegalArgumentException(\"cannot set a BytesRef value on an indexed field\");\n    }\n    fieldsData = value;\n  }\n\n","sourceOld":"  /**\n   * Expert: change the value of this field. See \n   * {@link #setStringValue(String)}.\n   *\n   * <p>NOTE: the provided BytesRef is not copied so be sure\n   * not to change it until you're done with this field.\n   */\n  public void setBytesValue(BytesRef value) {\n    if (!(fieldsData instanceof BytesRef)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to BytesRef\");\n    }\n    if (type.indexed()) {\n      throw new IllegalArgumentException(\"cannot set a Reader value on an indexed field\");\n    }\n    fieldsData = value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBytesValue(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setBytesValue(BytesRef).mjava","sourceNew":"  /**\n   * Expert: change the value of this field. See \n   * {@link #setStringValue(String)}.\n   *\n   * <p>NOTE: the provided BytesRef is not copied so be sure\n   * not to change it until you're done with this field.\n   */\n  public void setBytesValue(BytesRef value) {\n    if (!(fieldsData instanceof BytesRef)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to BytesRef\");\n    }\n    if (type.indexed()) {\n      throw new IllegalArgumentException(\"cannot set a BytesRef value on an indexed field\");\n    }\n    fieldsData = value;\n  }\n\n","sourceOld":"  /**\n   * Expert: change the value of this field. See \n   * {@link #setStringValue(String)}.\n   *\n   * <p>NOTE: the provided BytesRef is not copied so be sure\n   * not to change it until you're done with this field.\n   */\n  public void setBytesValue(BytesRef value) {\n    if (!(fieldsData instanceof BytesRef)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to BytesRef\");\n    }\n    if (type.indexed()) {\n      throw new IllegalArgumentException(\"cannot set a Reader value on an indexed field\");\n    }\n    fieldsData = value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d865fb5bb649d437707d6becbc9d8d940930d56","date":1399653385,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBytesValue(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setBytesValue(BytesRef).mjava","sourceNew":"  /**\n   * Expert: change the value of this field. See \n   * {@link #setStringValue(String)}.\n   *\n   * <p>NOTE: the provided BytesRef is not copied so be sure\n   * not to change it until you're done with this field.\n   */\n  public void setBytesValue(BytesRef value) {\n    if (!(fieldsData instanceof BytesRef)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to BytesRef\");\n    }\n    if (type.indexed()) {\n      throw new IllegalArgumentException(\"cannot set a BytesRef value on an indexed field\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"value cannot be null\");\n    }\n    fieldsData = value;\n  }\n\n","sourceOld":"  /**\n   * Expert: change the value of this field. See \n   * {@link #setStringValue(String)}.\n   *\n   * <p>NOTE: the provided BytesRef is not copied so be sure\n   * not to change it until you're done with this field.\n   */\n  public void setBytesValue(BytesRef value) {\n    if (!(fieldsData instanceof BytesRef)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to BytesRef\");\n    }\n    if (type.indexed()) {\n      throw new IllegalArgumentException(\"cannot set a BytesRef value on an indexed field\");\n    }\n    fieldsData = value;\n  }\n\n","bugFix":null,"bugIntro":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3184874f7f3aca850248483485b4995343066875","date":1413876758,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBytesValue(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setBytesValue(BytesRef).mjava","sourceNew":"  /**\n   * Expert: change the value of this field. See \n   * {@link #setStringValue(String)}.\n   *\n   * <p>NOTE: the provided BytesRef is not copied so be sure\n   * not to change it until you're done with this field.\n   */\n  public void setBytesValue(BytesRef value) {\n    if (!(fieldsData instanceof BytesRef)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to BytesRef\");\n    }\n    if (type.indexOptions() != null) {\n      throw new IllegalArgumentException(\"cannot set a BytesRef value on an indexed field\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"value cannot be null\");\n    }\n    fieldsData = value;\n  }\n\n","sourceOld":"  /**\n   * Expert: change the value of this field. See \n   * {@link #setStringValue(String)}.\n   *\n   * <p>NOTE: the provided BytesRef is not copied so be sure\n   * not to change it until you're done with this field.\n   */\n  public void setBytesValue(BytesRef value) {\n    if (!(fieldsData instanceof BytesRef)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to BytesRef\");\n    }\n    if (type.indexed()) {\n      throw new IllegalArgumentException(\"cannot set a BytesRef value on an indexed field\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"value cannot be null\");\n    }\n    fieldsData = value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBytesValue(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setBytesValue(BytesRef).mjava","sourceNew":"  /**\n   * Expert: change the value of this field. See \n   * {@link #setStringValue(String)}.\n   *\n   * <p>NOTE: the provided BytesRef is not copied so be sure\n   * not to change it until you're done with this field.\n   */\n  public void setBytesValue(BytesRef value) {\n    if (!(fieldsData instanceof BytesRef)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to BytesRef\");\n    }\n    if (type.indexOptions() != null) {\n      throw new IllegalArgumentException(\"cannot set a BytesRef value on an indexed field\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"value cannot be null\");\n    }\n    fieldsData = value;\n  }\n\n","sourceOld":"  /**\n   * Expert: change the value of this field. See \n   * {@link #setStringValue(String)}.\n   *\n   * <p>NOTE: the provided BytesRef is not copied so be sure\n   * not to change it until you're done with this field.\n   */\n  public void setBytesValue(BytesRef value) {\n    if (!(fieldsData instanceof BytesRef)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to BytesRef\");\n    }\n    if (type.indexed()) {\n      throw new IllegalArgumentException(\"cannot set a BytesRef value on an indexed field\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"value cannot be null\");\n    }\n    fieldsData = value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2bb2842e561df4e8e9ad89010605fc86ac265465","date":1414768208,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBytesValue(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setBytesValue(BytesRef).mjava","sourceNew":"  /**\n   * Expert: change the value of this field. See \n   * {@link #setStringValue(String)}.\n   *\n   * <p>NOTE: the provided BytesRef is not copied so be sure\n   * not to change it until you're done with this field.\n   */\n  public void setBytesValue(BytesRef value) {\n    if (!(fieldsData instanceof BytesRef)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to BytesRef\");\n    }\n    if (type.indexOptions() != IndexOptions.NO) {\n      throw new IllegalArgumentException(\"cannot set a BytesRef value on an indexed field\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"value cannot be null\");\n    }\n    fieldsData = value;\n  }\n\n","sourceOld":"  /**\n   * Expert: change the value of this field. See \n   * {@link #setStringValue(String)}.\n   *\n   * <p>NOTE: the provided BytesRef is not copied so be sure\n   * not to change it until you're done with this field.\n   */\n  public void setBytesValue(BytesRef value) {\n    if (!(fieldsData instanceof BytesRef)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to BytesRef\");\n    }\n    if (type.indexOptions() != null) {\n      throw new IllegalArgumentException(\"cannot set a BytesRef value on an indexed field\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"value cannot be null\");\n    }\n    fieldsData = value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f95ce1375367b92d411a06175eab3915fe93c6bc","date":1414788502,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBytesValue(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setBytesValue(BytesRef).mjava","sourceNew":"  /**\n   * Expert: change the value of this field. See \n   * {@link #setStringValue(String)}.\n   *\n   * <p>NOTE: the provided BytesRef is not copied so be sure\n   * not to change it until you're done with this field.\n   */\n  public void setBytesValue(BytesRef value) {\n    if (!(fieldsData instanceof BytesRef)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to BytesRef\");\n    }\n    if (type.indexOptions() != IndexOptions.NONE) {\n      throw new IllegalArgumentException(\"cannot set a BytesRef value on an indexed field\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"value cannot be null\");\n    }\n    fieldsData = value;\n  }\n\n","sourceOld":"  /**\n   * Expert: change the value of this field. See \n   * {@link #setStringValue(String)}.\n   *\n   * <p>NOTE: the provided BytesRef is not copied so be sure\n   * not to change it until you're done with this field.\n   */\n  public void setBytesValue(BytesRef value) {\n    if (!(fieldsData instanceof BytesRef)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to BytesRef\");\n    }\n    if (type.indexOptions() != IndexOptions.NO) {\n      throw new IllegalArgumentException(\"cannot set a BytesRef value on an indexed field\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"value cannot be null\");\n    }\n    fieldsData = value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad0d09e969f4763b0df4230f8e3f74357872a4e4","date":1459188769,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setBytesValue(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setBytesValue(BytesRef).mjava","sourceNew":"  /**\n   * Expert: change the value of this field. See \n   * {@link #setStringValue(String)}.\n   *\n   * <p>NOTE: the provided BytesRef is not copied so be sure\n   * not to change it until you're done with this field.\n   */\n  public void setBytesValue(BytesRef value) {\n    if (!(fieldsData instanceof BytesRef)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to BytesRef\");\n    }\n    if (type.indexOptions() != IndexOptions.NONE) {\n      throw new IllegalArgumentException(\"cannot set a BytesRef value on an indexed field\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"value must not be null\");\n    }\n    fieldsData = value;\n  }\n\n","sourceOld":"  /**\n   * Expert: change the value of this field. See \n   * {@link #setStringValue(String)}.\n   *\n   * <p>NOTE: the provided BytesRef is not copied so be sure\n   * not to change it until you're done with this field.\n   */\n  public void setBytesValue(BytesRef value) {\n    if (!(fieldsData instanceof BytesRef)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to BytesRef\");\n    }\n    if (type.indexOptions() != IndexOptions.NONE) {\n      throw new IllegalArgumentException(\"cannot set a BytesRef value on an indexed field\");\n    }\n    if (value == null) {\n      throw new IllegalArgumentException(\"value cannot be null\");\n    }\n    fieldsData = value;\n  }\n\n","bugFix":["5d865fb5bb649d437707d6becbc9d8d940930d56"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5d865fb5bb649d437707d6becbc9d8d940930d56":["a461154242eae0ddb03e728f02224afc6c13cc74"],"f57cd8babca580984c29b58cb3d63c30b9376726":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["f57cd8babca580984c29b58cb3d63c30b9376726","a461154242eae0ddb03e728f02224afc6c13cc74"],"a78a90fc9701e511308346ea29f4f5e548bb39fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["5d865fb5bb649d437707d6becbc9d8d940930d56","3184874f7f3aca850248483485b4995343066875"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad0d09e969f4763b0df4230f8e3f74357872a4e4":["f95ce1375367b92d411a06175eab3915fe93c6bc"],"2bb2842e561df4e8e9ad89010605fc86ac265465":["3184874f7f3aca850248483485b4995343066875"],"a461154242eae0ddb03e728f02224afc6c13cc74":["f57cd8babca580984c29b58cb3d63c30b9376726"],"f95ce1375367b92d411a06175eab3915fe93c6bc":["2bb2842e561df4e8e9ad89010605fc86ac265465"],"3184874f7f3aca850248483485b4995343066875":["5d865fb5bb649d437707d6becbc9d8d940930d56"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"]},"commit2Childs":{"5d865fb5bb649d437707d6becbc9d8d940930d56":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","3184874f7f3aca850248483485b4995343066875"],"f57cd8babca580984c29b58cb3d63c30b9376726":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a461154242eae0ddb03e728f02224afc6c13cc74"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"a78a90fc9701e511308346ea29f4f5e548bb39fe":["f57cd8babca580984c29b58cb3d63c30b9376726"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"ad0d09e969f4763b0df4230f8e3f74357872a4e4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2bb2842e561df4e8e9ad89010605fc86ac265465":["f95ce1375367b92d411a06175eab3915fe93c6bc"],"a461154242eae0ddb03e728f02224afc6c13cc74":["5d865fb5bb649d437707d6becbc9d8d940930d56","d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"3184874f7f3aca850248483485b4995343066875":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","2bb2842e561df4e8e9ad89010605fc86ac265465"],"f95ce1375367b92d411a06175eab3915fe93c6bc":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}