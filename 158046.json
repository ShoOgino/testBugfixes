{"path":"lucene/core/src/test/org/apache/lucene/search/TestRegexpRandom#testRegexps().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestRegexpRandom#testRegexps().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestRegexpRandom#testRegexps().mjava","sourceNew":"  public void testRegexps() throws Exception {\n    int num = atLeast(1);\n    for (int i = 0; i < num; i++) {\n      assertPatternHits(\"NNN\", 1);\n      assertPatternHits(\".NN\", 10);\n      assertPatternHits(\"N.N\", 10);\n      assertPatternHits(\"NN.\", 10);\n    }\n    \n    for (int i = 0; i < num; i++) {\n      assertPatternHits(\".{1,2}N\", 100);\n      assertPatternHits(\"N.{1,2}\", 100);\n      assertPatternHits(\".{1,3}\", 1000);\n      \n      assertPatternHits(\"NN[3-7]\", 5);\n      assertPatternHits(\"N[2-6][3-7]\", 25);\n      assertPatternHits(\"[1-5][2-6][3-7]\", 125);\n      assertPatternHits(\"[0-4][3-7][4-8]\", 125);\n      assertPatternHits(\"[2-6][0-4]N\", 25);\n      assertPatternHits(\"[2-6]NN\", 5);\n      \n      assertPatternHits(\"NN.*\", 10);\n      assertPatternHits(\"N.*\", 100);\n      assertPatternHits(\".*\", 1000);\n      \n      assertPatternHits(\".*NN\", 10);\n      assertPatternHits(\".*N\", 100);\n      \n      assertPatternHits(\"N.*N\", 10);\n      \n      // combo of ? and * operators\n      assertPatternHits(\".N.*\", 100);\n      assertPatternHits(\"N..*\", 100);\n      \n      assertPatternHits(\".*N.\", 100);\n      assertPatternHits(\".*..\", 1000);\n      assertPatternHits(\".*.N\", 100);\n    }\n  }\n\n","sourceOld":"  public void testRegexps() throws Exception {\n    int num = atLeast(1);\n    for (int i = 0; i < num; i++) {\n      assertPatternHits(\"NNN\", 1);\n      assertPatternHits(\".NN\", 10);\n      assertPatternHits(\"N.N\", 10);\n      assertPatternHits(\"NN.\", 10);\n    }\n    \n    for (int i = 0; i < num; i++) {\n      assertPatternHits(\".{1,2}N\", 100);\n      assertPatternHits(\"N.{1,2}\", 100);\n      assertPatternHits(\".{1,3}\", 1000);\n      \n      assertPatternHits(\"NN[3-7]\", 5);\n      assertPatternHits(\"N[2-6][3-7]\", 25);\n      assertPatternHits(\"[1-5][2-6][3-7]\", 125);\n      assertPatternHits(\"[0-4][3-7][4-8]\", 125);\n      assertPatternHits(\"[2-6][0-4]N\", 25);\n      assertPatternHits(\"[2-6]NN\", 5);\n      \n      assertPatternHits(\"NN.*\", 10);\n      assertPatternHits(\"N.*\", 100);\n      assertPatternHits(\".*\", 1000);\n      \n      assertPatternHits(\".*NN\", 10);\n      assertPatternHits(\".*N\", 100);\n      \n      assertPatternHits(\"N.*N\", 10);\n      \n      // combo of ? and * operators\n      assertPatternHits(\".N.*\", 100);\n      assertPatternHits(\"N..*\", 100);\n      \n      assertPatternHits(\".*N.\", 100);\n      assertPatternHits(\".*..\", 1000);\n      assertPatternHits(\".*.N\", 100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}