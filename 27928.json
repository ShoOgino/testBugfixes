{"path":"lucene/core/src/java/org/apache/lucene/index/DocValues#getSortedNumeric(LeafReader,String).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValues#getSortedNumeric(LeafReader,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns SortedNumericDocValues for the reader, or {@link #emptySortedNumeric} if it has none. \n   */\n  public static SortedNumericDocValues getSortedNumeric(LeafReader in, String field) throws IOException {\n    SortedNumericDocValues dv = in.getSortedNumericDocValues(field);\n    if (dv == null) {\n      NumericDocValues single = in.getNumericDocValues(field);\n      if (single == null) {\n        return emptySortedNumeric(in.maxDoc());\n      }\n      Bits bits = in.getDocsWithField(field);\n      return singleton(single, bits);\n    }\n    return dv;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c","date":1416362965,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValues#getSortedNumeric(LeafReader,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValues#getSortedNumeric(LeafReader,String).mjava","sourceNew":"  /**\n   * Returns SortedNumericDocValues for the field, or {@link #emptySortedNumeric} if it has none. \n   * @return docvalues instance, or an empty instance if {@code field} does not exist in this reader.\n   * @throws IllegalStateException if {@code field} exists, but was not indexed with docvalues.\n   * @throws IllegalStateException if {@code field} has docvalues, but the type is not {@link DocValuesType#SORTED_NUMERIC}\n   *                               or {@link DocValuesType#NUMERIC}.\n   * @throws IOException if an I/O error occurs.\n   */\n  public static SortedNumericDocValues getSortedNumeric(LeafReader reader, String field) throws IOException {\n    SortedNumericDocValues dv = reader.getSortedNumericDocValues(field);\n    if (dv == null) {\n      NumericDocValues single = reader.getNumericDocValues(field);\n      if (single == null) {\n        checkField(reader, field, DocValuesType.SORTED_NUMERIC, DocValuesType.NUMERIC);\n        return emptySortedNumeric(reader.maxDoc());\n      }\n      Bits bits = reader.getDocsWithField(field);\n      return singleton(single, bits);\n    }\n    return dv;\n  }\n\n","sourceOld":"  /**\n   * Returns SortedNumericDocValues for the reader, or {@link #emptySortedNumeric} if it has none. \n   */\n  public static SortedNumericDocValues getSortedNumeric(LeafReader in, String field) throws IOException {\n    SortedNumericDocValues dv = in.getSortedNumericDocValues(field);\n    if (dv == null) {\n      NumericDocValues single = in.getNumericDocValues(field);\n      if (single == null) {\n        return emptySortedNumeric(in.maxDoc());\n      }\n      Bits bits = in.getDocsWithField(field);\n      return singleton(single, bits);\n    }\n    return dv;\n  }\n\n","bugFix":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValues#getSortedNumeric(LeafReader,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValues#getSortedNumeric(LeafReader,String).mjava","sourceNew":"  /**\n   * Returns SortedNumericDocValues for the field, or {@link #emptySortedNumeric} if it has none.\n   * @return docvalues instance, or an empty instance if {@code field} does not exist in this reader.\n   * @throws IllegalStateException if {@code field} exists, but was not indexed with docvalues.\n   * @throws IllegalStateException if {@code field} has docvalues, but the type is not {@link DocValuesType#SORTED_NUMERIC}\n   *                               or {@link DocValuesType#NUMERIC}.\n   * @throws IOException if an I/O error occurs.\n   */\n  public static SortedNumericDocValues getSortedNumeric(LeafReader reader, String field) throws IOException {\n    SortedNumericDocValues dv = reader.getSortedNumericDocValues(field);\n    if (dv == null) {\n      NumericDocValues single = reader.getNumericDocValues(field);\n      if (single == null) {\n        checkField(reader, field, DocValuesType.SORTED_NUMERIC, DocValuesType.NUMERIC);\n        return emptySortedNumeric(reader.maxDoc());\n      }\n      return singleton(single);\n    }\n    return dv;\n  }\n\n","sourceOld":"  /**\n   * Returns SortedNumericDocValues for the field, or {@link #emptySortedNumeric} if it has none. \n   * @return docvalues instance, or an empty instance if {@code field} does not exist in this reader.\n   * @throws IllegalStateException if {@code field} exists, but was not indexed with docvalues.\n   * @throws IllegalStateException if {@code field} has docvalues, but the type is not {@link DocValuesType#SORTED_NUMERIC}\n   *                               or {@link DocValuesType#NUMERIC}.\n   * @throws IOException if an I/O error occurs.\n   */\n  public static SortedNumericDocValues getSortedNumeric(LeafReader reader, String field) throws IOException {\n    SortedNumericDocValues dv = reader.getSortedNumericDocValues(field);\n    if (dv == null) {\n      NumericDocValues single = reader.getNumericDocValues(field);\n      if (single == null) {\n        checkField(reader, field, DocValuesType.SORTED_NUMERIC, DocValuesType.NUMERIC);\n        return emptySortedNumeric(reader.maxDoc());\n      }\n      Bits bits = reader.getDocsWithField(field);\n      return singleton(single, bits);\n    }\n    return dv;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValues#getSortedNumeric(LeafReader,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValues#getSortedNumeric(LeafReader,String).mjava","sourceNew":"  /**\n   * Returns SortedNumericDocValues for the field, or {@link #emptySortedNumeric} if it has none.\n   * @return docvalues instance, or an empty instance if {@code field} does not exist in this reader.\n   * @throws IllegalStateException if {@code field} exists, but was not indexed with docvalues.\n   * @throws IllegalStateException if {@code field} has docvalues, but the type is not {@link DocValuesType#SORTED_NUMERIC}\n   *                               or {@link DocValuesType#NUMERIC}.\n   * @throws IOException if an I/O error occurs.\n   */\n  public static SortedNumericDocValues getSortedNumeric(LeafReader reader, String field) throws IOException {\n    SortedNumericDocValues dv = reader.getSortedNumericDocValues(field);\n    if (dv == null) {\n      NumericDocValues single = reader.getNumericDocValues(field);\n      if (single == null) {\n        checkField(reader, field, DocValuesType.SORTED_NUMERIC, DocValuesType.NUMERIC);\n        return emptySortedNumeric(reader.maxDoc());\n      }\n      return singleton(single);\n    }\n    return dv;\n  }\n\n","sourceOld":"  /**\n   * Returns SortedNumericDocValues for the field, or {@link #emptySortedNumeric} if it has none. \n   * @return docvalues instance, or an empty instance if {@code field} does not exist in this reader.\n   * @throws IllegalStateException if {@code field} exists, but was not indexed with docvalues.\n   * @throws IllegalStateException if {@code field} has docvalues, but the type is not {@link DocValuesType#SORTED_NUMERIC}\n   *                               or {@link DocValuesType#NUMERIC}.\n   * @throws IOException if an I/O error occurs.\n   */\n  public static SortedNumericDocValues getSortedNumeric(LeafReader reader, String field) throws IOException {\n    SortedNumericDocValues dv = reader.getSortedNumericDocValues(field);\n    if (dv == null) {\n      NumericDocValues single = reader.getNumericDocValues(field);\n      if (single == null) {\n        checkField(reader, field, DocValuesType.SORTED_NUMERIC, DocValuesType.NUMERIC);\n        return emptySortedNumeric(reader.maxDoc());\n      }\n      Bits bits = reader.getDocsWithField(field);\n      return singleton(single, bits);\n    }\n    return dv;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValues#getSortedNumeric(LeafReader,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValues#getSortedNumeric(LeafReader,String).mjava","sourceNew":"  /**\n   * Returns SortedNumericDocValues for the field, or {@link #emptySortedNumeric} if it has none.\n   * @return docvalues instance, or an empty instance if {@code field} does not exist in this reader.\n   * @throws IllegalStateException if {@code field} exists, but was not indexed with docvalues.\n   * @throws IllegalStateException if {@code field} has docvalues, but the type is not {@link DocValuesType#SORTED_NUMERIC}\n   *                               or {@link DocValuesType#NUMERIC}.\n   * @throws IOException if an I/O error occurs.\n   */\n  public static SortedNumericDocValues getSortedNumeric(LeafReader reader, String field) throws IOException {\n    SortedNumericDocValues dv = reader.getSortedNumericDocValues(field);\n    if (dv == null) {\n      NumericDocValues single = reader.getNumericDocValues(field);\n      if (single == null) {\n        checkField(reader, field, DocValuesType.SORTED_NUMERIC, DocValuesType.NUMERIC);\n        return emptySortedNumeric(reader.maxDoc());\n      }\n      return singleton(single);\n    }\n    return dv;\n  }\n\n","sourceOld":"  /**\n   * Returns SortedNumericDocValues for the field, or {@link #emptySortedNumeric} if it has none. \n   * @return docvalues instance, or an empty instance if {@code field} does not exist in this reader.\n   * @throws IllegalStateException if {@code field} exists, but was not indexed with docvalues.\n   * @throws IllegalStateException if {@code field} has docvalues, but the type is not {@link DocValuesType#SORTED_NUMERIC}\n   *                               or {@link DocValuesType#NUMERIC}.\n   * @throws IOException if an I/O error occurs.\n   */\n  public static SortedNumericDocValues getSortedNumeric(LeafReader reader, String field) throws IOException {\n    SortedNumericDocValues dv = reader.getSortedNumericDocValues(field);\n    if (dv == null) {\n      NumericDocValues single = reader.getNumericDocValues(field);\n      if (single == null) {\n        checkField(reader, field, DocValuesType.SORTED_NUMERIC, DocValuesType.NUMERIC);\n        return emptySortedNumeric(reader.maxDoc());\n      }\n      Bits bits = reader.getDocsWithField(field);\n      return singleton(single, bits);\n    }\n    return dv;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"69e7e4423e7d831cd160f8300224431f499947de","date":1588858081,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValues#getSortedNumeric(LeafReader,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValues#getSortedNumeric(LeafReader,String).mjava","sourceNew":"  /**\n   * Returns SortedNumericDocValues for the field, or {@link #emptySortedNumeric} if it has none.\n   * @return docvalues instance, or an empty instance if {@code field} does not exist in this reader.\n   * @throws IllegalStateException if {@code field} exists, but was not indexed with docvalues.\n   * @throws IllegalStateException if {@code field} has docvalues, but the type is not {@link DocValuesType#SORTED_NUMERIC}\n   *                               or {@link DocValuesType#NUMERIC}.\n   * @throws IOException if an I/O error occurs.\n   */\n  public static SortedNumericDocValues getSortedNumeric(LeafReader reader, String field) throws IOException {\n    SortedNumericDocValues dv = reader.getSortedNumericDocValues(field);\n    if (dv == null) {\n      NumericDocValues single = reader.getNumericDocValues(field);\n      if (single == null) {\n        checkField(reader, field, DocValuesType.SORTED_NUMERIC, DocValuesType.NUMERIC);\n        return emptySortedNumeric();\n      }\n      return singleton(single);\n    }\n    return dv;\n  }\n\n","sourceOld":"  /**\n   * Returns SortedNumericDocValues for the field, or {@link #emptySortedNumeric} if it has none.\n   * @return docvalues instance, or an empty instance if {@code field} does not exist in this reader.\n   * @throws IllegalStateException if {@code field} exists, but was not indexed with docvalues.\n   * @throws IllegalStateException if {@code field} has docvalues, but the type is not {@link DocValuesType#SORTED_NUMERIC}\n   *                               or {@link DocValuesType#NUMERIC}.\n   * @throws IOException if an I/O error occurs.\n   */\n  public static SortedNumericDocValues getSortedNumeric(LeafReader reader, String field) throws IOException {\n    SortedNumericDocValues dv = reader.getSortedNumericDocValues(field);\n    if (dv == null) {\n      NumericDocValues single = reader.getNumericDocValues(field);\n      if (single == null) {\n        checkField(reader, field, DocValuesType.SORTED_NUMERIC, DocValuesType.NUMERIC);\n        return emptySortedNumeric(reader.maxDoc());\n      }\n      return singleton(single);\n    }\n    return dv;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c"],"69e7e4423e7d831cd160f8300224431f499947de":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["69e7e4423e7d831cd160f8300224431f499947de"]},"commit2Childs":{"0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["69e7e4423e7d831cd160f8300224431f499947de","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"69e7e4423e7d831cd160f8300224431f499947de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["0ed6b1234af94a2693d3e6550e7b3ee41fd3f51c"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}