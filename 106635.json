{"path":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#lookup(String,boolean,int).mjava","commits":[{"id":"7bf07f4ebadc7539de83a531e64678350d78ca26","date":1322776167,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#lookup(String,boolean,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public List<LookupResult> lookup(String key, boolean higherWeightsFirst, int num) {\n    final List<Completion> completions;\n    if (higherWeightsFirst) {\n      completions = higherWeightsCompletion.lookup(key, num);\n    } else {\n      completions = normalCompletion.lookup(key, num);\n    }\n    \n    final ArrayList<LookupResult> results = new ArrayList<LookupResult>(completions.size());\n    for (Completion c : completions) {\n      results.add(new LookupResult(c.utf8.utf8ToString(), c.bucket));\n    }\n    return results;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ecc52400551de6a7d8daf646be839487911627c","date":1330076979,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#lookup(CharSequence,boolean,int).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#lookup(String,boolean,int).mjava","sourceNew":"  @Override\n  public List<LookupResult> lookup(CharSequence key, boolean higherWeightsFirst, int num) {\n    final List<Completion> completions;\n    if (higherWeightsFirst) {\n      completions = higherWeightsCompletion.lookup(key, num);\n    } else {\n      completions = normalCompletion.lookup(key, num);\n    }\n    \n    final ArrayList<LookupResult> results = new ArrayList<LookupResult>(completions.size());\n    CharsRef spare = new CharsRef();\n    for (Completion c : completions) {\n      spare.grow(c.utf8.length);\n      UnicodeUtil.UTF8toUTF16(c.utf8, spare);\n      results.add(new LookupResult(spare.toString(), c.bucket));\n    }\n    return results;\n  }\n\n","sourceOld":"  @Override\n  public List<LookupResult> lookup(String key, boolean higherWeightsFirst, int num) {\n    final List<Completion> completions;\n    if (higherWeightsFirst) {\n      completions = higherWeightsCompletion.lookup(key, num);\n    } else {\n      completions = normalCompletion.lookup(key, num);\n    }\n    \n    final ArrayList<LookupResult> results = new ArrayList<LookupResult>(completions.size());\n    for (Completion c : completions) {\n      results.add(new LookupResult(c.utf8.utf8ToString(), c.bucket));\n    }\n    return results;\n  }\n\n","bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":4,"author":"Ryan McKinley","isMerge":true,"pathNew":"/dev/null","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#lookup(String,boolean,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public List<LookupResult> lookup(String key, boolean higherWeightsFirst, int num) {\n    final List<Completion> completions;\n    if (higherWeightsFirst) {\n      completions = higherWeightsCompletion.lookup(key, num);\n    } else {\n      completions = normalCompletion.lookup(key, num);\n    }\n    \n    final ArrayList<LookupResult> results = new ArrayList<LookupResult>(completions.size());\n    for (Completion c : completions) {\n      results.add(new LookupResult(c.utf8.utf8ToString(), c.bucket));\n    }\n    return results;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7bf07f4ebadc7539de83a531e64678350d78ca26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["7bf07f4ebadc7539de83a531e64678350d78ca26","6ecc52400551de6a7d8daf646be839487911627c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6ecc52400551de6a7d8daf646be839487911627c":["7bf07f4ebadc7539de83a531e64678350d78ca26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6ecc52400551de6a7d8daf646be839487911627c"]},"commit2Childs":{"7bf07f4ebadc7539de83a531e64678350d78ca26":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","6ecc52400551de6a7d8daf646be839487911627c"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7bf07f4ebadc7539de83a531e64678350d78ca26"],"6ecc52400551de6a7d8daf646be839487911627c":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}