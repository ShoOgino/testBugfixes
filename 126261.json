{"path":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","pathOld":"solr/src/test-framework/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","sourceNew":"  protected void destroyServers() throws Exception {\n    controlJetty.stop();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    clients.clear();\n    jettys.clear();\n  }\n\n","sourceOld":"  protected void destroyServers() throws Exception {\n    controlJetty.stop();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","pathOld":"solr/src/test-framework/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","sourceNew":"  protected void destroyServers() throws Exception {\n    controlJetty.stop();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    clients.clear();\n    jettys.clear();\n  }\n\n","sourceOld":"  protected void destroyServers() throws Exception {\n    controlJetty.stop();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","pathOld":"solr/src/test-framework/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","sourceNew":"  protected void destroyServers() throws Exception {\n    controlJetty.stop();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    clients.clear();\n    jettys.clear();\n  }\n\n","sourceOld":"  protected void destroyServers() throws Exception {\n    controlJetty.stop();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","sourceNew":"  protected void destroyServers() throws Exception {\n    controlJetty.stop();\n    ((CommonsHttpSolrServer) controlClient).shutdown();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    for (SolrServer client : clients) ((CommonsHttpSolrServer) client).shutdown();\n    clients.clear();\n    jettys.clear();\n  }\n\n","sourceOld":"  protected void destroyServers() throws Exception {\n    controlJetty.stop();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","sourceNew":"  protected void destroyServers() throws Exception {\n    controlJetty.stop();\n    ((CommonsHttpSolrServer) controlClient).shutdown();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    for (SolrServer client : clients) ((CommonsHttpSolrServer) client).shutdown();\n    clients.clear();\n    jettys.clear();\n  }\n\n","sourceOld":"  protected void destroyServers() throws Exception {\n    controlJetty.stop();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","sourceNew":"  protected void destroyServers() throws Exception {\n    controlJetty.stop();\n    ((CommonsHttpSolrServer) controlClient).shutdown();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    for (SolrServer client : clients) ((CommonsHttpSolrServer) client).shutdown();\n    clients.clear();\n    jettys.clear();\n  }\n\n","sourceOld":"  protected void destroyServers() throws Exception {\n    controlJetty.stop();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","sourceNew":"  protected void destroyServers() throws Exception {\n    controlJetty.stop();\n    ((HttpSolrServer) controlClient).shutdown();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    for (SolrServer client : clients) ((HttpSolrServer) client).shutdown();\n    clients.clear();\n    jettys.clear();\n  }\n\n","sourceOld":"  protected void destroyServers() throws Exception {\n    controlJetty.stop();\n    ((CommonsHttpSolrServer) controlClient).shutdown();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    for (SolrServer client : clients) ((CommonsHttpSolrServer) client).shutdown();\n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","sourceNew":"  protected void destroyServers() throws Exception {\n    controlJetty.stop();\n    ((HttpSolrClient) controlClient).shutdown();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    for (SolrClient client : clients) ((HttpSolrClient) client).shutdown();\n    clients.clear();\n    jettys.clear();\n  }\n\n","sourceOld":"  protected void destroyServers() throws Exception {\n    controlJetty.stop();\n    ((HttpSolrServer) controlClient).shutdown();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    for (SolrServer client : clients) ((HttpSolrServer) client).shutdown();\n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":null,"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6784d0cc613dc1ee97030eaaa5e0754edc22d164","date":1420824784,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","sourceNew":"  protected void destroyServers() throws Exception {\n    if (controlJetty != null) controlJetty.stop();\n    if (controlClient != null)  ((HttpSolrClient) controlClient).shutdown();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    for (SolrClient client : clients) ((HttpSolrClient) client).shutdown();\n    clients.clear();\n    jettys.clear();\n  }\n\n","sourceOld":"  protected void destroyServers() throws Exception {\n    controlJetty.stop();\n    ((HttpSolrClient) controlClient).shutdown();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    for (SolrClient client : clients) ((HttpSolrClient) client).shutdown();\n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":["0b57d1523f42368168ea21982dd84effd69453d3","bafca15d8e408346a67f4282ad1143b88023893b"],"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","sourceNew":"  protected void destroyServers() throws Exception {\n    if (controlJetty != null) controlJetty.stop();\n    if (controlClient != null)  controlClient.close();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    for (SolrClient client : clients) client.close();\n    clients.clear();\n    jettys.clear();\n  }\n\n","sourceOld":"  protected void destroyServers() throws Exception {\n    if (controlJetty != null) controlJetty.stop();\n    if (controlClient != null)  ((HttpSolrClient) controlClient).shutdown();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    for (SolrClient client : clients) ((HttpSolrClient) client).shutdown();\n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","sourceNew":"  protected void destroyServers() throws Exception {\n    ForkJoinPool customThreadPool = new ForkJoinPool(12);\n    \n    customThreadPool.submit(() -> Collections.singleton(controlClient).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    customThreadPool.submit(() -> Collections.singleton(controlJetty).parallelStream().forEach(c -> {\n      try {\n        c.stop();\n      } catch (NullPointerException e) {\n        // ignore\n      } catch (Exception e) {\n        log.error(\"Error stopping Control Jetty\", e);\n      }\n    }));\n\n    customThreadPool.submit(() -> clients.parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    customThreadPool.submit(() -> jettys.parallelStream().forEach(c -> {\n      try {\n        c.stop();\n      } catch (Exception e) {\n        log.error(\"Error stopping Jetty\", e);\n      }\n    }));\n\n    ExecutorUtil.shutdownAndAwaitTermination(customThreadPool);\n    \n    clients.clear();\n    jettys.clear();\n  }\n\n","sourceOld":"  protected void destroyServers() throws Exception {\n    if (controlJetty != null) controlJetty.stop();\n    if (controlClient != null)  controlClient.close();\n    for (JettySolrRunner jetty : jettys) jetty.stop();\n    for (SolrClient client : clients) client.close();\n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":["6784d0cc613dc1ee97030eaaa5e0754edc22d164","0b57d1523f42368168ea21982dd84effd69453d3","cc3b13b430571c2e169f98fe38e1e7666f88522d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e34aff27dfe70db6a9f0d2da0f5d9b640fbac18","date":1543645562,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","sourceNew":"  protected void destroyServers() throws Exception {\n    ExecutorService customThreadPool = ExecutorUtil.newMDCAwareCachedThreadPool(new SolrjNamedThreadFactory(\"closeThreadPool\"));\n    \n    customThreadPool.submit(() -> Collections.singleton(controlClient).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    customThreadPool.submit(() -> {\n      try {\n        controlJetty.stop();\n      } catch (NullPointerException e) {\n        // ignore\n      } catch (Exception e) {\n        log.error(\"Error stopping Control Jetty\", e);\n      }\n    });\n\n    for (SolrClient client : clients) {\n      customThreadPool.submit(() ->  IOUtils.closeQuietly(client));\n    }\n    \n    for (JettySolrRunner jetty : jettys) {\n      customThreadPool.submit(() -> {\n        try {\n          jetty.stop();\n        } catch (Exception e) {\n          log.error(\"Error stopping Jetty\", e);\n        }\n      });\n    }\n\n    ExecutorUtil.shutdownAndAwaitTermination(customThreadPool);\n    \n    clients.clear();\n    jettys.clear();\n  }\n\n","sourceOld":"  protected void destroyServers() throws Exception {\n    ForkJoinPool customThreadPool = new ForkJoinPool(12);\n    \n    customThreadPool.submit(() -> Collections.singleton(controlClient).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    customThreadPool.submit(() -> Collections.singleton(controlJetty).parallelStream().forEach(c -> {\n      try {\n        c.stop();\n      } catch (NullPointerException e) {\n        // ignore\n      } catch (Exception e) {\n        log.error(\"Error stopping Control Jetty\", e);\n      }\n    }));\n\n    customThreadPool.submit(() -> clients.parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    customThreadPool.submit(() -> jettys.parallelStream().forEach(c -> {\n      try {\n        c.stop();\n      } catch (Exception e) {\n        log.error(\"Error stopping Jetty\", e);\n      }\n    }));\n\n    ExecutorUtil.shutdownAndAwaitTermination(customThreadPool);\n    \n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb03700c9690d16b15fb4f56f6ec36b128fd894e","date":1586745995,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#destroyServers().mjava","sourceNew":"  protected void destroyServers() throws Exception {\n    ExecutorService customThreadPool = ExecutorUtil.newMDCAwareCachedThreadPool(new SolrNamedThreadFactory(\"closeThreadPool\"));\n    \n    customThreadPool.submit(() -> Collections.singleton(controlClient).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    customThreadPool.submit(() -> {\n      try {\n        controlJetty.stop();\n      } catch (NullPointerException e) {\n        // ignore\n      } catch (Exception e) {\n        log.error(\"Error stopping Control Jetty\", e);\n      }\n    });\n\n    for (SolrClient client : clients) {\n      customThreadPool.submit(() ->  IOUtils.closeQuietly(client));\n    }\n    \n    for (JettySolrRunner jetty : jettys) {\n      customThreadPool.submit(() -> {\n        try {\n          jetty.stop();\n        } catch (Exception e) {\n          log.error(\"Error stopping Jetty\", e);\n        }\n      });\n    }\n\n    ExecutorUtil.shutdownAndAwaitTermination(customThreadPool);\n    \n    clients.clear();\n    jettys.clear();\n  }\n\n","sourceOld":"  protected void destroyServers() throws Exception {\n    ExecutorService customThreadPool = ExecutorUtil.newMDCAwareCachedThreadPool(new SolrjNamedThreadFactory(\"closeThreadPool\"));\n    \n    customThreadPool.submit(() -> Collections.singleton(controlClient).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    customThreadPool.submit(() -> {\n      try {\n        controlJetty.stop();\n      } catch (NullPointerException e) {\n        // ignore\n      } catch (Exception e) {\n        log.error(\"Error stopping Control Jetty\", e);\n      }\n    });\n\n    for (SolrClient client : clients) {\n      customThreadPool.submit(() ->  IOUtils.closeQuietly(client));\n    }\n    \n    for (JettySolrRunner jetty : jettys) {\n      customThreadPool.submit(() -> {\n        try {\n          jetty.stop();\n        } catch (Exception e) {\n          log.error(\"Error stopping Jetty\", e);\n        }\n      });\n    }\n\n    ExecutorUtil.shutdownAndAwaitTermination(customThreadPool);\n    \n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["c26f00b574427b55127e869b935845554afde1fa","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"bafca15d8e408346a67f4282ad1143b88023893b":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["c26f00b574427b55127e869b935845554afde1fa","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0e34aff27dfe70db6a9f0d2da0f5d9b640fbac18":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fb03700c9690d16b15fb4f56f6ec36b128fd894e":["0e34aff27dfe70db6a9f0d2da0f5d9b640fbac18"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["c26f00b574427b55127e869b935845554afde1fa"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb03700c9690d16b15fb4f56f6ec36b128fd894e"]},"commit2Childs":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["0e34aff27dfe70db6a9f0d2da0f5d9b640fbac18"],"c26f00b574427b55127e869b935845554afde1fa":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["bafca15d8e408346a67f4282ad1143b88023893b"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"bafca15d8e408346a67f4282ad1143b88023893b":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"0e34aff27dfe70db6a9f0d2da0f5d9b640fbac18":["fb03700c9690d16b15fb4f56f6ec36b128fd894e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"fb03700c9690d16b15fb4f56f6ec36b128fd894e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}