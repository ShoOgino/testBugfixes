{"path":"lucene/core/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery.EncodedRectangle#relateRangeBBox(int,int,byte[],int,int,byte[]).mjava","commits":[{"id":"56c42be8d779573d0c86ba775117e17360dbf5a6","date":1583217404,"type":0,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery.EncodedRectangle#relateRangeBBox(int,int,byte[],int,int,byte[]).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * compare this to a provided range bounding box\n     **/\n   Relation relateRangeBBox(int minXOffset, int minYOffset, byte[] minTriangle,\n                                    int maxXOffset, int maxYOffset, byte[] maxTriangle) {\n      Relation eastRelation = compareBBoxToRangeBBox(this.bbox,\n          minXOffset, minYOffset, minTriangle, maxXOffset, maxYOffset, maxTriangle);\n      if (this.crossesDateline() && eastRelation == Relation.CELL_OUTSIDE_QUERY) {\n        return compareBBoxToRangeBBox(this.west, minXOffset, minYOffset, minTriangle, maxXOffset, maxYOffset, maxTriangle);\n      }\n      return eastRelation;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c568a1e2a5125c2245150eebb030a81baa158b31","date":1587403489,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery.EncodedRectangle#relateRangeBBox(int,int,byte[],int,int,byte[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery.EncodedRectangle#relateRangeBBox(int,int,byte[],int,int,byte[]).mjava","sourceNew":"    /**\n     * compare this to a provided range bounding box\n     **/\n    Relation relateRangeBBox(int minXOffset, int minYOffset, byte[] minTriangle,\n                             int maxXOffset, int maxYOffset, byte[] maxTriangle) {\n      Relation eastRelation = compareBBoxToRangeBBox(this.bbox,\n          minXOffset, minYOffset, minTriangle, maxXOffset, maxYOffset, maxTriangle);\n      if (this.crossesDateline() && eastRelation == Relation.CELL_OUTSIDE_QUERY) {\n        return compareBBoxToRangeBBox(this.west, minXOffset, minYOffset, minTriangle, maxXOffset, maxYOffset, maxTriangle);\n      }\n      return eastRelation;\n    }\n\n","sourceOld":"    /**\n     * compare this to a provided range bounding box\n     **/\n   Relation relateRangeBBox(int minXOffset, int minYOffset, byte[] minTriangle,\n                                    int maxXOffset, int maxYOffset, byte[] maxTriangle) {\n      Relation eastRelation = compareBBoxToRangeBBox(this.bbox,\n          minXOffset, minYOffset, minTriangle, maxXOffset, maxYOffset, maxTriangle);\n      if (this.crossesDateline() && eastRelation == Relation.CELL_OUTSIDE_QUERY) {\n        return compareBBoxToRangeBBox(this.west, minXOffset, minYOffset, minTriangle, maxXOffset, maxYOffset, maxTriangle);\n      }\n      return eastRelation;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56c42be8d779573d0c86ba775117e17360dbf5a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c568a1e2a5125c2245150eebb030a81baa158b31":["56c42be8d779573d0c86ba775117e17360dbf5a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c568a1e2a5125c2245150eebb030a81baa158b31"]},"commit2Childs":{"56c42be8d779573d0c86ba775117e17360dbf5a6":["c568a1e2a5125c2245150eebb030a81baa158b31"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["56c42be8d779573d0c86ba775117e17360dbf5a6"],"c568a1e2a5125c2245150eebb030a81baa158b31":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}