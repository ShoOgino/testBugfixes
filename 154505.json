{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/RegExp#RegExp(String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/RegExp#RegExp(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/RegExp#RegExp(String).mjava","sourceNew":"  /**\n   * Constructs new <code>RegExp</code> from a string. Same as\n   * <code>RegExp(s, ALL)</code>.\n   * \n   * @param s regexp string\n   * @exception IllegalArgumentException if an error occured while parsing the\n   *              regular expression\n   */\n  public RegExp(String s) throws IllegalArgumentException {\n    this(s, ALL);\n  }\n\n","sourceOld":"  /**\n   * Constructs new <code>RegExp</code> from a string. Same as\n   * <code>RegExp(s, ALL)</code>.\n   * \n   * @param s regexp string\n   * @exception IllegalArgumentException if an error occured while parsing the\n   *              regular expression\n   */\n  public RegExp(String s) throws IllegalArgumentException {\n    this(s, ALL);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d669cb2b7fbc6ceb7f966e63a1c625e6400c7d2a","date":1550036130,"type":3,"author":"Bruno P. Kinoshita","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/RegExp#RegExp(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/RegExp#RegExp(String).mjava","sourceNew":"  /**\n   * Constructs new <code>RegExp</code> from a string. Same as\n   * <code>RegExp(s, ALL)</code>.\n   * \n   * @param s regexp string\n   * @exception IllegalArgumentException if an error occurred while parsing the\n   *              regular expression\n   */\n  public RegExp(String s) throws IllegalArgumentException {\n    this(s, ALL);\n  }\n\n","sourceOld":"  /**\n   * Constructs new <code>RegExp</code> from a string. Same as\n   * <code>RegExp(s, ALL)</code>.\n   * \n   * @param s regexp string\n   * @exception IllegalArgumentException if an error occured while parsing the\n   *              regular expression\n   */\n  public RegExp(String s) throws IllegalArgumentException {\n    this(s, ALL);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d669cb2b7fbc6ceb7f966e63a1c625e6400c7d2a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d669cb2b7fbc6ceb7f966e63a1c625e6400c7d2a"]},"commit2Childs":{"d669cb2b7fbc6ceb7f966e63a1c625e6400c7d2a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d669cb2b7fbc6ceb7f966e63a1c625e6400c7d2a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}