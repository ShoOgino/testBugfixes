{"path":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepDocsAndPositionsEnum#nextPosition().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepDocsAndPositionsEnum#nextPosition().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepDocsAndPositionsEnum#nextPosition().mjava","sourceNew":"    @Override\n    public int nextPosition() throws IOException {\n      if (posSeekPending) {\n        posIndex.seek(posReader);\n        payloadIn.seek(payloadFP);\n        posSeekPending = false;\n      }\n\n      // scan over any docs that were iterated without their\n      // positions\n      while (pendingPosCount > freq) {\n        final int code = posReader.next();\n        if (storePayloads && (code & 1) != 0) {\n          // Payload length has changed\n          payloadLength = posReader.next();\n          assert payloadLength >= 0;\n        }\n        pendingPosCount--;\n        position = 0;\n        pendingPayloadBytes += payloadLength;\n      }\n\n      final int code = posReader.next();\n      assert code >= 0;\n      if (storePayloads) {\n        if ((code & 1) != 0) {\n          // Payload length has changed\n          payloadLength = posReader.next();\n          assert payloadLength >= 0;\n        }\n        position += code >> 1;\n        pendingPayloadBytes += payloadLength;\n        payloadPending = payloadLength > 0;\n      } else {\n        position += code;\n      }\n    \n      pendingPosCount--;\n      assert pendingPosCount >= 0;\n      return position;\n    }\n\n","sourceOld":"    @Override\n    public int nextPosition() throws IOException {\n      if (posSeekPending) {\n        posIndex.seek(posReader);\n        payloadIn.seek(payloadFP);\n        posSeekPending = false;\n      }\n\n      // scan over any docs that were iterated without their\n      // positions\n      while (pendingPosCount > freq) {\n        final int code = posReader.next();\n        if (storePayloads && (code & 1) != 0) {\n          // Payload length has changed\n          payloadLength = posReader.next();\n          assert payloadLength >= 0;\n        }\n        pendingPosCount--;\n        position = 0;\n        pendingPayloadBytes += payloadLength;\n      }\n\n      final int code = posReader.next();\n      assert code >= 0;\n      if (storePayloads) {\n        if ((code & 1) != 0) {\n          // Payload length has changed\n          payloadLength = posReader.next();\n          assert payloadLength >= 0;\n        }\n        position += code >> 1;\n        pendingPayloadBytes += payloadLength;\n        payloadPending = payloadLength > 0;\n      } else {\n        position += code;\n      }\n    \n      pendingPosCount--;\n      assert pendingPosCount >= 0;\n      return position;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1860eebb3dff901d87a6c00a35d93e4966155ad1","date":1331907824,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepDocsAndPositionsEnum#nextPosition().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepDocsAndPositionsEnum#nextPosition().mjava","sourceNew":"    @Override\n    public int nextPosition() throws IOException {\n      if (posSeekPending) {\n        posIndex.seek(posReader);\n        payloadIn.seek(payloadFP);\n        posSeekPending = false;\n      }\n\n      // scan over any docs that were iterated without their\n      // positions\n      while (pendingPosCount > freq) {\n        final int code = posReader.next();\n        if (storePayloads && (code & 1) != 0) {\n          // Payload length has changed\n          payloadLength = posReader.next();\n          assert payloadLength >= 0;\n        }\n        pendingPosCount--;\n        position = 0;\n        pendingPayloadBytes += payloadLength;\n      }\n\n      final int code = posReader.next();\n\n      if (storePayloads) {\n        if ((code & 1) != 0) {\n          // Payload length has changed\n          payloadLength = posReader.next();\n          assert payloadLength >= 0;\n        }\n        position += code >>> 1;\n        pendingPayloadBytes += payloadLength;\n        payloadPending = payloadLength > 0;\n      } else {\n        position += code;\n      }\n    \n      pendingPosCount--;\n      assert pendingPosCount >= 0;\n      return position;\n    }\n\n","sourceOld":"    @Override\n    public int nextPosition() throws IOException {\n      if (posSeekPending) {\n        posIndex.seek(posReader);\n        payloadIn.seek(payloadFP);\n        posSeekPending = false;\n      }\n\n      // scan over any docs that were iterated without their\n      // positions\n      while (pendingPosCount > freq) {\n        final int code = posReader.next();\n        if (storePayloads && (code & 1) != 0) {\n          // Payload length has changed\n          payloadLength = posReader.next();\n          assert payloadLength >= 0;\n        }\n        pendingPosCount--;\n        position = 0;\n        pendingPayloadBytes += payloadLength;\n      }\n\n      final int code = posReader.next();\n      assert code >= 0;\n      if (storePayloads) {\n        if ((code & 1) != 0) {\n          // Payload length has changed\n          payloadLength = posReader.next();\n          assert payloadLength >= 0;\n        }\n        position += code >> 1;\n        pendingPayloadBytes += payloadLength;\n        payloadPending = payloadLength > 0;\n      } else {\n        position += code;\n      }\n    \n      pendingPosCount--;\n      assert pendingPosCount >= 0;\n      return position;\n    }\n\n","bugFix":["56da903869515527852ee21ea7ef7bfe414cd40d","955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepDocsAndPositionsEnum#nextPosition().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepDocsAndPositionsEnum#nextPosition().mjava","sourceNew":"    @Override\n    public int nextPosition() throws IOException {\n      if (posSeekPending) {\n        posIndex.seek(posReader);\n        payloadIn.seek(payloadFP);\n        posSeekPending = false;\n      }\n\n      // scan over any docs that were iterated without their\n      // positions\n      while (pendingPosCount > freq) {\n        final int code = posReader.next();\n        if (storePayloads && (code & 1) != 0) {\n          // Payload length has changed\n          payloadLength = posReader.next();\n          assert payloadLength >= 0;\n        }\n        pendingPosCount--;\n        position = 0;\n        pendingPayloadBytes += payloadLength;\n      }\n\n      final int code = posReader.next();\n\n      if (storePayloads) {\n        if ((code & 1) != 0) {\n          // Payload length has changed\n          payloadLength = posReader.next();\n          assert payloadLength >= 0;\n        }\n        position += code >>> 1;\n        pendingPayloadBytes += payloadLength;\n        payloadPending = payloadLength > 0;\n      } else {\n        position += code;\n      }\n    \n      pendingPosCount--;\n      assert pendingPosCount >= 0;\n      return position;\n    }\n\n","sourceOld":"    @Override\n    public int nextPosition() throws IOException {\n      if (posSeekPending) {\n        posIndex.seek(posReader);\n        payloadIn.seek(payloadFP);\n        posSeekPending = false;\n      }\n\n      // scan over any docs that were iterated without their\n      // positions\n      while (pendingPosCount > freq) {\n        final int code = posReader.next();\n        if (storePayloads && (code & 1) != 0) {\n          // Payload length has changed\n          payloadLength = posReader.next();\n          assert payloadLength >= 0;\n        }\n        pendingPosCount--;\n        position = 0;\n        pendingPayloadBytes += payloadLength;\n      }\n\n      final int code = posReader.next();\n\n      if (storePayloads) {\n        if ((code & 1) != 0) {\n          // Payload length has changed\n          payloadLength = posReader.next();\n          assert payloadLength >= 0;\n        }\n        position += code >>> 1;\n        pendingPayloadBytes += payloadLength;\n        payloadPending = payloadLength > 0;\n      } else {\n        position += code;\n      }\n    \n      pendingPosCount--;\n      assert pendingPosCount >= 0;\n      return position;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1860eebb3dff901d87a6c00a35d93e4966155ad1":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["1860eebb3dff901d87a6c00a35d93e4966155ad1"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"1860eebb3dff901d87a6c00a35d93e4966155ad1":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1860eebb3dff901d87a6c00a35d93e4966155ad1"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}