{"path":"solr/core/src/test/org/apache/hadoop/fs/FileUtil#unTar(InputStream,File,boolean).mjava","commits":[{"id":"6bdf107cf16be0f22504ae184fed81596665a244","date":1576012524,"type":0,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/fs/FileUtil#unTar(InputStream,File,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Given a Tar File as input it will untar the file in a the untar directory\n   * passed as the second parameter\n   *\n   * This utility will untar \".tar\" files and \".tar.gz\",\"tgz\" files.\n   *\n   * @param inputStream The tar file as input.\n   * @param untarDir The untar directory where to untar the tar file.\n   * @param gzipped The input stream is gzipped\n   *                TODO Use magic number and PusbackInputStream to identify\n   * @throws IOException an exception occurred\n   * @throws InterruptedException command interrupted\n   * @throws ExecutionException task submit failed\n   */\n  public static void unTar(InputStream inputStream, File untarDir,\n                           boolean gzipped)\n      throws IOException, InterruptedException, ExecutionException {\n    if (!untarDir.mkdirs()) {\n      if (!untarDir.isDirectory()) {\n        throw new IOException(\"Mkdirs failed to create \" + untarDir);\n      }\n    }\n\n    if(Shell.WINDOWS) {\n      // Tar is not native to Windows. Use simple Java based implementation for\n      // tests and simple tar archives\n      unTarUsingJava(inputStream, untarDir, gzipped);\n    } else {\n      // spawn tar utility to untar archive for full fledged unix behavior such\n      // as resolving symlinks in tar archives\n      unTarUsingTar(inputStream, untarDir, gzipped);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a229cb50768e988c50a2106bdae3a92154f428bf","date":1576051038,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/hadoop/fs/FileUtil#unTar(InputStream,File,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Given a Tar File as input it will untar the file in a the untar directory\n   * passed as the second parameter\n   *\n   * This utility will untar \".tar\" files and \".tar.gz\",\"tgz\" files.\n   *\n   * @param inputStream The tar file as input.\n   * @param untarDir The untar directory where to untar the tar file.\n   * @param gzipped The input stream is gzipped\n   *                TODO Use magic number and PusbackInputStream to identify\n   * @throws IOException an exception occurred\n   * @throws InterruptedException command interrupted\n   * @throws ExecutionException task submit failed\n   */\n  public static void unTar(InputStream inputStream, File untarDir,\n                           boolean gzipped)\n      throws IOException, InterruptedException, ExecutionException {\n    if (!untarDir.mkdirs()) {\n      if (!untarDir.isDirectory()) {\n        throw new IOException(\"Mkdirs failed to create \" + untarDir);\n      }\n    }\n\n    if(Shell.WINDOWS) {\n      // Tar is not native to Windows. Use simple Java based implementation for\n      // tests and simple tar archives\n      unTarUsingJava(inputStream, untarDir, gzipped);\n    } else {\n      // spawn tar utility to untar archive for full fledged unix behavior such\n      // as resolving symlinks in tar archives\n      unTarUsingTar(inputStream, untarDir, gzipped);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a229cb50768e988c50a2106bdae3a92154f428bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6bdf107cf16be0f22504ae184fed81596665a244"],"6bdf107cf16be0f22504ae184fed81596665a244":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6bdf107cf16be0f22504ae184fed81596665a244"]},"commit2Childs":{"a229cb50768e988c50a2106bdae3a92154f428bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a229cb50768e988c50a2106bdae3a92154f428bf","6bdf107cf16be0f22504ae184fed81596665a244"],"6bdf107cf16be0f22504ae184fed81596665a244":["a229cb50768e988c50a2106bdae3a92154f428bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a229cb50768e988c50a2106bdae3a92154f428bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}