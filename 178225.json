{"path":"lucene/src/java/org/apache/lucene/store/Directory#setLockFactory(LockFactory).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#setLockFactory(LockFactory).mjava","pathOld":"src/java/org/apache/lucene/store/Directory#setLockFactory(LockFactory).mjava","sourceNew":"  /**\n   * Set the LockFactory that this Directory instance should\n   * use for its locking implementation.  Each * instance of\n   * LockFactory should only be used for one directory (ie,\n   * do not share a single instance across multiple\n   * Directories).\n   *\n   * @param lockFactory instance of {@link LockFactory}.\n   */\n  public void setLockFactory(LockFactory lockFactory) {\n    assert lockFactory != null;\n    this.lockFactory = lockFactory;\n    lockFactory.setLockPrefix(this.getLockID());\n  }\n\n","sourceOld":"  /**\n   * Set the LockFactory that this Directory instance should\n   * use for its locking implementation.  Each * instance of\n   * LockFactory should only be used for one directory (ie,\n   * do not share a single instance across multiple\n   * Directories).\n   *\n   * @param lockFactory instance of {@link LockFactory}.\n   */\n  public void setLockFactory(LockFactory lockFactory) {\n    assert lockFactory != null;\n    this.lockFactory = lockFactory;\n    lockFactory.setLockPrefix(this.getLockID());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a13a126d15299d5c1e117ea99ddae6fb0fa3f209","date":1291909583,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#setLockFactory(LockFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#setLockFactory(LockFactory).mjava","sourceNew":"  /**\n   * Set the LockFactory that this Directory instance should\n   * use for its locking implementation.  Each * instance of\n   * LockFactory should only be used for one directory (ie,\n   * do not share a single instance across multiple\n   * Directories).\n   *\n   * @param lockFactory instance of {@link LockFactory}.\n   */\n  public void setLockFactory(LockFactory lockFactory) throws IOException {\n    assert lockFactory != null;\n    this.lockFactory = lockFactory;\n    lockFactory.setLockPrefix(this.getLockID());\n  }\n\n","sourceOld":"  /**\n   * Set the LockFactory that this Directory instance should\n   * use for its locking implementation.  Each * instance of\n   * LockFactory should only be used for one directory (ie,\n   * do not share a single instance across multiple\n   * Directories).\n   *\n   * @param lockFactory instance of {@link LockFactory}.\n   */\n  public void setLockFactory(LockFactory lockFactory) {\n    assert lockFactory != null;\n    this.lockFactory = lockFactory;\n    lockFactory.setLockPrefix(this.getLockID());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#setLockFactory(LockFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#setLockFactory(LockFactory).mjava","sourceNew":"  /**\n   * Set the LockFactory that this Directory instance should\n   * use for its locking implementation.  Each * instance of\n   * LockFactory should only be used for one directory (ie,\n   * do not share a single instance across multiple\n   * Directories).\n   *\n   * @param lockFactory instance of {@link LockFactory}.\n   */\n  public void setLockFactory(LockFactory lockFactory) throws IOException {\n    assert lockFactory != null;\n    this.lockFactory = lockFactory;\n    lockFactory.setLockPrefix(this.getLockID());\n  }\n\n","sourceOld":"  /**\n   * Set the LockFactory that this Directory instance should\n   * use for its locking implementation.  Each * instance of\n   * LockFactory should only be used for one directory (ie,\n   * do not share a single instance across multiple\n   * Directories).\n   *\n   * @param lockFactory instance of {@link LockFactory}.\n   */\n  public void setLockFactory(LockFactory lockFactory) {\n    assert lockFactory != null;\n    this.lockFactory = lockFactory;\n    lockFactory.setLockPrefix(this.getLockID());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/Directory#setLockFactory(LockFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#setLockFactory(LockFactory).mjava","sourceNew":"  /**\n   * Set the LockFactory that this Directory instance should\n   * use for its locking implementation.  Each * instance of\n   * LockFactory should only be used for one directory (ie,\n   * do not share a single instance across multiple\n   * Directories).\n   *\n   * @param lockFactory instance of {@link LockFactory}.\n   */\n  public void setLockFactory(LockFactory lockFactory) throws IOException {\n    assert lockFactory != null;\n    this.lockFactory = lockFactory;\n    lockFactory.setLockPrefix(this.getLockID());\n  }\n\n","sourceOld":"  /**\n   * Set the LockFactory that this Directory instance should\n   * use for its locking implementation.  Each * instance of\n   * LockFactory should only be used for one directory (ie,\n   * do not share a single instance across multiple\n   * Directories).\n   *\n   * @param lockFactory instance of {@link LockFactory}.\n   */\n  public void setLockFactory(LockFactory lockFactory) {\n    assert lockFactory != null;\n    this.lockFactory = lockFactory;\n    lockFactory.setLockPrefix(this.getLockID());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#setLockFactory(LockFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#setLockFactory(LockFactory).mjava","sourceNew":"  /**\n   * Set the LockFactory that this Directory instance should\n   * use for its locking implementation.  Each * instance of\n   * LockFactory should only be used for one directory (ie,\n   * do not share a single instance across multiple\n   * Directories).\n   *\n   * @param lockFactory instance of {@link LockFactory}.\n   */\n  public void setLockFactory(LockFactory lockFactory) throws IOException {\n    assert lockFactory != null;\n    this.lockFactory = lockFactory;\n    lockFactory.setLockPrefix(this.getLockID());\n  }\n\n","sourceOld":"  /**\n   * Set the LockFactory that this Directory instance should\n   * use for its locking implementation.  Each * instance of\n   * LockFactory should only be used for one directory (ie,\n   * do not share a single instance across multiple\n   * Directories).\n   *\n   * @param lockFactory instance of {@link LockFactory}.\n   */\n  public void setLockFactory(LockFactory lockFactory) throws IOException {\n    assert lockFactory != null;\n    this.lockFactory = lockFactory;\n    lockFactory.setLockPrefix(this.getLockID());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["9454a6510e2db155fb01faa5c049b06ece95fab9","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}