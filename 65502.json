{"path":"lucene/src/java/org/apache/lucene/util/SorterTemplate#comparePivot(int).mjava","commits":[{"id":"ae7aa98ce0c64f3b2b81087d14ff9ae992b4903b","date":1288192616,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/SorterTemplate#comparePivot(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Implements the compare function for the previously stored pivot value.\n   * Should be implemented like <code>pivot.compareTo(<em>valueOf(i)</em>)</code> */\n  protected abstract int comparePivot(int j);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca0ffea399542e8aac8ed7608f34f8ec4cb8904d","date":1288424244,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/SorterTemplate#comparePivot(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Implements the compare function for the previously stored pivot value.\n   * Should be implemented like <code>pivot.compareTo(<em>valueOf(i)</em>)</code> */\n  protected abstract int comparePivot(int j);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/SorterTemplate#comparePivot(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Implements the compare function for the previously stored pivot value.\n   * Should be implemented like <code>pivot.compareTo(<em>valueOf(i)</em>)</code> */\n  protected abstract int comparePivot(int j);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e99e7f01829f757a0e6b463419e7958d5fc45f1a","date":1295391161,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/SorterTemplate#comparePivot(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/SorterTemplate#comparePivot(int).mjava","sourceNew":"  /** Implements the compare function for the previously stored pivot value.\n   * Should be implemented like <code>pivot.compareTo(<em>valueOf(j)</em>)</code> */\n  protected abstract int comparePivot(int j);\n\n","sourceOld":"  /** Implements the compare function for the previously stored pivot value.\n   * Should be implemented like <code>pivot.compareTo(<em>valueOf(i)</em>)</code> */\n  protected abstract int comparePivot(int j);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/SorterTemplate#comparePivot(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/SorterTemplate#comparePivot(int).mjava","sourceNew":"  /** Implements the compare function for the previously stored pivot value.\n   * Should be implemented like <code>pivot.compareTo(<em>valueOf(j)</em>)</code> */\n  protected abstract int comparePivot(int j);\n\n","sourceOld":"  /** Implements the compare function for the previously stored pivot value.\n   * Should be implemented like <code>pivot.compareTo(<em>valueOf(i)</em>)</code> */\n  protected abstract int comparePivot(int j);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/SorterTemplate#comparePivot(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/SorterTemplate#comparePivot(int).mjava","sourceNew":"  /** Implements the compare function for the previously stored pivot value.\n   * Should be implemented like <code>pivot.compareTo(<em>valueOf(j)</em>)</code> */\n  protected abstract int comparePivot(int j);\n\n","sourceOld":"  /** Implements the compare function for the previously stored pivot value.\n   * Should be implemented like <code>pivot.compareTo(<em>valueOf(i)</em>)</code> */\n  protected abstract int comparePivot(int j);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SorterTemplate#comparePivot(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/SorterTemplate#comparePivot(int).mjava","sourceNew":"  /** Implements the compare function for the previously stored pivot value.\n   * Should be implemented like <code>pivot.compareTo(<em>valueOf(j)</em>)</code> */\n  protected abstract int comparePivot(int j);\n\n","sourceOld":"  /** Implements the compare function for the previously stored pivot value.\n   * Should be implemented like <code>pivot.compareTo(<em>valueOf(j)</em>)</code> */\n  protected abstract int comparePivot(int j);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ae7aa98ce0c64f3b2b81087d14ff9ae992b4903b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e99e7f01829f757a0e6b463419e7958d5fc45f1a"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ca0ffea399542e8aac8ed7608f34f8ec4cb8904d","e99e7f01829f757a0e6b463419e7958d5fc45f1a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e99e7f01829f757a0e6b463419e7958d5fc45f1a":["ae7aa98ce0c64f3b2b81087d14ff9ae992b4903b"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ae7aa98ce0c64f3b2b81087d14ff9ae992b4903b"],"ca0ffea399542e8aac8ed7608f34f8ec4cb8904d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ae7aa98ce0c64f3b2b81087d14ff9ae992b4903b"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","e99e7f01829f757a0e6b463419e7958d5fc45f1a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"ae7aa98ce0c64f3b2b81087d14ff9ae992b4903b":["e99e7f01829f757a0e6b463419e7958d5fc45f1a","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","ca0ffea399542e8aac8ed7608f34f8ec4cb8904d"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ae7aa98ce0c64f3b2b81087d14ff9ae992b4903b","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","ca0ffea399542e8aac8ed7608f34f8ec4cb8904d"],"e99e7f01829f757a0e6b463419e7958d5fc45f1a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"ca0ffea399542e8aac8ed7608f34f8ec4cb8904d":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}