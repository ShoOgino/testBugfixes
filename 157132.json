{"path":"src/test/org/apache/lucene/analysis/TestCharArraySet#testContainsWithNull().mjava","commits":[{"id":"5f1a47d4171a315b5fa2a9146a6048dc8a2cfeae","date":1264405705,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestCharArraySet#testContainsWithNull().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test for NPE\n   */\n  public void testContainsWithNull() {\n    CharArraySet set = new CharArraySet(Version.LUCENE_CURRENT, 1, true);\n    try {\n      set.contains((char[]) null, 0, 10);\n      fail(\"null value must raise NPE\");\n    } catch (NullPointerException e) {}\n    try {\n      set.contains((CharSequence) null);\n      fail(\"null value must raise NPE\");\n    } catch (NullPointerException e) {}\n    try {\n      set.contains((Object) null);\n      fail(\"null value must raise NPE\");\n    } catch (NullPointerException e) {}\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestCharArraySet#testContainsWithNull().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestCharArraySet#testContainsWithNull().mjava","sourceNew":"  /**\n   * Test for NPE\n   */\n  public void testContainsWithNull() {\n    CharArraySet set = new CharArraySet(TEST_VERSION_CURRENT, 1, true);\n    try {\n      set.contains((char[]) null, 0, 10);\n      fail(\"null value must raise NPE\");\n    } catch (NullPointerException e) {}\n    try {\n      set.contains((CharSequence) null);\n      fail(\"null value must raise NPE\");\n    } catch (NullPointerException e) {}\n    try {\n      set.contains((Object) null);\n      fail(\"null value must raise NPE\");\n    } catch (NullPointerException e) {}\n  }\n\n","sourceOld":"  /**\n   * Test for NPE\n   */\n  public void testContainsWithNull() {\n    CharArraySet set = new CharArraySet(Version.LUCENE_CURRENT, 1, true);\n    try {\n      set.contains((char[]) null, 0, 10);\n      fail(\"null value must raise NPE\");\n    } catch (NullPointerException e) {}\n    try {\n      set.contains((CharSequence) null);\n      fail(\"null value must raise NPE\");\n    } catch (NullPointerException e) {}\n    try {\n      set.contains((Object) null);\n      fail(\"null value must raise NPE\");\n    } catch (NullPointerException e) {}\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestCharArraySet#testContainsWithNull().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestCharArraySet#testContainsWithNull().mjava","sourceNew":"  /**\n   * Test for NPE\n   */\n  public void testContainsWithNull() {\n    CharArraySet set = new CharArraySet(TEST_VERSION_CURRENT, 1, true);\n    try {\n      set.contains((char[]) null, 0, 10);\n      fail(\"null value must raise NPE\");\n    } catch (NullPointerException e) {}\n    try {\n      set.contains((CharSequence) null);\n      fail(\"null value must raise NPE\");\n    } catch (NullPointerException e) {}\n    try {\n      set.contains((Object) null);\n      fail(\"null value must raise NPE\");\n    } catch (NullPointerException e) {}\n  }\n\n","sourceOld":"  /**\n   * Test for NPE\n   */\n  public void testContainsWithNull() {\n    CharArraySet set = new CharArraySet(TEST_VERSION_CURRENT, 1, true);\n    try {\n      set.contains((char[]) null, 0, 10);\n      fail(\"null value must raise NPE\");\n    } catch (NullPointerException e) {}\n    try {\n      set.contains((CharSequence) null);\n      fail(\"null value must raise NPE\");\n    } catch (NullPointerException e) {}\n    try {\n      set.contains((Object) null);\n      fail(\"null value must raise NPE\");\n    } catch (NullPointerException e) {}\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["5f1a47d4171a315b5fa2a9146a6048dc8a2cfeae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f1a47d4171a315b5fa2a9146a6048dc8a2cfeae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"]},"commit2Childs":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5f1a47d4171a315b5fa2a9146a6048dc8a2cfeae"],"5f1a47d4171a315b5fa2a9146a6048dc8a2cfeae":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}