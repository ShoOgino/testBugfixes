{"path":"lucene/core/src/java/org/apache/lucene/util/IOUtils#spins(Path).mjava","commits":[{"id":"f1db7bd2068060be0b68fcca95c8270c7cb60f6c","date":1419003415,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#spins(Path).mjava","pathOld":"/dev/null","sourceNew":"  /** Rough Linux-only heuristics to determine whether the provided\n   *  {@code Path} is backed by spinning storage.  For example, this\n   *  returns false if the disk is a solid-state disk.\n   *\n   *  @param path a location to check which must exist. the mount point will be determined from this location.\n   *  @return false if the storage is non-rotational (e.g. an SSD), or true if it is spinning or could not be determined\n   *  @throws IOException if {@code path} does not exist.\n   *\n   *  @lucene.internal */\n  public static boolean spins(Path path) throws IOException {\n    // resolve symlinks (this will throw exception if the path does not exist)\n    path = path.toRealPath();\n    \n    // Super cowboy approach, but seems to work!\n    if (!Constants.LINUX) {\n      return true; // no detection\n    }\n\n    try {\n      return spinsLinux(path);\n    } catch (Exception exc) {\n      // our crazy heuristics can easily trigger SecurityException, AIOOBE, etc ...\n      return true;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f1db7bd2068060be0b68fcca95c8270c7cb60f6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f1db7bd2068060be0b68fcca95c8270c7cb60f6c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f1db7bd2068060be0b68fcca95c8270c7cb60f6c"],"f1db7bd2068060be0b68fcca95c8270c7cb60f6c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}