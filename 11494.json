{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#add(SolrInputDocument,Integer,Boolean).mjava","commits":[{"id":"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1","date":1378862385,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#add(SolrInputDocument,Integer,Boolean).mjava","pathOld":"/dev/null","sourceNew":"  public UpdateRequest add(final SolrInputDocument doc, Integer commitWithin,\n      Boolean overwrite) {\n    if (documents == null) {\n      documents = new LinkedHashMap<SolrInputDocument,Map<String,Object>>();\n    }\n    Map<String,Object> params = new HashMap<String,Object>(2);\n    if (commitWithin != null) params.put(COMMIT_WITHIN, commitWithin);\n    if (overwrite != null) params.put(OVERWRITE, overwrite);\n    \n    documents.put(doc, params);\n    \n    return this;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["2b2d02274e0f92f3c365a025cd3d084d0b4368e4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#add(SolrInputDocument,Integer,Boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#add(SolrInputDocument,Integer,Boolean).mjava","sourceNew":"  public UpdateRequest add(final SolrInputDocument doc, Integer commitWithin,\n      Boolean overwrite) {\n    if (documents == null) {\n      documents = new LinkedHashMap<>();\n    }\n    Map<String,Object> params = new HashMap<>(2);\n    if (commitWithin != null) params.put(COMMIT_WITHIN, commitWithin);\n    if (overwrite != null) params.put(OVERWRITE, overwrite);\n    \n    documents.put(doc, params);\n    \n    return this;\n  }\n\n","sourceOld":"  public UpdateRequest add(final SolrInputDocument doc, Integer commitWithin,\n      Boolean overwrite) {\n    if (documents == null) {\n      documents = new LinkedHashMap<SolrInputDocument,Map<String,Object>>();\n    }\n    Map<String,Object> params = new HashMap<String,Object>(2);\n    if (commitWithin != null) params.put(COMMIT_WITHIN, commitWithin);\n    if (overwrite != null) params.put(OVERWRITE, overwrite);\n    \n    documents.put(doc, params);\n    \n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2b2d02274e0f92f3c365a025cd3d084d0b4368e4","date":1448272203,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#add(SolrInputDocument,Integer,Boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/UpdateRequest#add(SolrInputDocument,Integer,Boolean).mjava","sourceNew":"  /**\n   * Add a SolrInputDocument to this request\n   * @param doc the document\n   * @param commitWithin the time horizon by which the document should be committed (in ms)\n   * @param overwrite true if the document should overwrite existing docs with the same id\n   * @throws NullPointerException if the document is null\n   */\n  public UpdateRequest add(final SolrInputDocument doc, Integer commitWithin, Boolean overwrite) {\n    Objects.requireNonNull(doc, \"Cannot add a null SolrInputDocument\");\n    if (documents == null) {\n      documents = new LinkedHashMap<>();\n    }\n    Map<String,Object> params = new HashMap<>(2);\n    if (commitWithin != null) params.put(COMMIT_WITHIN, commitWithin);\n    if (overwrite != null) params.put(OVERWRITE, overwrite);\n    \n    documents.put(doc, params);\n    \n    return this;\n  }\n\n","sourceOld":"  public UpdateRequest add(final SolrInputDocument doc, Integer commitWithin,\n      Boolean overwrite) {\n    if (documents == null) {\n      documents = new LinkedHashMap<>();\n    }\n    Map<String,Object> params = new HashMap<>(2);\n    if (commitWithin != null) params.put(COMMIT_WITHIN, commitWithin);\n    if (overwrite != null) params.put(OVERWRITE, overwrite);\n    \n    documents.put(doc, params);\n    \n    return this;\n  }\n\n","bugFix":["d5fc588fc7c6e55c0d778665292d023bf8d5f3b1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d5fc588fc7c6e55c0d778665292d023bf8d5f3b1"],"2b2d02274e0f92f3c365a025cd3d084d0b4368e4":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2b2d02274e0f92f3c365a025cd3d084d0b4368e4"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["2b2d02274e0f92f3c365a025cd3d084d0b4368e4"],"2b2d02274e0f92f3c365a025cd3d084d0b4368e4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d5fc588fc7c6e55c0d778665292d023bf8d5f3b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}