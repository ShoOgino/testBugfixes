{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","commits":[{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n\n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getAbsolutePath(), context, 0, solrConfigOverride, schemaOverride, false, getExtraServlets());\n    jetty.setShards(shardList);\n    jetty.setDataDir(getDataDir(dataDir));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d642fe6577db47788146c0fc4fe14240ab1718b7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n\n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getAbsolutePath(), context, 0, solrConfigOverride, schemaOverride, false, getExtraServlets());\n    jetty.setShards(shardList);\n    jetty.setDataDir(getDataDir(dataDir));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d642fe6577db47788146c0fc4fe14240ab1718b7","date":1376680349,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","sourceNew":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    // randomly test a relative solr.home path\n    if (random().nextBoolean()) {\n      solrHome = getRelativeSolrHomePath(solrHome);\n    }\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getPath(), context, 0, solrConfigOverride, schemaOverride, false, getExtraServlets());\n    jetty.setShards(shardList);\n    jetty.setDataDir(getDataDir(dataDir));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","sourceOld":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n\n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getAbsolutePath(), context, 0, solrConfigOverride, schemaOverride, false, getExtraServlets());\n    jetty.setShards(shardList);\n    jetty.setDataDir(getDataDir(dataDir));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","bugFix":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","sourceNew":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    // randomly test a relative solr.home path\n    if (random().nextBoolean()) {\n      solrHome = getRelativeSolrHomePath(solrHome);\n    }\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getPath(), context, 0, solrConfigOverride, schemaOverride, false, getExtraServlets());\n    jetty.setShards(shardList);\n    jetty.setDataDir(getDataDir(dataDir));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","sourceOld":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n\n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getAbsolutePath(), context, 0, solrConfigOverride, schemaOverride, false, getExtraServlets());\n    jetty.setShards(shardList);\n    jetty.setDataDir(getDataDir(dataDir));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","sourceNew":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    // randomly test a relative solr.home path\n    if (random().nextBoolean()) {\n      solrHome = getRelativeSolrHomePath(solrHome);\n    }\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getPath(), context, 0, solrConfigOverride, schemaOverride, false, getExtraServlets());\n    jetty.setShards(shardList);\n    jetty.setDataDir(getDataDir(dataDir));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","sourceOld":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n\n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getAbsolutePath(), context, 0, solrConfigOverride, schemaOverride, false, getExtraServlets());\n    jetty.setShards(shardList);\n    jetty.setDataDir(getDataDir(dataDir));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09bf2ac3af855efa1f7631177ce8dad43bace34b","date":1386879352,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","sourceNew":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    // randomly test a relative solr.home path\n    if (random().nextBoolean()) {\n      solrHome = getRelativeSolrHomePath(solrHome);\n    }\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getPath(), context, 0, solrConfigOverride, schemaOverride, false, getExtraServlets(), null, getExtraRequestFilters());\n    jetty.setShards(shardList);\n    jetty.setDataDir(getDataDir(dataDir));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","sourceOld":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    // randomly test a relative solr.home path\n    if (random().nextBoolean()) {\n      solrHome = getRelativeSolrHomePath(solrHome);\n    }\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getPath(), context, 0, solrConfigOverride, schemaOverride, false, getExtraServlets());\n    jetty.setShards(shardList);\n    jetty.setDataDir(getDataDir(dataDir));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","sourceNew":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    // randomly test a relative solr.home path\n    if (random().nextBoolean()) {\n      solrHome = getRelativeSolrHomePath(solrHome);\n    }\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getPath(), context, 0, solrConfigOverride, schemaOverride, false, getExtraServlets(), null, getExtraRequestFilters());\n    jetty.setShards(shardList);\n    jetty.setDataDir(getDataDir(dataDir));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","sourceOld":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    // randomly test a relative solr.home path\n    if (random().nextBoolean()) {\n      solrHome = getRelativeSolrHomePath(solrHome);\n    }\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getPath(), context, 0, solrConfigOverride, schemaOverride, false, getExtraServlets());\n    jetty.setShards(shardList);\n    jetty.setDataDir(getDataDir(dataDir));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","date":1391985588,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","sourceNew":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    // randomly test a relative solr.home path\n    if (random().nextBoolean()) {\n      solrHome = getRelativeSolrHomePath(solrHome);\n    }\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getPath(), context, 0, solrConfigOverride, schemaOverride, false, getExtraServlets(), sslConfig, getExtraRequestFilters());\n    jetty.setShards(shardList);\n    jetty.setDataDir(getDataDir(dataDir));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","sourceOld":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    // randomly test a relative solr.home path\n    if (random().nextBoolean()) {\n      solrHome = getRelativeSolrHomePath(solrHome);\n    }\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getPath(), context, 0, solrConfigOverride, schemaOverride, false, getExtraServlets(), null, getExtraRequestFilters());\n    jetty.setShards(shardList);\n    jetty.setDataDir(getDataDir(dataDir));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","sourceNew":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    // randomly test a relative solr.home path\n    if (random().nextBoolean()) {\n      solrHome = getRelativeSolrHomePath(solrHome);\n    }\n\n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getPath(), context, 0, solrConfigOverride, schemaOverride, false, getExtraServlets(), sslConfig, getExtraRequestFilters());\n    jetty.setShards(shardList);\n    jetty.setDataDir(getDataDir(dataDir));\n    jetty.start();\n\n    return jetty;\n  }\n\n","sourceOld":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    // randomly test a relative solr.home path\n    if (random().nextBoolean()) {\n      solrHome = getRelativeSolrHomePath(solrHome);\n    }\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getPath(), context, 0, solrConfigOverride, schemaOverride, false, getExtraServlets(), sslConfig, getExtraRequestFilters());\n    jetty.setShards(shardList);\n    jetty.setDataDir(getDataDir(dataDir));\n    jetty.start();\n    \n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c66158bb16e902a21272772f1b911f04b1a55abb","date":1424959524,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","sourceNew":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    // randomly test a relative solr.home path\n    if (random().nextBoolean()) {\n      solrHome = getRelativeSolrHomePath(solrHome);\n    }\n\n    JettyConfig jettyconfig = JettyConfig.builder()\n        .setContext(context)\n        .stopAtShutdown(false)\n        .withServlets(getExtraServlets())\n        .withFilters(getExtraRequestFilters())\n        .withSSLConfig(sslConfig)\n        .build();\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getPath(), solrConfigOverride, schemaOverride, jettyconfig);\n\n    jetty.setShards(shardList);\n    jetty.setDataDir(getDataDir(dataDir));\n    jetty.start();\n\n    return jetty;\n  }\n\n","sourceOld":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    // randomly test a relative solr.home path\n    if (random().nextBoolean()) {\n      solrHome = getRelativeSolrHomePath(solrHome);\n    }\n\n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getPath(), context, 0, solrConfigOverride, schemaOverride, false, getExtraServlets(), sslConfig, getExtraRequestFilters());\n    jetty.setShards(shardList);\n    jetty.setDataDir(getDataDir(dataDir));\n    jetty.start();\n\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bc766d645fa848f86c381c7f6acf2c881c99399","date":1425549246,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","sourceNew":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    // randomly test a relative solr.home path\n    if (random().nextBoolean()) {\n      solrHome = getRelativeSolrHomePath(solrHome);\n    }\n\n    JettyConfig jettyconfig = JettyConfig.builder()\n        .setContext(context)\n        .stopAtShutdown(false)\n        .withServlets(getExtraServlets())\n        .withFilters(getExtraRequestFilters())\n        .withSSLConfig(sslConfig)\n        .build();\n\n    Properties props = new Properties();\n    if (solrConfigOverride != null)\n      props.setProperty(\"solrconfig\", solrConfigOverride);\n    if (schemaOverride != null)\n      props.setProperty(\"schema\", schemaOverride);\n    if (shardList != null)\n      props.setProperty(\"shards\", shardList);\n    if (dataDir != null)\n      props.setProperty(\"solr.data.dir\", getDataDir(dataDir));\n    props.setProperty(\"coreRootDirectory\", solrHome.toPath().resolve(\"cores\").toAbsolutePath().toString());\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getPath(), props, jettyconfig);\n    jetty.start();\n\n    return jetty;\n  }\n\n","sourceOld":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    // randomly test a relative solr.home path\n    if (random().nextBoolean()) {\n      solrHome = getRelativeSolrHomePath(solrHome);\n    }\n\n    JettyConfig jettyconfig = JettyConfig.builder()\n        .setContext(context)\n        .stopAtShutdown(false)\n        .withServlets(getExtraServlets())\n        .withFilters(getExtraRequestFilters())\n        .withSSLConfig(sslConfig)\n        .build();\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getPath(), solrConfigOverride, schemaOverride, jettyconfig);\n\n    jetty.setShards(shardList);\n    jetty.setDataDir(getDataDir(dataDir));\n    jetty.start();\n\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","sourceNew":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    // randomly test a relative solr.home path\n    if (random().nextBoolean()) {\n      solrHome = getRelativeSolrHomePath(solrHome);\n    }\n\n    JettyConfig jettyconfig = JettyConfig.builder()\n        .setContext(context)\n        .stopAtShutdown(false)\n        .withServlets(getExtraServlets())\n        .withFilters(getExtraRequestFilters())\n        .withSSLConfig(sslConfig)\n        .build();\n\n    Properties props = new Properties();\n    if (solrConfigOverride != null)\n      props.setProperty(\"solrconfig\", solrConfigOverride);\n    if (schemaOverride != null)\n      props.setProperty(\"schema\", schemaOverride);\n    if (shardList != null)\n      props.setProperty(\"shards\", shardList);\n    if (dataDir != null)\n      props.setProperty(\"solr.data.dir\", getDataDir(dataDir));\n    props.setProperty(\"coreRootDirectory\", solrHome.toPath().resolve(\"cores\").toAbsolutePath().toString());\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getPath(), props, jettyconfig);\n    jetty.start();\n\n    return jetty;\n  }\n\n","sourceOld":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    // randomly test a relative solr.home path\n    if (random().nextBoolean()) {\n      solrHome = getRelativeSolrHomePath(solrHome);\n    }\n\n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getPath(), context, 0, solrConfigOverride, schemaOverride, false, getExtraServlets(), sslConfig, getExtraRequestFilters());\n    jetty.setShards(shardList);\n    jetty.setDataDir(getDataDir(dataDir));\n    jetty.start();\n\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61c45e99cf6676da48f19d7511c73712ad39402b","date":1495508331,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","sourceNew":"  public final JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    return createJetty(solrHome, dataDir, shardList, solrConfigOverride, schemaOverride, null);\n  }\n\n","sourceOld":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    // randomly test a relative solr.home path\n    if (random().nextBoolean()) {\n      solrHome = getRelativeSolrHomePath(solrHome);\n    }\n\n    JettyConfig jettyconfig = JettyConfig.builder()\n        .setContext(context)\n        .stopAtShutdown(false)\n        .withServlets(getExtraServlets())\n        .withFilters(getExtraRequestFilters())\n        .withSSLConfig(sslConfig)\n        .build();\n\n    Properties props = new Properties();\n    if (solrConfigOverride != null)\n      props.setProperty(\"solrconfig\", solrConfigOverride);\n    if (schemaOverride != null)\n      props.setProperty(\"schema\", schemaOverride);\n    if (shardList != null)\n      props.setProperty(\"shards\", shardList);\n    if (dataDir != null)\n      props.setProperty(\"solr.data.dir\", getDataDir(dataDir));\n    props.setProperty(\"coreRootDirectory\", solrHome.toPath().resolve(\"cores\").toAbsolutePath().toString());\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getPath(), props, jettyconfig);\n    jetty.start();\n\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createJetty(File,String,String,String,String).mjava","sourceNew":"  public final JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    return createJetty(solrHome, dataDir, shardList, solrConfigOverride, schemaOverride, null);\n  }\n\n","sourceOld":"  public JettySolrRunner createJetty(File solrHome, String dataDir, String shardList, String solrConfigOverride, String schemaOverride) throws Exception {\n    // randomly test a relative solr.home path\n    if (random().nextBoolean()) {\n      solrHome = getRelativeSolrHomePath(solrHome);\n    }\n\n    JettyConfig jettyconfig = JettyConfig.builder()\n        .setContext(context)\n        .stopAtShutdown(false)\n        .withServlets(getExtraServlets())\n        .withFilters(getExtraRequestFilters())\n        .withSSLConfig(sslConfig)\n        .build();\n\n    Properties props = new Properties();\n    if (solrConfigOverride != null)\n      props.setProperty(\"solrconfig\", solrConfigOverride);\n    if (schemaOverride != null)\n      props.setProperty(\"schema\", schemaOverride);\n    if (shardList != null)\n      props.setProperty(\"shards\", shardList);\n    if (dataDir != null)\n      props.setProperty(\"solr.data.dir\", getDataDir(dataDir));\n    props.setProperty(\"coreRootDirectory\", solrHome.toPath().resolve(\"cores\").toAbsolutePath().toString());\n    \n    JettySolrRunner jetty = new JettySolrRunner(solrHome.getPath(), props, jettyconfig);\n    jetty.start();\n\n    return jetty;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"61c45e99cf6676da48f19d7511c73712ad39402b":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"abb23fcc2461782ab204e61213240feb77d355aa":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d642fe6577db47788146c0fc4fe14240ab1718b7"],"31d4861802ca404d78ca1d15f4550eec415b9199":["849494cf2f3a96af5c8c84995108ddd8456fcd04","d642fe6577db47788146c0fc4fe14240ab1718b7"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["c66158bb16e902a21272772f1b911f04b1a55abb"],"09bf2ac3af855efa1f7631177ce8dad43bace34b":["d642fe6577db47788146c0fc4fe14240ab1718b7"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d642fe6577db47788146c0fc4fe14240ab1718b7":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["9bc766d645fa848f86c381c7f6acf2c881c99399","61c45e99cf6676da48f19d7511c73712ad39402b"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["abb23fcc2461782ab204e61213240feb77d355aa","9bc766d645fa848f86c381c7f6acf2c881c99399"],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["09bf2ac3af855efa1f7631177ce8dad43bace34b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["d642fe6577db47788146c0fc4fe14240ab1718b7","09bf2ac3af855efa1f7631177ce8dad43bace34b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["61c45e99cf6676da48f19d7511c73712ad39402b"],"c66158bb16e902a21272772f1b911f04b1a55abb":["abb23fcc2461782ab204e61213240feb77d355aa"]},"commit2Childs":{"61c45e99cf6676da48f19d7511c73712ad39402b":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"abb23fcc2461782ab204e61213240feb77d355aa":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","c66158bb16e902a21272772f1b911f04b1a55abb"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"9bc766d645fa848f86c381c7f6acf2c881c99399":["61c45e99cf6676da48f19d7511c73712ad39402b","e9017cf144952056066919f1ebc7897ff9bd71b1","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"09bf2ac3af855efa1f7631177ce8dad43bace34b":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["37a0f60745e53927c4c876cfe5b5a58170f0646c","31d4861802ca404d78ca1d15f4550eec415b9199","d642fe6577db47788146c0fc4fe14240ab1718b7"],"d642fe6577db47788146c0fc4fe14240ab1718b7":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","09bf2ac3af855efa1f7631177ce8dad43bace34b","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["abb23fcc2461782ab204e61213240feb77d355aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"c66158bb16e902a21272772f1b911f04b1a55abb":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","e9017cf144952056066919f1ebc7897ff9bd71b1","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}