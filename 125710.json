{"path":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","commits":[{"id":"d598d69959907d30ecae2c9143a637fd3d7f2279","date":1308351175,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","pathOld":"/dev/null","sourceNew":"  public void testSplit() throws Exception {\n    NumberFormat format = new DecimalFormat(\"000000000\");\n    \n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        Version.LUCENE_CURRENT,\n        new WhitespaceAnalyzer(Version.LUCENE_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n    for (int x=0; x < 10; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n    }\n    for (int x=15; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n    }\n    w.close();\n    \n    Directory dir1 = newDirectory();\n    Directory dir2 = newDirectory();\n    Term splitTerm = new Term(\"id\", new BytesRef(format.format(11)));\n    PKIndexSplitter splitter = new PKIndexSplitter(splitTerm, \n        dir, dir1, dir2);\n    splitter.split();\n    \n    IndexReader ir1 = IndexReader.open(dir1);\n    IndexReader ir2 = IndexReader.open(dir2);\n    assertEquals(10, ir1.maxDoc());\n    assertEquals(4, ir2.maxDoc());\n    \n    ir1.close();\n    ir2.close();\n    \n    dir1.close();\n    dir2.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7edfc3f7caa7b49a18fe367692768b33b018e9db","date":1308374217,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","pathOld":"/dev/null","sourceNew":"  public void testSplit() throws Exception {\n    NumberFormat format = new DecimalFormat(\"000000000\");\n    \n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        Version.LUCENE_CURRENT,\n        new WhitespaceAnalyzer(Version.LUCENE_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n    for (int x=0; x < 10; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n    }\n    for (int x=15; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n    }\n    w.close();\n    \n    Directory dir1 = newDirectory();\n    Directory dir2 = newDirectory();\n    Term splitTerm = new Term(\"id\", new BytesRef(format.format(11)));\n    PKIndexSplitter splitter = new PKIndexSplitter(splitTerm, \n        dir, dir1, dir2);\n    splitter.split();\n    \n    IndexReader ir1 = IndexReader.open(dir1);\n    IndexReader ir2 = IndexReader.open(dir2);\n    assertEquals(10, ir1.maxDoc());\n    assertEquals(4, ir2.maxDoc());\n    \n    ir1.close();\n    ir2.close();\n    \n    dir1.close();\n    dir2.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd5b0696fbde24daf807b2f98cffa838a7c0e159","date":1308394033,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","sourceNew":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\");\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n    }\n    w.close();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.close();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testSplit() throws Exception {\n    NumberFormat format = new DecimalFormat(\"000000000\");\n    \n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        Version.LUCENE_CURRENT,\n        new WhitespaceAnalyzer(Version.LUCENE_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n    for (int x=0; x < 10; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n    }\n    for (int x=15; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n    }\n    w.close();\n    \n    Directory dir1 = newDirectory();\n    Directory dir2 = newDirectory();\n    Term splitTerm = new Term(\"id\", new BytesRef(format.format(11)));\n    PKIndexSplitter splitter = new PKIndexSplitter(splitTerm, \n        dir, dir1, dir2);\n    splitter.split();\n    \n    IndexReader ir1 = IndexReader.open(dir1);\n    IndexReader ir2 = IndexReader.open(dir2);\n    assertEquals(10, ir1.maxDoc());\n    assertEquals(4, ir2.maxDoc());\n    \n    ir1.close();\n    ir2.close();\n    \n    dir1.close();\n    dir2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886","date":1308439813,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","sourceNew":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\");\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n    }\n    w.close();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.close();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testSplit() throws Exception {\n    NumberFormat format = new DecimalFormat(\"000000000\");\n    \n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(\n        Version.LUCENE_CURRENT,\n        new WhitespaceAnalyzer(Version.LUCENE_CURRENT))\n        .setOpenMode(OpenMode.CREATE));\n    for (int x=0; x < 10; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n    }\n    for (int x=15; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n    }\n    w.close();\n    \n    Directory dir1 = newDirectory();\n    Directory dir2 = newDirectory();\n    Term splitTerm = new Term(\"id\", new BytesRef(format.format(11)));\n    PKIndexSplitter splitter = new PKIndexSplitter(splitTerm, \n        dir, dir1, dir2);\n    splitter.split();\n    \n    IndexReader ir1 = IndexReader.open(dir1);\n    IndexReader ir2 = IndexReader.open(dir2);\n    assertEquals(10, ir1.maxDoc());\n    assertEquals(4, ir2.maxDoc());\n    \n    ir1.close();\n    ir2.close();\n    \n    dir1.close();\n    dir2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a118fcb91dbf1aea61227687b4241d7b136558d","date":1323554852,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","sourceNew":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\");\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.close();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.close();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\");\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n    }\n    w.close();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.close();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","sourceNew":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\");\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.close();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.close();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\");\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n    }\n    w.close();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.close();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","sourceNew":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\");\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.close();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.close();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\");\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.close();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.close();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestPKIndexSplitter#testSplit().mjava","sourceNew":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\");\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.close();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.close();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testSplit() throws Exception {    \n    NumberFormat format = new DecimalFormat(\"000000000\");\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.CREATE).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    for (int x = 0; x < 11; x++) {\n      Document doc = createDocument(x, \"1\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    for (int x = 11; x < 20; x++) {\n      Document doc = createDocument(x, \"2\", 3, format);\n      w.addDocument(doc);\n      if (x%3==0) w.commit();\n    }\n    w.close();\n    \n    final Term midTerm = new Term(\"id\", format.format(11));\n    \n    checkSplitting(dir, midTerm, 11, 9);\n    \n    // delete some documents\n    w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false))\n        .setOpenMode(OpenMode.APPEND).setMergePolicy(NoMergePolicy.COMPOUND_FILES));\n    w.deleteDocuments(midTerm);\n    w.deleteDocuments(new Term(\"id\", format.format(2)));\n    w.close();\n    \n    checkSplitting(dir, midTerm, 10, 8);\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"7edfc3f7caa7b49a18fe367692768b33b018e9db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d598d69959907d30ecae2c9143a637fd3d7f2279"],"d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886":["7edfc3f7caa7b49a18fe367692768b33b018e9db","bd5b0696fbde24daf807b2f98cffa838a7c0e159"],"7a118fcb91dbf1aea61227687b4241d7b136558d":["bd5b0696fbde24daf807b2f98cffa838a7c0e159"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["bd5b0696fbde24daf807b2f98cffa838a7c0e159","7a118fcb91dbf1aea61227687b4241d7b136558d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["7a118fcb91dbf1aea61227687b4241d7b136558d"],"bd5b0696fbde24daf807b2f98cffa838a7c0e159":["d598d69959907d30ecae2c9143a637fd3d7f2279"],"d598d69959907d30ecae2c9143a637fd3d7f2279":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7edfc3f7caa7b49a18fe367692768b33b018e9db":["d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886"],"d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886":[],"7a118fcb91dbf1aea61227687b4241d7b136558d":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7edfc3f7caa7b49a18fe367692768b33b018e9db","d598d69959907d30ecae2c9143a637fd3d7f2279"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"bd5b0696fbde24daf807b2f98cffa838a7c0e159":["d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886","7a118fcb91dbf1aea61227687b4241d7b136558d","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"d598d69959907d30ecae2c9143a637fd3d7f2279":["7edfc3f7caa7b49a18fe367692768b33b018e9db","bd5b0696fbde24daf807b2f98cffa838a7c0e159"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d1ded5d4f5b5e3e5f32bff69cd6fe5e64322a886","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}