{"path":"lucene/contrib/queries/src/test/org/apache/lucene/search/TestSlowCollationMethods#testRangeFilter().mjava","commits":[{"id":"3e492fb0f2bb0b4b47208286f9331ff55963c656","date":1298870150,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/TestSlowCollationMethods#testRangeFilter().mjava","pathOld":"/dev/null","sourceNew":"  public void testRangeFilter() throws Exception {\n    int numQueries = 50*RANDOM_MULTIPLIER;\n    for (int i = 0; i < numQueries; i++) {\n      String startPoint = _TestUtil.randomUnicodeString(random);\n      String endPoint = _TestUtil.randomUnicodeString(random);\n      Query query = new ConstantScoreQuery(new SlowCollatedTermRangeFilter(\"field\", startPoint, endPoint, true, true, collator));\n      doTestRanges(startPoint, endPoint, query);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/TestSlowCollationMethods#testRangeFilter().mjava","pathOld":"/dev/null","sourceNew":"  public void testRangeFilter() throws Exception {\n    int numQueries = 50*RANDOM_MULTIPLIER;\n    for (int i = 0; i < numQueries; i++) {\n      String startPoint = _TestUtil.randomUnicodeString(random);\n      String endPoint = _TestUtil.randomUnicodeString(random);\n      Query query = new ConstantScoreQuery(new SlowCollatedTermRangeFilter(\"field\", startPoint, endPoint, true, true, collator));\n      doTestRanges(startPoint, endPoint, query);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/TestSlowCollationMethods#testRangeFilter().mjava","pathOld":"/dev/null","sourceNew":"  public void testRangeFilter() throws Exception {\n    int numQueries = 50*RANDOM_MULTIPLIER;\n    for (int i = 0; i < numQueries; i++) {\n      String startPoint = _TestUtil.randomUnicodeString(random);\n      String endPoint = _TestUtil.randomUnicodeString(random);\n      Query query = new ConstantScoreQuery(new SlowCollatedTermRangeFilter(\"field\", startPoint, endPoint, true, true, collator));\n      doTestRanges(startPoint, endPoint, query);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b","date":1313816278,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/sandbox/src/test/org/apache/lucene/sandbox/queries/TestSlowCollationMethods#testRangeFilter().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/TestSlowCollationMethods#testRangeFilter().mjava","sourceNew":"  public void testRangeFilter() throws Exception {\n    int numQueries = 50*RANDOM_MULTIPLIER;\n    for (int i = 0; i < numQueries; i++) {\n      String startPoint = _TestUtil.randomUnicodeString(random);\n      String endPoint = _TestUtil.randomUnicodeString(random);\n      Query query = new ConstantScoreQuery(new SlowCollatedTermRangeFilter(\"field\", startPoint, endPoint, true, true, collator));\n      doTestRanges(startPoint, endPoint, query);\n    }\n  }\n\n","sourceOld":"  public void testRangeFilter() throws Exception {\n    int numQueries = 50*RANDOM_MULTIPLIER;\n    for (int i = 0; i < numQueries; i++) {\n      String startPoint = _TestUtil.randomUnicodeString(random);\n      String endPoint = _TestUtil.randomUnicodeString(random);\n      Query query = new ConstantScoreQuery(new SlowCollatedTermRangeFilter(\"field\", startPoint, endPoint, true, true, collator));\n      doTestRanges(startPoint, endPoint, query);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b":["3e492fb0f2bb0b4b47208286f9331ff55963c656"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3e492fb0f2bb0b4b47208286f9331ff55963c656"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3e492fb0f2bb0b4b47208286f9331ff55963c656"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3e492fb0f2bb0b4b47208286f9331ff55963c656":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f9fdc0777b84633cc8cfa8995ff5b0d411e4515b"]},"commit2Childs":{"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","3e492fb0f2bb0b4b47208286f9331ff55963c656"],"3e492fb0f2bb0b4b47208286f9331ff55963c656":["f9fdc0777b84633cc8cfa8995ff5b0d411e4515b","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}