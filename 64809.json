{"path":"contrib/gdata-server/src/test/org/apache/lucene/gdata/storage/lucenestorage/TestStorageQuery#FeedQueryHelper(ReferenceCounter[StorageQuery]).mjava","commits":[{"id":"5d43e216d757e2276d180eba8a192e300c4bfadb","date":1149717385,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"contrib/gdata-server/src/test/org/apache/lucene/gdata/storage/lucenestorage/TestStorageQuery#FeedQueryHelper(ReferenceCounter[StorageQuery]).mjava","pathOld":"/dev/null","sourceNew":"    private void FeedQueryHelper(ReferenceCounter<StorageQuery> currentQuery) throws IOException, FeedNotFoundException, ParseException{ \n        List<BaseEntry> entryList = currentQuery.get().getLatestFeedQuery(feedId,25,1,this.profile); \n         \n        assertTrue(\"listSize: \"+entryList.size(),entryList.size() == 25); \n         \n        BaseEntry tempEntry = null; \n        for (BaseEntry entry : entryList) { \n           \n            assertNotNull(\"entry\",entry); \n            if(tempEntry != null){ \n                assertTrue(tempEntry.getUpdated().compareTo(entry.getUpdated())>=0) ; \n                tempEntry = entry; \n            }else \n                tempEntry = entry; \n             \n        } \n        // test sub retrieve sublist \n        int offset = 15; \n        int resultCount = 5;  \n        List<BaseEntry> entrySubList = currentQuery.get().getLatestFeedQuery(feedId,resultCount,offset,this.profile); \n         \n        assertTrue(\"listSize: \"+entrySubList.size(),entrySubList.size() == resultCount); \n        offset--; \n        for (BaseEntry entry : entrySubList) { \n             \n            assertEquals(entry.getId(),entryList.get(offset).getId()); \n            offset++; \n             \n        } \n         \n         \n         \n    } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52754a40a1550056d5637c8992b4076b5ed77328","date":1151345693,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/test/org/apache/lucene/gdata/storage/lucenestorage/TestStorageQuery#FeedQueryHelper(ReferenceCounter[StorageQuery]).mjava","sourceNew":null,"sourceOld":"    private void FeedQueryHelper(ReferenceCounter<StorageQuery> currentQuery) throws IOException, FeedNotFoundException, ParseException{ \n        List<BaseEntry> entryList = currentQuery.get().getLatestFeedQuery(feedId,25,1,this.profile); \n         \n        assertTrue(\"listSize: \"+entryList.size(),entryList.size() == 25); \n         \n        BaseEntry tempEntry = null; \n        for (BaseEntry entry : entryList) { \n           \n            assertNotNull(\"entry\",entry); \n            if(tempEntry != null){ \n                assertTrue(tempEntry.getUpdated().compareTo(entry.getUpdated())>=0) ; \n                tempEntry = entry; \n            }else \n                tempEntry = entry; \n             \n        } \n        // test sub retrieve sublist \n        int offset = 15; \n        int resultCount = 5;  \n        List<BaseEntry> entrySubList = currentQuery.get().getLatestFeedQuery(feedId,resultCount,offset,this.profile); \n         \n        assertTrue(\"listSize: \"+entrySubList.size(),entrySubList.size() == resultCount); \n        offset--; \n        for (BaseEntry entry : entrySubList) { \n             \n            assertEquals(entry.getId(),entryList.get(offset).getId()); \n            offset++; \n             \n        } \n         \n         \n         \n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5d43e216d757e2276d180eba8a192e300c4bfadb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["52754a40a1550056d5637c8992b4076b5ed77328"],"52754a40a1550056d5637c8992b4076b5ed77328":["5d43e216d757e2276d180eba8a192e300c4bfadb"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d43e216d757e2276d180eba8a192e300c4bfadb"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["52754a40a1550056d5637c8992b4076b5ed77328"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"52754a40a1550056d5637c8992b4076b5ed77328":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}