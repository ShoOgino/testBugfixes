{"path":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","pathOld":"solr/src/common/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","sourceNew":"  /**\n   * Method to serialize Map.Entry&lt;String, ?&gt; to a List in which the even\n   * indexed elements (0,2,4. ..etc) are Strings and odd elements (1,3,5,) are of\n   * the type \"T\".\n   *\n   * @param nameValuePairs\n   * @return Modified List as per the above description\n   * @deprecated This a temporary placeholder method until the guts of the class\n   * are actually replaced by List&lt;String, ?&gt;.\n   * @see https://issues.apache.org/jira/browse/SOLR-912\n   */\n  @Deprecated\n  private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {\n    List<Object> result = new ArrayList<Object>();\n    for (Map.Entry<String, ?> ent : nameValuePairs) {\n      result.add(ent.getKey());\n      result.add(ent.getValue());\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Method to serialize Map.Entry&lt;String, ?&gt; to a List in which the even\n   * indexed elements (0,2,4. ..etc) are Strings and odd elements (1,3,5,) are of\n   * the type \"T\".\n   *\n   * @param nameValuePairs\n   * @return Modified List as per the above description\n   * @deprecated This a temporary placeholder method until the guts of the class\n   * are actually replaced by List&lt;String, ?&gt;.\n   * @see https://issues.apache.org/jira/browse/SOLR-912\n   */\n  @Deprecated\n  private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {\n    List<Object> result = new ArrayList<Object>();\n    for (Map.Entry<String, ?> ent : nameValuePairs) {\n      result.add(ent.getKey());\n      result.add(ent.getValue());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","pathOld":"solr/src/common/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","sourceNew":"  /**\n   * Method to serialize Map.Entry&lt;String, ?&gt; to a List in which the even\n   * indexed elements (0,2,4. ..etc) are Strings and odd elements (1,3,5,) are of\n   * the type \"T\".\n   *\n   * @param nameValuePairs\n   * @return Modified List as per the above description\n   * @deprecated This a temporary placeholder method until the guts of the class\n   * are actually replaced by List&lt;String, ?&gt;.\n   * @see https://issues.apache.org/jira/browse/SOLR-912\n   */\n  @Deprecated\n  private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {\n    List<Object> result = new ArrayList<Object>();\n    for (Map.Entry<String, ?> ent : nameValuePairs) {\n      result.add(ent.getKey());\n      result.add(ent.getValue());\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Method to serialize Map.Entry&lt;String, ?&gt; to a List in which the even\n   * indexed elements (0,2,4. ..etc) are Strings and odd elements (1,3,5,) are of\n   * the type \"T\".\n   *\n   * @param nameValuePairs\n   * @return Modified List as per the above description\n   * @deprecated This a temporary placeholder method until the guts of the class\n   * are actually replaced by List&lt;String, ?&gt;.\n   * @see https://issues.apache.org/jira/browse/SOLR-912\n   */\n  @Deprecated\n  private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {\n    List<Object> result = new ArrayList<Object>();\n    for (Map.Entry<String, ?> ent : nameValuePairs) {\n      result.add(ent.getKey());\n      result.add(ent.getValue());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","pathOld":"solr/src/common/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","sourceNew":"  /**\n   * Method to serialize Map.Entry&lt;String, ?&gt; to a List in which the even\n   * indexed elements (0,2,4. ..etc) are Strings and odd elements (1,3,5,) are of\n   * the type \"T\".\n   *\n   * @param nameValuePairs\n   * @return Modified List as per the above description\n   * @deprecated This a temporary placeholder method until the guts of the class\n   * are actually replaced by List&lt;String, ?&gt;.\n   * @see https://issues.apache.org/jira/browse/SOLR-912\n   */\n  @Deprecated\n  private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {\n    List<Object> result = new ArrayList<Object>();\n    for (Map.Entry<String, ?> ent : nameValuePairs) {\n      result.add(ent.getKey());\n      result.add(ent.getValue());\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Method to serialize Map.Entry&lt;String, ?&gt; to a List in which the even\n   * indexed elements (0,2,4. ..etc) are Strings and odd elements (1,3,5,) are of\n   * the type \"T\".\n   *\n   * @param nameValuePairs\n   * @return Modified List as per the above description\n   * @deprecated This a temporary placeholder method until the guts of the class\n   * are actually replaced by List&lt;String, ?&gt;.\n   * @see https://issues.apache.org/jira/browse/SOLR-912\n   */\n  @Deprecated\n  private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {\n    List<Object> result = new ArrayList<Object>();\n    for (Map.Entry<String, ?> ent : nameValuePairs) {\n      result.add(ent.getKey());\n      result.add(ent.getValue());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"578eff0bc5aee20ceab0bb85d2e639e93d68c952","date":1335146102,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","sourceNew":"  /**\n   * Method to serialize Map.Entry&lt;String, ?&gt; to a List in which the even\n   * indexed elements (0,2,4. ..etc) are Strings and odd elements (1,3,5,) are of\n   * the type \"T\".\n   *\n   * @param nameValuePairs\n   * @return Modified List as per the above description\n   * @deprecated This a temporary placeholder method until the guts of the class\n   * are actually replaced by List&lt;String, ?&gt;.\n   * @see <a href=\"https://issues.apache.org/jira/browse/SOLR-912\">SOLR-912</a>\n   */\n  @Deprecated\n  private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {\n    List<Object> result = new ArrayList<Object>();\n    for (Map.Entry<String, ?> ent : nameValuePairs) {\n      result.add(ent.getKey());\n      result.add(ent.getValue());\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Method to serialize Map.Entry&lt;String, ?&gt; to a List in which the even\n   * indexed elements (0,2,4. ..etc) are Strings and odd elements (1,3,5,) are of\n   * the type \"T\".\n   *\n   * @param nameValuePairs\n   * @return Modified List as per the above description\n   * @deprecated This a temporary placeholder method until the guts of the class\n   * are actually replaced by List&lt;String, ?&gt;.\n   * @see https://issues.apache.org/jira/browse/SOLR-912\n   */\n  @Deprecated\n  private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {\n    List<Object> result = new ArrayList<Object>();\n    for (Map.Entry<String, ?> ent : nameValuePairs) {\n      result.add(ent.getKey());\n      result.add(ent.getValue());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","sourceNew":"  /**\n   * Method to serialize Map.Entry&lt;String, ?&gt; to a List in which the even\n   * indexed elements (0,2,4. ..etc) are Strings and odd elements (1,3,5,) are of\n   * the type \"T\".\n   *\n   * @return Modified List as per the above description\n   * @deprecated This a temporary placeholder method until the guts of the class\n   * are actually replaced by List&lt;String, ?&gt;.\n   * @see <a href=\"https://issues.apache.org/jira/browse/SOLR-912\">SOLR-912</a>\n   */\n  @Deprecated\n  private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {\n    List<Object> result = new ArrayList<Object>();\n    for (Map.Entry<String, ?> ent : nameValuePairs) {\n      result.add(ent.getKey());\n      result.add(ent.getValue());\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Method to serialize Map.Entry&lt;String, ?&gt; to a List in which the even\n   * indexed elements (0,2,4. ..etc) are Strings and odd elements (1,3,5,) are of\n   * the type \"T\".\n   *\n   * @param nameValuePairs\n   * @return Modified List as per the above description\n   * @deprecated This a temporary placeholder method until the guts of the class\n   * are actually replaced by List&lt;String, ?&gt;.\n   * @see <a href=\"https://issues.apache.org/jira/browse/SOLR-912\">SOLR-912</a>\n   */\n  @Deprecated\n  private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {\n    List<Object> result = new ArrayList<Object>();\n    for (Map.Entry<String, ?> ent : nameValuePairs) {\n      result.add(ent.getKey());\n      result.add(ent.getValue());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","sourceNew":"  /**\n   * Method to serialize Map.Entry&lt;String, ?&gt; to a List in which the even\n   * indexed elements (0,2,4. ..etc) are Strings and odd elements (1,3,5,) are of\n   * the type \"T\".\n   *\n   * @return Modified List as per the above description\n   * @deprecated This a temporary placeholder method until the guts of the class\n   * are actually replaced by List&lt;String, ?&gt;.\n   * @see <a href=\"https://issues.apache.org/jira/browse/SOLR-912\">SOLR-912</a>\n   */\n  @Deprecated\n  private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {\n    List<Object> result = new ArrayList<>();\n    for (Map.Entry<String, ?> ent : nameValuePairs) {\n      result.add(ent.getKey());\n      result.add(ent.getValue());\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Method to serialize Map.Entry&lt;String, ?&gt; to a List in which the even\n   * indexed elements (0,2,4. ..etc) are Strings and odd elements (1,3,5,) are of\n   * the type \"T\".\n   *\n   * @return Modified List as per the above description\n   * @deprecated This a temporary placeholder method until the guts of the class\n   * are actually replaced by List&lt;String, ?&gt;.\n   * @see <a href=\"https://issues.apache.org/jira/browse/SOLR-912\">SOLR-912</a>\n   */\n  @Deprecated\n  private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {\n    List<Object> result = new ArrayList<Object>();\n    for (Map.Entry<String, ?> ent : nameValuePairs) {\n      result.add(ent.getKey());\n      result.add(ent.getValue());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63a1978c6710c767fa084741e3d6424840003a62","date":1495850671,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","sourceNew":"  /**\n   * Method to serialize Map.Entry&lt;String, ?&gt; to a List in which the even\n   * indexed elements (0,2,4. ..etc) are Strings and odd elements (1,3,5,) are of\n   * the type \"T\".\n   *\n   * <p>\n   * NOTE: This a temporary placeholder method until the guts of the class\n   * are actually replaced by List&lt;String, ?&gt;.\n   * </p>\n   *\n   * @return Modified List as per the above description\n   * @see <a href=\"https://issues.apache.org/jira/browse/SOLR-912\">SOLR-912</a>\n   */\n  private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {\n    List<Object> result = new ArrayList<>();\n    for (Map.Entry<String, ?> ent : nameValuePairs) {\n      result.add(ent.getKey());\n      result.add(ent.getValue());\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Method to serialize Map.Entry&lt;String, ?&gt; to a List in which the even\n   * indexed elements (0,2,4. ..etc) are Strings and odd elements (1,3,5,) are of\n   * the type \"T\".\n   *\n   * @return Modified List as per the above description\n   * @deprecated This a temporary placeholder method until the guts of the class\n   * are actually replaced by List&lt;String, ?&gt;.\n   * @see <a href=\"https://issues.apache.org/jira/browse/SOLR-912\">SOLR-912</a>\n   */\n  @Deprecated\n  private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {\n    List<Object> result = new ArrayList<>();\n    for (Map.Entry<String, ?> ent : nameValuePairs) {\n      result.add(ent.getKey());\n      result.add(ent.getValue());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","sourceNew":"  /**\n   * Method to serialize Map.Entry&lt;String, ?&gt; to a List in which the even\n   * indexed elements (0,2,4. ..etc) are Strings and odd elements (1,3,5,) are of\n   * the type \"T\".\n   *\n   * <p>\n   * NOTE: This a temporary placeholder method until the guts of the class\n   * are actually replaced by List&lt;String, ?&gt;.\n   * </p>\n   *\n   * @return Modified List as per the above description\n   * @see <a href=\"https://issues.apache.org/jira/browse/SOLR-912\">SOLR-912</a>\n   */\n  private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {\n    List<Object> result = new ArrayList<>();\n    for (Map.Entry<String, ?> ent : nameValuePairs) {\n      result.add(ent.getKey());\n      result.add(ent.getValue());\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Method to serialize Map.Entry&lt;String, ?&gt; to a List in which the even\n   * indexed elements (0,2,4. ..etc) are Strings and odd elements (1,3,5,) are of\n   * the type \"T\".\n   *\n   * @return Modified List as per the above description\n   * @deprecated This a temporary placeholder method until the guts of the class\n   * are actually replaced by List&lt;String, ?&gt;.\n   * @see <a href=\"https://issues.apache.org/jira/browse/SOLR-912\">SOLR-912</a>\n   */\n  @Deprecated\n  private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {\n    List<Object> result = new ArrayList<>();\n    for (Map.Entry<String, ?> ent : nameValuePairs) {\n      result.add(ent.getKey());\n      result.add(ent.getValue());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","sourceNew":"  /**\n   * Method to serialize Map.Entry&lt;String, ?&gt; to a List in which the even\n   * indexed elements (0,2,4. ..etc) are Strings and odd elements (1,3,5,) are of\n   * the type \"T\".\n   *\n   * <p>\n   * NOTE: This a temporary placeholder method until the guts of the class\n   * are actually replaced by List&lt;String, ?&gt;.\n   * </p>\n   *\n   * @return Modified List as per the above description\n   * @see <a href=\"https://issues.apache.org/jira/browse/SOLR-912\">SOLR-912</a>\n   */\n  private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {\n    List<Object> result = new ArrayList<>();\n    for (Map.Entry<String, ?> ent : nameValuePairs) {\n      result.add(ent.getKey());\n      result.add(ent.getValue());\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Method to serialize Map.Entry&lt;String, ?&gt; to a List in which the even\n   * indexed elements (0,2,4. ..etc) are Strings and odd elements (1,3,5,) are of\n   * the type \"T\".\n   *\n   * @return Modified List as per the above description\n   * @deprecated This a temporary placeholder method until the guts of the class\n   * are actually replaced by List&lt;String, ?&gt;.\n   * @see <a href=\"https://issues.apache.org/jira/browse/SOLR-912\">SOLR-912</a>\n   */\n  @Deprecated\n  private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {\n    List<Object> result = new ArrayList<>();\n    for (Map.Entry<String, ?> ent : nameValuePairs) {\n      result.add(ent.getKey());\n      result.add(ent.getValue());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3aa429fcc68e0937a220895ff4d7bfcac5b022eb","date":1584973494,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#nameValueMapToList(Map.Entry[String,#-extends-T][]).mjava","sourceNew":"  /**\n   * Method to serialize Map.Entry&lt;String, ?&gt; to a List in which the even\n   * indexed elements (0,2,4. ..etc) are Strings and odd elements (1,3,5,) are of\n   * the type \"T\".\n   *\n   * <p>\n   * NOTE: This a temporary placeholder method until the guts of the class\n   * are actually replaced by List&lt;String, ?&gt;.\n   * </p>\n   *\n   * @return Modified List as per the above description\n   * @see <a href=\"https://issues.apache.org/jira/browse/SOLR-912\">SOLR-912</a>\n   */\n  private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {\n    List<Object> result = new ArrayList<>(nameValuePairs.length << 1);\n    for (Map.Entry<String, ?> ent : nameValuePairs) {\n      result.add(ent.getKey());\n      result.add(ent.getValue());\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Method to serialize Map.Entry&lt;String, ?&gt; to a List in which the even\n   * indexed elements (0,2,4. ..etc) are Strings and odd elements (1,3,5,) are of\n   * the type \"T\".\n   *\n   * <p>\n   * NOTE: This a temporary placeholder method until the guts of the class\n   * are actually replaced by List&lt;String, ?&gt;.\n   * </p>\n   *\n   * @return Modified List as per the above description\n   * @see <a href=\"https://issues.apache.org/jira/browse/SOLR-912\">SOLR-912</a>\n   */\n  private List<Object> nameValueMapToList(Map.Entry<String, ? extends T>[] nameValuePairs) {\n    List<Object> result = new ArrayList<>();\n    for (Map.Entry<String, ?> ent : nameValuePairs) {\n      result.add(ent.getKey());\n      result.add(ent.getValue());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["578eff0bc5aee20ceab0bb85d2e639e93d68c952"],"3aa429fcc68e0937a220895ff4d7bfcac5b022eb":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"578eff0bc5aee20ceab0bb85d2e639e93d68c952":["c26f00b574427b55127e869b935845554afde1fa"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","63a1978c6710c767fa084741e3d6424840003a62"],"63a1978c6710c767fa084741e3d6424840003a62":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","63a1978c6710c767fa084741e3d6424840003a62"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3aa429fcc68e0937a220895ff4d7bfcac5b022eb"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"578eff0bc5aee20ceab0bb85d2e639e93d68c952":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"3aa429fcc68e0937a220895ff4d7bfcac5b022eb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["e9017cf144952056066919f1ebc7897ff9bd71b1","63a1978c6710c767fa084741e3d6424840003a62","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"63a1978c6710c767fa084741e3d6424840003a62":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["578eff0bc5aee20ceab0bb85d2e639e93d68c952"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["3aa429fcc68e0937a220895ff4d7bfcac5b022eb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}