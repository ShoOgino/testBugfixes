{"path":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyReader#LuceneTaxonomyReader(File,String).mjava","commits":[{"id":"89f15687f60bd49cd3d9de427e85c17fd9397d61","date":1309381327,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyReader#LuceneTaxonomyReader(File,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Open for reading a taxonomy stored in a subdirectory of a given\n   * directory on the file system.\n   * @param parentDir The parent directory of the taxonomy's directory\n   * (usually this would be the directory holding the index).\n   * @param name The name of the taxonomy, and the subdirectory holding it. \n   * @throws CorruptIndexException if the Taxonomy is corrupted.\n   * @throws IOException if another error occurred.\n   */  \n  @Deprecated\n  public LuceneTaxonomyReader(File parentDir, String name)\n  throws CorruptIndexException, IOException {\n    this(FSDirectory.open(new File(parentDir, name)));\n    ourDirectory = indexReader.directory(); // remember to close the directory we opened\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyReader#LuceneTaxonomyReader(File,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Open for reading a taxonomy stored in a subdirectory of a given\n   * directory on the file system.\n   * @param parentDir The parent directory of the taxonomy's directory\n   * (usually this would be the directory holding the index).\n   * @param name The name of the taxonomy, and the subdirectory holding it. \n   * @throws CorruptIndexException if the Taxonomy is corrupted.\n   * @throws IOException if another error occurred.\n   */  \n  @Deprecated\n  public LuceneTaxonomyReader(File parentDir, String name)\n  throws CorruptIndexException, IOException {\n    this(FSDirectory.open(new File(parentDir, name)));\n    ourDirectory = indexReader.directory(); // remember to close the directory we opened\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyReader#LuceneTaxonomyReader(File,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Open for reading a taxonomy stored in a subdirectory of a given\n   * directory on the file system.\n   * @param parentDir The parent directory of the taxonomy's directory\n   * (usually this would be the directory holding the index).\n   * @param name The name of the taxonomy, and the subdirectory holding it. \n   * @throws CorruptIndexException if the Taxonomy is corrupted.\n   * @throws IOException if another error occurred.\n   */  \n  @Deprecated\n  public LuceneTaxonomyReader(File parentDir, String name)\n  throws CorruptIndexException, IOException {\n    this(FSDirectory.open(new File(parentDir, name)));\n    ourDirectory = indexReader.directory(); // remember to close the directory we opened\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7fea68ff83c1db2f720597dfcea5bee943a35f35","date":1317817445,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyReader#LuceneTaxonomyReader(File,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Open for reading a taxonomy stored in a subdirectory of a given\n   * directory on the file system.\n   * @param parentDir The parent directory of the taxonomy's directory\n   * (usually this would be the directory holding the index).\n   * @param name The name of the taxonomy, and the subdirectory holding it. \n   * @throws CorruptIndexException if the Taxonomy is corrupted.\n   * @throws IOException if another error occurred.\n   */  \n  @Deprecated\n  public LuceneTaxonomyReader(File parentDir, String name)\n  throws CorruptIndexException, IOException {\n    this(FSDirectory.open(new File(parentDir, name)));\n    ourDirectory = indexReader.directory(); // remember to close the directory we opened\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7fea68ff83c1db2f720597dfcea5bee943a35f35":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","89f15687f60bd49cd3d9de427e85c17fd9397d61"],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","89f15687f60bd49cd3d9de427e85c17fd9397d61"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7fea68ff83c1db2f720597dfcea5bee943a35f35"]},"commit2Childs":{"7fea68ff83c1db2f720597dfcea5bee943a35f35":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d083e83f225b11e5fdd900e83d26ddb385b6955c","89f15687f60bd49cd3d9de427e85c17fd9397d61","817d8435e9135b756f08ce6710ab0baac51bdf88"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["7fea68ff83c1db2f720597dfcea5bee943a35f35","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}