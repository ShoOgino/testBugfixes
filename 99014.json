{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/FSTCompletionTest#testThreeByte().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/FSTCompletionTest#testThreeByte().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/suggest/fst/FSTCompletionTest#testThreeByte().mjava","sourceNew":"  public void testThreeByte() throws Exception {\n    String key = new String(new byte[] {\n        (byte) 0xF0, (byte) 0xA4, (byte) 0xAD, (byte) 0xA2}, \"UTF-8\");\n    FSTCompletionBuilder builder = new FSTCompletionBuilder();\n    builder.add(new BytesRef(key), 0);\n\n    FSTCompletion lookup = builder.build();\n    List<Completion> result = lookup.lookup(stringToCharSequence(key), 1);\n    assertEquals(1, result.size());\n  }\n\n","sourceOld":"  public void testThreeByte() throws Exception {\n    String key = new String(new byte[] {\n        (byte) 0xF0, (byte) 0xA4, (byte) 0xAD, (byte) 0xA2}, \"UTF-8\");\n    FSTCompletionBuilder builder = new FSTCompletionBuilder();\n    builder.add(new BytesRef(key), 0);\n\n    FSTCompletion lookup = builder.build();\n    List<Completion> result = lookup.lookup(stringToCharSequence(key), 1);\n    assertEquals(1, result.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/FSTCompletionTest#testThreeByte().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/FSTCompletionTest#testThreeByte().mjava","sourceNew":"  public void testThreeByte() throws Exception {\n    String key = new String(new byte[] {\n        (byte) 0xF0, (byte) 0xA4, (byte) 0xAD, (byte) 0xA2}, StandardCharsets.UTF_8);\n    FSTCompletionBuilder builder = new FSTCompletionBuilder();\n    builder.add(new BytesRef(key), 0);\n\n    FSTCompletion lookup = builder.build();\n    List<Completion> result = lookup.lookup(stringToCharSequence(key), 1);\n    assertEquals(1, result.size());\n  }\n\n","sourceOld":"  public void testThreeByte() throws Exception {\n    String key = new String(new byte[] {\n        (byte) 0xF0, (byte) 0xA4, (byte) 0xAD, (byte) 0xA2}, \"UTF-8\");\n    FSTCompletionBuilder builder = new FSTCompletionBuilder();\n    builder.add(new BytesRef(key), 0);\n\n    FSTCompletion lookup = builder.build();\n    List<Completion> result = lookup.lookup(stringToCharSequence(key), 1);\n    assertEquals(1, result.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/FSTCompletionTest#testThreeByte().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/FSTCompletionTest#testThreeByte().mjava","sourceNew":"  public void testThreeByte() throws Exception {\n    String key = new String(new byte[] {\n        (byte) 0xF0, (byte) 0xA4, (byte) 0xAD, (byte) 0xA2}, StandardCharsets.UTF_8);\n    FSTCompletionBuilder builder = new FSTCompletionBuilder();\n    builder.add(new BytesRef(key), 0);\n\n    FSTCompletion lookup = builder.build();\n    List<Completion> result = lookup.lookup(stringToCharSequence(key), 1);\n    assertEquals(1, result.size());\n  }\n\n","sourceOld":"  public void testThreeByte() throws Exception {\n    String key = new String(new byte[] {\n        (byte) 0xF0, (byte) 0xA4, (byte) 0xAD, (byte) 0xA2}, \"UTF-8\");\n    FSTCompletionBuilder builder = new FSTCompletionBuilder();\n    builder.add(new BytesRef(key), 0);\n\n    FSTCompletion lookup = builder.build();\n    List<Completion> result = lookup.lookup(stringToCharSequence(key), 1);\n    assertEquals(1, result.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7d89d7e4e5101347833eea558851bf4209218619"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7d89d7e4e5101347833eea558851bf4209218619":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7d89d7e4e5101347833eea558851bf4209218619"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}