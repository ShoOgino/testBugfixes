{"path":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#cleanup().mjava","commits":[{"id":"ab20a04a303d3d2a5078076f4633e0482d643cc0","date":1398201811,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#cleanup().mjava","pathOld":"/dev/null","sourceNew":"  private void cleanup() throws IOException {\n    // It's kind of an implementation detail whether\n    // or not IndexWriter#close calls rollback, so\n    // we assume it may or may not\n    boolean doClose = false;\n    synchronized (CLOSE_LOCK) {\n      if (!isClosed) {\n        doClose = true;\n        isClosed = true;\n      }\n    }\n    if (doClose) {\n      \n      if (infoStream != null) {\n        IOUtils.closeQuietly(infoStream);\n      }\n      numCloses.incrementAndGet();\n      directoryFactory.release(directory);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#cleanup().mjava","pathOld":"/dev/null","sourceNew":"  private void cleanup() throws IOException {\n    // It's kind of an implementation detail whether\n    // or not IndexWriter#close calls rollback, so\n    // we assume it may or may not\n    boolean doClose = false;\n    synchronized (CLOSE_LOCK) {\n      if (!isClosed) {\n        doClose = true;\n        isClosed = true;\n      }\n    }\n    if (doClose) {\n      \n      if (infoStream != null) {\n        IOUtils.closeQuietly(infoStream);\n      }\n      numCloses.incrementAndGet();\n      directoryFactory.release(directory);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e13696c44d3e2405098726359ab81dab178e7bc","date":1476726926,"type":3,"author":"Hrishikesh Gadre","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#cleanup().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#cleanup().mjava","sourceNew":"  private void cleanup() throws IOException {\n    // It's kind of an implementation detail whether\n    // or not IndexWriter#close calls rollback, so\n    // we assume it may or may not\n    boolean doClose = false;\n    synchronized (CLOSE_LOCK) {\n      if (!isClosed) {\n        doClose = true;\n        isClosed = true;\n      }\n    }\n    if (doClose) {\n      \n      if (infoStream != null) {\n        IOUtils.closeQuietly(infoStream);\n      }\n      numCloses.incrementAndGet();\n\n      if (directoryFactory != null) {\n        directoryFactory.release(directory);\n      }\n    }\n  }\n\n","sourceOld":"  private void cleanup() throws IOException {\n    // It's kind of an implementation detail whether\n    // or not IndexWriter#close calls rollback, so\n    // we assume it may or may not\n    boolean doClose = false;\n    synchronized (CLOSE_LOCK) {\n      if (!isClosed) {\n        doClose = true;\n        isClosed = true;\n      }\n    }\n    if (doClose) {\n      \n      if (infoStream != null) {\n        IOUtils.closeQuietly(infoStream);\n      }\n      numCloses.incrementAndGet();\n      directoryFactory.release(directory);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#cleanup().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#cleanup().mjava","sourceNew":"  private void cleanup() throws IOException {\n    // It's kind of an implementation detail whether\n    // or not IndexWriter#close calls rollback, so\n    // we assume it may or may not\n    boolean doClose = false;\n    synchronized (CLOSE_LOCK) {\n      if (!isClosed) {\n        doClose = true;\n        isClosed = true;\n      }\n    }\n    if (doClose) {\n      \n      if (infoStream != null) {\n        IOUtils.closeQuietly(infoStream);\n      }\n      numCloses.incrementAndGet();\n\n      if (directoryFactory != null) {\n        directoryFactory.release(directory);\n      }\n    }\n  }\n\n","sourceOld":"  private void cleanup() throws IOException {\n    // It's kind of an implementation detail whether\n    // or not IndexWriter#close calls rollback, so\n    // we assume it may or may not\n    boolean doClose = false;\n    synchronized (CLOSE_LOCK) {\n      if (!isClosed) {\n        doClose = true;\n        isClosed = true;\n      }\n    }\n    if (doClose) {\n      \n      if (infoStream != null) {\n        IOUtils.closeQuietly(infoStream);\n      }\n      numCloses.incrementAndGet();\n      directoryFactory.release(directory);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","date":1571411704,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#cleanup().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#cleanup().mjava","sourceNew":"  private void cleanup() throws IOException {\n    // It's kind of an implementation detail whether\n    // or not IndexWriter#close calls rollback, so\n    // we assume it may or may not\n    boolean doClose = false;\n    synchronized (CLOSE_LOCK) {\n      if (!isClosed) {\n        doClose = true;\n        isClosed = true;\n      }\n    }\n    if (doClose) {\n      \n      if (infoStream != null) {\n        IOUtils.closeQuietly(infoStream);\n      }\n      numCloses.incrementAndGet();\n\n      if (directoryFactory != null) {\n        directoryFactory.release(directory);\n      }\n      if (solrMetricsContext != null) {\n        solrMetricsContext.unregister();\n      }\n    }\n  }\n\n","sourceOld":"  private void cleanup() throws IOException {\n    // It's kind of an implementation detail whether\n    // or not IndexWriter#close calls rollback, so\n    // we assume it may or may not\n    boolean doClose = false;\n    synchronized (CLOSE_LOCK) {\n      if (!isClosed) {\n        doClose = true;\n        isClosed = true;\n      }\n    }\n    if (doClose) {\n      \n      if (infoStream != null) {\n        IOUtils.closeQuietly(infoStream);\n      }\n      numCloses.incrementAndGet();\n\n      if (directoryFactory != null) {\n        directoryFactory.release(directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e13696c44d3e2405098726359ab81dab178e7bc":["ab20a04a303d3d2a5078076f4633e0482d643cc0"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ab20a04a303d3d2a5078076f4633e0482d643cc0"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["3e13696c44d3e2405098726359ab81dab178e7bc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab20a04a303d3d2a5078076f4633e0482d643cc0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["ab20a04a303d3d2a5078076f4633e0482d643cc0","3e13696c44d3e2405098726359ab81dab178e7bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"]},"commit2Childs":{"3e13696c44d3e2405098726359ab81dab178e7bc":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","ab20a04a303d3d2a5078076f4633e0482d643cc0"],"ab20a04a303d3d2a5078076f4633e0482d643cc0":["3e13696c44d3e2405098726359ab81dab178e7bc","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}