{"path":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#addOrUpdate(String,IndexableFieldType).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#addOrUpdate(String,IndexableFieldType).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addOrUpdate(String,IndexableFieldType).mjava","sourceNew":"  // NOTE: this method does not carry over termVector\n  // booleans nor docValuesType; the indexer chain\n  // (TermVectorsConsumerPerField, DocFieldProcessor) must\n  // set these fields when they succeed in consuming\n  // the document:\n  public FieldInfo addOrUpdate(String name, IndexableFieldType fieldType) {\n    // TODO: really, indexer shouldn't even call this\n    // method (it's only called from DocFieldProcessor);\n    // rather, each component in the chain should update\n    // what it \"owns\".  EG fieldType.indexOptions() should\n    // be updated by maybe FreqProxTermsWriterPerField:\n    return addOrUpdateInternal(name, -1, fieldType.indexed(), false,\n                               fieldType.omitNorms(), false,\n                               fieldType.indexOptions(), null, null);\n  }\n\n","sourceOld":"  // NOTE: this method does not carry over termVector\n  // booleans nor docValuesType; the indexer chain\n  // (TermVectorsConsumerPerField, DocFieldProcessor) must\n  // set these fields when they succeed in consuming\n  // the document:\n  public FieldInfo addOrUpdate(String name, IndexableFieldType fieldType) {\n    // TODO: really, indexer shouldn't even call this\n    // method (it's only called from DocFieldProcessor);\n    // rather, each component in the chain should update\n    // what it \"owns\".  EG fieldType.indexOptions() should\n    // be updated by maybe FreqProxTermsWriterPerField:\n    return addOrUpdateInternal(name, -1, fieldType.indexed(), false,\n                               fieldType.omitNorms(), false,\n                               fieldType.indexOptions(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b","date":1337136355,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MutableFieldInfos#addOrUpdate(String,IndexableFieldType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#addOrUpdate(String,IndexableFieldType).mjava","sourceNew":"  // NOTE: this method does not carry over termVector\n  // booleans nor docValuesType; the indexer chain\n  // (TermVectorsConsumerPerField, DocFieldProcessor) must\n  // set these fields when they succeed in consuming\n  // the document:\n  public FieldInfo addOrUpdate(String name, IndexableFieldType fieldType) {\n    // TODO: really, indexer shouldn't even call this\n    // method (it's only called from DocFieldProcessor);\n    // rather, each component in the chain should update\n    // what it \"owns\".  EG fieldType.indexOptions() should\n    // be updated by maybe FreqProxTermsWriterPerField:\n    return addOrUpdateInternal(name, -1, fieldType.indexed(), false,\n                               fieldType.omitNorms(), false,\n                               fieldType.indexOptions(), null, null);\n  }\n\n","sourceOld":"  // NOTE: this method does not carry over termVector\n  // booleans nor docValuesType; the indexer chain\n  // (TermVectorsConsumerPerField, DocFieldProcessor) must\n  // set these fields when they succeed in consuming\n  // the document:\n  public FieldInfo addOrUpdate(String name, IndexableFieldType fieldType) {\n    // TODO: really, indexer shouldn't even call this\n    // method (it's only called from DocFieldProcessor);\n    // rather, each component in the chain should update\n    // what it \"owns\".  EG fieldType.indexOptions() should\n    // be updated by maybe FreqProxTermsWriterPerField:\n    return addOrUpdateInternal(name, -1, fieldType.indexed(), false,\n                               fieldType.omitNorms(), false,\n                               fieldType.indexOptions(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos#addOrUpdate(String,IndexableFieldType).mjava","sourceNew":null,"sourceOld":"  // NOTE: this method does not carry over termVector\n  // booleans nor docValuesType; the indexer chain\n  // (TermVectorsConsumerPerField, DocFieldProcessor) must\n  // set these fields when they succeed in consuming\n  // the document:\n  public FieldInfo addOrUpdate(String name, IndexableFieldType fieldType) {\n    // TODO: really, indexer shouldn't even call this\n    // method (it's only called from DocFieldProcessor);\n    // rather, each component in the chain should update\n    // what it \"owns\".  EG fieldType.indexOptions() should\n    // be updated by maybe FreqProxTermsWriterPerField:\n    return addOrUpdateInternal(name, -1, fieldType.indexed(), false,\n                               fieldType.omitNorms(), false,\n                               fieldType.indexOptions(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"]},"commit2Childs":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f6eee1e5a8555d83dd8f2f2e3c0a4ccec8e7cf9b":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}