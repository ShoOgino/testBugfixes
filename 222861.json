{"path":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate.SearcherThread#doWork().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate.SearcherThread#doWork().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAtomicUpdate.SearcherThread#doWork().mjava","sourceNew":"    @Override\n    public void doWork() throws Throwable {\n      IndexReader r = IndexReader.open(directory);\n      assertEquals(100, r.numDocs());\n      r.close();\n    }\n\n","sourceOld":"    @Override\n    public void doWork() throws Throwable {\n      IndexReader r = IndexReader.open(directory);\n      assertEquals(100, r.numDocs());\n      r.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate.SearcherThread#doWork().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate.SearcherThread#doWork().mjava","sourceNew":"    @Override\n    public void doWork() throws Throwable {\n      IndexReader r = DirectoryReader.open(directory);\n      assertEquals(100, r.numDocs());\n      r.close();\n    }\n\n","sourceOld":"    @Override\n    public void doWork() throws Throwable {\n      IndexReader r = IndexReader.open(directory);\n      assertEquals(100, r.numDocs());\n      r.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4208ed8e426ae5f75a41d8b4ae53f4587e413061","date":1580475454,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate.SearcherThread#doWork(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAtomicUpdate.SearcherThread#doWork().mjava","sourceNew":"    @Override\n    public void doWork(int currentIteration) throws IOException {\n      IndexReader r = DirectoryReader.open(directory);\n      assertEquals(100, r.numDocs());\n      r.close();\n    }\n\n","sourceOld":"    @Override\n    public void doWork() throws Throwable {\n      IndexReader r = DirectoryReader.open(directory);\n      assertEquals(100, r.numDocs());\n      r.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4208ed8e426ae5f75a41d8b4ae53f4587e413061":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4208ed8e426ae5f75a41d8b4ae53f4587e413061"]},"commit2Childs":{"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["4208ed8e426ae5f75a41d8b4ae53f4587e413061"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4208ed8e426ae5f75a41d8b4ae53f4587e413061":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}