{"path":"lucene/core/src/test/org/apache/lucene/codecs/lucene3x/TestTermInfosReaderIndex#testSeekEnum().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene3x/TestTermInfosReaderIndex#testSeekEnum().mjava","pathOld":"lucene/src/test/org/apache/lucene/codecs/lucene3x/TestTermInfosReaderIndex#testSeekEnum().mjava","sourceNew":"  public void testSeekEnum() throws CorruptIndexException, IOException {\n    int indexPosition = 3;\n    SegmentTermEnum clone = (SegmentTermEnum) termEnum.clone();\n    Term term = findTermThatWouldBeAtIndex(clone, indexPosition);\n    SegmentTermEnum enumerator = clone;\n    index.seekEnum(enumerator, indexPosition);\n    assertEquals(term, enumerator.term());\n    clone.close();\n  }\n\n","sourceOld":"  public void testSeekEnum() throws CorruptIndexException, IOException {\n    int indexPosition = 3;\n    SegmentTermEnum clone = (SegmentTermEnum) termEnum.clone();\n    Term term = findTermThatWouldBeAtIndex(clone, indexPosition);\n    SegmentTermEnum enumerator = clone;\n    index.seekEnum(enumerator, indexPosition);\n    assertEquals(term, enumerator.term());\n    clone.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"76c5c188431927c412f7c71546c5cfcccdc327f8","date":1333289294,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene3x/TestTermInfosReaderIndex#testSeekEnum().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene3x/TestTermInfosReaderIndex#testSeekEnum().mjava","sourceNew":"  public void testSeekEnum() throws CorruptIndexException, IOException {\n    int indexPosition = 3;\n    SegmentTermEnum clone = termEnum.clone();\n    Term term = findTermThatWouldBeAtIndex(clone, indexPosition);\n    SegmentTermEnum enumerator = clone;\n    index.seekEnum(enumerator, indexPosition);\n    assertEquals(term, enumerator.term());\n    clone.close();\n  }\n\n","sourceOld":"  public void testSeekEnum() throws CorruptIndexException, IOException {\n    int indexPosition = 3;\n    SegmentTermEnum clone = (SegmentTermEnum) termEnum.clone();\n    Term term = findTermThatWouldBeAtIndex(clone, indexPosition);\n    SegmentTermEnum enumerator = clone;\n    index.seekEnum(enumerator, indexPosition);\n    assertEquals(term, enumerator.term());\n    clone.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57ae3024996ccdb3c36c42cb890e1efb37df4ce8","date":1338343651,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene3x/TestTermInfosReaderIndex#testSeekEnum().mjava","sourceNew":null,"sourceOld":"  public void testSeekEnum() throws CorruptIndexException, IOException {\n    int indexPosition = 3;\n    SegmentTermEnum clone = termEnum.clone();\n    Term term = findTermThatWouldBeAtIndex(clone, indexPosition);\n    SegmentTermEnum enumerator = clone;\n    index.seekEnum(enumerator, indexPosition);\n    assertEquals(term, enumerator.term());\n    clone.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"76c5c188431927c412f7c71546c5cfcccdc327f8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["76c5c188431927c412f7c71546c5cfcccdc327f8"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"]},"commit2Childs":{"76c5c188431927c412f7c71546c5cfcccdc327f8":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["76c5c188431927c412f7c71546c5cfcccdc327f8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}