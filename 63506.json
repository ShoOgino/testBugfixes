{"path":"contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","commits":[{"id":"48bedd31c61edafb8baaff4bcbcac19449fb7c3a","date":1251468037,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","pathOld":"contrib/miscellaneous/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","sourceNew":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n    if (!args[1].equals(\"-n\")) {\n      try {\n        Class simClass = Class.forName(args[1]);\n        s = (Similarity)simClass.newInstance();\n      } catch (Exception e) {\n        System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n        e.printStackTrace(System.err);\n        System.exit(1);\n      }\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","sourceOld":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n    if (!args[1].equals(\"-n\")) {\n      try {\n        Class simClass = Class.forName(args[1]);\n        s = (Similarity)simClass.newInstance();\n      } catch (Exception e) {\n        System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n        e.printStackTrace(System.err);\n        System.exit(1);\n      }\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f11899016a0460a7ea2e4b008d002e1e75c7d867","date":1256772085,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","sourceNew":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n    if (!args[1].equals(\"-n\")) {\n      try {\n        s = Class.forName(args[1]).asSubclass(Similarity.class).newInstance();\n      } catch (Exception e) {\n        System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n        e.printStackTrace(System.err);\n        System.exit(1);\n      }\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","sourceOld":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n    if (!args[1].equals(\"-n\")) {\n      try {\n        Class simClass = Class.forName(args[1]);\n        s = (Similarity)simClass.newInstance();\n      } catch (Exception e) {\n        System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n        e.printStackTrace(System.err);\n        System.exit(1);\n      }\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","sourceNew":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n    if (!args[1].equals(\"-n\")) {\n      try {\n        s = Class.forName(args[1]).asSubclass(Similarity.class).newInstance();\n      } catch (Exception e) {\n        System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n        e.printStackTrace(System.err);\n        System.exit(1);\n      }\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","sourceOld":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n    if (!args[1].equals(\"-n\")) {\n      try {\n        s = Class.forName(args[1]).asSubclass(Similarity.class).newInstance();\n      } catch (Exception e) {\n        System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n        e.printStackTrace(System.err);\n        System.exit(1);\n      }\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["f11899016a0460a7ea2e4b008d002e1e75c7d867"],"f11899016a0460a7ea2e4b008d002e1e75c7d867":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"]},"commit2Childs":{"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["f11899016a0460a7ea2e4b008d002e1e75c7d867"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f11899016a0460a7ea2e4b008d002e1e75c7d867":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}