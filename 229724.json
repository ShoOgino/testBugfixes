{"path":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribAdd(AddUpdateCommand,List[Node],ModifiableSolrParams,boolean,RequestReplicationTracker).mjava","commits":[{"id":"9d22d0f5940f155267b250876fa797ff69e8e6e7","date":1400540695,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribAdd(AddUpdateCommand,List[Node],ModifiableSolrParams,boolean,RequestReplicationTracker).mjava","pathOld":"/dev/null","sourceNew":"  public void distribAdd(AddUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean synchronous, RequestReplicationTracker rrt) throws IOException {  \n\n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      uReq.setParams(params);\n      uReq.add(cmd.solrDoc, cmd.commitWithin, cmd.overwrite);\n      submit(new Req(cmd.toString(), node, uReq, synchronous, rrt));\n    }\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e483b96a4c951399b8188cbf6a2e8c0d6b95ba6b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribAdd(AddUpdateCommand,List[Node],ModifiableSolrParams,boolean,RequestReplicationTracker).mjava","pathOld":"/dev/null","sourceNew":"  public void distribAdd(AddUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean synchronous, RequestReplicationTracker rrt) throws IOException {  \n\n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      uReq.setParams(params);\n      uReq.add(cmd.solrDoc, cmd.commitWithin, cmd.overwrite);\n      submit(new Req(cmd.toString(), node, uReq, synchronous, rrt));\n    }\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e483b96a4c951399b8188cbf6a2e8c0d6b95ba6b","date":1406573123,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribAdd(AddUpdateCommand,List[Node],ModifiableSolrParams,boolean,RequestReplicationTracker).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribAdd(AddUpdateCommand,List[Node],ModifiableSolrParams,boolean,RequestReplicationTracker).mjava","sourceNew":"  public void distribAdd(AddUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean synchronous, RequestReplicationTracker rrt) throws IOException {  \n\n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      uReq.setParams(params);\n      uReq.add(cmd.solrDoc, cmd.commitWithin, cmd.overwrite);\n      submit(new Req(cmd.toString(), node, uReq, synchronous, rrt), false);\n    }\n    \n  }\n\n","sourceOld":"  public void distribAdd(AddUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean synchronous, RequestReplicationTracker rrt) throws IOException {  \n\n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      uReq.setParams(params);\n      uReq.add(cmd.solrDoc, cmd.commitWithin, cmd.overwrite);\n      submit(new Req(cmd.toString(), node, uReq, synchronous, rrt));\n    }\n    \n  }\n\n","bugFix":["9d22d0f5940f155267b250876fa797ff69e8e6e7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7749d6fa52f4781f8f7488f2bd18b0fbb5959d0b","date":1432083803,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribAdd(AddUpdateCommand,List[Node],ModifiableSolrParams,boolean,RequestReplicationTracker).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribAdd(AddUpdateCommand,List[Node],ModifiableSolrParams,boolean,RequestReplicationTracker).mjava","sourceNew":"  public void distribAdd(AddUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean synchronous, RequestReplicationTracker rrt) throws IOException {  \n    String cmdStr = cmd.toString();\n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      if (cmd.isLastDocInBatch)\n        uReq.lastDocInBatch();\n      uReq.setParams(params);\n      uReq.add(cmd.solrDoc, cmd.commitWithin, cmd.overwrite);\n      submit(new Req(cmdStr, node, uReq, synchronous, rrt, cmd.pollQueueTime), false);\n    }\n    \n  }\n\n","sourceOld":"  public void distribAdd(AddUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean synchronous, RequestReplicationTracker rrt) throws IOException {  \n\n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      uReq.setParams(params);\n      uReq.add(cmd.solrDoc, cmd.commitWithin, cmd.overwrite);\n      submit(new Req(cmd.toString(), node, uReq, synchronous, rrt), false);\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef","date":1458928975,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribAdd(AddUpdateCommand,List[Node],ModifiableSolrParams,boolean,RequestReplicationTracker).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribAdd(AddUpdateCommand,List[Node],ModifiableSolrParams,boolean,RequestReplicationTracker).mjava","sourceNew":"  public void distribAdd(AddUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean synchronous, RequestReplicationTracker rrt) throws IOException {  \n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      if (cmd.isLastDocInBatch)\n        uReq.lastDocInBatch();\n      uReq.setParams(params);\n      uReq.add(cmd.solrDoc, cmd.commitWithin, cmd.overwrite);\n      submit(new Req(cmd, node, uReq, synchronous, rrt, cmd.pollQueueTime), false);\n    }\n    \n  }\n\n","sourceOld":"  public void distribAdd(AddUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean synchronous, RequestReplicationTracker rrt) throws IOException {  \n    String cmdStr = cmd.toString();\n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      if (cmd.isLastDocInBatch)\n        uReq.lastDocInBatch();\n      uReq.setParams(params);\n      uReq.add(cmd.solrDoc, cmd.commitWithin, cmd.overwrite);\n      submit(new Req(cmdStr, node, uReq, synchronous, rrt, cmd.pollQueueTime), false);\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"415bbbe7da8065dd3c477bdc3c703c6425622998","date":1485393793,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribAdd(AddUpdateCommand,List[Node],ModifiableSolrParams,boolean,RequestReplicationTracker).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribAdd(AddUpdateCommand,List[Node],ModifiableSolrParams,boolean,RequestReplicationTracker).mjava","sourceNew":"  public void distribAdd(AddUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean synchronous, RequestReplicationTracker rrt) throws IOException {  \n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      if (cmd.isLastDocInBatch)\n        uReq.lastDocInBatch();\n      uReq.setParams(params);\n      uReq.add(cmd.solrDoc, cmd.commitWithin, cmd.overwrite);\n      if (cmd.isInPlaceUpdate()) {\n        params.set(DistributedUpdateProcessor.DISTRIB_INPLACE_PREVVERSION, String.valueOf(cmd.prevVersion));\n      }\n      submit(new Req(cmd, node, uReq, synchronous, rrt, cmd.pollQueueTime), false);\n    }\n    \n  }\n\n","sourceOld":"  public void distribAdd(AddUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean synchronous, RequestReplicationTracker rrt) throws IOException {  \n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      if (cmd.isLastDocInBatch)\n        uReq.lastDocInBatch();\n      uReq.setParams(params);\n      uReq.add(cmd.solrDoc, cmd.commitWithin, cmd.overwrite);\n      submit(new Req(cmd, node, uReq, synchronous, rrt, cmd.pollQueueTime), false);\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"598b5d23aa7c9732bf473c21a9cd309c44599394","date":1485530378,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribAdd(AddUpdateCommand,List[Node],ModifiableSolrParams,boolean,RequestReplicationTracker).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribAdd(AddUpdateCommand,List[Node],ModifiableSolrParams,boolean,RequestReplicationTracker).mjava","sourceNew":"  public void distribAdd(AddUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean synchronous, RequestReplicationTracker rrt) throws IOException {  \n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      if (cmd.isLastDocInBatch)\n        uReq.lastDocInBatch();\n      uReq.setParams(params);\n      uReq.add(cmd.solrDoc, cmd.commitWithin, cmd.overwrite);\n      if (cmd.isInPlaceUpdate()) {\n        params.set(DistributedUpdateProcessor.DISTRIB_INPLACE_PREVVERSION, String.valueOf(cmd.prevVersion));\n      }\n      submit(new Req(cmd, node, uReq, synchronous, rrt, cmd.pollQueueTime), false);\n    }\n    \n  }\n\n","sourceOld":"  public void distribAdd(AddUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean synchronous, RequestReplicationTracker rrt) throws IOException {  \n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      if (cmd.isLastDocInBatch)\n        uReq.lastDocInBatch();\n      uReq.setParams(params);\n      uReq.add(cmd.solrDoc, cmd.commitWithin, cmd.overwrite);\n      submit(new Req(cmd, node, uReq, synchronous, rrt, cmd.pollQueueTime), false);\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7ca1cace44c816965501b934686a2354382f000","date":1487792658,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribAdd(AddUpdateCommand,List[Node],ModifiableSolrParams,boolean,RequestReplicationTracker).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribAdd(AddUpdateCommand,List[Node],ModifiableSolrParams,boolean,RequestReplicationTracker).mjava","sourceNew":"  public void distribAdd(AddUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean synchronous, RequestReplicationTracker rrt) throws IOException {  \n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      if (cmd.isLastDocInBatch)\n        uReq.lastDocInBatch();\n      uReq.setParams(params);\n      uReq.add(cmd.solrDoc, cmd.commitWithin, cmd.overwrite);\n      if (cmd.isInPlaceUpdate()) {\n        params.set(DistributedUpdateProcessor.DISTRIB_INPLACE_PREVVERSION, String.valueOf(cmd.prevVersion));\n      }\n      submit(new Req(cmd, node, uReq, synchronous, rrt), false);\n    }\n    \n  }\n\n","sourceOld":"  public void distribAdd(AddUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean synchronous, RequestReplicationTracker rrt) throws IOException {  \n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      if (cmd.isLastDocInBatch)\n        uReq.lastDocInBatch();\n      uReq.setParams(params);\n      uReq.add(cmd.solrDoc, cmd.commitWithin, cmd.overwrite);\n      if (cmd.isInPlaceUpdate()) {\n        params.set(DistributedUpdateProcessor.DISTRIB_INPLACE_PREVVERSION, String.valueOf(cmd.prevVersion));\n      }\n      submit(new Req(cmd, node, uReq, synchronous, rrt, cmd.pollQueueTime), false);\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615bf5b56d95ed8c9bf06a402db6c817d6bff21a","date":1509492118,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribAdd(AddUpdateCommand,List[Node],ModifiableSolrParams,boolean,RollupRequestReplicationTracker,LeaderRequestReplicationTracker).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrCmdDistributor#distribAdd(AddUpdateCommand,List[Node],ModifiableSolrParams,boolean,RequestReplicationTracker).mjava","sourceNew":"  public void distribAdd(AddUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean synchronous,\n                         RollupRequestReplicationTracker rollupTracker,\n                         LeaderRequestReplicationTracker leaderTracker) throws IOException {\n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      if (cmd.isLastDocInBatch)\n        uReq.lastDocInBatch();\n      uReq.setParams(params);\n      uReq.add(cmd.solrDoc, cmd.commitWithin, cmd.overwrite);\n      if (cmd.isInPlaceUpdate()) {\n        params.set(DistributedUpdateProcessor.DISTRIB_INPLACE_PREVVERSION, String.valueOf(cmd.prevVersion));\n      }\n      submit(new Req(cmd, node, uReq, synchronous, rollupTracker, leaderTracker), false);\n    }\n    \n  }\n\n","sourceOld":"  public void distribAdd(AddUpdateCommand cmd, List<Node> nodes, ModifiableSolrParams params, boolean synchronous, RequestReplicationTracker rrt) throws IOException {  \n    for (Node node : nodes) {\n      UpdateRequest uReq = new UpdateRequest();\n      if (cmd.isLastDocInBatch)\n        uReq.lastDocInBatch();\n      uReq.setParams(params);\n      uReq.add(cmd.solrDoc, cmd.commitWithin, cmd.overwrite);\n      if (cmd.isInPlaceUpdate()) {\n        params.set(DistributedUpdateProcessor.DISTRIB_INPLACE_PREVVERSION, String.valueOf(cmd.prevVersion));\n      }\n      submit(new Req(cmd, node, uReq, synchronous, rrt), false);\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef"],"598b5d23aa7c9732bf473c21a9cd309c44599394":["f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef","415bbbe7da8065dd3c477bdc3c703c6425622998"],"9d22d0f5940f155267b250876fa797ff69e8e6e7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7749d6fa52f4781f8f7488f2bd18b0fbb5959d0b":["e483b96a4c951399b8188cbf6a2e8c0d6b95ba6b"],"e483b96a4c951399b8188cbf6a2e8c0d6b95ba6b":["9d22d0f5940f155267b250876fa797ff69e8e6e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef":["7749d6fa52f4781f8f7488f2bd18b0fbb5959d0b"],"615bf5b56d95ed8c9bf06a402db6c817d6bff21a":["c7ca1cace44c816965501b934686a2354382f000"],"b7605579001505896d48b07160075a5c8b8e128e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9d22d0f5940f155267b250876fa797ff69e8e6e7"],"c7ca1cace44c816965501b934686a2354382f000":["415bbbe7da8065dd3c477bdc3c703c6425622998"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615bf5b56d95ed8c9bf06a402db6c817d6bff21a"]},"commit2Childs":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["598b5d23aa7c9732bf473c21a9cd309c44599394","c7ca1cace44c816965501b934686a2354382f000"],"598b5d23aa7c9732bf473c21a9cd309c44599394":[],"9d22d0f5940f155267b250876fa797ff69e8e6e7":["e483b96a4c951399b8188cbf6a2e8c0d6b95ba6b","b7605579001505896d48b07160075a5c8b8e128e"],"7749d6fa52f4781f8f7488f2bd18b0fbb5959d0b":["f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9d22d0f5940f155267b250876fa797ff69e8e6e7","b7605579001505896d48b07160075a5c8b8e128e"],"e483b96a4c951399b8188cbf6a2e8c0d6b95ba6b":["7749d6fa52f4781f8f7488f2bd18b0fbb5959d0b"],"f57cf082c4d2ee975c6a2034fcf3c13f9514e6ef":["415bbbe7da8065dd3c477bdc3c703c6425622998","598b5d23aa7c9732bf473c21a9cd309c44599394"],"615bf5b56d95ed8c9bf06a402db6c817d6bff21a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b7605579001505896d48b07160075a5c8b8e128e":[],"c7ca1cace44c816965501b934686a2354382f000":["615bf5b56d95ed8c9bf06a402db6c817d6bff21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["598b5d23aa7c9732bf473c21a9cd309c44599394","b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}