{"path":"lucene/src/test-framework/java/org/apache/lucene/search/ShardSearchingTestBase#searchNode(int,long[],Query,Sort,int,ScoreDoc).mjava","commits":[{"id":"226aae72c0326f4299c16280195bade4530de537","date":1324221898,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/search/ShardSearchingTestBase#searchNode(int,long[],Query,Sort,int,ScoreDoc).mjava","pathOld":"/dev/null","sourceNew":"  // MOCK: in a real env you have to hit the wire\n  // (send this query to all remote nodes\n  // concurrently):\n  TopDocs searchNode(int nodeID, long[] nodeVersions, Query q, Sort sort, int numHits, ScoreDoc searchAfter) throws IOException {\n    final NodeState.ShardIndexSearcher s = nodes[nodeID].acquire(nodeVersions);\n    try {\n      if (sort == null) {\n        if (searchAfter != null) {\n          return s.localSearchAfter(searchAfter, q, numHits);\n        } else {\n          return s.localSearch(q, numHits);\n        }\n      } else {\n        assert searchAfter == null;  // not supported yet\n        return s.localSearch(q, numHits, sort);\n      }\n    } finally {\n      nodes[nodeID].release(s);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase#searchNode(int,long[],Query,Sort,int,ScoreDoc).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/search/ShardSearchingTestBase#searchNode(int,long[],Query,Sort,int,ScoreDoc).mjava","sourceNew":"  // MOCK: in a real env you have to hit the wire\n  // (send this query to all remote nodes\n  // concurrently):\n  TopDocs searchNode(int nodeID, long[] nodeVersions, Query q, Sort sort, int numHits, ScoreDoc searchAfter) throws IOException {\n    final NodeState.ShardIndexSearcher s = nodes[nodeID].acquire(nodeVersions);\n    try {\n      if (sort == null) {\n        if (searchAfter != null) {\n          return s.localSearchAfter(searchAfter, q, numHits);\n        } else {\n          return s.localSearch(q, numHits);\n        }\n      } else {\n        assert searchAfter == null;  // not supported yet\n        return s.localSearch(q, numHits, sort);\n      }\n    } finally {\n      nodes[nodeID].release(s);\n    }\n  }\n\n","sourceOld":"  // MOCK: in a real env you have to hit the wire\n  // (send this query to all remote nodes\n  // concurrently):\n  TopDocs searchNode(int nodeID, long[] nodeVersions, Query q, Sort sort, int numHits, ScoreDoc searchAfter) throws IOException {\n    final NodeState.ShardIndexSearcher s = nodes[nodeID].acquire(nodeVersions);\n    try {\n      if (sort == null) {\n        if (searchAfter != null) {\n          return s.localSearchAfter(searchAfter, q, numHits);\n        } else {\n          return s.localSearch(q, numHits);\n        }\n      } else {\n        assert searchAfter == null;  // not supported yet\n        return s.localSearch(q, numHits, sort);\n      }\n    } finally {\n      nodes[nodeID].release(s);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["226aae72c0326f4299c16280195bade4530de537"],"226aae72c0326f4299c16280195bade4530de537":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"226aae72c0326f4299c16280195bade4530de537":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["226aae72c0326f4299c16280195bade4530de537"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}