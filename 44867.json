{"path":"solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd#validateAllCollectionsExistAndNoDuplicates(List[String],ZkStateReader).mjava","commits":[{"id":"b627755385655c7cd3fb296f17593658805cf4d5","date":1552455143,"type":1,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd#validateAllCollectionsExistAndNoDuplicates(List[String],ZkStateReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd#validateAllCollectionsExistAndNoDups(List[String],ZkStateReader).mjava","sourceNew":"  private void validateAllCollectionsExistAndNoDuplicates(List<String> collectionList, ZkStateReader zkStateReader) {\n    final String collectionStr = StrUtils.join(collectionList, ',');\n\n    if (new HashSet<>(collectionList).size() != collectionList.size()) {\n      throw new SolrException(BAD_REQUEST,\n          String.format(Locale.ROOT,  \"Can't create collection alias for collections='%s', since it contains duplicates\", collectionStr));\n    }\n    ClusterState clusterState = zkStateReader.getClusterState();\n    Set<String> aliasNames = zkStateReader.getAliases().getCollectionAliasListMap().keySet();\n    for (String collection : collectionList) {\n      if (clusterState.getCollectionOrNull(collection) == null && !aliasNames.contains(collection)) {\n        throw new SolrException(BAD_REQUEST,\n            String.format(Locale.ROOT,  \"Can't create collection alias for collections='%s', '%s' is not an existing collection or alias\", collectionStr, collection));\n      }\n    }\n  }\n\n","sourceOld":"  private void validateAllCollectionsExistAndNoDups(List<String> collectionList, ZkStateReader zkStateReader) {\n    final String collectionStr = StrUtils.join(collectionList, ',');\n\n    if (new HashSet<>(collectionList).size() != collectionList.size()) {\n      throw new SolrException(BAD_REQUEST,\n          String.format(Locale.ROOT,  \"Can't create collection alias for collections='%s', since it contains duplicates\", collectionStr));\n    }\n    ClusterState clusterState = zkStateReader.getClusterState();\n    Set<String> aliasNames = zkStateReader.getAliases().getCollectionAliasListMap().keySet();\n    for (String collection : collectionList) {\n      if (clusterState.getCollectionOrNull(collection) == null && !aliasNames.contains(collection)) {\n        throw new SolrException(BAD_REQUEST,\n            String.format(Locale.ROOT,  \"Can't create collection alias for collections='%s', '%s' is not an existing collection or alias\", collectionStr, collection));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b627755385655c7cd3fb296f17593658805cf4d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b627755385655c7cd3fb296f17593658805cf4d5"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b627755385655c7cd3fb296f17593658805cf4d5"],"b627755385655c7cd3fb296f17593658805cf4d5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}