{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#createCompoundFile(String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#createCompoundFile(String).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter#createCompoundFile(String).mjava","sourceNew":"  /** Build compound file for the segment we just flushed */\n  void createCompoundFile(String segment) throws IOException {\n    \n    CompoundFileWriter cfsWriter = new CompoundFileWriter(directory, \n        IndexFileNames.segmentFileName(segment, IndexFileNames.COMPOUND_FILE_EXTENSION));\n    for (final String flushedFile : flushState.flushedFiles)\n      cfsWriter.addFile(flushedFile);\n      \n    // Perform the merge\n    cfsWriter.close();\n  }\n\n","sourceOld":"  /** Build compound file for the segment we just flushed */\n  void createCompoundFile(String segment) throws IOException {\n    \n    CompoundFileWriter cfsWriter = new CompoundFileWriter(directory, \n        IndexFileNames.segmentFileName(segment, IndexFileNames.COMPOUND_FILE_EXTENSION));\n    for (final String flushedFile : flushState.flushedFiles)\n      cfsWriter.addFile(flushedFile);\n      \n    // Perform the merge\n    cfsWriter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#createCompoundFile(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#createCompoundFile(String).mjava","sourceNew":"  /** Build compound file for the segment we just flushed */\n  void createCompoundFile(String segment) throws IOException {\n    \n    CompoundFileWriter cfsWriter = new CompoundFileWriter(directory, \n        IndexFileNames.segmentFileName(segment, IndexFileNames.COMPOUND_FILE_EXTENSION));\n    for(String fileName : flushState.flushedFiles) {\n      cfsWriter.addFile(fileName);\n    }\n      \n    // Perform the merge\n    cfsWriter.close();\n  }\n\n","sourceOld":"  /** Build compound file for the segment we just flushed */\n  void createCompoundFile(String segment) throws IOException {\n    \n    CompoundFileWriter cfsWriter = new CompoundFileWriter(directory, \n        IndexFileNames.segmentFileName(segment, IndexFileNames.COMPOUND_FILE_EXTENSION));\n    for (final String flushedFile : flushState.flushedFiles)\n      cfsWriter.addFile(flushedFile);\n      \n    // Perform the merge\n    cfsWriter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fb10b6bcde550b87d8f10e5f010bd8f3021023b6","date":1274974592,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#createCompoundFile(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#createCompoundFile(String).mjava","sourceNew":"  /** Build compound file for the segment we just flushed */\n  void createCompoundFile(String segment) throws IOException {\n    \n    CompoundFileWriter cfsWriter = new CompoundFileWriter(directory, \n        IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n    for(String fileName : flushState.flushedFiles) {\n      cfsWriter.addFile(fileName);\n    }\n      \n    // Perform the merge\n    cfsWriter.close();\n  }\n\n","sourceOld":"  /** Build compound file for the segment we just flushed */\n  void createCompoundFile(String segment) throws IOException {\n    \n    CompoundFileWriter cfsWriter = new CompoundFileWriter(directory, \n        IndexFileNames.segmentFileName(segment, IndexFileNames.COMPOUND_FILE_EXTENSION));\n    for(String fileName : flushState.flushedFiles) {\n      cfsWriter.addFile(fileName);\n    }\n      \n    // Perform the merge\n    cfsWriter.close();\n  }\n\n","bugFix":null,"bugIntro":["5ef87af8c7bd0f8429622b83aa74202383f2e757","5ef87af8c7bd0f8429622b83aa74202383f2e757","5ef87af8c7bd0f8429622b83aa74202383f2e757"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9b832cbed6eb3d54a8bb9339296bdda8eeb53014","date":1279708040,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#createCompoundFile(String,DocumentsWriterPerThread).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#createCompoundFile(String).mjava","sourceNew":"  /** Build compound file for the segment we just flushed */\n  void createCompoundFile(String segment, DocumentsWriterPerThread perThread) throws IOException {\n    \n    CompoundFileWriter cfsWriter = new CompoundFileWriter(directory, \n        IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n    for(String fileName : perThread.flushState.flushedFiles) {\n      cfsWriter.addFile(fileName);\n    }\n      \n    // Perform the merge\n    cfsWriter.close();\n  }\n\n","sourceOld":"  /** Build compound file for the segment we just flushed */\n  void createCompoundFile(String segment) throws IOException {\n    \n    CompoundFileWriter cfsWriter = new CompoundFileWriter(directory, \n        IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n    for(String fileName : flushState.flushedFiles) {\n      cfsWriter.addFile(fileName);\n    }\n      \n    // Perform the merge\n    cfsWriter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"334c1175813aea771a71728cd2c4ee4754fd0603","date":1279710173,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#createCompoundFile(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#createCompoundFile(String,DocumentsWriterPerThread).mjava","sourceNew":"  /** Build compound file for the segment we just flushed */\n  void createCompoundFile(String segment) throws IOException {\n    \n    CompoundFileWriter cfsWriter = new CompoundFileWriter(directory, \n        IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n    for(String fileName : flushState.flushedFiles) {\n      cfsWriter.addFile(fileName);\n    }\n      \n    // Perform the merge\n    cfsWriter.close();\n  }\n\n","sourceOld":"  /** Build compound file for the segment we just flushed */\n  void createCompoundFile(String segment, DocumentsWriterPerThread perThread) throws IOException {\n    \n    CompoundFileWriter cfsWriter = new CompoundFileWriter(directory, \n        IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n    for(String fileName : perThread.flushState.flushedFiles) {\n      cfsWriter.addFile(fileName);\n    }\n      \n    // Perform the merge\n    cfsWriter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fe956d65251358d755c56f14fe8380644790e47","date":1279711318,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#createCompoundFile(String,DocumentsWriterPerThread).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#createCompoundFile(String).mjava","sourceNew":"  /** Build compound file for the segment we just flushed */\n  void createCompoundFile(String segment, DocumentsWriterPerThread perThread) throws IOException {\n    \n    CompoundFileWriter cfsWriter = new CompoundFileWriter(directory, \n        IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n    for(String fileName : perThread.flushState.flushedFiles) {\n      cfsWriter.addFile(fileName);\n    }\n      \n    // Perform the merge\n    cfsWriter.close();\n  }\n\n","sourceOld":"  /** Build compound file for the segment we just flushed */\n  void createCompoundFile(String segment) throws IOException {\n    \n    CompoundFileWriter cfsWriter = new CompoundFileWriter(directory, \n        IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n    for(String fileName : flushState.flushedFiles) {\n      cfsWriter.addFile(fileName);\n    }\n      \n    // Perform the merge\n    cfsWriter.close();\n  }\n\n","bugFix":null,"bugIntro":["5ef87af8c7bd0f8429622b83aa74202383f2e757"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"44fcbde6fb2ac44ee3b45e013e54a42911e689ff","date":1292065621,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#createCompoundFile(String).mjava","sourceNew":null,"sourceOld":"  /** Build compound file for the segment we just flushed */\n  void createCompoundFile(String segment) throws IOException {\n    \n    CompoundFileWriter cfsWriter = new CompoundFileWriter(directory, \n        IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n    for(String fileName : flushState.flushedFiles) {\n      cfsWriter.addFile(fileName);\n    }\n      \n    // Perform the merge\n    cfsWriter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#createCompoundFile(String).mjava","sourceNew":null,"sourceOld":"  /** Build compound file for the segment we just flushed */\n  void createCompoundFile(String segment) throws IOException {\n    \n    CompoundFileWriter cfsWriter = new CompoundFileWriter(directory, \n        IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n    for(String fileName : flushState.flushedFiles) {\n      cfsWriter.addFile(fileName);\n    }\n      \n    // Perform the merge\n    cfsWriter.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["334c1175813aea771a71728cd2c4ee4754fd0603"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8fe956d65251358d755c56f14fe8380644790e47":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["334c1175813aea771a71728cd2c4ee4754fd0603","44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"334c1175813aea771a71728cd2c4ee4754fd0603":["9b832cbed6eb3d54a8bb9339296bdda8eeb53014"],"9b832cbed6eb3d54a8bb9339296bdda8eeb53014":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"8fe956d65251358d755c56f14fe8380644790e47":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":[],"334c1175813aea771a71728cd2c4ee4754fd0603":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"9b832cbed6eb3d54a8bb9339296bdda8eeb53014":["334c1175813aea771a71728cd2c4ee4754fd0603"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["8fe956d65251358d755c56f14fe8380644790e47","9b832cbed6eb3d54a8bb9339296bdda8eeb53014"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8fe956d65251358d755c56f14fe8380644790e47","ab5cb6a74aefb78aa0569857970b9151dfe2e787","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}