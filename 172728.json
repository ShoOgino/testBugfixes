{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetResultsHandler#rearrangeFacetResult(FacetResult).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetResultsHandler#rearrangeFacetResult(FacetResult).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/search/FacetResultsHandler#rearrangeFacetResult(FacetResult).mjava","sourceNew":"  /**\n   * Perform any rearrangement as required on a facet result that has changed after\n   * it was rendered.\n   * <P>\n   * Possible use case: a sampling facets accumulator invoked another \n   * other facets accumulator on a sample set of documents, obtained\n   * rendered facet results, fixed their counts, and now it is needed \n   * to sort the results differently according to the fixed counts. \n   * @param facetResult result to be rearranged.\n   * @see FacetResultNode#setValue(double)\n   */\n  public abstract FacetResult rearrangeFacetResult(FacetResult facetResult);\n\n","sourceOld":"  /**\n   * Perform any rearrangement as required on a facet result that has changed after\n   * it was rendered.\n   * <P>\n   * Possible use case: a sampling facets accumulator invoked another \n   * other facets accumulator on a sample set of documents, obtained\n   * rendered facet results, fixed their counts, and now it is needed \n   * to sort the results differently according to the fixed counts. \n   * @param facetResult result to be rearranged.\n   * @see FacetResultNode#setValue(double)\n   */\n  public abstract FacetResult rearrangeFacetResult(FacetResult facetResult);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"811cdb4a80352766eb0c762e48972707a924e5cd","date":1358767313,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetResultsHandler#rearrangeFacetResult(FacetResult).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetResultsHandler#rearrangeFacetResult(FacetResult).mjava","sourceNew":"  /**\n   * Perform any rearrangement as required on a facet result that has changed after\n   * it was rendered.\n   * <P>\n   * Possible use case: a sampling facets accumulator invoked another \n   * other facets accumulator on a sample set of documents, obtained\n   * rendered facet results, fixed their counts, and now it is needed \n   * to sort the results differently according to the fixed counts. \n   * @param facetResult result to be rearranged.\n   * @see FacetResultNode#value\n   */\n  public abstract FacetResult rearrangeFacetResult(FacetResult facetResult);\n\n","sourceOld":"  /**\n   * Perform any rearrangement as required on a facet result that has changed after\n   * it was rendered.\n   * <P>\n   * Possible use case: a sampling facets accumulator invoked another \n   * other facets accumulator on a sample set of documents, obtained\n   * rendered facet results, fixed their counts, and now it is needed \n   * to sort the results differently according to the fixed counts. \n   * @param facetResult result to be rearranged.\n   * @see FacetResultNode#setValue(double)\n   */\n  public abstract FacetResult rearrangeFacetResult(FacetResult facetResult);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetResultsHandler#rearrangeFacetResult(FacetResult).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetResultsHandler#rearrangeFacetResult(FacetResult).mjava","sourceNew":"  /**\n   * Perform any rearrangement as required on a facet result that has changed after\n   * it was rendered.\n   * <P>\n   * Possible use case: a sampling facets accumulator invoked another \n   * other facets accumulator on a sample set of documents, obtained\n   * rendered facet results, fixed their counts, and now it is needed \n   * to sort the results differently according to the fixed counts. \n   * @param facetResult result to be rearranged.\n   * @see FacetResultNode#value\n   */\n  public abstract FacetResult rearrangeFacetResult(FacetResult facetResult);\n\n","sourceOld":"  /**\n   * Perform any rearrangement as required on a facet result that has changed after\n   * it was rendered.\n   * <P>\n   * Possible use case: a sampling facets accumulator invoked another \n   * other facets accumulator on a sample set of documents, obtained\n   * rendered facet results, fixed their counts, and now it is needed \n   * to sort the results differently according to the fixed counts. \n   * @param facetResult result to be rearranged.\n   * @see FacetResultNode#setValue(double)\n   */\n  public abstract FacetResult rearrangeFacetResult(FacetResult facetResult);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"571abba77e55fea386a38c0024f72ffa5b37a9ad","date":1360272747,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/partitions/search/PartitionsFacetResultsHandler#rearrangeFacetResult(FacetResult).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetResultsHandler#rearrangeFacetResult(FacetResult).mjava","sourceNew":"  /**\n   * Perform any rearrangement as required on a facet result that has changed after\n   * it was rendered.\n   * <P>\n   * Possible use case: a sampling facets accumulator invoked another \n   * other facets accumulator on a sample set of documents, obtained\n   * rendered facet results, fixed their counts, and now it is needed \n   * to sort the results differently according to the fixed counts. \n   * @param facetResult result to be rearranged.\n   * @see FacetResultNode#value\n   */\n  public abstract FacetResult rearrangeFacetResult(FacetResult facetResult);\n\n","sourceOld":"  /**\n   * Perform any rearrangement as required on a facet result that has changed after\n   * it was rendered.\n   * <P>\n   * Possible use case: a sampling facets accumulator invoked another \n   * other facets accumulator on a sample set of documents, obtained\n   * rendered facet results, fixed their counts, and now it is needed \n   * to sort the results differently according to the fixed counts. \n   * @param facetResult result to be rearranged.\n   * @see FacetResultNode#value\n   */\n  public abstract FacetResult rearrangeFacetResult(FacetResult facetResult);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"07155cdd910937cdf6877e48884d5782845c8b8b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","811cdb4a80352766eb0c762e48972707a924e5cd"],"571abba77e55fea386a38c0024f72ffa5b37a9ad":["811cdb4a80352766eb0c762e48972707a924e5cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["571abba77e55fea386a38c0024f72ffa5b37a9ad"],"811cdb4a80352766eb0c762e48972707a924e5cd":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["07155cdd910937cdf6877e48884d5782845c8b8b","811cdb4a80352766eb0c762e48972707a924e5cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"07155cdd910937cdf6877e48884d5782845c8b8b":[],"571abba77e55fea386a38c0024f72ffa5b37a9ad":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"811cdb4a80352766eb0c762e48972707a924e5cd":["07155cdd910937cdf6877e48884d5782845c8b8b","571abba77e55fea386a38c0024f72ffa5b37a9ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["07155cdd910937cdf6877e48884d5782845c8b8b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}