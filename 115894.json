{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/pattern/PatternReplaceCharFilter#read(char[],int,int).mjava","commits":[{"id":"540f57ba7d9d46ccc6f0157e8b8021a4c969770d","date":1272974241,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/pattern/PatternReplaceCharFilter#read(char[],int,int).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/PatternReplaceCharFilter#read(char[],int,int).mjava","sourceNew":"  public int read(char[] cbuf, int off, int len) throws IOException {\n    char[] tmp = new char[len];\n    int l = input.read(tmp, 0, len);\n    if (l != -1) {\n      for(int i = 0; i < l; i++)\n        pushLastChar(tmp[i]);\n    }\n    l = 0;\n    for(int i = off; i < off + len; i++) {\n      int c = read();\n      if (c == -1) break;\n      cbuf[i] = (char) c;\n      l++;\n    }\n    return l == 0 ? -1 : l;\n  }\n\n","sourceOld":"  public int read(char[] cbuf, int off, int len) throws IOException {\n    char[] tmp = new char[len];\n    int l = input.read(tmp, 0, len);\n    if (l != -1) {\n      for(int i = 0; i < l; i++)\n        pushLastChar(tmp[i]);\n    }\n    l = 0;\n    for(int i = off; i < off + len; i++) {\n      int c = read();\n      if (c == -1) break;\n      cbuf[i] = (char) c;\n      l++;\n    }\n    return l == 0 ? -1 : l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/pattern/PatternReplaceCharFilter#read(char[],int,int).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/pattern/PatternReplaceCharFilter#read(char[],int,int).mjava","sourceNew":"  public int read(char[] cbuf, int off, int len) throws IOException {\n    char[] tmp = new char[len];\n    int l = input.read(tmp, 0, len);\n    if (l != -1) {\n      for(int i = 0; i < l; i++)\n        pushLastChar(tmp[i]);\n    }\n    l = 0;\n    for(int i = off; i < off + len; i++) {\n      int c = read();\n      if (c == -1) break;\n      cbuf[i] = (char) c;\n      l++;\n    }\n    return l == 0 ? -1 : l;\n  }\n\n","sourceOld":"  public int read(char[] cbuf, int off, int len) throws IOException {\n    char[] tmp = new char[len];\n    int l = input.read(tmp, 0, len);\n    if (l != -1) {\n      for(int i = 0; i < l; i++)\n        pushLastChar(tmp[i]);\n    }\n    l = 0;\n    for(int i = off; i < off + len; i++) {\n      int c = read();\n      if (c == -1) break;\n      cbuf[i] = (char) c;\n      l++;\n    }\n    return l == 0 ? -1 : l;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"540f57ba7d9d46ccc6f0157e8b8021a4c969770d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["540f57ba7d9d46ccc6f0157e8b8021a4c969770d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["540f57ba7d9d46ccc6f0157e8b8021a4c969770d"],"540f57ba7d9d46ccc6f0157e8b8021a4c969770d":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}