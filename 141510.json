{"path":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","commits":[{"id":"541f6605a29362fa8a42f33b69069e7da5178034","date":1337786849,"type":0,"author":"James Dyer","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","pathOld":"/dev/null","sourceNew":"\t@Test\n\tpublic void testContextSensitiveCollate() throws Exception {\n\t\t//                     DirectSolrSpellChecker   IndexBasedSpellChecker\n\t\tString[] dictionary = {\"direct\",                \"default_teststop\" };\n\t\tfor(int i=0 ; i<1 ; i++) {\t\t\n\t\t\tassertQ(\n\t\t\t\treq(\n\t\t\t\t\t\"q\", \"teststop:(flew AND form AND heathrow)\", \n\t\t\t\t\t\"qt\", \"spellCheckCompRH\",\n\t\t\t\t\t\"indent\", \"true\",\n\t\t\t\t\tSpellCheckComponent.COMPONENT_NAME, \"true\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", \n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n\t\t\t\t),\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\t\t\n\t\t\t);\n\t\t\t\n\t\t\tassertQ(\n\t\t\t\treq(\n\t\t\t\t\t\"q\", \"teststop:(june AND customs)\", \n\t\t\t\t\t\"qt\", \"spellCheckCompRH\",\n\t\t\t\t\t\"indent\", \"true\",\n\t\t\t\t\tSpellCheckComponent.COMPONENT_NAME, \"true\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", \n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n\t\t\t\t),\n\t\t\t\t\"//result[@numFound=1]\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n\t\t\t);\n\t\t}\t\t\t\t\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3599646b4d4c346cf74d334813488b8b337b5bf5","date":1337790261,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","pathOld":"/dev/null","sourceNew":"\t@Test\n\tpublic void testContextSensitiveCollate() throws Exception {\n\t\t//                     DirectSolrSpellChecker   IndexBasedSpellChecker\n\t\tString[] dictionary = {\"direct\",                \"default_teststop\" };\n\t\tfor(int i=0 ; i<1 ; i++) {\t\t\n\t\t\tassertQ(\n\t\t\t\treq(\n\t\t\t\t\t\"q\", \"teststop:(flew AND form AND heathrow)\", \n\t\t\t\t\t\"qt\", \"spellCheckCompRH\",\n\t\t\t\t\t\"indent\", \"true\",\n\t\t\t\t\tSpellCheckComponent.COMPONENT_NAME, \"true\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", \n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n\t\t\t\t),\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\t\t\n\t\t\t);\n\t\t\t\n\t\t\tassertQ(\n\t\t\t\treq(\n\t\t\t\t\t\"q\", \"teststop:(june AND customs)\", \n\t\t\t\t\t\"qt\", \"spellCheckCompRH\",\n\t\t\t\t\t\"indent\", \"true\",\n\t\t\t\t\tSpellCheckComponent.COMPONENT_NAME, \"true\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", \n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n\t\t\t\t),\n\t\t\t\t\"//result[@numFound=1]\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n\t\t\t);\n\t\t}\t\t\t\t\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","sourceNew":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n    }\n  }\n\n","sourceOld":"\t@Test\n\tpublic void testContextSensitiveCollate() throws Exception {\n\t\t//                     DirectSolrSpellChecker   IndexBasedSpellChecker\n\t\tString[] dictionary = {\"direct\",                \"default_teststop\" };\n\t\tfor(int i=0 ; i<1 ; i++) {\t\t\n\t\t\tassertQ(\n\t\t\t\treq(\n\t\t\t\t\t\"q\", \"teststop:(flew AND form AND heathrow)\", \n\t\t\t\t\t\"qt\", \"spellCheckCompRH\",\n\t\t\t\t\t\"indent\", \"true\",\n\t\t\t\t\tSpellCheckComponent.COMPONENT_NAME, \"true\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", \n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n\t\t\t\t),\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\t\t\n\t\t\t);\n\t\t\t\n\t\t\tassertQ(\n\t\t\t\treq(\n\t\t\t\t\t\"q\", \"teststop:(june AND customs)\", \n\t\t\t\t\t\"qt\", \"spellCheckCompRH\",\n\t\t\t\t\t\"indent\", \"true\",\n\t\t\t\t\tSpellCheckComponent.COMPONENT_NAME, \"true\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\", \n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n\t\t\t\t\tSpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n\t\t\t\t),\n\t\t\t\t\"//result[@numFound=1]\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n\t\t\t\t\"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n\t\t\t);\n\t\t}\t\t\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"610940819b14f78fb28396c5b5d45410e8d25f12","date":1353698694,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","sourceNew":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<=1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","sourceNew":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<=1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d1051f35d15cfbedf77970d094cef0ed0cfd42c","date":1355767671,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","sourceNew":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<=1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<=1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","sourceNew":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<=1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<=1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55b8276f00bacdbaefed6689ef19a4d3a309bf10","date":1399312570,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","sourceNew":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<=1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n      //SOLR-5090, alternativeTermCount==0 was being evaluated, sometimes would throw NPE\n      assertQ(req(\"q\", \"teststop:(june customs)\", \"mm\", \"2\", \"qt\",\n          \"spellCheckCompRH\", \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<=1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"343d2d9477b299075fa3a19a46e654b6c3bf552b","date":1407872410,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","sourceNew":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<=1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n      //SOLR-5090, alternativeTermCount==0 was being evaluated, sometimes would throw NPE\n      assertQ(req(\"q\", \"teststop:(june customs)\", \"mm\", \"2\", \"qt\",\n          \"spellCheckCompRH\", \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<=1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n      //SOLR-5090, alternativeTermCount==0 was being evaluated, sometimes would throw NPE\n      assertQ(req(\"q\", \"teststop:(june customs)\", \"mm\", \"2\", \"qt\",\n          \"spellCheckCompRH\", \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":["f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6","date":1498031702,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","sourceNew":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<=1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/long[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/long[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n      //SOLR-5090, alternativeTermCount==0 was being evaluated, sometimes would throw NPE\n      assertQ(req(\"q\", \"teststop:(june customs)\", \"mm\", \"2\", \"qt\",\n          \"spellCheckCompRH\", \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<=1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n      //SOLR-5090, alternativeTermCount==0 was being evaluated, sometimes would throw NPE\n      assertQ(req(\"q\", \"teststop:(june customs)\", \"mm\", \"2\", \"qt\",\n          \"spellCheckCompRH\", \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\"));\n    }\n  }\n\n","bugFix":["343d2d9477b299075fa3a19a46e654b6c3bf552b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","sourceNew":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<=1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/long[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/long[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n      //SOLR-5090, alternativeTermCount==0 was being evaluated, sometimes would throw NPE\n      assertQ(req(\"q\", \"teststop:(june customs)\", \"mm\", \"2\", \"qt\",\n          \"spellCheckCompRH\", \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<=1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n      //SOLR-5090, alternativeTermCount==0 was being evaluated, sometimes would throw NPE\n      assertQ(req(\"q\", \"teststop:(june customs)\", \"mm\", \"2\", \"qt\",\n          \"spellCheckCompRH\", \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ff704ef91e9ae30ca59babb23ece85720701b60","date":1498684964,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","sourceNew":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<=1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"/spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/long[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"/spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/long[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n      //SOLR-5090, alternativeTermCount==0 was being evaluated, sometimes would throw NPE\n      assertQ(req(\"q\", \"teststop:(june customs)\", \"mm\", \"2\",\n          \"qt\", \"/spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<=1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/long[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/long[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n      //SOLR-5090, alternativeTermCount==0 was being evaluated, sometimes would throw NPE\n      assertQ(req(\"q\", \"teststop:(june customs)\", \"mm\", \"2\", \"qt\",\n          \"spellCheckCompRH\", \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","sourceNew":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<=1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"/spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/long[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"/spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/long[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n      //SOLR-5090, alternativeTermCount==0 was being evaluated, sometimes would throw NPE\n      assertQ(req(\"q\", \"teststop:(june customs)\", \"mm\", \"2\",\n          \"qt\", \"/spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<=1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/int[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n      //SOLR-5090, alternativeTermCount==0 was being evaluated, sometimes would throw NPE\n      assertQ(req(\"q\", \"teststop:(june customs)\", \"mm\", \"2\", \"qt\",\n          \"spellCheckCompRH\", \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","pathOld":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testContextSensitiveCollate().mjava","sourceNew":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<=1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"/spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/long[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"/spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/long[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n      //SOLR-5090, alternativeTermCount==0 was being evaluated, sometimes would throw NPE\n      assertQ(req(\"q\", \"teststop:(june customs)\", \"mm\", \"2\",\n          \"qt\", \"/spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testContextSensitiveCollate() throws Exception {\n    //                     DirectSolrSpellChecker   IndexBasedSpellChecker\n    String[] dictionary = {\"direct\",                \"default_teststop\" };\n    for(int i=0 ; i<=1 ; i++) {\n      assertQ(\n        req(\n          \"q\", \"teststop:(flew AND form AND heathrow)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_BUILD, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='flew']/arr[@name='suggestion']/lst/str[@name='word']='flow'\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='form']/arr[@name='suggestion']/lst/str[@name='word']='from'\",\n/* DirectSolrSpellChecker won't suggest if the edit distance > 2, so we can't test for this one...\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='heathrow']/arr[@name='suggestion']/lst/str[@name='word']='hearth'\",\n*/\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(flew AND from AND heathrow)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/long[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='form']='from'\"\n      );\n\n      assertQ(\n        req(\n          \"q\", \"teststop:(june AND customs)\",\n          \"qt\", \"spellCheckCompRH\",\n          \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_EXTENDED_RESULTS, \"true\",\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"5\",\n          SpellCheckComponent.SPELLCHECK_MAX_RESULTS_FOR_SUGGEST, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"10\",\n          SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\",\n          SpellCheckComponent.SPELLCHECK_COLLATE_EXTENDED_RESULTS, \"true\"\n        ),\n        \"//result[@numFound=1]\",\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='june']/arr[@name='suggestion']/lst/str[@name='word']='jane'\",\n        \"//lst[@name='spellcheck']/bool[@name='correctlySpelled']='false'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/str[@name='collationQuery']='teststop:(jane AND customs)'\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/long[@name='hits']=1\",\n        \"//lst[@name='spellcheck']/lst[@name='collations']/lst[@name='collation']/lst[@name='misspellingsAndCorrections']/str[@name='june']='jane'\"\n      );\n      //SOLR-5090, alternativeTermCount==0 was being evaluated, sometimes would throw NPE\n      assertQ(req(\"q\", \"teststop:(june customs)\", \"mm\", \"2\", \"qt\",\n          \"spellCheckCompRH\", \"indent\", \"true\",\n          SpellCheckComponent.COMPONENT_NAME, \"true\",\n          SpellCheckComponent.SPELLCHECK_DICT, dictionary[i],\n          SpellCheckComponent.SPELLCHECK_COUNT, \"10\",\n          SpellCheckComponent.SPELLCHECK_ALTERNATIVE_TERM_COUNT, \"0\",\n          SpellCheckComponent.SPELLCHECK_COLLATE, \"true\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["407687e67faf6e1f02a211ca078d8e3eed631027","4d1051f35d15cfbedf77970d094cef0ed0cfd42c"],"343d2d9477b299075fa3a19a46e654b6c3bf552b":["55b8276f00bacdbaefed6689ef19a4d3a309bf10"],"f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6":["343d2d9477b299075fa3a19a46e654b6c3bf552b"],"407687e67faf6e1f02a211ca078d8e3eed631027":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376","610940819b14f78fb28396c5b5d45410e8d25f12"],"4d1051f35d15cfbedf77970d094cef0ed0cfd42c":["610940819b14f78fb28396c5b5d45410e8d25f12"],"610940819b14f78fb28396c5b5d45410e8d25f12":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"30c8e5574b55d57947e989443dfde611646530ee":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["343d2d9477b299075fa3a19a46e654b6c3bf552b","f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6"],"28288370235ed02234a64753cdbf0c6ec096304a":["343d2d9477b299075fa3a19a46e654b6c3bf552b","5ff704ef91e9ae30ca59babb23ece85720701b60"],"541f6605a29362fa8a42f33b69069e7da5178034":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3599646b4d4c346cf74d334813488b8b337b5bf5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","541f6605a29362fa8a42f33b69069e7da5178034"],"55b8276f00bacdbaefed6689ef19a4d3a309bf10":["4d1051f35d15cfbedf77970d094cef0ed0cfd42c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["541f6605a29362fa8a42f33b69069e7da5178034"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"343d2d9477b299075fa3a19a46e654b6c3bf552b":["f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","5ff704ef91e9ae30ca59babb23ece85720701b60"],"407687e67faf6e1f02a211ca078d8e3eed631027":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"4d1051f35d15cfbedf77970d094cef0ed0cfd42c":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","55b8276f00bacdbaefed6689ef19a4d3a309bf10"],"610940819b14f78fb28396c5b5d45410e8d25f12":["407687e67faf6e1f02a211ca078d8e3eed631027","4d1051f35d15cfbedf77970d094cef0ed0cfd42c"],"30c8e5574b55d57947e989443dfde611646530ee":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["30c8e5574b55d57947e989443dfde611646530ee"],"28288370235ed02234a64753cdbf0c6ec096304a":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"541f6605a29362fa8a42f33b69069e7da5178034":["3599646b4d4c346cf74d334813488b8b337b5bf5","4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["541f6605a29362fa8a42f33b69069e7da5178034","3599646b4d4c346cf74d334813488b8b337b5bf5"],"3599646b4d4c346cf74d334813488b8b337b5bf5":[],"55b8276f00bacdbaefed6689ef19a4d3a309bf10":["343d2d9477b299075fa3a19a46e654b6c3bf552b"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["407687e67faf6e1f02a211ca078d8e3eed631027","610940819b14f78fb28396c5b5d45410e8d25f12"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","30c8e5574b55d57947e989443dfde611646530ee","3599646b4d4c346cf74d334813488b8b337b5bf5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}