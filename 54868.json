{"path":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader.PackedIntsSource#getInt(int).mjava","commits":[{"id":"4034ca0f8f74fdf56e25be73822f2441fc1c1b46","date":1307111599,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader.PackedIntsSource#getInt(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader.IntsSource#getInt(int).mjava","sourceNew":"      @Override\n      public long getInt(int docID) {\n        // TODO -- can we somehow avoid 2X method calls\n        // on each get? must push minValue down, and make\n        // PackedInts implement Ints.Source\n        assert docID >= 0;\n        final long value = values.get(docID);\n        return value == defaultValue ? 0 : minValue + value;\n      }\n\n","sourceOld":"      @Override\n      public long getInt(int docID) {\n        // TODO -- can we somehow avoid 2X method calls\n        // on each get? must push minValue down, and make\n        // PackedInts implement Ints.Source\n        assert docID >= 0;\n        return minValue + values.get(docID);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"605b061fadf71aa6458c0005eaae83a98350c403","date":1307117658,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IntsImpl.IntsReader.PackedIntsSource#getInt(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntsImpl.IntsReader.PackedIntsSource#getInt(int).mjava","sourceNew":"      @Override\n      public long getInt(int docID) {\n        // TODO -- can we somehow avoid 2X method calls\n        // on each get? must push minValue down, and make\n        // PackedInts implement Ints.Source\n        assert docID >= 0;\n        final long value = values.get(docID);\n        return value == defaultValue ? 0 : minValue + value;\n      }\n\n","sourceOld":"      @Override\n      public long getInt(int docID) {\n        // TODO -- can we somehow avoid 2X method calls\n        // on each get? must push minValue down, and make\n        // PackedInts implement Ints.Source\n        assert docID >= 0;\n        final long value = values.get(docID);\n        return value == defaultValue ? 0 : minValue + value;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"605b061fadf71aa6458c0005eaae83a98350c403":["4034ca0f8f74fdf56e25be73822f2441fc1c1b46"],"4034ca0f8f74fdf56e25be73822f2441fc1c1b46":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"605b061fadf71aa6458c0005eaae83a98350c403":[],"4034ca0f8f74fdf56e25be73822f2441fc1c1b46":["605b061fadf71aa6458c0005eaae83a98350c403"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4034ca0f8f74fdf56e25be73822f2441fc1c1b46","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["605b061fadf71aa6458c0005eaae83a98350c403","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}