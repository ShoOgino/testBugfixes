{"path":"contrib/gdata-server/src/hivemind/src/java/org/apache/lucene/gdata/hivemind/webservice/HessianServiceSkeletonInvokerImpl#invoke(HttpServletRequest,HttpServletResponse).mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/hivemind/src/java/org/apache/lucene/gdata/hivemind/webservice/HessianServiceSkeletonInvokerImpl#invoke(HttpServletRequest,HttpServletResponse).mjava","pathOld":"contrib/gdata-server/src/hivemind/java/org/apache/lucene/gdata/hivemind/webservice/HessianServiceSkeletonInvokerImpl#invoke(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"    /**\n     * @throws Throwable \n     * @see org.apache.lucene.gdata.hivemind.webservice.HessianServiceSkeletonInvoker#invoke(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    public void invoke(HttpServletRequest arg0, HttpServletResponse arg1) throws Throwable {\n        InputStream inputStream = arg0.getInputStream();\n        OutputStream outputStream = arg1.getOutputStream();\n        /*\n         *This works only with hessian >= hessian-3.0.20!!\n         *but remember this is not a framework  \n         */\n        Hessian2Input hessianInput = new Hessian2Input(inputStream);\n        if (this.serializerFactory != null) {\n                hessianInput.setSerializerFactory(this.serializerFactory);\n        }\n\n        int code = hessianInput.read();\n        if (code != 'c') {\n                throw new IOException(\"expected 'c' in hessian input at \" + code);\n        }\n\n        AbstractHessianOutput  hessianOutput = null;\n        int major = hessianInput.read();\n        // useless read just get the stream in the right position.\n        int minor = hessianInput.read();\n        if (major >= 2) {\n                hessianOutput = new Hessian2Output(outputStream);\n        }\n        else {\n                hessianOutput = new HessianOutput(outputStream);\n        }\n        if (this.serializerFactory != null) {\n                hessianOutput.setSerializerFactory(this.serializerFactory);\n        }\n\n        try {\n            this.skeleton.invoke(hessianInput, hessianOutput);\n        } catch (Throwable e) {\n            LOG.error(\"Unexpected Exception thrown -- \"+e.getMessage(),e);\n            throw e;\n            \n        }\n\n    }\n\n","sourceOld":"    /**\n     * @throws Throwable \n     * @see org.apache.lucene.gdata.hivemind.webservice.HessianServiceSkeletonInvoker#invoke(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    public void invoke(HttpServletRequest arg0, HttpServletResponse arg1) throws Throwable {\n        InputStream inputStream = arg0.getInputStream();\n        OutputStream outputStream = arg1.getOutputStream();\n        /*\n         *This works only with hessian >= hessian-3.0.20!!\n         *but remember this is not a framework  \n         */\n        Hessian2Input hessianInput = new Hessian2Input(inputStream);\n        if (this.serializerFactory != null) {\n                hessianInput.setSerializerFactory(this.serializerFactory);\n        }\n\n        int code = hessianInput.read();\n        if (code != 'c') {\n                throw new IOException(\"expected 'c' in hessian input at \" + code);\n        }\n\n        AbstractHessianOutput  hessianOutput = null;\n        int major = hessianInput.read();\n        // useless read just get the stream in the right position.\n        int minor = hessianInput.read();\n        if (major >= 2) {\n                hessianOutput = new Hessian2Output(outputStream);\n        }\n        else {\n                hessianOutput = new HessianOutput(outputStream);\n        }\n        if (this.serializerFactory != null) {\n                hessianOutput.setSerializerFactory(this.serializerFactory);\n        }\n\n        try {\n            this.skeleton.invoke(hessianInput, hessianOutput);\n        } catch (Throwable e) {\n            LOG.error(\"Unexpected Exception thrown -- \"+e.getMessage(),e);\n            throw e;\n            \n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/hivemind/src/java/org/apache/lucene/gdata/hivemind/webservice/HessianServiceSkeletonInvokerImpl#invoke(HttpServletRequest,HttpServletResponse).mjava","sourceNew":null,"sourceOld":"    /**\n     * @throws Throwable \n     * @see org.apache.lucene.gdata.hivemind.webservice.HessianServiceSkeletonInvoker#invoke(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    public void invoke(HttpServletRequest arg0, HttpServletResponse arg1) throws Throwable {\n        InputStream inputStream = arg0.getInputStream();\n        OutputStream outputStream = arg1.getOutputStream();\n        /*\n         *This works only with hessian >= hessian-3.0.20!!\n         *but remember this is not a framework  \n         */\n        Hessian2Input hessianInput = new Hessian2Input(inputStream);\n        if (this.serializerFactory != null) {\n                hessianInput.setSerializerFactory(this.serializerFactory);\n        }\n\n        int code = hessianInput.read();\n        if (code != 'c') {\n                throw new IOException(\"expected 'c' in hessian input at \" + code);\n        }\n\n        AbstractHessianOutput  hessianOutput = null;\n        int major = hessianInput.read();\n        // useless read just get the stream in the right position.\n        int minor = hessianInput.read();\n        if (major >= 2) {\n                hessianOutput = new Hessian2Output(outputStream);\n        }\n        else {\n                hessianOutput = new HessianOutput(outputStream);\n        }\n        if (this.serializerFactory != null) {\n                hessianOutput.setSerializerFactory(this.serializerFactory);\n        }\n\n        try {\n            this.skeleton.invoke(hessianInput, hessianOutput);\n        } catch (Throwable e) {\n            LOG.error(\"Unexpected Exception thrown -- \"+e.getMessage(),e);\n            throw e;\n            \n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}