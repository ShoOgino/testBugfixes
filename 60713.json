{"path":"backwards/src/test/org/apache/lucene/queryParser/TestQueryParser#testBoost().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/queryParser/TestQueryParser#testBoost().mjava","pathOld":"/dev/null","sourceNew":"  public void testBoost()\n    throws Exception {\n    Set stopWords = new HashSet(1);\n    stopWords.add(\"on\");\n    StandardAnalyzer oneStopAnalyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT, stopWords);\n    QueryParser qp = new QueryParser(Version.LUCENE_CURRENT, \"field\", oneStopAnalyzer);\n    Query q = qp.parse(\"on^1.0\");\n    assertNotNull(q);\n    q = qp.parse(\"\\\"hello\\\"^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"hello^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"\\\"on\\\"^1.0\");\n    assertNotNull(q);\n\n    QueryParser qp2 = new QueryParser(Version.LUCENE_CURRENT, \"field\", new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT));\n    q = qp2.parse(\"the^3\");\n    // \"the\" is a stop word so the result is an empty query:\n    assertNotNull(q);\n    assertEquals(\"\", q.toString());\n    assertEquals(1.0f, q.getBoost(), 0.01f);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/queryParser/TestQueryParser#testBoost().mjava","pathOld":"backwards/src/test/org/apache/lucene/queryParser/TestQueryParser#testBoost().mjava","sourceNew":"  public void testBoost()\n    throws Exception {\n    Set stopWords = new HashSet(1);\n    stopWords.add(\"on\");\n    StandardAnalyzer oneStopAnalyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT, stopWords);\n    QueryParser qp = new QueryParser(Version.LUCENE_CURRENT, \"field\", oneStopAnalyzer);\n    Query q = qp.parse(\"on^1.0\");\n    assertNotNull(q);\n    q = qp.parse(\"\\\"hello\\\"^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"hello^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"\\\"on\\\"^1.0\");\n    assertNotNull(q);\n\n    QueryParser qp2 = new QueryParser(Version.LUCENE_CURRENT, \"field\", new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT));\n    q = qp2.parse(\"the^3\");\n    // \"the\" is a stop word so the result is an empty query:\n    assertNotNull(q);\n    assertEquals(\"\", q.toString());\n    assertEquals(1.0f, q.getBoost(), 0.01f);\n  }\n\n","sourceOld":"  public void testBoost()\n    throws Exception {\n    Set stopWords = new HashSet(1);\n    stopWords.add(\"on\");\n    StandardAnalyzer oneStopAnalyzer = new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT, stopWords);\n    QueryParser qp = new QueryParser(Version.LUCENE_CURRENT, \"field\", oneStopAnalyzer);\n    Query q = qp.parse(\"on^1.0\");\n    assertNotNull(q);\n    q = qp.parse(\"\\\"hello\\\"^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"hello^2.0\");\n    assertNotNull(q);\n    assertEquals(q.getBoost(), (float) 2.0, (float) 0.5);\n    q = qp.parse(\"\\\"on\\\"^1.0\");\n    assertNotNull(q);\n\n    QueryParser qp2 = new QueryParser(Version.LUCENE_CURRENT, \"field\", new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT));\n    q = qp2.parse(\"the^3\");\n    // \"the\" is a stop word so the result is an empty query:\n    assertNotNull(q);\n    assertEquals(\"\", q.toString());\n    assertEquals(1.0f, q.getBoost(), 0.01f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}