{"path":"lucene/contrib/misc/src/java/org/apache/lucene/index/IndexSplitter#main(String[]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/IndexSplitter#main(String[]).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/index/IndexSplitter#main(String[]).mjava","sourceNew":"  /**\n   * @param args\n   */\n  public static void main(String[] args) throws Exception {\n    if (args.length < 2) {\n      System.err\n          .println(\"Usage: IndexSplitter <srcDir> -l (list the segments and their sizes)\");\n      System.err.println(\"IndexSplitter <srcDir> <destDir> <segments>+\");\n      System.err\n          .println(\"IndexSplitter <srcDir> -d (delete the following segments)\");\n      return;\n    }\n    File srcDir = new File(args[0]);\n    IndexSplitter is = new IndexSplitter(srcDir);\n    if (!srcDir.exists()) {\n      throw new Exception(\"srcdir:\" + srcDir.getAbsolutePath()\n          + \" doesn't exist\");\n    }\n    if (args[1].equals(\"-l\")) {\n      is.listSegments();\n    } else if (args[1].equals(\"-d\")) {\n      List<String> segs = new ArrayList<String>();\n      for (int x = 2; x < args.length; x++) {\n        segs.add(args[x]);\n      }\n      is.remove(segs.toArray(new String[0]));\n    } else {\n      File targetDir = new File(args[1]);\n      List<String> segs = new ArrayList<String>();\n      for (int x = 2; x < args.length; x++) {\n        segs.add(args[x]);\n      }\n      is.split(targetDir, segs.toArray(new String[0]));\n    }\n  }\n\n","sourceOld":"  /**\n   * @param args\n   */\n  public static void main(String[] args) throws Exception {\n    if (args.length < 2) {\n      System.err\n          .println(\"Usage: IndexSplitter <srcDir> -l (list the segments and their sizes)\");\n      System.err.println(\"IndexSplitter <srcDir> <destDir> <segments>+\");\n      System.err\n          .println(\"IndexSplitter <srcDir> -d (delete the following segments)\");\n      return;\n    }\n    File srcDir = new File(args[0]);\n    IndexSplitter is = new IndexSplitter(srcDir);\n    if (!srcDir.exists()) {\n      throw new Exception(\"srcdir:\" + srcDir.getAbsolutePath()\n          + \" doesn't exist\");\n    }\n    if (args[1].equals(\"-l\")) {\n      is.listSegments();\n    } else if (args[1].equals(\"-d\")) {\n      List<String> segs = new ArrayList<String>();\n      for (int x = 2; x < args.length; x++) {\n        segs.add(args[x]);\n      }\n      is.remove(segs.toArray(new String[0]));\n    } else {\n      File targetDir = new File(args[1]);\n      List<String> segs = new ArrayList<String>();\n      for (int x = 2; x < args.length; x++) {\n        segs.add(args[x]);\n      }\n      is.split(targetDir, segs.toArray(new String[0]));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/IndexSplitter#main(String[]).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/index/IndexSplitter#main(String[]).mjava","sourceNew":"  /**\n   * @param args\n   */\n  public static void main(String[] args) throws Exception {\n    if (args.length < 2) {\n      System.err\n          .println(\"Usage: IndexSplitter <srcDir> -l (list the segments and their sizes)\");\n      System.err.println(\"IndexSplitter <srcDir> <destDir> <segments>+\");\n      System.err\n          .println(\"IndexSplitter <srcDir> -d (delete the following segments)\");\n      return;\n    }\n    File srcDir = new File(args[0]);\n    IndexSplitter is = new IndexSplitter(srcDir);\n    if (!srcDir.exists()) {\n      throw new Exception(\"srcdir:\" + srcDir.getAbsolutePath()\n          + \" doesn't exist\");\n    }\n    if (args[1].equals(\"-l\")) {\n      is.listSegments();\n    } else if (args[1].equals(\"-d\")) {\n      List<String> segs = new ArrayList<String>();\n      for (int x = 2; x < args.length; x++) {\n        segs.add(args[x]);\n      }\n      is.remove(segs.toArray(new String[0]));\n    } else {\n      File targetDir = new File(args[1]);\n      List<String> segs = new ArrayList<String>();\n      for (int x = 2; x < args.length; x++) {\n        segs.add(args[x]);\n      }\n      is.split(targetDir, segs.toArray(new String[0]));\n    }\n  }\n\n","sourceOld":"  /**\n   * @param args\n   */\n  public static void main(String[] args) throws Exception {\n    if (args.length < 2) {\n      System.err\n          .println(\"Usage: IndexSplitter <srcDir> -l (list the segments and their sizes)\");\n      System.err.println(\"IndexSplitter <srcDir> <destDir> <segments>+\");\n      System.err\n          .println(\"IndexSplitter <srcDir> -d (delete the following segments)\");\n      return;\n    }\n    File srcDir = new File(args[0]);\n    IndexSplitter is = new IndexSplitter(srcDir);\n    if (!srcDir.exists()) {\n      throw new Exception(\"srcdir:\" + srcDir.getAbsolutePath()\n          + \" doesn't exist\");\n    }\n    if (args[1].equals(\"-l\")) {\n      is.listSegments();\n    } else if (args[1].equals(\"-d\")) {\n      List<String> segs = new ArrayList<String>();\n      for (int x = 2; x < args.length; x++) {\n        segs.add(args[x]);\n      }\n      is.remove(segs.toArray(new String[0]));\n    } else {\n      File targetDir = new File(args[1]);\n      List<String> segs = new ArrayList<String>();\n      for (int x = 2; x < args.length; x++) {\n        segs.add(args[x]);\n      }\n      is.split(targetDir, segs.toArray(new String[0]));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}