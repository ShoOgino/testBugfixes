{"path":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder#getFilter(Element).mjava","commits":[{"id":"ac4d82055808e35fe2a92db7425ad6537779e3d0","date":1167955517,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder#getFilter(Element).mjava","pathOld":"/dev/null","sourceNew":"\tpublic Filter getFilter(Element e) throws ParserException\r\n\t{\r\n\r\n\t\tElement childElement = DOMUtils.getFirstChildOrFail(e);\r\n\r\n\t\tif (filterCache == null)\r\n\t\t{\r\n\t\t\tfilterCache = new LRUCache(cacheSize);\r\n\t\t}\r\n\r\n\t\t// Test to see if child Element is a query or filter that needs to be\r\n\t\t// cached\r\n\t\tQueryBuilder qb = queryFactory.getQueryBuilder(childElement\r\n\t\t\t\t.getNodeName());\r\n\t\tObject cacheKey = null;\r\n\t\tQuery q = null;\r\n\t\tFilter f = null;\r\n\t\tif (qb != null)\r\n\t\t{\r\n\t\t\tq = qb.getQuery(childElement);\r\n\t\t\tcacheKey = q;\r\n\t\t} else\r\n\t\t{\r\n\t\t\tf = filterFactory.getFilter(childElement);\r\n\t\t\tcacheKey = f;\r\n\t\t}\r\n\t\tFilter cachedFilter = null;\r\n\t\tsynchronized (filterCache)\r\n\t\t{ // check cache\r\n\t\t\tcachedFilter = (Filter) filterCache.get(cacheKey);\r\n\t\t\tif (cachedFilter != null)\r\n\t\t\t{\r\n\t\t\t\treturn cachedFilter; // cache hit\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//cache miss\r\n\t\tif (qb != null)\r\n\t\t{\r\n\t\t\tcachedFilter = new QueryFilter(q);\r\n\t\t} else\r\n\t\t{\r\n\t\t\tcachedFilter = new CachingWrapperFilter(f);\r\n\t\t}\r\n\r\n\t\tsynchronized (filterCache)\r\n\t\t{ // update cache\r\n\t\t\tfilterCache.put(cacheKey, cachedFilter);\r\n\t\t}\r\n\t\treturn cachedFilter;\r\n\t}\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52ce7e961a8217faac8128e3c8fe67819eefdde9","date":1201979043,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder#getFilter(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder#getFilter(Element).mjava","sourceNew":"\tpublic Filter getFilter(Element e) throws ParserException\r\n\t{\r\n\r\n\t\tElement childElement = DOMUtils.getFirstChildOrFail(e);\r\n\r\n\t\tif (filterCache == null)\r\n\t\t{\r\n\t\t\tfilterCache = new LRUCache(cacheSize);\r\n\t\t}\r\n\r\n\t\t// Test to see if child Element is a query or filter that needs to be\r\n\t\t// cached\r\n\t\tQueryBuilder qb = queryFactory.getQueryBuilder(childElement\r\n\t\t\t\t.getNodeName());\r\n\t\tObject cacheKey = null;\r\n\t\tQuery q = null;\r\n\t\tFilter f = null;\r\n\t\tif (qb != null)\r\n\t\t{\r\n\t\t\tq = qb.getQuery(childElement);\r\n\t\t\tcacheKey = q;\r\n\t\t} else\r\n\t\t{\r\n\t\t\tf = filterFactory.getFilter(childElement);\r\n\t\t\tcacheKey = f;\r\n\t\t}\r\n\t\tFilter cachedFilter = null;\r\n\t\tsynchronized (filterCache)\r\n\t\t{ // check cache\r\n\t\t\tcachedFilter = (Filter) filterCache.get(cacheKey);\r\n\t\t\tif (cachedFilter != null)\r\n\t\t\t{\r\n\t\t\t\treturn cachedFilter; // cache hit\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//cache miss\r\n\t\tif (qb != null)\r\n\t\t{\r\n\t\t\tcachedFilter = new QueryWrapperFilter(q);\r\n\t\t} else\r\n\t\t{\r\n\t\t\tcachedFilter = new CachingWrapperFilter(f);\r\n\t\t}\r\n\r\n\t\tsynchronized (filterCache)\r\n\t\t{ // update cache\r\n\t\t\tfilterCache.put(cacheKey, cachedFilter);\r\n\t\t}\r\n\t\treturn cachedFilter;\r\n\t}\r\n\n","sourceOld":"\tpublic Filter getFilter(Element e) throws ParserException\r\n\t{\r\n\r\n\t\tElement childElement = DOMUtils.getFirstChildOrFail(e);\r\n\r\n\t\tif (filterCache == null)\r\n\t\t{\r\n\t\t\tfilterCache = new LRUCache(cacheSize);\r\n\t\t}\r\n\r\n\t\t// Test to see if child Element is a query or filter that needs to be\r\n\t\t// cached\r\n\t\tQueryBuilder qb = queryFactory.getQueryBuilder(childElement\r\n\t\t\t\t.getNodeName());\r\n\t\tObject cacheKey = null;\r\n\t\tQuery q = null;\r\n\t\tFilter f = null;\r\n\t\tif (qb != null)\r\n\t\t{\r\n\t\t\tq = qb.getQuery(childElement);\r\n\t\t\tcacheKey = q;\r\n\t\t} else\r\n\t\t{\r\n\t\t\tf = filterFactory.getFilter(childElement);\r\n\t\t\tcacheKey = f;\r\n\t\t}\r\n\t\tFilter cachedFilter = null;\r\n\t\tsynchronized (filterCache)\r\n\t\t{ // check cache\r\n\t\t\tcachedFilter = (Filter) filterCache.get(cacheKey);\r\n\t\t\tif (cachedFilter != null)\r\n\t\t\t{\r\n\t\t\t\treturn cachedFilter; // cache hit\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//cache miss\r\n\t\tif (qb != null)\r\n\t\t{\r\n\t\t\tcachedFilter = new QueryFilter(q);\r\n\t\t} else\r\n\t\t{\r\n\t\t\tcachedFilter = new CachingWrapperFilter(f);\r\n\t\t}\r\n\r\n\t\tsynchronized (filterCache)\r\n\t\t{ // update cache\r\n\t\t\tfilterCache.put(cacheKey, cachedFilter);\r\n\t\t}\r\n\t\treturn cachedFilter;\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eecf500c1b16aa9455fa738e09525bbfe2843c75","date":1203377952,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder#getFilter(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder#getFilter(Element).mjava","sourceNew":"\tpublic synchronized Filter getFilter(Element e) throws ParserException\r\n\t{\r\n\r\n\t\tElement childElement = DOMUtils.getFirstChildOrFail(e);\r\n\r\n\t\tif (filterCache == null)\r\n\t\t{\r\n\t\t\tfilterCache = new LRUCache(cacheSize);\r\n\t\t}\r\n\r\n\t\t// Test to see if child Element is a query or filter that needs to be\r\n\t\t// cached\r\n\t\tQueryBuilder qb = queryFactory.getQueryBuilder(childElement.getNodeName());\r\n\t\tObject cacheKey = null;\r\n\t\tQuery q = null;\r\n\t\tFilter f = null;\r\n\t\tif (qb != null)\r\n\t\t{\r\n\t\t\tq = qb.getQuery(childElement);\r\n\t\t\tcacheKey = q;\r\n\t\t} else\r\n\t\t{\r\n\t\t\tf = filterFactory.getFilter(childElement);\r\n\t\t\tcacheKey = f;\r\n\t\t}\r\n\t\tFilter cachedFilter = (Filter) filterCache.get(cacheKey);\r\n\t\tif (cachedFilter != null)\r\n\t\t{\r\n\t\t\treturn cachedFilter; // cache hit\r\n\t\t}\r\n\t\t\r\n\t\t//cache miss\r\n\t\tif (qb != null)\r\n\t\t{\r\n\t\t\tcachedFilter = new QueryWrapperFilter(q);\r\n\t\t} else\r\n\t\t{\r\n\t\t\tcachedFilter = new CachingWrapperFilter(f);\r\n\t\t}\r\n\r\n\t\tfilterCache.put(cacheKey, cachedFilter);\r\n\t\treturn cachedFilter;\r\n\t}\r\n\n","sourceOld":"\tpublic Filter getFilter(Element e) throws ParserException\r\n\t{\r\n\r\n\t\tElement childElement = DOMUtils.getFirstChildOrFail(e);\r\n\r\n\t\tif (filterCache == null)\r\n\t\t{\r\n\t\t\tfilterCache = new LRUCache(cacheSize);\r\n\t\t}\r\n\r\n\t\t// Test to see if child Element is a query or filter that needs to be\r\n\t\t// cached\r\n\t\tQueryBuilder qb = queryFactory.getQueryBuilder(childElement\r\n\t\t\t\t.getNodeName());\r\n\t\tObject cacheKey = null;\r\n\t\tQuery q = null;\r\n\t\tFilter f = null;\r\n\t\tif (qb != null)\r\n\t\t{\r\n\t\t\tq = qb.getQuery(childElement);\r\n\t\t\tcacheKey = q;\r\n\t\t} else\r\n\t\t{\r\n\t\t\tf = filterFactory.getFilter(childElement);\r\n\t\t\tcacheKey = f;\r\n\t\t}\r\n\t\tFilter cachedFilter = null;\r\n\t\tsynchronized (filterCache)\r\n\t\t{ // check cache\r\n\t\t\tcachedFilter = (Filter) filterCache.get(cacheKey);\r\n\t\t\tif (cachedFilter != null)\r\n\t\t\t{\r\n\t\t\t\treturn cachedFilter; // cache hit\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//cache miss\r\n\t\tif (qb != null)\r\n\t\t{\r\n\t\t\tcachedFilter = new QueryWrapperFilter(q);\r\n\t\t} else\r\n\t\t{\r\n\t\t\tcachedFilter = new CachingWrapperFilter(f);\r\n\t\t}\r\n\r\n\t\tsynchronized (filterCache)\r\n\t\t{ // update cache\r\n\t\t\tfilterCache.put(cacheKey, cachedFilter);\r\n\t\t}\r\n\t\treturn cachedFilter;\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a361a621b184d9b73c9c9a37323a9845b8f8260","date":1226370946,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder#getFilter(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder#getFilter(Element).mjava","sourceNew":"\tpublic synchronized Filter getFilter(Element e) throws ParserException\n\t{\n\n\t\tElement childElement = DOMUtils.getFirstChildOrFail(e);\n\n\t\tif (filterCache == null)\n\t\t{\n\t\t\tfilterCache = new LRUCache(cacheSize);\n\t\t}\n\n\t\t// Test to see if child Element is a query or filter that needs to be\n\t\t// cached\n\t\tQueryBuilder qb = queryFactory.getQueryBuilder(childElement.getNodeName());\n\t\tObject cacheKey = null;\n\t\tQuery q = null;\n\t\tFilter f = null;\n\t\tif (qb != null)\n\t\t{\n\t\t\tq = qb.getQuery(childElement);\n\t\t\tcacheKey = q;\n\t\t} else\n\t\t{\n\t\t\tf = filterFactory.getFilter(childElement);\n\t\t\tcacheKey = f;\n\t\t}\n\t\tFilter cachedFilter = (Filter) filterCache.get(cacheKey);\n\t\tif (cachedFilter != null)\n\t\t{\n\t\t\treturn cachedFilter; // cache hit\n\t\t}\n\t\t\n\t\t//cache miss\n\t\tif (qb != null)\n\t\t{\n\t\t\tcachedFilter = new QueryWrapperFilter(q);\n\t\t} else\n\t\t{\n\t\t\tcachedFilter = new CachingWrapperFilter(f);\n\t\t}\n\n\t\tfilterCache.put(cacheKey, cachedFilter);\n\t\treturn cachedFilter;\n\t}\n\n","sourceOld":"\tpublic synchronized Filter getFilter(Element e) throws ParserException\r\n\t{\r\n\r\n\t\tElement childElement = DOMUtils.getFirstChildOrFail(e);\r\n\r\n\t\tif (filterCache == null)\r\n\t\t{\r\n\t\t\tfilterCache = new LRUCache(cacheSize);\r\n\t\t}\r\n\r\n\t\t// Test to see if child Element is a query or filter that needs to be\r\n\t\t// cached\r\n\t\tQueryBuilder qb = queryFactory.getQueryBuilder(childElement.getNodeName());\r\n\t\tObject cacheKey = null;\r\n\t\tQuery q = null;\r\n\t\tFilter f = null;\r\n\t\tif (qb != null)\r\n\t\t{\r\n\t\t\tq = qb.getQuery(childElement);\r\n\t\t\tcacheKey = q;\r\n\t\t} else\r\n\t\t{\r\n\t\t\tf = filterFactory.getFilter(childElement);\r\n\t\t\tcacheKey = f;\r\n\t\t}\r\n\t\tFilter cachedFilter = (Filter) filterCache.get(cacheKey);\r\n\t\tif (cachedFilter != null)\r\n\t\t{\r\n\t\t\treturn cachedFilter; // cache hit\r\n\t\t}\r\n\t\t\r\n\t\t//cache miss\r\n\t\tif (qb != null)\r\n\t\t{\r\n\t\t\tcachedFilter = new QueryWrapperFilter(q);\r\n\t\t} else\r\n\t\t{\r\n\t\t\tcachedFilter = new CachingWrapperFilter(f);\r\n\t\t}\r\n\r\n\t\tfilterCache.put(cacheKey, cachedFilter);\r\n\t\treturn cachedFilter;\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69d87d34a81230de56333f52f590caeb6d80667","date":1257848306,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder#getFilter(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder#getFilter(Element).mjava","sourceNew":"\tpublic synchronized Filter getFilter(Element e) throws ParserException\n\t{\n\n\t\tElement childElement = DOMUtils.getFirstChildOrFail(e);\n\n\t\tif (filterCache == null)\n\t\t{\n\t\t\tfilterCache = new LRUCache<Object,Filter>(cacheSize);\n\t\t}\n\n\t\t// Test to see if child Element is a query or filter that needs to be\n\t\t// cached\n\t\tQueryBuilder qb = queryFactory.getQueryBuilder(childElement.getNodeName());\n\t\tObject cacheKey = null;\n\t\tQuery q = null;\n\t\tFilter f = null;\n\t\tif (qb != null)\n\t\t{\n\t\t\tq = qb.getQuery(childElement);\n\t\t\tcacheKey = q;\n\t\t} else\n\t\t{\n\t\t\tf = filterFactory.getFilter(childElement);\n\t\t\tcacheKey = f;\n\t\t}\n\t\tFilter cachedFilter = filterCache.get(cacheKey);\n\t\tif (cachedFilter != null)\n\t\t{\n\t\t\treturn cachedFilter; // cache hit\n\t\t}\n\t\t\n\t\t//cache miss\n\t\tif (qb != null)\n\t\t{\n\t\t\tcachedFilter = new QueryWrapperFilter(q);\n\t\t} else\n\t\t{\n\t\t\tcachedFilter = new CachingWrapperFilter(f);\n\t\t}\n\n\t\tfilterCache.put(cacheKey, cachedFilter);\n\t\treturn cachedFilter;\n\t}\n\n","sourceOld":"\tpublic synchronized Filter getFilter(Element e) throws ParserException\n\t{\n\n\t\tElement childElement = DOMUtils.getFirstChildOrFail(e);\n\n\t\tif (filterCache == null)\n\t\t{\n\t\t\tfilterCache = new LRUCache(cacheSize);\n\t\t}\n\n\t\t// Test to see if child Element is a query or filter that needs to be\n\t\t// cached\n\t\tQueryBuilder qb = queryFactory.getQueryBuilder(childElement.getNodeName());\n\t\tObject cacheKey = null;\n\t\tQuery q = null;\n\t\tFilter f = null;\n\t\tif (qb != null)\n\t\t{\n\t\t\tq = qb.getQuery(childElement);\n\t\t\tcacheKey = q;\n\t\t} else\n\t\t{\n\t\t\tf = filterFactory.getFilter(childElement);\n\t\t\tcacheKey = f;\n\t\t}\n\t\tFilter cachedFilter = (Filter) filterCache.get(cacheKey);\n\t\tif (cachedFilter != null)\n\t\t{\n\t\t\treturn cachedFilter; // cache hit\n\t\t}\n\t\t\n\t\t//cache miss\n\t\tif (qb != null)\n\t\t{\n\t\t\tcachedFilter = new QueryWrapperFilter(q);\n\t\t} else\n\t\t{\n\t\t\tcachedFilter = new CachingWrapperFilter(f);\n\t\t}\n\n\t\tfilterCache.put(cacheKey, cachedFilter);\n\t\treturn cachedFilter;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder#getFilter(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder#getFilter(Element).mjava","sourceNew":"\tpublic synchronized Filter getFilter(Element e) throws ParserException\n\t{\n\n\t\tElement childElement = DOMUtils.getFirstChildOrFail(e);\n\n\t\tif (filterCache == null)\n\t\t{\n\t\t\tfilterCache = new LRUCache<Object,Filter>(cacheSize);\n\t\t}\n\n\t\t// Test to see if child Element is a query or filter that needs to be\n\t\t// cached\n\t\tQueryBuilder qb = queryFactory.getQueryBuilder(childElement.getNodeName());\n\t\tObject cacheKey = null;\n\t\tQuery q = null;\n\t\tFilter f = null;\n\t\tif (qb != null)\n\t\t{\n\t\t\tq = qb.getQuery(childElement);\n\t\t\tcacheKey = q;\n\t\t} else\n\t\t{\n\t\t\tf = filterFactory.getFilter(childElement);\n\t\t\tcacheKey = f;\n\t\t}\n\t\tFilter cachedFilter = filterCache.get(cacheKey);\n\t\tif (cachedFilter != null)\n\t\t{\n\t\t\treturn cachedFilter; // cache hit\n\t\t}\n\t\t\n\t\t//cache miss\n\t\tif (qb != null)\n\t\t{\n\t\t\tcachedFilter = new QueryWrapperFilter(q);\n\t\t} else\n\t\t{\n\t\t\tcachedFilter = new CachingWrapperFilter(f);\n\t\t}\n\n\t\tfilterCache.put(cacheKey, cachedFilter);\n\t\treturn cachedFilter;\n\t}\n\n","sourceOld":"\tpublic synchronized Filter getFilter(Element e) throws ParserException\n\t{\n\n\t\tElement childElement = DOMUtils.getFirstChildOrFail(e);\n\n\t\tif (filterCache == null)\n\t\t{\n\t\t\tfilterCache = new LRUCache<Object,Filter>(cacheSize);\n\t\t}\n\n\t\t// Test to see if child Element is a query or filter that needs to be\n\t\t// cached\n\t\tQueryBuilder qb = queryFactory.getQueryBuilder(childElement.getNodeName());\n\t\tObject cacheKey = null;\n\t\tQuery q = null;\n\t\tFilter f = null;\n\t\tif (qb != null)\n\t\t{\n\t\t\tq = qb.getQuery(childElement);\n\t\t\tcacheKey = q;\n\t\t} else\n\t\t{\n\t\t\tf = filterFactory.getFilter(childElement);\n\t\t\tcacheKey = f;\n\t\t}\n\t\tFilter cachedFilter = filterCache.get(cacheKey);\n\t\tif (cachedFilter != null)\n\t\t{\n\t\t\treturn cachedFilter; // cache hit\n\t\t}\n\t\t\n\t\t//cache miss\n\t\tif (qb != null)\n\t\t{\n\t\t\tcachedFilter = new QueryWrapperFilter(q);\n\t\t} else\n\t\t{\n\t\t\tcachedFilter = new CachingWrapperFilter(f);\n\t\t}\n\n\t\tfilterCache.put(cacheKey, cachedFilter);\n\t\treturn cachedFilter;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c69d87d34a81230de56333f52f590caeb6d80667":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"eecf500c1b16aa9455fa738e09525bbfe2843c75":["52ce7e961a8217faac8128e3c8fe67819eefdde9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"52ce7e961a8217faac8128e3c8fe67819eefdde9":["ac4d82055808e35fe2a92db7425ad6537779e3d0"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["eecf500c1b16aa9455fa738e09525bbfe2843c75"],"ac4d82055808e35fe2a92db7425ad6537779e3d0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c69d87d34a81230de56333f52f590caeb6d80667"]},"commit2Childs":{"c69d87d34a81230de56333f52f590caeb6d80667":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"eecf500c1b16aa9455fa738e09525bbfe2843c75":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ac4d82055808e35fe2a92db7425ad6537779e3d0"],"52ce7e961a8217faac8128e3c8fe67819eefdde9":["eecf500c1b16aa9455fa738e09525bbfe2843c75"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["c69d87d34a81230de56333f52f590caeb6d80667"],"ac4d82055808e35fe2a92db7425ad6537779e3d0":["52ce7e961a8217faac8128e3c8fe67819eefdde9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}