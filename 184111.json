{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestsBase#testAddDelete().mjava","commits":[{"id":"98a20a1a0f02e19e5121d1b5d95f5af857d609ef","date":1382205865,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestsBase#testAddDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","sourceNew":"  @Test\n  public void testAddDelete() throws Exception {\n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for (int i = 0; i < 3; i++) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField(\"id\", i + \" & 222\", 1.0f);\n    }\n    String id = (String) doc[0].getField(\"id\").getFirstValue();\n    \n    server.add(doc[0]);\n    server.commit();\n    assertNumFound(\"*:*\", 1); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById(id);\n    server.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n    \n    // add it back\n    server.add(doc[0]);\n    server.commit();\n    assertNumFound(\"*:*\", 1); // make sure it got in\n    server.deleteByQuery(\"id:\\\"\" + ClientUtils.escapeQueryChars(id) + \"\\\"\");\n    server.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n    \n    // Add two documents\n    for (SolrInputDocument d : doc) {\n      server.add(d);\n    }\n    server.commit();\n    assertNumFound(\"*:*\", 3); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    List<String> ids = new ArrayList<String>();\n    for (SolrInputDocument d : doc) {\n      ids.add(d.getFieldValue(\"id\").toString());\n    }\n    server.deleteById(ids);\n    server.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n  }\n\n","sourceOld":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    List<String> ids = new ArrayList<String>();\n    for( SolrInputDocument d : doc ) {\n      ids.add(d.getFieldValue(\"id\").toString());\n    }\n    server.deleteById(ids);\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestsBase#testAddDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestsBase#testAddDelete().mjava","sourceNew":"  @Test\n  public void testAddDelete() throws Exception {\n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for (int i = 0; i < 3; i++) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField(\"id\", i + \" & 222\", 1.0f);\n    }\n    String id = (String) doc[0].getField(\"id\").getFirstValue();\n    \n    server.add(doc[0]);\n    server.commit();\n    assertNumFound(\"*:*\", 1); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById(id);\n    server.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n    \n    // add it back\n    server.add(doc[0]);\n    server.commit();\n    assertNumFound(\"*:*\", 1); // make sure it got in\n    server.deleteByQuery(\"id:\\\"\" + ClientUtils.escapeQueryChars(id) + \"\\\"\");\n    server.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n    \n    // Add two documents\n    for (SolrInputDocument d : doc) {\n      server.add(d);\n    }\n    server.commit();\n    assertNumFound(\"*:*\", 3); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    List<String> ids = new ArrayList<>();\n    for (SolrInputDocument d : doc) {\n      ids.add(d.getFieldValue(\"id\").toString());\n    }\n    server.deleteById(ids);\n    server.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n  }\n\n","sourceOld":"  @Test\n  public void testAddDelete() throws Exception {\n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for (int i = 0; i < 3; i++) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField(\"id\", i + \" & 222\", 1.0f);\n    }\n    String id = (String) doc[0].getField(\"id\").getFirstValue();\n    \n    server.add(doc[0]);\n    server.commit();\n    assertNumFound(\"*:*\", 1); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById(id);\n    server.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n    \n    // add it back\n    server.add(doc[0]);\n    server.commit();\n    assertNumFound(\"*:*\", 1); // make sure it got in\n    server.deleteByQuery(\"id:\\\"\" + ClientUtils.escapeQueryChars(id) + \"\\\"\");\n    server.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n    \n    // Add two documents\n    for (SolrInputDocument d : doc) {\n      server.add(d);\n    }\n    server.commit();\n    assertNumFound(\"*:*\", 3); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    List<String> ids = new ArrayList<String>();\n    for (SolrInputDocument d : doc) {\n      ids.add(d.getFieldValue(\"id\").toString());\n    }\n    server.deleteById(ids);\n    server.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestsBase#testAddDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestsBase#testAddDelete().mjava","sourceNew":"  @Test\n  public void testAddDelete() throws Exception {\n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for (int i = 0; i < 3; i++) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField(\"id\", i + \" & 222\", 1.0f);\n    }\n    String id = (String) doc[0].getField(\"id\").getFirstValue();\n    \n    client.add(doc[0]);\n    client.commit();\n    assertNumFound(\"*:*\", 1); // make sure it got in\n    \n    // make sure it got in there\n    client.deleteById(id);\n    client.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n    \n    // add it back\n    client.add(doc[0]);\n    client.commit();\n    assertNumFound(\"*:*\", 1); // make sure it got in\n    client.deleteByQuery(\"id:\\\"\" + ClientUtils.escapeQueryChars(id) + \"\\\"\");\n    client.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n    \n    // Add two documents\n    for (SolrInputDocument d : doc) {\n      client.add(d);\n    }\n    client.commit();\n    assertNumFound(\"*:*\", 3); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    List<String> ids = new ArrayList<>();\n    for (SolrInputDocument d : doc) {\n      ids.add(d.getFieldValue(\"id\").toString());\n    }\n    client.deleteById(ids);\n    client.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n  }\n\n","sourceOld":"  @Test\n  public void testAddDelete() throws Exception {\n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for (int i = 0; i < 3; i++) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField(\"id\", i + \" & 222\", 1.0f);\n    }\n    String id = (String) doc[0].getField(\"id\").getFirstValue();\n    \n    server.add(doc[0]);\n    server.commit();\n    assertNumFound(\"*:*\", 1); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById(id);\n    server.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n    \n    // add it back\n    server.add(doc[0]);\n    server.commit();\n    assertNumFound(\"*:*\", 1); // make sure it got in\n    server.deleteByQuery(\"id:\\\"\" + ClientUtils.escapeQueryChars(id) + \"\\\"\");\n    server.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n    \n    // Add two documents\n    for (SolrInputDocument d : doc) {\n      server.add(d);\n    }\n    server.commit();\n    assertNumFound(\"*:*\", 3); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    List<String> ids = new ArrayList<>();\n    for (SolrInputDocument d : doc) {\n      ids.add(d.getFieldValue(\"id\").toString());\n    }\n    server.deleteById(ids);\n    server.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestsBase#testAddDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestsBase#testAddDelete().mjava","sourceNew":"  @Test\n  public void testAddDelete() throws Exception {\n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for (int i = 0; i < 3; i++) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField(\"id\", i + \" & 222\");\n    }\n    String id = (String) doc[0].getField(\"id\").getFirstValue();\n    \n    client.add(doc[0]);\n    client.commit();\n    assertNumFound(\"*:*\", 1); // make sure it got in\n    \n    // make sure it got in there\n    client.deleteById(id);\n    client.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n    \n    // add it back\n    client.add(doc[0]);\n    client.commit();\n    assertNumFound(\"*:*\", 1); // make sure it got in\n    client.deleteByQuery(\"id:\\\"\" + ClientUtils.escapeQueryChars(id) + \"\\\"\");\n    client.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n    \n    // Add two documents\n    for (SolrInputDocument d : doc) {\n      client.add(d);\n    }\n    client.commit();\n    assertNumFound(\"*:*\", 3); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    List<String> ids = new ArrayList<>();\n    for (SolrInputDocument d : doc) {\n      ids.add(d.getFieldValue(\"id\").toString());\n    }\n    client.deleteById(ids);\n    client.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n  }\n\n","sourceOld":"  @Test\n  public void testAddDelete() throws Exception {\n    SolrClient client = getSolrClient();\n    \n    // Empty the database...\n    client.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for (int i = 0; i < 3; i++) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField(\"id\", i + \" & 222\", 1.0f);\n    }\n    String id = (String) doc[0].getField(\"id\").getFirstValue();\n    \n    client.add(doc[0]);\n    client.commit();\n    assertNumFound(\"*:*\", 1); // make sure it got in\n    \n    // make sure it got in there\n    client.deleteById(id);\n    client.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n    \n    // add it back\n    client.add(doc[0]);\n    client.commit();\n    assertNumFound(\"*:*\", 1); // make sure it got in\n    client.deleteByQuery(\"id:\\\"\" + ClientUtils.escapeQueryChars(id) + \"\\\"\");\n    client.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n    \n    // Add two documents\n    for (SolrInputDocument d : doc) {\n      client.add(d);\n    }\n    client.commit();\n    assertNumFound(\"*:*\", 3); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    List<String> ids = new ArrayList<>();\n    for (SolrInputDocument d : doc) {\n      ids.add(d.getFieldValue(\"id\").toString());\n    }\n    client.deleteById(ids);\n    client.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"98a20a1a0f02e19e5121d1b5d95f5af857d609ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["98a20a1a0f02e19e5121d1b5d95f5af857d609ef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"acd9883560fd89e6448b2b447302fe543040cd4f":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acd9883560fd89e6448b2b447302fe543040cd4f"]},"commit2Childs":{"98a20a1a0f02e19e5121d1b5d95f5af857d609ef":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["bafca15d8e408346a67f4282ad1143b88023893b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["98a20a1a0f02e19e5121d1b5d95f5af857d609ef"],"bafca15d8e408346a67f4282ad1143b88023893b":["acd9883560fd89e6448b2b447302fe543040cd4f"],"acd9883560fd89e6448b2b447302fe543040cd4f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}