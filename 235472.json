{"path":"lucene/src/test-framework/java/org/apache/lucene/util/ThrottledIndexOutput#getDelay(boolean).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/ThrottledIndexOutput#getDelay(boolean).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/ThrottledIndexOutput#getDelay(boolean).mjava","sourceNew":"  protected long getDelay(boolean closing) {\n    if (pendingBytes > 0 && (closing || pendingBytes > minBytesWritten)) {\n      long actualBps = (timeElapsed / pendingBytes) * 1000000000l; // nano to sec\n      if (actualBps > bytesPerSecond) {\n        long expected = (pendingBytes * 1000l / bytesPerSecond) ;\n        final long delay = expected - (timeElapsed / 1000000l) ;\n        pendingBytes = 0;\n        timeElapsed = 0;\n        return delay;\n      }\n    }\n    return 0;\n\n  }\n\n","sourceOld":"  protected long getDelay(boolean closing) {\n    if (pendingBytes > 0 && (closing || pendingBytes > minBytesWritten)) {\n      long actualBps = (timeElapsed / pendingBytes) * 1000000000l; // nano to sec\n      if (actualBps > bytesPerSecond) {\n        long expected = (pendingBytes * 1000l / bytesPerSecond) ;\n        final long delay = expected - (timeElapsed / 1000000l) ;\n        pendingBytes = 0;\n        timeElapsed = 0;\n        return delay;\n      }\n    }\n    return 0;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/ThrottledIndexOutput#getDelay(boolean).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/ThrottledIndexOutput#getDelay(boolean).mjava","sourceNew":"  protected long getDelay(boolean closing) {\n    if (pendingBytes > 0 && (closing || pendingBytes > minBytesWritten)) {\n      long actualBps = (timeElapsed / pendingBytes) * 1000000000l; // nano to sec\n      if (actualBps > bytesPerSecond) {\n        long expected = (pendingBytes * 1000l / bytesPerSecond) ;\n        final long delay = expected - (timeElapsed / 1000000l) ;\n        pendingBytes = 0;\n        timeElapsed = 0;\n        return delay;\n      }\n    }\n    return 0;\n\n  }\n\n","sourceOld":"  protected long getDelay(boolean closing) {\n    if (pendingBytes > 0 && (closing || pendingBytes > minBytesWritten)) {\n      long actualBps = (timeElapsed / pendingBytes) * 1000000000l; // nano to sec\n      if (actualBps > bytesPerSecond) {\n        long expected = (pendingBytes * 1000l / bytesPerSecond) ;\n        final long delay = expected - (timeElapsed / 1000000l) ;\n        pendingBytes = 0;\n        timeElapsed = 0;\n        return delay;\n      }\n    }\n    return 0;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7b91922b55d15444d554721b352861d028eb8278"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}