{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testGeoPolygonBoundsCase2().mjava","commits":[{"id":"40aa98241c87d86a0077beb8023713d93a0becfe","date":1459784560,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testGeoPolygonBoundsCase2().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGeoPolygonBoundsCase2() {\n    // [junit4]   1> TEST: iter=23 shape=GeoCompositeMembershipShape: {[GeoConvexPolygon: {planetmodel=PlanetModel(ab=0.7563871189161702 c=1.2436128810838298), points=\n    // [[lat=0.014071770744627236, lon=0.011030818292803128],\n    //  [lat=0.006772117088906782, lon=-0.0012531892445234592],\n    //  [lat=0.0022201615609504792, lon=0.005941293187389326]]}, GeoConcavePolygon: {planetmodel=PlanetModel(ab=0.7563871189161702 c=1.2436128810838298), points=\n    // [[lat=-0.005507100238396111, lon=-0.008487706131259667],\n    //  [lat=0.014071770744627236, lon=0.011030818292803128],\n    //  [lat=0.0022201615609504792, lon=0.005941293187389326]]}]}\n\n    PlanetModel pm = new PlanetModel(0.7563871189161702, 1.2436128810838298);\n    // Build the polygon\n    GeoCompositeMembershipShape c = new GeoCompositeMembershipShape();\n    List<GeoPoint> points1 = new ArrayList<>();\n    points1.add(new GeoPoint(pm, 0.014071770744627236, 0.011030818292803128));\n    points1.add(new GeoPoint(pm, 0.006772117088906782, -0.0012531892445234592));\n    points1.add(new GeoPoint(pm, 0.0022201615609504792, 0.005941293187389326));\n    BitSet p1bits = new BitSet();\n    c.addShape(new GeoConvexPolygon(pm, points1, p1bits, true));\n    List<GeoPoint> points2 = new ArrayList<>();\n    points2.add(new GeoPoint(pm, -0.005507100238396111, -0.008487706131259667));\n    points2.add(new GeoPoint(pm, 0.014071770744627236, 0.011030818292803128));\n    points2.add(new GeoPoint(pm, 0.0022201615609504792, 0.005941293187389326));\n    BitSet p2bits = new BitSet();\n    p2bits.set(1, true);\n    c.addShape(new GeoConcavePolygon(pm, points2, p2bits, false));\n    //System.out.println(c);\n    \n    // [junit4]   1>   point=[lat=0.003540694517552105, lon=-9.99517927901697E-4]\n    // [junit4]   1>   quantized=[X=0.7563849869428783, Y=-7.560204674780763E-4, Z=0.0026781405884151086]\n    GeoPoint point = new GeoPoint(pm, 0.003540694517552105, -9.99517927901697E-4);\n    GeoPoint pointQuantized = new GeoPoint(0.7563849869428783, -7.560204674780763E-4, 0.0026781405884151086);\n    \n    // Now try bounds\n    XYZBounds xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    GeoArea area = GeoAreaFactory.makeGeoArea(pm,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n      \n    assertTrue(c.isWithin(point));\n    assertTrue(c.isWithin(pointQuantized));\n    // This fails!!\n    assertTrue(area.isWithin(point));\n    assertTrue(area.isWithin(pointQuantized));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09af2c9610ce53a4b25fd99344299b40318a4a1a","date":1459876565,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testGeoPolygonBoundsCase2().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGeoPolygonBoundsCase2() {\n    // [junit4]   1> TEST: iter=23 shape=GeoCompositeMembershipShape: {[GeoConvexPolygon: {planetmodel=PlanetModel(ab=0.7563871189161702 c=1.2436128810838298), points=\n    // [[lat=0.014071770744627236, lon=0.011030818292803128],\n    //  [lat=0.006772117088906782, lon=-0.0012531892445234592],\n    //  [lat=0.0022201615609504792, lon=0.005941293187389326]]}, GeoConcavePolygon: {planetmodel=PlanetModel(ab=0.7563871189161702 c=1.2436128810838298), points=\n    // [[lat=-0.005507100238396111, lon=-0.008487706131259667],\n    //  [lat=0.014071770744627236, lon=0.011030818292803128],\n    //  [lat=0.0022201615609504792, lon=0.005941293187389326]]}]}\n\n    PlanetModel pm = new PlanetModel(0.7563871189161702, 1.2436128810838298);\n    // Build the polygon\n    GeoCompositeMembershipShape c = new GeoCompositeMembershipShape();\n    List<GeoPoint> points1 = new ArrayList<>();\n    points1.add(new GeoPoint(pm, 0.014071770744627236, 0.011030818292803128));\n    points1.add(new GeoPoint(pm, 0.006772117088906782, -0.0012531892445234592));\n    points1.add(new GeoPoint(pm, 0.0022201615609504792, 0.005941293187389326));\n    BitSet p1bits = new BitSet();\n    c.addShape(new GeoConvexPolygon(pm, points1, p1bits, true));\n    List<GeoPoint> points2 = new ArrayList<>();\n    points2.add(new GeoPoint(pm, -0.005507100238396111, -0.008487706131259667));\n    points2.add(new GeoPoint(pm, 0.014071770744627236, 0.011030818292803128));\n    points2.add(new GeoPoint(pm, 0.0022201615609504792, 0.005941293187389326));\n    BitSet p2bits = new BitSet();\n    p2bits.set(1, true);\n    c.addShape(new GeoConcavePolygon(pm, points2, p2bits, false));\n    //System.out.println(c);\n    \n    // [junit4]   1>   point=[lat=0.003540694517552105, lon=-9.99517927901697E-4]\n    // [junit4]   1>   quantized=[X=0.7563849869428783, Y=-7.560204674780763E-4, Z=0.0026781405884151086]\n    GeoPoint point = new GeoPoint(pm, 0.003540694517552105, -9.99517927901697E-4);\n    GeoPoint pointQuantized = new GeoPoint(0.7563849869428783, -7.560204674780763E-4, 0.0026781405884151086);\n    \n    // Now try bounds\n    XYZBounds xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    GeoArea area = GeoAreaFactory.makeGeoArea(pm,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n      \n    assertTrue(c.isWithin(point));\n    assertTrue(c.isWithin(pointQuantized));\n    // This fails!!\n    assertTrue(area.isWithin(point));\n    assertTrue(area.isWithin(pointQuantized));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a92ffe0d2961113e5588e614f8dc22b42bf10a95","date":1503304229,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testGeoPolygonBoundsCase2().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testGeoPolygonBoundsCase2().mjava","sourceNew":"  @Test\n  public void testGeoPolygonBoundsCase2() {\n    // [junit4]   1> TEST: iter=23 shape=GeoCompositeMembershipShape: {[GeoConvexPolygon: {planetmodel=PlanetModel(ab=0.7563871189161702 c=1.2436128810838298), points=\n    // [[lat=0.014071770744627236, lon=0.011030818292803128],\n    //  [lat=0.006772117088906782, lon=-0.0012531892445234592],\n    //  [lat=0.0022201615609504792, lon=0.005941293187389326]]}, GeoConcavePolygon: {planetmodel=PlanetModel(ab=0.7563871189161702 c=1.2436128810838298), points=\n    // [[lat=-0.005507100238396111, lon=-0.008487706131259667],\n    //  [lat=0.014071770744627236, lon=0.011030818292803128],\n    //  [lat=0.0022201615609504792, lon=0.005941293187389326]]}]}\n\n    PlanetModel pm = new PlanetModel(0.7563871189161702, 1.2436128810838298);\n    // Build the polygon\n    GeoCompositeMembershipShape c = new GeoCompositeMembershipShape(pm);\n    List<GeoPoint> points1 = new ArrayList<>();\n    points1.add(new GeoPoint(pm, 0.014071770744627236, 0.011030818292803128));\n    points1.add(new GeoPoint(pm, 0.006772117088906782, -0.0012531892445234592));\n    points1.add(new GeoPoint(pm, 0.0022201615609504792, 0.005941293187389326));\n    BitSet p1bits = new BitSet();\n    c.addShape(new GeoConvexPolygon(pm, points1, p1bits, true));\n    List<GeoPoint> points2 = new ArrayList<>();\n    points2.add(new GeoPoint(pm, -0.005507100238396111, -0.008487706131259667));\n    points2.add(new GeoPoint(pm, 0.014071770744627236, 0.011030818292803128));\n    points2.add(new GeoPoint(pm, 0.0022201615609504792, 0.005941293187389326));\n    BitSet p2bits = new BitSet();\n    p2bits.set(1, true);\n    c.addShape(new GeoConcavePolygon(pm, points2, p2bits, false));\n    //System.out.println(c);\n    \n    // [junit4]   1>   point=[lat=0.003540694517552105, lon=-9.99517927901697E-4]\n    // [junit4]   1>   quantized=[X=0.7563849869428783, Y=-7.560204674780763E-4, Z=0.0026781405884151086]\n    GeoPoint point = new GeoPoint(pm, 0.003540694517552105, -9.99517927901697E-4);\n    GeoPoint pointQuantized = new GeoPoint(0.7563849869428783, -7.560204674780763E-4, 0.0026781405884151086);\n    \n    // Now try bounds\n    XYZBounds xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    GeoArea area = GeoAreaFactory.makeGeoArea(pm,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n      \n    assertTrue(c.isWithin(point));\n    assertTrue(c.isWithin(pointQuantized));\n    // This fails!!\n    assertTrue(area.isWithin(point));\n    assertTrue(area.isWithin(pointQuantized));\n  }\n\n","sourceOld":"  @Test\n  public void testGeoPolygonBoundsCase2() {\n    // [junit4]   1> TEST: iter=23 shape=GeoCompositeMembershipShape: {[GeoConvexPolygon: {planetmodel=PlanetModel(ab=0.7563871189161702 c=1.2436128810838298), points=\n    // [[lat=0.014071770744627236, lon=0.011030818292803128],\n    //  [lat=0.006772117088906782, lon=-0.0012531892445234592],\n    //  [lat=0.0022201615609504792, lon=0.005941293187389326]]}, GeoConcavePolygon: {planetmodel=PlanetModel(ab=0.7563871189161702 c=1.2436128810838298), points=\n    // [[lat=-0.005507100238396111, lon=-0.008487706131259667],\n    //  [lat=0.014071770744627236, lon=0.011030818292803128],\n    //  [lat=0.0022201615609504792, lon=0.005941293187389326]]}]}\n\n    PlanetModel pm = new PlanetModel(0.7563871189161702, 1.2436128810838298);\n    // Build the polygon\n    GeoCompositeMembershipShape c = new GeoCompositeMembershipShape();\n    List<GeoPoint> points1 = new ArrayList<>();\n    points1.add(new GeoPoint(pm, 0.014071770744627236, 0.011030818292803128));\n    points1.add(new GeoPoint(pm, 0.006772117088906782, -0.0012531892445234592));\n    points1.add(new GeoPoint(pm, 0.0022201615609504792, 0.005941293187389326));\n    BitSet p1bits = new BitSet();\n    c.addShape(new GeoConvexPolygon(pm, points1, p1bits, true));\n    List<GeoPoint> points2 = new ArrayList<>();\n    points2.add(new GeoPoint(pm, -0.005507100238396111, -0.008487706131259667));\n    points2.add(new GeoPoint(pm, 0.014071770744627236, 0.011030818292803128));\n    points2.add(new GeoPoint(pm, 0.0022201615609504792, 0.005941293187389326));\n    BitSet p2bits = new BitSet();\n    p2bits.set(1, true);\n    c.addShape(new GeoConcavePolygon(pm, points2, p2bits, false));\n    //System.out.println(c);\n    \n    // [junit4]   1>   point=[lat=0.003540694517552105, lon=-9.99517927901697E-4]\n    // [junit4]   1>   quantized=[X=0.7563849869428783, Y=-7.560204674780763E-4, Z=0.0026781405884151086]\n    GeoPoint point = new GeoPoint(pm, 0.003540694517552105, -9.99517927901697E-4);\n    GeoPoint pointQuantized = new GeoPoint(0.7563849869428783, -7.560204674780763E-4, 0.0026781405884151086);\n    \n    // Now try bounds\n    XYZBounds xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    GeoArea area = GeoAreaFactory.makeGeoArea(pm,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n      \n    assertTrue(c.isWithin(point));\n    assertTrue(c.isWithin(pointQuantized));\n    // This fails!!\n    assertTrue(area.isWithin(point));\n    assertTrue(area.isWithin(pointQuantized));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0dcd28a23753c14d56c7d2c5ba71cf1e03d532b","date":1503230479,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testGeoPolygonBoundsCase2().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testGeoPolygonBoundsCase2().mjava","sourceNew":"  @Test\n  public void testGeoPolygonBoundsCase2() {\n    // [junit4]   1> TEST: iter=23 shape=GeoCompositeMembershipShape: {[GeoConvexPolygon: {planetmodel=PlanetModel(ab=0.7563871189161702 c=1.2436128810838298), points=\n    // [[lat=0.014071770744627236, lon=0.011030818292803128],\n    //  [lat=0.006772117088906782, lon=-0.0012531892445234592],\n    //  [lat=0.0022201615609504792, lon=0.005941293187389326]]}, GeoConcavePolygon: {planetmodel=PlanetModel(ab=0.7563871189161702 c=1.2436128810838298), points=\n    // [[lat=-0.005507100238396111, lon=-0.008487706131259667],\n    //  [lat=0.014071770744627236, lon=0.011030818292803128],\n    //  [lat=0.0022201615609504792, lon=0.005941293187389326]]}]}\n\n    PlanetModel pm = new PlanetModel(0.7563871189161702, 1.2436128810838298);\n    // Build the polygon\n    GeoCompositeMembershipShape c = new GeoCompositeMembershipShape(pm);\n    List<GeoPoint> points1 = new ArrayList<>();\n    points1.add(new GeoPoint(pm, 0.014071770744627236, 0.011030818292803128));\n    points1.add(new GeoPoint(pm, 0.006772117088906782, -0.0012531892445234592));\n    points1.add(new GeoPoint(pm, 0.0022201615609504792, 0.005941293187389326));\n    BitSet p1bits = new BitSet();\n    c.addShape(new GeoConvexPolygon(pm, points1, p1bits, true));\n    List<GeoPoint> points2 = new ArrayList<>();\n    points2.add(new GeoPoint(pm, -0.005507100238396111, -0.008487706131259667));\n    points2.add(new GeoPoint(pm, 0.014071770744627236, 0.011030818292803128));\n    points2.add(new GeoPoint(pm, 0.0022201615609504792, 0.005941293187389326));\n    BitSet p2bits = new BitSet();\n    p2bits.set(1, true);\n    c.addShape(new GeoConcavePolygon(pm, points2, p2bits, false));\n    //System.out.println(c);\n    \n    // [junit4]   1>   point=[lat=0.003540694517552105, lon=-9.99517927901697E-4]\n    // [junit4]   1>   quantized=[X=0.7563849869428783, Y=-7.560204674780763E-4, Z=0.0026781405884151086]\n    GeoPoint point = new GeoPoint(pm, 0.003540694517552105, -9.99517927901697E-4);\n    GeoPoint pointQuantized = new GeoPoint(0.7563849869428783, -7.560204674780763E-4, 0.0026781405884151086);\n    \n    // Now try bounds\n    XYZBounds xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    GeoArea area = GeoAreaFactory.makeGeoArea(pm,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n      \n    assertTrue(c.isWithin(point));\n    assertTrue(c.isWithin(pointQuantized));\n    // This fails!!\n    assertTrue(area.isWithin(point));\n    assertTrue(area.isWithin(pointQuantized));\n  }\n\n","sourceOld":"  @Test\n  public void testGeoPolygonBoundsCase2() {\n    // [junit4]   1> TEST: iter=23 shape=GeoCompositeMembershipShape: {[GeoConvexPolygon: {planetmodel=PlanetModel(ab=0.7563871189161702 c=1.2436128810838298), points=\n    // [[lat=0.014071770744627236, lon=0.011030818292803128],\n    //  [lat=0.006772117088906782, lon=-0.0012531892445234592],\n    //  [lat=0.0022201615609504792, lon=0.005941293187389326]]}, GeoConcavePolygon: {planetmodel=PlanetModel(ab=0.7563871189161702 c=1.2436128810838298), points=\n    // [[lat=-0.005507100238396111, lon=-0.008487706131259667],\n    //  [lat=0.014071770744627236, lon=0.011030818292803128],\n    //  [lat=0.0022201615609504792, lon=0.005941293187389326]]}]}\n\n    PlanetModel pm = new PlanetModel(0.7563871189161702, 1.2436128810838298);\n    // Build the polygon\n    GeoCompositeMembershipShape c = new GeoCompositeMembershipShape();\n    List<GeoPoint> points1 = new ArrayList<>();\n    points1.add(new GeoPoint(pm, 0.014071770744627236, 0.011030818292803128));\n    points1.add(new GeoPoint(pm, 0.006772117088906782, -0.0012531892445234592));\n    points1.add(new GeoPoint(pm, 0.0022201615609504792, 0.005941293187389326));\n    BitSet p1bits = new BitSet();\n    c.addShape(new GeoConvexPolygon(pm, points1, p1bits, true));\n    List<GeoPoint> points2 = new ArrayList<>();\n    points2.add(new GeoPoint(pm, -0.005507100238396111, -0.008487706131259667));\n    points2.add(new GeoPoint(pm, 0.014071770744627236, 0.011030818292803128));\n    points2.add(new GeoPoint(pm, 0.0022201615609504792, 0.005941293187389326));\n    BitSet p2bits = new BitSet();\n    p2bits.set(1, true);\n    c.addShape(new GeoConcavePolygon(pm, points2, p2bits, false));\n    //System.out.println(c);\n    \n    // [junit4]   1>   point=[lat=0.003540694517552105, lon=-9.99517927901697E-4]\n    // [junit4]   1>   quantized=[X=0.7563849869428783, Y=-7.560204674780763E-4, Z=0.0026781405884151086]\n    GeoPoint point = new GeoPoint(pm, 0.003540694517552105, -9.99517927901697E-4);\n    GeoPoint pointQuantized = new GeoPoint(0.7563849869428783, -7.560204674780763E-4, 0.0026781405884151086);\n    \n    // Now try bounds\n    XYZBounds xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    GeoArea area = GeoAreaFactory.makeGeoArea(pm,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n      \n    assertTrue(c.isWithin(point));\n    assertTrue(c.isWithin(pointQuantized));\n    // This fails!!\n    assertTrue(area.isWithin(point));\n    assertTrue(area.isWithin(pointQuantized));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3051d6122751c8f6cc1e9cf24592658b59843ec2","date":1503298024,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testGeoPolygonBoundsCase2().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testGeoPolygonBoundsCase2().mjava","sourceNew":"  @Test\n  public void testGeoPolygonBoundsCase2() {\n    // [junit4]   1> TEST: iter=23 shape=GeoCompositeMembershipShape: {[GeoConvexPolygon: {planetmodel=PlanetModel(ab=0.7563871189161702 c=1.2436128810838298), points=\n    // [[lat=0.014071770744627236, lon=0.011030818292803128],\n    //  [lat=0.006772117088906782, lon=-0.0012531892445234592],\n    //  [lat=0.0022201615609504792, lon=0.005941293187389326]]}, GeoConcavePolygon: {planetmodel=PlanetModel(ab=0.7563871189161702 c=1.2436128810838298), points=\n    // [[lat=-0.005507100238396111, lon=-0.008487706131259667],\n    //  [lat=0.014071770744627236, lon=0.011030818292803128],\n    //  [lat=0.0022201615609504792, lon=0.005941293187389326]]}]}\n\n    PlanetModel pm = new PlanetModel(0.7563871189161702, 1.2436128810838298);\n    // Build the polygon\n    GeoCompositeMembershipShape c = new GeoCompositeMembershipShape(pm);\n    List<GeoPoint> points1 = new ArrayList<>();\n    points1.add(new GeoPoint(pm, 0.014071770744627236, 0.011030818292803128));\n    points1.add(new GeoPoint(pm, 0.006772117088906782, -0.0012531892445234592));\n    points1.add(new GeoPoint(pm, 0.0022201615609504792, 0.005941293187389326));\n    BitSet p1bits = new BitSet();\n    c.addShape(new GeoConvexPolygon(pm, points1, p1bits, true));\n    List<GeoPoint> points2 = new ArrayList<>();\n    points2.add(new GeoPoint(pm, -0.005507100238396111, -0.008487706131259667));\n    points2.add(new GeoPoint(pm, 0.014071770744627236, 0.011030818292803128));\n    points2.add(new GeoPoint(pm, 0.0022201615609504792, 0.005941293187389326));\n    BitSet p2bits = new BitSet();\n    p2bits.set(1, true);\n    c.addShape(new GeoConcavePolygon(pm, points2, p2bits, false));\n    //System.out.println(c);\n    \n    // [junit4]   1>   point=[lat=0.003540694517552105, lon=-9.99517927901697E-4]\n    // [junit4]   1>   quantized=[X=0.7563849869428783, Y=-7.560204674780763E-4, Z=0.0026781405884151086]\n    GeoPoint point = new GeoPoint(pm, 0.003540694517552105, -9.99517927901697E-4);\n    GeoPoint pointQuantized = new GeoPoint(0.7563849869428783, -7.560204674780763E-4, 0.0026781405884151086);\n    \n    // Now try bounds\n    XYZBounds xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    GeoArea area = GeoAreaFactory.makeGeoArea(pm,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n      \n    assertTrue(c.isWithin(point));\n    assertTrue(c.isWithin(pointQuantized));\n    // This fails!!\n    assertTrue(area.isWithin(point));\n    assertTrue(area.isWithin(pointQuantized));\n  }\n\n","sourceOld":"  @Test\n  public void testGeoPolygonBoundsCase2() {\n    // [junit4]   1> TEST: iter=23 shape=GeoCompositeMembershipShape: {[GeoConvexPolygon: {planetmodel=PlanetModel(ab=0.7563871189161702 c=1.2436128810838298), points=\n    // [[lat=0.014071770744627236, lon=0.011030818292803128],\n    //  [lat=0.006772117088906782, lon=-0.0012531892445234592],\n    //  [lat=0.0022201615609504792, lon=0.005941293187389326]]}, GeoConcavePolygon: {planetmodel=PlanetModel(ab=0.7563871189161702 c=1.2436128810838298), points=\n    // [[lat=-0.005507100238396111, lon=-0.008487706131259667],\n    //  [lat=0.014071770744627236, lon=0.011030818292803128],\n    //  [lat=0.0022201615609504792, lon=0.005941293187389326]]}]}\n\n    PlanetModel pm = new PlanetModel(0.7563871189161702, 1.2436128810838298);\n    // Build the polygon\n    GeoCompositeMembershipShape c = new GeoCompositeMembershipShape();\n    List<GeoPoint> points1 = new ArrayList<>();\n    points1.add(new GeoPoint(pm, 0.014071770744627236, 0.011030818292803128));\n    points1.add(new GeoPoint(pm, 0.006772117088906782, -0.0012531892445234592));\n    points1.add(new GeoPoint(pm, 0.0022201615609504792, 0.005941293187389326));\n    BitSet p1bits = new BitSet();\n    c.addShape(new GeoConvexPolygon(pm, points1, p1bits, true));\n    List<GeoPoint> points2 = new ArrayList<>();\n    points2.add(new GeoPoint(pm, -0.005507100238396111, -0.008487706131259667));\n    points2.add(new GeoPoint(pm, 0.014071770744627236, 0.011030818292803128));\n    points2.add(new GeoPoint(pm, 0.0022201615609504792, 0.005941293187389326));\n    BitSet p2bits = new BitSet();\n    p2bits.set(1, true);\n    c.addShape(new GeoConcavePolygon(pm, points2, p2bits, false));\n    //System.out.println(c);\n    \n    // [junit4]   1>   point=[lat=0.003540694517552105, lon=-9.99517927901697E-4]\n    // [junit4]   1>   quantized=[X=0.7563849869428783, Y=-7.560204674780763E-4, Z=0.0026781405884151086]\n    GeoPoint point = new GeoPoint(pm, 0.003540694517552105, -9.99517927901697E-4);\n    GeoPoint pointQuantized = new GeoPoint(0.7563849869428783, -7.560204674780763E-4, 0.0026781405884151086);\n    \n    // Now try bounds\n    XYZBounds xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    GeoArea area = GeoAreaFactory.makeGeoArea(pm,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n      \n    assertTrue(c.isWithin(point));\n    assertTrue(c.isWithin(pointQuantized));\n    // This fails!!\n    assertTrue(area.isWithin(point));\n    assertTrue(area.isWithin(pointQuantized));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a","date":1583186777,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testGeoPolygonBoundsCase2().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testGeoPolygonBoundsCase2().mjava","sourceNew":"  @Test\n  public void testGeoPolygonBoundsCase2() {\n    // [junit4]   1> TEST: iter=23 shape=GeoCompositeMembershipShape: {[GeoConvexPolygon: {planetmodel=PlanetModel(xyScaling=0.7563871189161702 zScaling=1.2436128810838298), points=\n    // [[lat=0.014071770744627236, lon=0.011030818292803128],\n    //  [lat=0.006772117088906782, lon=-0.0012531892445234592],\n    //  [lat=0.0022201615609504792, lon=0.005941293187389326]]}, GeoConcavePolygon: {planetmodel=PlanetModel(xyScaling=0.7563871189161702 zScaling=1.2436128810838298), points=\n    // [[lat=-0.005507100238396111, lon=-0.008487706131259667],\n    //  [lat=0.014071770744627236, lon=0.011030818292803128],\n    //  [lat=0.0022201615609504792, lon=0.005941293187389326]]}]}\n\n    PlanetModel pm = new PlanetModel(0.7563871189161702, 1.2436128810838298);\n    // Build the polygon\n    GeoCompositeMembershipShape c = new GeoCompositeMembershipShape(pm);\n    List<GeoPoint> points1 = new ArrayList<>();\n    points1.add(new GeoPoint(pm, 0.014071770744627236, 0.011030818292803128));\n    points1.add(new GeoPoint(pm, 0.006772117088906782, -0.0012531892445234592));\n    points1.add(new GeoPoint(pm, 0.0022201615609504792, 0.005941293187389326));\n    BitSet p1bits = new BitSet();\n    c.addShape(new GeoConvexPolygon(pm, points1, p1bits, true));\n    List<GeoPoint> points2 = new ArrayList<>();\n    points2.add(new GeoPoint(pm, -0.005507100238396111, -0.008487706131259667));\n    points2.add(new GeoPoint(pm, 0.014071770744627236, 0.011030818292803128));\n    points2.add(new GeoPoint(pm, 0.0022201615609504792, 0.005941293187389326));\n    BitSet p2bits = new BitSet();\n    p2bits.set(1, true);\n    c.addShape(new GeoConcavePolygon(pm, points2, p2bits, false));\n    //System.out.println(zScaling);\n    \n    // [junit4]   1>   point=[lat=0.003540694517552105, lon=-9.99517927901697E-4]\n    // [junit4]   1>   quantized=[X=0.7563849869428783, Y=-7.560204674780763E-4, Z=0.0026781405884151086]\n    GeoPoint point = new GeoPoint(pm, 0.003540694517552105, -9.99517927901697E-4);\n    GeoPoint pointQuantized = new GeoPoint(0.7563849869428783, -7.560204674780763E-4, 0.0026781405884151086);\n    \n    // Now try bounds\n    XYZBounds xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    GeoArea area = GeoAreaFactory.makeGeoArea(pm,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n      \n    assertTrue(c.isWithin(point));\n    assertTrue(c.isWithin(pointQuantized));\n    // This fails!!\n    assertTrue(area.isWithin(point));\n    assertTrue(area.isWithin(pointQuantized));\n  }\n\n","sourceOld":"  @Test\n  public void testGeoPolygonBoundsCase2() {\n    // [junit4]   1> TEST: iter=23 shape=GeoCompositeMembershipShape: {[GeoConvexPolygon: {planetmodel=PlanetModel(ab=0.7563871189161702 c=1.2436128810838298), points=\n    // [[lat=0.014071770744627236, lon=0.011030818292803128],\n    //  [lat=0.006772117088906782, lon=-0.0012531892445234592],\n    //  [lat=0.0022201615609504792, lon=0.005941293187389326]]}, GeoConcavePolygon: {planetmodel=PlanetModel(ab=0.7563871189161702 c=1.2436128810838298), points=\n    // [[lat=-0.005507100238396111, lon=-0.008487706131259667],\n    //  [lat=0.014071770744627236, lon=0.011030818292803128],\n    //  [lat=0.0022201615609504792, lon=0.005941293187389326]]}]}\n\n    PlanetModel pm = new PlanetModel(0.7563871189161702, 1.2436128810838298);\n    // Build the polygon\n    GeoCompositeMembershipShape c = new GeoCompositeMembershipShape(pm);\n    List<GeoPoint> points1 = new ArrayList<>();\n    points1.add(new GeoPoint(pm, 0.014071770744627236, 0.011030818292803128));\n    points1.add(new GeoPoint(pm, 0.006772117088906782, -0.0012531892445234592));\n    points1.add(new GeoPoint(pm, 0.0022201615609504792, 0.005941293187389326));\n    BitSet p1bits = new BitSet();\n    c.addShape(new GeoConvexPolygon(pm, points1, p1bits, true));\n    List<GeoPoint> points2 = new ArrayList<>();\n    points2.add(new GeoPoint(pm, -0.005507100238396111, -0.008487706131259667));\n    points2.add(new GeoPoint(pm, 0.014071770744627236, 0.011030818292803128));\n    points2.add(new GeoPoint(pm, 0.0022201615609504792, 0.005941293187389326));\n    BitSet p2bits = new BitSet();\n    p2bits.set(1, true);\n    c.addShape(new GeoConcavePolygon(pm, points2, p2bits, false));\n    //System.out.println(c);\n    \n    // [junit4]   1>   point=[lat=0.003540694517552105, lon=-9.99517927901697E-4]\n    // [junit4]   1>   quantized=[X=0.7563849869428783, Y=-7.560204674780763E-4, Z=0.0026781405884151086]\n    GeoPoint point = new GeoPoint(pm, 0.003540694517552105, -9.99517927901697E-4);\n    GeoPoint pointQuantized = new GeoPoint(0.7563849869428783, -7.560204674780763E-4, 0.0026781405884151086);\n    \n    // Now try bounds\n    XYZBounds xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    GeoArea area = GeoAreaFactory.makeGeoArea(pm,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n      \n    assertTrue(c.isWithin(point));\n    assertTrue(c.isWithin(pointQuantized));\n    // This fails!!\n    assertTrue(area.isWithin(point));\n    assertTrue(area.isWithin(pointQuantized));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"09af2c9610ce53a4b25fd99344299b40318a4a1a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","40aa98241c87d86a0077beb8023713d93a0becfe"],"d0dcd28a23753c14d56c7d2c5ba71cf1e03d532b":["40aa98241c87d86a0077beb8023713d93a0becfe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3051d6122751c8f6cc1e9cf24592658b59843ec2":["40aa98241c87d86a0077beb8023713d93a0becfe","d0dcd28a23753c14d56c7d2c5ba71cf1e03d532b"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["a92ffe0d2961113e5588e614f8dc22b42bf10a95"],"a92ffe0d2961113e5588e614f8dc22b42bf10a95":["40aa98241c87d86a0077beb8023713d93a0becfe","d0dcd28a23753c14d56c7d2c5ba71cf1e03d532b"],"40aa98241c87d86a0077beb8023713d93a0becfe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"]},"commit2Childs":{"09af2c9610ce53a4b25fd99344299b40318a4a1a":[],"d0dcd28a23753c14d56c7d2c5ba71cf1e03d532b":["3051d6122751c8f6cc1e9cf24592658b59843ec2","a92ffe0d2961113e5588e614f8dc22b42bf10a95"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09af2c9610ce53a4b25fd99344299b40318a4a1a","40aa98241c87d86a0077beb8023713d93a0becfe"],"3051d6122751c8f6cc1e9cf24592658b59843ec2":[],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a92ffe0d2961113e5588e614f8dc22b42bf10a95":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"],"40aa98241c87d86a0077beb8023713d93a0becfe":["09af2c9610ce53a4b25fd99344299b40318a4a1a","d0dcd28a23753c14d56c7d2c5ba71cf1e03d532b","3051d6122751c8f6cc1e9cf24592658b59843ec2","a92ffe0d2961113e5588e614f8dc22b42bf10a95"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09af2c9610ce53a4b25fd99344299b40318a4a1a","3051d6122751c8f6cc1e9cf24592658b59843ec2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}