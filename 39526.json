{"path":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpanBoostQuery#testEquals().mjava","commits":[{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpanBoostQuery#testEquals().mjava","pathOld":"/dev/null","sourceNew":"  public void testEquals() {\n    final float boost = random().nextFloat() * 3 - 1;\n    SpanTermQuery q = new SpanTermQuery(new Term(\"foo\", \"bar\"));\n    SpanBoostQuery q1 = new SpanBoostQuery(q, boost);\n    SpanBoostQuery q2 = new SpanBoostQuery(q, boost);\n    assertEquals(q1, q2);\n    assertEquals(q1.getBoost(), q2.getBoost(), 0f);\n \n    float boost2 = boost;\n    while (boost == boost2) {\n      boost2 = random().nextFloat() * 3 - 1;\n    }\n    SpanBoostQuery q3 = new SpanBoostQuery(q, boost2);\n    assertFalse(q1.equals(q3));\n    assertFalse(q1.hashCode() == q3.hashCode());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2dfdf766e55e943d942055d7de53c7ad6bc45283"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}