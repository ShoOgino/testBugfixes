{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#checkDistValueSource(String,float...).mjava","commits":[{"id":"28bce66b0b769a7827b1f4df30b3f50a2ed6c355","date":1347720564,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#checkDistValueSource(String,float...).mjava","pathOld":"/dev/null","sourceNew":"  void checkDistValueSource(String ptStr, float... distances) throws IOException {\n    Point pt = (Point) ctx.readShape(ptStr);\n    checkValueSource(strategy.makeDistanceValueSource(pt), distances, 1.0e-4f);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db81fe5f1911f062c87abbb053871c166d57d849","date":1374686410,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#checkDistValueSource(String,float...).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#checkDistValueSource(String,float...).mjava","sourceNew":"  void checkDistValueSource(String ptStr, float... distances) throws IOException {\n    Point pt = (Point) ctx.readShape(ptStr);\n    float multiplier = random().nextFloat() * 100f;\n    float[] dists2 = Arrays.copyOf(distances, distances.length);\n    for (int i = 0; i < dists2.length; i++) {\n      dists2[i] *= multiplier;\n    }\n    checkValueSource(strategy.makeDistanceValueSource(pt, multiplier), dists2, 1.0e-3f);\n  }\n\n","sourceOld":"  void checkDistValueSource(String ptStr, float... distances) throws IOException {\n    Point pt = (Point) ctx.readShape(ptStr);\n    checkValueSource(strategy.makeDistanceValueSource(pt), distances, 1.0e-4f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#checkDistValueSource(String,float...).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#checkDistValueSource(String,float...).mjava","sourceNew":"  void checkDistValueSource(String ptStr, float... distances) throws IOException {\n    Point pt = (Point) ctx.readShape(ptStr);\n    float multiplier = random().nextFloat() * 100f;\n    float[] dists2 = Arrays.copyOf(distances, distances.length);\n    for (int i = 0; i < dists2.length; i++) {\n      dists2[i] *= multiplier;\n    }\n    checkValueSource(strategy.makeDistanceValueSource(pt, multiplier), dists2, 1.0e-3f);\n  }\n\n","sourceOld":"  void checkDistValueSource(String ptStr, float... distances) throws IOException {\n    Point pt = (Point) ctx.readShape(ptStr);\n    checkValueSource(strategy.makeDistanceValueSource(pt), distances, 1.0e-4f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003","date":1390592414,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#checkDistValueSource(Point,float...).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/DistanceStrategyTest#checkDistValueSource(String,float...).mjava","sourceNew":"  void checkDistValueSource(Point pt, float... distances) throws IOException {\n    float multiplier = random().nextFloat() * 100f;\n    float[] dists2 = Arrays.copyOf(distances, distances.length);\n    for (int i = 0; i < dists2.length; i++) {\n      dists2[i] *= multiplier;\n    }\n    checkValueSource(strategy.makeDistanceValueSource(pt, multiplier), dists2, 1.0e-3f);\n  }\n\n","sourceOld":"  void checkDistValueSource(String ptStr, float... distances) throws IOException {\n    Point pt = (Point) ctx.readShape(ptStr);\n    float multiplier = random().nextFloat() * 100f;\n    float[] dists2 = Arrays.copyOf(distances, distances.length);\n    for (int i = 0; i < dists2.length; i++) {\n      dists2[i] *= multiplier;\n    }\n    checkValueSource(strategy.makeDistanceValueSource(pt, multiplier), dists2, 1.0e-3f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003":["db81fe5f1911f062c87abbb053871c166d57d849"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["28bce66b0b769a7827b1f4df30b3f50a2ed6c355"],"28bce66b0b769a7827b1f4df30b3f50a2ed6c355":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"db81fe5f1911f062c87abbb053871c166d57d849":["28bce66b0b769a7827b1f4df30b3f50a2ed6c355"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6bc65e9e84ac8f81b0861d2c7d8f56715adbf003"]},"commit2Childs":{"6bc65e9e84ac8f81b0861d2c7d8f56715adbf003":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["28bce66b0b769a7827b1f4df30b3f50a2ed6c355"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"28bce66b0b769a7827b1f4df30b3f50a2ed6c355":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","db81fe5f1911f062c87abbb053871c166d57d849"],"db81fe5f1911f062c87abbb053871c166d57d849":["6bc65e9e84ac8f81b0861d2c7d8f56715adbf003"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}