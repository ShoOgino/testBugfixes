{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#loadStopWords(InputStream,String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#loadStopWords(InputStream,String).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#loadStopWords(InputStream,String).mjava","sourceNew":"    /**\n     * Loads stopwords hash from resource stream (file, database...).\n     * @param   wordfile    File containing the wordlist\n     * @param   encoding    Encoding used (win-1250, iso-8859-2, ...), null for default system encoding\n     * @deprecated use {@link WordlistLoader#getWordSet(Reader, String) }\n     *             and {@link #CzechAnalyzer(Version, Set)} instead\n     */\n    // TODO extend StopwordAnalyzerBase once this method is gone!\n    @Deprecated\n    public void loadStopWords( InputStream wordfile, String encoding ) {\n        setPreviousTokenStream(null); // force a new stopfilter to be created\n        if ( wordfile == null ) {\n            stoptable = Collections.emptySet();\n            return;\n        }\n        try {\n            // clear any previous table (if present)\n            stoptable = Collections.emptySet();\n\n            InputStreamReader isr;\n            if (encoding == null)\n                isr = new InputStreamReader(wordfile);\n            else\n                isr = new InputStreamReader(wordfile, encoding);\n\n            stoptable = WordlistLoader.getWordSet(isr);\n        } catch ( IOException e ) {\n          // clear any previous table (if present)\n          // TODO: throw IOException\n          stoptable = Collections.emptySet();\n        }\n    }\n\n","sourceOld":"    /**\n     * Loads stopwords hash from resource stream (file, database...).\n     * @param   wordfile    File containing the wordlist\n     * @param   encoding    Encoding used (win-1250, iso-8859-2, ...), null for default system encoding\n     * @deprecated use {@link WordlistLoader#getWordSet(Reader, String) }\n     *             and {@link #CzechAnalyzer(Version, Set)} instead\n     */\n    // TODO extend StopwordAnalyzerBase once this method is gone!\n    @Deprecated\n    public void loadStopWords( InputStream wordfile, String encoding ) {\n        setPreviousTokenStream(null); // force a new stopfilter to be created\n        if ( wordfile == null ) {\n            stoptable = Collections.emptySet();\n            return;\n        }\n        try {\n            // clear any previous table (if present)\n            stoptable = Collections.emptySet();\n\n            InputStreamReader isr;\n            if (encoding == null)\n                isr = new InputStreamReader(wordfile);\n            else\n                isr = new InputStreamReader(wordfile, encoding);\n\n            stoptable = WordlistLoader.getWordSet(isr);\n        } catch ( IOException e ) {\n          // clear any previous table (if present)\n          // TODO: throw IOException\n          stoptable = Collections.emptySet();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#loadStopWords(InputStream,String).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer#loadStopWords(InputStream,String).mjava","sourceNew":"    /**\n     * Loads stopwords hash from resource stream (file, database...).\n     * @param   wordfile    File containing the wordlist\n     * @param   encoding    Encoding used (win-1250, iso-8859-2, ...), null for default system encoding\n     * @deprecated use {@link WordlistLoader#getWordSet(Reader, String) }\n     *             and {@link #CzechAnalyzer(Version, Set)} instead\n     */\n    // TODO extend StopwordAnalyzerBase once this method is gone!\n    @Deprecated\n    public void loadStopWords( InputStream wordfile, String encoding ) {\n        setPreviousTokenStream(null); // force a new stopfilter to be created\n        if ( wordfile == null ) {\n            stoptable = Collections.emptySet();\n            return;\n        }\n        try {\n            // clear any previous table (if present)\n            stoptable = Collections.emptySet();\n\n            InputStreamReader isr;\n            if (encoding == null)\n                isr = new InputStreamReader(wordfile);\n            else\n                isr = new InputStreamReader(wordfile, encoding);\n\n            stoptable = WordlistLoader.getWordSet(isr);\n        } catch ( IOException e ) {\n          // clear any previous table (if present)\n          // TODO: throw IOException\n          stoptable = Collections.emptySet();\n        }\n    }\n\n","sourceOld":"    /**\n     * Loads stopwords hash from resource stream (file, database...).\n     * @param   wordfile    File containing the wordlist\n     * @param   encoding    Encoding used (win-1250, iso-8859-2, ...), null for default system encoding\n     * @deprecated use {@link WordlistLoader#getWordSet(Reader, String) }\n     *             and {@link #CzechAnalyzer(Version, Set)} instead\n     */\n    // TODO extend StopwordAnalyzerBase once this method is gone!\n    @Deprecated\n    public void loadStopWords( InputStream wordfile, String encoding ) {\n        setPreviousTokenStream(null); // force a new stopfilter to be created\n        if ( wordfile == null ) {\n            stoptable = Collections.emptySet();\n            return;\n        }\n        try {\n            // clear any previous table (if present)\n            stoptable = Collections.emptySet();\n\n            InputStreamReader isr;\n            if (encoding == null)\n                isr = new InputStreamReader(wordfile);\n            else\n                isr = new InputStreamReader(wordfile, encoding);\n\n            stoptable = WordlistLoader.getWordSet(isr);\n        } catch ( IOException e ) {\n          // clear any previous table (if present)\n          // TODO: throw IOException\n          stoptable = Collections.emptySet();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}