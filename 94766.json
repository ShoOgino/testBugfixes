{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#addPoint(double,double,boolean).mjava","commits":[{"id":"0fb9dbed1415914caa27460f8abb7afadaa61451","date":1429504289,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#addPoint(double,double,boolean).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#addPoint(double,double).mjava","sourceNew":"    /** Add a point to the polygon.\n     * Accepts only values in the following ranges: lat: {@code -PI/2 -> PI/2}, lon: {@code -PI -> PI}\n     *@param latitude is the latitude of the next point.\n     *@param longitude is the longitude of the next point.\n     *@param isInternalEdge is true if the edge just added should be considered \"internal\", and not\n     * intersected as part of the intersects() operation.\n     */\n    public void addPoint(final double latitude, final double longitude, final boolean isInternalEdge) {\n        // Argument checking\n        if (latitude > Math.PI * 0.5 || latitude < -Math.PI * 0.5)\n            throw new IllegalArgumentException(\"Latitude out of range\");\n        if (longitude < -Math.PI || longitude > Math.PI)\n            throw new IllegalArgumentException(\"Longitude out of range\");\n        \n        final GeoPoint p = new GeoPoint(latitude, longitude);\n        isInternalEdges.set(points.size(),isInternalEdge);\n        points.add(p);\n    }\n\n","sourceOld":"    /** Add a point to the polygon.\n     * Accepts only values in the following ranges: lat: {@code -PI/2 -> PI/2}, lon: {@code -PI -> PI}\n     */\n    public void addPoint(double latitude, double longitude) {\n        // Argument checking\n        if (latitude > Math.PI * 0.5 || latitude < -Math.PI * 0.5)\n            throw new IllegalArgumentException(\"Latitude out of range\");\n        if (longitude < -Math.PI || longitude > Math.PI)\n            throw new IllegalArgumentException(\"Longitude out of range\");\n        \n        GeoPoint p = new GeoPoint(latitude, longitude);\n        points.add(p);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2997acf74723385bd84aff1ea0b12af4aefde77","date":1430745542,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#addPoint(double,double,boolean).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#addPoint(double,double,boolean).mjava","sourceNew":"  /**\n   * Add a point to the polygon.\n   * Accepts only values in the following ranges: lat: {@code -PI/2 -> PI/2}, lon: {@code -PI -> PI}\n   *\n   * @param latitude       is the latitude of the next point.\n   * @param longitude      is the longitude of the next point.\n   * @param isInternalEdge is true if the edge just added should be considered \"internal\", and not\n   *                       intersected as part of the intersects() operation.\n   */\n  public void addPoint(final double latitude, final double longitude, final boolean isInternalEdge) {\n    // Argument checking\n    if (latitude > Math.PI * 0.5 || latitude < -Math.PI * 0.5)\n      throw new IllegalArgumentException(\"Latitude out of range\");\n    if (longitude < -Math.PI || longitude > Math.PI)\n      throw new IllegalArgumentException(\"Longitude out of range\");\n\n    final GeoPoint p = new GeoPoint(latitude, longitude);\n    isInternalEdges.set(points.size(), isInternalEdge);\n    points.add(p);\n  }\n\n","sourceOld":"    /** Add a point to the polygon.\n     * Accepts only values in the following ranges: lat: {@code -PI/2 -> PI/2}, lon: {@code -PI -> PI}\n     *@param latitude is the latitude of the next point.\n     *@param longitude is the longitude of the next point.\n     *@param isInternalEdge is true if the edge just added should be considered \"internal\", and not\n     * intersected as part of the intersects() operation.\n     */\n    public void addPoint(final double latitude, final double longitude, final boolean isInternalEdge) {\n        // Argument checking\n        if (latitude > Math.PI * 0.5 || latitude < -Math.PI * 0.5)\n            throw new IllegalArgumentException(\"Latitude out of range\");\n        if (longitude < -Math.PI || longitude > Math.PI)\n            throw new IllegalArgumentException(\"Longitude out of range\");\n        \n        final GeoPoint p = new GeoPoint(latitude, longitude);\n        isInternalEdges.set(points.size(),isInternalEdge);\n        points.add(p);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c921d81476f94b6686d3f216daa1f6b076b4a6c0","date":1430922284,"type":0,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#addPoint(double,double,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Add a point to the polygon.\n   * Accepts only values in the following ranges: lat: {@code -PI/2 -> PI/2}, lon: {@code -PI -> PI}\n   *\n   * @param latitude       is the latitude of the next point.\n   * @param longitude      is the longitude of the next point.\n   * @param isInternalEdge is true if the edge just added should be considered \"internal\", and not\n   *                       intersected as part of the intersects() operation.\n   */\n  public void addPoint(final double latitude, final double longitude, final boolean isInternalEdge) {\n    // Argument checking\n    if (latitude > Math.PI * 0.5 || latitude < -Math.PI * 0.5)\n      throw new IllegalArgumentException(\"Latitude out of range\");\n    if (longitude < -Math.PI || longitude > Math.PI)\n      throw new IllegalArgumentException(\"Longitude out of range\");\n\n    final GeoPoint p = new GeoPoint(latitude, longitude);\n    isInternalEdges.set(points.size(), isInternalEdge);\n    points.add(p);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9f97ca977ad649f14b4f60a888adef2edd7a64e","date":1432702490,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#addPoint(double,double,boolean).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#addPoint(double,double,boolean).mjava","sourceNew":"  /**\n   * Add a point to the polygon.\n   * Accepts only values in the following ranges: lat: {@code -PI/2 -> PI/2}, lon: {@code -PI -> PI}\n   *\n   * @param latitude       is the latitude of the next point.\n   * @param longitude      is the longitude of the next point.\n   * @param isInternalEdge is true if the edge just added should be considered \"internal\", and not\n   *                       intersected as part of the intersects() operation.\n   */\n  public void addPoint(final double latitude, final double longitude, final boolean isInternalEdge) {\n    // Argument checking\n    if (latitude > Math.PI * 0.5 || latitude < -Math.PI * 0.5)\n      throw new IllegalArgumentException(\"Latitude out of range\");\n    if (longitude < -Math.PI || longitude > Math.PI)\n      throw new IllegalArgumentException(\"Longitude out of range\");\n\n    final GeoPoint p = new GeoPoint(planetModel, latitude, longitude);\n    isInternalEdges.set(points.size(), isInternalEdge);\n    points.add(p);\n  }\n\n","sourceOld":"  /**\n   * Add a point to the polygon.\n   * Accepts only values in the following ranges: lat: {@code -PI/2 -> PI/2}, lon: {@code -PI -> PI}\n   *\n   * @param latitude       is the latitude of the next point.\n   * @param longitude      is the longitude of the next point.\n   * @param isInternalEdge is true if the edge just added should be considered \"internal\", and not\n   *                       intersected as part of the intersects() operation.\n   */\n  public void addPoint(final double latitude, final double longitude, final boolean isInternalEdge) {\n    // Argument checking\n    if (latitude > Math.PI * 0.5 || latitude < -Math.PI * 0.5)\n      throw new IllegalArgumentException(\"Latitude out of range\");\n    if (longitude < -Math.PI || longitude > Math.PI)\n      throw new IllegalArgumentException(\"Longitude out of range\");\n\n    final GeoPoint p = new GeoPoint(latitude, longitude);\n    isInternalEdges.set(points.size(), isInternalEdge);\n    points.add(p);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fec06d6753751ae302c7d35866763e6cb414112d","date":1433250698,"type":3,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#addPoint(double,double,boolean).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#addPoint(double,double,boolean).mjava","sourceNew":"  /**\n   * Add a point to the polygon.\n   * Accepts only values in the following ranges: lat: {@code -PI/2 -> PI/2}, lon: {@code -PI -> PI}\n   *\n   * @param latitude       is the latitude of the next point.\n   * @param longitude      is the longitude of the next point.\n   * @param isInternalEdge is true if the edge just added should be considered \"internal\", and not\n   *                       intersected as part of the intersects() operation.\n   */\n  public void addPoint(final double latitude, final double longitude, final boolean isInternalEdge) {\n    // Argument checking\n    if (latitude > Math.PI * 0.5 || latitude < -Math.PI * 0.5)\n      throw new IllegalArgumentException(\"Latitude out of range\");\n    if (longitude < -Math.PI || longitude > Math.PI)\n      throw new IllegalArgumentException(\"Longitude out of range\");\n\n    final GeoPoint p = new GeoPoint(planetModel, latitude, longitude);\n    isInternalEdges.set(points.size(), isInternalEdge);\n    points.add(p);\n  }\n\n","sourceOld":"  /**\n   * Add a point to the polygon.\n   * Accepts only values in the following ranges: lat: {@code -PI/2 -> PI/2}, lon: {@code -PI -> PI}\n   *\n   * @param latitude       is the latitude of the next point.\n   * @param longitude      is the longitude of the next point.\n   * @param isInternalEdge is true if the edge just added should be considered \"internal\", and not\n   *                       intersected as part of the intersects() operation.\n   */\n  public void addPoint(final double latitude, final double longitude, final boolean isInternalEdge) {\n    // Argument checking\n    if (latitude > Math.PI * 0.5 || latitude < -Math.PI * 0.5)\n      throw new IllegalArgumentException(\"Latitude out of range\");\n    if (longitude < -Math.PI || longitude > Math.PI)\n      throw new IllegalArgumentException(\"Longitude out of range\");\n\n    final GeoPoint p = new GeoPoint(latitude, longitude);\n    isInternalEdges.set(points.size(), isInternalEdge);\n    points.add(p);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"535df84251be5af3be84d750beba0021aff9132d","date":1434649368,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#addPoint(double,double,boolean).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#addPoint(double,double,boolean).mjava","sourceNew":"  /**\n   * Add a point to the polygon.\n   * Accepts only values in the following ranges: lat: {@code -PI/2 -> PI/2}, lon: {@code -PI -> PI}\n   *\n   * @param latitude       is the latitude of the next point.\n   * @param longitude      is the longitude of the next point.\n   * @param isInternalEdge is true if the edge just added with this point should be considered \"internal\", and not\n   *                       intersected as part of the intersects() operation.\n   */\n  public void addPoint(final double latitude, final double longitude, final boolean isInternalEdge) {\n    if (isDone)\n      throw new IllegalStateException(\"Can't call addPoint() if done() already called\");\n    if (isInternalEdge)\n      isInternalEdges.set(points.size() - 1);\n    points.add(new GeoPoint(planetModel, latitude, longitude));\n  }\n\n","sourceOld":"  /**\n   * Add a point to the polygon.\n   * Accepts only values in the following ranges: lat: {@code -PI/2 -> PI/2}, lon: {@code -PI -> PI}\n   *\n   * @param latitude       is the latitude of the next point.\n   * @param longitude      is the longitude of the next point.\n   * @param isInternalEdge is true if the edge just added should be considered \"internal\", and not\n   *                       intersected as part of the intersects() operation.\n   */\n  public void addPoint(final double latitude, final double longitude, final boolean isInternalEdge) {\n    // Argument checking\n    if (latitude > Math.PI * 0.5 || latitude < -Math.PI * 0.5)\n      throw new IllegalArgumentException(\"Latitude out of range\");\n    if (longitude < -Math.PI || longitude > Math.PI)\n      throw new IllegalArgumentException(\"Longitude out of range\");\n\n    final GeoPoint p = new GeoPoint(planetModel, latitude, longitude);\n    isInternalEdges.set(points.size(), isInternalEdge);\n    points.add(p);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoConvexPolygon#addPoint(double,double,boolean).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#addPoint(double,double,boolean).mjava","sourceNew":"  /**\n   * Add a point to the polygon.\n   * Accepts only values in the following ranges: lat: {@code -PI/2 -> PI/2}, lon: {@code -PI -> PI}\n   *\n   * @param latitude       is the latitude of the next point.\n   * @param longitude      is the longitude of the next point.\n   * @param isInternalEdge is true if the edge just added with this point should be considered \"internal\", and not\n   *                       intersected as part of the intersects() operation.\n   */\n  public void addPoint(final double latitude, final double longitude, final boolean isInternalEdge) {\n    if (isDone)\n      throw new IllegalStateException(\"Can't call addPoint() if done() already called\");\n    if (isInternalEdge)\n      isInternalEdges.set(points.size() - 1);\n    points.add(new GeoPoint(planetModel, latitude, longitude));\n  }\n\n","sourceOld":"  /**\n   * Add a point to the polygon.\n   * Accepts only values in the following ranges: lat: {@code -PI/2 -> PI/2}, lon: {@code -PI -> PI}\n   *\n   * @param latitude       is the latitude of the next point.\n   * @param longitude      is the longitude of the next point.\n   * @param isInternalEdge is true if the edge just added with this point should be considered \"internal\", and not\n   *                       intersected as part of the intersects() operation.\n   */\n  public void addPoint(final double latitude, final double longitude, final boolean isInternalEdge) {\n    if (isDone)\n      throw new IllegalStateException(\"Can't call addPoint() if done() already called\");\n    if (isInternalEdge)\n      isInternalEdges.set(points.size() - 1);\n    points.add(new GeoPoint(planetModel, latitude, longitude));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0fb9dbed1415914caa27460f8abb7afadaa61451":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fec06d6753751ae302c7d35866763e6cb414112d":["c921d81476f94b6686d3f216daa1f6b076b4a6c0","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["535df84251be5af3be84d750beba0021aff9132d"],"535df84251be5af3be84d750beba0021aff9132d":["fec06d6753751ae302c7d35866763e6cb414112d"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["0fb9dbed1415914caa27460f8abb7afadaa61451"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e2997acf74723385bd84aff1ea0b12af4aefde77"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3022be5842502b7c2a57a5124199bbc30236f0a0"]},"commit2Childs":{"0fb9dbed1415914caa27460f8abb7afadaa61451":["e2997acf74723385bd84aff1ea0b12af4aefde77"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0fb9dbed1415914caa27460f8abb7afadaa61451","c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"fec06d6753751ae302c7d35866763e6cb414112d":["535df84251be5af3be84d750beba0021aff9132d"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"535df84251be5af3be84d750beba0021aff9132d":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["fec06d6753751ae302c7d35866763e6cb414112d","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["fec06d6753751ae302c7d35866763e6cb414112d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}