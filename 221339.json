{"path":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#setLocationValue(double,double).mjava","commits":[{"id":"94ee361295fb38310ac4d53cb4773d1622423d68","date":1456833885,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#setLocationValue(double,double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Change the values of this field\n   * @param latitude latitude value: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude value: must be within standard +/-180 coordinate bounds.\n   * @throws IllegalArgumentException if latitude or longitude are out of bounds\n   */\n  public void setLocationValue(double latitude, double longitude) {\n    byte[] bytes = new byte[8];\n    NumericUtils.intToBytes(encodeLatitude(latitude), bytes, 0);\n    NumericUtils.intToBytes(encodeLongitude(longitude), bytes, Integer.BYTES);\n    fieldsData = new BytesRef(bytes);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a0e7cdd0facd912df00ec53365f98e7c54d6c9bb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0e7cdd0facd912df00ec53365f98e7c54d6c9bb","date":1457059932,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#setLocationValue(double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#setLocationValue(double,double).mjava","sourceNew":"  /**\n   * Change the values of this field\n   * @param latitude latitude value: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude value: must be within standard +/-180 coordinate bounds.\n   * @throws IllegalArgumentException if latitude or longitude are out of bounds\n   */\n  public void setLocationValue(double latitude, double longitude) {\n    byte[] bytes = new byte[8];\n    NumericUtils.intToSortableBytes(encodeLatitude(latitude), bytes, 0);\n    NumericUtils.intToSortableBytes(encodeLongitude(longitude), bytes, Integer.BYTES);\n    fieldsData = new BytesRef(bytes);\n  }\n\n","sourceOld":"  /**\n   * Change the values of this field\n   * @param latitude latitude value: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude value: must be within standard +/-180 coordinate bounds.\n   * @throws IllegalArgumentException if latitude or longitude are out of bounds\n   */\n  public void setLocationValue(double latitude, double longitude) {\n    byte[] bytes = new byte[8];\n    NumericUtils.intToBytes(encodeLatitude(latitude), bytes, 0);\n    NumericUtils.intToBytes(encodeLongitude(longitude), bytes, Integer.BYTES);\n    fieldsData = new BytesRef(bytes);\n  }\n\n","bugFix":["94ee361295fb38310ac4d53cb4773d1622423d68"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#setLocationValue(double,double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Change the values of this field\n   * @param latitude latitude value: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude value: must be within standard +/-180 coordinate bounds.\n   * @throws IllegalArgumentException if latitude or longitude are out of bounds\n   */\n  public void setLocationValue(double latitude, double longitude) {\n    byte[] bytes = new byte[8];\n    NumericUtils.intToSortableBytes(encodeLatitude(latitude), bytes, 0);\n    NumericUtils.intToSortableBytes(encodeLongitude(longitude), bytes, Integer.BYTES);\n    fieldsData = new BytesRef(bytes);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54f531dff997ea7763360cb59f5ccadc6811b519","date":1457742562,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#setLocationValue(double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#setLocationValue(double,double).mjava","sourceNew":"  /**\n   * Change the values of this field\n   * @param latitude latitude value: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude value: must be within standard +/-180 coordinate bounds.\n   * @throws IllegalArgumentException if latitude or longitude are out of bounds\n   */\n  public void setLocationValue(double latitude, double longitude) {\n    byte[] bytes = new byte[8];\n    int latitudeEncoded = encodeLatitude(latitude);\n    int longitudeEncoded = encodeLongitude(longitude);\n    NumericUtils.intToSortableBytes(latitudeEncoded, bytes, 0);\n    NumericUtils.intToSortableBytes(longitudeEncoded, bytes, Integer.BYTES);\n    fieldsData = new BytesRef(bytes);\n    currentValue = (((long)latitudeEncoded) << 32) | (longitudeEncoded & 0xFFFFFFFFL);\n  }\n\n","sourceOld":"  /**\n   * Change the values of this field\n   * @param latitude latitude value: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude value: must be within standard +/-180 coordinate bounds.\n   * @throws IllegalArgumentException if latitude or longitude are out of bounds\n   */\n  public void setLocationValue(double latitude, double longitude) {\n    byte[] bytes = new byte[8];\n    NumericUtils.intToSortableBytes(encodeLatitude(latitude), bytes, 0);\n    NumericUtils.intToSortableBytes(encodeLongitude(longitude), bytes, Integer.BYTES);\n    fieldsData = new BytesRef(bytes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"575856a9f007b9c35d0113c9e18151b554709ef2","date":1457776622,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#setLocationValue(double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#setLocationValue(double,double).mjava","sourceNew":"  /**\n   * Change the values of this field\n   * @param latitude latitude value: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude value: must be within standard +/-180 coordinate bounds.\n   * @throws IllegalArgumentException if latitude or longitude are out of bounds\n   */\n  public void setLocationValue(double latitude, double longitude) {\n    byte[] bytes = new byte[8];\n    int latitudeEncoded = encodeLatitude(latitude);\n    int longitudeEncoded = encodeLongitude(longitude);\n    NumericUtils.intToSortableBytes(latitudeEncoded, bytes, 0);\n    NumericUtils.intToSortableBytes(longitudeEncoded, bytes, Integer.BYTES);\n    fieldsData = new BytesRef(bytes);\n    currentValue = (((long)latitudeEncoded) << 32) | (longitudeEncoded & 0xFFFFFFFFL);\n  }\n\n","sourceOld":"  /**\n   * Change the values of this field\n   * @param latitude latitude value: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude value: must be within standard +/-180 coordinate bounds.\n   * @throws IllegalArgumentException if latitude or longitude are out of bounds\n   */\n  public void setLocationValue(double latitude, double longitude) {\n    byte[] bytes = new byte[8];\n    NumericUtils.intToSortableBytes(encodeLatitude(latitude), bytes, 0);\n    NumericUtils.intToSortableBytes(encodeLongitude(longitude), bytes, Integer.BYTES);\n    fieldsData = new BytesRef(bytes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc75470f235495b4ac71f43bba9b503023f7f2d0","date":1461532530,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#setLocationValue(double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#setLocationValue(double,double).mjava","sourceNew":"  /**\n   * Change the values of this field\n   * @param latitude latitude value: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude value: must be within standard +/-180 coordinate bounds.\n   * @throws IllegalArgumentException if latitude or longitude are out of bounds\n   */\n  public void setLocationValue(double latitude, double longitude) {\n    final byte[] bytes;\n\n    if (fieldsData == null) {\n      bytes = new byte[8];\n      fieldsData = new BytesRef(bytes);\n    } else {\n      bytes = ((BytesRef) fieldsData).bytes;\n    }\n\n    int latitudeEncoded = encodeLatitude(latitude);\n    int longitudeEncoded = encodeLongitude(longitude);\n    NumericUtils.intToSortableBytes(latitudeEncoded, bytes, 0);\n    NumericUtils.intToSortableBytes(longitudeEncoded, bytes, Integer.BYTES);\n  }\n\n","sourceOld":"  /**\n   * Change the values of this field\n   * @param latitude latitude value: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude value: must be within standard +/-180 coordinate bounds.\n   * @throws IllegalArgumentException if latitude or longitude are out of bounds\n   */\n  public void setLocationValue(double latitude, double longitude) {\n    byte[] bytes = new byte[8];\n    int latitudeEncoded = encodeLatitude(latitude);\n    int longitudeEncoded = encodeLongitude(longitude);\n    NumericUtils.intToSortableBytes(latitudeEncoded, bytes, 0);\n    NumericUtils.intToSortableBytes(longitudeEncoded, bytes, Integer.BYTES);\n    fieldsData = new BytesRef(bytes);\n    currentValue = (((long)latitudeEncoded) << 32) | (longitudeEncoded & 0xFFFFFFFFL);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f901826e47f75f810d7aae24b0455d21ea1fe2","date":1461678892,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#setLocationValue(double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#setLocationValue(double,double).mjava","sourceNew":"  /**\n   * Change the values of this field\n   * @param latitude latitude value: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude value: must be within standard +/-180 coordinate bounds.\n   * @throws IllegalArgumentException if latitude or longitude are out of bounds\n   */\n  public void setLocationValue(double latitude, double longitude) {\n    final byte[] bytes;\n\n    if (fieldsData == null) {\n      bytes = new byte[8];\n      fieldsData = new BytesRef(bytes);\n    } else {\n      bytes = ((BytesRef) fieldsData).bytes;\n    }\n\n    int latitudeEncoded = encodeLatitude(latitude);\n    int longitudeEncoded = encodeLongitude(longitude);\n    NumericUtils.intToSortableBytes(latitudeEncoded, bytes, 0);\n    NumericUtils.intToSortableBytes(longitudeEncoded, bytes, Integer.BYTES);\n  }\n\n","sourceOld":"  /**\n   * Change the values of this field\n   * @param latitude latitude value: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude value: must be within standard +/-180 coordinate bounds.\n   * @throws IllegalArgumentException if latitude or longitude are out of bounds\n   */\n  public void setLocationValue(double latitude, double longitude) {\n    byte[] bytes = new byte[8];\n    int latitudeEncoded = encodeLatitude(latitude);\n    int longitudeEncoded = encodeLongitude(longitude);\n    NumericUtils.intToSortableBytes(latitudeEncoded, bytes, 0);\n    NumericUtils.intToSortableBytes(longitudeEncoded, bytes, Integer.BYTES);\n    fieldsData = new BytesRef(bytes);\n    currentValue = (((long)latitudeEncoded) << 32) | (longitudeEncoded & 0xFFFFFFFFL);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"88b0212386fe531136816706dc37dc49b9dbf7dc","date":1532560226,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LatLonPoint#setLocationValue(double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPoint#setLocationValue(double,double).mjava","sourceNew":"  /**\n   * Change the values of this field\n   * @param latitude latitude value: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude value: must be within standard +/-180 coordinate bounds.\n   * @throws IllegalArgumentException if latitude or longitude are out of bounds\n   */\n  public void setLocationValue(double latitude, double longitude) {\n    final byte[] bytes;\n\n    if (fieldsData == null) {\n      bytes = new byte[8];\n      fieldsData = new BytesRef(bytes);\n    } else {\n      bytes = ((BytesRef) fieldsData).bytes;\n    }\n\n    int latitudeEncoded = encodeLatitude(latitude);\n    int longitudeEncoded = encodeLongitude(longitude);\n    NumericUtils.intToSortableBytes(latitudeEncoded, bytes, 0);\n    NumericUtils.intToSortableBytes(longitudeEncoded, bytes, Integer.BYTES);\n  }\n\n","sourceOld":"  /**\n   * Change the values of this field\n   * @param latitude latitude value: must be within standard +/-90 coordinate bounds.\n   * @param longitude longitude value: must be within standard +/-180 coordinate bounds.\n   * @throws IllegalArgumentException if latitude or longitude are out of bounds\n   */\n  public void setLocationValue(double latitude, double longitude) {\n    final byte[] bytes;\n\n    if (fieldsData == null) {\n      bytes = new byte[8];\n      fieldsData = new BytesRef(bytes);\n    } else {\n      bytes = ((BytesRef) fieldsData).bytes;\n    }\n\n    int latitudeEncoded = encodeLatitude(latitude);\n    int longitudeEncoded = encodeLongitude(longitude);\n    NumericUtils.intToSortableBytes(latitudeEncoded, bytes, 0);\n    NumericUtils.intToSortableBytes(longitudeEncoded, bytes, Integer.BYTES);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"88b0212386fe531136816706dc37dc49b9dbf7dc":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"94ee361295fb38310ac4d53cb4773d1622423d68":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54f531dff997ea7763360cb59f5ccadc6811b519":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["575856a9f007b9c35d0113c9e18151b554709ef2","cc75470f235495b4ac71f43bba9b503023f7f2d0"],"575856a9f007b9c35d0113c9e18151b554709ef2":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","54f531dff997ea7763360cb59f5ccadc6811b519"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7cdd0facd912df00ec53365f98e7c54d6c9bb"],"cc75470f235495b4ac71f43bba9b503023f7f2d0":["575856a9f007b9c35d0113c9e18151b554709ef2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["88b0212386fe531136816706dc37dc49b9dbf7dc"],"a0e7cdd0facd912df00ec53365f98e7c54d6c9bb":["94ee361295fb38310ac4d53cb4773d1622423d68"]},"commit2Childs":{"88b0212386fe531136816706dc37dc49b9dbf7dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["88b0212386fe531136816706dc37dc49b9dbf7dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["94ee361295fb38310ac4d53cb4773d1622423d68","cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"94ee361295fb38310ac4d53cb4773d1622423d68":["a0e7cdd0facd912df00ec53365f98e7c54d6c9bb"],"54f531dff997ea7763360cb59f5ccadc6811b519":["575856a9f007b9c35d0113c9e18151b554709ef2"],"575856a9f007b9c35d0113c9e18151b554709ef2":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","cc75470f235495b4ac71f43bba9b503023f7f2d0"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["54f531dff997ea7763360cb59f5ccadc6811b519","575856a9f007b9c35d0113c9e18151b554709ef2"],"cc75470f235495b4ac71f43bba9b503023f7f2d0":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"a0e7cdd0facd912df00ec53365f98e7c54d6c9bb":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}