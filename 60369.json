{"path":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesBaseSortedSource#binarySearch(BytesRef,int,int).mjava","commits":[{"id":"3ae97ad22c2ae646bfc1c09cab424cb07f9474ca","date":1289932456,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesBaseSortedSource#binarySearch(BytesRef,int,int).mjava","pathOld":"/dev/null","sourceNew":"    protected LookupResult binarySearch(BytesRef b, int low, int high) {\n      while (low <= high) {\n        int mid = (low + high) >>> 1;\n        deref(mid);\n        final int cmp = comp.compare(bytesRef, b);\n        if (cmp < 0) {\n          low = mid + 1;\n        } else if (cmp > 0) {\n          high = mid - 1;\n        } else {\n          lookupResult.ord = mid + 1;\n          lookupResult.found = true;\n          return lookupResult;\n        }\n      }\n      assert comp.compare(bytesRef, b) != 0;\n      lookupResult.ord = low;\n      lookupResult.found = false;\n      return lookupResult;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d84736c4614acce6720851cbd2c823d7cd516e4","date":1290551630,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesBaseSortedSource#binarySearch(BytesRef,BytesRef,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesBaseSortedSource#binarySearch(BytesRef,int,int).mjava","sourceNew":"    protected LookupResult binarySearch(BytesRef b, BytesRef bytesRef, int low,\n        int high) {\n      while (low <= high) {\n        int mid = (low + high) >>> 1;\n        deref(mid, bytesRef);\n        final int cmp = comp.compare(bytesRef, b);\n        if (cmp < 0) {\n          low = mid + 1;\n        } else if (cmp > 0) {\n          high = mid - 1;\n        } else {\n          lookupResult.ord = mid + 1;\n          lookupResult.found = true;\n          return lookupResult;\n        }\n      }\n      assert comp.compare(bytesRef, b) != 0;\n      lookupResult.ord = low;\n      lookupResult.found = false;\n      return lookupResult;\n    }\n\n","sourceOld":"    protected LookupResult binarySearch(BytesRef b, int low, int high) {\n      while (low <= high) {\n        int mid = (low + high) >>> 1;\n        deref(mid);\n        final int cmp = comp.compare(bytesRef, b);\n        if (cmp < 0) {\n          low = mid + 1;\n        } else if (cmp > 0) {\n          high = mid - 1;\n        } else {\n          lookupResult.ord = mid + 1;\n          lookupResult.found = true;\n          return lookupResult;\n        }\n      }\n      assert comp.compare(bytesRef, b) != 0;\n      lookupResult.ord = low;\n      lookupResult.found = false;\n      return lookupResult;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2d84736c4614acce6720851cbd2c823d7cd516e4":["3ae97ad22c2ae646bfc1c09cab424cb07f9474ca"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3ae97ad22c2ae646bfc1c09cab424cb07f9474ca":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"2d84736c4614acce6720851cbd2c823d7cd516e4":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3ae97ad22c2ae646bfc1c09cab424cb07f9474ca","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3ae97ad22c2ae646bfc1c09cab424cb07f9474ca":["2d84736c4614acce6720851cbd2c823d7cd516e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2d84736c4614acce6720851cbd2c823d7cd516e4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}