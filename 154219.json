{"path":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesSortedSourceBase#BytesSortedSourceBase(IndexInput,IndexInput,Comparator[BytesRef],long,ValueType,boolean).mjava","commits":[{"id":"1346e81f172438a4f28d91266cdd03851f94b831","date":1318404834,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesSortedSourceBase#BytesSortedSourceBase(IndexInput,IndexInput,Comparator[BytesRef],long,ValueType,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesSortedSourceBase#BytesSortedSourceBase(IndexInput,IndexInput,Comparator[BytesRef],long,ValueType).mjava","sourceNew":"    protected BytesSortedSourceBase(IndexInput datIn, IndexInput idxIn,\n        Comparator<BytesRef> comp, long bytesToRead, ValueType type, boolean hasOffsets) throws IOException {\n      this(datIn, idxIn, comp, new PagedBytes(PAGED_BYTES_BITS), bytesToRead, type, hasOffsets);\n    }\n\n","sourceOld":"    protected BytesSortedSourceBase(IndexInput datIn, IndexInput idxIn,\n        Comparator<BytesRef> comp, long bytesToRead, ValueType type) throws IOException {\n      this(datIn, idxIn, comp, new PagedBytes(PAGED_BYTES_BITS), bytesToRead, type);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9efc72acdea22f5285be0a808f8bba51bb8e367","date":1323217280,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/Bytes.BytesSortedSourceBase#BytesSortedSourceBase(IndexInput,IndexInput,Comparator[BytesRef],long,ValueType,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesSortedSourceBase#BytesSortedSourceBase(IndexInput,IndexInput,Comparator[BytesRef],long,ValueType,boolean).mjava","sourceNew":"    protected BytesSortedSourceBase(IndexInput datIn, IndexInput idxIn,\n        Comparator<BytesRef> comp, long bytesToRead, ValueType type, boolean hasOffsets) throws IOException {\n      this(datIn, idxIn, comp, new PagedBytes(PAGED_BYTES_BITS), bytesToRead, type, hasOffsets);\n    }\n\n","sourceOld":"    protected BytesSortedSourceBase(IndexInput datIn, IndexInput idxIn,\n        Comparator<BytesRef> comp, long bytesToRead, ValueType type, boolean hasOffsets) throws IOException {\n      this(datIn, idxIn, comp, new PagedBytes(PAGED_BYTES_BITS), bytesToRead, type, hasOffsets);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/Bytes.BytesSortedSourceBase#BytesSortedSourceBase(IndexInput,IndexInput,Comparator[BytesRef],long,Type,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesSortedSourceBase#BytesSortedSourceBase(IndexInput,IndexInput,Comparator[BytesRef],long,ValueType,boolean).mjava","sourceNew":"    protected BytesSortedSourceBase(IndexInput datIn, IndexInput idxIn,\n        Comparator<BytesRef> comp, long bytesToRead, Type type, boolean hasOffsets) throws IOException {\n      this(datIn, idxIn, comp, new PagedBytes(PAGED_BYTES_BITS), bytesToRead, type, hasOffsets);\n    }\n\n","sourceOld":"    protected BytesSortedSourceBase(IndexInput datIn, IndexInput idxIn,\n        Comparator<BytesRef> comp, long bytesToRead, ValueType type, boolean hasOffsets) throws IOException {\n      this(datIn, idxIn, comp, new PagedBytes(PAGED_BYTES_BITS), bytesToRead, type, hasOffsets);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1346e81f172438a4f28d91266cdd03851f94b831":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["1346e81f172438a4f28d91266cdd03851f94b831"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["1346e81f172438a4f28d91266cdd03851f94b831","f9efc72acdea22f5285be0a808f8bba51bb8e367"]},"commit2Childs":{"1346e81f172438a4f28d91266cdd03851f94b831":["f9efc72acdea22f5285be0a808f8bba51bb8e367","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1346e81f172438a4f28d91266cdd03851f94b831"],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}