{"path":"lucene/src/test/org/apache/lucene/index/TestPerFieldCodecSupport#newWriter(Directory,IndexWriterConfig).mjava","commits":[{"id":"a493e6d0c3ad86bd55c0a1360d110142e948f2bd","date":1289406991,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPerFieldCodecSupport#newWriter(Directory,IndexWriterConfig).mjava","pathOld":"/dev/null","sourceNew":"  private IndexWriter newWriter(Directory dir, IndexWriterConfig conf)\n      throws IOException {\n    LogDocMergePolicy logByteSizeMergePolicy = new LogDocMergePolicy();\n    logByteSizeMergePolicy.setUseCompoundFile(false); // make sure we use plain\n    // files\n    conf.setMergePolicy(logByteSizeMergePolicy);\n\n    final IndexWriter writer = new IndexWriter(dir, conf);\n    return writer;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPerFieldCodecSupport#newWriter(Directory,IndexWriterConfig).mjava","pathOld":"/dev/null","sourceNew":"  private IndexWriter newWriter(Directory dir, IndexWriterConfig conf)\n      throws IOException {\n    LogDocMergePolicy logByteSizeMergePolicy = new LogDocMergePolicy();\n    logByteSizeMergePolicy.setUseCompoundFile(false); // make sure we use plain\n    // files\n    conf.setMergePolicy(logByteSizeMergePolicy);\n\n    final IndexWriter writer = new IndexWriter(dir, conf);\n    return writer;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPerFieldCodecSupport#newWriter(Directory,IndexWriterConfig).mjava","pathOld":"/dev/null","sourceNew":"  private IndexWriter newWriter(Directory dir, IndexWriterConfig conf)\n      throws IOException {\n    LogDocMergePolicy logByteSizeMergePolicy = new LogDocMergePolicy();\n    logByteSizeMergePolicy.setUseCompoundFile(false); // make sure we use plain\n    // files\n    conf.setMergePolicy(logByteSizeMergePolicy);\n\n    final IndexWriter writer = new IndexWriter(dir, conf);\n    return writer;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56da903869515527852ee21ea7ef7bfe414cd40d","date":1294224724,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPerFieldCodecSupport#newWriter(Directory,IndexWriterConfig).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPerFieldCodecSupport#newWriter(Directory,IndexWriterConfig).mjava","sourceNew":"  private IndexWriter newWriter(Directory dir, IndexWriterConfig conf)\n      throws IOException {\n    LogDocMergePolicy logByteSizeMergePolicy = new LogDocMergePolicy();\n    logByteSizeMergePolicy.setUseCompoundFile(false); // make sure we use plain\n    // files\n    conf.setMergePolicy(logByteSizeMergePolicy);\n\n    final IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter newWriter(Directory dir, IndexWriterConfig conf)\n      throws IOException {\n    LogDocMergePolicy logByteSizeMergePolicy = new LogDocMergePolicy();\n    logByteSizeMergePolicy.setUseCompoundFile(false); // make sure we use plain\n    // files\n    conf.setMergePolicy(logByteSizeMergePolicy);\n\n    final IndexWriter writer = new IndexWriter(dir, conf);\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPerFieldCodecSupport#newWriter(Directory,IndexWriterConfig).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPerFieldCodecSupport#newWriter(Directory,IndexWriterConfig).mjava","sourceNew":"  private IndexWriter newWriter(Directory dir, IndexWriterConfig conf)\n      throws IOException {\n    LogDocMergePolicy logByteSizeMergePolicy = new LogDocMergePolicy();\n    logByteSizeMergePolicy.setUseCompoundFile(false); // make sure we use plain\n    // files\n    conf.setMergePolicy(logByteSizeMergePolicy);\n\n    final IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter newWriter(Directory dir, IndexWriterConfig conf)\n      throws IOException {\n    LogDocMergePolicy logByteSizeMergePolicy = new LogDocMergePolicy();\n    logByteSizeMergePolicy.setUseCompoundFile(false); // make sure we use plain\n    // files\n    conf.setMergePolicy(logByteSizeMergePolicy);\n\n    final IndexWriter writer = new IndexWriter(dir, conf);\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPerFieldCodecSupport#newWriter(Directory,IndexWriterConfig).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPerFieldCodecSupport#newWriter(Directory,IndexWriterConfig).mjava","sourceNew":"  private IndexWriter newWriter(Directory dir, IndexWriterConfig conf)\n      throws IOException {\n    LogDocMergePolicy logByteSizeMergePolicy = new LogDocMergePolicy();\n    logByteSizeMergePolicy.setUseCompoundFile(false); // make sure we use plain\n    // files\n    conf.setMergePolicy(logByteSizeMergePolicy);\n\n    final IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter newWriter(Directory dir, IndexWriterConfig conf)\n      throws IOException {\n    LogDocMergePolicy logByteSizeMergePolicy = new LogDocMergePolicy();\n    logByteSizeMergePolicy.setUseCompoundFile(false); // make sure we use plain\n    // files\n    conf.setMergePolicy(logByteSizeMergePolicy);\n\n    final IndexWriter writer = new IndexWriter(dir, conf);\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/perfield/TestPerFieldPostingsFormat#newWriter(Directory,IndexWriterConfig).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPerFieldCodecSupport#newWriter(Directory,IndexWriterConfig).mjava","sourceNew":"  private IndexWriter newWriter(Directory dir, IndexWriterConfig conf)\n      throws IOException {\n    LogDocMergePolicy logByteSizeMergePolicy = new LogDocMergePolicy();\n    logByteSizeMergePolicy.setUseCompoundFile(false); // make sure we use plain\n    // files\n    conf.setMergePolicy(logByteSizeMergePolicy);\n\n    final IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter newWriter(Directory dir, IndexWriterConfig conf)\n      throws IOException {\n    LogDocMergePolicy logByteSizeMergePolicy = new LogDocMergePolicy();\n    logByteSizeMergePolicy.setUseCompoundFile(false); // make sure we use plain\n    // files\n    conf.setMergePolicy(logByteSizeMergePolicy);\n\n    final IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["56da903869515527852ee21ea7ef7bfe414cd40d"],"70ad682703b8585f5d0a637efec044d57ec05efb":["85a883878c0af761245ab048babc63d099f835f3","56da903869515527852ee21ea7ef7bfe414cd40d"],"56da903869515527852ee21ea7ef7bfe414cd40d":["a493e6d0c3ad86bd55c0a1360d110142e948f2bd"],"a493e6d0c3ad86bd55c0a1360d110142e948f2bd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a493e6d0c3ad86bd55c0a1360d110142e948f2bd"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a493e6d0c3ad86bd55c0a1360d110142e948f2bd"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","56da903869515527852ee21ea7ef7bfe414cd40d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"70ad682703b8585f5d0a637efec044d57ec05efb":[],"56da903869515527852ee21ea7ef7bfe414cd40d":["7b91922b55d15444d554721b352861d028eb8278","70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295"],"85a883878c0af761245ab048babc63d099f835f3":["70ad682703b8585f5d0a637efec044d57ec05efb"],"a493e6d0c3ad86bd55c0a1360d110142e948f2bd":["56da903869515527852ee21ea7ef7bfe414cd40d","85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a493e6d0c3ad86bd55c0a1360d110142e948f2bd","85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}