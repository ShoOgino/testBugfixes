{"path":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/MinimizingConjunctionIntervalsSource.CacheingMatchesIterator#cache().mjava","commits":[{"id":"2375622520a4e480775e3104a2f9a423536755b4","date":1536005521,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/MinimizingConjunctionIntervalsSource.CacheingMatchesIterator#cache().mjava","pathOld":"/dev/null","sourceNew":"    private void cache() throws IOException {\n      count = 0;\n      MatchesIterator mi = in.getSubMatches();\n      if (mi == null) {\n        count = 1;\n        posAndOffsets[0] = in.startPosition();\n        posAndOffsets[1] = in.endPosition();\n        posAndOffsets[2] = in.startOffset();\n        posAndOffsets[3] = in.endOffset();\n      }\n      else {\n        while (mi.next()) {\n          if (count * 4 >= posAndOffsets.length) {\n            posAndOffsets = ArrayUtil.grow(posAndOffsets, (count + 1) * 4);\n          }\n          posAndOffsets[count * 4] = mi.startPosition();\n          posAndOffsets[count * 4 + 1] = mi.endPosition();\n          posAndOffsets[count * 4 + 2] = mi.startOffset();\n          posAndOffsets[count * 4 + 3] = mi.endOffset();\n          count++;\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0936d9ca6b07dcd85961f5c9734232bc34813d3","date":1546870120,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/MinimizingConjunctionIntervalsSource.CacheingMatchesIterator#cache().mjava","sourceNew":null,"sourceOld":"    private void cache() throws IOException {\n      count = 0;\n      MatchesIterator mi = in.getSubMatches();\n      if (mi == null) {\n        count = 1;\n        posAndOffsets[0] = in.startPosition();\n        posAndOffsets[1] = in.endPosition();\n        posAndOffsets[2] = in.startOffset();\n        posAndOffsets[3] = in.endOffset();\n      }\n      else {\n        while (mi.next()) {\n          if (count * 4 >= posAndOffsets.length) {\n            posAndOffsets = ArrayUtil.grow(posAndOffsets, (count + 1) * 4);\n          }\n          posAndOffsets[count * 4] = mi.startPosition();\n          posAndOffsets[count * 4 + 1] = mi.endPosition();\n          posAndOffsets[count * 4 + 2] = mi.startOffset();\n          posAndOffsets[count * 4 + 3] = mi.endOffset();\n          count++;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2375622520a4e480775e3104a2f9a423536755b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0936d9ca6b07dcd85961f5c9734232bc34813d3":["2375622520a4e480775e3104a2f9a423536755b4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0936d9ca6b07dcd85961f5c9734232bc34813d3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2375622520a4e480775e3104a2f9a423536755b4"],"2375622520a4e480775e3104a2f9a423536755b4":["a0936d9ca6b07dcd85961f5c9734232bc34813d3"],"a0936d9ca6b07dcd85961f5c9734232bc34813d3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}