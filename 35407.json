{"path":"contrib/wordnet/src/java/org/apache/lucene/wordnet/SynonymTokenFilter#SynonymTokenFilter(TokenStream,SynonymMap,int).mjava","commits":[{"id":"d68e5c46e6a5ebdf4dafec4a123344092b915cc0","date":1256752193,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/wordnet/src/java/org/apache/lucene/wordnet/SynonymTokenFilter#SynonymTokenFilter(TokenStream,SynonymMap,int).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/SynonymTokenFilter#SynonymTokenFilter(TokenStream,SynonymMap,int).mjava","sourceNew":"  /**\n   * Creates an instance for the given underlying stream and synonym table.\n   * \n   * @param input\n   *            the underlying child token stream\n   * @param synonyms\n   *            the map used to extract synonyms for terms\n   * @param maxSynonyms\n   *            the maximum number of synonym tokens to return per underlying\n   *            token word (a value of Integer.MAX_VALUE indicates unlimited)\n   */\n  public SynonymTokenFilter(TokenStream input, SynonymMap synonyms, int maxSynonyms) {\n    super(input);\n    if (input == null)\n      throw new IllegalArgumentException(\"input must not be null\");\n    if (synonyms == null)\n      throw new IllegalArgumentException(\"synonyms must not be null\");\n    if (maxSynonyms < 0) \n      throw new IllegalArgumentException(\"maxSynonyms must not be negative\");\n    \n    this.synonyms = synonyms;\n    this.maxSynonyms = maxSynonyms;\n    \n    this.termAtt = addAttribute(TermAttribute.class);\n    this.typeAtt = addAttribute(TypeAttribute.class);\n    this.posIncrAtt = addAttribute(PositionIncrementAttribute.class);\n  }\n\n","sourceOld":"  /**\n   * Creates an instance for the given underlying stream and synonym table.\n   * \n   * @param input\n   *            the underlying child token stream\n   * @param synonyms\n   *            the map used to extract synonyms for terms\n   * @param maxSynonyms\n   *            the maximum number of synonym tokens to return per underlying\n   *            token word (a value of Integer.MAX_VALUE indicates unlimited)\n   */\n  public SynonymTokenFilter(TokenStream input, SynonymMap synonyms, int maxSynonyms) {\n    super(input);\n    if (input == null)\n      throw new IllegalArgumentException(\"input must not be null\");\n    if (synonyms == null)\n      throw new IllegalArgumentException(\"synonyms must not be null\");\n    if (maxSynonyms < 0) \n      throw new IllegalArgumentException(\"maxSynonyms must not be negative\");\n    \n    this.synonyms = synonyms;\n    this.maxSynonyms = maxSynonyms;\n    \n    this.termAtt = addAttribute(TermAttribute.class);\n    this.typeAtt = addAttribute(TypeAttribute.class);\n    this.posIncrAtt = addAttribute(PositionIncrementAttribute.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/wordnet/src/java/org/apache/lucene/wordnet/SynonymTokenFilter#SynonymTokenFilter(TokenStream,SynonymMap,int).mjava","pathOld":"contrib/wordnet/src/java/org/apache/lucene/wordnet/SynonymTokenFilter#SynonymTokenFilter(TokenStream,SynonymMap,int).mjava","sourceNew":"  /**\n   * Creates an instance for the given underlying stream and synonym table.\n   * \n   * @param input\n   *            the underlying child token stream\n   * @param synonyms\n   *            the map used to extract synonyms for terms\n   * @param maxSynonyms\n   *            the maximum number of synonym tokens to return per underlying\n   *            token word (a value of Integer.MAX_VALUE indicates unlimited)\n   */\n  public SynonymTokenFilter(TokenStream input, SynonymMap synonyms, int maxSynonyms) {\n    super(input);\n    if (input == null)\n      throw new IllegalArgumentException(\"input must not be null\");\n    if (synonyms == null)\n      throw new IllegalArgumentException(\"synonyms must not be null\");\n    if (maxSynonyms < 0) \n      throw new IllegalArgumentException(\"maxSynonyms must not be negative\");\n    \n    this.synonyms = synonyms;\n    this.maxSynonyms = maxSynonyms;\n    \n    this.termAtt = addAttribute(TermAttribute.class);\n    this.typeAtt = addAttribute(TypeAttribute.class);\n    this.posIncrAtt = addAttribute(PositionIncrementAttribute.class);\n  }\n\n","sourceOld":"  /**\n   * Creates an instance for the given underlying stream and synonym table.\n   * \n   * @param input\n   *            the underlying child token stream\n   * @param synonyms\n   *            the map used to extract synonyms for terms\n   * @param maxSynonyms\n   *            the maximum number of synonym tokens to return per underlying\n   *            token word (a value of Integer.MAX_VALUE indicates unlimited)\n   */\n  public SynonymTokenFilter(TokenStream input, SynonymMap synonyms, int maxSynonyms) {\n    super(input);\n    if (input == null)\n      throw new IllegalArgumentException(\"input must not be null\");\n    if (synonyms == null)\n      throw new IllegalArgumentException(\"synonyms must not be null\");\n    if (maxSynonyms < 0) \n      throw new IllegalArgumentException(\"maxSynonyms must not be negative\");\n    \n    this.synonyms = synonyms;\n    this.maxSynonyms = maxSynonyms;\n    \n    this.termAtt = addAttribute(TermAttribute.class);\n    this.typeAtt = addAttribute(TypeAttribute.class);\n    this.posIncrAtt = addAttribute(PositionIncrementAttribute.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d68e5c46e6a5ebdf4dafec4a123344092b915cc0"],"d68e5c46e6a5ebdf4dafec4a123344092b915cc0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d68e5c46e6a5ebdf4dafec4a123344092b915cc0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d68e5c46e6a5ebdf4dafec4a123344092b915cc0":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}