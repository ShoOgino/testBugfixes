{"path":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#disableCountingLines(boolean).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#disableCountingLines(boolean).mjava","pathOld":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#disableCountingLines(boolean).mjava","sourceNew":"  private String[] disableCountingLines (boolean disable) {\n    String dis = disable ? \"-\" : \"\";\n    return new String[] {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=30\",\n        \"doc.term.vector=false\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"doc.tokenized=false\",\n        \"task.max.depth.log=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  \"+dis+\"CreateIndex\",            // optionally disable counting here\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  \"+dis+\"  CloseIndex\",             // optionally disable counting here (with extra blanks)\n        \"}\",\n        \"RepSumByName\",\n    };\n  }\n\n","sourceOld":"  private String[] disableCountingLines (boolean disable) {\n    String dis = disable ? \"-\" : \"\";\n    return new String[] {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=30\",\n        \"doc.term.vector=false\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"doc.tokenized=false\",\n        \"task.max.depth.log=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  \"+dis+\"CreateIndex\",            // optionally disable counting here\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  \"+dis+\"  CloseIndex\",             // optionally disable counting here (with extra blanks)\n        \"}\",\n        \"RepSumByName\",\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#disableCountingLines(boolean).mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#disableCountingLines(boolean).mjava","sourceNew":"  private String[] disableCountingLines (boolean disable) {\n    String dis = disable ? \"-\" : \"\";\n    return new String[] {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=30\",\n        \"doc.term.vector=false\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"doc.tokenized=false\",\n        \"task.max.depth.log=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  \"+dis+\"CreateIndex\",            // optionally disable counting here\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  \"+dis+\"  CloseIndex\",             // optionally disable counting here (with extra blanks)\n        \"}\",\n        \"RepSumByName\",\n    };\n  }\n\n","sourceOld":"  private String[] disableCountingLines (boolean disable) {\n    String dis = disable ? \"-\" : \"\";\n    return new String[] {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=30\",\n        \"doc.term.vector=false\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"doc.tokenized=false\",\n        \"task.max.depth.log=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  \"+dis+\"CreateIndex\",            // optionally disable counting here\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  \"+dis+\"  CloseIndex\",             // optionally disable counting here (with extra blanks)\n        \"}\",\n        \"RepSumByName\",\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#disableCountingLines(boolean).mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#disableCountingLines(boolean).mjava","sourceNew":"  private String[] disableCountingLines (boolean disable) {\n    String dis = disable ? \"-\" : \"\";\n    return new String[] {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=30\",\n        \"doc.term.vector=false\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"doc.tokenized=false\",\n        \"task.max.depth.log=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  \"+dis+\"CreateIndex\",            // optionally disable counting here\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  \"+dis+\"  CloseIndex\",             // optionally disable counting here (with extra blanks)\n        \"}\",\n        \"RepSumByName\",\n    };\n  }\n\n","sourceOld":"  private String[] disableCountingLines (boolean disable) {\n    String dis = disable ? \"-\" : \"\";\n    return new String[] {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=30\",\n        \"doc.term.vector=false\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"doc.tokenized=false\",\n        \"task.max.depth.log=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  \"+dis+\"CreateIndex\",            // optionally disable counting here\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  \"+dis+\"  CloseIndex\",             // optionally disable counting here (with extra blanks)\n        \"}\",\n        \"RepSumByName\",\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#disableCountingLines(boolean).mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#disableCountingLines(boolean).mjava","sourceNew":"  private String[] disableCountingLines (boolean disable) {\n    String dis = disable ? \"-\" : \"\";\n    return new String[] {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=30\",\n        \"doc.term.vector=false\",\n        \"content.source.forever=false\",\n        \"directory=ByteBuffersDirectory\",\n        \"doc.stored=false\",\n        \"doc.tokenized=false\",\n        \"task.max.depth.log=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  \"+dis+\"CreateIndex\",            // optionally disable counting here\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  \"+dis+\"  CloseIndex\",             // optionally disable counting here (with extra blanks)\n        \"}\",\n        \"RepSumByName\",\n    };\n  }\n\n","sourceOld":"  private String[] disableCountingLines (boolean disable) {\n    String dis = disable ? \"-\" : \"\";\n    return new String[] {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=30\",\n        \"doc.term.vector=false\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"doc.tokenized=false\",\n        \"task.max.depth.log=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  \"+dis+\"CreateIndex\",            // optionally disable counting here\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  \"+dis+\"  CloseIndex\",             // optionally disable counting here (with extra blanks)\n        \"}\",\n        \"RepSumByName\",\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d77dafd89756a5161d244985903e3487ca109182":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["d77dafd89756a5161d244985903e3487ca109182"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}