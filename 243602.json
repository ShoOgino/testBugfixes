{"path":"lucene/core/src/java/org/apache/lucene/util/fst/FST#isExpandedTarget(Arc[T]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#isExpandedTarget(Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST#isExpandedTarget(Arc[T]).mjava","sourceNew":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow) throws IOException {\n    if (!targetHasArcs(follow)) {\n      return false;\n    } else {\n      final BytesReader in = getBytesReader(getNodeAddress(follow.target));\n      return in.readByte() == ARCS_AS_FIXED_ARRAY;\n    }\n  }\n\n","sourceOld":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow) throws IOException {\n    if (!targetHasArcs(follow)) {\n      return false;\n    } else {\n      final BytesReader in = getBytesReader(getNodeAddress(follow.target));\n      return in.readByte() == ARCS_AS_FIXED_ARRAY;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b9fb5afeea0288262bffcc55bdcda8b5fa272c8","date":1339238489,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#isExpandedTarget(Arc[T],FST.BytesReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#isExpandedTarget(Arc[T]).mjava","sourceNew":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow, FST.BytesReader in) throws IOException {\n    if (!targetHasArcs(follow)) {\n      return false;\n    } else {\n      in.pos = getNodeAddress(follow.target);\n      return in.readByte() == ARCS_AS_FIXED_ARRAY;\n    }\n  }\n\n","sourceOld":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow) throws IOException {\n    if (!targetHasArcs(follow)) {\n      return false;\n    } else {\n      final BytesReader in = getBytesReader(getNodeAddress(follow.target));\n      return in.readByte() == ARCS_AS_FIXED_ARRAY;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8b9fb5afeea0288262bffcc55bdcda8b5fa272c8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8b9fb5afeea0288262bffcc55bdcda8b5fa272c8"]},"commit2Childs":{"8b9fb5afeea0288262bffcc55bdcda8b5fa272c8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8b9fb5afeea0288262bffcc55bdcda8b5fa272c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}