{"path":"solr/solrj/src/test/org/apache/solr/common/util/TestJavaBinCodec#generateAllDataTypes().mjava","commits":[{"id":"f4cdb4d252303817a657f62a39d7a8ca669abc2a","date":1394456576,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestJavaBinCodec#generateAllDataTypes().mjava","pathOld":"/dev/null","sourceNew":"  private List<Object> generateAllDataTypes() {\n    List<Object> types = new ArrayList<>();\n\n    types.add(null); //NULL\n    types.add(true);\n    types.add(false);\n    types.add((byte) 1);\n    types.add((short) 2);\n    types.add((double) 3);\n\n    types.add(-4);\n    types.add(4);\n    types.add(42);\n\n    types.add((long) -5);\n    types.add((long) 5);\n    types.add((long) 50);\n\n    types.add((float) 6);\n    types.add(new Date(0));\n\n    Map<Integer, Integer> map = new HashMap<>();\n    map.put(1, 2);\n    types.add(map);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField(\"foo\", \"bar\");\n    types.add(doc);\n\n    SolrDocumentList solrDocs = new SolrDocumentList();\n    solrDocs.setMaxScore(1.0f);\n    solrDocs.setNumFound(1);\n    solrDocs.setStart(0);\n    solrDocs.add(0, doc);\n    types.add(solrDocs);\n\n    types.add(new byte[] {1,2,3,4,5});\n\n    List<String> list = new ArrayList<String>();\n    list.add(\"one\");\n    //types.add(list.iterator());\n\n    types.add((byte) 15); //END\n\n    SolrInputDocument idoc = new SolrInputDocument();\n    idoc.addField(\"foo\", \"bar\");\n    types.add(idoc);\n\n    SolrInputDocument parentDoc = new SolrInputDocument();\n    parentDoc.addField(\"foo\", \"bar\");\n    SolrInputDocument childDoc = new SolrInputDocument();\n    childDoc.addField(\"foo\", \"bar\");\n    parentDoc.addChildDocument(childDoc);\n    types.add(parentDoc);\n\n    types.add(new EnumFieldValue(1, \"foo\"));\n\n    types.add(map.entrySet().iterator().next()); //Map.Entry\n\n    types.add((byte) (1 << 5)); //TAG_AND_LEN\n\n    types.add(\"foo\");\n    types.add(1);\n    types.add((long) 2);\n\n    SimpleOrderedMap simpleOrderedMap = new SimpleOrderedMap();\n    simpleOrderedMap.add(\"bar\", \"barbar\");\n    types.add(simpleOrderedMap);\n\n    NamedList<String> nl = new NamedList<>();\n    nl.add(\"foo\", \"barbar\");\n    types.add(nl);\n\n    return types;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0146597a1c108e2e637e97237e4619e0e5ba2aef","date":1394471404,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestJavaBinCodec#generateAllDataTypes().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestJavaBinCodec#generateAllDataTypes().mjava","sourceNew":"  private List<Object> generateAllDataTypes() {\n    List<Object> types = new ArrayList<>();\n\n    types.add(null); //NULL\n    types.add(true);\n    types.add(false);\n    types.add((byte) 1);\n    types.add((short) 2);\n    types.add((double) 3);\n\n    types.add(-4);\n    types.add(4);\n    types.add(42);\n\n    types.add((long) -5);\n    types.add((long) 5);\n    types.add((long) 50);\n\n    types.add((float) 6);\n    types.add(new Date(0));\n\n    Map<Integer, Integer> map = new HashMap<>();\n    map.put(1, 2);\n    types.add(map);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField(\"foo\", \"bar\");\n    types.add(doc);\n\n    SolrDocumentList solrDocs = new SolrDocumentList();\n    solrDocs.setMaxScore(1.0f);\n    solrDocs.setNumFound(1);\n    solrDocs.setStart(0);\n    solrDocs.add(0, doc);\n    types.add(solrDocs);\n\n    types.add(new byte[] {1,2,3,4,5});\n\n    // TODO?\n    // List<String> list = new ArrayList<String>();\n    // list.add(\"one\");\n    // types.add(list.iterator());\n\n    types.add((byte) 15); //END\n\n    SolrInputDocument idoc = new SolrInputDocument();\n    idoc.addField(\"foo\", \"bar\");\n    types.add(idoc);\n\n    SolrInputDocument parentDoc = new SolrInputDocument();\n    parentDoc.addField(\"foo\", \"bar\");\n    SolrInputDocument childDoc = new SolrInputDocument();\n    childDoc.addField(\"foo\", \"bar\");\n    parentDoc.addChildDocument(childDoc);\n    types.add(parentDoc);\n\n    types.add(new EnumFieldValue(1, \"foo\"));\n\n    types.add(map.entrySet().iterator().next()); //Map.Entry\n\n    types.add((byte) (1 << 5)); //TAG_AND_LEN\n\n    types.add(\"foo\");\n    types.add(1);\n    types.add((long) 2);\n\n    SimpleOrderedMap simpleOrderedMap = new SimpleOrderedMap();\n    simpleOrderedMap.add(\"bar\", \"barbar\");\n    types.add(simpleOrderedMap);\n\n    NamedList<String> nl = new NamedList<>();\n    nl.add(\"foo\", \"barbar\");\n    types.add(nl);\n\n    return types;\n  }\n\n","sourceOld":"  private List<Object> generateAllDataTypes() {\n    List<Object> types = new ArrayList<>();\n\n    types.add(null); //NULL\n    types.add(true);\n    types.add(false);\n    types.add((byte) 1);\n    types.add((short) 2);\n    types.add((double) 3);\n\n    types.add(-4);\n    types.add(4);\n    types.add(42);\n\n    types.add((long) -5);\n    types.add((long) 5);\n    types.add((long) 50);\n\n    types.add((float) 6);\n    types.add(new Date(0));\n\n    Map<Integer, Integer> map = new HashMap<>();\n    map.put(1, 2);\n    types.add(map);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField(\"foo\", \"bar\");\n    types.add(doc);\n\n    SolrDocumentList solrDocs = new SolrDocumentList();\n    solrDocs.setMaxScore(1.0f);\n    solrDocs.setNumFound(1);\n    solrDocs.setStart(0);\n    solrDocs.add(0, doc);\n    types.add(solrDocs);\n\n    types.add(new byte[] {1,2,3,4,5});\n\n    List<String> list = new ArrayList<String>();\n    list.add(\"one\");\n    //types.add(list.iterator());\n\n    types.add((byte) 15); //END\n\n    SolrInputDocument idoc = new SolrInputDocument();\n    idoc.addField(\"foo\", \"bar\");\n    types.add(idoc);\n\n    SolrInputDocument parentDoc = new SolrInputDocument();\n    parentDoc.addField(\"foo\", \"bar\");\n    SolrInputDocument childDoc = new SolrInputDocument();\n    childDoc.addField(\"foo\", \"bar\");\n    parentDoc.addChildDocument(childDoc);\n    types.add(parentDoc);\n\n    types.add(new EnumFieldValue(1, \"foo\"));\n\n    types.add(map.entrySet().iterator().next()); //Map.Entry\n\n    types.add((byte) (1 << 5)); //TAG_AND_LEN\n\n    types.add(\"foo\");\n    types.add(1);\n    types.add((long) 2);\n\n    SimpleOrderedMap simpleOrderedMap = new SimpleOrderedMap();\n    simpleOrderedMap.add(\"bar\", \"barbar\");\n    types.add(simpleOrderedMap);\n\n    NamedList<String> nl = new NamedList<>();\n    nl.add(\"foo\", \"barbar\");\n    types.add(nl);\n\n    return types;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","date":1394564625,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestJavaBinCodec#generateAllDataTypes().mjava","pathOld":"/dev/null","sourceNew":"  private List<Object> generateAllDataTypes() {\n    List<Object> types = new ArrayList<>();\n\n    types.add(null); //NULL\n    types.add(true);\n    types.add(false);\n    types.add((byte) 1);\n    types.add((short) 2);\n    types.add((double) 3);\n\n    types.add(-4);\n    types.add(4);\n    types.add(42);\n\n    types.add((long) -5);\n    types.add((long) 5);\n    types.add((long) 50);\n\n    types.add((float) 6);\n    types.add(new Date(0));\n\n    Map<Integer, Integer> map = new HashMap<>();\n    map.put(1, 2);\n    types.add(map);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField(\"foo\", \"bar\");\n    types.add(doc);\n\n    SolrDocumentList solrDocs = new SolrDocumentList();\n    solrDocs.setMaxScore(1.0f);\n    solrDocs.setNumFound(1);\n    solrDocs.setStart(0);\n    solrDocs.add(0, doc);\n    types.add(solrDocs);\n\n    types.add(new byte[] {1,2,3,4,5});\n\n    // TODO?\n    // List<String> list = new ArrayList<String>();\n    // list.add(\"one\");\n    // types.add(list.iterator());\n\n    types.add((byte) 15); //END\n\n    SolrInputDocument idoc = new SolrInputDocument();\n    idoc.addField(\"foo\", \"bar\");\n    types.add(idoc);\n\n    SolrInputDocument parentDoc = new SolrInputDocument();\n    parentDoc.addField(\"foo\", \"bar\");\n    SolrInputDocument childDoc = new SolrInputDocument();\n    childDoc.addField(\"foo\", \"bar\");\n    parentDoc.addChildDocument(childDoc);\n    types.add(parentDoc);\n\n    types.add(new EnumFieldValue(1, \"foo\"));\n\n    types.add(map.entrySet().iterator().next()); //Map.Entry\n\n    types.add((byte) (1 << 5)); //TAG_AND_LEN\n\n    types.add(\"foo\");\n    types.add(1);\n    types.add((long) 2);\n\n    SimpleOrderedMap simpleOrderedMap = new SimpleOrderedMap();\n    simpleOrderedMap.add(\"bar\", \"barbar\");\n    types.add(simpleOrderedMap);\n\n    NamedList<String> nl = new NamedList<>();\n    nl.add(\"foo\", \"barbar\");\n    types.add(nl);\n\n    return types;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"640ded7811e1b7d29236a5e2934ec3cd266a8199","date":1588973147,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestJavaBinCodec#generateAllDataTypes().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestJavaBinCodec#generateAllDataTypes().mjava","sourceNew":"  private List<Object> generateAllDataTypes() {\n    List<Object> types = new ArrayList<>();\n\n    types.add(null); //NULL\n    types.add(true);\n    types.add(false);\n    types.add((byte) 1);\n    types.add((short) 2);\n    types.add((double) 3);\n\n    types.add(-4);\n    types.add(4);\n    types.add(42);\n\n    types.add((long) -5);\n    types.add((long) 5);\n    types.add((long) 50);\n\n    types.add((float) 6);\n    types.add(new Date(0));\n\n    Map<Integer, Integer> map = new HashMap<>();\n    map.put(1, 2);\n    types.add(map);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField(\"foo\", \"bar\");\n    types.add(doc);\n\n    SolrDocumentList solrDocs = new SolrDocumentList();\n    solrDocs.setMaxScore(1.0f);\n    solrDocs.setNumFound(1);\n    solrDocs.setNumFoundExact(Boolean.TRUE);\n    solrDocs.setStart(0);\n    solrDocs.add(0, doc);\n    types.add(solrDocs);\n\n    types.add(new byte[] {1,2,3,4,5});\n\n    // TODO?\n    // List<String> list = new ArrayList<String>();\n    // list.add(\"one\");\n    // types.add(list.iterator());\n\n    types.add((byte) 15); //END\n\n    SolrInputDocument idoc = new SolrInputDocument();\n    idoc.addField(\"foo\", \"bar\");\n    types.add(idoc);\n\n    SolrInputDocument parentDoc = new SolrInputDocument();\n    parentDoc.addField(\"foo\", \"bar\");\n    SolrInputDocument childDoc = new SolrInputDocument();\n    childDoc.addField(\"foo\", \"bar\");\n    parentDoc.addChildDocument(childDoc);\n    types.add(parentDoc);\n\n    types.add(new EnumFieldValue(1, \"foo\"));\n\n    types.add(map.entrySet().iterator().next()); //Map.Entry\n\n    types.add((byte) (1 << 5)); //TAG_AND_LEN\n\n    types.add(\"foo\");\n    types.add(1);\n    types.add((long) 2);\n\n    SimpleOrderedMap simpleOrderedMap = new SimpleOrderedMap();\n    simpleOrderedMap.add(\"bar\", \"barbar\");\n    types.add(simpleOrderedMap);\n\n    NamedList<String> nl = new NamedList<>();\n    nl.add(\"foo\", \"barbar\");\n    types.add(nl);\n\n    return types;\n  }\n\n","sourceOld":"  private List<Object> generateAllDataTypes() {\n    List<Object> types = new ArrayList<>();\n\n    types.add(null); //NULL\n    types.add(true);\n    types.add(false);\n    types.add((byte) 1);\n    types.add((short) 2);\n    types.add((double) 3);\n\n    types.add(-4);\n    types.add(4);\n    types.add(42);\n\n    types.add((long) -5);\n    types.add((long) 5);\n    types.add((long) 50);\n\n    types.add((float) 6);\n    types.add(new Date(0));\n\n    Map<Integer, Integer> map = new HashMap<>();\n    map.put(1, 2);\n    types.add(map);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField(\"foo\", \"bar\");\n    types.add(doc);\n\n    SolrDocumentList solrDocs = new SolrDocumentList();\n    solrDocs.setMaxScore(1.0f);\n    solrDocs.setNumFound(1);\n    solrDocs.setStart(0);\n    solrDocs.add(0, doc);\n    types.add(solrDocs);\n\n    types.add(new byte[] {1,2,3,4,5});\n\n    // TODO?\n    // List<String> list = new ArrayList<String>();\n    // list.add(\"one\");\n    // types.add(list.iterator());\n\n    types.add((byte) 15); //END\n\n    SolrInputDocument idoc = new SolrInputDocument();\n    idoc.addField(\"foo\", \"bar\");\n    types.add(idoc);\n\n    SolrInputDocument parentDoc = new SolrInputDocument();\n    parentDoc.addField(\"foo\", \"bar\");\n    SolrInputDocument childDoc = new SolrInputDocument();\n    childDoc.addField(\"foo\", \"bar\");\n    parentDoc.addChildDocument(childDoc);\n    types.add(parentDoc);\n\n    types.add(new EnumFieldValue(1, \"foo\"));\n\n    types.add(map.entrySet().iterator().next()); //Map.Entry\n\n    types.add((byte) (1 << 5)); //TAG_AND_LEN\n\n    types.add(\"foo\");\n    types.add(1);\n    types.add((long) 2);\n\n    SimpleOrderedMap simpleOrderedMap = new SimpleOrderedMap();\n    simpleOrderedMap.add(\"bar\", \"barbar\");\n    types.add(simpleOrderedMap);\n\n    NamedList<String> nl = new NamedList<>();\n    nl.add(\"foo\", \"barbar\");\n    types.add(nl);\n\n    return types;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestJavaBinCodec#generateAllDataTypes().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestJavaBinCodec#generateAllDataTypes().mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  private List<Object> generateAllDataTypes() {\n    List<Object> types = new ArrayList<>();\n\n    types.add(null); //NULL\n    types.add(true);\n    types.add(false);\n    types.add((byte) 1);\n    types.add((short) 2);\n    types.add((double) 3);\n\n    types.add(-4);\n    types.add(4);\n    types.add(42);\n\n    types.add((long) -5);\n    types.add((long) 5);\n    types.add((long) 50);\n\n    types.add((float) 6);\n    types.add(new Date(0));\n\n    Map<Integer, Integer> map = new HashMap<>();\n    map.put(1, 2);\n    types.add(map);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField(\"foo\", \"bar\");\n    types.add(doc);\n\n    SolrDocumentList solrDocs = new SolrDocumentList();\n    solrDocs.setMaxScore(1.0f);\n    solrDocs.setNumFound(1);\n    solrDocs.setNumFoundExact(Boolean.TRUE);\n    solrDocs.setStart(0);\n    solrDocs.add(0, doc);\n    types.add(solrDocs);\n\n    types.add(new byte[] {1,2,3,4,5});\n\n    // TODO?\n    // List<String> list = new ArrayList<String>();\n    // list.add(\"one\");\n    // types.add(list.iterator());\n\n    types.add((byte) 15); //END\n\n    SolrInputDocument idoc = new SolrInputDocument();\n    idoc.addField(\"foo\", \"bar\");\n    types.add(idoc);\n\n    SolrInputDocument parentDoc = new SolrInputDocument();\n    parentDoc.addField(\"foo\", \"bar\");\n    SolrInputDocument childDoc = new SolrInputDocument();\n    childDoc.addField(\"foo\", \"bar\");\n    parentDoc.addChildDocument(childDoc);\n    types.add(parentDoc);\n\n    types.add(new EnumFieldValue(1, \"foo\"));\n\n    types.add(map.entrySet().iterator().next()); //Map.Entry\n\n    types.add((byte) (1 << 5)); //TAG_AND_LEN\n\n    types.add(\"foo\");\n    types.add(1);\n    types.add((long) 2);\n\n    @SuppressWarnings({\"rawtypes\"})\n    SimpleOrderedMap simpleOrderedMap = new SimpleOrderedMap();\n    simpleOrderedMap.add(\"bar\", \"barbar\");\n    types.add(simpleOrderedMap);\n\n    NamedList<String> nl = new NamedList<>();\n    nl.add(\"foo\", \"barbar\");\n    types.add(nl);\n\n    return types;\n  }\n\n","sourceOld":"  private List<Object> generateAllDataTypes() {\n    List<Object> types = new ArrayList<>();\n\n    types.add(null); //NULL\n    types.add(true);\n    types.add(false);\n    types.add((byte) 1);\n    types.add((short) 2);\n    types.add((double) 3);\n\n    types.add(-4);\n    types.add(4);\n    types.add(42);\n\n    types.add((long) -5);\n    types.add((long) 5);\n    types.add((long) 50);\n\n    types.add((float) 6);\n    types.add(new Date(0));\n\n    Map<Integer, Integer> map = new HashMap<>();\n    map.put(1, 2);\n    types.add(map);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField(\"foo\", \"bar\");\n    types.add(doc);\n\n    SolrDocumentList solrDocs = new SolrDocumentList();\n    solrDocs.setMaxScore(1.0f);\n    solrDocs.setNumFound(1);\n    solrDocs.setNumFoundExact(Boolean.TRUE);\n    solrDocs.setStart(0);\n    solrDocs.add(0, doc);\n    types.add(solrDocs);\n\n    types.add(new byte[] {1,2,3,4,5});\n\n    // TODO?\n    // List<String> list = new ArrayList<String>();\n    // list.add(\"one\");\n    // types.add(list.iterator());\n\n    types.add((byte) 15); //END\n\n    SolrInputDocument idoc = new SolrInputDocument();\n    idoc.addField(\"foo\", \"bar\");\n    types.add(idoc);\n\n    SolrInputDocument parentDoc = new SolrInputDocument();\n    parentDoc.addField(\"foo\", \"bar\");\n    SolrInputDocument childDoc = new SolrInputDocument();\n    childDoc.addField(\"foo\", \"bar\");\n    parentDoc.addChildDocument(childDoc);\n    types.add(parentDoc);\n\n    types.add(new EnumFieldValue(1, \"foo\"));\n\n    types.add(map.entrySet().iterator().next()); //Map.Entry\n\n    types.add((byte) (1 << 5)); //TAG_AND_LEN\n\n    types.add(\"foo\");\n    types.add(1);\n    types.add((long) 2);\n\n    SimpleOrderedMap simpleOrderedMap = new SimpleOrderedMap();\n    simpleOrderedMap.add(\"bar\", \"barbar\");\n    types.add(simpleOrderedMap);\n\n    NamedList<String> nl = new NamedList<>();\n    nl.add(\"foo\", \"barbar\");\n    types.add(nl);\n\n    return types;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["640ded7811e1b7d29236a5e2934ec3cd266a8199"],"640ded7811e1b7d29236a5e2934ec3cd266a8199":["0146597a1c108e2e637e97237e4619e0e5ba2aef"],"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0146597a1c108e2e637e97237e4619e0e5ba2aef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0146597a1c108e2e637e97237e4619e0e5ba2aef":["f4cdb4d252303817a657f62a39d7a8ca669abc2a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"],"f4cdb4d252303817a657f62a39d7a8ca669abc2a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"640ded7811e1b7d29236a5e2934ec3cd266a8199":["9ba1b632c041956c93c41aa1143d16a567014891"],"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","f4cdb4d252303817a657f62a39d7a8ca669abc2a"],"0146597a1c108e2e637e97237e4619e0e5ba2aef":["640ded7811e1b7d29236a5e2934ec3cd266a8199","a58bbbe1c866963764d3f15d3a26a6a85f6c6af4"],"f4cdb4d252303817a657f62a39d7a8ca669abc2a":["0146597a1c108e2e637e97237e4619e0e5ba2aef"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}