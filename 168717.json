{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorNumeric.LongCounts#add(long).mjava","commits":[{"id":"dd0759e8803a09424422a329163d5900f6b10c42","date":1431227616,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorNumeric.LongCounts#add(long).mjava","pathOld":"/dev/null","sourceNew":"    /** returns the slot */\n    int add(long val) {\n      if (cardinality >= threshold) {\n        rehash();\n      }\n\n      numAdds++;\n      int h = hash(val);\n      for (int slot = h & (vals.length-1);  ;slot = (slot + ((h>>7)|1)) & (vals.length-1)) {\n        int count = counts[slot];\n        if (count == 0) {\n          counts[slot] = 1;\n          vals[slot] = val;\n          cardinality++;\n          return slot;\n        } else if (vals[slot] == val) {\n          // val is already in the set\n          counts[slot] = count + 1;\n          return slot;\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1c841e27891873cab110ebeb89f124a8ec470176","1c841e27891873cab110ebeb89f124a8ec470176","1c841e27891873cab110ebeb89f124a8ec470176","1c841e27891873cab110ebeb89f124a8ec470176","1c841e27891873cab110ebeb89f124a8ec470176","1c841e27891873cab110ebeb89f124a8ec470176"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"79759974460bc59933cd169acc94f5c6b16368d5","date":1471318443,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByHashNumeric.LongCounts#add(long).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorNumeric.LongCounts#add(long).mjava","sourceNew":"    /** returns the slot */\n    int add(long val) {\n      if (cardinality >= threshold) {\n        rehash();\n      }\n\n      numAdds++;\n      int h = hash(val);\n      for (int slot = h & (vals.length-1);  ;slot = (slot + ((h>>7)|1)) & (vals.length-1)) {\n        int count = counts[slot];\n        if (count == 0) {\n          counts[slot] = 1;\n          vals[slot] = val;\n          cardinality++;\n          return slot;\n        } else if (vals[slot] == val) {\n          // val is already in the set\n          counts[slot] = count + 1;\n          return slot;\n        }\n      }\n    }\n\n","sourceOld":"    /** returns the slot */\n    int add(long val) {\n      if (cardinality >= threshold) {\n        rehash();\n      }\n\n      numAdds++;\n      int h = hash(val);\n      for (int slot = h & (vals.length-1);  ;slot = (slot + ((h>>7)|1)) & (vals.length-1)) {\n        int count = counts[slot];\n        if (count == 0) {\n          counts[slot] = 1;\n          vals[slot] = val;\n          cardinality++;\n          return slot;\n        } else if (vals[slot] == val) {\n          // val is already in the set\n          counts[slot] = count + 1;\n          return slot;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByHashNumeric.LongCounts#add(long).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorNumeric.LongCounts#add(long).mjava","sourceNew":"    /** returns the slot */\n    int add(long val) {\n      if (cardinality >= threshold) {\n        rehash();\n      }\n\n      numAdds++;\n      int h = hash(val);\n      for (int slot = h & (vals.length-1);  ;slot = (slot + ((h>>7)|1)) & (vals.length-1)) {\n        int count = counts[slot];\n        if (count == 0) {\n          counts[slot] = 1;\n          vals[slot] = val;\n          cardinality++;\n          return slot;\n        } else if (vals[slot] == val) {\n          // val is already in the set\n          counts[slot] = count + 1;\n          return slot;\n        }\n      }\n    }\n\n","sourceOld":"    /** returns the slot */\n    int add(long val) {\n      if (cardinality >= threshold) {\n        rehash();\n      }\n\n      numAdds++;\n      int h = hash(val);\n      for (int slot = h & (vals.length-1);  ;slot = (slot + ((h>>7)|1)) & (vals.length-1)) {\n        int count = counts[slot];\n        if (count == 0) {\n          counts[slot] = 1;\n          vals[slot] = val;\n          cardinality++;\n          return slot;\n        } else if (vals[slot] == val) {\n          // val is already in the set\n          counts[slot] = count + 1;\n          return slot;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByHashNumeric.LongCounts#add(long).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorNumeric.LongCounts#add(long).mjava","sourceNew":"    /** returns the slot */\n    int add(long val) {\n      if (cardinality >= threshold) {\n        rehash();\n      }\n\n      numAdds++;\n      int h = hash(val);\n      for (int slot = h & (vals.length-1);  ;slot = (slot + ((h>>7)|1)) & (vals.length-1)) {\n        int count = counts[slot];\n        if (count == 0) {\n          counts[slot] = 1;\n          vals[slot] = val;\n          cardinality++;\n          return slot;\n        } else if (vals[slot] == val) {\n          // val is already in the set\n          counts[slot] = count + 1;\n          return slot;\n        }\n      }\n    }\n\n","sourceOld":"    /** returns the slot */\n    int add(long val) {\n      if (cardinality >= threshold) {\n        rehash();\n      }\n\n      numAdds++;\n      int h = hash(val);\n      for (int slot = h & (vals.length-1);  ;slot = (slot + ((h>>7)|1)) & (vals.length-1)) {\n        int count = counts[slot];\n        if (count == 0) {\n          counts[slot] = 1;\n          vals[slot] = val;\n          cardinality++;\n          return slot;\n        } else if (vals[slot] == val) {\n          // val is already in the set\n          counts[slot] = count + 1;\n          return slot;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorNumeric.LongCounts#add(long).mjava","sourceNew":null,"sourceOld":"    /** returns the slot */\n    int add(long val) {\n      if (cardinality >= threshold) {\n        rehash();\n      }\n\n      numAdds++;\n      int h = hash(val);\n      for (int slot = h & (vals.length-1);  ;slot = (slot + ((h>>7)|1)) & (vals.length-1)) {\n        int count = counts[slot];\n        if (count == 0) {\n          counts[slot] = 1;\n          vals[slot] = val;\n          cardinality++;\n          return slot;\n        } else if (vals[slot] == val) {\n          // val is already in the set\n          counts[slot] = count + 1;\n          return slot;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"403d05f7f8d69b65659157eff1bc1d2717f04c66":["dd0759e8803a09424422a329163d5900f6b10c42","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["dd0759e8803a09424422a329163d5900f6b10c42","79759974460bc59933cd169acc94f5c6b16368d5"],"dd0759e8803a09424422a329163d5900f6b10c42":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"79759974460bc59933cd169acc94f5c6b16368d5":["dd0759e8803a09424422a329163d5900f6b10c42"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["dd0759e8803a09424422a329163d5900f6b10c42","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["403d05f7f8d69b65659157eff1bc1d2717f04c66"]},"commit2Childs":{"403d05f7f8d69b65659157eff1bc1d2717f04c66":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd0759e8803a09424422a329163d5900f6b10c42"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"dd0759e8803a09424422a329163d5900f6b10c42":["403d05f7f8d69b65659157eff1bc1d2717f04c66","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","79759974460bc59933cd169acc94f5c6b16368d5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"79759974460bc59933cd169acc94f5c6b16368d5":["2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}