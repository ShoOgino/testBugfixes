{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(Path,String).mjava","commits":[{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(Path,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(File,String).mjava","sourceNew":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(Path solrHome, String xmlStr) throws Exception {\n\n    if (xmlStr == null)\n      xmlStr = \"<solr></solr>\";\n    Files.write(solrHome.resolve(SolrXmlConfig.SOLR_XML_FILE), xmlStr.getBytes(StandardCharsets.UTF_8));\n    h = new TestHarness(SolrXmlConfig.fromSolrHome(solrHome));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","sourceOld":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(File solrHome, String xmlStr) throws Exception {\n\n    File tmpFile = new File(solrHome, SolrXmlConfig.SOLR_XML_FILE);\n    if (xmlStr == null) {\n      xmlStr = \"<solr></solr>\";\n    }\n    FileUtils.write(tmpFile, xmlStr, IOUtils.UTF_8);\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n    h = new TestHarness(SolrXmlConfig.fromFile(loader, new File(solrHome, \"solr.xml\")));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ff704ef91e9ae30ca59babb23ece85720701b60","date":1498684964,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(Path,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(Path,String).mjava","sourceNew":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(Path solrHome, String xmlStr) throws Exception {\n\n    if (xmlStr == null)\n      xmlStr = \"<solr></solr>\";\n    Files.write(solrHome.resolve(SolrXmlConfig.SOLR_XML_FILE), xmlStr.getBytes(StandardCharsets.UTF_8));\n    h = new TestHarness(SolrXmlConfig.fromSolrHome(solrHome));\n    lrf = h.getRequestFactory(\"/select\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","sourceOld":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(Path solrHome, String xmlStr) throws Exception {\n\n    if (xmlStr == null)\n      xmlStr = \"<solr></solr>\";\n    Files.write(solrHome.resolve(SolrXmlConfig.SOLR_XML_FILE), xmlStr.getBytes(StandardCharsets.UTF_8));\n    h = new TestHarness(SolrXmlConfig.fromSolrHome(solrHome));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(Path,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(Path,String).mjava","sourceNew":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(Path solrHome, String xmlStr) throws Exception {\n\n    if (xmlStr == null)\n      xmlStr = \"<solr></solr>\";\n    Files.write(solrHome.resolve(SolrXmlConfig.SOLR_XML_FILE), xmlStr.getBytes(StandardCharsets.UTF_8));\n    h = new TestHarness(SolrXmlConfig.fromSolrHome(solrHome));\n    lrf = h.getRequestFactory(\"/select\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","sourceOld":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(Path solrHome, String xmlStr) throws Exception {\n\n    if (xmlStr == null)\n      xmlStr = \"<solr></solr>\";\n    Files.write(solrHome.resolve(SolrXmlConfig.SOLR_XML_FILE), xmlStr.getBytes(StandardCharsets.UTF_8));\n    h = new TestHarness(SolrXmlConfig.fromSolrHome(solrHome));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(Path,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(Path,String).mjava","sourceNew":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(Path solrHome, String xmlStr) throws Exception {\n\n    if (xmlStr == null)\n      xmlStr = \"<solr></solr>\";\n    Files.write(solrHome.resolve(SolrXmlConfig.SOLR_XML_FILE), xmlStr.getBytes(StandardCharsets.UTF_8));\n    h = new TestHarness(SolrXmlConfig.fromSolrHome(solrHome));\n    lrf = h.getRequestFactory(\"/select\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","sourceOld":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(Path solrHome, String xmlStr) throws Exception {\n\n    if (xmlStr == null)\n      xmlStr = \"<solr></solr>\";\n    Files.write(solrHome.resolve(SolrXmlConfig.SOLR_XML_FILE), xmlStr.getBytes(StandardCharsets.UTF_8));\n    h = new TestHarness(SolrXmlConfig.fromSolrHome(solrHome));\n    lrf = h.getRequestFactory(\"standard\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(Path,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#setupNoCoreTest(Path,String).mjava","sourceNew":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(Path solrHome, String xmlStr) throws Exception {\n\n    if (xmlStr == null)\n      xmlStr = \"<solr></solr>\";\n    Files.write(solrHome.resolve(SolrXmlConfig.SOLR_XML_FILE), xmlStr.getBytes(StandardCharsets.UTF_8));\n    h = new TestHarness(SolrXmlConfig.fromSolrHome(solrHome, new Properties()));\n    lrf = h.getRequestFactory(\"/select\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","sourceOld":"  /**\n   * Call this from @BeforeClass to set up the test harness and update handler with no cores.\n   *\n   * @param solrHome The solr home directory.\n   * @param xmlStr - the text of an XML file to use. If null, use the what's the absolute minimal file.\n   * @throws Exception Lost of file-type things can go wrong.\n   */\n  public static void setupNoCoreTest(Path solrHome, String xmlStr) throws Exception {\n\n    if (xmlStr == null)\n      xmlStr = \"<solr></solr>\";\n    Files.write(solrHome.resolve(SolrXmlConfig.SOLR_XML_FILE), xmlStr.getBytes(StandardCharsets.UTF_8));\n    h = new TestHarness(SolrXmlConfig.fromSolrHome(solrHome));\n    lrf = h.getRequestFactory(\"/select\", 0, 20, CommonParams.VERSION, \"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["28288370235ed02234a64753cdbf0c6ec096304a"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c8e5574b55d57947e989443dfde611646530ee":["a626ec4d1c92e59fe390724d6220081047b03ce7","28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["a626ec4d1c92e59fe390724d6220081047b03ce7","5ff704ef91e9ae30ca59babb23ece85720701b60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["a626ec4d1c92e59fe390724d6220081047b03ce7"]},"commit2Childs":{"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["30c8e5574b55d57947e989443dfde611646530ee","28288370235ed02234a64753cdbf0c6ec096304a","5ff704ef91e9ae30ca59babb23ece85720701b60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"30c8e5574b55d57947e989443dfde611646530ee":[],"28288370235ed02234a64753cdbf0c6ec096304a":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","30c8e5574b55d57947e989443dfde611646530ee"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}