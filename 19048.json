{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrQuery#setTerms(boolean).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrQuery#setTerms(boolean).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/SolrQuery#setTerms(boolean).mjava","sourceNew":"  /** enable/disable terms.  \n   * \n   * @param b flag to indicate terms should be enabled. <br /> if b==false, removes all other terms parameters\n   * @return Current reference (<i>this</i>)\n   */\n  public SolrQuery setTerms(boolean b) {\n    if (b) {\n      this.set(TermsParams.TERMS, true);\n    } else {\n      this.remove(TermsParams.TERMS);\n      this.remove(TermsParams.TERMS_FIELD);\n      this.remove(TermsParams.TERMS_LOWER);\n      this.remove(TermsParams.TERMS_UPPER);\n      this.remove(TermsParams.TERMS_UPPER_INCLUSIVE);\n      this.remove(TermsParams.TERMS_LOWER_INCLUSIVE);\n      this.remove(TermsParams.TERMS_LIMIT);\n      this.remove(TermsParams.TERMS_PREFIX_STR);\n      this.remove(TermsParams.TERMS_MINCOUNT);\n      this.remove(TermsParams.TERMS_MAXCOUNT);\n      this.remove(TermsParams.TERMS_RAW);\n      this.remove(TermsParams.TERMS_SORT);\n      this.remove(TermsParams.TERMS_REGEXP_STR);\n      this.remove(TermsParams.TERMS_REGEXP_FLAG);\n    }\n    return this;\n  }\n\n","sourceOld":"  /** enable/disable terms.  \n   * \n   * @param b flag to indicate terms should be enabled. <br /> if b==false, removes all other terms parameters\n   * @return Current reference (<i>this</i>)\n   */\n  public SolrQuery setTerms(boolean b) {\n    if (b) {\n      this.set(TermsParams.TERMS, true);\n    } else {\n      this.remove(TermsParams.TERMS);\n      this.remove(TermsParams.TERMS_FIELD);\n      this.remove(TermsParams.TERMS_LOWER);\n      this.remove(TermsParams.TERMS_UPPER);\n      this.remove(TermsParams.TERMS_UPPER_INCLUSIVE);\n      this.remove(TermsParams.TERMS_LOWER_INCLUSIVE);\n      this.remove(TermsParams.TERMS_LIMIT);\n      this.remove(TermsParams.TERMS_PREFIX_STR);\n      this.remove(TermsParams.TERMS_MINCOUNT);\n      this.remove(TermsParams.TERMS_MAXCOUNT);\n      this.remove(TermsParams.TERMS_RAW);\n      this.remove(TermsParams.TERMS_SORT);\n      this.remove(TermsParams.TERMS_REGEXP_STR);\n      this.remove(TermsParams.TERMS_REGEXP_FLAG);\n    }\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrQuery#setTerms(boolean).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/SolrQuery#setTerms(boolean).mjava","sourceNew":"  /** enable/disable terms.  \n   * \n   * @param b flag to indicate terms should be enabled. <br /> if b==false, removes all other terms parameters\n   * @return Current reference (<i>this</i>)\n   */\n  public SolrQuery setTerms(boolean b) {\n    if (b) {\n      this.set(TermsParams.TERMS, true);\n    } else {\n      this.remove(TermsParams.TERMS);\n      this.remove(TermsParams.TERMS_FIELD);\n      this.remove(TermsParams.TERMS_LOWER);\n      this.remove(TermsParams.TERMS_UPPER);\n      this.remove(TermsParams.TERMS_UPPER_INCLUSIVE);\n      this.remove(TermsParams.TERMS_LOWER_INCLUSIVE);\n      this.remove(TermsParams.TERMS_LIMIT);\n      this.remove(TermsParams.TERMS_PREFIX_STR);\n      this.remove(TermsParams.TERMS_MINCOUNT);\n      this.remove(TermsParams.TERMS_MAXCOUNT);\n      this.remove(TermsParams.TERMS_RAW);\n      this.remove(TermsParams.TERMS_SORT);\n      this.remove(TermsParams.TERMS_REGEXP_STR);\n      this.remove(TermsParams.TERMS_REGEXP_FLAG);\n    }\n    return this;\n  }\n\n","sourceOld":"  /** enable/disable terms.  \n   * \n   * @param b flag to indicate terms should be enabled. <br /> if b==false, removes all other terms parameters\n   * @return Current reference (<i>this</i>)\n   */\n  public SolrQuery setTerms(boolean b) {\n    if (b) {\n      this.set(TermsParams.TERMS, true);\n    } else {\n      this.remove(TermsParams.TERMS);\n      this.remove(TermsParams.TERMS_FIELD);\n      this.remove(TermsParams.TERMS_LOWER);\n      this.remove(TermsParams.TERMS_UPPER);\n      this.remove(TermsParams.TERMS_UPPER_INCLUSIVE);\n      this.remove(TermsParams.TERMS_LOWER_INCLUSIVE);\n      this.remove(TermsParams.TERMS_LIMIT);\n      this.remove(TermsParams.TERMS_PREFIX_STR);\n      this.remove(TermsParams.TERMS_MINCOUNT);\n      this.remove(TermsParams.TERMS_MAXCOUNT);\n      this.remove(TermsParams.TERMS_RAW);\n      this.remove(TermsParams.TERMS_SORT);\n      this.remove(TermsParams.TERMS_REGEXP_STR);\n      this.remove(TermsParams.TERMS_REGEXP_FLAG);\n    }\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrQuery#setTerms(boolean).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/SolrQuery#setTerms(boolean).mjava","sourceNew":"  /** enable/disable terms.  \n   * \n   * @param b flag to indicate terms should be enabled. <br /> if b==false, removes all other terms parameters\n   * @return Current reference (<i>this</i>)\n   */\n  public SolrQuery setTerms(boolean b) {\n    if (b) {\n      this.set(TermsParams.TERMS, true);\n    } else {\n      this.remove(TermsParams.TERMS);\n      this.remove(TermsParams.TERMS_FIELD);\n      this.remove(TermsParams.TERMS_LOWER);\n      this.remove(TermsParams.TERMS_UPPER);\n      this.remove(TermsParams.TERMS_UPPER_INCLUSIVE);\n      this.remove(TermsParams.TERMS_LOWER_INCLUSIVE);\n      this.remove(TermsParams.TERMS_LIMIT);\n      this.remove(TermsParams.TERMS_PREFIX_STR);\n      this.remove(TermsParams.TERMS_MINCOUNT);\n      this.remove(TermsParams.TERMS_MAXCOUNT);\n      this.remove(TermsParams.TERMS_RAW);\n      this.remove(TermsParams.TERMS_SORT);\n      this.remove(TermsParams.TERMS_REGEXP_STR);\n      this.remove(TermsParams.TERMS_REGEXP_FLAG);\n    }\n    return this;\n  }\n\n","sourceOld":"  /** enable/disable terms.  \n   * \n   * @param b flag to indicate terms should be enabled. <br /> if b==false, removes all other terms parameters\n   * @return Current reference (<i>this</i>)\n   */\n  public SolrQuery setTerms(boolean b) {\n    if (b) {\n      this.set(TermsParams.TERMS, true);\n    } else {\n      this.remove(TermsParams.TERMS);\n      this.remove(TermsParams.TERMS_FIELD);\n      this.remove(TermsParams.TERMS_LOWER);\n      this.remove(TermsParams.TERMS_UPPER);\n      this.remove(TermsParams.TERMS_UPPER_INCLUSIVE);\n      this.remove(TermsParams.TERMS_LOWER_INCLUSIVE);\n      this.remove(TermsParams.TERMS_LIMIT);\n      this.remove(TermsParams.TERMS_PREFIX_STR);\n      this.remove(TermsParams.TERMS_MINCOUNT);\n      this.remove(TermsParams.TERMS_MAXCOUNT);\n      this.remove(TermsParams.TERMS_RAW);\n      this.remove(TermsParams.TERMS_SORT);\n      this.remove(TermsParams.TERMS_REGEXP_STR);\n      this.remove(TermsParams.TERMS_REGEXP_FLAG);\n    }\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","date":1423508552,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrQuery#setTerms(boolean).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrQuery#setTerms(boolean).mjava","sourceNew":"  /** enable/disable terms.  \n   * \n   * @param b flag to indicate terms should be enabled. <br> if b==false, removes all other terms parameters\n   * @return Current reference (<i>this</i>)\n   */\n  public SolrQuery setTerms(boolean b) {\n    if (b) {\n      this.set(TermsParams.TERMS, true);\n    } else {\n      this.remove(TermsParams.TERMS);\n      this.remove(TermsParams.TERMS_FIELD);\n      this.remove(TermsParams.TERMS_LOWER);\n      this.remove(TermsParams.TERMS_UPPER);\n      this.remove(TermsParams.TERMS_UPPER_INCLUSIVE);\n      this.remove(TermsParams.TERMS_LOWER_INCLUSIVE);\n      this.remove(TermsParams.TERMS_LIMIT);\n      this.remove(TermsParams.TERMS_PREFIX_STR);\n      this.remove(TermsParams.TERMS_MINCOUNT);\n      this.remove(TermsParams.TERMS_MAXCOUNT);\n      this.remove(TermsParams.TERMS_RAW);\n      this.remove(TermsParams.TERMS_SORT);\n      this.remove(TermsParams.TERMS_REGEXP_STR);\n      this.remove(TermsParams.TERMS_REGEXP_FLAG);\n    }\n    return this;\n  }\n\n","sourceOld":"  /** enable/disable terms.  \n   * \n   * @param b flag to indicate terms should be enabled. <br /> if b==false, removes all other terms parameters\n   * @return Current reference (<i>this</i>)\n   */\n  public SolrQuery setTerms(boolean b) {\n    if (b) {\n      this.set(TermsParams.TERMS, true);\n    } else {\n      this.remove(TermsParams.TERMS);\n      this.remove(TermsParams.TERMS_FIELD);\n      this.remove(TermsParams.TERMS_LOWER);\n      this.remove(TermsParams.TERMS_UPPER);\n      this.remove(TermsParams.TERMS_UPPER_INCLUSIVE);\n      this.remove(TermsParams.TERMS_LOWER_INCLUSIVE);\n      this.remove(TermsParams.TERMS_LIMIT);\n      this.remove(TermsParams.TERMS_PREFIX_STR);\n      this.remove(TermsParams.TERMS_MINCOUNT);\n      this.remove(TermsParams.TERMS_MAXCOUNT);\n      this.remove(TermsParams.TERMS_RAW);\n      this.remove(TermsParams.TERMS_SORT);\n      this.remove(TermsParams.TERMS_REGEXP_STR);\n      this.remove(TermsParams.TERMS_REGEXP_FLAG);\n    }\n    return this;\n  }\n\n","bugFix":["d6f4b5f81f9b0ba9369a05c79e55fa6ed5b3d96e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}