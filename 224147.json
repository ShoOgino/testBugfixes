{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#invokeCollectionApi(String...).mjava","commits":[{"id":"6f26f74e4969851a019d28f10315cb1c77786f22","date":1400539241,"type":1,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#invokeCollectionApi(String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerStatusTest#invokeCollectionApi(String...).mjava","sourceNew":"  protected NamedList<Object> invokeCollectionApi(String... args) throws SolrServerException, IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    SolrRequest request = new QueryRequest(params);\n    for (int i = 0; i < args.length - 1; i+=2) {\n      params.add(args[i], args[i+1]);\n    }\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrServer) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    HttpSolrServer baseServer = new HttpSolrServer(baseUrl);\n    baseServer.setConnectionTimeout(15000);\n    baseServer.setSoTimeout(60000 * 5);\n    NamedList r = baseServer.request(request);\n    baseServer.shutdown();\n    return r;\n  }\n\n","sourceOld":"  private NamedList<Object> invokeCollectionApi(String... args) throws SolrServerException, IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    SolrRequest request = new QueryRequest(params);\n    for (int i = 0; i < args.length - 1; i+=2) {\n      params.add(args[i], args[i+1]);\n    }\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrServer) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    HttpSolrServer baseServer = new HttpSolrServer(baseUrl);\n    baseServer.setConnectionTimeout(15000);\n    baseServer.setSoTimeout(60000 * 5);\n    return baseServer.request(request);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#invokeCollectionApi(String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerStatusTest#invokeCollectionApi(String...).mjava","sourceNew":"  protected NamedList<Object> invokeCollectionApi(String... args) throws SolrServerException, IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    SolrRequest request = new QueryRequest(params);\n    for (int i = 0; i < args.length - 1; i+=2) {\n      params.add(args[i], args[i+1]);\n    }\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrServer) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    HttpSolrServer baseServer = new HttpSolrServer(baseUrl);\n    baseServer.setConnectionTimeout(15000);\n    baseServer.setSoTimeout(60000 * 5);\n    NamedList r = baseServer.request(request);\n    baseServer.shutdown();\n    return r;\n  }\n\n","sourceOld":"  private NamedList<Object> invokeCollectionApi(String... args) throws SolrServerException, IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    SolrRequest request = new QueryRequest(params);\n    for (int i = 0; i < args.length - 1; i+=2) {\n      params.add(args[i], args[i+1]);\n    }\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrServer) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    HttpSolrServer baseServer = new HttpSolrServer(baseUrl);\n    baseServer.setConnectionTimeout(15000);\n    baseServer.setSoTimeout(60000 * 5);\n    return baseServer.request(request);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#invokeCollectionApi(String...).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#invokeCollectionApi(String...).mjava","sourceNew":"  protected NamedList<Object> invokeCollectionApi(String... args) throws SolrServerException, IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    SolrRequest request = new QueryRequest(params);\n    for (int i = 0; i < args.length - 1; i+=2) {\n      params.add(args[i], args[i+1]);\n    }\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    HttpSolrClient baseClient = new HttpSolrClient(baseUrl);\n    baseClient.setConnectionTimeout(15000);\n    baseClient.setSoTimeout(60000 * 5);\n    NamedList r = baseClient.request(request);\n    baseClient.shutdown();\n    return r;\n  }\n\n","sourceOld":"  protected NamedList<Object> invokeCollectionApi(String... args) throws SolrServerException, IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    SolrRequest request = new QueryRequest(params);\n    for (int i = 0; i < args.length - 1; i+=2) {\n      params.add(args[i], args[i+1]);\n    }\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrServer) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    HttpSolrServer baseServer = new HttpSolrServer(baseUrl);\n    baseServer.setConnectionTimeout(15000);\n    baseServer.setSoTimeout(60000 * 5);\n    NamedList r = baseServer.request(request);\n    baseServer.shutdown();\n    return r;\n  }\n\n","bugFix":null,"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6784d0cc613dc1ee97030eaaa5e0754edc22d164","date":1420824784,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#invokeCollectionApi(String...).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#invokeCollectionApi(String...).mjava","sourceNew":"  protected NamedList<Object> invokeCollectionApi(String... args) throws SolrServerException, IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    SolrRequest request = new QueryRequest(params);\n    for (int i = 0; i < args.length - 1; i+=2) {\n      params.add(args[i], args[i+1]);\n    }\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    HttpSolrClient baseClient = new HttpSolrClient(baseUrl);\n    NamedList r;\n    try {\n      baseClient.setConnectionTimeout(15000);\n      baseClient.setSoTimeout(60000 * 5);\n      r = baseClient.request(request);\n    } finally {\n      baseClient.shutdown();\n    }\n    return r;\n  }\n\n","sourceOld":"  protected NamedList<Object> invokeCollectionApi(String... args) throws SolrServerException, IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    SolrRequest request = new QueryRequest(params);\n    for (int i = 0; i < args.length - 1; i+=2) {\n      params.add(args[i], args[i+1]);\n    }\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    HttpSolrClient baseClient = new HttpSolrClient(baseUrl);\n    baseClient.setConnectionTimeout(15000);\n    baseClient.setSoTimeout(60000 * 5);\n    NamedList r = baseClient.request(request);\n    baseClient.shutdown();\n    return r;\n  }\n\n","bugFix":["bafca15d8e408346a67f4282ad1143b88023893b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#invokeCollectionApi(String...).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#invokeCollectionApi(String...).mjava","sourceNew":"  protected NamedList<Object> invokeCollectionApi(String... args) throws SolrServerException, IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    SolrRequest request = new QueryRequest(params);\n    for (int i = 0; i < args.length - 1; i+=2) {\n      params.add(args[i], args[i+1]);\n    }\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    try (HttpSolrClient baseClient = new HttpSolrClient(baseUrl)) {\n      baseClient.setConnectionTimeout(15000);\n      baseClient.setSoTimeout(60000 * 5);\n      return baseClient.request(request);\n    }\n  }\n\n","sourceOld":"  protected NamedList<Object> invokeCollectionApi(String... args) throws SolrServerException, IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    SolrRequest request = new QueryRequest(params);\n    for (int i = 0; i < args.length - 1; i+=2) {\n      params.add(args[i], args[i+1]);\n    }\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    HttpSolrClient baseClient = new HttpSolrClient(baseUrl);\n    NamedList r;\n    try {\n      baseClient.setConnectionTimeout(15000);\n      baseClient.setSoTimeout(60000 * 5);\n      r = baseClient.request(request);\n    } finally {\n      baseClient.shutdown();\n    }\n    return r;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c36bb9a43f930bfda9ebe0de5fc6894e1fa0215","date":1433359369,"type":4,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#invokeCollectionApi(String...).mjava","sourceNew":null,"sourceOld":"  protected NamedList<Object> invokeCollectionApi(String... args) throws SolrServerException, IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    SolrRequest request = new QueryRequest(params);\n    for (int i = 0; i < args.length - 1; i+=2) {\n      params.add(args[i], args[i+1]);\n    }\n    request.setPath(\"/admin/collections\");\n\n    String baseUrl = ((HttpSolrClient) shardToJetty.get(SHARD1).get(0).client.solrClient)\n        .getBaseURL();\n    baseUrl = baseUrl.substring(0, baseUrl.length() - \"collection1\".length());\n\n    try (HttpSolrClient baseClient = new HttpSolrClient(baseUrl)) {\n      baseClient.setConnectionTimeout(15000);\n      baseClient.setSoTimeout(60000 * 5);\n      return baseClient.request(request);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c36bb9a43f930bfda9ebe0de5fc6894e1fa0215":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"bafca15d8e408346a67f4282ad1143b88023893b":["6f26f74e4969851a019d28f10315cb1c77786f22"],"b7605579001505896d48b07160075a5c8b8e128e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6f26f74e4969851a019d28f10315cb1c77786f22"],"6f26f74e4969851a019d28f10315cb1c77786f22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c36bb9a43f930bfda9ebe0de5fc6894e1fa0215"]},"commit2Childs":{"7c36bb9a43f930bfda9ebe0de5fc6894e1fa0215":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b7605579001505896d48b07160075a5c8b8e128e","6f26f74e4969851a019d28f10315cb1c77786f22"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["7c36bb9a43f930bfda9ebe0de5fc6894e1fa0215"],"bafca15d8e408346a67f4282ad1143b88023893b":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"b7605579001505896d48b07160075a5c8b8e128e":[],"6f26f74e4969851a019d28f10315cb1c77786f22":["bafca15d8e408346a67f4282ad1143b88023893b","b7605579001505896d48b07160075a5c8b8e128e"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}