{"path":"lucene/contrib/spatial/src/test/org/apache/lucene/spatial/DistanceUtilsTest#testHaversine().mjava","commits":[{"id":"5f900d5ce814fc22ea498d3303d1f833f5bf320c","date":1278720761,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/contrib/spatial/src/test/org/apache/lucene/spatial/DistanceUtilsTest#testHaversine().mjava","pathOld":"/dev/null","sourceNew":"  public void testHaversine() throws Exception {\n    double distance;\n    //compare to http://www.movable-type.co.uk/scripts/latlong.html\n    distance = DistanceUtils.haversine(0, 0, Math.PI / 4.0, Math.PI / 4.0, DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(6672.0, distance, 0.5);\n\n    distance = DistanceUtils.haversine(0, 0, Math.toRadians(20), Math.toRadians(20), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(3112, distance, 0.5);\n\n    distance = DistanceUtils.haversine(0, 0, Math.toRadians(1), Math.toRadians(1), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(157.2, distance, 0.5);\n\n    //Try some around stuff\n    distance = DistanceUtils.haversine(Math.toRadians(1), Math.toRadians(-1),\n            Math.toRadians(1), Math.toRadians(1), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(222.4, distance, 0.5);\n\n    distance = DistanceUtils.haversine(Math.toRadians(89), Math.toRadians(-1),\n            Math.toRadians(89), Math.toRadians(179), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(222.4, distance, 0.5);\n\n    distance = DistanceUtils.haversine(Math.toRadians(89), Math.toRadians(-1),\n            Math.toRadians(49), Math.toRadians(179), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(4670, distance, 0.5);\n\n    distance = DistanceUtils.haversine(Math.toRadians(0), Math.toRadians(-179),\n            Math.toRadians(0), Math.toRadians(179), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(222.4, distance, 0.5);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/spatial/src/test/org/apache/lucene/spatial/DistanceUtilsTest#testHaversine().mjava","pathOld":"/dev/null","sourceNew":"  public void testHaversine() throws Exception {\n    double distance;\n    //compare to http://www.movable-type.co.uk/scripts/latlong.html\n    distance = DistanceUtils.haversine(0, 0, Math.PI / 4.0, Math.PI / 4.0, DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(6672.0, distance, 0.5);\n\n    distance = DistanceUtils.haversine(0, 0, Math.toRadians(20), Math.toRadians(20), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(3112, distance, 0.5);\n\n    distance = DistanceUtils.haversine(0, 0, Math.toRadians(1), Math.toRadians(1), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(157.2, distance, 0.5);\n\n    //Try some around stuff\n    distance = DistanceUtils.haversine(Math.toRadians(1), Math.toRadians(-1),\n            Math.toRadians(1), Math.toRadians(1), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(222.4, distance, 0.5);\n\n    distance = DistanceUtils.haversine(Math.toRadians(89), Math.toRadians(-1),\n            Math.toRadians(89), Math.toRadians(179), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(222.4, distance, 0.5);\n\n    distance = DistanceUtils.haversine(Math.toRadians(89), Math.toRadians(-1),\n            Math.toRadians(49), Math.toRadians(179), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(4670, distance, 0.5);\n\n    distance = DistanceUtils.haversine(Math.toRadians(0), Math.toRadians(-179),\n            Math.toRadians(0), Math.toRadians(179), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(222.4, distance, 0.5);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fb7e38713d15939e085d376c6391e6e6262a81f","date":1329897272,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/spatial/src/test/org/apache/lucene/spatial/DistanceUtilsTest#testHaversine().mjava","sourceNew":null,"sourceOld":"  public void testHaversine() throws Exception {\n    double distance;\n    //compare to http://www.movable-type.co.uk/scripts/latlong.html\n    distance = DistanceUtils.haversine(0, 0, Math.PI / 4.0, Math.PI / 4.0, DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(6672.0, distance, 0.5);\n\n    distance = DistanceUtils.haversine(0, 0, Math.toRadians(20), Math.toRadians(20), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(3112, distance, 0.5);\n\n    distance = DistanceUtils.haversine(0, 0, Math.toRadians(1), Math.toRadians(1), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(157.2, distance, 0.5);\n\n    //Try some around stuff\n    distance = DistanceUtils.haversine(Math.toRadians(1), Math.toRadians(-1),\n            Math.toRadians(1), Math.toRadians(1), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(222.4, distance, 0.5);\n\n    distance = DistanceUtils.haversine(Math.toRadians(89), Math.toRadians(-1),\n            Math.toRadians(89), Math.toRadians(179), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(222.4, distance, 0.5);\n\n    distance = DistanceUtils.haversine(Math.toRadians(89), Math.toRadians(-1),\n            Math.toRadians(49), Math.toRadians(179), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(4670, distance, 0.5);\n\n    distance = DistanceUtils.haversine(Math.toRadians(0), Math.toRadians(-179),\n            Math.toRadians(0), Math.toRadians(179), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(222.4, distance, 0.5);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e47768b261c28e7e6032060e8331475c81057953","date":1331681297,"type":4,"author":"Ryan McKinley","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/spatial/src/test/org/apache/lucene/spatial/DistanceUtilsTest#testHaversine().mjava","sourceNew":null,"sourceOld":"  public void testHaversine() throws Exception {\n    double distance;\n    //compare to http://www.movable-type.co.uk/scripts/latlong.html\n    distance = DistanceUtils.haversine(0, 0, Math.PI / 4.0, Math.PI / 4.0, DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(6672.0, distance, 0.5);\n\n    distance = DistanceUtils.haversine(0, 0, Math.toRadians(20), Math.toRadians(20), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(3112, distance, 0.5);\n\n    distance = DistanceUtils.haversine(0, 0, Math.toRadians(1), Math.toRadians(1), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(157.2, distance, 0.5);\n\n    //Try some around stuff\n    distance = DistanceUtils.haversine(Math.toRadians(1), Math.toRadians(-1),\n            Math.toRadians(1), Math.toRadians(1), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(222.4, distance, 0.5);\n\n    distance = DistanceUtils.haversine(Math.toRadians(89), Math.toRadians(-1),\n            Math.toRadians(89), Math.toRadians(179), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(222.4, distance, 0.5);\n\n    distance = DistanceUtils.haversine(Math.toRadians(89), Math.toRadians(-1),\n            Math.toRadians(49), Math.toRadians(179), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(4670, distance, 0.5);\n\n    distance = DistanceUtils.haversine(Math.toRadians(0), Math.toRadians(-179),\n            Math.toRadians(0), Math.toRadians(179), DistanceUtils.EARTH_MEAN_RADIUS_KM);\n    assertEquals(222.4, distance, 0.5);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5f900d5ce814fc22ea498d3303d1f833f5bf320c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5f900d5ce814fc22ea498d3303d1f833f5bf320c"],"e47768b261c28e7e6032060e8331475c81057953":["5f900d5ce814fc22ea498d3303d1f833f5bf320c","2fb7e38713d15939e085d376c6391e6e6262a81f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e47768b261c28e7e6032060e8331475c81057953"],"2fb7e38713d15939e085d376c6391e6e6262a81f":["5f900d5ce814fc22ea498d3303d1f833f5bf320c"]},"commit2Childs":{"5f900d5ce814fc22ea498d3303d1f833f5bf320c":["5f4e87790277826a2aea119328600dfb07761f32","e47768b261c28e7e6032060e8331475c81057953","2fb7e38713d15939e085d376c6391e6e6262a81f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5f900d5ce814fc22ea498d3303d1f833f5bf320c","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":[],"e47768b261c28e7e6032060e8331475c81057953":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2fb7e38713d15939e085d376c6391e6e6262a81f":["e47768b261c28e7e6032060e8331475c81057953"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}