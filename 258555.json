{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.CreateCategoryRoutedAlias#getParams().mjava","commits":[{"id":"b627755385655c7cd3fb296f17593658805cf4d5","date":1552455143,"type":0,"author":"Gus Heck","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.CreateCategoryRoutedAlias#getParams().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n      params.add(CommonParams.NAME, aliasName);\n      params.add(ROUTER_TYPE_NAME, \"category\");\n      params.add(ROUTER_FIELD, routerField);\n      params.add(ROUTER_MAX_CARDINALITY, maxCardinality.toString());\n\n      if (mustMatch != null) {\n        params.add(ROUTER_MUST_MATCH, mustMatch);\n      }\n\n      // merge the above with collectionParams.  Above takes precedence.\n      ModifiableSolrParams createCollParams = new ModifiableSolrParams(); // output target\n      final SolrParams collParams = createCollTemplate.getParams();\n      final Iterator<String> pIter = collParams.getParameterNamesIterator();\n      while (pIter.hasNext()) {\n        String key = pIter.next();\n        if (key.equals(CollectionParams.ACTION) || key.equals(\"name\")) {\n          continue;\n        }\n        createCollParams.set(\"create-collection.\" + key, collParams.getParams(key));\n      }\n      return SolrParams.wrapDefaults(params, createCollParams);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eebf1b080530bdd7572c4927fb2bb52334b7a86","date":1563199033,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.CreateCategoryRoutedAlias#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.CreateCategoryRoutedAlias#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n      params.add(CommonParams.NAME, aliasName);\n      params.add(ROUTER_TYPE_NAME, RoutedAliasTypes.CATEGORY.name());\n      params.add(ROUTER_FIELD, routerField);\n      params.add(ROUTER_MAX_CARDINALITY, maxCardinality.toString());\n\n      if (mustMatch != null) {\n        params.add(ROUTER_MUST_MATCH, mustMatch);\n      }\n\n      // merge the above with collectionParams.  Above takes precedence.\n      ModifiableSolrParams createCollParams = mergeCollParams(createCollTemplate);\n      return SolrParams.wrapDefaults(params, createCollParams);\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();\n      params.add(CommonParams.NAME, aliasName);\n      params.add(ROUTER_TYPE_NAME, \"category\");\n      params.add(ROUTER_FIELD, routerField);\n      params.add(ROUTER_MAX_CARDINALITY, maxCardinality.toString());\n\n      if (mustMatch != null) {\n        params.add(ROUTER_MUST_MATCH, mustMatch);\n      }\n\n      // merge the above with collectionParams.  Above takes precedence.\n      ModifiableSolrParams createCollParams = new ModifiableSolrParams(); // output target\n      final SolrParams collParams = createCollTemplate.getParams();\n      final Iterator<String> pIter = collParams.getParameterNamesIterator();\n      while (pIter.hasNext()) {\n        String key = pIter.next();\n        if (key.equals(CollectionParams.ACTION) || key.equals(\"name\")) {\n          continue;\n        }\n        createCollParams.set(\"create-collection.\" + key, collParams.getParams(key));\n      }\n      return SolrParams.wrapDefaults(params, createCollParams);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b627755385655c7cd3fb296f17593658805cf4d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1eebf1b080530bdd7572c4927fb2bb52334b7a86":["b627755385655c7cd3fb296f17593658805cf4d5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1eebf1b080530bdd7572c4927fb2bb52334b7a86"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b627755385655c7cd3fb296f17593658805cf4d5"],"b627755385655c7cd3fb296f17593658805cf4d5":["1eebf1b080530bdd7572c4927fb2bb52334b7a86"],"1eebf1b080530bdd7572c4927fb2bb52334b7a86":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}