{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#assureMatchVersion().mjava","commits":[{"id":"687e86054415a85f912c6eaa38f995038e5c1cd8","date":1336447427,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#assureMatchVersion().mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/BaseTokenStreamFactory#assureMatchVersion().mjava","sourceNew":"   /** this method can be called in the {@link org.apache.lucene.analysis.util.TokenizerFactory#create(java.io.Reader)}\n   * or {@link org.apache.lucene.analysis.util.TokenFilterFactory#create(org.apache.lucene.analysis.TokenStream)} methods,\n   * to inform user, that for this factory a {@link #luceneMatchVersion} is required */\n  protected final void assureMatchVersion() {\n    if (luceneMatchVersion == null) {\n      throw new InitializationException(\"Configuration Error: Factory '\" + this.getClass().getName() +\n        \"' needs a 'luceneMatchVersion' parameter\");\n    }\n  }\n\n","sourceOld":"  /** this method can be called in the {@link TokenizerFactory#create(java.io.Reader)} \n   * or {@link TokenFilterFactory#create(org.apache.lucene.analysis.TokenStream)} methods,\n   * to inform user, that for this factory a {@link #luceneMatchVersion} is required */\n  protected final void assureMatchVersion() {\n    if (luceneMatchVersion == null) {\n      throw new InitializationException(\"Configuration Error: Factory '\" + this.getClass().getName() +\n        \"' needs a 'luceneMatchVersion' parameter\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6f80818731469e00f54165ec94aae2db868ea05","date":1343266866,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#assureMatchVersion().mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#assureMatchVersion().mjava","sourceNew":"   /** this method can be called in the {@link org.apache.lucene.analysis.util.TokenizerFactory#create(java.io.Reader)}\n   * or {@link org.apache.lucene.analysis.util.TokenFilterFactory#create(org.apache.lucene.analysis.TokenStream)} methods,\n   * to inform user, that for this factory a {@link #luceneMatchVersion} is required */\n  protected final void assureMatchVersion() {\n    if (luceneMatchVersion == null) {\n      throw new IllegalArgumentException(\"Configuration Error: Factory '\" + this.getClass().getName() +\n        \"' needs a 'luceneMatchVersion' parameter\");\n    }\n  }\n\n","sourceOld":"   /** this method can be called in the {@link org.apache.lucene.analysis.util.TokenizerFactory#create(java.io.Reader)}\n   * or {@link org.apache.lucene.analysis.util.TokenFilterFactory#create(org.apache.lucene.analysis.TokenStream)} methods,\n   * to inform user, that for this factory a {@link #luceneMatchVersion} is required */\n  protected final void assureMatchVersion() {\n    if (luceneMatchVersion == null) {\n      throw new InitializationException(\"Configuration Error: Factory '\" + this.getClass().getName() +\n        \"' needs a 'luceneMatchVersion' parameter\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#assureMatchVersion().mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#assureMatchVersion().mjava","sourceNew":"   /** this method can be called in the {@link org.apache.lucene.analysis.util.TokenizerFactory#create(java.io.Reader)}\n   * or {@link org.apache.lucene.analysis.util.TokenFilterFactory#create(org.apache.lucene.analysis.TokenStream)} methods,\n   * to inform user, that for this factory a {@link #luceneMatchVersion} is required */\n  protected final void assureMatchVersion() {\n    if (luceneMatchVersion == null) {\n      throw new IllegalArgumentException(\"Configuration Error: Factory '\" + this.getClass().getName() +\n        \"' needs a 'luceneMatchVersion' parameter\");\n    }\n  }\n\n","sourceOld":"   /** this method can be called in the {@link org.apache.lucene.analysis.util.TokenizerFactory#create(java.io.Reader)}\n   * or {@link org.apache.lucene.analysis.util.TokenFilterFactory#create(org.apache.lucene.analysis.TokenStream)} methods,\n   * to inform user, that for this factory a {@link #luceneMatchVersion} is required */\n  protected final void assureMatchVersion() {\n    if (luceneMatchVersion == null) {\n      throw new InitializationException(\"Configuration Error: Factory '\" + this.getClass().getName() +\n        \"' needs a 'luceneMatchVersion' parameter\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#assureMatchVersion().mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#assureMatchVersion().mjava","sourceNew":"   /** this method can be called in the {@link org.apache.lucene.analysis.util.TokenizerFactory#create(java.io.Reader)}\n   * or {@link org.apache.lucene.analysis.util.TokenFilterFactory#create(org.apache.lucene.analysis.TokenStream)} methods,\n   * to inform user, that for this factory a {@link #luceneMatchVersion} is required */\n  protected final void assureMatchVersion() {\n    if (luceneMatchVersion == null) {\n      throw new IllegalArgumentException(\"Configuration Error: Factory '\" + this.getClass().getName() +\n        \"' needs a 'luceneMatchVersion' parameter\");\n    }\n  }\n\n","sourceOld":"   /** this method can be called in the {@link org.apache.lucene.analysis.util.TokenizerFactory#create(java.io.Reader)}\n   * or {@link org.apache.lucene.analysis.util.TokenFilterFactory#create(org.apache.lucene.analysis.TokenStream)} methods,\n   * to inform user, that for this factory a {@link #luceneMatchVersion} is required */\n  protected final void assureMatchVersion() {\n    if (luceneMatchVersion == null) {\n      throw new InitializationException(\"Configuration Error: Factory '\" + this.getClass().getName() +\n        \"' needs a 'luceneMatchVersion' parameter\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#assureMatchVersion().mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#assureMatchVersion().mjava","sourceNew":"   /** this method can be called in the {@link org.apache.lucene.analysis.util.TokenizerFactory#create()}\n   * or {@link org.apache.lucene.analysis.util.TokenFilterFactory#create(org.apache.lucene.analysis.TokenStream)} methods,\n   * to inform user, that for this factory a {@link #luceneMatchVersion} is required */\n  protected final void assureMatchVersion() {\n    if (luceneMatchVersion == null) {\n      throw new IllegalArgumentException(\"Configuration Error: Factory '\" + this.getClass().getName() +\n        \"' needs a 'luceneMatchVersion' parameter\");\n    }\n  }\n\n","sourceOld":"   /** this method can be called in the {@link org.apache.lucene.analysis.util.TokenizerFactory#create(java.io.Reader)}\n   * or {@link org.apache.lucene.analysis.util.TokenFilterFactory#create(org.apache.lucene.analysis.TokenStream)} methods,\n   * to inform user, that for this factory a {@link #luceneMatchVersion} is required */\n  protected final void assureMatchVersion() {\n    if (luceneMatchVersion == null) {\n      throw new IllegalArgumentException(\"Configuration Error: Factory '\" + this.getClass().getName() +\n        \"' needs a 'luceneMatchVersion' parameter\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"623b5245fbd9d5af9f458826ba9ed3d6212db24d","date":1421078865,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#assureMatchVersion().mjava","sourceNew":null,"sourceOld":"   /** this method can be called in the {@link org.apache.lucene.analysis.util.TokenizerFactory#create()}\n   * or {@link org.apache.lucene.analysis.util.TokenFilterFactory#create(org.apache.lucene.analysis.TokenStream)} methods,\n   * to inform user, that for this factory a {@link #luceneMatchVersion} is required */\n  protected final void assureMatchVersion() {\n    if (luceneMatchVersion == null) {\n      throw new IllegalArgumentException(\"Configuration Error: Factory '\" + this.getClass().getName() +\n        \"' needs a 'luceneMatchVersion' parameter\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["687e86054415a85f912c6eaa38f995038e5c1cd8","f6f80818731469e00f54165ec94aae2db868ea05"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["f6f80818731469e00f54165ec94aae2db868ea05"],"687e86054415a85f912c6eaa38f995038e5c1cd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["687e86054415a85f912c6eaa38f995038e5c1cd8","f6f80818731469e00f54165ec94aae2db868ea05"],"f6f80818731469e00f54165ec94aae2db868ea05":["687e86054415a85f912c6eaa38f995038e5c1cd8"],"623b5245fbd9d5af9f458826ba9ed3d6212db24d":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["623b5245fbd9d5af9f458826ba9ed3d6212db24d"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["623b5245fbd9d5af9f458826ba9ed3d6212db24d"],"687e86054415a85f912c6eaa38f995038e5c1cd8":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","f6f80818731469e00f54165ec94aae2db868ea05"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["687e86054415a85f912c6eaa38f995038e5c1cd8"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"f6f80818731469e00f54165ec94aae2db868ea05":["aba371508186796cc6151d8223a5b4e16d02e26e","ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"623b5245fbd9d5af9f458826ba9ed3d6212db24d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}