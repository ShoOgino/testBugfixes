{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxOverlapRatioValueSource#BBoxOverlapRatioValueSource(ValueSource,boolean,Rectangle,double,double).mjava","commits":[{"id":"1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018","date":1404828935,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxOverlapRatioValueSource#BBoxOverlapRatioValueSource(ValueSource,boolean,Rectangle,double,double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   *\n   * @param rectValueSource mandatory; source of rectangles\n   * @param isGeo True if ctx.isGeo() and thus dateline issues should be attended to\n   * @param queryExtent mandatory; the query rectangle\n   * @param queryTargetProportion see class javadocs. Between 0 and 1.\n   * @param minSideLength see class javadocs. 0.0 will effectively disable.\n   */\n  public BBoxOverlapRatioValueSource(ValueSource rectValueSource, boolean isGeo, Rectangle queryExtent,\n                                     double queryTargetProportion, double minSideLength) {\n    super(rectValueSource);\n    this.isGeo = isGeo;\n    this.minSideLength = minSideLength;\n    this.queryExtent = queryExtent;\n    this.queryArea = calcArea(queryExtent.getWidth(), queryExtent.getHeight());\n    assert queryArea >= 0;\n    this.queryTargetProportion = queryTargetProportion;\n    if (queryTargetProportion < 0 || queryTargetProportion > 1.0)\n      throw new IllegalArgumentException(\"queryTargetProportion must be >= 0 and <= 1\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxOverlapRatioValueSource#BBoxOverlapRatioValueSource(ValueSource,boolean,Rectangle,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxOverlapRatioValueSource#BBoxOverlapRatioValueSource(ValueSource,boolean,Rectangle,double,double).mjava","sourceNew":"  /**\n   *\n   * @param rectValueSource mandatory; source of rectangles\n   * @param isGeo True if ctx.isGeo() and thus dateline issues should be attended to\n   * @param queryExtent mandatory; the query rectangle\n   * @param queryTargetProportion see class javadocs. Between 0 and 1.\n   * @param minSideLength see class javadocs. 0.0 will effectively disable.\n   */\n  public BBoxOverlapRatioValueSource(ValueSource rectValueSource, boolean isGeo, Rectangle queryExtent,\n                                     double queryTargetProportion, double minSideLength) {\n    super(rectValueSource);\n    this.isGeo = isGeo;\n    this.minSideLength = minSideLength;\n    this.queryExtent = queryExtent;\n    this.queryArea = calcArea(queryExtent.getWidth(), queryExtent.getHeight());\n    assert queryArea >= 0;\n    this.queryTargetProportion = queryTargetProportion;\n    if (queryTargetProportion < 0 || queryTargetProportion > 1.0)\n      throw new IllegalArgumentException(\"queryTargetProportion must be >= 0 and <= 1\");\n  }\n\n","sourceOld":"  /**\n   *\n   * @param rectValueSource mandatory; source of rectangles\n   * @param isGeo True if ctx.isGeo() and thus dateline issues should be attended to\n   * @param queryExtent mandatory; the query rectangle\n   * @param queryTargetProportion see class javadocs. Between 0 and 1.\n   * @param minSideLength see class javadocs. 0.0 will effectively disable.\n   */\n  public BBoxOverlapRatioValueSource(ValueSource rectValueSource, boolean isGeo, Rectangle queryExtent,\n                                     double queryTargetProportion, double minSideLength) {\n    super(rectValueSource);\n    this.isGeo = isGeo;\n    this.minSideLength = minSideLength;\n    this.queryExtent = queryExtent;\n    this.queryArea = calcArea(queryExtent.getWidth(), queryExtent.getHeight());\n    assert queryArea >= 0;\n    this.queryTargetProportion = queryTargetProportion;\n    if (queryTargetProportion < 0 || queryTargetProportion > 1.0)\n      throw new IllegalArgumentException(\"queryTargetProportion must be >= 0 and <= 1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxOverlapRatioValueSource#BBoxOverlapRatioValueSource(ValueSource,boolean,Rectangle,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxOverlapRatioValueSource#BBoxOverlapRatioValueSource(ValueSource,boolean,Rectangle,double,double).mjava","sourceNew":"  /**\n   *\n   * @param rectValueSource mandatory; source of rectangles\n   * @param isGeo True if ctx.isGeo() and thus dateline issues should be attended to\n   * @param queryExtent mandatory; the query rectangle\n   * @param queryTargetProportion see class javadocs. Between 0 and 1.\n   * @param minSideLength see class javadocs. 0.0 will effectively disable.\n   */\n  public BBoxOverlapRatioValueSource(ValueSource rectValueSource, boolean isGeo, Rectangle queryExtent,\n                                     double queryTargetProportion, double minSideLength) {\n    super(rectValueSource);\n    this.isGeo = isGeo;\n    this.minSideLength = minSideLength;\n    this.queryExtent = queryExtent;\n    this.queryArea = calcArea(queryExtent.getWidth(), queryExtent.getHeight());\n    assert queryArea >= 0;\n    this.queryTargetProportion = queryTargetProportion;\n    if (queryTargetProportion < 0 || queryTargetProportion > 1.0)\n      throw new IllegalArgumentException(\"queryTargetProportion must be >= 0 and <= 1\");\n  }\n\n","sourceOld":"  /**\n   *\n   * @param rectValueSource mandatory; source of rectangles\n   * @param isGeo True if ctx.isGeo() and thus dateline issues should be attended to\n   * @param queryExtent mandatory; the query rectangle\n   * @param queryTargetProportion see class javadocs. Between 0 and 1.\n   * @param minSideLength see class javadocs. 0.0 will effectively disable.\n   */\n  public BBoxOverlapRatioValueSource(ValueSource rectValueSource, boolean isGeo, Rectangle queryExtent,\n                                     double queryTargetProportion, double minSideLength) {\n    super(rectValueSource);\n    this.isGeo = isGeo;\n    this.minSideLength = minSideLength;\n    this.queryExtent = queryExtent;\n    this.queryArea = calcArea(queryExtent.getWidth(), queryExtent.getHeight());\n    assert queryArea >= 0;\n    this.queryTargetProportion = queryTargetProportion;\n    if (queryTargetProportion < 0 || queryTargetProportion > 1.0)\n      throw new IllegalArgumentException(\"queryTargetProportion must be >= 0 and <= 1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018"],"1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"1eb9cd4e9d9dc2a301efb4dc420fcb069a9dd018":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}