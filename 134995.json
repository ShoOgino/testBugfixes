{"path":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createFieldInfo(String,int,IndexableFieldType).mjava","commits":[{"id":"89b68d01c34172936f1aa2a8b9abf0e1bc68415f","date":1486637198,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createFieldInfo(String,int,IndexableFieldType).mjava","pathOld":"/dev/null","sourceNew":"  private FieldInfo createFieldInfo(String fieldName, int ord, IndexableFieldType fieldType) {\n    IndexOptions indexOptions = storeOffsets ? IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS : IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    return new FieldInfo(fieldName, ord, fieldType.storeTermVectors(), fieldType.omitNorms(), storePayloads,\n        indexOptions, fieldType.docValuesType(), -1, Collections.emptyMap(),\n        fieldType.pointDimensionCount(), fieldType.pointNumBytes());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eeba0a4d0845889a402dd225793d62f009d029c9","date":1527938093,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createFieldInfo(String,int,IndexableFieldType).mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createFieldInfo(String,int,IndexableFieldType).mjava","sourceNew":"  private FieldInfo createFieldInfo(String fieldName, int ord, IndexableFieldType fieldType) {\n    IndexOptions indexOptions = storeOffsets ? IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS : IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    return new FieldInfo(fieldName, ord, fieldType.storeTermVectors(), fieldType.omitNorms(), storePayloads,\n        indexOptions, fieldType.docValuesType(), -1, Collections.emptyMap(),\n        fieldType.pointDimensionCount(), fieldType.pointNumBytes(), false);\n  }\n\n","sourceOld":"  private FieldInfo createFieldInfo(String fieldName, int ord, IndexableFieldType fieldType) {\n    IndexOptions indexOptions = storeOffsets ? IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS : IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    return new FieldInfo(fieldName, ord, fieldType.storeTermVectors(), fieldType.omitNorms(), storePayloads,\n        indexOptions, fieldType.docValuesType(), -1, Collections.emptyMap(),\n        fieldType.pointDimensionCount(), fieldType.pointNumBytes());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab548c8f96022b4780f7500a30b19b4f4a5feeb6","date":1527940044,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createFieldInfo(String,int,IndexableFieldType).mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createFieldInfo(String,int,IndexableFieldType).mjava","sourceNew":"  private FieldInfo createFieldInfo(String fieldName, int ord, IndexableFieldType fieldType) {\n    IndexOptions indexOptions = storeOffsets ? IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS : IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    return new FieldInfo(fieldName, ord, fieldType.storeTermVectors(), fieldType.omitNorms(), storePayloads,\n        indexOptions, fieldType.docValuesType(), -1, Collections.emptyMap(),\n        fieldType.pointDimensionCount(), fieldType.pointNumBytes());\n  }\n\n","sourceOld":"  private FieldInfo createFieldInfo(String fieldName, int ord, IndexableFieldType fieldType) {\n    IndexOptions indexOptions = storeOffsets ? IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS : IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    return new FieldInfo(fieldName, ord, fieldType.storeTermVectors(), fieldType.omitNorms(), storePayloads,\n        indexOptions, fieldType.docValuesType(), -1, Collections.emptyMap(),\n        fieldType.pointDimensionCount(), fieldType.pointNumBytes(), false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7e4ca6dc9612ff741d8713743e2bccfae5eadac","date":1528093718,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createFieldInfo(String,int,IndexableFieldType).mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createFieldInfo(String,int,IndexableFieldType).mjava","sourceNew":"  private FieldInfo createFieldInfo(String fieldName, int ord, IndexableFieldType fieldType) {\n    IndexOptions indexOptions = storeOffsets ? IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS : IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    return new FieldInfo(fieldName, ord, fieldType.storeTermVectors(), fieldType.omitNorms(), storePayloads,\n        indexOptions, fieldType.docValuesType(), -1, Collections.emptyMap(),\n        fieldType.pointDimensionCount(), fieldType.pointNumBytes(), false);\n  }\n\n","sourceOld":"  private FieldInfo createFieldInfo(String fieldName, int ord, IndexableFieldType fieldType) {\n    IndexOptions indexOptions = storeOffsets ? IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS : IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    return new FieldInfo(fieldName, ord, fieldType.storeTermVectors(), fieldType.omitNorms(), storePayloads,\n        indexOptions, fieldType.docValuesType(), -1, Collections.emptyMap(),\n        fieldType.pointDimensionCount(), fieldType.pointNumBytes());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createFieldInfo(String,int,IndexableFieldType).mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createFieldInfo(String,int,IndexableFieldType).mjava","sourceNew":"  private FieldInfo createFieldInfo(String fieldName, int ord, IndexableFieldType fieldType) {\n    IndexOptions indexOptions = storeOffsets ? IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS : IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    return new FieldInfo(fieldName, ord, fieldType.storeTermVectors(), fieldType.omitNorms(), storePayloads,\n        indexOptions, fieldType.docValuesType(), -1, Collections.emptyMap(),\n        fieldType.pointDimensionCount(), fieldType.pointNumBytes(), false);\n  }\n\n","sourceOld":"  private FieldInfo createFieldInfo(String fieldName, int ord, IndexableFieldType fieldType) {\n    IndexOptions indexOptions = storeOffsets ? IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS : IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    return new FieldInfo(fieldName, ord, fieldType.storeTermVectors(), fieldType.omitNorms(), storePayloads,\n        indexOptions, fieldType.docValuesType(), -1, Collections.emptyMap(),\n        fieldType.pointDimensionCount(), fieldType.pointNumBytes());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createFieldInfo(String,int,IndexableFieldType).mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createFieldInfo(String,int,IndexableFieldType).mjava","sourceNew":"  private FieldInfo createFieldInfo(String fieldName, int ord, IndexableFieldType fieldType) {\n    IndexOptions indexOptions = storeOffsets ? IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS : IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    return new FieldInfo(fieldName, ord, fieldType.storeTermVectors(), fieldType.omitNorms(), storePayloads,\n        indexOptions, fieldType.docValuesType(), -1, Collections.emptyMap(),\n        fieldType.pointDimensionCount(), fieldType.pointNumBytes(), false);\n  }\n\n","sourceOld":"  private FieldInfo createFieldInfo(String fieldName, int ord, IndexableFieldType fieldType) {\n    IndexOptions indexOptions = storeOffsets ? IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS : IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    return new FieldInfo(fieldName, ord, fieldType.storeTermVectors(), fieldType.omitNorms(), storePayloads,\n        indexOptions, fieldType.docValuesType(), -1, Collections.emptyMap(),\n        fieldType.pointDimensionCount(), fieldType.pointNumBytes());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6652c943595e92c187ee904c382863013eae28f","date":1539042663,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createFieldInfo(String,int,IndexableFieldType).mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createFieldInfo(String,int,IndexableFieldType).mjava","sourceNew":"  private FieldInfo createFieldInfo(String fieldName, int ord, IndexableFieldType fieldType) {\n    IndexOptions indexOptions = storeOffsets ? IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS : IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    return new FieldInfo(fieldName, ord, fieldType.storeTermVectors(), fieldType.omitNorms(), storePayloads,\n        indexOptions, fieldType.docValuesType(), -1, Collections.emptyMap(),\n        fieldType.pointDataDimensionCount(), fieldType.pointIndexDimensionCount(), fieldType.pointNumBytes(), false);\n  }\n\n","sourceOld":"  private FieldInfo createFieldInfo(String fieldName, int ord, IndexableFieldType fieldType) {\n    IndexOptions indexOptions = storeOffsets ? IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS : IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    return new FieldInfo(fieldName, ord, fieldType.storeTermVectors(), fieldType.omitNorms(), storePayloads,\n        indexOptions, fieldType.docValuesType(), -1, Collections.emptyMap(),\n        fieldType.pointDimensionCount(), fieldType.pointNumBytes(), false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59ed8c026ba85e3c42fb89605b2032dc6f9cc241","date":1581113294,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createFieldInfo(String,int,IndexableFieldType).mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#createFieldInfo(String,int,IndexableFieldType).mjava","sourceNew":"  private FieldInfo createFieldInfo(String fieldName, int ord, IndexableFieldType fieldType) {\n    IndexOptions indexOptions = storeOffsets ? IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS : IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    return new FieldInfo(fieldName, ord, fieldType.storeTermVectors(), fieldType.omitNorms(), storePayloads,\n        indexOptions, fieldType.docValuesType(), -1, Collections.emptyMap(),\n        fieldType.pointDimensionCount(), fieldType.pointIndexDimensionCount(), fieldType.pointNumBytes(), false);\n  }\n\n","sourceOld":"  private FieldInfo createFieldInfo(String fieldName, int ord, IndexableFieldType fieldType) {\n    IndexOptions indexOptions = storeOffsets ? IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS : IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    return new FieldInfo(fieldName, ord, fieldType.storeTermVectors(), fieldType.omitNorms(), storePayloads,\n        indexOptions, fieldType.docValuesType(), -1, Collections.emptyMap(),\n        fieldType.pointDataDimensionCount(), fieldType.pointIndexDimensionCount(), fieldType.pointNumBytes(), false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["f6652c943595e92c187ee904c382863013eae28f"],"f6652c943595e92c187ee904c382863013eae28f":["b7e4ca6dc9612ff741d8713743e2bccfae5eadac"],"ab548c8f96022b4780f7500a30b19b4f4a5feeb6":["eeba0a4d0845889a402dd225793d62f009d029c9"],"89b68d01c34172936f1aa2a8b9abf0e1bc68415f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["89b68d01c34172936f1aa2a8b9abf0e1bc68415f","b7e4ca6dc9612ff741d8713743e2bccfae5eadac"],"b7e4ca6dc9612ff741d8713743e2bccfae5eadac":["ab548c8f96022b4780f7500a30b19b4f4a5feeb6"],"eeba0a4d0845889a402dd225793d62f009d029c9":["89b68d01c34172936f1aa2a8b9abf0e1bc68415f"],"f592209545c71895260367152601e9200399776d":["ab548c8f96022b4780f7500a30b19b4f4a5feeb6","b7e4ca6dc9612ff741d8713743e2bccfae5eadac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"]},"commit2Childs":{"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f6652c943595e92c187ee904c382863013eae28f":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"],"ab548c8f96022b4780f7500a30b19b4f4a5feeb6":["b7e4ca6dc9612ff741d8713743e2bccfae5eadac","f592209545c71895260367152601e9200399776d"],"89b68d01c34172936f1aa2a8b9abf0e1bc68415f":["b70042a8a492f7054d480ccdd2be9796510d4327","eeba0a4d0845889a402dd225793d62f009d029c9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["89b68d01c34172936f1aa2a8b9abf0e1bc68415f"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"b7e4ca6dc9612ff741d8713743e2bccfae5eadac":["f6652c943595e92c187ee904c382863013eae28f","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d"],"eeba0a4d0845889a402dd225793d62f009d029c9":["ab548c8f96022b4780f7500a30b19b4f4a5feeb6"],"f592209545c71895260367152601e9200399776d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}