{"path":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(String,DocValuesFieldUpdates.Iterator).mjava","commits":[{"id":"36d13f271b6649357e07f71f7e46559479f69b5b","date":1523888226,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(String,DocValuesFieldUpdates.Iterator).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(FieldInfo,List[DocValuesFieldUpdates]).mjava","sourceNew":"  @Override\n  void onDocValuesUpdate(String field, DocValuesFieldUpdates.Iterator iterator) throws IOException {\n    if (this.field.equals(field)) {\n      pendingDeleteCount += applySoftDeletes(new DocIdSetIterator() {\n        int docID = -1;\n        @Override\n        public int docID() {\n          return docID;\n        }\n\n        @Override\n        public int nextDoc() {\n          return docID = iterator.nextDoc();\n        }\n\n        @Override\n        public int advance(int target) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public long cost() {\n          throw new UnsupportedOperationException();\n        }\n      }, getMutableBits());\n    }\n  }\n\n","sourceOld":"  @Override\n  void onDocValuesUpdate(FieldInfo info, List<DocValuesFieldUpdates> updatesToApply) throws IOException {\n    if (field.equals(info.name)) {\n      assert dvGeneration < info.getDocValuesGen() : \"we have seen this generation update already: \" + dvGeneration + \" vs. \" + info.getDocValuesGen();\n      assert dvGeneration != -2 : \"docValues generation is still uninitialized\";\n      DocValuesFieldUpdates.Iterator[] subs = new DocValuesFieldUpdates.Iterator[updatesToApply.size()];\n      for(int i=0; i<subs.length; i++) {\n        subs[i] = updatesToApply.get(i).iterator();\n      }\n      DocValuesFieldUpdates.Iterator iterator = DocValuesFieldUpdates.mergedIterator(subs);\n      pendingDeleteCount += applySoftDeletes(new DocIdSetIterator() {\n        int docID = -1;\n        @Override\n        public int docID() {\n          return docID;\n        }\n\n        @Override\n        public int nextDoc() {\n          return docID = iterator.nextDoc();\n        }\n\n        @Override\n        public int advance(int target) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public long cost() {\n          throw new UnsupportedOperationException();\n        }\n      }, getMutableBits());\n      dvGeneration = info.getDocValuesGen();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c088100f7646827db17ea080925f7a0a916b1cd","date":1524662254,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(String,DocValuesFieldUpdates.Iterator).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(String,DocValuesFieldUpdates.Iterator).mjava","sourceNew":"  @Override\n  void onDocValuesUpdate(String field, DocValuesFieldUpdates.Iterator iterator) throws IOException {\n    if (this.field.equals(field)) {\n      pendingDeleteCount += applySoftDeletes(iterator, getMutableBits());\n    }\n  }\n\n","sourceOld":"  @Override\n  void onDocValuesUpdate(String field, DocValuesFieldUpdates.Iterator iterator) throws IOException {\n    if (this.field.equals(field)) {\n      pendingDeleteCount += applySoftDeletes(new DocIdSetIterator() {\n        int docID = -1;\n        @Override\n        public int docID() {\n          return docID;\n        }\n\n        @Override\n        public int nextDoc() {\n          return docID = iterator.nextDoc();\n        }\n\n        @Override\n        public int advance(int target) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public long cost() {\n          throw new UnsupportedOperationException();\n        }\n      }, getMutableBits());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f372764a5bd3ebacde5b99ee3303153eb5ec0d2f","date":1525347515,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/PendingSoftDeletes#onDocValuesUpdate(String,DocValuesFieldUpdates.Iterator).mjava","sourceNew":null,"sourceOld":"  @Override\n  void onDocValuesUpdate(String field, DocValuesFieldUpdates.Iterator iterator) throws IOException {\n    if (this.field.equals(field)) {\n      pendingDeleteCount += applySoftDeletes(iterator, getMutableBits());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4c088100f7646827db17ea080925f7a0a916b1cd":["36d13f271b6649357e07f71f7e46559479f69b5b"],"f372764a5bd3ebacde5b99ee3303153eb5ec0d2f":["4c088100f7646827db17ea080925f7a0a916b1cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"36d13f271b6649357e07f71f7e46559479f69b5b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f372764a5bd3ebacde5b99ee3303153eb5ec0d2f"]},"commit2Childs":{"4c088100f7646827db17ea080925f7a0a916b1cd":["f372764a5bd3ebacde5b99ee3303153eb5ec0d2f"],"f372764a5bd3ebacde5b99ee3303153eb5ec0d2f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36d13f271b6649357e07f71f7e46559479f69b5b"],"36d13f271b6649357e07f71f7e46559479f69b5b":["4c088100f7646827db17ea080925f7a0a916b1cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}