{"path":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg.Merger#merge(Object,Context).mjava","commits":[{"id":"bbadd4a153af2e36785fa5c682db5321cec90789","date":1432157571,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg.Merger#merge(Object,Context).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg.Merger#merge(Object).mjava","sourceNew":"    @Override\n    public void merge(Object facetResult, Context mcontext) {\n      byte[] arr = (byte[])facetResult;\n      AVLTreeDigest subDigest = AVLTreeDigest.fromBytes(ByteBuffer.wrap(arr));\n      if (digest == null) {\n        digest = subDigest;\n      } else {\n        digest.add(subDigest);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void merge(Object facetResult) {\n      byte[] arr = (byte[])facetResult;\n      AVLTreeDigest subDigest = AVLTreeDigest.fromBytes(ByteBuffer.wrap(arr));\n      if (digest == null) {\n        digest = subDigest;\n      } else {\n        digest.add(subDigest);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93c5081453cafaec785e16d967c279015f52ee8d","date":1483591987,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg.Merger#merge(Object,Context).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg.Merger#merge(Object,Context).mjava","sourceNew":"    @Override\n    public void merge(Object facetResult, Context mcontext) {\n      byte[] arr = (byte[])facetResult;\n      if (arr == null) return; // an explicit null can mean no values in the field\n      AVLTreeDigest subDigest = AVLTreeDigest.fromBytes(ByteBuffer.wrap(arr));\n      if (digest == null) {\n        digest = subDigest;\n      } else {\n        digest.add(subDigest);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void merge(Object facetResult, Context mcontext) {\n      byte[] arr = (byte[])facetResult;\n      AVLTreeDigest subDigest = AVLTreeDigest.fromBytes(ByteBuffer.wrap(arr));\n      if (digest == null) {\n        digest = subDigest;\n      } else {\n        digest.add(subDigest);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"491c9672ec42582fe43960452dbd37f1c80fe0f0","date":1483739222,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg.Merger#merge(Object,Context).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg.Merger#merge(Object,Context).mjava","sourceNew":"    @Override\n    public void merge(Object facetResult, Context mcontext) {\n      byte[] arr = (byte[])facetResult;\n      if (arr == null) return; // an explicit null can mean no values in the field\n      AVLTreeDigest subDigest = AVLTreeDigest.fromBytes(ByteBuffer.wrap(arr));\n      if (digest == null) {\n        digest = subDigest;\n      } else {\n        digest.add(subDigest);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void merge(Object facetResult, Context mcontext) {\n      byte[] arr = (byte[])facetResult;\n      AVLTreeDigest subDigest = AVLTreeDigest.fromBytes(ByteBuffer.wrap(arr));\n      if (digest == null) {\n        digest = subDigest;\n      } else {\n        digest.add(subDigest);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bbadd4a153af2e36785fa5c682db5321cec90789":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"93c5081453cafaec785e16d967c279015f52ee8d":["bbadd4a153af2e36785fa5c682db5321cec90789"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93c5081453cafaec785e16d967c279015f52ee8d"],"491c9672ec42582fe43960452dbd37f1c80fe0f0":["bbadd4a153af2e36785fa5c682db5321cec90789","93c5081453cafaec785e16d967c279015f52ee8d"]},"commit2Childs":{"bbadd4a153af2e36785fa5c682db5321cec90789":["93c5081453cafaec785e16d967c279015f52ee8d","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"93c5081453cafaec785e16d967c279015f52ee8d":["cd5edd1f2b162a5cfa08efd17851a07373a96817","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bbadd4a153af2e36785fa5c682db5321cec90789"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"491c9672ec42582fe43960452dbd37f1c80fe0f0":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}