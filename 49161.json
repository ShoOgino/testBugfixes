{"path":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#add(Term[]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#add(Term[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiPhraseQuery#add(Term[]).mjava","sourceNew":"  /** Add multiple terms at the next position in the phrase.  Any of the terms\n   * may match.\n   *\n   * @see PhraseQuery#add(Term)\n   */\n  public void add(Term[] terms) {\n    int position = 0;\n    if (positions.size() > 0)\n      position = positions.get(positions.size()-1).intValue() + 1;\n\n    add(terms, position);\n  }\n\n","sourceOld":"  /** Add multiple terms at the next position in the phrase.  Any of the terms\n   * may match.\n   *\n   * @see PhraseQuery#add(Term)\n   */\n  public void add(Term[] terms) {\n    int position = 0;\n    if (positions.size() > 0)\n      position = positions.get(positions.size()-1).intValue() + 1;\n\n    add(terms, position);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9e1499c5d26c936238506df90a3c02c76707722","date":1434449920,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#add(Term[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#add(Term[]).mjava","sourceNew":"  /** Add multiple terms at the next position in the phrase.  Any of the terms\n   * may match.\n   */\n  public void add(Term[] terms) {\n    int position = 0;\n    if (positions.size() > 0)\n      position = positions.get(positions.size()-1).intValue() + 1;\n\n    add(terms, position);\n  }\n\n","sourceOld":"  /** Add multiple terms at the next position in the phrase.  Any of the terms\n   * may match.\n   *\n   * @see PhraseQuery#add(Term)\n   */\n  public void add(Term[] terms) {\n    int position = 0;\n    if (positions.size() > 0)\n      position = positions.get(positions.size()-1).intValue() + 1;\n\n    add(terms, position);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"860d9cc0c963b5c0db351fb0473b6894b1d96020","date":1448302628,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#add(Term[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#add(Term[]).mjava","sourceNew":"  /** Add multiple terms at the next position in the phrase.  Any of the terms\n   * may match (a disjunction).\n   * The array is not copied or mutated, the caller should consider it\n   * immutable subsequent to calling this method.\n   */\n  public void add(Term[] terms) {\n    int position = 0;\n    if (positions.size() > 0)\n      position = positions.get(positions.size() - 1) + 1;\n\n    add(terms, position);\n  }\n\n","sourceOld":"  /** Add multiple terms at the next position in the phrase.  Any of the terms\n   * may match.\n   */\n  public void add(Term[] terms) {\n    int position = 0;\n    if (positions.size() > 0)\n      position = positions.get(positions.size()-1).intValue() + 1;\n\n    add(terms, position);\n  }\n\n","bugFix":["20645c714ca2a7b7707c2707d58ee9fa384c7362","45f06bdc846cdc9b2546a27a8a1492d613e87879"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92b4a131f1796dd57cc6698aae3d589d32a29deb","date":1457087316,"type":4,"author":"Luc Vanlerberghe","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#add(Term[]).mjava","sourceNew":null,"sourceOld":"  /** Add multiple terms at the next position in the phrase.  Any of the terms\n   * may match (a disjunction).\n   * The array is not copied or mutated, the caller should consider it\n   * immutable subsequent to calling this method.\n   */\n  public void add(Term[] terms) {\n    int position = 0;\n    if (positions.size() > 0)\n      position = positions.get(positions.size() - 1) + 1;\n\n    add(terms, position);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#add(Term[]).mjava","sourceNew":null,"sourceOld":"  /** Add multiple terms at the next position in the phrase.  Any of the terms\n   * may match (a disjunction).\n   * The array is not copied or mutated, the caller should consider it\n   * immutable subsequent to calling this method.\n   */\n  public void add(Term[] terms) {\n    int position = 0;\n    if (positions.size() > 0)\n      position = positions.get(positions.size() - 1) + 1;\n\n    add(terms, position);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"92b4a131f1796dd57cc6698aae3d589d32a29deb":["860d9cc0c963b5c0db351fb0473b6894b1d96020"],"e9e1499c5d26c936238506df90a3c02c76707722":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"860d9cc0c963b5c0db351fb0473b6894b1d96020":["e9e1499c5d26c936238506df90a3c02c76707722"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["860d9cc0c963b5c0db351fb0473b6894b1d96020","92b4a131f1796dd57cc6698aae3d589d32a29deb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"]},"commit2Childs":{"92b4a131f1796dd57cc6698aae3d589d32a29deb":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"e9e1499c5d26c936238506df90a3c02c76707722":["860d9cc0c963b5c0db351fb0473b6894b1d96020"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e9e1499c5d26c936238506df90a3c02c76707722"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"860d9cc0c963b5c0db351fb0473b6894b1d96020":["92b4a131f1796dd57cc6698aae3d589d32a29deb","cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}