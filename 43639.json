{"path":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_DeltaImport().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_DeltaImport().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testCompositePk_DeltaImport() throws Exception {\n    List deltaRow = new ArrayList();\n    deltaRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select id from x where last_modified > NOW\",\n            deltaRow.iterator());\n\n    List parentRow = new ArrayList();\n    parentRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select * from x where id = '5'\", parentRow\n            .iterator());\n\n    List childRow = new ArrayList();\n    childRow.add(createMap(\"desc\", \"hello\"));\n    MockDataSource.setIterator(\"select * from y where y.A=5\", childRow\n            .iterator());\n\n    super.runDeltaImport(dataConfig);\n\n    assertQ(req(\"id:5\"), \"//*[@numFound='1']\");\n    assertQ(req(\"desc:hello\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_DeltaImport().mjava","sourceNew":null,"sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testCompositePk_DeltaImport() throws Exception {\n    List deltaRow = new ArrayList();\n    deltaRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select id from x where last_modified > NOW\",\n            deltaRow.iterator());\n\n    List parentRow = new ArrayList();\n    parentRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select * from x where id = '5'\", parentRow\n            .iterator());\n\n    List childRow = new ArrayList();\n    childRow.add(createMap(\"desc\", \"hello\"));\n    MockDataSource.setIterator(\"select * from y where y.A=5\", childRow\n            .iterator());\n\n    super.runDeltaImport(dataConfig);\n\n    assertQ(req(\"id:5\"), \"//*[@numFound='1']\");\n    assertQ(req(\"desc:hello\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_DeltaImport().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_DeltaImport().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testCompositePk_DeltaImport() throws Exception {\n    List deltaRow = new ArrayList();\n    deltaRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select id from x where last_modified > NOW\",\n            deltaRow.iterator());\n\n    List parentRow = new ArrayList();\n    parentRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select * from x where id = '5'\", parentRow\n            .iterator());\n\n    List childRow = new ArrayList();\n    childRow.add(createMap(\"desc\", \"hello\"));\n    MockDataSource.setIterator(\"select * from y where y.A=5\", childRow\n            .iterator());\n\n    super.runDeltaImport(dataConfig);\n\n    assertQ(req(\"id:5\"), \"//*[@numFound='1']\");\n    assertQ(req(\"desc:hello\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testCompositePk_DeltaImport() throws Exception {\n    List deltaRow = new ArrayList();\n    deltaRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select id from x where last_modified > NOW\",\n            deltaRow.iterator());\n\n    List parentRow = new ArrayList();\n    parentRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select * from x where id = '5'\", parentRow\n            .iterator());\n\n    List childRow = new ArrayList();\n    childRow.add(createMap(\"desc\", \"hello\"));\n    MockDataSource.setIterator(\"select * from y where y.A=5\", childRow\n            .iterator());\n\n    super.runDeltaImport(dataConfig);\n\n    assertQ(req(\"id:5\"), \"//*[@numFound='1']\");\n    assertQ(req(\"desc:hello\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_DeltaImport().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testCompositePk_DeltaImport() throws Exception {\n    List deltaRow = new ArrayList();\n    deltaRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select id from x where last_modified > NOW\",\n            deltaRow.iterator());\n\n    List parentRow = new ArrayList();\n    parentRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select * from x where id = '5'\", parentRow\n            .iterator());\n\n    List childRow = new ArrayList();\n    childRow.add(createMap(\"desc\", \"hello\"));\n    MockDataSource.setIterator(\"select * from y where y.A=5\", childRow\n            .iterator());\n\n    super.runDeltaImport(dataConfig);\n\n    assertQ(req(\"id:5\"), \"//*[@numFound='1']\");\n    assertQ(req(\"desc:hello\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead","date":1286986267,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_DeltaImport().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_DeltaImport().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testCompositePk_DeltaImport() throws Exception {\n    List deltaRow = new ArrayList();\n    deltaRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select id from x where last_modified > NOW\",\n            deltaRow.iterator());\n\n    List parentRow = new ArrayList();\n    parentRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select * from x where id = '5'\", parentRow\n            .iterator());\n\n    List childRow = new ArrayList();\n    childRow.add(createMap(\"desc\", \"hello\"));\n    MockDataSource.setIterator(\"select * from y where y.A=5\", childRow\n            .iterator());\n\n    runDeltaImport(dataConfig);\n\n    assertQ(req(\"id:5\"), \"//*[@numFound='1']\");\n    assertQ(req(\"desc:hello\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testCompositePk_DeltaImport() throws Exception {\n    List deltaRow = new ArrayList();\n    deltaRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select id from x where last_modified > NOW\",\n            deltaRow.iterator());\n\n    List parentRow = new ArrayList();\n    parentRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select * from x where id = '5'\", parentRow\n            .iterator());\n\n    List childRow = new ArrayList();\n    childRow.add(createMap(\"desc\", \"hello\"));\n    MockDataSource.setIterator(\"select * from y where y.A=5\", childRow\n            .iterator());\n\n    super.runDeltaImport(dataConfig);\n\n    assertQ(req(\"id:5\"), \"//*[@numFound='1']\");\n    assertQ(req(\"desc:hello\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_DeltaImport().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_DeltaImport().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testCompositePk_DeltaImport() throws Exception {\n    List deltaRow = new ArrayList();\n    deltaRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select id from x where last_modified > NOW\",\n            deltaRow.iterator());\n\n    List parentRow = new ArrayList();\n    parentRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select * from x where id = '5'\", parentRow\n            .iterator());\n\n    List childRow = new ArrayList();\n    childRow.add(createMap(\"desc\", \"hello\"));\n    MockDataSource.setIterator(\"select * from y where y.A=5\", childRow\n            .iterator());\n\n    runDeltaImport(dataConfig);\n\n    assertQ(req(\"id:5\"), \"//*[@numFound='1']\");\n    assertQ(req(\"desc:hello\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testCompositePk_DeltaImport() throws Exception {\n    List deltaRow = new ArrayList();\n    deltaRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select id from x where last_modified > NOW\",\n            deltaRow.iterator());\n\n    List parentRow = new ArrayList();\n    parentRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select * from x where id = '5'\", parentRow\n            .iterator());\n\n    List childRow = new ArrayList();\n    childRow.add(createMap(\"desc\", \"hello\"));\n    MockDataSource.setIterator(\"select * from y where y.A=5\", childRow\n            .iterator());\n\n    super.runDeltaImport(dataConfig);\n\n    assertQ(req(\"id:5\"), \"//*[@numFound='1']\");\n    assertQ(req(\"desc:hello\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_DeltaImport().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_DeltaImport().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testCompositePk_DeltaImport() throws Exception {\n    List deltaRow = new ArrayList();\n    deltaRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select id from x where last_modified > NOW\",\n            deltaRow.iterator());\n\n    List parentRow = new ArrayList();\n    parentRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select * from x where id = '5'\", parentRow\n            .iterator());\n\n    List childRow = new ArrayList();\n    childRow.add(createMap(\"desc\", \"hello\"));\n    MockDataSource.setIterator(\"select * from y where y.A=5\", childRow\n            .iterator());\n\n    runDeltaImport(dataConfig);\n\n    assertQ(req(\"id:5\"), \"//*[@numFound='1']\");\n    assertQ(req(\"desc:hello\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testCompositePk_DeltaImport() throws Exception {\n    List deltaRow = new ArrayList();\n    deltaRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select id from x where last_modified > NOW\",\n            deltaRow.iterator());\n\n    List parentRow = new ArrayList();\n    parentRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select * from x where id = '5'\", parentRow\n            .iterator());\n\n    List childRow = new ArrayList();\n    childRow.add(createMap(\"desc\", \"hello\"));\n    MockDataSource.setIterator(\"select * from y where y.A=5\", childRow\n            .iterator());\n\n    super.runDeltaImport(dataConfig);\n\n    assertQ(req(\"id:5\"), \"//*[@numFound='1']\");\n    assertQ(req(\"desc:hello\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_DeltaImport().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_DeltaImport().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testCompositePk_DeltaImport() throws Exception {\n    List deltaRow = new ArrayList();\n    deltaRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select id from x where last_modified > NOW\",\n            deltaRow.iterator());\n\n    List parentRow = new ArrayList();\n    parentRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select * from x where id = '5'\", parentRow\n            .iterator());\n\n    List childRow = new ArrayList();\n    childRow.add(createMap(\"desc\", \"hello\"));\n    MockDataSource.setIterator(\"select * from y where y.A=5\", childRow\n            .iterator());\n\n    runDeltaImport(dataConfig);\n\n    assertQ(req(\"id:5\"), \"//*[@numFound='1']\");\n    assertQ(req(\"desc:hello\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testCompositePk_DeltaImport() throws Exception {\n    List deltaRow = new ArrayList();\n    deltaRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select id from x where last_modified > NOW\",\n            deltaRow.iterator());\n\n    List parentRow = new ArrayList();\n    parentRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select * from x where id = '5'\", parentRow\n            .iterator());\n\n    List childRow = new ArrayList();\n    childRow.add(createMap(\"desc\", \"hello\"));\n    MockDataSource.setIterator(\"select * from y where y.A=5\", childRow\n            .iterator());\n\n    runDeltaImport(dataConfig);\n\n    assertQ(req(\"id:5\"), \"//*[@numFound='1']\");\n    assertQ(req(\"desc:hello\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_DeltaImport().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_DeltaImport().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testCompositePk_DeltaImport() throws Exception {\n    List deltaRow = new ArrayList();\n    deltaRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select id from x where last_modified > NOW\",\n            deltaRow.iterator());\n\n    List parentRow = new ArrayList();\n    parentRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select * from x where id = '5'\", parentRow\n            .iterator());\n\n    List childRow = new ArrayList();\n    childRow.add(createMap(\"desc\", \"hello\"));\n    MockDataSource.setIterator(\"select * from y where y.A=5\", childRow\n            .iterator());\n\n    runDeltaImport(dataConfig);\n\n    assertQ(req(\"id:5\"), \"//*[@numFound='1']\");\n    assertQ(req(\"desc:hello\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testCompositePk_DeltaImport() throws Exception {\n    List deltaRow = new ArrayList();\n    deltaRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select id from x where last_modified > NOW\",\n            deltaRow.iterator());\n\n    List parentRow = new ArrayList();\n    parentRow.add(createMap(\"id\", \"5\"));\n    MockDataSource.setIterator(\"select * from x where id = '5'\", parentRow\n            .iterator());\n\n    List childRow = new ArrayList();\n    childRow.add(createMap(\"desc\", \"hello\"));\n    MockDataSource.setIterator(\"select * from y where y.A=5\", childRow\n            .iterator());\n\n    runDeltaImport(dataConfig);\n\n    assertQ(req(\"id:5\"), \"//*[@numFound='1']\");\n    assertQ(req(\"desc:hello\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead","fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead"],"c26f00b574427b55127e869b935845554afde1fa":["fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1da8d55113b689b06716246649de6f62430f15c0","fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead"],"fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead":["1da8d55113b689b06716246649de6f62430f15c0"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["1da8d55113b689b06716246649de6f62430f15c0","fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}