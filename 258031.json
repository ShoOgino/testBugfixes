{"path":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/JavaCharStream#UpdateLineColumn(char).mjava","commits":[{"id":"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","date":1310612214,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/JavaCharStream#UpdateLineColumn(char).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/JavaCharStream#UpdateLineColumn(char).mjava","sourceNew":"  protected void UpdateLineColumn(char c)\n  {\n     column++;\n\n     if (prevCharIsLF)\n     {\n        prevCharIsLF = false;\n        line += (column = 1);\n     }\n     else if (prevCharIsCR)\n     {\n        prevCharIsCR = false;\n        if (c == '\\n')\n        {\n           prevCharIsLF = true;\n        }\n        else\n           line += (column = 1);\n     }\n\n     switch (c)\n     {\n        case '\\r' :\n           prevCharIsCR = true;\n           break;\n        case '\\n' :\n           prevCharIsLF = true;\n           break;\n        case '\\t' :\n           column--;\n           column += (tabSize - (column % tabSize));\n           break;\n        default :\n           break;\n     }\n\n     bufline[bufpos] = line;\n     bufcolumn[bufpos] = column;\n  }\n\n","sourceOld":"  protected void UpdateLineColumn(char c)\n  {\n     column++;\n\n     if (prevCharIsLF)\n     {\n        prevCharIsLF = false;\n        line += (column = 1);\n     }\n     else if (prevCharIsCR)\n     {\n        prevCharIsCR = false;\n        if (c == '\\n')\n        {\n           prevCharIsLF = true;\n        }\n        else\n           line += (column = 1);\n     }\n\n     switch (c)\n     {\n        case '\\r' :\n           prevCharIsCR = true;\n           break;\n        case '\\n' :\n           prevCharIsLF = true;\n           break;\n        case '\\t' :\n           column--;\n           column += (tabSize - (column % tabSize));\n           break;\n        default :\n           break;\n     }\n\n     bufline[bufpos] = line;\n     bufcolumn[bufpos] = column;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/JavaCharStream#UpdateLineColumn(char).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/JavaCharStream#UpdateLineColumn(char).mjava","sourceNew":"  protected void UpdateLineColumn(char c)\n  {\n     column++;\n\n     if (prevCharIsLF)\n     {\n        prevCharIsLF = false;\n        line += (column = 1);\n     }\n     else if (prevCharIsCR)\n     {\n        prevCharIsCR = false;\n        if (c == '\\n')\n        {\n           prevCharIsLF = true;\n        }\n        else\n           line += (column = 1);\n     }\n\n     switch (c)\n     {\n        case '\\r' :\n           prevCharIsCR = true;\n           break;\n        case '\\n' :\n           prevCharIsLF = true;\n           break;\n        case '\\t' :\n           column--;\n           column += (tabSize - (column % tabSize));\n           break;\n        default :\n           break;\n     }\n\n     bufline[bufpos] = line;\n     bufcolumn[bufpos] = column;\n  }\n\n","sourceOld":"  protected void UpdateLineColumn(char c)\n  {\n     column++;\n\n     if (prevCharIsLF)\n     {\n        prevCharIsLF = false;\n        line += (column = 1);\n     }\n     else if (prevCharIsCR)\n     {\n        prevCharIsCR = false;\n        if (c == '\\n')\n        {\n           prevCharIsLF = true;\n        }\n        else\n           line += (column = 1);\n     }\n\n     switch (c)\n     {\n        case '\\r' :\n           prevCharIsCR = true;\n           break;\n        case '\\n' :\n           prevCharIsLF = true;\n           break;\n        case '\\t' :\n           column--;\n           column += (tabSize - (column % tabSize));\n           break;\n        default :\n           break;\n     }\n\n     bufline[bufpos] = line;\n     bufcolumn[bufpos] = column;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}