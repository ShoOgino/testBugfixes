{"path":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/BigramDictionary#loadFromInputStream(InputStream).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/BigramDictionary#loadFromInputStream(InputStream).mjava","pathOld":"modules/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/BigramDictionary#loadFromInputStream(InputStream).mjava","sourceNew":"  private void loadFromInputStream(InputStream serialObjectInputStream)\n      throws IOException, ClassNotFoundException {\n    ObjectInputStream input = new ObjectInputStream(serialObjectInputStream);\n    bigramHashTable = (long[]) input.readObject();\n    frequencyTable = (int[]) input.readObject();\n    // log.info(\"load bigram dict from serialization.\");\n    input.close();\n  }\n\n","sourceOld":"  private void loadFromInputStream(InputStream serialObjectInputStream)\n      throws IOException, ClassNotFoundException {\n    ObjectInputStream input = new ObjectInputStream(serialObjectInputStream);\n    bigramHashTable = (long[]) input.readObject();\n    frequencyTable = (int[]) input.readObject();\n    // log.info(\"load bigram dict from serialization.\");\n    input.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"990bfad31921196c3dc2f72e0c89e310fdb14242","date":1435262444,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/BigramDictionary#loadFromInputStream(InputStream).mjava","pathOld":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/BigramDictionary#loadFromInputStream(InputStream).mjava","sourceNew":"  private void loadFromInputStream(InputStream serialObjectInputStream)\n      throws IOException, ClassNotFoundException {\n    try (ObjectInputStream input = new ObjectInputStream(serialObjectInputStream)) {\n      bigramHashTable = (long[]) input.readObject();\n      frequencyTable = (int[]) input.readObject();\n      // log.info(\"load bigram dict from serialization.\");\n    }\n  }\n\n","sourceOld":"  private void loadFromInputStream(InputStream serialObjectInputStream)\n      throws IOException, ClassNotFoundException {\n    ObjectInputStream input = new ObjectInputStream(serialObjectInputStream);\n    bigramHashTable = (long[]) input.readObject();\n    frequencyTable = (int[]) input.readObject();\n    // log.info(\"load bigram dict from serialization.\");\n    input.close();\n  }\n\n","bugFix":["05ff0cc6e864c7d71a48579f2acfca4f58943568"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cb5c25025721b90f1f80bf3df99ae2b9a945e6c","date":1576521071,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/BigramDictionary#loadFromInputStream(InputStream).mjava","pathOld":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/BigramDictionary#loadFromInputStream(InputStream).mjava","sourceNew":"  @SuppressForbidden(reason = \"TODO: fix code to serialize its own dictionary vs. a binary blob in the codebase\")\n  private void loadFromInputStream(InputStream serialObjectInputStream)\n      throws IOException, ClassNotFoundException {\n    try (ObjectInputStream input = new ObjectInputStream(serialObjectInputStream)) {\n      bigramHashTable = (long[]) input.readObject();\n      frequencyTable = (int[]) input.readObject();\n      // log.info(\"load bigram dict from serialization.\");\n    }\n  }\n\n","sourceOld":"  private void loadFromInputStream(InputStream serialObjectInputStream)\n      throws IOException, ClassNotFoundException {\n    try (ObjectInputStream input = new ObjectInputStream(serialObjectInputStream)) {\n      bigramHashTable = (long[]) input.readObject();\n      frequencyTable = (int[]) input.readObject();\n      // log.info(\"load bigram dict from serialization.\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b945b8f5bba0303382bc69d60c0c287714f23328","date":1576586294,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/BigramDictionary#loadFromInputStream(InputStream).mjava","pathOld":"lucene/analysis/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/BigramDictionary#loadFromInputStream(InputStream).mjava","sourceNew":"  @SuppressForbidden(reason = \"TODO: fix code to serialize its own dictionary vs. a binary blob in the codebase\")\n  private void loadFromInputStream(InputStream serialObjectInputStream)\n      throws IOException, ClassNotFoundException {\n    try (ObjectInputStream input = new ObjectInputStream(serialObjectInputStream)) {\n      bigramHashTable = (long[]) input.readObject();\n      frequencyTable = (int[]) input.readObject();\n      // log.info(\"load bigram dict from serialization.\");\n    }\n  }\n\n","sourceOld":"  private void loadFromInputStream(InputStream serialObjectInputStream)\n      throws IOException, ClassNotFoundException {\n    try (ObjectInputStream input = new ObjectInputStream(serialObjectInputStream)) {\n      bigramHashTable = (long[]) input.readObject();\n      frequencyTable = (int[]) input.readObject();\n      // log.info(\"load bigram dict from serialization.\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"990bfad31921196c3dc2f72e0c89e310fdb14242":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cb5c25025721b90f1f80bf3df99ae2b9a945e6c":["990bfad31921196c3dc2f72e0c89e310fdb14242"],"b945b8f5bba0303382bc69d60c0c287714f23328":["990bfad31921196c3dc2f72e0c89e310fdb14242","4cb5c25025721b90f1f80bf3df99ae2b9a945e6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4cb5c25025721b90f1f80bf3df99ae2b9a945e6c"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["990bfad31921196c3dc2f72e0c89e310fdb14242"],"990bfad31921196c3dc2f72e0c89e310fdb14242":["4cb5c25025721b90f1f80bf3df99ae2b9a945e6c","b945b8f5bba0303382bc69d60c0c287714f23328"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4cb5c25025721b90f1f80bf3df99ae2b9a945e6c":["b945b8f5bba0303382bc69d60c0c287714f23328","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b945b8f5bba0303382bc69d60c0c287714f23328":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b945b8f5bba0303382bc69d60c0c287714f23328","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}