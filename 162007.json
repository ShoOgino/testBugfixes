{"path":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testEnumFieldTypeWithoutDocValues().mjava","commits":[{"id":"54ad8c9e9210e008dc7b8ad5a037ff20879150ea","date":1501889566,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testEnumFieldTypeWithoutDocValues().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testEnumFieldTypeWithoutDocValues() throws Exception {\n    assumeTrue(\"Only testing EnumFieldType without docValues.\",\n        System.getProperty(\"solr.tests.EnumFieldType\").equals(\"solr.EnumFieldType\")\n            && System.getProperty(\"solr.tests.numeric.dv\").equals(\"false\"));\n\n    try {\n      deleteCore();\n      initCore(\"solrconfig-minimal.xml\", \"bad-schema-enums.xml\");\n      SolrException e = expectThrows(SolrException.class, \n          () -> assertU(adoc(\"id\", \"0\", FIELD_NAME, \"Not Available\")));\n      assertTrue(e.getMessage().contains(\"EnumFieldType requires docValues=\\\"true\\\"\"));\n    } finally { // put back the core expected by other tests\n      deleteCore();\n      doInitCore();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/EnumFieldTest#testEnumFieldTypeWithoutDocValues().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testEnumFieldTypeWithoutDocValues() throws Exception {\n    assumeTrue(\"Only testing EnumFieldType without docValues.\",\n        System.getProperty(\"solr.tests.EnumFieldType\").equals(\"solr.EnumFieldType\")\n            && System.getProperty(\"solr.tests.numeric.dv\").equals(\"false\"));\n\n    try {\n      deleteCore();\n      initCore(\"solrconfig-minimal.xml\", \"bad-schema-enums.xml\");\n      SolrException e = expectThrows(SolrException.class, \n          () -> assertU(adoc(\"id\", \"0\", FIELD_NAME, \"Not Available\")));\n      assertTrue(e.getMessage().contains(\"EnumFieldType requires docValues=\\\"true\\\"\"));\n    } finally { // put back the core expected by other tests\n      deleteCore();\n      doInitCore();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","54ad8c9e9210e008dc7b8ad5a037ff20879150ea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"54ad8c9e9210e008dc7b8ad5a037ff20879150ea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54ad8c9e9210e008dc7b8ad5a037ff20879150ea"]},"commit2Childs":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","54ad8c9e9210e008dc7b8ad5a037ff20879150ea"],"54ad8c9e9210e008dc7b8ad5a037ff20879150ea":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}