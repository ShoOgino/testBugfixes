{"path":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#search(Analyzer,String).mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#search(Analyzer,String).mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#search(Analyzer,String).mjava","sourceNew":"  //Helper method to query\n  private Hits search(Analyzer a, String queryString) throws IOException, ParseException {\n    QueryParser qp = new QueryParser(\"repetitiveField\", a);\n    Query q = qp.parse(queryString);\n    return new IndexSearcher(reader).search(q);\n  }\n\n","sourceOld":"  //Helper method to query\n  private Hits search(Analyzer a, String queryString) throws IOException, ParseException {\n    QueryParser qp = new QueryParser(\"repetitiveField\", a);\n    Query q = qp.parse(queryString);\n    return new IndexSearcher(reader).search(q);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f148c02ddd6ba981c65ca685d0e56c3a98368e1","date":1254892102,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#search(Analyzer,String).mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#search(Analyzer,String).mjava","sourceNew":"  //Helper method to query\n  private int search(Analyzer a, String queryString) throws IOException, ParseException {\n    QueryParser qp = new QueryParser(\"repetitiveField\", a);\n    Query q = qp.parse(queryString);\n    return new IndexSearcher(reader).search(q, null, 1000).totalHits;\n  }\n\n","sourceOld":"  //Helper method to query\n  private Hits search(Analyzer a, String queryString) throws IOException, ParseException {\n    QueryParser qp = new QueryParser(\"repetitiveField\", a);\n    Query q = qp.parse(queryString);\n    return new IndexSearcher(reader).search(q);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#search(Analyzer,String).mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#search(Analyzer,String).mjava","sourceNew":"  //Helper method to query\n  private int search(Analyzer a, String queryString) throws IOException, ParseException {\n    QueryParser qp = new QueryParser(Version.LUCENE_CURRENT, \"repetitiveField\", a);\n    Query q = qp.parse(queryString);\n    return new IndexSearcher(reader).search(q, null, 1000).totalHits;\n  }\n\n","sourceOld":"  //Helper method to query\n  private int search(Analyzer a, String queryString) throws IOException, ParseException {\n    QueryParser qp = new QueryParser(\"repetitiveField\", a);\n    Query q = qp.parse(queryString);\n    return new IndexSearcher(reader).search(q, null, 1000).totalHits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#search(Analyzer,String).mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#search(Analyzer,String).mjava","sourceNew":"  //Helper method to query\n  private int search(Analyzer a, String queryString) throws IOException, ParseException {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"repetitiveField\", a);\n    Query q = qp.parse(queryString);\n    return new IndexSearcher(reader).search(q, null, 1000).totalHits;\n  }\n\n","sourceOld":"  //Helper method to query\n  private int search(Analyzer a, String queryString) throws IOException, ParseException {\n    QueryParser qp = new QueryParser(Version.LUCENE_CURRENT, \"repetitiveField\", a);\n    Query q = qp.parse(queryString);\n    return new IndexSearcher(reader).search(q, null, 1000).totalHits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#search(Analyzer,String).mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/query/QueryAutoStopWordAnalyzerTest#search(Analyzer,String).mjava","sourceNew":"  //Helper method to query\n  private int search(Analyzer a, String queryString) throws IOException, ParseException {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"repetitiveField\", a);\n    Query q = qp.parse(queryString);\n    return new IndexSearcher(reader).search(q, null, 1000).totalHits;\n  }\n\n","sourceOld":"  //Helper method to query\n  private int search(Analyzer a, String queryString) throws IOException, ParseException {\n    QueryParser qp = new QueryParser(TEST_VERSION_CURRENT, \"repetitiveField\", a);\n    Query q = qp.parse(queryString);\n    return new IndexSearcher(reader).search(q, null, 1000).totalHits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f148c02ddd6ba981c65ca685d0e56c3a98368e1":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["ba1116b3450a9c1642c89445d131b37344055245"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"ba1116b3450a9c1642c89445d131b37344055245":["0f148c02ddd6ba981c65ca685d0e56c3a98368e1"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["0f148c02ddd6ba981c65ca685d0e56c3a98368e1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"0f148c02ddd6ba981c65ca685d0e56c3a98368e1":["ba1116b3450a9c1642c89445d131b37344055245"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ba1116b3450a9c1642c89445d131b37344055245":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}