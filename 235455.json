{"path":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#assertSameResults(List[FacetResult],List[FacetResult]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#assertSameResults(List[FacetResult],List[FacetResult]).mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/FacetTestBase#assertSameResults(List[FacetResult],List[FacetResult]).mjava","sourceNew":"  /** Validate results equality */\n  protected static void assertSameResults(List<FacetResult> expected,\n                                          List<FacetResult> actual) {\n    String expectedResults = resStringValueOnly(expected);\n    String actualResults = resStringValueOnly(actual);\n    if (!expectedResults.equals(actualResults)) {\n      System.err.println(\"Results are not the same!\");\n      System.err.println(\"Expected:\\n\" + expectedResults);\n      System.err.println(\"Actual\" + actualResults);\n      throw new NotSameResultError();\n    }\n  }\n\n","sourceOld":"  /** Validate results equality */\n  protected static void assertSameResults(List<FacetResult> expected,\n                                          List<FacetResult> actual) {\n    String expectedResults = resStringValueOnly(expected);\n    String actualResults = resStringValueOnly(actual);\n    if (!expectedResults.equals(actualResults)) {\n      System.err.println(\"Results are not the same!\");\n      System.err.println(\"Expected:\\n\" + expectedResults);\n      System.err.println(\"Actual\" + actualResults);\n      throw new NotSameResultError();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"551a8665af55f08d0001b0d58ed4bd81a8b8258f","date":1354706854,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#assertSameResults(List[FacetResult],List[FacetResult]).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#assertSameResults(List[FacetResult],List[FacetResult]).mjava","sourceNew":"  /** Validate results equality */\n  protected static void assertSameResults(List<FacetResult> expected,\n                                          List<FacetResult> actual) {\n    String expectedResults = resStringValueOnly(expected);\n    String actualResults = resStringValueOnly(actual);\n    if (!expectedResults.equals(actualResults)) {\n      System.err.println(\"Results are not the same!\");\n      System.err.println(\"Expected:\\n\" + expectedResults);\n      System.err.println(\"Actual:\\n\" + actualResults);\n      throw new NotSameResultError();\n    }\n  }\n\n","sourceOld":"  /** Validate results equality */\n  protected static void assertSameResults(List<FacetResult> expected,\n                                          List<FacetResult> actual) {\n    String expectedResults = resStringValueOnly(expected);\n    String actualResults = resStringValueOnly(actual);\n    if (!expectedResults.equals(actualResults)) {\n      System.err.println(\"Results are not the same!\");\n      System.err.println(\"Expected:\\n\" + expectedResults);\n      System.err.println(\"Actual\" + actualResults);\n      throw new NotSameResultError();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#assertSameResults(List[FacetResult],List[FacetResult]).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#assertSameResults(List[FacetResult],List[FacetResult]).mjava","sourceNew":"  /** Validate results equality */\n  protected static void assertSameResults(List<FacetResult> expected,\n                                          List<FacetResult> actual) {\n    String expectedResults = resStringValueOnly(expected);\n    String actualResults = resStringValueOnly(actual);\n    if (!expectedResults.equals(actualResults)) {\n      System.err.println(\"Results are not the same!\");\n      System.err.println(\"Expected:\\n\" + expectedResults);\n      System.err.println(\"Actual:\\n\" + actualResults);\n      throw new NotSameResultError();\n    }\n  }\n\n","sourceOld":"  /** Validate results equality */\n  protected static void assertSameResults(List<FacetResult> expected,\n                                          List<FacetResult> actual) {\n    String expectedResults = resStringValueOnly(expected);\n    String actualResults = resStringValueOnly(actual);\n    if (!expectedResults.equals(actualResults)) {\n      System.err.println(\"Results are not the same!\");\n      System.err.println(\"Expected:\\n\" + expectedResults);\n      System.err.println(\"Actual\" + actualResults);\n      throw new NotSameResultError();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42f51b3ab4258ff4623227b0db011b8bb83db5c7","date":1358164991,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#assertSameResults(List[FacetResult],List[FacetResult]).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#assertSameResults(List[FacetResult],List[FacetResult]).mjava","sourceNew":"  /** Validate results equality */\n  protected static void assertSameResults(List<FacetResult> expected, List<FacetResult> actual) {\n    String expectedResults = resStringValueOnly(expected);\n    String actualResults = resStringValueOnly(actual);\n    if (!expectedResults.equals(actualResults)) {\n      System.err.println(\"Results are not the same!\");\n      System.err.println(\"Expected:\\n\" + expectedResults);\n      System.err.println(\"Actual:\\n\" + actualResults);\n      throw new NotSameResultError();\n    }\n  }\n\n","sourceOld":"  /** Validate results equality */\n  protected static void assertSameResults(List<FacetResult> expected,\n                                          List<FacetResult> actual) {\n    String expectedResults = resStringValueOnly(expected);\n    String actualResults = resStringValueOnly(actual);\n    if (!expectedResults.equals(actualResults)) {\n      System.err.println(\"Results are not the same!\");\n      System.err.println(\"Expected:\\n\" + expectedResults);\n      System.err.println(\"Actual:\\n\" + actualResults);\n      throw new NotSameResultError();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#assertSameResults(List[FacetResult],List[FacetResult]).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#assertSameResults(List[FacetResult],List[FacetResult]).mjava","sourceNew":"  /** Validate results equality */\n  protected static void assertSameResults(List<FacetResult> expected, List<FacetResult> actual) {\n    String expectedResults = resStringValueOnly(expected);\n    String actualResults = resStringValueOnly(actual);\n    if (!expectedResults.equals(actualResults)) {\n      System.err.println(\"Results are not the same!\");\n      System.err.println(\"Expected:\\n\" + expectedResults);\n      System.err.println(\"Actual:\\n\" + actualResults);\n      throw new NotSameResultError();\n    }\n  }\n\n","sourceOld":"  /** Validate results equality */\n  protected static void assertSameResults(List<FacetResult> expected,\n                                          List<FacetResult> actual) {\n    String expectedResults = resStringValueOnly(expected);\n    String actualResults = resStringValueOnly(actual);\n    if (!expectedResults.equals(actualResults)) {\n      System.err.println(\"Results are not the same!\");\n      System.err.println(\"Expected:\\n\" + expectedResults);\n      System.err.println(\"Actual:\\n\" + actualResults);\n      throw new NotSameResultError();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"811cdb4a80352766eb0c762e48972707a924e5cd","date":1358767313,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#assertSameResults(List[FacetResult],List[FacetResult]).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#assertSameResults(List[FacetResult],List[FacetResult]).mjava","sourceNew":"  /** Validate results equality */\n  protected static void assertSameResults(List<FacetResult> expected, List<FacetResult> actual) {\n    assertEquals(\"wrong number of facet results\", expected.size(), actual.size());\n    int size = expected.size();\n    for (int i = 0; i < size; i++) {\n      FacetResult expectedResult = expected.get(i);\n      FacetResult actualResult = actual.get(i);\n      String expectedStr = FacetTestUtils.toSimpleString(expectedResult);\n      String actualStr = FacetTestUtils.toSimpleString(actualResult);\n      assertEquals(\"Results not the same!\\nExpected:\" + expectedStr + \"\\nActual:\\n\" + actualStr, expectedStr, actualStr);\n    }\n  }\n\n","sourceOld":"  /** Validate results equality */\n  protected static void assertSameResults(List<FacetResult> expected, List<FacetResult> actual) {\n    String expectedResults = resStringValueOnly(expected);\n    String actualResults = resStringValueOnly(actual);\n    if (!expectedResults.equals(actualResults)) {\n      System.err.println(\"Results are not the same!\");\n      System.err.println(\"Expected:\\n\" + expectedResults);\n      System.err.println(\"Actual:\\n\" + actualResults);\n      throw new NotSameResultError();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#assertSameResults(List[FacetResult],List[FacetResult]).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#assertSameResults(List[FacetResult],List[FacetResult]).mjava","sourceNew":"  /** Validate results equality */\n  protected static void assertSameResults(List<FacetResult> expected, List<FacetResult> actual) {\n    assertEquals(\"wrong number of facet results\", expected.size(), actual.size());\n    int size = expected.size();\n    for (int i = 0; i < size; i++) {\n      FacetResult expectedResult = expected.get(i);\n      FacetResult actualResult = actual.get(i);\n      String expectedStr = FacetTestUtils.toSimpleString(expectedResult);\n      String actualStr = FacetTestUtils.toSimpleString(actualResult);\n      assertEquals(\"Results not the same!\\nExpected:\" + expectedStr + \"\\nActual:\\n\" + actualStr, expectedStr, actualStr);\n    }\n  }\n\n","sourceOld":"  /** Validate results equality */\n  protected static void assertSameResults(List<FacetResult> expected, List<FacetResult> actual) {\n    String expectedResults = resStringValueOnly(expected);\n    String actualResults = resStringValueOnly(actual);\n    if (!expectedResults.equals(actualResults)) {\n      System.err.println(\"Results are not the same!\");\n      System.err.println(\"Expected:\\n\" + expectedResults);\n      System.err.println(\"Actual:\\n\" + actualResults);\n      throw new NotSameResultError();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#assertSameResults(List[FacetResult],List[FacetResult]).mjava","sourceNew":null,"sourceOld":"  /** Validate results equality */\n  protected static void assertSameResults(List<FacetResult> expected, List<FacetResult> actual) {\n    assertEquals(\"wrong number of facet results\", expected.size(), actual.size());\n    int size = expected.size();\n    for (int i = 0; i < size; i++) {\n      FacetResult expectedResult = expected.get(i);\n      FacetResult actualResult = actual.get(i);\n      String expectedStr = FacetTestUtils.toSimpleString(expectedResult);\n      String actualStr = FacetTestUtils.toSimpleString(actualResult);\n      assertEquals(\"Results not the same!\\nExpected:\" + expectedStr + \"\\nActual:\\n\" + actualStr, expectedStr, actualStr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#assertSameResults(List[FacetResult],List[FacetResult]).mjava","sourceNew":null,"sourceOld":"  /** Validate results equality */\n  protected static void assertSameResults(List<FacetResult> expected, List<FacetResult> actual) {\n    assertEquals(\"wrong number of facet results\", expected.size(), actual.size());\n    int size = expected.size();\n    for (int i = 0; i < size; i++) {\n      FacetResult expectedResult = expected.get(i);\n      FacetResult actualResult = actual.get(i);\n      String expectedStr = FacetTestUtils.toSimpleString(expectedResult);\n      String actualStr = FacetTestUtils.toSimpleString(actualResult);\n      assertEquals(\"Results not the same!\\nExpected:\" + expectedStr + \"\\nActual:\\n\" + actualStr, expectedStr, actualStr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d33e19a97046248623a7591aeaa6547233fd15e2":["811cdb4a80352766eb0c762e48972707a924e5cd"],"42f51b3ab4258ff4623227b0db011b8bb83db5c7":["551a8665af55f08d0001b0d58ed4bd81a8b8258f"],"551a8665af55f08d0001b0d58ed4bd81a8b8258f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["407687e67faf6e1f02a211ca078d8e3eed631027","42f51b3ab4258ff4623227b0db011b8bb83db5c7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["b89678825b68eccaf09e6ab71675fc0b0af1e099","551a8665af55f08d0001b0d58ed4bd81a8b8258f"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["811cdb4a80352766eb0c762e48972707a924e5cd","d33e19a97046248623a7591aeaa6547233fd15e2"],"07155cdd910937cdf6877e48884d5782845c8b8b":["8917bfede3b4ca30f4305c1e391e9218959cd723","811cdb4a80352766eb0c762e48972707a924e5cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"811cdb4a80352766eb0c762e48972707a924e5cd":["42f51b3ab4258ff4623227b0db011b8bb83db5c7"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["551a8665af55f08d0001b0d58ed4bd81a8b8258f","407687e67faf6e1f02a211ca078d8e3eed631027"],"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"42f51b3ab4258ff4623227b0db011b8bb83db5c7":["8917bfede3b4ca30f4305c1e391e9218959cd723","811cdb4a80352766eb0c762e48972707a924e5cd"],"551a8665af55f08d0001b0d58ed4bd81a8b8258f":["42f51b3ab4258ff4623227b0db011b8bb83db5c7","407687e67faf6e1f02a211ca078d8e3eed631027"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["07155cdd910937cdf6877e48884d5782845c8b8b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"407687e67faf6e1f02a211ca078d8e3eed631027":["8917bfede3b4ca30f4305c1e391e9218959cd723"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"07155cdd910937cdf6877e48884d5782845c8b8b":[],"811cdb4a80352766eb0c762e48972707a924e5cd":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13","07155cdd910937cdf6877e48884d5782845c8b8b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["07155cdd910937cdf6877e48884d5782845c8b8b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}