{"path":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testConstantsUnchanged().mjava","commits":[{"id":"1a63096f877f1cef81d14dadf53133bcb4f9e513","date":1474634574,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testConstantsUnchanged().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testConstantsUnchanged() {\n    assertEquals(\"json.nl\", JSONWriter.JSON_NL_STYLE);\n    assertEquals(\"map\", JSONWriter.JSON_NL_MAP);\n    assertEquals(\"flat\", JSONWriter.JSON_NL_FLAT);\n    assertEquals(\"arrarr\", JSONWriter.JSON_NL_ARROFARR);\n    assertEquals(\"arrmap\", JSONWriter.JSON_NL_ARROFMAP);\n    assertEquals(\"json.wrf\", JSONWriter.JSON_WRAPPER_FUNCTION);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testConstantsUnchanged().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testConstantsUnchanged() {\n    assertEquals(\"json.nl\", JSONWriter.JSON_NL_STYLE);\n    assertEquals(\"map\", JSONWriter.JSON_NL_MAP);\n    assertEquals(\"flat\", JSONWriter.JSON_NL_FLAT);\n    assertEquals(\"arrarr\", JSONWriter.JSON_NL_ARROFARR);\n    assertEquals(\"arrmap\", JSONWriter.JSON_NL_ARROFMAP);\n    assertEquals(\"json.wrf\", JSONWriter.JSON_WRAPPER_FUNCTION);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testConstantsUnchanged().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testConstantsUnchanged() {\n    assertEquals(\"json.nl\", JSONWriter.JSON_NL_STYLE);\n    assertEquals(\"map\", JSONWriter.JSON_NL_MAP);\n    assertEquals(\"flat\", JSONWriter.JSON_NL_FLAT);\n    assertEquals(\"arrarr\", JSONWriter.JSON_NL_ARROFARR);\n    assertEquals(\"arrmap\", JSONWriter.JSON_NL_ARROFMAP);\n    assertEquals(\"json.wrf\", JSONWriter.JSON_WRAPPER_FUNCTION);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be24bc5afb9111e35bec7963fc84f96ebd98d9ee","date":1477912779,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testConstantsUnchanged().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testConstantsUnchanged().mjava","sourceNew":"  @Test\n  public void testConstantsUnchanged() {\n    assertEquals(\"json.nl\", JSONWriter.JSON_NL_STYLE);\n    assertEquals(\"map\", JSONWriter.JSON_NL_MAP);\n    assertEquals(\"flat\", JSONWriter.JSON_NL_FLAT);\n    assertEquals(\"arrarr\", JSONWriter.JSON_NL_ARROFARR);\n    assertEquals(\"arrmap\", JSONWriter.JSON_NL_ARROFMAP);\n    assertEquals(\"arrnvp\", JSONWriter.JSON_NL_ARROFNVP);\n    assertEquals(\"json.wrf\", JSONWriter.JSON_WRAPPER_FUNCTION);\n  }\n\n","sourceOld":"  @Test\n  public void testConstantsUnchanged() {\n    assertEquals(\"json.nl\", JSONWriter.JSON_NL_STYLE);\n    assertEquals(\"map\", JSONWriter.JSON_NL_MAP);\n    assertEquals(\"flat\", JSONWriter.JSON_NL_FLAT);\n    assertEquals(\"arrarr\", JSONWriter.JSON_NL_ARROFARR);\n    assertEquals(\"arrmap\", JSONWriter.JSON_NL_ARROFMAP);\n    assertEquals(\"json.wrf\", JSONWriter.JSON_WRAPPER_FUNCTION);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"320888923ec13b91f53082558f01f4c9960dd226","date":1477926871,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testConstantsUnchanged().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testConstantsUnchanged().mjava","sourceNew":"  @Test\n  public void testConstantsUnchanged() {\n    assertEquals(\"json.nl\", JSONWriter.JSON_NL_STYLE);\n    assertEquals(\"map\", JSONWriter.JSON_NL_MAP);\n    assertEquals(\"flat\", JSONWriter.JSON_NL_FLAT);\n    assertEquals(\"arrarr\", JSONWriter.JSON_NL_ARROFARR);\n    assertEquals(\"arrmap\", JSONWriter.JSON_NL_ARROFMAP);\n    assertEquals(\"arrnvp\", JSONWriter.JSON_NL_ARROFNVP);\n    assertEquals(\"json.wrf\", JSONWriter.JSON_WRAPPER_FUNCTION);\n  }\n\n","sourceOld":"  @Test\n  public void testConstantsUnchanged() {\n    assertEquals(\"json.nl\", JSONWriter.JSON_NL_STYLE);\n    assertEquals(\"map\", JSONWriter.JSON_NL_MAP);\n    assertEquals(\"flat\", JSONWriter.JSON_NL_FLAT);\n    assertEquals(\"arrarr\", JSONWriter.JSON_NL_ARROFARR);\n    assertEquals(\"arrmap\", JSONWriter.JSON_NL_ARROFMAP);\n    assertEquals(\"json.wrf\", JSONWriter.JSON_WRAPPER_FUNCTION);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87f40a063571d1870bae89b6d191c3cb53b10f5e","date":1482933535,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testConstantsUnchanged().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testConstantsUnchanged().mjava","sourceNew":"  @Test\n  public void testConstantsUnchanged() {\n    assertEquals(\"json.nl\", JSONWriter.JSON_NL_STYLE);\n    assertEquals(\"map\", JSONWriter.JSON_NL_MAP);\n    assertEquals(\"flat\", JSONWriter.JSON_NL_FLAT);\n    assertEquals(\"arrarr\", JSONWriter.JSON_NL_ARROFARR);\n    assertEquals(\"arrmap\", JSONWriter.JSON_NL_ARROFMAP);\n    assertEquals(\"arrntv\", JSONWriter.JSON_NL_ARROFNTV);\n    assertEquals(\"json.wrf\", JSONWriter.JSON_WRAPPER_FUNCTION);\n  }\n\n","sourceOld":"  @Test\n  public void testConstantsUnchanged() {\n    assertEquals(\"json.nl\", JSONWriter.JSON_NL_STYLE);\n    assertEquals(\"map\", JSONWriter.JSON_NL_MAP);\n    assertEquals(\"flat\", JSONWriter.JSON_NL_FLAT);\n    assertEquals(\"arrarr\", JSONWriter.JSON_NL_ARROFARR);\n    assertEquals(\"arrmap\", JSONWriter.JSON_NL_ARROFMAP);\n    assertEquals(\"arrnvp\", JSONWriter.JSON_NL_ARROFNVP);\n    assertEquals(\"json.wrf\", JSONWriter.JSON_WRAPPER_FUNCTION);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testConstantsUnchanged().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testConstantsUnchanged().mjava","sourceNew":"  @Test\n  public void testConstantsUnchanged() {\n    assertEquals(\"json.nl\", JSONWriter.JSON_NL_STYLE);\n    assertEquals(\"map\", JSONWriter.JSON_NL_MAP);\n    assertEquals(\"flat\", JSONWriter.JSON_NL_FLAT);\n    assertEquals(\"arrarr\", JSONWriter.JSON_NL_ARROFARR);\n    assertEquals(\"arrmap\", JSONWriter.JSON_NL_ARROFMAP);\n    assertEquals(\"arrntv\", JSONWriter.JSON_NL_ARROFNTV);\n    assertEquals(\"json.wrf\", JSONWriter.JSON_WRAPPER_FUNCTION);\n  }\n\n","sourceOld":"  @Test\n  public void testConstantsUnchanged() {\n    assertEquals(\"json.nl\", JSONWriter.JSON_NL_STYLE);\n    assertEquals(\"map\", JSONWriter.JSON_NL_MAP);\n    assertEquals(\"flat\", JSONWriter.JSON_NL_FLAT);\n    assertEquals(\"arrarr\", JSONWriter.JSON_NL_ARROFARR);\n    assertEquals(\"arrmap\", JSONWriter.JSON_NL_ARROFMAP);\n    assertEquals(\"arrnvp\", JSONWriter.JSON_NL_ARROFNVP);\n    assertEquals(\"json.wrf\", JSONWriter.JSON_WRAPPER_FUNCTION);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"be24bc5afb9111e35bec7963fc84f96ebd98d9ee":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"87f40a063571d1870bae89b6d191c3cb53b10f5e":["be24bc5afb9111e35bec7963fc84f96ebd98d9ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1a63096f877f1cef81d14dadf53133bcb4f9e513"],"320888923ec13b91f53082558f01f4c9960dd226":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","be24bc5afb9111e35bec7963fc84f96ebd98d9ee"],"1a63096f877f1cef81d14dadf53133bcb4f9e513":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["87f40a063571d1870bae89b6d191c3cb53b10f5e"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["320888923ec13b91f53082558f01f4c9960dd226","87f40a063571d1870bae89b6d191c3cb53b10f5e"]},"commit2Childs":{"be24bc5afb9111e35bec7963fc84f96ebd98d9ee":["87f40a063571d1870bae89b6d191c3cb53b10f5e","320888923ec13b91f53082558f01f4c9960dd226"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["be24bc5afb9111e35bec7963fc84f96ebd98d9ee","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"87f40a063571d1870bae89b6d191c3cb53b10f5e":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","1a63096f877f1cef81d14dadf53133bcb4f9e513","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"320888923ec13b91f53082558f01f4c9960dd226":["f03e4bed5023ec3ef93a771b8888cae991cf448d"],"1a63096f877f1cef81d14dadf53133bcb4f9e513":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["320888923ec13b91f53082558f01f4c9960dd226"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}