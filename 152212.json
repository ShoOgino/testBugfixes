{"path":"contrib/spatial/src/java/org/apache/lucene/spatial/geohash/GeoHashUtils#encode(double,double).mjava","commits":[{"id":"0584ee2be458044f19041ac184df00c69c632b4d","date":1231348258,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"contrib/spatial/src/java/org/apache/lucene/spatial/geohash/GeoHashUtils#encode(double,double).mjava","pathOld":"/dev/null","sourceNew":"\tpublic static String encode(double latitude, double longitude){\n\t\tdouble[] lat_interval = {-90.0 ,  90.0};\n\t\tdouble[] lon_interval = {-180.0, 180.0};\n\t\t\t\n\t\tStringBuilder geohash = new StringBuilder();\n\t\tboolean is_even = true;\n\t\tint bit = 0, ch = 0;\n\t\t\n\t\twhile(geohash.length() < precision){\n\t\t\tdouble mid = 0.0;\n\t\t\tif(is_even){\n\t\t\t\tmid = (lon_interval[0] + lon_interval[1]) / 2;\n\t\t\t\tif (longitude > mid){\n\t\t\t\t\tch |= bits[bit];\n\t\t\t\t\tlon_interval[0] = mid;\n\t\t\t\t} else {\n\t\t\t\t\tlon_interval[1] = mid;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tmid = (lat_interval[0] + lat_interval[1]) / 2;\n\t\t\t\tif(latitude > mid){\n\t\t\t\t\tch |= bits[bit];\n\t\t\t\t\tlat_interval[0] = mid;\n\t\t\t\t} else {\n\t\t\t\t\tlat_interval[1] = mid;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tis_even = is_even ? false : true;\n\t\t\t\n\t\t\tif (bit  < 4){\n\t\t\t\tbit ++;\n\t\t\t} else {\n\t\t\t\tgeohash.append(_base32[ch]);\n\t\t\t\tbit =0;\n\t\t\t\tch = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn geohash.toString();\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ffa9f5c51e7bbe3489bc384c0397cf904787438","date":1262729028,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/spatial/src/java/org/apache/lucene/spatial/geohash/GeoHashUtils#encode(double,double).mjava","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/geohash/GeoHashUtils#encode(double,double).mjava","sourceNew":"  /**\n   * Encodes the given latitude and longitude into a geohash\n   *\n   * @param latitude Latitude to encode\n   * @param longitude Longitude to encode\n   * @return Geohash encoding of the longitude and latitude\n   */\n  public static String encode(double latitude, double longitude) {\n    double[] latInterval = {-90.0, 90.0};\n    double[] lngInterval = {-180.0, 180.0};\n\n    final StringBuilder geohash = new StringBuilder();\n    boolean isEven = true;\n\n    int bit = 0;\n    int ch = 0;\n\n    while (geohash.length() < PRECISION) {\n      double mid = 0.0;\n      if (isEven) {\n        mid = (lngInterval[0] + lngInterval[1]) / 2D;\n        if (longitude > mid) {\n          ch |= BITS[bit];\n          lngInterval[0] = mid;\n        } else {\n          lngInterval[1] = mid;\n        }\n      } else {\n        mid = (latInterval[0] + latInterval[1]) / 2D;\n        if (latitude > mid) {\n          ch |= BITS[bit];\n          latInterval[0] = mid;\n        } else {\n          latInterval[1] = mid;\n        }\n      }\n\n      isEven = !isEven;\n\n      if (bit < 4) {\n        bit++;\n      } else {\n        geohash.append(BASE_32[ch]);\n        bit = 0;\n        ch = 0;\n      }\n    }\n\n    return geohash.toString();\n  }\n\n","sourceOld":"\tpublic static String encode(double latitude, double longitude){\n\t\tdouble[] lat_interval = {-90.0 ,  90.0};\n\t\tdouble[] lon_interval = {-180.0, 180.0};\n\t\t\t\n\t\tStringBuilder geohash = new StringBuilder();\n\t\tboolean is_even = true;\n\t\tint bit = 0, ch = 0;\n\t\t\n\t\twhile(geohash.length() < precision){\n\t\t\tdouble mid = 0.0;\n\t\t\tif(is_even){\n\t\t\t\tmid = (lon_interval[0] + lon_interval[1]) / 2;\n\t\t\t\tif (longitude > mid){\n\t\t\t\t\tch |= bits[bit];\n\t\t\t\t\tlon_interval[0] = mid;\n\t\t\t\t} else {\n\t\t\t\t\tlon_interval[1] = mid;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tmid = (lat_interval[0] + lat_interval[1]) / 2;\n\t\t\t\tif(latitude > mid){\n\t\t\t\t\tch |= bits[bit];\n\t\t\t\t\tlat_interval[0] = mid;\n\t\t\t\t} else {\n\t\t\t\t\tlat_interval[1] = mid;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tis_even = is_even ? false : true;\n\t\t\t\n\t\t\tif (bit  < 4){\n\t\t\t\tbit ++;\n\t\t\t} else {\n\t\t\t\tgeohash.append(_base32[ch]);\n\t\t\t\tbit =0;\n\t\t\t\tch = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn geohash.toString();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/geohash/GeoHashUtils#encode(double,double).mjava","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/geohash/GeoHashUtils#encode(double,double).mjava","sourceNew":"  /**\n   * Encodes the given latitude and longitude into a geohash\n   *\n   * @param latitude Latitude to encode\n   * @param longitude Longitude to encode\n   * @return Geohash encoding of the longitude and latitude\n   */\n  public static String encode(double latitude, double longitude) {\n    double[] latInterval = {-90.0, 90.0};\n    double[] lngInterval = {-180.0, 180.0};\n\n    final StringBuilder geohash = new StringBuilder();\n    boolean isEven = true;\n\n    int bit = 0;\n    int ch = 0;\n\n    while (geohash.length() < PRECISION) {\n      double mid = 0.0;\n      if (isEven) {\n        mid = (lngInterval[0] + lngInterval[1]) / 2D;\n        if (longitude > mid) {\n          ch |= BITS[bit];\n          lngInterval[0] = mid;\n        } else {\n          lngInterval[1] = mid;\n        }\n      } else {\n        mid = (latInterval[0] + latInterval[1]) / 2D;\n        if (latitude > mid) {\n          ch |= BITS[bit];\n          latInterval[0] = mid;\n        } else {\n          latInterval[1] = mid;\n        }\n      }\n\n      isEven = !isEven;\n\n      if (bit < 4) {\n        bit++;\n      } else {\n        geohash.append(BASE_32[ch]);\n        bit = 0;\n        ch = 0;\n      }\n    }\n\n    return geohash.toString();\n  }\n\n","sourceOld":"  /**\n   * Encodes the given latitude and longitude into a geohash\n   *\n   * @param latitude Latitude to encode\n   * @param longitude Longitude to encode\n   * @return Geohash encoding of the longitude and latitude\n   */\n  public static String encode(double latitude, double longitude) {\n    double[] latInterval = {-90.0, 90.0};\n    double[] lngInterval = {-180.0, 180.0};\n\n    final StringBuilder geohash = new StringBuilder();\n    boolean isEven = true;\n\n    int bit = 0;\n    int ch = 0;\n\n    while (geohash.length() < PRECISION) {\n      double mid = 0.0;\n      if (isEven) {\n        mid = (lngInterval[0] + lngInterval[1]) / 2D;\n        if (longitude > mid) {\n          ch |= BITS[bit];\n          lngInterval[0] = mid;\n        } else {\n          lngInterval[1] = mid;\n        }\n      } else {\n        mid = (latInterval[0] + latInterval[1]) / 2D;\n        if (latitude > mid) {\n          ch |= BITS[bit];\n          latInterval[0] = mid;\n        } else {\n          latInterval[1] = mid;\n        }\n      }\n\n      isEven = !isEven;\n\n      if (bit < 4) {\n        bit++;\n      } else {\n        geohash.append(BASE_32[ch]);\n        bit = 0;\n        ch = 0;\n      }\n    }\n\n    return geohash.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0ffa9f5c51e7bbe3489bc384c0397cf904787438":["0584ee2be458044f19041ac184df00c69c632b4d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0ffa9f5c51e7bbe3489bc384c0397cf904787438"],"0584ee2be458044f19041ac184df00c69c632b4d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0ffa9f5c51e7bbe3489bc384c0397cf904787438":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0584ee2be458044f19041ac184df00c69c632b4d"],"0584ee2be458044f19041ac184df00c69c632b4d":["0ffa9f5c51e7bbe3489bc384c0397cf904787438"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}