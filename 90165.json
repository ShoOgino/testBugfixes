{"path":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#createCT(String).mjava","commits":[{"id":"7c9cc1cf78edc774cdf339bab3ae62f077929607","date":1072205195,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#createCT(String).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Creates CT (changed term) , substituting * '�' and '�' for 'a~' and 'o~'.\n\t */\n\tprivate void createCT( String term ) {\n    CT = changeTerm(term) ;\n\n    if (CT.length() < 2) return ;\n    \n    // if the first character is ... , remove it\n    if ((CT.charAt(0) == '\"')  ||\n        (CT.charAt(0) == '\\'') ||\n        (CT.charAt(0) == '-')  ||\n        (CT.charAt(0) == ',')  ||\n        (CT.charAt(0) == ';')  ||\n        (CT.charAt(0) == '.')  ||\n        (CT.charAt(0) == '?')  ||\n        (CT.charAt(0) == '!')\n        ) {\n        CT = CT.substring(1);\n    }\n\n    if (CT.length() < 2) return ;\n    \n    // if the last character is ... , remove it\n    if ((CT.charAt(CT.length()-1) == '-') ||\n        (CT.charAt(CT.length()-1) == ',') ||\n        (CT.charAt(CT.length()-1) == ';') ||\n        (CT.charAt(CT.length()-1) == '.') ||\n        (CT.charAt(CT.length()-1) == '?') ||\n        (CT.charAt(CT.length()-1) == '!') ||\n        (CT.charAt(CT.length()-1) == '\\'') ||\n        (CT.charAt(CT.length()-1) == '\"')\n        ) {\n        CT = CT.substring(0,CT.length()-1);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"747512c37185cf79a1d812f5dd2c324fce4fc155","date":1074547356,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#createCT(String).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#createCT(String).mjava","sourceNew":"\t/**\n\t * Creates CT (changed term) , substituting * '�' and '�' for 'a~' and 'o~'.\n\t */\n\tprivate void createCT( String term ) {\n    CT = changeTerm(term) ;\n\n    if (CT.length() < 2) return ;\n\n    // if the first character is ... , remove it\n    if ((CT.charAt(0) == '\"')  ||\n        (CT.charAt(0) == '\\'') ||\n        (CT.charAt(0) == '-')  ||\n        (CT.charAt(0) == ',')  ||\n        (CT.charAt(0) == ';')  ||\n        (CT.charAt(0) == '.')  ||\n        (CT.charAt(0) == '?')  ||\n        (CT.charAt(0) == '!')\n        ) {\n        CT = CT.substring(1);\n    }\n\n    if (CT.length() < 2) return ;\n\n    // if the last character is ... , remove it\n    if ((CT.charAt(CT.length()-1) == '-') ||\n        (CT.charAt(CT.length()-1) == ',') ||\n        (CT.charAt(CT.length()-1) == ';') ||\n        (CT.charAt(CT.length()-1) == '.') ||\n        (CT.charAt(CT.length()-1) == '?') ||\n        (CT.charAt(CT.length()-1) == '!') ||\n        (CT.charAt(CT.length()-1) == '\\'') ||\n        (CT.charAt(CT.length()-1) == '\"')\n        ) {\n        CT = CT.substring(0,CT.length()-1);\n    }\n  }\n\n","sourceOld":"\t/**\n\t * Creates CT (changed term) , substituting * '�' and '�' for 'a~' and 'o~'.\n\t */\n\tprivate void createCT( String term ) {\n    CT = changeTerm(term) ;\n\n    if (CT.length() < 2) return ;\n    \n    // if the first character is ... , remove it\n    if ((CT.charAt(0) == '\"')  ||\n        (CT.charAt(0) == '\\'') ||\n        (CT.charAt(0) == '-')  ||\n        (CT.charAt(0) == ',')  ||\n        (CT.charAt(0) == ';')  ||\n        (CT.charAt(0) == '.')  ||\n        (CT.charAt(0) == '?')  ||\n        (CT.charAt(0) == '!')\n        ) {\n        CT = CT.substring(1);\n    }\n\n    if (CT.length() < 2) return ;\n    \n    // if the last character is ... , remove it\n    if ((CT.charAt(CT.length()-1) == '-') ||\n        (CT.charAt(CT.length()-1) == ',') ||\n        (CT.charAt(CT.length()-1) == ';') ||\n        (CT.charAt(CT.length()-1) == '.') ||\n        (CT.charAt(CT.length()-1) == '?') ||\n        (CT.charAt(CT.length()-1) == '!') ||\n        (CT.charAt(CT.length()-1) == '\\'') ||\n        (CT.charAt(CT.length()-1) == '\"')\n        ) {\n        CT = CT.substring(0,CT.length()-1);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cceb65761310615e47fe52790723491553ab730","date":1092839448,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#createCT(String).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#createCT(String).mjava","sourceNew":"\t/**\n\t * Creates CT (changed term) , substituting * 'ã' and 'õ' for 'a~' and 'o~'.\n\t */\n\tprivate void createCT( String term ) {\n    CT = changeTerm(term) ;\n\n    if (CT.length() < 2) return ;\n\n    // if the first character is ... , remove it\n    if ((CT.charAt(0) == '\"')  ||\n        (CT.charAt(0) == '\\'') ||\n        (CT.charAt(0) == '-')  ||\n        (CT.charAt(0) == ',')  ||\n        (CT.charAt(0) == ';')  ||\n        (CT.charAt(0) == '.')  ||\n        (CT.charAt(0) == '?')  ||\n        (CT.charAt(0) == '!')\n        ) {\n        CT = CT.substring(1);\n    }\n\n    if (CT.length() < 2) return ;\n\n    // if the last character is ... , remove it\n    if ((CT.charAt(CT.length()-1) == '-') ||\n        (CT.charAt(CT.length()-1) == ',') ||\n        (CT.charAt(CT.length()-1) == ';') ||\n        (CT.charAt(CT.length()-1) == '.') ||\n        (CT.charAt(CT.length()-1) == '?') ||\n        (CT.charAt(CT.length()-1) == '!') ||\n        (CT.charAt(CT.length()-1) == '\\'') ||\n        (CT.charAt(CT.length()-1) == '\"')\n        ) {\n        CT = CT.substring(0,CT.length()-1);\n    }\n  }\n\n","sourceOld":"\t/**\n\t * Creates CT (changed term) , substituting * '�' and '�' for 'a~' and 'o~'.\n\t */\n\tprivate void createCT( String term ) {\n    CT = changeTerm(term) ;\n\n    if (CT.length() < 2) return ;\n\n    // if the first character is ... , remove it\n    if ((CT.charAt(0) == '\"')  ||\n        (CT.charAt(0) == '\\'') ||\n        (CT.charAt(0) == '-')  ||\n        (CT.charAt(0) == ',')  ||\n        (CT.charAt(0) == ';')  ||\n        (CT.charAt(0) == '.')  ||\n        (CT.charAt(0) == '?')  ||\n        (CT.charAt(0) == '!')\n        ) {\n        CT = CT.substring(1);\n    }\n\n    if (CT.length() < 2) return ;\n\n    // if the last character is ... , remove it\n    if ((CT.charAt(CT.length()-1) == '-') ||\n        (CT.charAt(CT.length()-1) == ',') ||\n        (CT.charAt(CT.length()-1) == ';') ||\n        (CT.charAt(CT.length()-1) == '.') ||\n        (CT.charAt(CT.length()-1) == '?') ||\n        (CT.charAt(CT.length()-1) == '!') ||\n        (CT.charAt(CT.length()-1) == '\\'') ||\n        (CT.charAt(CT.length()-1) == '\"')\n        ) {\n        CT = CT.substring(0,CT.length()-1);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#createCT(String).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#createCT(String).mjava","sourceNew":"\t/**\n\t * Creates CT (changed term) , substituting * 'ã' and 'õ' for 'a~' and 'o~'.\n\t */\n\tprivate void createCT( String term ) {\n    CT = changeTerm(term) ;\n\n    if (CT.length() < 2) return ;\n\n    // if the first character is ... , remove it\n    if ((CT.charAt(0) == '\"')  ||\n        (CT.charAt(0) == '\\'') ||\n        (CT.charAt(0) == '-')  ||\n        (CT.charAt(0) == ',')  ||\n        (CT.charAt(0) == ';')  ||\n        (CT.charAt(0) == '.')  ||\n        (CT.charAt(0) == '?')  ||\n        (CT.charAt(0) == '!')\n        ) {\n        CT = CT.substring(1);\n    }\n\n    if (CT.length() < 2) return ;\n\n    // if the last character is ... , remove it\n    if ((CT.charAt(CT.length()-1) == '-') ||\n        (CT.charAt(CT.length()-1) == ',') ||\n        (CT.charAt(CT.length()-1) == ';') ||\n        (CT.charAt(CT.length()-1) == '.') ||\n        (CT.charAt(CT.length()-1) == '?') ||\n        (CT.charAt(CT.length()-1) == '!') ||\n        (CT.charAt(CT.length()-1) == '\\'') ||\n        (CT.charAt(CT.length()-1) == '\"')\n        ) {\n        CT = CT.substring(0,CT.length()-1);\n    }\n  }\n\n","sourceOld":"\t/**\n\t * Creates CT (changed term) , substituting * 'ã' and 'õ' for 'a~' and 'o~'.\n\t */\n\tprivate void createCT( String term ) {\n    CT = changeTerm(term) ;\n\n    if (CT.length() < 2) return ;\n\n    // if the first character is ... , remove it\n    if ((CT.charAt(0) == '\"')  ||\n        (CT.charAt(0) == '\\'') ||\n        (CT.charAt(0) == '-')  ||\n        (CT.charAt(0) == ',')  ||\n        (CT.charAt(0) == ';')  ||\n        (CT.charAt(0) == '.')  ||\n        (CT.charAt(0) == '?')  ||\n        (CT.charAt(0) == '!')\n        ) {\n        CT = CT.substring(1);\n    }\n\n    if (CT.length() < 2) return ;\n\n    // if the last character is ... , remove it\n    if ((CT.charAt(CT.length()-1) == '-') ||\n        (CT.charAt(CT.length()-1) == ',') ||\n        (CT.charAt(CT.length()-1) == ';') ||\n        (CT.charAt(CT.length()-1) == '.') ||\n        (CT.charAt(CT.length()-1) == '?') ||\n        (CT.charAt(CT.length()-1) == '!') ||\n        (CT.charAt(CT.length()-1) == '\\'') ||\n        (CT.charAt(CT.length()-1) == '\"')\n        ) {\n        CT = CT.substring(0,CT.length()-1);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"747512c37185cf79a1d812f5dd2c324fce4fc155":["7c9cc1cf78edc774cdf339bab3ae62f077929607"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["1cceb65761310615e47fe52790723491553ab730"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cceb65761310615e47fe52790723491553ab730":["747512c37185cf79a1d812f5dd2c324fce4fc155"],"7c9cc1cf78edc774cdf339bab3ae62f077929607":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"]},"commit2Childs":{"747512c37185cf79a1d812f5dd2c324fce4fc155":["1cceb65761310615e47fe52790723491553ab730"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c9cc1cf78edc774cdf339bab3ae62f077929607"],"1cceb65761310615e47fe52790723491553ab730":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"7c9cc1cf78edc774cdf339bab3ae62f077929607":["747512c37185cf79a1d812f5dd2c324fce4fc155"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}