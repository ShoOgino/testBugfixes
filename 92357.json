{"path":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getSorted(FieldInfo).mjava","commits":[{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getSorted(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getSorted(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final int valueCount = (int) binaries.get(field.number).count;\n    final BinaryDocValues binary = getBinary(field);\n    NumericEntry entry = ords.get(field.number);\n    final LongValues ordinals = getNumeric(entry);\n    \n    return new SortedDocValues() {\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) ordinals.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return (int) ((CompressedBinaryDocValues)binary).lookupTerm(key);\n        } else {\n        return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues)binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final int valueCount = (int) binaries.get(field.number).count;\n    final BinaryDocValues binary = getBinary(field);\n    NumericEntry entry = ords.get(field.number);\n    final LongValues ordinals = getNumeric(entry);\n    \n    return new SortedDocValues() {\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) ordinals.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return (int) ((CompressedBinaryDocValues)binary).lookupTerm(key);\n        } else {\n        return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues)binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getSorted(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getSorted(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final int valueCount = (int) binaries.get(field.number).count;\n    final BinaryDocValues binary = getBinary(field);\n    NumericEntry entry = ords.get(field.number);\n    final LongValues ordinals = getNumeric(entry);\n    \n    return new SortedDocValues() {\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) ordinals.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return (int) ((CompressedBinaryDocValues)binary).lookupTerm(key);\n        } else {\n        return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues)binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final int valueCount = (int) binaries.get(field.number).count;\n    final BinaryDocValues binary = getBinary(field);\n    NumericEntry entry = ords.get(field.number);\n    final LongValues ordinals = getNumeric(entry);\n    \n    return new SortedDocValues() {\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) ordinals.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return (int) ((CompressedBinaryDocValues)binary).lookupTerm(key);\n        } else {\n        return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues)binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0936055c0eed56be3e4ae5c9db5b0e355390736a","date":1410874015,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getSorted(FieldInfo).mjava","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getSorted(FieldInfo).mjava","sourceNew":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final int valueCount = (int) binaries.get(field.name).count;\n    final BinaryDocValues binary = getBinary(field);\n    NumericEntry entry = ords.get(field.name);\n    final LongValues ordinals = getNumeric(entry);\n    \n    return new SortedDocValues() {\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) ordinals.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return (int) ((CompressedBinaryDocValues)binary).lookupTerm(key);\n        } else {\n        return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues)binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final int valueCount = (int) binaries.get(field.number).count;\n    final BinaryDocValues binary = getBinary(field);\n    NumericEntry entry = ords.get(field.number);\n    final LongValues ordinals = getNumeric(entry);\n    \n    return new SortedDocValues() {\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) ordinals.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return (int) ((CompressedBinaryDocValues)binary).lookupTerm(key);\n        } else {\n        return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues)binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71387d8cb6923eb831b17a8b734608ba2e21c653","date":1414126093,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getSorted(FieldInfo).mjava","sourceNew":null,"sourceOld":"  @Override\n  public SortedDocValues getSorted(FieldInfo field) throws IOException {\n    final int valueCount = (int) binaries.get(field.name).count;\n    final BinaryDocValues binary = getBinary(field);\n    NumericEntry entry = ords.get(field.name);\n    final LongValues ordinals = getNumeric(entry);\n    \n    return new SortedDocValues() {\n\n      @Override\n      public int getOrd(int docID) {\n        return (int) ordinals.get(docID);\n      }\n\n      @Override\n      public BytesRef lookupOrd(int ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public int getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public int lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return (int) ((CompressedBinaryDocValues)binary).lookupTerm(key);\n        } else {\n        return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues)binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0936055c0eed56be3e4ae5c9db5b0e355390736a":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["0936055c0eed56be3e4ae5c9db5b0e355390736a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"0936055c0eed56be3e4ae5c9db5b0e355390736a":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["0936055c0eed56be3e4ae5c9db5b0e355390736a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}