{"path":"lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.Writer#advancePool(int).mjava","commits":[{"id":"3b7a068f550e13e49517c6899cc3b94c8eeb72e5","date":1309354772,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.Writer#advancePool(int).mjava","pathOld":"/dev/null","sourceNew":"    private final void advancePool(int docID) {\n      assert !merge;\n      long numBytes = (docID - (lastDocID+1))*size;\n      while(numBytes > 0) {\n        if (numBytes + pool.byteUpto < byteBlockSize) {\n          pool.byteUpto += numBytes;\n          numBytes = 0;\n        } else {\n          numBytes -= byteBlockSize - pool.byteUpto;\n          pool.nextBuffer();\n        }\n      }\n      assert numBytes == 0;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.Writer#advancePool(int).mjava","pathOld":"/dev/null","sourceNew":"    private final void advancePool(int docID) {\n      assert !merge;\n      long numBytes = (docID - (lastDocID+1))*size;\n      while(numBytes > 0) {\n        if (numBytes + pool.byteUpto < byteBlockSize) {\n          pool.byteUpto += numBytes;\n          numBytes = 0;\n        } else {\n          numBytes -= byteBlockSize - pool.byteUpto;\n          pool.nextBuffer();\n        }\n      }\n      assert numBytes == 0;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.Writer#advancePool(int).mjava","pathOld":"/dev/null","sourceNew":"    private final void advancePool(int docID) {\n      assert !merge;\n      long numBytes = (docID - (lastDocID+1))*size;\n      while(numBytes > 0) {\n        if (numBytes + pool.byteUpto < byteBlockSize) {\n          pool.byteUpto += numBytes;\n          numBytes = 0;\n        } else {\n          numBytes -= byteBlockSize - pool.byteUpto;\n          pool.nextBuffer();\n        }\n      }\n      assert numBytes == 0;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85eb75e0c0203e44dcf686f35876cf6080f3a671","date":1317221550,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.FixedBytesWriterBase#advancePool(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.Writer#advancePool(int).mjava","sourceNew":"    private final void advancePool(int docID) {\n      long numBytes = (docID - (lastDocID+1))*size;\n      while(numBytes > 0) {\n        if (numBytes + pool.byteUpto < byteBlockSize) {\n          pool.byteUpto += numBytes;\n          numBytes = 0;\n        } else {\n          numBytes -= byteBlockSize - pool.byteUpto;\n          pool.nextBuffer();\n        }\n      }\n      assert numBytes == 0;\n    }\n\n","sourceOld":"    private final void advancePool(int docID) {\n      assert !merge;\n      long numBytes = (docID - (lastDocID+1))*size;\n      while(numBytes > 0) {\n        if (numBytes + pool.byteUpto < byteBlockSize) {\n          pool.byteUpto += numBytes;\n          numBytes = 0;\n        } else {\n          numBytes -= byteBlockSize - pool.byteUpto;\n          pool.nextBuffer();\n        }\n      }\n      assert numBytes == 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"85eb75e0c0203e44dcf686f35876cf6080f3a671":["3b7a068f550e13e49517c6899cc3b94c8eeb72e5"],"3b7a068f550e13e49517c6899cc3b94c8eeb72e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3b7a068f550e13e49517c6899cc3b94c8eeb72e5"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3b7a068f550e13e49517c6899cc3b94c8eeb72e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["85eb75e0c0203e44dcf686f35876cf6080f3a671"]},"commit2Childs":{"85eb75e0c0203e44dcf686f35876cf6080f3a671":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3b7a068f550e13e49517c6899cc3b94c8eeb72e5":["85eb75e0c0203e44dcf686f35876cf6080f3a671","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b7a068f550e13e49517c6899cc3b94c8eeb72e5","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}