{"path":"solr/core/src/test/org/apache/solr/update/processor/UUIDUpdateProcessorFallbackTest#processAdd(String,SolrInputDocument).mjava","commits":[{"id":"f904d036d49909c2dc5dc9e0e1c3ae8c71c9ad18","date":1406652386,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/UUIDUpdateProcessorFallbackTest#processAdd(String,SolrInputDocument).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Runs a document through the specified chain, and returns the final \n   * document used when the chain is completed (NOTE: some chains may \n   * modify the document in place\n   */\n  SolrInputDocument processAdd(final String chain, \n                               final SolrInputDocument docIn) \n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest\n      (core, new ModifiableSolrParams());\n    try {\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(req,rsp));\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      processor.processAdd(cmd);\n\n      return cmd.solrDoc;\n    } finally {\n      SolrRequestInfo.clearRequestInfo();\n      req.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"701a87b43e511b5f16b96d82d67bfa1409240b27","date":1501141027,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/UUIDUpdateProcessorFallbackTest#processAdd(String,SolrInputDocument).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/UUIDUpdateProcessorFallbackTest#processAdd(String,SolrInputDocument).mjava","sourceNew":"  /**\n   * Runs a document through the specified chain, and returns the final\n   * document used when the chain is completed (NOTE: some chains may\n   * modify the document in place\n   */\n\n  SolrInputDocument processAdd(final String chain,\n                               final SolrInputDocument docIn) throws IOException {\n    return processAdd(chain, docIn, params());\n  }\n\n","sourceOld":"  /**\n   * Runs a document through the specified chain, and returns the final \n   * document used when the chain is completed (NOTE: some chains may \n   * modify the document in place\n   */\n  SolrInputDocument processAdd(final String chain, \n                               final SolrInputDocument docIn) \n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest\n      (core, new ModifiableSolrParams());\n    try {\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(req,rsp));\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      processor.processAdd(cmd);\n\n      return cmd.solrDoc;\n    } finally {\n      SolrRequestInfo.clearRequestInfo();\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/UUIDUpdateProcessorFallbackTest#processAdd(String,SolrInputDocument).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/UUIDUpdateProcessorFallbackTest#processAdd(String,SolrInputDocument).mjava","sourceNew":"  /**\n   * Runs a document through the specified chain, and returns the final\n   * document used when the chain is completed (NOTE: some chains may\n   * modify the document in place\n   */\n\n  SolrInputDocument processAdd(final String chain,\n                               final SolrInputDocument docIn) throws IOException {\n    return processAdd(chain, docIn, params());\n  }\n\n","sourceOld":"  /**\n   * Runs a document through the specified chain, and returns the final \n   * document used when the chain is completed (NOTE: some chains may \n   * modify the document in place\n   */\n  SolrInputDocument processAdd(final String chain, \n                               final SolrInputDocument docIn) \n    throws IOException {\n\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n\n    SolrQueryRequest req = new LocalSolrQueryRequest\n      (core, new ModifiableSolrParams());\n    try {\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(req,rsp));\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.solrDoc = docIn;\n\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      processor.processAdd(cmd);\n\n      return cmd.solrDoc;\n    } finally {\n      SolrRequestInfo.clearRequestInfo();\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["f904d036d49909c2dc5dc9e0e1c3ae8c71c9ad18","701a87b43e511b5f16b96d82d67bfa1409240b27"],"f904d036d49909c2dc5dc9e0e1c3ae8c71c9ad18":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"701a87b43e511b5f16b96d82d67bfa1409240b27":["f904d036d49909c2dc5dc9e0e1c3ae8c71c9ad18"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["701a87b43e511b5f16b96d82d67bfa1409240b27"]},"commit2Childs":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"f904d036d49909c2dc5dc9e0e1c3ae8c71c9ad18":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","701a87b43e511b5f16b96d82d67bfa1409240b27"],"701a87b43e511b5f16b96d82d67bfa1409240b27":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f904d036d49909c2dc5dc9e0e1c3ae8c71c9ad18"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}