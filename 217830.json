{"path":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPoint#testEncodeEdgeCases().mjava","commits":[{"id":"bd6e28813bd3665a7c29cc07d0f32db701300168","date":1459966694,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPoint#testEncodeEdgeCases().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPoint#testEncodeDecodeExtremeValuesCeil().mjava","sourceNew":"  // check edge/interesting cases explicitly\n  public void testEncodeEdgeCases() {\n    assertEquals(Integer.MIN_VALUE, LatLonPoint.encodeLatitude(-90.0));\n    assertEquals(Integer.MIN_VALUE, LatLonPoint.encodeLatitudeCeil(-90.0));\n    assertEquals(Integer.MAX_VALUE, LatLonPoint.encodeLatitude(90.0));\n    assertEquals(Integer.MAX_VALUE, LatLonPoint.encodeLatitudeCeil(90.0));\n    \n    assertEquals(Integer.MIN_VALUE, LatLonPoint.encodeLongitude(-180.0));\n    assertEquals(Integer.MIN_VALUE, LatLonPoint.encodeLongitudeCeil(-180.0));\n    assertEquals(Integer.MAX_VALUE, LatLonPoint.encodeLongitude(180.0));\n    assertEquals(Integer.MAX_VALUE, LatLonPoint.encodeLongitudeCeil(180.0));\n  }\n\n","sourceOld":"  public void testEncodeDecodeExtremeValuesCeil() throws Exception {\n    assertEquals(Integer.MIN_VALUE, LatLonPoint.encodeLatitudeCeil(-90.0));\n    assertEquals(0, LatLonPoint.encodeLatitudeCeil(0.0));\n    assertEquals(Integer.MAX_VALUE, LatLonPoint.encodeLatitudeCeil(90.0));\n\n    assertEquals(Integer.MIN_VALUE, LatLonPoint.encodeLongitudeCeil(-180.0));\n    assertEquals(0, LatLonPoint.encodeLatitudeCeil(0.0));\n    assertEquals(Integer.MAX_VALUE, LatLonPoint.encodeLongitudeCeil(180.0));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6284684320a9808c41a5e43de958b2da22f89bd","date":1459977490,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPoint#testEncodeEdgeCases().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPoint#testEncodeDecodeExtremeValuesCeil().mjava","sourceNew":"  // check edge/interesting cases explicitly\n  public void testEncodeEdgeCases() {\n    assertEquals(Integer.MIN_VALUE, LatLonPoint.encodeLatitude(-90.0));\n    assertEquals(Integer.MIN_VALUE, LatLonPoint.encodeLatitudeCeil(-90.0));\n    assertEquals(Integer.MAX_VALUE, LatLonPoint.encodeLatitude(90.0));\n    assertEquals(Integer.MAX_VALUE, LatLonPoint.encodeLatitudeCeil(90.0));\n    \n    assertEquals(Integer.MIN_VALUE, LatLonPoint.encodeLongitude(-180.0));\n    assertEquals(Integer.MIN_VALUE, LatLonPoint.encodeLongitudeCeil(-180.0));\n    assertEquals(Integer.MAX_VALUE, LatLonPoint.encodeLongitude(180.0));\n    assertEquals(Integer.MAX_VALUE, LatLonPoint.encodeLongitudeCeil(180.0));\n  }\n\n","sourceOld":"  public void testEncodeDecodeExtremeValuesCeil() throws Exception {\n    assertEquals(Integer.MIN_VALUE, LatLonPoint.encodeLatitudeCeil(-90.0));\n    assertEquals(0, LatLonPoint.encodeLatitudeCeil(0.0));\n    assertEquals(Integer.MAX_VALUE, LatLonPoint.encodeLatitudeCeil(90.0));\n\n    assertEquals(Integer.MIN_VALUE, LatLonPoint.encodeLongitudeCeil(-180.0));\n    assertEquals(0, LatLonPoint.encodeLatitudeCeil(0.0));\n    assertEquals(Integer.MAX_VALUE, LatLonPoint.encodeLongitudeCeil(180.0));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ed48f9723ad1b29c351ea43b5a2c8f90c3a45737","date":1460056040,"type":4,"author":"nknize","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPoint#testEncodeEdgeCases().mjava","sourceNew":null,"sourceOld":"  // check edge/interesting cases explicitly\n  public void testEncodeEdgeCases() {\n    assertEquals(Integer.MIN_VALUE, LatLonPoint.encodeLatitude(-90.0));\n    assertEquals(Integer.MIN_VALUE, LatLonPoint.encodeLatitudeCeil(-90.0));\n    assertEquals(Integer.MAX_VALUE, LatLonPoint.encodeLatitude(90.0));\n    assertEquals(Integer.MAX_VALUE, LatLonPoint.encodeLatitudeCeil(90.0));\n    \n    assertEquals(Integer.MIN_VALUE, LatLonPoint.encodeLongitude(-180.0));\n    assertEquals(Integer.MIN_VALUE, LatLonPoint.encodeLongitudeCeil(-180.0));\n    assertEquals(Integer.MAX_VALUE, LatLonPoint.encodeLongitude(180.0));\n    assertEquals(Integer.MAX_VALUE, LatLonPoint.encodeLongitudeCeil(180.0));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09f15823cf5eb6e807005579e875e117d8598f95","date":1460066385,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPoint#testEncodeEdgeCases().mjava","sourceNew":null,"sourceOld":"  // check edge/interesting cases explicitly\n  public void testEncodeEdgeCases() {\n    assertEquals(Integer.MIN_VALUE, LatLonPoint.encodeLatitude(-90.0));\n    assertEquals(Integer.MIN_VALUE, LatLonPoint.encodeLatitudeCeil(-90.0));\n    assertEquals(Integer.MAX_VALUE, LatLonPoint.encodeLatitude(90.0));\n    assertEquals(Integer.MAX_VALUE, LatLonPoint.encodeLatitudeCeil(90.0));\n    \n    assertEquals(Integer.MIN_VALUE, LatLonPoint.encodeLongitude(-180.0));\n    assertEquals(Integer.MIN_VALUE, LatLonPoint.encodeLongitudeCeil(-180.0));\n    assertEquals(Integer.MAX_VALUE, LatLonPoint.encodeLongitude(180.0));\n    assertEquals(Integer.MAX_VALUE, LatLonPoint.encodeLongitudeCeil(180.0));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b6284684320a9808c41a5e43de958b2da22f89bd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bd6e28813bd3665a7c29cc07d0f32db701300168"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bd6e28813bd3665a7c29cc07d0f32db701300168":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ed48f9723ad1b29c351ea43b5a2c8f90c3a45737":["b6284684320a9808c41a5e43de958b2da22f89bd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09f15823cf5eb6e807005579e875e117d8598f95"],"09f15823cf5eb6e807005579e875e117d8598f95":["b6284684320a9808c41a5e43de958b2da22f89bd","ed48f9723ad1b29c351ea43b5a2c8f90c3a45737"]},"commit2Childs":{"b6284684320a9808c41a5e43de958b2da22f89bd":["ed48f9723ad1b29c351ea43b5a2c8f90c3a45737","09f15823cf5eb6e807005579e875e117d8598f95"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b6284684320a9808c41a5e43de958b2da22f89bd","bd6e28813bd3665a7c29cc07d0f32db701300168"],"bd6e28813bd3665a7c29cc07d0f32db701300168":["b6284684320a9808c41a5e43de958b2da22f89bd"],"ed48f9723ad1b29c351ea43b5a2c8f90c3a45737":["09f15823cf5eb6e807005579e875e117d8598f95"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"09f15823cf5eb6e807005579e875e117d8598f95":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}