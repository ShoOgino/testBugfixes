{"path":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepPostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,int).mjava","commits":[{"id":"02331260bb246364779cb6f04919ca47900d01bb","date":1343749884,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepPostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepPostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,boolean).mjava","sourceNew":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","sourceOld":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsEnum reuse, boolean needsFreqs) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepPostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepPostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/SepPostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepPostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,int).mjava","sourceNew":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","sourceOld":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["02331260bb246364779cb6f04919ca47900d01bb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","02331260bb246364779cb6f04919ca47900d01bb"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","02331260bb246364779cb6f04919ca47900d01bb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"02331260bb246364779cb6f04919ca47900d01bb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","02331260bb246364779cb6f04919ca47900d01bb"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"02331260bb246364779cb6f04919ca47900d01bb":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}