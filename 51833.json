{"path":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/DirectSource#DirectSource(IndexInput,ValueType).mjava","commits":[{"id":"dbb488b81f8874886ab2f13101412e2548029b9d","date":1323441741,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/DirectSource#DirectSource(IndexInput,ValueType).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/DirectSource#DirectSource(IndexInput,ValueType).mjava","sourceNew":"  public DirectSource(IndexInput input, ValueType type) {\n    super(type);\n    this.data = input;\n    baseOffset = input.getFilePointer();\n    switch (type) {\n    case FIXED_INTS_16:\n      toNumeric = new ShortToLong();\n      break;\n    case FLOAT_32:\n    case FIXED_INTS_32:\n      toNumeric = new IntToLong();\n      break;\n    case FIXED_INTS_8:\n      toNumeric = new ByteToLong();\n      break;\n    default:\n      toNumeric = new LongToLong();\n    }\n  }\n\n","sourceOld":"  public DirectSource(IndexInput input, ValueType type) {\n    super(type);\n    this.data = input;\n    baseOffset = input.getFilePointer();\n    switch (type) {\n    case FIXED_INTS_16:\n      toNumeric = new ShortToLong();\n      break;\n    case FLOAT_32:\n    case FIXED_INTS_32:\n      toNumeric = new IntToLong();\n      break;\n    case FIXED_INTS_8:\n      toNumeric = new ByteToLong();\n      break;\n    default:\n      toNumeric = new LongToLong();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","date":1323449025,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/DirectSource#DirectSource(IndexInput,Type).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/DirectSource#DirectSource(IndexInput,ValueType).mjava","sourceNew":"  public DirectSource(IndexInput input, Type type) {\n    super(type);\n    this.data = input;\n    baseOffset = input.getFilePointer();\n    switch (type) {\n    case FIXED_INTS_16:\n      toNumeric = new ShortToLong();\n      break;\n    case FLOAT_32:\n    case FIXED_INTS_32:\n      toNumeric = new IntToLong();\n      break;\n    case FIXED_INTS_8:\n      toNumeric = new ByteToLong();\n      break;\n    default:\n      toNumeric = new LongToLong();\n    }\n  }\n\n","sourceOld":"  public DirectSource(IndexInput input, ValueType type) {\n    super(type);\n    this.data = input;\n    baseOffset = input.getFilePointer();\n    switch (type) {\n    case FIXED_INTS_16:\n      toNumeric = new ShortToLong();\n      break;\n    case FLOAT_32:\n    case FIXED_INTS_32:\n      toNumeric = new IntToLong();\n      break;\n    case FIXED_INTS_8:\n      toNumeric = new ByteToLong();\n      break;\n    default:\n      toNumeric = new LongToLong();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dbb488b81f8874886ab2f13101412e2548029b9d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["dbb488b81f8874886ab2f13101412e2548029b9d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"dbb488b81f8874886ab2f13101412e2548029b9d":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dbb488b81f8874886ab2f13101412e2548029b9d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}