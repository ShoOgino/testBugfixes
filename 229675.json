{"path":"solr/core/src/java/org/apache/solr/search/ValueSourceParser.DateValueSourceParser#parse(FunctionQParser).mjava","commits":[{"id":"248f6ecc900c3a5633fd5ca6f564ea8b717720da","date":1588863846,"type":0,"author":"Mike Drob","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/ValueSourceParser.DateValueSourceParser#parse(FunctionQParser).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public ValueSource parse(FunctionQParser fp) throws SyntaxError {\n      String first = fp.parseArg();\n      String second = fp.parseArg();\n      if (first == null) first = \"NOW\";\n\n      Date d1 = getDate(fp, first);\n      ValueSource v1 = d1 == null ? getValueSource(fp, first) : null;\n\n      Date d2 = getDate(fp, second);\n      ValueSource v2 = d2 == null ? getValueSource(fp, second) : null;\n\n      // d     constant\n      // v     field\n      // dd    constant\n      // dv    subtract field from constant\n      // vd    subtract constant from field\n      // vv    subtract fields\n\n      final long ms1 = (d1 == null) ? 0 : d1.getTime();\n      final long ms2 = (d2 == null) ? 0 : d2.getTime();\n\n      // \"d,dd\" handle both constant cases\n\n      if (d1 != null && v2 == null) {\n        return new LongConstValueSource(ms1 - ms2);\n      }\n\n      // \"v\" just the date field\n      if (v1 != null && v2 == null && d2 == null) {\n        return v1;\n      }\n\n\n      // \"dv\"\n      if (d1 != null && v2 != null)\n        return new DualFloatFunction(new LongConstValueSource(ms1), v2) {\n          @Override\n          protected String name() {\n            return \"ms\";\n          }\n\n          @Override\n          protected float func(int doc, FunctionValues aVals, FunctionValues bVals) throws IOException {\n            return ms1 - bVals.longVal(doc);\n          }\n        };\n\n      // \"vd\"\n      if (v1 != null && d2 != null)\n        return new DualFloatFunction(v1, new LongConstValueSource(ms2)) {\n          @Override\n          protected String name() {\n            return \"ms\";\n          }\n\n          @Override\n          protected float func(int doc, FunctionValues aVals, FunctionValues bVals) throws IOException {\n            return aVals.longVal(doc) - ms2;\n          }\n        };\n\n      // \"vv\"\n      if (v1 != null && v2 != null)\n        return new DualFloatFunction(v1, v2) {\n          @Override\n          protected String name() {\n            return \"ms\";\n          }\n\n          @Override\n          protected float func(int doc, FunctionValues aVals, FunctionValues bVals) throws IOException {\n            return aVals.longVal(doc) - bVals.longVal(doc);\n          }\n        };\n\n      return null; // shouldn't happen\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"]},"commit2Childs":{"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}