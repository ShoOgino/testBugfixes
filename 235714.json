{"path":"src/test/org/apache/lucene/analysis/TestTeeTokenFilter.ModuloTokenFilter#incrementToken().mjava","commits":[{"id":"1f7d76c5e8bcee481159c0dbc4aa05f88642c0cc","date":1243692318,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestTeeTokenFilter.ModuloTokenFilter#incrementToken().mjava","pathOld":"src/test/org/apache/lucene/analysis/TeeSinkTokenTest.ModuloTokenFilter#incrementToken().mjava","sourceNew":"    //return every 100 tokens\n    public boolean incrementToken() throws IOException {\n      boolean hasNext;\n      for (hasNext = input.incrementToken();\n           hasNext && count % modCount != 0;\n           hasNext = input.incrementToken()) {\n        count++;\n      }\n      count++;\n      return hasNext;\n    }\n\n","sourceOld":"    //return every 100 tokens\n    public boolean incrementToken() throws IOException {\n      boolean hasNext;\n      for (hasNext = input.incrementToken();\n           hasNext && count % modCount != 0;\n           hasNext = input.incrementToken()) {\n        count++;\n      }\n      count++;\n      return hasNext;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec8b5a20a12931b8d7e616c79c5248ae06cc5568","date":1248471948,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestTeeSinkTokenFilter.ModuloTokenFilter#incrementToken().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestTeeTokenFilter.ModuloTokenFilter#incrementToken().mjava","sourceNew":"    //return every 100 tokens\n    public boolean incrementToken() throws IOException {\n      boolean hasNext;\n      for (hasNext = input.incrementToken();\n           hasNext && count % modCount != 0;\n           hasNext = input.incrementToken()) {\n        count++;\n      }\n      count++;\n      return hasNext;\n    }\n\n","sourceOld":"    //return every 100 tokens\n    public boolean incrementToken() throws IOException {\n      boolean hasNext;\n      for (hasNext = input.incrementToken();\n           hasNext && count % modCount != 0;\n           hasNext = input.incrementToken()) {\n        count++;\n      }\n      count++;\n      return hasNext;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1f7d76c5e8bcee481159c0dbc4aa05f88642c0cc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["1f7d76c5e8bcee481159c0dbc4aa05f88642c0cc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f7d76c5e8bcee481159c0dbc4aa05f88642c0cc"],"1f7d76c5e8bcee481159c0dbc4aa05f88642c0cc":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}