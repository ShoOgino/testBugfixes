{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/DepthOneFacetResultsHandler#DepthOneFacetResultsHandler(TaxonomyReader,FacetRequest,FacetArrays).mjava","commits":[{"id":"571abba77e55fea386a38c0024f72ffa5b37a9ad","date":1360272747,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/DepthOneFacetResultsHandler#DepthOneFacetResultsHandler(TaxonomyReader,FacetRequest,FacetArrays).mjava","pathOld":"/dev/null","sourceNew":"  public DepthOneFacetResultsHandler(TaxonomyReader taxonomyReader, FacetRequest facetRequest, FacetArrays facetArrays) {\n    super(taxonomyReader, facetRequest, facetArrays);\n    assert facetRequest.getDepth() == 1 : \"this handler only computes the top-K facets at depth 1\";\n    assert facetRequest.numResults == facetRequest.getNumLabel() : \"this handler always labels all top-K results\";\n    assert facetRequest.getSortOrder() == SortOrder.DESCENDING : \"this handler always sorts results in descending order\";\n    assert facetRequest.getSortBy() == SortBy.VALUE : \"this handler always sorts results by value\";\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1b5bf344a83eee6236fef469ee1a169e3b9994e4","date":1360485356,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/DepthOneFacetResultsHandler#DepthOneFacetResultsHandler(TaxonomyReader,FacetRequest,FacetArrays).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/DepthOneFacetResultsHandler#DepthOneFacetResultsHandler(TaxonomyReader,FacetRequest,FacetArrays).mjava","sourceNew":"  public DepthOneFacetResultsHandler(TaxonomyReader taxonomyReader, FacetRequest facetRequest, FacetArrays facetArrays) {\n    super(taxonomyReader, facetRequest, facetArrays);\n    assert facetRequest.getDepth() == 1 : \"this handler only computes the top-K facets at depth 1\";\n    assert facetRequest.numResults == facetRequest.getNumLabel() : \"this handler always labels all top-K results\";\n    assert facetRequest.getSortOrder() == SortOrder.DESCENDING : \"this handler always sorts results in descending order\";\n  }\n\n","sourceOld":"  public DepthOneFacetResultsHandler(TaxonomyReader taxonomyReader, FacetRequest facetRequest, FacetArrays facetArrays) {\n    super(taxonomyReader, facetRequest, facetArrays);\n    assert facetRequest.getDepth() == 1 : \"this handler only computes the top-K facets at depth 1\";\n    assert facetRequest.numResults == facetRequest.getNumLabel() : \"this handler always labels all top-K results\";\n    assert facetRequest.getSortOrder() == SortOrder.DESCENDING : \"this handler always sorts results in descending order\";\n    assert facetRequest.getSortBy() == SortBy.VALUE : \"this handler always sorts results by value\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b1c67b5eba853532b31132bf5aef70a3b2be63f","date":1375351298,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/DepthOneFacetResultsHandler#DepthOneFacetResultsHandler(TaxonomyReader,FacetRequest,FacetArrays,OrdinalValueResolver).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/DepthOneFacetResultsHandler#DepthOneFacetResultsHandler(TaxonomyReader,FacetRequest,FacetArrays).mjava","sourceNew":"  public DepthOneFacetResultsHandler(TaxonomyReader taxonomyReader, FacetRequest facetRequest, FacetArrays facetArrays, \n      OrdinalValueResolver resolver) {\n    super(taxonomyReader, facetRequest, resolver, facetArrays);\n    assert facetRequest.getDepth() == 1 : \"this handler only computes the top-K facets at depth 1\";\n    assert facetRequest.numResults == facetRequest.getNumLabel() : \"this handler always labels all top-K results\";\n    assert facetRequest.getSortOrder() == SortOrder.DESCENDING : \"this handler always sorts results in descending order\";\n  }\n\n","sourceOld":"  public DepthOneFacetResultsHandler(TaxonomyReader taxonomyReader, FacetRequest facetRequest, FacetArrays facetArrays) {\n    super(taxonomyReader, facetRequest, facetArrays);\n    assert facetRequest.getDepth() == 1 : \"this handler only computes the top-K facets at depth 1\";\n    assert facetRequest.numResults == facetRequest.getNumLabel() : \"this handler always labels all top-K results\";\n    assert facetRequest.getSortOrder() == SortOrder.DESCENDING : \"this handler always sorts results in descending order\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/DepthOneFacetResultsHandler#DepthOneFacetResultsHandler(TaxonomyReader,FacetRequest,FacetArrays,OrdinalValueResolver).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/DepthOneFacetResultsHandler#DepthOneFacetResultsHandler(TaxonomyReader,FacetRequest,FacetArrays).mjava","sourceNew":"  public DepthOneFacetResultsHandler(TaxonomyReader taxonomyReader, FacetRequest facetRequest, FacetArrays facetArrays, \n      OrdinalValueResolver resolver) {\n    super(taxonomyReader, facetRequest, resolver, facetArrays);\n    assert facetRequest.getDepth() == 1 : \"this handler only computes the top-K facets at depth 1\";\n    assert facetRequest.numResults == facetRequest.getNumLabel() : \"this handler always labels all top-K results\";\n    assert facetRequest.getSortOrder() == SortOrder.DESCENDING : \"this handler always sorts results in descending order\";\n  }\n\n","sourceOld":"  public DepthOneFacetResultsHandler(TaxonomyReader taxonomyReader, FacetRequest facetRequest, FacetArrays facetArrays) {\n    super(taxonomyReader, facetRequest, facetArrays);\n    assert facetRequest.getDepth() == 1 : \"this handler only computes the top-K facets at depth 1\";\n    assert facetRequest.numResults == facetRequest.getNumLabel() : \"this handler always labels all top-K results\";\n    assert facetRequest.getSortOrder() == SortOrder.DESCENDING : \"this handler always sorts results in descending order\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3b1c67b5eba853532b31132bf5aef70a3b2be63f":["1b5bf344a83eee6236fef469ee1a169e3b9994e4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["1b5bf344a83eee6236fef469ee1a169e3b9994e4"],"1b5bf344a83eee6236fef469ee1a169e3b9994e4":["571abba77e55fea386a38c0024f72ffa5b37a9ad"],"571abba77e55fea386a38c0024f72ffa5b37a9ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b1c67b5eba853532b31132bf5aef70a3b2be63f"]},"commit2Childs":{"3b1c67b5eba853532b31132bf5aef70a3b2be63f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["571abba77e55fea386a38c0024f72ffa5b37a9ad"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"1b5bf344a83eee6236fef469ee1a169e3b9994e4":["3b1c67b5eba853532b31132bf5aef70a3b2be63f","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"571abba77e55fea386a38c0024f72ffa5b37a9ad":["1b5bf344a83eee6236fef469ee1a169e3b9994e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}