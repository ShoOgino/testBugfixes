{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/SpecialOperations#reverseBytes(BytesRef).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/SpecialOperations#reverseBytes(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/SpecialOperations#reverseBytes(BytesRef).mjava","sourceNew":"  private static void reverseBytes(BytesRef ref) {\n    if (ref.length <= 1) return;\n    int num = ref.length >> 1;\n    for (int i = ref.offset; i < ( ref.offset + num ); i++) {\n      byte b = ref.bytes[i];\n      ref.bytes[i] = ref.bytes[ref.offset * 2 + ref.length - i - 1];\n      ref.bytes[ref.offset * 2 + ref.length - i - 1] = b;\n    }\n  }\n\n","sourceOld":"  private static void reverseBytes(BytesRef ref) {\n    if (ref.length <= 1) return;\n    int num = ref.length >> 1;\n    for (int i = ref.offset; i < ( ref.offset + num ); i++) {\n      byte b = ref.bytes[i];\n      ref.bytes[i] = ref.bytes[ref.offset * 2 + ref.length - i - 1];\n      ref.bytes[ref.offset * 2 + ref.length - i - 1] = b;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Operations#reverseBytes(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/SpecialOperations#reverseBytes(BytesRef).mjava","sourceNew":"  private static void reverseBytes(BytesRef ref) {\n    if (ref.length <= 1) return;\n    int num = ref.length >> 1;\n    for (int i = ref.offset; i < ( ref.offset + num ); i++) {\n      byte b = ref.bytes[i];\n      ref.bytes[i] = ref.bytes[ref.offset * 2 + ref.length - i - 1];\n      ref.bytes[ref.offset * 2 + ref.length - i - 1] = b;\n    }\n  }\n\n","sourceOld":"  private static void reverseBytes(BytesRef ref) {\n    if (ref.length <= 1) return;\n    int num = ref.length >> 1;\n    for (int i = ref.offset; i < ( ref.offset + num ); i++) {\n      byte b = ref.bytes[i];\n      ref.bytes[i] = ref.bytes[ref.offset * 2 + ref.length - i - 1];\n      ref.bytes[ref.offset * 2 + ref.length - i - 1] = b;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c84485629d80d203608e8975a1139de9933cc38","date":1403166128,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/Operations#reverseBytes(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/SpecialOperations#reverseBytes(BytesRef).mjava","sourceNew":"  private static void reverseBytes(BytesRef ref) {\n    if (ref.length <= 1) return;\n    int num = ref.length >> 1;\n    for (int i = ref.offset; i < ( ref.offset + num ); i++) {\n      byte b = ref.bytes[i];\n      ref.bytes[i] = ref.bytes[ref.offset * 2 + ref.length - i - 1];\n      ref.bytes[ref.offset * 2 + ref.length - i - 1] = b;\n    }\n  }\n\n","sourceOld":"  private static void reverseBytes(BytesRef ref) {\n    if (ref.length <= 1) return;\n    int num = ref.length >> 1;\n    for (int i = ref.offset; i < ( ref.offset + num ); i++) {\n      byte b = ref.bytes[i];\n      ref.bytes[i] = ref.bytes[ref.offset * 2 + ref.length - i - 1];\n      ref.bytes[ref.offset * 2 + ref.length - i - 1] = b;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5c84485629d80d203608e8975a1139de9933cc38":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c84485629d80d203608e8975a1139de9933cc38"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","5c84485629d80d203608e8975a1139de9933cc38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["5c84485629d80d203608e8975a1139de9933cc38"],"5c84485629d80d203608e8975a1139de9933cc38":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}