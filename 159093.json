{"path":"solr/core/src/test/org/apache/solr/rest/schema/analysis/TestManagedStopFilterFactory#testCanHandleDecodingAndEncodingForStopwords().mjava","commits":[{"id":"1165f9fd19c77fc852c215fb291f6c07f74fa7c6","date":1407361840,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/analysis/TestManagedStopFilterFactory#testCanHandleDecodingAndEncodingForStopwords().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Can we add and remove stopwords with umlauts\n   */\n  @Test\n  public void testCanHandleDecodingAndEncodingForStopwords() throws Exception  {\n    String endpoint = \"/schema/analysis/stopwords/german\";\n\n    //initially it should not exist\n    assertJQ(endpoint + \"/schön\", \"/error/code==404\");\n\n    //now we put a stopword with an umlaut\n    assertJPut(endpoint,\n        JSONUtil.toJSON(Arrays.asList(\"schön\")),\n        \"/responseHeader/status==0\");\n\n    //let's check if it exists\n    assertJQ(endpoint + \"/schön\", \"/schön=='schön'\");\n\n    //now let's remove it\n    assertJDelete(endpoint + \"/schön\", \"/responseHeader/status==0\");\n\n    //and of it is unavailable again\n    assertJQ(endpoint + \"/schön\", \"/error/code==404\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3714bcf66a68a1600e9dd11442fc1b33b62ef088","date":1556832005,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/analysis/TestManagedStopFilterFactory#testCanHandleDecodingAndEncodingForStopwords().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/analysis/TestManagedStopFilterFactory#testCanHandleDecodingAndEncodingForStopwords().mjava","sourceNew":"  /**\n   * Can we add and remove stopwords with umlauts\n   */\n  @Test\n  public void testCanHandleDecodingAndEncodingForStopwords() throws Exception  {\n    String endpoint = \"/schema/analysis/stopwords/german\";\n\n    //initially it should not exist\n    assertJQ(endpoint + \"/schön\", \"/error/code==404\");\n\n    //now we put a stopword with an umlaut\n    assertJPut(endpoint,\n        Utils.toJSONString(Arrays.asList(\"schön\")),\n        \"/responseHeader/status==0\");\n\n    //let's check if it exists\n    assertJQ(endpoint + \"/schön\", \"/schön=='schön'\");\n\n    //now let's remove it\n    assertJDelete(endpoint + \"/schön\", \"/responseHeader/status==0\");\n\n    //and of it is unavailable again\n    assertJQ(endpoint + \"/schön\", \"/error/code==404\");\n  }\n\n","sourceOld":"  /**\n   * Can we add and remove stopwords with umlauts\n   */\n  @Test\n  public void testCanHandleDecodingAndEncodingForStopwords() throws Exception  {\n    String endpoint = \"/schema/analysis/stopwords/german\";\n\n    //initially it should not exist\n    assertJQ(endpoint + \"/schön\", \"/error/code==404\");\n\n    //now we put a stopword with an umlaut\n    assertJPut(endpoint,\n        JSONUtil.toJSON(Arrays.asList(\"schön\")),\n        \"/responseHeader/status==0\");\n\n    //let's check if it exists\n    assertJQ(endpoint + \"/schön\", \"/schön=='schön'\");\n\n    //now let's remove it\n    assertJDelete(endpoint + \"/schön\", \"/responseHeader/status==0\");\n\n    //and of it is unavailable again\n    assertJQ(endpoint + \"/schön\", \"/error/code==404\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1165f9fd19c77fc852c215fb291f6c07f74fa7c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3714bcf66a68a1600e9dd11442fc1b33b62ef088":["1165f9fd19c77fc852c215fb291f6c07f74fa7c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3714bcf66a68a1600e9dd11442fc1b33b62ef088"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1165f9fd19c77fc852c215fb291f6c07f74fa7c6"],"1165f9fd19c77fc852c215fb291f6c07f74fa7c6":["3714bcf66a68a1600e9dd11442fc1b33b62ef088"],"3714bcf66a68a1600e9dd11442fc1b33b62ef088":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}