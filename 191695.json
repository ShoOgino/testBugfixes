{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BinaryRequestWriter#getContentWriter(SolrRequest).mjava","commits":[{"id":"97bcd657104d24ce5e89db102939e68a6784bdda","date":1509417991,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BinaryRequestWriter#getContentWriter(SolrRequest).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public ContentWriter getContentWriter(SolrRequest req) {\n    if (req instanceof UpdateRequest) {\n      UpdateRequest updateRequest = (UpdateRequest) req;\n      if (isNull(updateRequest.getDocuments()) &&\n          isNull(updateRequest.getDeleteByIdMap()) &&\n          isNull(updateRequest.getDeleteQuery())\n          && (updateRequest.getDocIterator() == null)) {\n        return null;\n      }\n      return new ContentWriter() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n          new JavaBinUpdateRequestCodec().marshal(updateRequest, os);\n        }\n\n        @Override\n        public String getContentType() {\n          return \"application/javabin\";\n        }\n      };\n    } else {\n      return super.getContentWriter(req);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6b588aaddc61538b71ed5af88704f9949c060fe","date":1509429840,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BinaryRequestWriter#getContentWriter(SolrRequest).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BinaryRequestWriter#getContentWriter(SolrRequest).mjava","sourceNew":"  @Override\n  public ContentWriter getContentWriter(SolrRequest req) {\n    if (req instanceof UpdateRequest) {\n      UpdateRequest updateRequest = (UpdateRequest) req;\n      if (isEmpty(updateRequest)) return null;\n      return new ContentWriter() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n          new JavaBinUpdateRequestCodec().marshal(updateRequest, os);\n        }\n\n        @Override\n        public String getContentType() {\n          return \"application/javabin\";\n        }\n      };\n    } else {\n      return super.getContentWriter(req);\n    }\n  }\n\n","sourceOld":"  @Override\n  public ContentWriter getContentWriter(SolrRequest req) {\n    if (req instanceof UpdateRequest) {\n      UpdateRequest updateRequest = (UpdateRequest) req;\n      if (isNull(updateRequest.getDocuments()) &&\n          isNull(updateRequest.getDeleteByIdMap()) &&\n          isNull(updateRequest.getDeleteQuery())\n          && (updateRequest.getDocIterator() == null)) {\n        return null;\n      }\n      return new ContentWriter() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n          new JavaBinUpdateRequestCodec().marshal(updateRequest, os);\n        }\n\n        @Override\n        public String getContentType() {\n          return \"application/javabin\";\n        }\n      };\n    } else {\n      return super.getContentWriter(req);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f9ab9cbda608d22a023db8b8ab48348e5f19bd7","date":1509526582,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BinaryRequestWriter#getContentWriter(SolrRequest).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BinaryRequestWriter#getContentWriter(SolrRequest).mjava","sourceNew":"  @Override\n  public ContentWriter getContentWriter(SolrRequest req) {\n    if (req instanceof UpdateRequest) {\n      UpdateRequest updateRequest = (UpdateRequest) req;\n      if (isEmpty(updateRequest)) return null;\n      return new ContentWriter() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n          new JavaBinUpdateRequestCodec().marshal(updateRequest, os);\n        }\n\n        @Override\n        public String getContentType() {\n          return \"application/javabin\";\n        }\n      };\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public ContentWriter getContentWriter(SolrRequest req) {\n    if (req instanceof UpdateRequest) {\n      UpdateRequest updateRequest = (UpdateRequest) req;\n      if (isEmpty(updateRequest)) return null;\n      return new ContentWriter() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n          new JavaBinUpdateRequestCodec().marshal(updateRequest, os);\n        }\n\n        @Override\n        public String getContentType() {\n          return \"application/javabin\";\n        }\n      };\n    } else {\n      return super.getContentWriter(req);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33138637f13378b80c31543ed4d8c44c00269c1d","date":1509606571,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BinaryRequestWriter#getContentWriter(SolrRequest).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BinaryRequestWriter#getContentWriter(SolrRequest).mjava","sourceNew":"  @Override\n  public ContentWriter getContentWriter(SolrRequest req) {\n    if (req instanceof UpdateRequest) {\n      UpdateRequest updateRequest = (UpdateRequest) req;\n      if (isEmpty(updateRequest)) return null;\n      return new ContentWriter() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n          new JavaBinUpdateRequestCodec().marshal(updateRequest, os);\n        }\n\n        @Override\n        public String getContentType() {\n          return \"application/javabin\";\n        }\n      };\n    } else {\n      return req.getContentWriter(\"application/javabin\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public ContentWriter getContentWriter(SolrRequest req) {\n    if (req instanceof UpdateRequest) {\n      UpdateRequest updateRequest = (UpdateRequest) req;\n      if (isEmpty(updateRequest)) return null;\n      return new ContentWriter() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n          new JavaBinUpdateRequestCodec().marshal(updateRequest, os);\n        }\n\n        @Override\n        public String getContentType() {\n          return \"application/javabin\";\n        }\n      };\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0b2a87a0a56ee3348c1c40d20544efd1583fb24f","date":1510039612,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BinaryRequestWriter#getContentWriter(SolrRequest).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BinaryRequestWriter#getContentWriter(SolrRequest).mjava","sourceNew":"  @Override\n  public ContentWriter getContentWriter(SolrRequest req) {\n    if (req instanceof UpdateRequest) {\n      UpdateRequest updateRequest = (UpdateRequest) req;\n      if (isEmpty(updateRequest)) return null;\n      return new ContentWriter() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n          new JavaBinUpdateRequestCodec().marshal(updateRequest, os);\n        }\n\n        @Override\n        public String getContentType() {\n          return JAVABIN_MIME;\n        }\n      };\n    } else {\n      return req.getContentWriter(JAVABIN_MIME);\n    }\n  }\n\n","sourceOld":"  @Override\n  public ContentWriter getContentWriter(SolrRequest req) {\n    if (req instanceof UpdateRequest) {\n      UpdateRequest updateRequest = (UpdateRequest) req;\n      if (isEmpty(updateRequest)) return null;\n      return new ContentWriter() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n          new JavaBinUpdateRequestCodec().marshal(updateRequest, os);\n        }\n\n        @Override\n        public String getContentType() {\n          return \"application/javabin\";\n        }\n      };\n    } else {\n      return req.getContentWriter(\"application/javabin\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d523b8189b211dd1630166aa77b8c88bb48b3fcc","date":1510144168,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BinaryRequestWriter#getContentWriter(SolrRequest).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BinaryRequestWriter#getContentWriter(SolrRequest).mjava","sourceNew":"  @Override\n  public ContentWriter getContentWriter(SolrRequest req) {\n    if (req instanceof UpdateRequest) {\n      UpdateRequest updateRequest = (UpdateRequest) req;\n      if (isEmpty(updateRequest)) return null;\n      return new ContentWriter() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n          new JavaBinUpdateRequestCodec().marshal(updateRequest, os);\n        }\n\n        @Override\n        public String getContentType() {\n          return JAVABIN_MIME;\n        }\n      };\n    } else {\n      return req.getContentWriter(JAVABIN_MIME);\n    }\n  }\n\n","sourceOld":"  @Override\n  public ContentWriter getContentWriter(SolrRequest req) {\n    if (req instanceof UpdateRequest) {\n      UpdateRequest updateRequest = (UpdateRequest) req;\n      if (isEmpty(updateRequest)) return null;\n      return new ContentWriter() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n          new JavaBinUpdateRequestCodec().marshal(updateRequest, os);\n        }\n\n        @Override\n        public String getContentType() {\n          return \"application/javabin\";\n        }\n      };\n    } else {\n      return req.getContentWriter(\"application/javabin\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d","date":1592006776,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BinaryRequestWriter#getContentWriter(SolrRequest).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BinaryRequestWriter#getContentWriter(SolrRequest).mjava","sourceNew":"  @Override\n  public ContentWriter getContentWriter(@SuppressWarnings({\"rawtypes\"})SolrRequest req) {\n    if (req instanceof UpdateRequest) {\n      UpdateRequest updateRequest = (UpdateRequest) req;\n      if (isEmpty(updateRequest)) return null;\n      return new ContentWriter() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n          new JavaBinUpdateRequestCodec().marshal(updateRequest, os);\n        }\n\n        @Override\n        public String getContentType() {\n          return JAVABIN_MIME;\n        }\n      };\n    } else {\n      return req.getContentWriter(JAVABIN_MIME);\n    }\n  }\n\n","sourceOld":"  @Override\n  public ContentWriter getContentWriter(SolrRequest req) {\n    if (req instanceof UpdateRequest) {\n      UpdateRequest updateRequest = (UpdateRequest) req;\n      if (isEmpty(updateRequest)) return null;\n      return new ContentWriter() {\n        @Override\n        public void write(OutputStream os) throws IOException {\n          new JavaBinUpdateRequestCodec().marshal(updateRequest, os);\n        }\n\n        @Override\n        public String getContentType() {\n          return JAVABIN_MIME;\n        }\n      };\n    } else {\n      return req.getContentWriter(JAVABIN_MIME);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e6b588aaddc61538b71ed5af88704f9949c060fe":["97bcd657104d24ce5e89db102939e68a6784bdda"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["33138637f13378b80c31543ed4d8c44c00269c1d","0b2a87a0a56ee3348c1c40d20544efd1583fb24f"],"0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"97bcd657104d24ce5e89db102939e68a6784bdda":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0b2a87a0a56ee3348c1c40d20544efd1583fb24f":["33138637f13378b80c31543ed4d8c44c00269c1d"],"7f9ab9cbda608d22a023db8b8ab48348e5f19bd7":["e6b588aaddc61538b71ed5af88704f9949c060fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d"],"33138637f13378b80c31543ed4d8c44c00269c1d":["7f9ab9cbda608d22a023db8b8ab48348e5f19bd7"]},"commit2Childs":{"e6b588aaddc61538b71ed5af88704f9949c060fe":["7f9ab9cbda608d22a023db8b8ab48348e5f19bd7"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d"],"0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["97bcd657104d24ce5e89db102939e68a6784bdda"],"97bcd657104d24ce5e89db102939e68a6784bdda":["e6b588aaddc61538b71ed5af88704f9949c060fe"],"0b2a87a0a56ee3348c1c40d20544efd1583fb24f":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"7f9ab9cbda608d22a023db8b8ab48348e5f19bd7":["33138637f13378b80c31543ed4d8c44c00269c1d"],"33138637f13378b80c31543ed4d8c44c00269c1d":["d523b8189b211dd1630166aa77b8c88bb48b3fcc","0b2a87a0a56ee3348c1c40d20544efd1583fb24f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}