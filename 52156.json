{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForThingsToLevelOut(int,TimeUnit).mjava","commits":[{"id":"add1e7dd742ea533ff4318cea83ca0a1f669f662","date":1585262285,"type":1,"author":"Mike Drob","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForThingsToLevelOut(int,TimeUnit).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForThingsToLevelOut(int).mjava","sourceNew":"  public void waitForThingsToLevelOut(int timeout, TimeUnit unit) throws Exception {\n    log.info(\"Wait for recoveries to finish - wait {}{} for each attempt\", timeout, unit);\n    int cnt = 0;\n    boolean retry;\n    do {\n      waitForRecoveriesToFinish(VERBOSE, unit.toSeconds(timeout));\n\n      try {\n        commit();\n      } catch (Exception e) {\n        // we don't care if this commit fails on some nodes\n        log.info(\"Commit failed while waiting for recoveries\", e);\n      }\n\n      updateMappingsFromZk(jettys, clients);\n\n      Set<String> theShards = shardToJetty.keySet();\n      retry = false;\n      for (String shard : theShards) {\n        String failMessage = checkShardConsistency(shard, true, false);\n        if (failMessage != null) {\n          log.info(\"shard inconsistency - will retry ...\");\n          retry = true;\n        }\n      }\n\n      if (cnt++ > 30) {\n        throw new TimeoutException(\"Cluster state still in flux after 30 retry intervals.\");\n      }\n      Thread.sleep(2000);\n    } while (retry);\n  }\n\n","sourceOld":"  public void waitForThingsToLevelOut(int waitForRecTimeSeconds) throws Exception {\n    log.info(\"Wait for recoveries to finish - wait \" + waitForRecTimeSeconds + \" for each attempt\");\n    int cnt = 0;\n    boolean retry = false;\n    do {\n      waitForRecoveriesToFinish(VERBOSE, waitForRecTimeSeconds);\n\n      try {\n        commit();\n      } catch (Throwable t) {\n        t.printStackTrace();\n        // we don't care if this commit fails on some nodes\n      }\n\n      updateMappingsFromZk(jettys, clients);\n\n      Set<String> theShards = shardToJetty.keySet();\n      String failMessage = null;\n      for (String shard : theShards) {\n        failMessage = checkShardConsistency(shard, true, false);\n      }\n\n      if (failMessage != null) {\n        log.info(\"shard inconsistency - waiting ...\");\n        retry = true;\n      } else {\n        retry = false;\n      }\n      cnt++;\n      if (cnt > 30) break;\n      Thread.sleep(2000);\n    } while (retry);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"add1e7dd742ea533ff4318cea83ca0a1f669f662":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["add1e7dd742ea533ff4318cea83ca0a1f669f662"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["add1e7dd742ea533ff4318cea83ca0a1f669f662"],"add1e7dd742ea533ff4318cea83ca0a1f669f662":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}