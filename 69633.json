{"path":"lucene/src/java/org/apache/lucene/store/NRTCachingDirectory#listAll().mjava","commits":[{"id":"df16fc2e9b615e0138edac46655ae628f5d098ad","date":1320876869,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/NRTCachingDirectory#listAll().mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/NRTCachingDirectory#listAll().mjava","sourceNew":"  @Override\n  public synchronized String[] listAll() throws IOException {\n    final Set<String> files = new HashSet<String>();\n    for(String f : cache.listAll()) {\n      files.add(f);\n    }\n    // LUCENE-1468: our NRTCachingDirectory will actually exist (RAMDir!),\n    // but if the underlying delegate is an FSDir and mkdirs() has not\n    // yet been called, because so far everything is a cached write,\n    // in this case, we don't want to throw a NoSuchDirectoryException\n    try {\n      for(String f : delegate.listAll()) {\n        // Cannot do this -- if lucene calls createOutput but\n        // file already exists then this falsely trips:\n        //assert !files.contains(f): \"file \\\"\" + f + \"\\\" is in both dirs\";\n        files.add(f);\n      }\n    } catch (NoSuchDirectoryException ex) {\n      // however, if there are no cached files, then the directory truly\n      // does not \"exist\"\n      if (files.isEmpty()) {\n        throw ex;\n      }\n    }\n    return files.toArray(new String[files.size()]);\n  }\n\n","sourceOld":"  @Override\n  public synchronized String[] listAll() throws IOException {\n    final Set<String> files = new HashSet<String>();\n    for(String f : cache.listAll()) {\n      files.add(f);\n    }\n    // LUCENE-1468: our NRTCachingDirectory will actually exist (RAMDir!),\n    // but if the underlying delegate is an FSDir and mkdirs() has not\n    // yet been called, because so far everything is a cached write,\n    // in this case, we don't want to throw a NoSuchDirectoryException\n    try {\n      for(String f : delegate.listAll()) {\n        // Cannot do this -- if lucene calls createOutput but\n        // file already exists then this falsely trips:\n        //assert !files.contains(f): \"file \\\"\" + f + \"\\\" is in both dirs\";\n        files.add(f);\n      }\n    } catch (NoSuchDirectoryException ex) {\n      // however, if there are no cached files, then the directory truly\n      // does not \"exist\"\n      if (files.isEmpty()) {\n        throw ex;\n      }\n    }\n    return files.toArray(new String[files.size()]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/NRTCachingDirectory#listAll().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/NRTCachingDirectory#listAll().mjava","sourceNew":"  @Override\n  public synchronized String[] listAll() throws IOException {\n    final Set<String> files = new HashSet<String>();\n    for(String f : cache.listAll()) {\n      files.add(f);\n    }\n    // LUCENE-1468: our NRTCachingDirectory will actually exist (RAMDir!),\n    // but if the underlying delegate is an FSDir and mkdirs() has not\n    // yet been called, because so far everything is a cached write,\n    // in this case, we don't want to throw a NoSuchDirectoryException\n    try {\n      for(String f : delegate.listAll()) {\n        // Cannot do this -- if lucene calls createOutput but\n        // file already exists then this falsely trips:\n        //assert !files.contains(f): \"file \\\"\" + f + \"\\\" is in both dirs\";\n        files.add(f);\n      }\n    } catch (NoSuchDirectoryException ex) {\n      // however, if there are no cached files, then the directory truly\n      // does not \"exist\"\n      if (files.isEmpty()) {\n        throw ex;\n      }\n    }\n    return files.toArray(new String[files.size()]);\n  }\n\n","sourceOld":"  @Override\n  public synchronized String[] listAll() throws IOException {\n    final Set<String> files = new HashSet<String>();\n    for(String f : cache.listAll()) {\n      files.add(f);\n    }\n    // LUCENE-1468: our NRTCachingDirectory will actually exist (RAMDir!),\n    // but if the underlying delegate is an FSDir and mkdirs() has not\n    // yet been called, because so far everything is a cached write,\n    // in this case, we don't want to throw a NoSuchDirectoryException\n    try {\n      for(String f : delegate.listAll()) {\n        // Cannot do this -- if lucene calls createOutput but\n        // file already exists then this falsely trips:\n        //assert !files.contains(f): \"file \\\"\" + f + \"\\\" is in both dirs\";\n        files.add(f);\n      }\n    } catch (NoSuchDirectoryException ex) {\n      // however, if there are no cached files, then the directory truly\n      // does not \"exist\"\n      if (files.isEmpty()) {\n        throw ex;\n      }\n    }\n    return files.toArray(new String[files.size()]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"df16fc2e9b615e0138edac46655ae628f5d098ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["df16fc2e9b615e0138edac46655ae628f5d098ad"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"df16fc2e9b615e0138edac46655ae628f5d098ad":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["df16fc2e9b615e0138edac46655ae628f5d098ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}