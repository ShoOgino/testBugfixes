{"path":"sandbox/contributions/snowball/src/java/net/sf/snowball/ext/EnglishStemmer#r_prelude().mjava","commits":[{"id":"8497ea87d47a78ce96caf21099e6e5fd3536b512","date":1040423984,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"sandbox/contributions/snowball/src/java/net/sf/snowball/ext/EnglishStemmer#r_prelude().mjava","pathOld":"/dev/null","sourceNew":"        private boolean r_prelude() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            // (, line 23\n            // unset Y_found, line 24\n            B_Y_found = false;\n            // do, line 25\n            v_1 = cursor;\n            lab0: do {\n                // (, line 25\n                // [, line 25\n                bra = cursor;\n                // literal, line 25\n                if (!(eq_s(1, \"y\")))\n                {\n                    break lab0;\n                }\n                // ], line 25\n                ket = cursor;\n                if (!(in_grouping(g_v, 97, 121)))\n                {\n                    break lab0;\n                }\n                // <-, line 25\n                slice_from(\"Y\");\n                // set Y_found, line 25\n                B_Y_found = true;\n            } while (false);\n            cursor = v_1;\n            // do, line 26\n            v_2 = cursor;\n            lab1: do {\n                // repeat, line 26\n                replab2: while(true)\n                {\n                    v_3 = cursor;\n                    lab3: do {\n                        // (, line 26\n                        // goto, line 26\n                        golab4: while(true)\n                        {\n                            v_4 = cursor;\n                            lab5: do {\n                                // (, line 26\n                                if (!(in_grouping(g_v, 97, 121)))\n                                {\n                                    break lab5;\n                                }\n                                // [, line 26\n                                bra = cursor;\n                                // literal, line 26\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab5;\n                                }\n                                // ], line 26\n                                ket = cursor;\n                                cursor = v_4;\n                                break golab4;\n                            } while (false);\n                            cursor = v_4;\n                            if (cursor >= limit)\n                            {\n                                break lab3;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 26\n                        slice_from(\"Y\");\n                        // set Y_found, line 26\n                        B_Y_found = true;\n                        continue replab2;\n                    } while (false);\n                    cursor = v_3;\n                    break replab2;\n                }\n            } while (false);\n            cursor = v_2;\n            return true;\n        }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/snowball/src/java/net/sf/snowball/ext/EnglishStemmer#r_prelude().mjava","pathOld":"sandbox/contributions/snowball/src/java/net/sf/snowball/ext/EnglishStemmer#r_prelude().mjava","sourceNew":"        private boolean r_prelude() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            // (, line 23\n            // unset Y_found, line 24\n            B_Y_found = false;\n            // do, line 25\n            v_1 = cursor;\n            lab0: do {\n                // (, line 25\n                // [, line 25\n                bra = cursor;\n                // literal, line 25\n                if (!(eq_s(1, \"y\")))\n                {\n                    break lab0;\n                }\n                // ], line 25\n                ket = cursor;\n                if (!(in_grouping(g_v, 97, 121)))\n                {\n                    break lab0;\n                }\n                // <-, line 25\n                slice_from(\"Y\");\n                // set Y_found, line 25\n                B_Y_found = true;\n            } while (false);\n            cursor = v_1;\n            // do, line 26\n            v_2 = cursor;\n            lab1: do {\n                // repeat, line 26\n                replab2: while(true)\n                {\n                    v_3 = cursor;\n                    lab3: do {\n                        // (, line 26\n                        // goto, line 26\n                        golab4: while(true)\n                        {\n                            v_4 = cursor;\n                            lab5: do {\n                                // (, line 26\n                                if (!(in_grouping(g_v, 97, 121)))\n                                {\n                                    break lab5;\n                                }\n                                // [, line 26\n                                bra = cursor;\n                                // literal, line 26\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab5;\n                                }\n                                // ], line 26\n                                ket = cursor;\n                                cursor = v_4;\n                                break golab4;\n                            } while (false);\n                            cursor = v_4;\n                            if (cursor >= limit)\n                            {\n                                break lab3;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 26\n                        slice_from(\"Y\");\n                        // set Y_found, line 26\n                        B_Y_found = true;\n                        continue replab2;\n                    } while (false);\n                    cursor = v_3;\n                    break replab2;\n                }\n            } while (false);\n            cursor = v_2;\n            return true;\n        }\n\n","sourceOld":"        private boolean r_prelude() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            // (, line 23\n            // unset Y_found, line 24\n            B_Y_found = false;\n            // do, line 25\n            v_1 = cursor;\n            lab0: do {\n                // (, line 25\n                // [, line 25\n                bra = cursor;\n                // literal, line 25\n                if (!(eq_s(1, \"y\")))\n                {\n                    break lab0;\n                }\n                // ], line 25\n                ket = cursor;\n                if (!(in_grouping(g_v, 97, 121)))\n                {\n                    break lab0;\n                }\n                // <-, line 25\n                slice_from(\"Y\");\n                // set Y_found, line 25\n                B_Y_found = true;\n            } while (false);\n            cursor = v_1;\n            // do, line 26\n            v_2 = cursor;\n            lab1: do {\n                // repeat, line 26\n                replab2: while(true)\n                {\n                    v_3 = cursor;\n                    lab3: do {\n                        // (, line 26\n                        // goto, line 26\n                        golab4: while(true)\n                        {\n                            v_4 = cursor;\n                            lab5: do {\n                                // (, line 26\n                                if (!(in_grouping(g_v, 97, 121)))\n                                {\n                                    break lab5;\n                                }\n                                // [, line 26\n                                bra = cursor;\n                                // literal, line 26\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab5;\n                                }\n                                // ], line 26\n                                ket = cursor;\n                                cursor = v_4;\n                                break golab4;\n                            } while (false);\n                            cursor = v_4;\n                            if (cursor >= limit)\n                            {\n                                break lab3;\n                            }\n                            cursor++;\n                        }\n                        // <-, line 26\n                        slice_from(\"Y\");\n                        // set Y_found, line 26\n                        B_Y_found = true;\n                        continue replab2;\n                    } while (false);\n                    cursor = v_3;\n                    break replab2;\n                }\n            } while (false);\n            cursor = v_2;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["8497ea87d47a78ce96caf21099e6e5fd3536b512"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8497ea87d47a78ce96caf21099e6e5fd3536b512":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8497ea87d47a78ce96caf21099e6e5fd3536b512"],"8497ea87d47a78ce96caf21099e6e5fd3536b512":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}