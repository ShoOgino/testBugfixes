{"path":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/HTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","commits":[{"id":"3cdad2c6b6234338031bcc1f24c001a5ad66f714","date":1296866109,"type":1,"author":"Doron Cohen","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/HTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/HTMLParser#parse(DocData,String,Date,Reader,DateFormat).mjava","sourceNew":"  /**\n   * Parse the input Reader and return DocData. \n   * The provided name,title,date are used for the result, unless when they're null, \n   * in which case an attempt is made to set them from the parsed data.\n   * @param docData result reused\n   * @param name name of the result doc data.\n   * @param date date of the result doc data. If null, attempt to set by parsed data.\n   * @param title title of the result doc data. If null, attempt to set by parsed data.\n   * @param reader reader of html text to parse.\n   * @param dateFormat date formatter to use for extracting the date.   \n   * @return Parsed doc data.\n   * @throws IOException\n   * @throws InterruptedException\n   */\n  public DocData parse(DocData docData, String name, Date date, String title, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException;\n\n","sourceOld":"  /**\n   * Parse the input Reader and return DocData. \n   * A provided name or date is used for the result, otherwise an attempt is \n   * made to set them from the parsed data.\n   * @param dateFormat date formatter to use for extracting the date.   \n   * @param name name of the result doc data. If null, attempt to set by parsed data.\n   * @param date date of the result doc data. If null, attempt to set by parsed data.\n   * @param reader of html text to parse.\n   * @return Parsed doc data.\n   * @throws IOException\n   * @throws InterruptedException\n   */\n  public DocData parse(DocData docData, String name, Date date, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/HTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Parse the input Reader and return DocData. \n   * The provided name,title,date are used for the result, unless when they're null, \n   * in which case an attempt is made to set them from the parsed data.\n   * @param docData result reused\n   * @param name name of the result doc data.\n   * @param date date of the result doc data. If null, attempt to set by parsed data.\n   * @param title title of the result doc data. If null, attempt to set by parsed data.\n   * @param reader reader of html text to parse.\n   * @param dateFormat date formatter to use for extracting the date.   \n   * @return Parsed doc data.\n   * @throws IOException\n   * @throws InterruptedException\n   */\n  public DocData parse(DocData docData, String name, Date date, String title, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/HTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/HTMLParser#parse(DocData,String,Date,Reader,DateFormat).mjava","sourceNew":"  /**\n   * Parse the input Reader and return DocData. \n   * The provided name,title,date are used for the result, unless when they're null, \n   * in which case an attempt is made to set them from the parsed data.\n   * @param docData result reused\n   * @param name name of the result doc data.\n   * @param date date of the result doc data. If null, attempt to set by parsed data.\n   * @param title title of the result doc data. If null, attempt to set by parsed data.\n   * @param reader reader of html text to parse.\n   * @param dateFormat date formatter to use for extracting the date.   \n   * @return Parsed doc data.\n   * @throws IOException\n   * @throws InterruptedException\n   */\n  public DocData parse(DocData docData, String name, Date date, String title, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException;\n\n","sourceOld":"  /**\n   * Parse the input Reader and return DocData. \n   * A provided name or date is used for the result, otherwise an attempt is \n   * made to set them from the parsed data.\n   * @param dateFormat date formatter to use for extracting the date.   \n   * @param name name of the result doc data. If null, attempt to set by parsed data.\n   * @param date date of the result doc data. If null, attempt to set by parsed data.\n   * @param reader of html text to parse.\n   * @return Parsed doc data.\n   * @throws IOException\n   * @throws InterruptedException\n   */\n  public DocData parse(DocData docData, String name, Date date, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/HTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/HTMLParser#parse(DocData,String,Date,String,Reader,DateFormat).mjava","sourceNew":"  /**\n   * Parse the input Reader and return DocData. \n   * The provided name,title,date are used for the result, unless when they're null, \n   * in which case an attempt is made to set them from the parsed data.\n   * @param docData result reused\n   * @param name name of the result doc data.\n   * @param date date of the result doc data. If null, attempt to set by parsed data.\n   * @param title title of the result doc data. If null, attempt to set by parsed data.\n   * @param reader reader of html text to parse.\n   * @param dateFormat date formatter to use for extracting the date.   \n   * @return Parsed doc data.\n   * @throws IOException\n   * @throws InterruptedException\n   */\n  public DocData parse(DocData docData, String name, Date date, String title, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException;\n\n","sourceOld":"  /**\n   * Parse the input Reader and return DocData. \n   * The provided name,title,date are used for the result, unless when they're null, \n   * in which case an attempt is made to set them from the parsed data.\n   * @param docData result reused\n   * @param name name of the result doc data.\n   * @param date date of the result doc data. If null, attempt to set by parsed data.\n   * @param title title of the result doc data. If null, attempt to set by parsed data.\n   * @param reader reader of html text to parse.\n   * @param dateFormat date formatter to use for extracting the date.   \n   * @return Parsed doc data.\n   * @throws IOException\n   * @throws InterruptedException\n   */\n  public DocData parse(DocData docData, String name, Date date, String title, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3cdad2c6b6234338031bcc1f24c001a5ad66f714"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdad2c6b6234338031bcc1f24c001a5ad66f714"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdad2c6b6234338031bcc1f24c001a5ad66f714":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdad2c6b6234338031bcc1f24c001a5ad66f714"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","3cdad2c6b6234338031bcc1f24c001a5ad66f714","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"3cdad2c6b6234338031bcc1f24c001a5ad66f714":["b89678825b68eccaf09e6ab71675fc0b0af1e099","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}