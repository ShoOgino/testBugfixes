{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long,long).mjava","commits":[{"id":"f492fe129985750df09c8dac738aecc503158bb3","date":1464099630,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long).mjava","sourceNew":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation, long startSeqNo) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    this.seqNo = new AtomicLong(startSeqNo);\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","sourceOld":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16ebfabc294f23b88b6a39722a02c9d39b353195","date":1464343867,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long,long).mjava","sourceNew":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation, long startSeqNo) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    this.nextSeqNo = new AtomicLong(startSeqNo);\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","sourceOld":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation, long startSeqNo) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    this.seqNo = new AtomicLong(startSeqNo);\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6483e4260c08168709c02238ae083a51519a28dd","date":1465117546,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long).mjava","sourceNew":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation, long startSeqNo) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    this.nextSeqNo = new AtomicLong(startSeqNo);\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","sourceOld":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"191128ac5b85671b1671e2c857437694283b6ebf","date":1465297861,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long).mjava","sourceNew":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation, long startSeqNo) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    this.nextSeqNo = new AtomicLong(startSeqNo);\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","sourceOld":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long,long).mjava","pathOld":"/dev/null","sourceNew":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation, long startSeqNo) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    this.nextSeqNo = new AtomicLong(startSeqNo);\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(InfoStream,BufferedUpdates,long,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long,long).mjava","sourceNew":"  DocumentsWriterDeleteQueue(InfoStream infoStream, BufferedUpdates globalBufferedUpdates, long generation, long startSeqNo) {\n    this.infoStream = infoStream;\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    this.nextSeqNo = new AtomicLong(startSeqNo);\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","sourceOld":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation, long startSeqNo) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    this.nextSeqNo = new AtomicLong(startSeqNo);\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":5,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(InfoStream,BufferedUpdates,long,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long,long).mjava","sourceNew":"  DocumentsWriterDeleteQueue(InfoStream infoStream, BufferedUpdates globalBufferedUpdates, long generation, long startSeqNo) {\n    this.infoStream = infoStream;\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    this.nextSeqNo = new AtomicLong(startSeqNo);\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","sourceOld":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation, long startSeqNo) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    this.nextSeqNo = new AtomicLong(startSeqNo);\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long,long).mjava","sourceNew":null,"sourceOld":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation, long startSeqNo) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    this.nextSeqNo = new AtomicLong(startSeqNo);\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["191128ac5b85671b1671e2c857437694283b6ebf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f492fe129985750df09c8dac738aecc503158bb3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6483e4260c08168709c02238ae083a51519a28dd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","16ebfabc294f23b88b6a39722a02c9d39b353195"],"191128ac5b85671b1671e2c857437694283b6ebf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6483e4260c08168709c02238ae083a51519a28dd"],"16ebfabc294f23b88b6a39722a02c9d39b353195":["f492fe129985750df09c8dac738aecc503158bb3"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["191128ac5b85671b1671e2c857437694283b6ebf","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["191128ac5b85671b1671e2c857437694283b6ebf","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","191128ac5b85671b1671e2c857437694283b6ebf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f492fe129985750df09c8dac738aecc503158bb3","6483e4260c08168709c02238ae083a51519a28dd","191128ac5b85671b1671e2c857437694283b6ebf","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"f492fe129985750df09c8dac738aecc503158bb3":["16ebfabc294f23b88b6a39722a02c9d39b353195"],"6483e4260c08168709c02238ae083a51519a28dd":["191128ac5b85671b1671e2c857437694283b6ebf"],"191128ac5b85671b1671e2c857437694283b6ebf":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"16ebfabc294f23b88b6a39722a02c9d39b353195":["6483e4260c08168709c02238ae083a51519a28dd"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}