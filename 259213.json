{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyReader#testRefreshAndRefCount().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyReader#testRefreshAndRefCount().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyReader#testRefreshAndRefCount().mjava","sourceNew":"  @Test\n  public void testRefreshAndRefCount() throws Exception {\n    Directory dir = new RAMDirectory(); // no need for random directories here\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir);\n    taxoWriter.addCategory(new CategoryPath(\"a\"));\n    taxoWriter.commit();\n\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n    assertEquals(\"wrong refCount\", 1, taxoReader.getRefCount());\n\n    taxoReader.incRef();\n    assertEquals(\"wrong refCount\", 2, taxoReader.getRefCount());\n\n    taxoWriter.addCategory(new CategoryPath(\"a\", \"b\"));\n    taxoWriter.commit();\n    taxoReader.refresh();\n    assertEquals(\"wrong refCount\", 2, taxoReader.getRefCount());\n\n    taxoWriter.close();\n    taxoReader.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRefreshAndRefCount() throws Exception {\n    Directory dir = new RAMDirectory(); // no need for random directories here\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir);\n    taxoWriter.addCategory(new CategoryPath(\"a\"));\n    taxoWriter.commit();\n\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n    assertEquals(\"wrong refCount\", 1, taxoReader.getRefCount());\n\n    taxoReader.incRef();\n    assertEquals(\"wrong refCount\", 2, taxoReader.getRefCount());\n\n    taxoWriter.addCategory(new CategoryPath(\"a\", \"b\"));\n    taxoWriter.commit();\n    taxoReader.refresh();\n    assertEquals(\"wrong refCount\", 2, taxoReader.getRefCount());\n\n    taxoWriter.close();\n    taxoReader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1","date":1353511594,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyReader#testOpenIfChangedAndRefCount().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyReader#testRefreshAndRefCount().mjava","sourceNew":"  @Test\n  public void testOpenIfChangedAndRefCount() throws Exception {\n    Directory dir = new RAMDirectory(); // no need for random directories here\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir);\n    taxoWriter.addCategory(new CategoryPath(\"a\"));\n    taxoWriter.commit();\n\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n    assertEquals(\"wrong refCount\", 1, taxoReader.getRefCount());\n\n    taxoReader.incRef();\n    assertEquals(\"wrong refCount\", 2, taxoReader.getRefCount());\n\n    taxoWriter.addCategory(new CategoryPath(\"a\", \"b\"));\n    taxoWriter.commit();\n    TaxonomyReader newtr = TaxonomyReader.openIfChanged(taxoReader);\n    assertNotNull(newtr);\n    taxoReader.close();\n    taxoReader = newtr;\n    assertEquals(\"wrong refCount\", 1, taxoReader.getRefCount());\n\n    taxoWriter.close();\n    taxoReader.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRefreshAndRefCount() throws Exception {\n    Directory dir = new RAMDirectory(); // no need for random directories here\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir);\n    taxoWriter.addCategory(new CategoryPath(\"a\"));\n    taxoWriter.commit();\n\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n    assertEquals(\"wrong refCount\", 1, taxoReader.getRefCount());\n\n    taxoReader.incRef();\n    assertEquals(\"wrong refCount\", 2, taxoReader.getRefCount());\n\n    taxoWriter.addCategory(new CategoryPath(\"a\", \"b\"));\n    taxoWriter.commit();\n    taxoReader.refresh();\n    assertEquals(\"wrong refCount\", 2, taxoReader.getRefCount());\n\n    taxoWriter.close();\n    taxoReader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyReader#testRefreshAndRefCount().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testRefreshAndRefCount() throws Exception {\n    Directory dir = new RAMDirectory(); // no need for random directories here\n\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir);\n    taxoWriter.addCategory(new CategoryPath(\"a\"));\n    taxoWriter.commit();\n\n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n    assertEquals(\"wrong refCount\", 1, taxoReader.getRefCount());\n\n    taxoReader.incRef();\n    assertEquals(\"wrong refCount\", 2, taxoReader.getRefCount());\n\n    taxoWriter.addCategory(new CategoryPath(\"a\", \"b\"));\n    taxoWriter.commit();\n    taxoReader.refresh();\n    assertEquals(\"wrong refCount\", 2, taxoReader.getRefCount());\n\n    taxoWriter.close();\n    taxoReader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["b89678825b68eccaf09e6ab71675fc0b0af1e099","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["407687e67faf6e1f02a211ca078d8e3eed631027","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}