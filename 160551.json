{"path":"src/test-deprecated/org/apache/lucene/index/TestFilterIndexReader#testFilterIndexReader().mjava","commits":[{"id":"5b5461affe637a07375542c763a4805300802be8","date":1102270918,"type":0,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/test-deprecated/org/apache/lucene/index/TestFilterIndexReader#testFilterIndexReader().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Tests the IndexReader.getFieldNames implementation\n   * @throws Exception on error\n   */\n  public void testFilterIndexReader() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer =\n      new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Document d1 = new Document();\n    d1.add(Field.Text(\"default\",\"one two\"));\n    writer.addDocument(d1);\n\n    Document d2 = new Document();\n    d2.add(Field.Text(\"default\",\"one three\"));\n    writer.addDocument(d2);\n\n    Document d3 = new Document();\n    d3.add(Field.Text(\"default\",\"two four\"));\n    writer.addDocument(d3);\n\n    writer.close();\n\n    IndexReader reader = new TestReader(IndexReader.open(directory));\n\n    TermEnum terms = reader.terms();\n    while (terms.next()) {\n      assertTrue(terms.term().text().indexOf('e') != -1);\n    }\n    terms.close();\n    \n    TermPositions positions = reader.termPositions(new Term(\"default\", \"one\"));\n    while (positions.next()) {\n      assertTrue((positions.doc() % 2) == 1);\n    }\n\n    reader.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test-deprecated/org/apache/lucene/index/TestFilterIndexReader#testFilterIndexReader().mjava","sourceNew":null,"sourceOld":"  /**\n   * Tests the IndexReader.getFieldNames implementation\n   * @throws Exception on error\n   */\n  public void testFilterIndexReader() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer =\n      new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Document d1 = new Document();\n    d1.add(Field.Text(\"default\",\"one two\"));\n    writer.addDocument(d1);\n\n    Document d2 = new Document();\n    d2.add(Field.Text(\"default\",\"one three\"));\n    writer.addDocument(d2);\n\n    Document d3 = new Document();\n    d3.add(Field.Text(\"default\",\"two four\"));\n    writer.addDocument(d3);\n\n    writer.close();\n\n    IndexReader reader = new TestReader(IndexReader.open(directory));\n\n    TermEnum terms = reader.terms();\n    while (terms.next()) {\n      assertTrue(terms.term().text().indexOf('e') != -1);\n    }\n    terms.close();\n    \n    TermPositions positions = reader.termPositions(new Term(\"default\", \"one\"));\n    while (positions.next()) {\n      assertTrue((positions.doc() % 2) == 1);\n    }\n\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5b5461affe637a07375542c763a4805300802be8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["5b5461affe637a07375542c763a4805300802be8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"]},"commit2Childs":{"5b5461affe637a07375542c763a4805300802be8":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b5461affe637a07375542c763a4805300802be8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}