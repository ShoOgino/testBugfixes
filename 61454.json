{"path":"backwards/src/java/org/apache/lucene/search/ParallelMultiSearcher#docFreq(Term).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/search/ParallelMultiSearcher#docFreq(Term).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Executes each {@link Searchable}'s docFreq() in its own thread and waits for each search to complete and merge\n   * the results back together.\n   */\n  @Override\n  public int docFreq(final Term term) throws IOException {\n    @SuppressWarnings(\"unchecked\") final Future<Integer>[] searchThreads = new Future[searchables.length];\n    for (int i = 0; i < searchables.length; i++) { // search each searchable\n      final Searchable searchable = searchables[i];\n      searchThreads[i] = executor.submit(new Callable<Integer>() {\n        public Integer call() throws IOException {\n          return Integer.valueOf(searchable.docFreq(term));\n        }\n      });\n    }\n    final CountDocFreq func = new CountDocFreq();\n    foreach(func, Arrays.asList(searchThreads));\n    return func.docFreq;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/ParallelMultiSearcher#docFreq(Term).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/ParallelMultiSearcher#docFreq(Term).mjava","sourceNew":"  /**\n   * Executes each {@link Searchable}'s docFreq() in its own thread and waits for each search to complete and merge\n   * the results back together.\n   */\n  @Override\n  public int docFreq(final Term term) throws IOException {\n    @SuppressWarnings(\"unchecked\") final Future<Integer>[] searchThreads = new Future[searchables.length];\n    for (int i = 0; i < searchables.length; i++) { // search each searchable\n      final Searchable searchable = searchables[i];\n      searchThreads[i] = executor.submit(new Callable<Integer>() {\n        public Integer call() throws IOException {\n          return Integer.valueOf(searchable.docFreq(term));\n        }\n      });\n    }\n    final CountDocFreq func = new CountDocFreq();\n    foreach(func, Arrays.asList(searchThreads));\n    return func.docFreq;\n  }\n\n","sourceOld":"  /**\n   * Executes each {@link Searchable}'s docFreq() in its own thread and waits for each search to complete and merge\n   * the results back together.\n   */\n  @Override\n  public int docFreq(final Term term) throws IOException {\n    @SuppressWarnings(\"unchecked\") final Future<Integer>[] searchThreads = new Future[searchables.length];\n    for (int i = 0; i < searchables.length; i++) { // search each searchable\n      final Searchable searchable = searchables[i];\n      searchThreads[i] = executor.submit(new Callable<Integer>() {\n        public Integer call() throws IOException {\n          return Integer.valueOf(searchable.docFreq(term));\n        }\n      });\n    }\n    final CountDocFreq func = new CountDocFreq();\n    foreach(func, Arrays.asList(searchThreads));\n    return func.docFreq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}