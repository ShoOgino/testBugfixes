{"path":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testCrashReplica().mjava","commits":[{"id":"38cf1409ac117286eb0df7d6ef31d9cfdad8cfec","date":1454767455,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testCrashReplica().mjava","pathOld":"/dev/null","sourceNew":"  public void testCrashReplica() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica\n    replica.crash();\n\n    sendReplicasToPrimary(primary);\n\n    // Lots of new flushes while replica is down:\n    long primaryVersion2 = 0;\n    for(int iter=0;iter<10;iter++) {\n      // Index 10 docs into primary:\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n      primaryVersion2 = primary.flush(0);\n    }\n\n    // Start up replica again:\n    replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Now ask replica to sync:\n    replica.newNRTPoint(primaryVersion2, primary.tcpPort);\n\n    // Make sure it sees all docs that were indexed while it was down:\n    assertVersionAndHits(primary, primaryVersion2, 110);\n\n    replica.close();\n    primary.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13ea66b549e25413e4e3057bf3492ab828899110","date":1454958424,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testCrashReplica().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testCrashReplica().mjava","sourceNew":"  public void testCrashReplica() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica\n    replica.crash();\n\n    sendReplicasToPrimary(primary);\n\n    // Lots of new flushes while replica is down:\n    long primaryVersion2 = 0;\n    for(int iter=0;iter<10;iter++) {\n      // Index 10 docs into primary:\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n      primaryVersion2 = primary.flush(0);\n    }\n\n    // Start up replica again:\n    replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Now ask replica to sync:\n    replica.newNRTPoint(primaryVersion2, 0, primary.tcpPort);\n\n    // Make sure it sees all docs that were indexed while it was down:\n    assertVersionAndHits(primary, primaryVersion2, 110);\n\n    replica.close();\n    primary.close();\n  }\n\n","sourceOld":"  public void testCrashReplica() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica\n    replica.crash();\n\n    sendReplicasToPrimary(primary);\n\n    // Lots of new flushes while replica is down:\n    long primaryVersion2 = 0;\n    for(int iter=0;iter<10;iter++) {\n      // Index 10 docs into primary:\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n      primaryVersion2 = primary.flush(0);\n    }\n\n    // Start up replica again:\n    replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Now ask replica to sync:\n    replica.newNRTPoint(primaryVersion2, primary.tcpPort);\n\n    // Make sure it sees all docs that were indexed while it was down:\n    assertVersionAndHits(primary, primaryVersion2, 110);\n\n    replica.close();\n    primary.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1b0febf62c2d9baeee7db38998d9197700ccbab9","date":1454958476,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testCrashReplica().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testCrashReplica().mjava","sourceNew":"  public void testCrashReplica() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica\n    replica.crash();\n\n    sendReplicasToPrimary(primary);\n\n    // Lots of new flushes while replica is down:\n    long primaryVersion2 = 0;\n    for(int iter=0;iter<10;iter++) {\n      // Index 10 docs into primary:\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n      primaryVersion2 = primary.flush(0);\n    }\n\n    // Start up replica again:\n    replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Now ask replica to sync:\n    replica.newNRTPoint(primaryVersion2, 0, primary.tcpPort);\n\n    // Make sure it sees all docs that were indexed while it was down:\n    assertVersionAndHits(primary, primaryVersion2, 110);\n\n    replica.close();\n    primary.close();\n  }\n\n","sourceOld":"  public void testCrashReplica() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica\n    replica.crash();\n\n    sendReplicasToPrimary(primary);\n\n    // Lots of new flushes while replica is down:\n    long primaryVersion2 = 0;\n    for(int iter=0;iter<10;iter++) {\n      // Index 10 docs into primary:\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n      primaryVersion2 = primary.flush(0);\n    }\n\n    // Start up replica again:\n    replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Now ask replica to sync:\n    replica.newNRTPoint(primaryVersion2, primary.tcpPort);\n\n    // Make sure it sees all docs that were indexed while it was down:\n    assertVersionAndHits(primary, primaryVersion2, 110);\n\n    replica.close();\n    primary.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testCrashReplica().mjava","pathOld":"/dev/null","sourceNew":"  public void testCrashReplica() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica\n    replica.crash();\n\n    sendReplicasToPrimary(primary);\n\n    // Lots of new flushes while replica is down:\n    long primaryVersion2 = 0;\n    for(int iter=0;iter<10;iter++) {\n      // Index 10 docs into primary:\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n      primaryVersion2 = primary.flush(0);\n    }\n\n    // Start up replica again:\n    replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Now ask replica to sync:\n    replica.newNRTPoint(primaryVersion2, 0, primary.tcpPort);\n\n    // Make sure it sees all docs that were indexed while it was down:\n    assertVersionAndHits(primary, primaryVersion2, 110);\n\n    replica.close();\n    primary.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5c2b099338fb9b77f99c5127f70418a85a7689f","date":1468243391,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testCrashReplica().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testCrashReplica().mjava","sourceNew":"  public void testCrashReplica() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    assertWriteLockHeld(path2);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica\n    replica.crash();\n\n    sendReplicasToPrimary(primary);\n\n    // Lots of new flushes while replica is down:\n    long primaryVersion2 = 0;\n    for(int iter=0;iter<10;iter++) {\n      // Index 10 docs into primary:\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n      primaryVersion2 = primary.flush(0);\n    }\n\n    // Start up replica again:\n    replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Now ask replica to sync:\n    replica.newNRTPoint(primaryVersion2, 0, primary.tcpPort);\n\n    // Make sure it sees all docs that were indexed while it was down:\n    assertVersionAndHits(primary, primaryVersion2, 110);\n\n    replica.close();\n    primary.close();\n  }\n\n","sourceOld":"  public void testCrashReplica() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica\n    replica.crash();\n\n    sendReplicasToPrimary(primary);\n\n    // Lots of new flushes while replica is down:\n    long primaryVersion2 = 0;\n    for(int iter=0;iter<10;iter++) {\n      // Index 10 docs into primary:\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n      primaryVersion2 = primary.flush(0);\n    }\n\n    // Start up replica again:\n    replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Now ask replica to sync:\n    replica.newNRTPoint(primaryVersion2, 0, primary.tcpPort);\n\n    // Make sure it sees all docs that were indexed while it was down:\n    assertVersionAndHits(primary, primaryVersion2, 110);\n\n    replica.close();\n    primary.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dcbdc4d70424f69441091cee35f497a60c60bdb","date":1468245582,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testCrashReplica().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testCrashReplica().mjava","sourceNew":"  public void testCrashReplica() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    assertWriteLockHeld(path2);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica\n    replica.crash();\n\n    sendReplicasToPrimary(primary);\n\n    // Lots of new flushes while replica is down:\n    long primaryVersion2 = 0;\n    for(int iter=0;iter<10;iter++) {\n      // Index 10 docs into primary:\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n      primaryVersion2 = primary.flush(0);\n    }\n\n    // Start up replica again:\n    replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Now ask replica to sync:\n    replica.newNRTPoint(primaryVersion2, 0, primary.tcpPort);\n\n    // Make sure it sees all docs that were indexed while it was down:\n    assertVersionAndHits(primary, primaryVersion2, 110);\n\n    replica.close();\n    primary.close();\n  }\n\n","sourceOld":"  public void testCrashReplica() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica\n    replica.crash();\n\n    sendReplicasToPrimary(primary);\n\n    // Lots of new flushes while replica is down:\n    long primaryVersion2 = 0;\n    for(int iter=0;iter<10;iter++) {\n      // Index 10 docs into primary:\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n      primaryVersion2 = primary.flush(0);\n    }\n\n    // Start up replica again:\n    replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Now ask replica to sync:\n    replica.newNRTPoint(primaryVersion2, 0, primary.tcpPort);\n\n    // Make sure it sees all docs that were indexed while it was down:\n    assertVersionAndHits(primary, primaryVersion2, 110);\n\n    replica.close();\n    primary.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testCrashReplica().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testCrashReplica().mjava","sourceNew":"  public void testCrashReplica() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    assertWriteLockHeld(path2);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica\n    replica.crash();\n\n    sendReplicasToPrimary(primary);\n\n    // Lots of new flushes while replica is down:\n    long primaryVersion2 = 0;\n    for(int iter=0;iter<10;iter++) {\n      // Index 10 docs into primary:\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n      primaryVersion2 = primary.flush(0);\n    }\n\n    // Start up replica again:\n    replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Now ask replica to sync:\n    replica.newNRTPoint(primaryVersion2, 0, primary.tcpPort);\n\n    // Make sure it sees all docs that were indexed while it was down:\n    assertVersionAndHits(primary, primaryVersion2, 110);\n\n    replica.close();\n    primary.close();\n  }\n\n","sourceOld":"  public void testCrashReplica() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica\n    replica.crash();\n\n    sendReplicasToPrimary(primary);\n\n    // Lots of new flushes while replica is down:\n    long primaryVersion2 = 0;\n    for(int iter=0;iter<10;iter++) {\n      // Index 10 docs into primary:\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n      primaryVersion2 = primary.flush(0);\n    }\n\n    // Start up replica again:\n    replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Now ask replica to sync:\n    replica.newNRTPoint(primaryVersion2, 0, primary.tcpPort);\n\n    // Make sure it sees all docs that were indexed while it was down:\n    assertVersionAndHits(primary, primaryVersion2, 110);\n\n    replica.close();\n    primary.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dede24fb16615594e9570fb29829cbffa1315a1f","date":1589579471,"type":3,"author":"erick","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testCrashReplica().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testCrashReplica().mjava","sourceNew":"  public void testCrashReplica() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    assertWriteLockHeld(path2);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica\n    replica.crash();\n\n    sendReplicasToPrimary(primary);\n\n    // Lots of new flushes while replica is down:\n    long primaryVersion2 = 0;\n    for(int iter=0;iter<10;iter++) {\n      // Index 10 docs into primary:\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n      primaryVersion2 = primary.flush(0);\n    }\n\n    // Start up replica again:\n    replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Now ask replica to sync:\n    replica.newNRTPoint(primaryVersion2, 0, primary.tcpPort);\n\n    // Make sure it sees all docs that were indexed while it was down:\n    assertVersionAndHits(primary, primaryVersion2, 110);\n\n    docs.close();\n    replica.close();\n    primary.close();\n  }\n\n","sourceOld":"  public void testCrashReplica() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    assertWriteLockHeld(path2);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Index 10 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Refresh primary, which also pushes to replica:\n    long primaryVersion1 = primary.flush(0);\n    assertTrue(primaryVersion1 > 0);\n\n    // Wait for replica to sync up:\n    waitForVersionAndHits(replica, primaryVersion1, 10);\n\n    // Crash replica\n    replica.crash();\n\n    sendReplicasToPrimary(primary);\n\n    // Lots of new flushes while replica is down:\n    long primaryVersion2 = 0;\n    for(int iter=0;iter<10;iter++) {\n      // Index 10 docs into primary:\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n      primaryVersion2 = primary.flush(0);\n    }\n\n    // Start up replica again:\n    replica = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    sendReplicasToPrimary(primary, replica);\n\n    // Now ask replica to sync:\n    replica.newNRTPoint(primaryVersion2, 0, primary.tcpPort);\n\n    // Make sure it sees all docs that were indexed while it was down:\n    assertVersionAndHits(primary, primaryVersion2, 110);\n\n    replica.close();\n    primary.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1b0febf62c2d9baeee7db38998d9197700ccbab9":["38cf1409ac117286eb0df7d6ef31d9cfdad8cfec","13ea66b549e25413e4e3057bf3492ab828899110"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dcbdc4d70424f69441091cee35f497a60c60bdb":["68496c2200e559fb7802f7575427b7a482659afb","e5c2b099338fb9b77f99c5127f70418a85a7689f"],"68496c2200e559fb7802f7575427b7a482659afb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","13ea66b549e25413e4e3057bf3492ab828899110"],"dede24fb16615594e9570fb29829cbffa1315a1f":["2dcbdc4d70424f69441091cee35f497a60c60bdb"],"13ea66b549e25413e4e3057bf3492ab828899110":["38cf1409ac117286eb0df7d6ef31d9cfdad8cfec"],"38cf1409ac117286eb0df7d6ef31d9cfdad8cfec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["68496c2200e559fb7802f7575427b7a482659afb","2dcbdc4d70424f69441091cee35f497a60c60bdb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dede24fb16615594e9570fb29829cbffa1315a1f"],"e5c2b099338fb9b77f99c5127f70418a85a7689f":["68496c2200e559fb7802f7575427b7a482659afb"]},"commit2Childs":{"1b0febf62c2d9baeee7db38998d9197700ccbab9":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["68496c2200e559fb7802f7575427b7a482659afb","38cf1409ac117286eb0df7d6ef31d9cfdad8cfec"],"2dcbdc4d70424f69441091cee35f497a60c60bdb":["dede24fb16615594e9570fb29829cbffa1315a1f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"68496c2200e559fb7802f7575427b7a482659afb":["2dcbdc4d70424f69441091cee35f497a60c60bdb","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","e5c2b099338fb9b77f99c5127f70418a85a7689f"],"38cf1409ac117286eb0df7d6ef31d9cfdad8cfec":["1b0febf62c2d9baeee7db38998d9197700ccbab9","13ea66b549e25413e4e3057bf3492ab828899110"],"13ea66b549e25413e4e3057bf3492ab828899110":["1b0febf62c2d9baeee7db38998d9197700ccbab9","68496c2200e559fb7802f7575427b7a482659afb"],"dede24fb16615594e9570fb29829cbffa1315a1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"e5c2b099338fb9b77f99c5127f70418a85a7689f":["2dcbdc4d70424f69441091cee35f497a60c60bdb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1b0febf62c2d9baeee7db38998d9197700ccbab9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}