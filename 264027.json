{"path":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#setMergeThreadPriority(int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#setMergeThreadPriority(int).mjava","pathOld":"src/java/org/apache/lucene/index/ConcurrentMergeScheduler#setMergeThreadPriority(int).mjava","sourceNew":"  /** Set the base priority that merge threads run at.\n   *  Note that CMS may increase priority of some merge\n   *  threads beyond this base priority.  It's best not to\n   *  set this any higher than\n   *  Thread.MAX_PRIORITY-maxThreadCount, so that CMS has\n   *  room to set relative priority among threads.  */\n  public synchronized void setMergeThreadPriority(int pri) {\n    if (pri > Thread.MAX_PRIORITY || pri < Thread.MIN_PRIORITY)\n      throw new IllegalArgumentException(\"priority must be in range \" + Thread.MIN_PRIORITY + \" .. \" + Thread.MAX_PRIORITY + \" inclusive\");\n    mergeThreadPriority = pri;\n    updateMergeThreads();\n  }\n\n","sourceOld":"  /** Set the base priority that merge threads run at.\n   *  Note that CMS may increase priority of some merge\n   *  threads beyond this base priority.  It's best not to\n   *  set this any higher than\n   *  Thread.MAX_PRIORITY-maxThreadCount, so that CMS has\n   *  room to set relative priority among threads.  */\n  public synchronized void setMergeThreadPriority(int pri) {\n    if (pri > Thread.MAX_PRIORITY || pri < Thread.MIN_PRIORITY)\n      throw new IllegalArgumentException(\"priority must be in range \" + Thread.MIN_PRIORITY + \" .. \" + Thread.MAX_PRIORITY + \" inclusive\");\n    mergeThreadPriority = pri;\n    updateMergeThreads();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#setMergeThreadPriority(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#setMergeThreadPriority(int).mjava","sourceNew":"  /** Set the base priority that merge threads run at.\n   *  Note that CMS may increase priority of some merge\n   *  threads beyond this base priority.  It's best not to\n   *  set this any higher than\n   *  Thread.MAX_PRIORITY-maxThreadCount, so that CMS has\n   *  room to set relative priority among threads.  */\n  public synchronized void setMergeThreadPriority(int pri) {\n    if (pri > Thread.MAX_PRIORITY || pri < Thread.MIN_PRIORITY)\n      throw new IllegalArgumentException(\"priority must be in range \" + Thread.MIN_PRIORITY + \" .. \" + Thread.MAX_PRIORITY + \" inclusive\");\n    mergeThreadPriority = pri;\n    updateMergeThreads();\n  }\n\n","sourceOld":"  /** Set the base priority that merge threads run at.\n   *  Note that CMS may increase priority of some merge\n   *  threads beyond this base priority.  It's best not to\n   *  set this any higher than\n   *  Thread.MAX_PRIORITY-maxThreadCount, so that CMS has\n   *  room to set relative priority among threads.  */\n  public synchronized void setMergeThreadPriority(int pri) {\n    if (pri > Thread.MAX_PRIORITY || pri < Thread.MIN_PRIORITY)\n      throw new IllegalArgumentException(\"priority must be in range \" + Thread.MIN_PRIORITY + \" .. \" + Thread.MAX_PRIORITY + \" inclusive\");\n    mergeThreadPriority = pri;\n    updateMergeThreads();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}