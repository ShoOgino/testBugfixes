{"path":"lucene/core/src/java/org/apache/lucene/search/PointInSetQuery#toString(String).mjava","commits":[{"id":"99761ac3b0c4136140f9cd2d081b80934bba16fa","date":1456263279,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PointInSetQuery#toString(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String toString(String field) {\n    final StringBuilder sb = new StringBuilder();\n    sb.append(getClass().getSimpleName());\n    sb.append(':');\n    if (this.field.equals(field) == false) {\n      sb.append(\"field=\");\n      sb.append(this.field);\n      sb.append(':');\n    }\n\n    TermIterator iterator = sortedPackedPoints.iterator();\n    for (BytesRef point = iterator.next(); point != null; point = iterator.next()) {\n      sb.append(' ');\n      // nocommit fix me to convert back to the numbers/etc.:\n      sb.append(point);\n    }\n\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5839bca64b33c24668e37476ee168d00dc0bb96d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"321ec990395a1d617f3097ce37d74fdfab56b34f","date":1456265570,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PointInSetQuery#toString(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PointInSetQuery#toString(String).mjava","sourceNew":"  @Override\n  public String toString(String field) {\n    final StringBuilder sb = new StringBuilder();\n    sb.append(getClass().getSimpleName());\n    sb.append(':');\n    if (this.field.equals(field) == false) {\n      sb.append(\" field=\");\n      sb.append(this.field);\n      sb.append(':');\n    }\n\n    sb.append(\" points:\");\n\n    TermIterator iterator = sortedPackedPoints.iterator();\n    byte[] pointBytes = new byte[numDims * bytesPerDim];\n    for (BytesRef point = iterator.next(); point != null; point = iterator.next()) {\n      sb.append(' ');\n      System.arraycopy(point.bytes, point.offset, pointBytes, 0, pointBytes.length);\n      sb.append(toString(pointBytes));\n    }\n\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString(String field) {\n    final StringBuilder sb = new StringBuilder();\n    sb.append(getClass().getSimpleName());\n    sb.append(':');\n    if (this.field.equals(field) == false) {\n      sb.append(\"field=\");\n      sb.append(this.field);\n      sb.append(':');\n    }\n\n    TermIterator iterator = sortedPackedPoints.iterator();\n    for (BytesRef point = iterator.next(); point != null; point = iterator.next()) {\n      sb.append(' ');\n      // nocommit fix me to convert back to the numbers/etc.:\n      sb.append(point);\n    }\n\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"96ae115468a08fb03270562a0121761d73c2c8c1","date":1456307437,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PointInSetQuery#toString(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PointInSetQuery#toString(String).mjava","sourceNew":"  @Override\n  public String toString(String field) {\n    final StringBuilder sb = new StringBuilder();\n    if (this.field.equals(field) == false) {\n      sb.append(this.field);\n      sb.append(':');\n    }\n\n    sb.append(\"{\");\n\n    TermIterator iterator = sortedPackedPoints.iterator();\n    byte[] pointBytes = new byte[numDims * bytesPerDim];\n    boolean first = true;\n    for (BytesRef point = iterator.next(); point != null; point = iterator.next()) {\n      if (first == false) {\n        sb.append(\" \");\n      }\n      first = false;\n      System.arraycopy(point.bytes, point.offset, pointBytes, 0, pointBytes.length);\n      sb.append(toString(pointBytes));\n    }\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString(String field) {\n    final StringBuilder sb = new StringBuilder();\n    sb.append(getClass().getSimpleName());\n    sb.append(':');\n    if (this.field.equals(field) == false) {\n      sb.append(\" field=\");\n      sb.append(this.field);\n      sb.append(':');\n    }\n\n    sb.append(\" points:\");\n\n    TermIterator iterator = sortedPackedPoints.iterator();\n    byte[] pointBytes = new byte[numDims * bytesPerDim];\n    for (BytesRef point = iterator.next(); point != null; point = iterator.next()) {\n      sb.append(' ');\n      System.arraycopy(point.bytes, point.offset, pointBytes, 0, pointBytes.length);\n      sb.append(toString(pointBytes));\n    }\n\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"868f63baffb79407d4b49f3c0be8dc4725ffc6e1","date":1456423715,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PointInSetQuery#toString(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String toString(String field) {\n    final StringBuilder sb = new StringBuilder();\n    if (this.field.equals(field) == false) {\n      sb.append(this.field);\n      sb.append(':');\n    }\n\n    sb.append(\"{\");\n\n    TermIterator iterator = sortedPackedPoints.iterator();\n    byte[] pointBytes = new byte[numDims * bytesPerDim];\n    boolean first = true;\n    for (BytesRef point = iterator.next(); point != null; point = iterator.next()) {\n      if (first == false) {\n        sb.append(\" \");\n      }\n      first = false;\n      System.arraycopy(point.bytes, point.offset, pointBytes, 0, pointBytes.length);\n      sb.append(toString(pointBytes));\n    }\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5839bca64b33c24668e37476ee168d00dc0bb96d","date":1457536035,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PointInSetQuery#toString(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PointInSetQuery#toString(String).mjava","sourceNew":"  @Override\n  public final String toString(String field) {\n    final StringBuilder sb = new StringBuilder();\n    if (this.field.equals(field) == false) {\n      sb.append(this.field);\n      sb.append(':');\n    }\n\n    sb.append(\"{\");\n\n    TermIterator iterator = sortedPackedPoints.iterator();\n    byte[] pointBytes = new byte[numDims * bytesPerDim];\n    boolean first = true;\n    for (BytesRef point = iterator.next(); point != null; point = iterator.next()) {\n      if (first == false) {\n        sb.append(\" \");\n      }\n      first = false;\n      System.arraycopy(point.bytes, point.offset, pointBytes, 0, pointBytes.length);\n      sb.append(toString(pointBytes));\n    }\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString(String field) {\n    final StringBuilder sb = new StringBuilder();\n    if (this.field.equals(field) == false) {\n      sb.append(this.field);\n      sb.append(':');\n    }\n\n    sb.append(\"{\");\n\n    TermIterator iterator = sortedPackedPoints.iterator();\n    byte[] pointBytes = new byte[numDims * bytesPerDim];\n    boolean first = true;\n    for (BytesRef point = iterator.next(); point != null; point = iterator.next()) {\n      if (first == false) {\n        sb.append(\" \");\n      }\n      first = false;\n      System.arraycopy(point.bytes, point.offset, pointBytes, 0, pointBytes.length);\n      sb.append(toString(pointBytes));\n    }\n    sb.append(\"}\");\n    return sb.toString();\n  }\n\n","bugFix":["99761ac3b0c4136140f9cd2d081b80934bba16fa"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5839bca64b33c24668e37476ee168d00dc0bb96d":["868f63baffb79407d4b49f3c0be8dc4725ffc6e1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868f63baffb79407d4b49f3c0be8dc4725ffc6e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","96ae115468a08fb03270562a0121761d73c2c8c1"],"99761ac3b0c4136140f9cd2d081b80934bba16fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"96ae115468a08fb03270562a0121761d73c2c8c1":["321ec990395a1d617f3097ce37d74fdfab56b34f"],"321ec990395a1d617f3097ce37d74fdfab56b34f":["99761ac3b0c4136140f9cd2d081b80934bba16fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5839bca64b33c24668e37476ee168d00dc0bb96d"]},"commit2Childs":{"5839bca64b33c24668e37476ee168d00dc0bb96d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"868f63baffb79407d4b49f3c0be8dc4725ffc6e1":["5839bca64b33c24668e37476ee168d00dc0bb96d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["868f63baffb79407d4b49f3c0be8dc4725ffc6e1","99761ac3b0c4136140f9cd2d081b80934bba16fa"],"99761ac3b0c4136140f9cd2d081b80934bba16fa":["321ec990395a1d617f3097ce37d74fdfab56b34f"],"96ae115468a08fb03270562a0121761d73c2c8c1":["868f63baffb79407d4b49f3c0be8dc4725ffc6e1"],"321ec990395a1d617f3097ce37d74fdfab56b34f":["96ae115468a08fb03270562a0121761d73c2c8c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}