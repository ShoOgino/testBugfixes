{"path":"lucene/core/src/test/org/apache/lucene/mockfile/TestMockFilesystems#testTooManyOpenFiles().mjava","commits":[{"id":"f26ca208d257c1aab942fa766374731b62328b8a","date":1417011743,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/mockfile/TestMockFilesystems#testTooManyOpenFiles().mjava","pathOld":"/dev/null","sourceNew":"  public void testTooManyOpenFiles() throws IOException {\n    int n = 60;\n\n    Path dir = FilterPath.unwrap(createTempDir());\n    FileSystem fs = new HandleLimitFS(dir.getFileSystem(), n).getFileSystem(URI.create(\"file:///\"));\n    dir = new FilterPath(dir, fs);\n    \n    // create open files to exact limit\n    List<Closeable> toClose = new ArrayList<>();\n    for (int i = 0; i < n; i++) {\n      Path p = Files.createTempFile(dir, null, null);\n      toClose.add(Files.newOutputStream(p));\n    }\n    \n    // now exceed\n    try {\n      Files.newOutputStream(Files.createTempFile(dir, null, null));\n      fail(\"didn't hit exception\");\n    } catch (IOException e) {\n      assertTrue(e.getMessage().contains(\"Too many open files\"));\n    }\n    \n    IOUtils.close(toClose);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/mockfile/TestMockFilesystems#testTooManyOpenFiles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/mockfile/TestMockFilesystems#testTooManyOpenFiles().mjava","sourceNew":"  public void testTooManyOpenFiles() throws IOException {\n    int n = 60;\n\n    Path dir = FilterPath.unwrap(createTempDir());\n    FileSystem fs = new HandleLimitFS(dir.getFileSystem(), n).getFileSystem(URI.create(\"file:///\"));\n    dir = new FilterPath(dir, fs);\n    \n    // create open files to exact limit\n    List<Closeable> toClose = new ArrayList<>();\n    for (int i = 0; i < n; i++) {\n      Path p = Files.createTempFile(dir, null, null);\n      toClose.add(Files.newOutputStream(p));\n    }\n    \n    // now exceed\n    try {\n      Files.newOutputStream(Files.createTempFile(dir, null, null));\n      fail(\"didn't hit exception\");\n    } catch (IOException e) {\n      assertTrue(e.getMessage().contains(\"Too many open files\"));\n    }\n    \n    IOUtils.close(toClose);\n  }\n\n","sourceOld":"  public void testTooManyOpenFiles() throws IOException {\n    int n = 60;\n\n    Path dir = FilterPath.unwrap(createTempDir());\n    FileSystem fs = new HandleLimitFS(dir.getFileSystem(), n).getFileSystem(URI.create(\"file:///\"));\n    dir = new FilterPath(dir, fs);\n    \n    // create open files to exact limit\n    List<Closeable> toClose = new ArrayList<>();\n    for (int i = 0; i < n; i++) {\n      Path p = Files.createTempFile(dir, null, null);\n      toClose.add(Files.newOutputStream(p));\n    }\n    \n    // now exceed\n    try {\n      Files.newOutputStream(Files.createTempFile(dir, null, null));\n      fail(\"didn't hit exception\");\n    } catch (IOException e) {\n      assertTrue(e.getMessage().contains(\"Too many open files\"));\n    }\n    \n    IOUtils.close(toClose);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f26ca208d257c1aab942fa766374731b62328b8a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["f26ca208d257c1aab942fa766374731b62328b8a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"]},"commit2Childs":{"f26ca208d257c1aab942fa766374731b62328b8a":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f26ca208d257c1aab942fa766374731b62328b8a"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}