{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#getLastCommitGeneration(String[]).mjava","commits":[{"id":"438e995b4e32916f631722aab36254146830fefb","date":1328903827,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#getLastCommitGeneration(String[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#getCurrentSegmentGeneration(String[]).mjava","sourceNew":"  /**\n   * Get the generation of the most recent commit to the\n   * list of index files (N in the segments_N file).\n   *\n   * @param files -- array of file names to check\n   */\n  public static long getLastCommitGeneration(String[] files) {\n    if (files == null) {\n      return -1;\n    }\n    long max = -1;\n    for (String file : files) {\n      if (file.startsWith(IndexFileNames.SEGMENTS) && !file.equals(IndexFileNames.SEGMENTS_GEN)) {\n        long gen = generationFromSegmentsFileName(file);\n        if (gen > max) {\n          max = gen;\n        }\n      }\n    }\n    return max;\n  }\n\n","sourceOld":"  /**\n   * Get the generation (N) of the current segments_N file\n   * from a list of files.\n   *\n   * @param files -- array of file names to check\n   */\n  public static long getCurrentSegmentGeneration(String[] files) {\n    if (files == null) {\n      return -1;\n    }\n    long max = -1;\n    for (String file : files) {\n      if (file.startsWith(IndexFileNames.SEGMENTS) && !file.equals(IndexFileNames.SEGMENTS_GEN)) {\n        long gen = generationFromSegmentsFileName(file);\n        if (gen > max) {\n          max = gen;\n        }\n      }\n    }\n    return max;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46e4a8bdfbafda795ef9c39a2bc2d47095770299","date":1410411846,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#getLastCommitGeneration(String[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#getLastCommitGeneration(String[]).mjava","sourceNew":"  /**\n   * Get the generation of the most recent commit to the\n   * list of index files (N in the segments_N file).\n   *\n   * @param files -- array of file names to check\n   */\n  public static long getLastCommitGeneration(String[] files) {\n    if (files == null) {\n      return -1;\n    }\n    long max = -1;\n    for (String file : files) {\n      if (file.startsWith(IndexFileNames.SEGMENTS) && !file.equals(IndexFileNames.OLD_SEGMENTS_GEN)) {\n        long gen = generationFromSegmentsFileName(file);\n        if (gen > max) {\n          max = gen;\n        }\n      }\n    }\n    return max;\n  }\n\n","sourceOld":"  /**\n   * Get the generation of the most recent commit to the\n   * list of index files (N in the segments_N file).\n   *\n   * @param files -- array of file names to check\n   */\n  public static long getLastCommitGeneration(String[] files) {\n    if (files == null) {\n      return -1;\n    }\n    long max = -1;\n    for (String file : files) {\n      if (file.startsWith(IndexFileNames.SEGMENTS) && !file.equals(IndexFileNames.SEGMENTS_GEN)) {\n        long gen = generationFromSegmentsFileName(file);\n        if (gen > max) {\n          max = gen;\n        }\n      }\n    }\n    return max;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#getLastCommitGeneration(String[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#getLastCommitGeneration(String[]).mjava","sourceNew":"  /**\n   * Get the generation of the most recent commit to the\n   * list of index files (N in the segments_N file).\n   *\n   * @param files -- array of file names to check\n   */\n  public static long getLastCommitGeneration(String[] files) {\n    long max = -1;\n    for (String file : files) {\n      if (file.startsWith(IndexFileNames.SEGMENTS) && !file.equals(IndexFileNames.OLD_SEGMENTS_GEN)) {\n        long gen = generationFromSegmentsFileName(file);\n        if (gen > max) {\n          max = gen;\n        }\n      }\n    }\n    return max;\n  }\n\n","sourceOld":"  /**\n   * Get the generation of the most recent commit to the\n   * list of index files (N in the segments_N file).\n   *\n   * @param files -- array of file names to check\n   */\n  public static long getLastCommitGeneration(String[] files) {\n    if (files == null) {\n      return -1;\n    }\n    long max = -1;\n    for (String file : files) {\n      if (file.startsWith(IndexFileNames.SEGMENTS) && !file.equals(IndexFileNames.OLD_SEGMENTS_GEN)) {\n        long gen = generationFromSegmentsFileName(file);\n        if (gen > max) {\n          max = gen;\n        }\n      }\n    }\n    return max;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7166881391ea0f64d02756406371ce34719e4e8","date":1567583487,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#getLastCommitGeneration(String[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#getLastCommitGeneration(String[]).mjava","sourceNew":"  /**\n   * Get the generation of the most recent commit to the\n   * list of index files (N in the segments_N file).\n   *\n   * @param files -- array of file names to check\n   */\n  public static long getLastCommitGeneration(String[] files) {\n    long max = -1;\n    for (String file : files) {\n      if (file.startsWith(IndexFileNames.SEGMENTS) &&\n          // skipping this file here helps deliver the right exception when opening an old index\n          file.startsWith(OLD_SEGMENTS_GEN) == false) {\n        long gen = generationFromSegmentsFileName(file);\n        if (gen > max) {\n          max = gen;\n        }\n      }\n    }\n    return max;\n  }\n\n","sourceOld":"  /**\n   * Get the generation of the most recent commit to the\n   * list of index files (N in the segments_N file).\n   *\n   * @param files -- array of file names to check\n   */\n  public static long getLastCommitGeneration(String[] files) {\n    long max = -1;\n    for (String file : files) {\n      if (file.startsWith(IndexFileNames.SEGMENTS) && !file.equals(IndexFileNames.OLD_SEGMENTS_GEN)) {\n        long gen = generationFromSegmentsFileName(file);\n        if (gen > max) {\n          max = gen;\n        }\n      }\n    }\n    return max;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"46e4a8bdfbafda795ef9c39a2bc2d47095770299":["438e995b4e32916f631722aab36254146830fefb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7166881391ea0f64d02756406371ce34719e4e8":["f4abec28b874149a7223e32cc7a01704c27790de"],"f4abec28b874149a7223e32cc7a01704c27790de":["46e4a8bdfbafda795ef9c39a2bc2d47095770299"],"438e995b4e32916f631722aab36254146830fefb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f7166881391ea0f64d02756406371ce34719e4e8"]},"commit2Childs":{"46e4a8bdfbafda795ef9c39a2bc2d47095770299":["f4abec28b874149a7223e32cc7a01704c27790de"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["438e995b4e32916f631722aab36254146830fefb"],"f7166881391ea0f64d02756406371ce34719e4e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f4abec28b874149a7223e32cc7a01704c27790de":["f7166881391ea0f64d02756406371ce34719e4e8"],"438e995b4e32916f631722aab36254146830fefb":["46e4a8bdfbafda795ef9c39a2bc2d47095770299"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}