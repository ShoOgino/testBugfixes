{"path":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","pathOld":"src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","sourceNew":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(similarity);\n      this.termDocs = reader.termDocs(null);\n      score = w.getValue();\n      this.norms = norms;\n    }\n\n","sourceOld":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(similarity);\n      this.termDocs = reader.termDocs(null);\n      score = w.getValue();\n      this.norms = norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","sourceNew":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(similarity);\n      delDocs = MultiFields.getDeletedDocs(reader);\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","sourceOld":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(similarity);\n      this.termDocs = reader.termDocs(null);\n      score = w.getValue();\n      this.norms = norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e4946500259641951dbd7f8a61956bf14bef3f60","date":1283284212,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","sourceNew":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(similarity,w);\n      delDocs = MultiFields.getDeletedDocs(reader);\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","sourceOld":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(similarity);\n      delDocs = MultiFields.getDeletedDocs(reader);\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","sourceNew":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(similarity,w);\n      delDocs = MultiFields.getDeletedDocs(reader);\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","sourceOld":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(similarity);\n      delDocs = MultiFields.getDeletedDocs(reader);\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df3efec034da1483899681baabb1df029e8628c4","date":1294243646,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","sourceNew":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(similarity,w);\n      delDocs = reader.getDeletedDocs();\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","sourceOld":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(similarity,w);\n      delDocs = MultiFields.getDeletedDocs(reader);\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","sourceNew":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(similarity,w);\n      delDocs = reader.getDeletedDocs();\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","sourceOld":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(similarity,w);\n      delDocs = MultiFields.getDeletedDocs(reader);\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","sourceNew":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(similarity,w);\n      delDocs = reader.getDeletedDocs();\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","sourceOld":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(similarity,w);\n      delDocs = MultiFields.getDeletedDocs(reader);\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5e679b9c5f68f1f331de920ae8366af75b44060","date":1295555804,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","sourceNew":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(w);\n      this.similarity = similarity;\n      delDocs = reader.getDeletedDocs();\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","sourceOld":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(similarity,w);\n      delDocs = reader.getDeletedDocs();\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","sourceNew":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(w);\n      this.similarity = similarity;\n      delDocs = reader.getDeletedDocs();\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","sourceOld":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(similarity,w);\n      delDocs = reader.getDeletedDocs();\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","sourceNew":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(w);\n      this.similarity = similarity;\n      delDocs = reader.getDeletedDocs();\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","sourceOld":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(similarity,w);\n      delDocs = reader.getDeletedDocs();\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","date":1309960478,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","sourceNew":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(w);\n      this.similarity = similarity;\n      liveDocs = reader.getLiveDocs();\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","sourceOld":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(w);\n      this.similarity = similarity;\n      delDocs = reader.getDeletedDocs();\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","sourceNew":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(w);\n      this.similarity = similarity;\n      liveDocs = reader.getLiveDocs();\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","sourceOld":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(w);\n      this.similarity = similarity;\n      delDocs = reader.getDeletedDocs();\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","sourceNew":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(w);\n      this.similarity = similarity;\n      liveDocs = reader.getLiveDocs();\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","sourceOld":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(w);\n      this.similarity = similarity;\n      delDocs = reader.getDeletedDocs();\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f3cee3d20b0c786e6fca20539454262e29edcab","date":1310101685,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Weight,float).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","sourceNew":"    MatchAllScorer(IndexReader reader, Weight w, float score) throws IOException {\n      super(w);\n      liveDocs = reader.getLiveDocs();\n      this.score = score;\n      maxDoc = reader.maxDoc();\n    }\n\n","sourceOld":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(w);\n      this.similarity = similarity;\n      liveDocs = reader.getLiveDocs();\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Weight,float).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","sourceNew":"    MatchAllScorer(IndexReader reader, Weight w, float score) throws IOException {\n      super(w);\n      liveDocs = reader.getLiveDocs();\n      this.score = score;\n      maxDoc = reader.maxDoc();\n    }\n\n","sourceOld":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(w);\n      this.similarity = similarity;\n      liveDocs = reader.getLiveDocs();\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Weight,float).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MatchAllDocsQuery.MatchAllScorer#MatchAllScorer(IndexReader,Similarity,Weight,byte[]).mjava","sourceNew":"    MatchAllScorer(IndexReader reader, Weight w, float score) throws IOException {\n      super(w);\n      liveDocs = reader.getLiveDocs();\n      this.score = score;\n      maxDoc = reader.maxDoc();\n    }\n\n","sourceOld":"    MatchAllScorer(IndexReader reader, Similarity similarity, Weight w,\n        byte[] norms) throws IOException {\n      super(w);\n      this.similarity = similarity;\n      liveDocs = reader.getLiveDocs();\n      score = w.getValue();\n      maxDoc = reader.maxDoc();\n      this.norms = norms;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["e4946500259641951dbd7f8a61956bf14bef3f60","df3efec034da1483899681baabb1df029e8628c4"],"0f3cee3d20b0c786e6fca20539454262e29edcab":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["e5e679b9c5f68f1f331de920ae8366af75b44060"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","e4946500259641951dbd7f8a61956bf14bef3f60"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["e5e679b9c5f68f1f331de920ae8366af75b44060","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["868da859b43505d9d2a023bfeae6dd0c795f5295","e5e679b9c5f68f1f331de920ae8366af75b44060"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["e5e679b9c5f68f1f331de920ae8366af75b44060","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"df3efec034da1483899681baabb1df029e8628c4":["e4946500259641951dbd7f8a61956bf14bef3f60"],"1291e4568eb7d9463d751627596ef14baf4c1603":["d083e83f225b11e5fdd900e83d26ddb385b6955c","0f3cee3d20b0c786e6fca20539454262e29edcab"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["817d8435e9135b756f08ce6710ab0baac51bdf88","0f3cee3d20b0c786e6fca20539454262e29edcab"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["70ad682703b8585f5d0a637efec044d57ec05efb","e5e679b9c5f68f1f331de920ae8366af75b44060"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e5e679b9c5f68f1f331de920ae8366af75b44060":["df3efec034da1483899681baabb1df029e8628c4"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","df3efec034da1483899681baabb1df029e8628c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f3cee3d20b0c786e6fca20539454262e29edcab"],"e4946500259641951dbd7f8a61956bf14bef3f60":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"0f3cee3d20b0c786e6fca20539454262e29edcab":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["0f3cee3d20b0c786e6fca20539454262e29edcab","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","e4946500259641951dbd7f8a61956bf14bef3f60"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["1291e4568eb7d9463d751627596ef14baf4c1603"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":["f0b9507caf22f292ac0e5e59f62db4275adf4511"],"df3efec034da1483899681baabb1df029e8628c4":["70ad682703b8585f5d0a637efec044d57ec05efb","e5e679b9c5f68f1f331de920ae8366af75b44060","868da859b43505d9d2a023bfeae6dd0c795f5295"],"1291e4568eb7d9463d751627596ef14baf4c1603":[],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e5e679b9c5f68f1f331de920ae8366af75b44060":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","d083e83f225b11e5fdd900e83d26ddb385b6955c","e79a6d080bdd5b2a8f56342cf571b5476de04180","817d8435e9135b756f08ce6710ab0baac51bdf88","29ef99d61cda9641b6250bf9567329a6e65f901d"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"e4946500259641951dbd7f8a61956bf14bef3f60":["70ad682703b8585f5d0a637efec044d57ec05efb","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","df3efec034da1483899681baabb1df029e8628c4"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e79a6d080bdd5b2a8f56342cf571b5476de04180","1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}