{"path":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#testEncodeDecode().mjava","commits":[{"id":"a54220739e069bc527a5e0a9982e5a9e1367493d","date":1453803260,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#testEncodeDecode().mjava","pathOld":"/dev/null","sourceNew":"  public void testEncodeDecode() throws Exception {\n    int iters = atLeast(10000);\n    boolean small = random().nextBoolean();\n    for(int iter=0;iter<iters;iter++) {\n      double lat = randomLat(small);\n      double lon = randomLon(small);\n\n      long enc = GeoUtils.mortonHash(lon, lat);\n      double latEnc = GeoUtils.mortonUnhashLat(enc);\n      double lonEnc = GeoUtils.mortonUnhashLon(enc);\n\n      assertEquals(\"lat=\" + lat + \" latEnc=\" + latEnc + \" diff=\" + (lat - latEnc), lat, latEnc, GeoUtils.TOLERANCE);\n      assertEquals(\"lon=\" + lon + \" lonEnc=\" + lonEnc + \" diff=\" + (lon - lonEnc), lon, lonEnc, GeoUtils.TOLERANCE);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac88193d9fe80e165a43bb0555c43afa83da8330","date":1453823827,"type":0,"author":"jbernste","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#testEncodeDecode().mjava","pathOld":"/dev/null","sourceNew":"  public void testEncodeDecode() throws Exception {\n    int iters = atLeast(10000);\n    boolean small = random().nextBoolean();\n    for(int iter=0;iter<iters;iter++) {\n      double lat = randomLat(small);\n      double lon = randomLon(small);\n\n      long enc = GeoUtils.mortonHash(lon, lat);\n      double latEnc = GeoUtils.mortonUnhashLat(enc);\n      double lonEnc = GeoUtils.mortonUnhashLon(enc);\n\n      assertEquals(\"lat=\" + lat + \" latEnc=\" + latEnc + \" diff=\" + (lat - latEnc), lat, latEnc, GeoUtils.TOLERANCE);\n      assertEquals(\"lon=\" + lon + \" lonEnc=\" + lonEnc + \" diff=\" + (lon - lonEnc), lon, lonEnc, GeoUtils.TOLERANCE);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/search/TestGeoPointQuery#testEncodeDecode().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestGeoPointQuery#testEncodeDecode().mjava","sourceNew":"  public void testEncodeDecode() throws Exception {\n    int iters = atLeast(10000);\n    boolean small = random().nextBoolean();\n    for(int iter=0;iter<iters;iter++) {\n      double lat = randomLat(small);\n      double lon = randomLon(small);\n\n      long enc = GeoUtils.mortonHash(lon, lat);\n      double latEnc = GeoUtils.mortonUnhashLat(enc);\n      double lonEnc = GeoUtils.mortonUnhashLon(enc);\n\n      assertEquals(\"lat=\" + lat + \" latEnc=\" + latEnc + \" diff=\" + (lat - latEnc), lat, latEnc, GeoUtils.TOLERANCE);\n      assertEquals(\"lon=\" + lon + \" lonEnc=\" + lonEnc + \" diff=\" + (lon - lonEnc), lon, lonEnc, GeoUtils.TOLERANCE);\n    }\n  }\n\n","sourceOld":"  public void testEncodeDecode() throws Exception {\n    int iters = atLeast(10000);\n    boolean small = random().nextBoolean();\n    for(int iter=0;iter<iters;iter++) {\n      double lat = randomLat(small);\n      double lon = randomLon(small);\n\n      long enc = GeoUtils.mortonHash(lon, lat);\n      double latEnc = GeoUtils.mortonUnhashLat(enc);\n      double lonEnc = GeoUtils.mortonUnhashLon(enc);\n\n      assertEquals(\"lat=\" + lat + \" latEnc=\" + latEnc + \" diff=\" + (lat - latEnc), lat, latEnc, GeoUtils.TOLERANCE);\n      assertEquals(\"lon=\" + lon + \" lonEnc=\" + lonEnc + \" diff=\" + (lon - lonEnc), lon, lonEnc, GeoUtils.TOLERANCE);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ac88193d9fe80e165a43bb0555c43afa83da8330":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a54220739e069bc527a5e0a9982e5a9e1367493d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"937923083e4d137932336fc80f3d78758ff698a6":["ac88193d9fe80e165a43bb0555c43afa83da8330"],"a54220739e069bc527a5e0a9982e5a9e1367493d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["937923083e4d137932336fc80f3d78758ff698a6"]},"commit2Childs":{"ac88193d9fe80e165a43bb0555c43afa83da8330":["937923083e4d137932336fc80f3d78758ff698a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ac88193d9fe80e165a43bb0555c43afa83da8330","a54220739e069bc527a5e0a9982e5a9e1367493d"],"937923083e4d137932336fc80f3d78758ff698a6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a54220739e069bc527a5e0a9982e5a9e1367493d":["ac88193d9fe80e165a43bb0555c43afa83da8330"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}