{"path":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#compactPostings().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#compactPostings().mjava","pathOld":"src/java/org/apache/lucene/index/TermsHashPerField#compactPostings().mjava","sourceNew":"  private synchronized void compactPostings() {\n    int upto = 0;\n    for(int i=0;i<postingsHashSize;i++) {\n      if (postingsHash[i] != null) {\n        if (upto < i) {\n          postingsHash[upto] = postingsHash[i];\n          postingsHash[i] = null;\n        }\n        upto++;\n      }\n    }\n\n    assert upto == numPostings;\n    postingsCompacted = true;\n  }\n\n","sourceOld":"  private synchronized void compactPostings() {\n    int upto = 0;\n    for(int i=0;i<postingsHashSize;i++) {\n      if (postingsHash[i] != null) {\n        if (upto < i) {\n          postingsHash[upto] = postingsHash[i];\n          postingsHash[i] = null;\n        }\n        upto++;\n      }\n    }\n\n    assert upto == numPostings;\n    postingsCompacted = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9","date":1269379515,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#compactPostings().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#compactPostings().mjava","sourceNew":"  private synchronized void compactPostings() {\n    int upto = 0;\n    for(int i=0;i<postingsHashSize;i++) {\n      if (postingsHash[i] != -1) {\n        if (upto < i) {\n          postingsHash[upto] = postingsHash[i];\n          postingsHash[i] = -1;\n        }\n        upto++;\n      }\n    }\n\n    assert upto == numPostings;\n    postingsCompacted = true;\n  }\n\n","sourceOld":"  private synchronized void compactPostings() {\n    int upto = 0;\n    for(int i=0;i<postingsHashSize;i++) {\n      if (postingsHash[i] != null) {\n        if (upto < i) {\n          postingsHash[upto] = postingsHash[i];\n          postingsHash[i] = null;\n        }\n        upto++;\n      }\n    }\n\n    assert upto == numPostings;\n    postingsCompacted = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c18273ea5b3974d2f30117f46f1ae416c28f727","date":1279708040,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#compactPostings().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#compactPostings().mjava","sourceNew":"  private void compactPostings() {\n    int upto = 0;\n    for(int i=0;i<postingsHashSize;i++) {\n      if (postingsHash[i] != -1) {\n        if (upto < i) {\n          postingsHash[upto] = postingsHash[i];\n          postingsHash[i] = -1;\n        }\n        upto++;\n      }\n    }\n\n    assert upto == numPostings;\n    postingsCompacted = true;\n  }\n\n","sourceOld":"  private synchronized void compactPostings() {\n    int upto = 0;\n    for(int i=0;i<postingsHashSize;i++) {\n      if (postingsHash[i] != -1) {\n        if (upto < i) {\n          postingsHash[upto] = postingsHash[i];\n          postingsHash[i] = -1;\n        }\n        upto++;\n      }\n    }\n\n    assert upto == numPostings;\n    postingsCompacted = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392","date":1286023472,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#compactPostings().mjava","sourceNew":null,"sourceOld":"  private synchronized void compactPostings() {\n    int upto = 0;\n    for(int i=0;i<postingsHashSize;i++) {\n      if (postingsHash[i] != -1) {\n        if (upto < i) {\n          postingsHash[upto] = postingsHash[i];\n          postingsHash[i] = -1;\n        }\n        upto++;\n      }\n    }\n\n    assert upto == numPostings;\n    postingsCompacted = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#compactPostings().mjava","sourceNew":null,"sourceOld":"  private void compactPostings() {\n    int upto = 0;\n    for(int i=0;i<postingsHashSize;i++) {\n      if (postingsHash[i] != -1) {\n        if (upto < i) {\n          postingsHash[upto] = postingsHash[i];\n          postingsHash[i] = -1;\n        }\n        upto++;\n      }\n    }\n\n    assert upto == numPostings;\n    postingsCompacted = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392":["741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["6c18273ea5b3974d2f30117f46f1ae416c28f727","5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9":["5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392","6c18273ea5b3974d2f30117f46f1ae416c28f727"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["741ed634ca00f7fcf06280bd2bf3f7eb9b605cc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}