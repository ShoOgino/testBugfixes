{"path":"contrib/miscellaneous/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","commits":[{"id":"7ae36bc5dae83f94e7da6e03d7f3b14ea175af4c","date":1166653933,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/miscellaneous/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Command Line Execution method\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index <package.SimilarityClassName | -n> field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n    if (!args[1].equals(\"-n\")) {\n      try {\n        Class simClass = Class.forName(args[1]);\n        s = (Similarity)simClass.newInstance();\n      } catch (Exception e) {\n        System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n        e.printStackTrace(System.err);\n        System.exit(1);\n      }\n    }\n\n    Directory d = FSDirectory.getDirectory(args[0], false);\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10c49614cb8b943c412debb24ccb614128394470","date":1178343409,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"contrib/miscellaneous/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","pathOld":"contrib/miscellaneous/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","sourceNew":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index <package.SimilarityClassName | -n> field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n    if (!args[1].equals(\"-n\")) {\n      try {\n        Class simClass = Class.forName(args[1]);\n        s = (Similarity)simClass.newInstance();\n      } catch (Exception e) {\n        System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n        e.printStackTrace(System.err);\n        System.exit(1);\n      }\n    }\n\n    Directory d = FSDirectory.getDirectory(args[0], false);\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","sourceOld":"  /**\n   * Command Line Execution method\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index <package.SimilarityClassName | -n> field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n    if (!args[1].equals(\"-n\")) {\n      try {\n        Class simClass = Class.forName(args[1]);\n        s = (Similarity)simClass.newInstance();\n      } catch (Exception e) {\n        System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n        e.printStackTrace(System.err);\n        System.exit(1);\n      }\n    }\n\n    Directory d = FSDirectory.getDirectory(args[0], false);\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64da070d50316669e06484f867954fbb92c59588","date":1235521757,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"contrib/miscellaneous/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","pathOld":"contrib/miscellaneous/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","sourceNew":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n    if (!args[1].equals(\"-n\")) {\n      try {\n        Class simClass = Class.forName(args[1]);\n        s = (Similarity)simClass.newInstance();\n      } catch (Exception e) {\n        System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n        e.printStackTrace(System.err);\n        System.exit(1);\n      }\n    }\n\n    Directory d = FSDirectory.getDirectory(args[0], false);\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","sourceOld":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index <package.SimilarityClassName | -n> field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n    if (!args[1].equals(\"-n\")) {\n      try {\n        Class simClass = Class.forName(args[1]);\n        s = (Similarity)simClass.newInstance();\n      } catch (Exception e) {\n        System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n        e.printStackTrace(System.err);\n        System.exit(1);\n      }\n    }\n\n    Directory d = FSDirectory.getDirectory(args[0], false);\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba712167ee848727018d8b77aa0c273839fbe15c","date":1244411561,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/miscellaneous/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","pathOld":"contrib/miscellaneous/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","sourceNew":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n    if (!args[1].equals(\"-n\")) {\n      try {\n        Class simClass = Class.forName(args[1]);\n        s = (Similarity)simClass.newInstance();\n      } catch (Exception e) {\n        System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n        e.printStackTrace(System.err);\n        System.exit(1);\n      }\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","sourceOld":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n    if (!args[1].equals(\"-n\")) {\n      try {\n        Class simClass = Class.forName(args[1]);\n        s = (Similarity)simClass.newInstance();\n      } catch (Exception e) {\n        System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n        e.printStackTrace(System.err);\n        System.exit(1);\n      }\n    }\n\n    Directory d = FSDirectory.getDirectory(args[0], false);\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48bedd31c61edafb8baaff4bcbcac19449fb7c3a","date":1251468037,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","pathOld":"contrib/miscellaneous/src/java/org/apache/lucene/index/FieldNormModifier#main(String[]).mjava","sourceNew":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n    if (!args[1].equals(\"-n\")) {\n      try {\n        Class simClass = Class.forName(args[1]);\n        s = (Similarity)simClass.newInstance();\n      } catch (Exception e) {\n        System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n        e.printStackTrace(System.err);\n        System.exit(1);\n      }\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","sourceOld":"  /**\n   * Command Line Execution method.\n   *\n   * <pre>\n   * Usage: FieldNormModifier /path/index &lt;package.SimilarityClassName | -n&gt; field1 field2 ...\n   * </pre>\n   */\n  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: FieldNormModifier <index> <package.SimilarityClassName | -n> <field1> [field2] ...\");\n      System.exit(1);\n    }\n\n    Similarity s = null;\n    if (!args[1].equals(\"-n\")) {\n      try {\n        Class simClass = Class.forName(args[1]);\n        s = (Similarity)simClass.newInstance();\n      } catch (Exception e) {\n        System.err.println(\"Couldn't instantiate similarity with empty constructor: \" + args[1]);\n        e.printStackTrace(System.err);\n        System.exit(1);\n      }\n    }\n\n    Directory d = FSDirectory.open(new File(args[0]));\n    FieldNormModifier fnm = new FieldNormModifier(d, s);\n\n    for (int i = 2; i < args.length; i++) {\n      System.out.print(\"Updating field: \" + args[i] + \" \" + (new Date()).toString() + \" ... \");\n      fnm.reSetNorms(args[i]);\n      System.out.println(new Date().toString());\n    }\n    \n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"64da070d50316669e06484f867954fbb92c59588":["10c49614cb8b943c412debb24ccb614128394470"],"7ae36bc5dae83f94e7da6e03d7f3b14ea175af4c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["ba712167ee848727018d8b77aa0c273839fbe15c"],"10c49614cb8b943c412debb24ccb614128394470":["7ae36bc5dae83f94e7da6e03d7f3b14ea175af4c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"ba712167ee848727018d8b77aa0c273839fbe15c":["64da070d50316669e06484f867954fbb92c59588"]},"commit2Childs":{"64da070d50316669e06484f867954fbb92c59588":["ba712167ee848727018d8b77aa0c273839fbe15c"],"7ae36bc5dae83f94e7da6e03d7f3b14ea175af4c":["10c49614cb8b943c412debb24ccb614128394470"],"10c49614cb8b943c412debb24ccb614128394470":["64da070d50316669e06484f867954fbb92c59588"],"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7ae36bc5dae83f94e7da6e03d7f3b14ea175af4c"],"ba712167ee848727018d8b77aa0c273839fbe15c":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}