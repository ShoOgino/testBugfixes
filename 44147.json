{"path":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","pathOld":"/dev/null","sourceNew":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = new File(dataDir + File.separator + \"data_\" + port);\n    data.mkdirs();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    Initializer init = new CoreContainer.Initializer();\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<Integer>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = init.initialize();\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","pathOld":"/dev/null","sourceNew":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = new File(dataDir + File.separator + \"data_\" + port);\n    data.mkdirs();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    Initializer init = new CoreContainer.Initializer();\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<Integer>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = init.initialize();\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","pathOld":"/dev/null","sourceNew":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = new File(dataDir + File.separator + \"data_\" + port);\n    data.mkdirs();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    Initializer init = new CoreContainer.Initializer();\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<Integer>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = init.initialize();\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52ae7051bd9161fb49863393ff0ff8e94fbb3f77","date":1335279935,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","sourceNew":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = new File(dataDir + File.separator + \"data_\" + port);\n    data.mkdirs();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    Initializer init = new CoreContainer.Initializer();\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<Integer>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = init.initialize();\n    assertTrue(\"Container \" + port + \" has no cores!\", container.getCores()\n        .size() > 0);\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","sourceOld":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = new File(dataDir + File.separator + \"data_\" + port);\n    data.mkdirs();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    Initializer init = new CoreContainer.Initializer();\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<Integer>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = init.initialize();\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d264f386d864b5751209060e8886ca9845f70469","date":1372172126,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","sourceNew":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = new File(dataDir + File.separator + \"data_\" + port);\n    data.mkdirs();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<Integer>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = new CoreContainer();\n    container.load();\n    assertTrue(\"Container \" + port + \" has no cores!\", container.getCores()\n        .size() > 0);\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","sourceOld":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = new File(dataDir + File.separator + \"data_\" + port);\n    data.mkdirs();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    Initializer init = new CoreContainer.Initializer();\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<Integer>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = init.initialize();\n    assertTrue(\"Container \" + port + \" has no cores!\", container.getCores()\n        .size() > 0);\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"354983dcdf70c800bf2573d10b54a7391b1dc167","date":1372183171,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","sourceNew":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = new File(dataDir + File.separator + \"data_\" + port);\n    data.mkdirs();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    Initializer init = new CoreContainer.Initializer();\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<Integer>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = init.initialize();\n    assertTrue(\"Container \" + port + \" has no cores!\", container.getCores()\n        .size() > 0);\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","sourceOld":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = new File(dataDir + File.separator + \"data_\" + port);\n    data.mkdirs();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<Integer>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = new CoreContainer();\n    container.load();\n    assertTrue(\"Container \" + port + \" has no cores!\", container.getCores()\n        .size() > 0);\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7116474e2e390259937401cf928323e0cbc75e60","date":1372780249,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","sourceNew":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = new File(dataDir + File.separator + \"data_\" + port);\n    data.mkdirs();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<Integer>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = new CoreContainer();\n    container.load();\n    assertTrue(\"Container \" + port + \" has no cores!\", container.getCores()\n        .size() > 0);\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","sourceOld":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = new File(dataDir + File.separator + \"data_\" + port);\n    data.mkdirs();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    Initializer init = new CoreContainer.Initializer();\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<Integer>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = init.initialize();\n    assertTrue(\"Container \" + port + \" has no cores!\", container.getCores()\n        .size() > 0);\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","sourceNew":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = new File(dataDir + File.separator + \"data_\" + port);\n    data.mkdirs();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<Integer>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = new CoreContainer();\n    container.load();\n    assertTrue(\"Container \" + port + \" has no cores!\", container.getCores()\n        .size() > 0);\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","sourceOld":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = new File(dataDir + File.separator + \"data_\" + port);\n    data.mkdirs();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    Initializer init = new CoreContainer.Initializer();\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<Integer>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = init.initialize();\n    assertTrue(\"Container \" + port + \" has no cores!\", container.getCores()\n        .size() > 0);\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","sourceNew":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = new File(dataDir + File.separator + \"data_\" + port);\n    data.mkdirs();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = new CoreContainer();\n    container.load();\n    assertTrue(\"Container \" + port + \" has no cores!\", container.getCores()\n        .size() > 0);\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","sourceOld":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = new File(dataDir + File.separator + \"data_\" + port);\n    data.mkdirs();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<Integer>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = new CoreContainer();\n    container.load();\n    assertTrue(\"Container \" + port + \" has no cores!\", container.getCores()\n        .size() > 0);\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","sourceNew":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = createTempDir();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = new CoreContainer();\n    container.load();\n    assertTrue(\"Container \" + port + \" has no cores!\", container.getCores()\n        .size() > 0);\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","sourceOld":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = new File(dataDir + File.separator + \"data_\" + port);\n    data.mkdirs();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = new CoreContainer();\n    container.load();\n    assertTrue(\"Container \" + port + \" has no cores!\", container.getCores()\n        .size() > 0);\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","sourceNew":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = createTempDir();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = new CoreContainer();\n    container.load();\n    assertTrue(\"Container \" + port + \" has no cores!\", container.getCores()\n        .size() > 0);\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","sourceOld":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = new File(dataDir + File.separator + \"data_\" + port);\n    data.mkdirs();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = new CoreContainer();\n    container.load();\n    assertTrue(\"Container \" + port + \" has no cores!\", container.getCores()\n        .size() > 0);\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","sourceNew":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = createTempDir().toFile();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = new CoreContainer();\n    container.load();\n    assertTrue(\"Container \" + port + \" has no cores!\", container.getCores()\n        .size() > 0);\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","sourceOld":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = createTempDir();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = new CoreContainer();\n    container.load();\n    assertTrue(\"Container \" + port + \" has no cores!\", container.getCores()\n        .size() > 0);\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","sourceNew":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = createTempDir().toFile();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = new CoreContainer();\n    container.load();\n    container.create(new CoreDescriptor(container, \"collection1\", \"collection1\", \"collection\", \"collection1\"));\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","sourceOld":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = createTempDir().toFile();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = new CoreContainer();\n    container.load();\n    assertTrue(\"Container \" + port + \" has no cores!\", container.getCores()\n        .size() > 0);\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","date":1448892165,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","sourceNew":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    Path data = createTempDir();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    System.setProperty(\"solr.data.dir\", data.toString());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n\n    SolrResourceLoader loader = new SolrResourceLoader(createTempDir());\n    Files.copy(TEST_PATH().resolve(\"solr.xml\"), loader.getInstancePath().resolve(\"solr.xml\"));\n    CoreContainer container = new CoreContainer(loader);\n    container.load();\n    container.create(\"collection1_\" + shard, ImmutableMap.of(\"collection\", \"collection1\"));\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","sourceOld":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    File data = createTempDir().toFile();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    System.setProperty(\"solr.data.dir\", data.getAbsolutePath());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n    CoreContainer container = new CoreContainer();\n    container.load();\n    container.create(new CoreDescriptor(container, \"collection1\", \"collection1\", \"collection\", \"collection1\"));\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9b4296bd51ca61b482138791478afdd0f7d3a3d","date":1498058739,"type":4,"author":"Cao Manh Dat","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","sourceNew":null,"sourceOld":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    Path data = createTempDir();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    System.setProperty(\"solr.data.dir\", data.toString());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n\n    SolrResourceLoader loader = new SolrResourceLoader(createTempDir());\n    Files.copy(TEST_PATH().resolve(\"solr.xml\"), loader.getInstancePath().resolve(\"solr.xml\"));\n    CoreContainer container = new CoreContainer(loader);\n    container.load();\n    container.create(\"collection1_\" + shard, ImmutableMap.of(\"collection\", \"collection1\"));\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","sourceNew":null,"sourceOld":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    Path data = createTempDir();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    System.setProperty(\"solr.data.dir\", data.toString());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n\n    SolrResourceLoader loader = new SolrResourceLoader(createTempDir());\n    Files.copy(TEST_PATH().resolve(\"solr.xml\"), loader.getInstancePath().resolve(\"solr.xml\"));\n    CoreContainer container = new CoreContainer(loader);\n    container.load();\n    container.create(\"collection1_\" + shard, ImmutableMap.of(\"collection\", \"collection1\"));\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionIntegrationTest#setupContainer(int,String).mjava","sourceNew":null,"sourceOld":"  private void setupContainer(int port, String shard) throws IOException,\n      ParserConfigurationException, SAXException {\n    Path data = createTempDir();\n    \n    System.setProperty(\"hostPort\", Integer.toString(port));\n    System.setProperty(\"shard\", shard);\n    System.setProperty(\"solr.data.dir\", data.toString());\n    System.setProperty(\"solr.solr.home\", TEST_HOME());\n    Set<Integer> ports = shardPorts.get(shard);\n    if (ports == null) {\n      ports = new HashSet<>();\n      shardPorts.put(shard, ports);\n    }\n    ports.add(port);\n\n    SolrResourceLoader loader = new SolrResourceLoader(createTempDir());\n    Files.copy(TEST_PATH().resolve(\"solr.xml\"), loader.getInstancePath().resolve(\"solr.xml\"));\n    CoreContainer container = new CoreContainer(loader);\n    container.load();\n    container.create(\"collection1_\" + shard, ImmutableMap.of(\"collection\", \"collection1\"));\n    containerMap.put(port, container);\n    System.clearProperty(\"solr.solr.home\");\n    System.clearProperty(\"hostPort\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["7116474e2e390259937401cf928323e0cbc75e60"],"7116474e2e390259937401cf928323e0cbc75e60":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a9b4296bd51ca61b482138791478afdd0f7d3a3d":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["52ae7051bd9161fb49863393ff0ff8e94fbb3f77","7116474e2e390259937401cf928323e0cbc75e60"],"52ae7051bd9161fb49863393ff0ff8e94fbb3f77":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["d264f386d864b5751209060e8886ca9845f70469"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["f4abec28b874149a7223e32cc7a01704c27790de"],"d264f386d864b5751209060e8886ca9845f70469":["52ae7051bd9161fb49863393ff0ff8e94fbb3f77"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","a9b4296bd51ca61b482138791478afdd0f7d3a3d"],"28288370235ed02234a64753cdbf0c6ec096304a":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","a9b4296bd51ca61b482138791478afdd0f7d3a3d"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"7116474e2e390259937401cf928323e0cbc75e60":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a9b4296bd51ca61b482138791478afdd0f7d3a3d":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"52ae7051bd9161fb49863393ff0ff8e94fbb3f77":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d264f386d864b5751209060e8886ca9845f70469"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["7116474e2e390259937401cf928323e0cbc75e60"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"d264f386d864b5751209060e8886ca9845f70469":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"f4abec28b874149a7223e32cc7a01704c27790de":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["a9b4296bd51ca61b482138791478afdd0f7d3a3d","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["52ae7051bd9161fb49863393ff0ff8e94fbb3f77","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","0d22ac6a4146774c1bc8400160fc0b6150294e92","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}