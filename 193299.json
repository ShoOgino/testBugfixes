{"path":"lucene/core/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredFieldsEnum#terms().mjava","commits":[{"id":"0274c27988a26cb0cda3a0d15b282221b1b453f0","date":1343923460,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredFieldsEnum#terms().mjava","pathOld":"/dev/null","sourceNew":"      public Terms terms() throws IOException {\r\n        FuzzySet filter = bloomsByFieldName.get(currentFieldName);\r\n        if (filter == null) {\r\n          return delegateFieldsEnum.terms();\r\n        } else {\r\n          Terms result = delegateFieldsEnum.terms();\r\n          if (result == null) {\r\n            return null;\r\n          }\r\n          // wrap the terms object with a bloom filter\r\n          return new BloomFilteredTerms(result, filter);\r\n        }\r\n      }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredFieldsEnum#terms().mjava","pathOld":"/dev/null","sourceNew":"      public Terms terms() throws IOException {\r\n        FuzzySet filter = bloomsByFieldName.get(currentFieldName);\r\n        if (filter == null) {\r\n          return delegateFieldsEnum.terms();\r\n        } else {\r\n          Terms result = delegateFieldsEnum.terms();\r\n          if (result == null) {\r\n            return null;\r\n          }\r\n          // wrap the terms object with a bloom filter\r\n          return new BloomFilteredTerms(result, filter);\r\n        }\r\n      }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredFieldsEnum#terms().mjava","pathOld":"/dev/null","sourceNew":"      public Terms terms() throws IOException {\r\n        FuzzySet filter = bloomsByFieldName.get(currentFieldName);\r\n        if (filter == null) {\r\n          return delegateFieldsEnum.terms();\r\n        } else {\r\n          Terms result = delegateFieldsEnum.terms();\r\n          if (result == null) {\r\n            return null;\r\n          }\r\n          // wrap the terms object with a bloom filter\r\n          return new BloomFilteredTerms(result, filter);\r\n        }\r\n      }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb07ab105350b80ed9d63ca64b117084ed7391bc","date":1344824719,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredFieldsEnum#terms().mjava","sourceNew":null,"sourceOld":"      public Terms terms() throws IOException {\r\n        FuzzySet filter = bloomsByFieldName.get(currentFieldName);\r\n        if (filter == null) {\r\n          return delegateFieldsEnum.terms();\r\n        } else {\r\n          Terms result = delegateFieldsEnum.terms();\r\n          if (result == null) {\r\n            return null;\r\n          }\r\n          // wrap the terms object with a bloom filter\r\n          return new BloomFilteredTerms(result, filter);\r\n        }\r\n      }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredFieldsEnum#terms().mjava","sourceNew":null,"sourceOld":"      public Terms terms() throws IOException {\r\n        FuzzySet filter = bloomsByFieldName.get(currentFieldName);\r\n        if (filter == null) {\r\n          return delegateFieldsEnum.terms();\r\n        } else {\r\n          Terms result = delegateFieldsEnum.terms();\r\n          if (result == null) {\r\n            return null;\r\n          }\r\n          // wrap the terms object with a bloom filter\r\n          return new BloomFilteredTerms(result, filter);\r\n        }\r\n      }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/bloom/BloomFilteringPostingsFormat.BloomFilteredFieldsProducer.BloomFilteredFieldsEnum#terms().mjava","sourceNew":null,"sourceOld":"      public Terms terms() throws IOException {\r\n        FuzzySet filter = bloomsByFieldName.get(currentFieldName);\r\n        if (filter == null) {\r\n          return delegateFieldsEnum.terms();\r\n        } else {\r\n          Terms result = delegateFieldsEnum.terms();\r\n          if (result == null) {\r\n            return null;\r\n          }\r\n          // wrap the terms object with a bloom filter\r\n          return new BloomFilteredTerms(result, filter);\r\n        }\r\n      }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":["8fd5be977c105554c6a7b68afcdbc511439723ab","fb07ab105350b80ed9d63ca64b117084ed7391bc"],"fb07ab105350b80ed9d63ca64b117084ed7391bc":["0274c27988a26cb0cda3a0d15b282221b1b453f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0274c27988a26cb0cda3a0d15b282221b1b453f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0274c27988a26cb0cda3a0d15b282221b1b453f0"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0274c27988a26cb0cda3a0d15b282221b1b453f0"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["d6f074e73200c07d54f242d3880a8da5a35ff97b","fb07ab105350b80ed9d63ca64b117084ed7391bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb07ab105350b80ed9d63ca64b117084ed7391bc"]},"commit2Childs":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"fb07ab105350b80ed9d63ca64b117084ed7391bc":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0274c27988a26cb0cda3a0d15b282221b1b453f0","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab"],"0274c27988a26cb0cda3a0d15b282221b1b453f0":["fb07ab105350b80ed9d63ca64b117084ed7391bc","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["c7869f64c874ebf7f317d22c00baf2b6857797a6"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}