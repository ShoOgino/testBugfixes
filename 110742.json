{"path":"lucene/core/src/java/org/apache/lucene/index/MergeReaderWrapper#checkBounds(int).mjava","commits":[{"id":"ceaef6cfc68c8ab22a684192e469a8280f9e6e70","date":1462354657,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergeReaderWrapper#checkBounds(int).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/MergeReaderWrapper#checkBounds(int).mjava","sourceNew":"  private void checkBounds(int docID) {\n    if (docID < 0 || docID >= maxDoc()) {       \n      throw new IndexOutOfBoundsException(\"docID must be >= 0 and < maxDoc=\" + maxDoc() + \" (got docID=\" + docID + \")\");\n    }\n  }\n\n","sourceOld":"  private void checkBounds(int docID) {\n    if (docID < 0 || docID >= maxDoc()) {       \n      throw new IndexOutOfBoundsException(\"docID must be >= 0 and < maxDoc=\" + maxDoc() + \" (got docID=\" + docID + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d33e731a93d4b57e662ff094f64f94a745422d4","date":1463128289,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergeReaderWrapper#checkBounds(int).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/MergeReaderWrapper#checkBounds(int).mjava","sourceNew":"  private void checkBounds(int docID) {\n    if (docID < 0 || docID >= maxDoc()) {       \n      throw new IndexOutOfBoundsException(\"docID must be >= 0 and < maxDoc=\" + maxDoc() + \" (got docID=\" + docID + \")\");\n    }\n  }\n\n","sourceOld":"  private void checkBounds(int docID) {\n    if (docID < 0 || docID >= maxDoc()) {       \n      throw new IndexOutOfBoundsException(\"docID must be >= 0 and < maxDoc=\" + maxDoc() + \" (got docID=\" + docID + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergeReaderWrapper#checkBounds(int).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/MergeReaderWrapper#checkBounds(int).mjava","sourceNew":"  private void checkBounds(int docID) {\n    if (docID < 0 || docID >= maxDoc()) {       \n      throw new IndexOutOfBoundsException(\"docID must be >= 0 and < maxDoc=\" + maxDoc() + \" (got docID=\" + docID + \")\");\n    }\n  }\n\n","sourceOld":"  private void checkBounds(int docID) {\n    if (docID < 0 || docID >= maxDoc()) {       \n      throw new IndexOutOfBoundsException(\"docID must be >= 0 and < maxDoc=\" + maxDoc() + \" (got docID=\" + docID + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergeReaderWrapper#checkBounds(int).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/MergeReaderWrapper#checkBounds(int).mjava","sourceNew":"  private void checkBounds(int docID) {\n    if (docID < 0 || docID >= maxDoc()) {       \n      throw new IndexOutOfBoundsException(\"docID must be >= 0 and < maxDoc=\" + maxDoc() + \" (got docID=\" + docID + \")\");\n    }\n  }\n\n","sourceOld":"  private void checkBounds(int docID) {\n    if (docID < 0 || docID >= maxDoc()) {       \n      throw new IndexOutOfBoundsException(\"docID must be >= 0 and < maxDoc=\" + maxDoc() + \" (got docID=\" + docID + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergeReaderWrapper#checkBounds(int).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/MergeReaderWrapper#checkBounds(int).mjava","sourceNew":"  private void checkBounds(int docID) {\n    if (docID < 0 || docID >= maxDoc()) {       \n      throw new IndexOutOfBoundsException(\"docID must be >= 0 and < maxDoc=\" + maxDoc() + \" (got docID=\" + docID + \")\");\n    }\n  }\n\n","sourceOld":"  private void checkBounds(int docID) {\n    if (docID < 0 || docID >= maxDoc()) {       \n      throw new IndexOutOfBoundsException(\"docID must be >= 0 and < maxDoc=\" + maxDoc() + \" (got docID=\" + docID + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"456d7e7092cb043c740b4674301660ee8abc26fe","date":1517645879,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergeReaderWrapper#checkBounds(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergeReaderWrapper#checkBounds(int).mjava","sourceNew":"  private void checkBounds(int docID) {\n    FutureObjects.checkIndex(docID, maxDoc());\n  }\n\n","sourceOld":"  private void checkBounds(int docID) {\n    if (docID < 0 || docID >= maxDoc()) {       \n      throw new IndexOutOfBoundsException(\"docID must be >= 0 and < maxDoc=\" + maxDoc() + \" (got docID=\" + docID + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b88a121b875f9ae2ac50f85cf46dcb680f126357","date":1555416009,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergeReaderWrapper#checkBounds(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergeReaderWrapper#checkBounds(int).mjava","sourceNew":"  private void checkBounds(int docID) {\n    Objects.checkIndex(docID, maxDoc());\n  }\n\n","sourceOld":"  private void checkBounds(int docID) {\n    FutureObjects.checkIndex(docID, maxDoc());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b88a121b875f9ae2ac50f85cf46dcb680f126357":["456d7e7092cb043c740b4674301660ee8abc26fe"],"456d7e7092cb043c740b4674301660ee8abc26fe":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ad30c6a479e764150a3316e57263319775f1df2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3d33e731a93d4b57e662ff094f64f94a745422d4"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ceaef6cfc68c8ab22a684192e469a8280f9e6e70"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b88a121b875f9ae2ac50f85cf46dcb680f126357"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ad30c6a479e764150a3316e57263319775f1df2"]},"commit2Childs":{"b88a121b875f9ae2ac50f85cf46dcb680f126357":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"456d7e7092cb043c740b4674301660ee8abc26fe":["b88a121b875f9ae2ac50f85cf46dcb680f126357"],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["3d33e731a93d4b57e662ff094f64f94a745422d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ceaef6cfc68c8ab22a684192e469a8280f9e6e70","0ad30c6a479e764150a3316e57263319775f1df2","3d33e731a93d4b57e662ff094f64f94a745422d4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["0ad30c6a479e764150a3316e57263319775f1df2"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["456d7e7092cb043c740b4674301660ee8abc26fe","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}