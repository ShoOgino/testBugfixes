{"path":"src/test/org/apache/lucene/search/TestSort#testCustomSorts().mjava","commits":[{"id":"35c39157e8b6bc585e3a07e703d75db0f2ad56b2","date":1082672595,"type":0,"author":"Tim Jones","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#testCustomSorts().mjava","pathOld":"/dev/null","sourceNew":"\tpublic void testCustomSorts() throws Exception {\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparator()));\n\t\tassertMatches (full, queryX, sort, \"CAIEG\");\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparator(), true));\n\t\tassertMatches (full, queryY, sort, \"HJDBF\");\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99ee715b9c02dd47d9e69a18607a5192c1ebd82b","date":1085007927,"type":3,"author":"Tim Jones","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#testCustomSorts().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#testCustomSorts().mjava","sourceNew":"\tpublic void testCustomSorts() throws Exception {\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource()));\n\t\tassertMatches (full, queryX, sort, \"CAIEG\");\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource(), true));\n\t\tassertMatches (full, queryY, sort, \"HJDBF\");\n\t\tSortComparator custom = SampleComparable.getComparator();\n\t\tsort.setSort (new SortField (\"custom\", custom));\n\t\tassertMatches (full, queryX, sort, \"CAIEG\");\n\t\tsort.setSort (new SortField (\"custom\", custom, true));\n\t\tassertMatches (full, queryY, sort, \"HJDBF\");\n\t}\n\n","sourceOld":"\tpublic void testCustomSorts() throws Exception {\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparator()));\n\t\tassertMatches (full, queryX, sort, \"CAIEG\");\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparator(), true));\n\t\tassertMatches (full, queryY, sort, \"HJDBF\");\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba534479820dee396d07f520ba2a55400a1b6e7d","date":1085439102,"type":3,"author":"Tim Jones","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#testCustomSorts().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#testCustomSorts().mjava","sourceNew":"\t// test a custom sort function\n\tpublic void testCustomSorts() throws Exception {\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource()));\n\t\tassertMatches (full, queryX, sort, \"CAIEG\");\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource(), true));\n\t\tassertMatches (full, queryY, sort, \"HJDBF\");\n\t\tSortComparator custom = SampleComparable.getComparator();\n\t\tsort.setSort (new SortField (\"custom\", custom));\n\t\tassertMatches (full, queryX, sort, \"CAIEG\");\n\t\tsort.setSort (new SortField (\"custom\", custom, true));\n\t\tassertMatches (full, queryY, sort, \"HJDBF\");\n\t}\n\n","sourceOld":"\tpublic void testCustomSorts() throws Exception {\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource()));\n\t\tassertMatches (full, queryX, sort, \"CAIEG\");\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource(), true));\n\t\tassertMatches (full, queryY, sort, \"HJDBF\");\n\t\tSortComparator custom = SampleComparable.getComparator();\n\t\tsort.setSort (new SortField (\"custom\", custom));\n\t\tassertMatches (full, queryX, sort, \"CAIEG\");\n\t\tsort.setSort (new SortField (\"custom\", custom, true));\n\t\tassertMatches (full, queryY, sort, \"HJDBF\");\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63bc3238545c6012bd44f5d294077997f236bc4e","date":1233087321,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#testCustomSorts().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#testCustomSorts().mjava","sourceNew":"  // test a custom sort function\n  public void testCustomSorts() throws Exception {\n    sort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource()));\n    assertMatches (full, queryX, sort, \"CAIEG\");\n    sort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource(), true));\n    assertMatches (full, queryY, sort, \"HJDBF\");\n    SortComparator custom = SampleComparable.getComparator();\n    sort.setSort (new SortField (\"custom\", custom));\n    assertMatches (full, queryX, sort, \"CAIEG\");\n    sort.setSort (new SortField (\"custom\", custom, true));\n    assertMatches (full, queryY, sort, \"HJDBF\");\n  }\n\n","sourceOld":"\t// test a custom sort function\n\tpublic void testCustomSorts() throws Exception {\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource()));\n\t\tassertMatches (full, queryX, sort, \"CAIEG\");\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource(), true));\n\t\tassertMatches (full, queryY, sort, \"HJDBF\");\n\t\tSortComparator custom = SampleComparable.getComparator();\n\t\tsort.setSort (new SortField (\"custom\", custom));\n\t\tassertMatches (full, queryX, sort, \"CAIEG\");\n\t\tsort.setSort (new SortField (\"custom\", custom, true));\n\t\tassertMatches (full, queryY, sort, \"HJDBF\");\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/search/TestSort#testCustomSorts().mjava","sourceNew":null,"sourceOld":"  // test a custom sort function\n  public void testCustomSorts() throws Exception {\n    sort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource()));\n    assertMatches (full, queryX, sort, \"CAIEG\");\n    sort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource(), true));\n    assertMatches (full, queryY, sort, \"HJDBF\");\n    SortComparator custom = SampleComparable.getComparator();\n    sort.setSort (new SortField (\"custom\", custom));\n    assertMatches (full, queryX, sort, \"CAIEG\");\n    sort.setSort (new SortField (\"custom\", custom, true));\n    assertMatches (full, queryY, sort, \"HJDBF\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/search/TestSort#testCustomSorts().mjava","sourceNew":null,"sourceOld":"  // test a custom sort function\n  public void testCustomSorts() throws Exception {\n    sort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource()));\n    assertMatches (full, queryX, sort, \"CAIEG\");\n    sort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource(), true));\n    assertMatches (full, queryY, sort, \"HJDBF\");\n    SortComparator custom = SampleComparable.getComparator();\n    sort.setSort (new SortField (\"custom\", custom));\n    assertMatches (full, queryX, sort, \"CAIEG\");\n    sort.setSort (new SortField (\"custom\", custom, true));\n    assertMatches (full, queryY, sort, \"HJDBF\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"99ee715b9c02dd47d9e69a18607a5192c1ebd82b":["35c39157e8b6bc585e3a07e703d75db0f2ad56b2"],"35c39157e8b6bc585e3a07e703d75db0f2ad56b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["63bc3238545c6012bd44f5d294077997f236bc4e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a046c0c310bc77931fc8441bd920053b607dd14":["63bc3238545c6012bd44f5d294077997f236bc4e","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"63bc3238545c6012bd44f5d294077997f236bc4e":["ba534479820dee396d07f520ba2a55400a1b6e7d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0a046c0c310bc77931fc8441bd920053b607dd14"],"ba534479820dee396d07f520ba2a55400a1b6e7d":["99ee715b9c02dd47d9e69a18607a5192c1ebd82b"]},"commit2Childs":{"99ee715b9c02dd47d9e69a18607a5192c1ebd82b":["ba534479820dee396d07f520ba2a55400a1b6e7d"],"35c39157e8b6bc585e3a07e703d75db0f2ad56b2":["99ee715b9c02dd47d9e69a18607a5192c1ebd82b"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["35c39157e8b6bc585e3a07e703d75db0f2ad56b2"],"0a046c0c310bc77931fc8441bd920053b607dd14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"63bc3238545c6012bd44f5d294077997f236bc4e":["e8d1458a2543cbd30cbfe7929be4dcb5c5251659","0a046c0c310bc77931fc8441bd920053b607dd14"],"ba534479820dee396d07f520ba2a55400a1b6e7d":["63bc3238545c6012bd44f5d294077997f236bc4e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}