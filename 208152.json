{"path":"solr/core/src/java/org/apache/solr/core/PluginBag#[T]_createInitInstance(PluginInfo,SolrConfig.SolrPluginInfo,SolrCore,ResourceLoader,boolean).mjava","commits":[{"id":"d52ea0bca71d3b5f5fd37c12585ccd9309f8ea74","date":1563736916,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginBag#[T]_createInitInstance(PluginInfo,SolrConfig.SolrPluginInfo,SolrCore,ResourceLoader,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private static <T> T createInitInstance(PluginInfo pluginInfo, SolrConfig.SolrPluginInfo pluginMeta,\n                                          SolrCore core, ResourceLoader resourceLoader,\n                                          boolean isRuntimeLib) {\n    T localInst = null;\n    try {\n      localInst = (T) core.createInstance(pluginInfo.className, pluginMeta.clazz, pluginMeta.getCleanTag(), core, resourceLoader);\n    } catch (SolrException e) {\n      if (isRuntimeLib && !(resourceLoader instanceof MemClassLoader)) {\n        throw new SolrException(SolrException.ErrorCode.getErrorCode(e.code()),\n            e.getMessage() + \". runtime library loading is not enabled, start Solr with -Denable.runtime.lib=true\",\n            e.getCause());\n      }\n      throw e;\n\n\n    }\n    initInstance(localInst, pluginInfo);\n    if (localInst instanceof SolrCoreAware) {\n      SolrResourceLoader.assertAwareCompatibility(SolrCoreAware.class, localInst);\n      ((SolrCoreAware) localInst).inform(core);\n    }\n    if (localInst instanceof ResourceLoaderAware) {\n      SolrResourceLoader.assertAwareCompatibility(ResourceLoaderAware.class, localInst);\n      try {\n        ((ResourceLoaderAware) localInst).inform(core.getResourceLoader());\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"error initializing component\", e);\n      }\n    }\n    return localInst;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c","date":1566455239,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginBag#[T]_createInitInstance(PluginInfo,SolrConfig.SolrPluginInfo,SolrCore,ResourceLoader,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginBag#[T]_createInitInstance(PluginInfo,SolrConfig.SolrPluginInfo,SolrCore,ResourceLoader,boolean).mjava","sourceNew":"  private static <T> T createInitInstance(PluginInfo pluginInfo, SolrConfig.SolrPluginInfo pluginMeta,\n                                          SolrCore core, ResourceLoader resourceLoader,\n                                          boolean isRuntimeLib) {\n    T localInst = null;\n    try {\n      localInst = (T) SolrCore.createInstance(pluginInfo.className, pluginMeta.clazz, pluginMeta.getCleanTag(), core, resourceLoader);\n    } catch (SolrException e) {\n      if (isRuntimeLib && !(resourceLoader instanceof MemClassLoader)) {\n        throw new SolrException(SolrException.ErrorCode.getErrorCode(e.code()),\n            e.getMessage() + \". runtime library loading is not enabled, start Solr with -Denable.runtime.lib=true\",\n            e.getCause());\n      }\n      throw e;\n\n\n    }\n    initInstance(localInst, pluginInfo);\n    if (localInst instanceof SolrCoreAware) {\n      SolrResourceLoader.assertAwareCompatibility(SolrCoreAware.class, localInst);\n      ((SolrCoreAware) localInst).inform(core);\n    }\n    if (localInst instanceof ResourceLoaderAware) {\n      SolrResourceLoader.assertAwareCompatibility(ResourceLoaderAware.class, localInst);\n      try {\n        ((ResourceLoaderAware) localInst).inform(core.getResourceLoader());\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"error initializing component\", e);\n      }\n    }\n    return localInst;\n  }\n\n","sourceOld":"  private static <T> T createInitInstance(PluginInfo pluginInfo, SolrConfig.SolrPluginInfo pluginMeta,\n                                          SolrCore core, ResourceLoader resourceLoader,\n                                          boolean isRuntimeLib) {\n    T localInst = null;\n    try {\n      localInst = (T) core.createInstance(pluginInfo.className, pluginMeta.clazz, pluginMeta.getCleanTag(), core, resourceLoader);\n    } catch (SolrException e) {\n      if (isRuntimeLib && !(resourceLoader instanceof MemClassLoader)) {\n        throw new SolrException(SolrException.ErrorCode.getErrorCode(e.code()),\n            e.getMessage() + \". runtime library loading is not enabled, start Solr with -Denable.runtime.lib=true\",\n            e.getCause());\n      }\n      throw e;\n\n\n    }\n    initInstance(localInst, pluginInfo);\n    if (localInst instanceof SolrCoreAware) {\n      SolrResourceLoader.assertAwareCompatibility(SolrCoreAware.class, localInst);\n      ((SolrCoreAware) localInst).inform(core);\n    }\n    if (localInst instanceof ResourceLoaderAware) {\n      SolrResourceLoader.assertAwareCompatibility(ResourceLoaderAware.class, localInst);\n      try {\n        ((ResourceLoaderAware) localInst).inform(core.getResourceLoader());\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"error initializing component\", e);\n      }\n    }\n    return localInst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/PluginBag#[T]_createInitInstance(PluginInfo,SolrConfig.SolrPluginInfo,SolrCore,ResourceLoader,boolean).mjava","sourceNew":null,"sourceOld":"  private static <T> T createInitInstance(PluginInfo pluginInfo, SolrConfig.SolrPluginInfo pluginMeta,\n                                          SolrCore core, ResourceLoader resourceLoader,\n                                          boolean isRuntimeLib) {\n    T localInst = null;\n    try {\n      localInst = (T) SolrCore.createInstance(pluginInfo.className, pluginMeta.clazz, pluginMeta.getCleanTag(), core, resourceLoader);\n    } catch (SolrException e) {\n      if (isRuntimeLib && !(resourceLoader instanceof MemClassLoader)) {\n        throw new SolrException(SolrException.ErrorCode.getErrorCode(e.code()),\n            e.getMessage() + \". runtime library loading is not enabled, start Solr with -Denable.runtime.lib=true\",\n            e.getCause());\n      }\n      throw e;\n\n\n    }\n    initInstance(localInst, pluginInfo);\n    if (localInst instanceof SolrCoreAware) {\n      SolrResourceLoader.assertAwareCompatibility(SolrCoreAware.class, localInst);\n      ((SolrCoreAware) localInst).inform(core);\n    }\n    if (localInst instanceof ResourceLoaderAware) {\n      SolrResourceLoader.assertAwareCompatibility(ResourceLoaderAware.class, localInst);\n      try {\n        ((ResourceLoaderAware) localInst).inform(core.getResourceLoader());\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"error initializing component\", e);\n      }\n    }\n    return localInst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":4,"author":"jimczi","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/PluginBag#[T]_createInitInstance(PluginInfo,SolrConfig.SolrPluginInfo,SolrCore,ResourceLoader,boolean).mjava","sourceNew":null,"sourceOld":"  private static <T> T createInitInstance(PluginInfo pluginInfo, SolrConfig.SolrPluginInfo pluginMeta,\n                                          SolrCore core, ResourceLoader resourceLoader,\n                                          boolean isRuntimeLib) {\n    T localInst = null;\n    try {\n      localInst = (T) SolrCore.createInstance(pluginInfo.className, pluginMeta.clazz, pluginMeta.getCleanTag(), core, resourceLoader);\n    } catch (SolrException e) {\n      if (isRuntimeLib && !(resourceLoader instanceof MemClassLoader)) {\n        throw new SolrException(SolrException.ErrorCode.getErrorCode(e.code()),\n            e.getMessage() + \". runtime library loading is not enabled, start Solr with -Denable.runtime.lib=true\",\n            e.getCause());\n      }\n      throw e;\n\n\n    }\n    initInstance(localInst, pluginInfo);\n    if (localInst instanceof SolrCoreAware) {\n      SolrResourceLoader.assertAwareCompatibility(SolrCoreAware.class, localInst);\n      ((SolrCoreAware) localInst).inform(core);\n    }\n    if (localInst instanceof ResourceLoaderAware) {\n      SolrResourceLoader.assertAwareCompatibility(ResourceLoaderAware.class, localInst);\n      try {\n        ((ResourceLoaderAware) localInst).inform(core.getResourceLoader());\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"error initializing component\", e);\n      }\n    }\n    return localInst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d52ea0bca71d3b5f5fd37c12585ccd9309f8ea74":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c":["d52ea0bca71d3b5f5fd37c12585ccd9309f8ea74"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c44cc06c26e456fe9c215072b79fce30babe3975":["6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c44cc06c26e456fe9c215072b79fce30babe3975"],"b0b597c65628ca9e73913a07e81691f8229bae35":["6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"d52ea0bca71d3b5f5fd37c12585ccd9309f8ea74":["6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c"],"6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c":["c44cc06c26e456fe9c215072b79fce30babe3975","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d52ea0bca71d3b5f5fd37c12585ccd9309f8ea74"],"c44cc06c26e456fe9c215072b79fce30babe3975":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}