{"path":"lucene/sandbox/src/java/org/apache/lucene/geo/Rectangle2D#intersectRangeBBox(int,int,byte[],int,int,byte[]).mjava","commits":[{"id":"5e32619a05801247e931ce6b9998721600e247b0","date":1570166014,"type":0,"author":"Igor Motov","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/geo/Rectangle2D#intersectRangeBBox(int,int,byte[],int,int,byte[]).mjava","pathOld":"/dev/null","sourceNew":"  /** intersects this to a provided range bounding box **/\n  public Relation intersectRangeBBox(int minXOffset, int minYOffset, byte[] minTriangle,\n                                  int maxXOffset, int maxYOffset, byte[] maxTriangle) {\n    Relation eastRelation = intersectBBoxWithRangeBBox(this.bbox,\n        minXOffset, minYOffset, minTriangle, maxXOffset, maxYOffset, maxTriangle);\n    if (this.crossesDateline() && eastRelation == Relation.CELL_OUTSIDE_QUERY) {\n      return intersectBBoxWithRangeBBox(this.west, minXOffset, minYOffset, minTriangle, maxXOffset, maxYOffset, maxTriangle);\n    }\n    return eastRelation;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":0,"author":"jimczi","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/geo/Rectangle2D#intersectRangeBBox(int,int,byte[],int,int,byte[]).mjava","pathOld":"/dev/null","sourceNew":"  /** intersects this to a provided range bounding box **/\n  public Relation intersectRangeBBox(int minXOffset, int minYOffset, byte[] minTriangle,\n                                  int maxXOffset, int maxYOffset, byte[] maxTriangle) {\n    Relation eastRelation = intersectBBoxWithRangeBBox(this.bbox,\n        minXOffset, minYOffset, minTriangle, maxXOffset, maxYOffset, maxTriangle);\n    if (this.crossesDateline() && eastRelation == Relation.CELL_OUTSIDE_QUERY) {\n      return intersectBBoxWithRangeBBox(this.west, minXOffset, minYOffset, minTriangle, maxXOffset, maxYOffset, maxTriangle);\n    }\n    return eastRelation;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Rectangle2D#intersectRangeBBox(int,int,byte[],int,int,byte[]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/geo/Rectangle2D#intersectRangeBBox(int,int,byte[],int,int,byte[]).mjava","sourceNew":"  /** intersects this to a provided range bounding box **/\n  public Relation intersectRangeBBox(int minXOffset, int minYOffset, byte[] minTriangle,\n                                  int maxXOffset, int maxYOffset, byte[] maxTriangle) {\n    Relation eastRelation = intersectBBoxWithRangeBBox(this.bbox,\n        minXOffset, minYOffset, minTriangle, maxXOffset, maxYOffset, maxTriangle);\n    if (this.crossesDateline() && eastRelation == Relation.CELL_OUTSIDE_QUERY) {\n      return intersectBBoxWithRangeBBox(this.west, minXOffset, minYOffset, minTriangle, maxXOffset, maxYOffset, maxTriangle);\n    }\n    return eastRelation;\n  }\n\n","sourceOld":"  /** intersects this to a provided range bounding box **/\n  public Relation intersectRangeBBox(int minXOffset, int minYOffset, byte[] minTriangle,\n                                  int maxXOffset, int maxYOffset, byte[] maxTriangle) {\n    Relation eastRelation = intersectBBoxWithRangeBBox(this.bbox,\n        minXOffset, minYOffset, minTriangle, maxXOffset, maxYOffset, maxTriangle);\n    if (this.crossesDateline() && eastRelation == Relation.CELL_OUTSIDE_QUERY) {\n      return intersectBBoxWithRangeBBox(this.west, minXOffset, minYOffset, minTriangle, maxXOffset, maxYOffset, maxTriangle);\n    }\n    return eastRelation;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["5e32619a05801247e931ce6b9998721600e247b0"],"5e32619a05801247e931ce6b9998721600e247b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5e32619a05801247e931ce6b9998721600e247b0"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5e32619a05801247e931ce6b9998721600e247b0","b0b597c65628ca9e73913a07e81691f8229bae35"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5e32619a05801247e931ce6b9998721600e247b0":["09c1e6d465800c73af60624bf9d4459a19f7940c","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}