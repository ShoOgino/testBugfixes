{"path":"lucene/src/java/org/apache/lucene/index/DocValues.SourceCache#load(DocValues).mjava","commits":[{"id":"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","date":1323449025,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocValues.SourceCache#load(DocValues).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Atomically loads a {@link Source} into the cache from the given\n     * {@link DocValues} and returns it iff no other {@link Source} has already\n     * been cached. Otherwise the cached source is returned.\n     * <p>\n     * This method will not return <code>null</code>\n     */\n    public abstract Source load(DocValues values) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocValues.SourceCache#load(DocValues).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Atomically loads a {@link Source} into the cache from the given\n     * {@link DocValues} and returns it iff no other {@link Source} has already\n     * been cached. Otherwise the cached source is returned.\n     * <p>\n     * This method will not return <code>null</code>\n     */\n    public abstract Source load(DocValues values) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValues.SourceCache#load(DocValues).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocValues.SourceCache#load(DocValues).mjava","sourceNew":"    /**\n     * Atomically loads a {@link Source} into the cache from the given\n     * {@link DocValues} and returns it iff no other {@link Source} has already\n     * been cached. Otherwise the cached source is returned.\n     * <p>\n     * This method will not return <code>null</code>\n     */\n    public abstract Source load(DocValues values) throws IOException;\n\n","sourceOld":"    /**\n     * Atomically loads a {@link Source} into the cache from the given\n     * {@link DocValues} and returns it iff no other {@link Source} has already\n     * been cached. Otherwise the cached source is returned.\n     * <p>\n     * This method will not return <code>null</code>\n     */\n    public abstract Source load(DocValues values) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}