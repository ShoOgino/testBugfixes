{"path":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/PackedTokenAttributeImpl#setOffset(int,int).mjava","commits":[{"id":"93124590c6e2a8b45898cbae46f96c3a05d9bce0","date":1399415098,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/PackedTokenAttributeImpl#setOffset(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/Token#checkOffsets(int,int).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   * @see OffsetAttribute\n   */\n  @Override\n  public void setOffset(int startOffset, int endOffset) {\n    if (startOffset < 0 || endOffset < startOffset) {\n      throw new IllegalArgumentException(\"startOffset must be non-negative, and endOffset must be >= startOffset, \"\n          + \"startOffset=\" + startOffset + \",endOffset=\" + endOffset);\n    }\n    this.startOffset = startOffset;\n    this.endOffset = endOffset;\n  }\n\n","sourceOld":"  private void checkOffsets(int startOffset, int endOffset) {\n    if (startOffset < 0 || endOffset < startOffset) {\n      throw new IllegalArgumentException(\"startOffset must be non-negative, and endOffset must be >= startOffset, \"\n          + \"startOffset=\" + startOffset + \",endOffset=\" + endOffset);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"098528909bb70948871fd7ed865fafb87ed73964","date":1484667487,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/PackedTokenAttributeImpl#setOffset(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/PackedTokenAttributeImpl#setOffset(int,int).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   * @see OffsetAttribute\n   */\n  @Override\n  public void setOffset(int startOffset, int endOffset) {\n    if (startOffset < 0 || endOffset < startOffset) {\n      throw new IllegalArgumentException(\"startOffset must be non-negative, and endOffset must be >= startOffset; got \"\n          + \"startOffset=\" + startOffset + \",endOffset=\" + endOffset);\n    }\n    this.startOffset = startOffset;\n    this.endOffset = endOffset;\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   * @see OffsetAttribute\n   */\n  @Override\n  public void setOffset(int startOffset, int endOffset) {\n    if (startOffset < 0 || endOffset < startOffset) {\n      throw new IllegalArgumentException(\"startOffset must be non-negative, and endOffset must be >= startOffset, \"\n          + \"startOffset=\" + startOffset + \",endOffset=\" + endOffset);\n    }\n    this.startOffset = startOffset;\n    this.endOffset = endOffset;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"302d34f2c66e8d489ee13078305c330cbf67b226","date":1484754357,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/PackedTokenAttributeImpl#setOffset(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/tokenattributes/PackedTokenAttributeImpl#setOffset(int,int).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   * @see OffsetAttribute\n   */\n  @Override\n  public void setOffset(int startOffset, int endOffset) {\n    if (startOffset < 0 || endOffset < startOffset) {\n      throw new IllegalArgumentException(\"startOffset must be non-negative, and endOffset must be >= startOffset; got \"\n          + \"startOffset=\" + startOffset + \",endOffset=\" + endOffset);\n    }\n    this.startOffset = startOffset;\n    this.endOffset = endOffset;\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   * @see OffsetAttribute\n   */\n  @Override\n  public void setOffset(int startOffset, int endOffset) {\n    if (startOffset < 0 || endOffset < startOffset) {\n      throw new IllegalArgumentException(\"startOffset must be non-negative, and endOffset must be >= startOffset, \"\n          + \"startOffset=\" + startOffset + \",endOffset=\" + endOffset);\n    }\n    this.startOffset = startOffset;\n    this.endOffset = endOffset;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"93124590c6e2a8b45898cbae46f96c3a05d9bce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"098528909bb70948871fd7ed865fafb87ed73964":["93124590c6e2a8b45898cbae46f96c3a05d9bce0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["098528909bb70948871fd7ed865fafb87ed73964"],"302d34f2c66e8d489ee13078305c330cbf67b226":["93124590c6e2a8b45898cbae46f96c3a05d9bce0","098528909bb70948871fd7ed865fafb87ed73964"]},"commit2Childs":{"93124590c6e2a8b45898cbae46f96c3a05d9bce0":["098528909bb70948871fd7ed865fafb87ed73964","302d34f2c66e8d489ee13078305c330cbf67b226"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["93124590c6e2a8b45898cbae46f96c3a05d9bce0"],"098528909bb70948871fd7ed865fafb87ed73964":["cd5edd1f2b162a5cfa08efd17851a07373a96817","302d34f2c66e8d489ee13078305c330cbf67b226"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"302d34f2c66e8d489ee13078305c330cbf67b226":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","302d34f2c66e8d489ee13078305c330cbf67b226"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}