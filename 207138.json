{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler#getStatistics().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler#getStatistics().mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getStatistics().mjava","sourceNew":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public NamedList getStatistics() {\n    if (importer == null)\n      return super.getStatistics();\n\n    DocBuilder.Statistics cumulative = importer.cumulativeStatistics;\n    NamedList result = new NamedList();\n\n    result.add(\"Status\", importer.getStatus().toString());\n\n    if (importer.docBuilder != null) {\n      DocBuilder.Statistics running = importer.docBuilder.importStatistics;\n      result.add(\"Documents Processed\", running.docCount);\n      result.add(\"Requests made to DataSource\", running.queryCount);\n      result.add(\"Rows Fetched\", running.rowsCount);\n      result.add(\"Documents Deleted\", running.deletedDocCount);\n      result.add(\"Documents Skipped\", running.skipDocCount);\n    }\n\n    result.add(DataImporter.MSG.TOTAL_DOC_PROCESSED, cumulative.docCount);\n    result.add(DataImporter.MSG.TOTAL_QUERIES_EXECUTED, cumulative.queryCount);\n    result.add(DataImporter.MSG.TOTAL_ROWS_EXECUTED, cumulative.rowsCount);\n    result.add(DataImporter.MSG.TOTAL_DOCS_DELETED, cumulative.deletedDocCount);\n    result.add(DataImporter.MSG.TOTAL_DOCS_SKIPPED, cumulative.skipDocCount);\n\n    NamedList requestStatistics = super.getStatistics();\n    if (requestStatistics != null) {\n      for (int i = 0; i < requestStatistics.size(); i++) {\n        result.add(requestStatistics.getName(i), requestStatistics.getVal(i));\n      }\n    }\n\n    return result;\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public NamedList getStatistics() {\n    if (importer == null)\n      return super.getStatistics();\n\n    DocBuilder.Statistics cumulative = importer.cumulativeStatistics;\n    NamedList result = new NamedList();\n\n    result.add(\"Status\", importer.getStatus().toString());\n\n    if (importer.docBuilder != null) {\n      DocBuilder.Statistics running = importer.docBuilder.importStatistics;\n      result.add(\"Documents Processed\", running.docCount);\n      result.add(\"Requests made to DataSource\", running.queryCount);\n      result.add(\"Rows Fetched\", running.rowsCount);\n      result.add(\"Documents Deleted\", running.deletedDocCount);\n      result.add(\"Documents Skipped\", running.skipDocCount);\n    }\n\n    result.add(DataImporter.MSG.TOTAL_DOC_PROCESSED, cumulative.docCount);\n    result.add(DataImporter.MSG.TOTAL_QUERIES_EXECUTED, cumulative.queryCount);\n    result.add(DataImporter.MSG.TOTAL_ROWS_EXECUTED, cumulative.rowsCount);\n    result.add(DataImporter.MSG.TOTAL_DOCS_DELETED, cumulative.deletedDocCount);\n    result.add(DataImporter.MSG.TOTAL_DOCS_SKIPPED, cumulative.skipDocCount);\n\n    NamedList requestStatistics = super.getStatistics();\n    if (requestStatistics != null) {\n      for (int i = 0; i < requestStatistics.size(); i++) {\n        result.add(requestStatistics.getName(i), requestStatistics.getVal(i));\n      }\n    }\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler#getStatistics().mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getStatistics().mjava","sourceNew":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public NamedList getStatistics() {\n    if (importer == null)\n      return super.getStatistics();\n\n    DocBuilder.Statistics cumulative = importer.cumulativeStatistics;\n    NamedList result = new NamedList();\n\n    result.add(\"Status\", importer.getStatus().toString());\n\n    if (importer.docBuilder != null) {\n      DocBuilder.Statistics running = importer.docBuilder.importStatistics;\n      result.add(\"Documents Processed\", running.docCount);\n      result.add(\"Requests made to DataSource\", running.queryCount);\n      result.add(\"Rows Fetched\", running.rowsCount);\n      result.add(\"Documents Deleted\", running.deletedDocCount);\n      result.add(\"Documents Skipped\", running.skipDocCount);\n    }\n\n    result.add(DataImporter.MSG.TOTAL_DOC_PROCESSED, cumulative.docCount);\n    result.add(DataImporter.MSG.TOTAL_QUERIES_EXECUTED, cumulative.queryCount);\n    result.add(DataImporter.MSG.TOTAL_ROWS_EXECUTED, cumulative.rowsCount);\n    result.add(DataImporter.MSG.TOTAL_DOCS_DELETED, cumulative.deletedDocCount);\n    result.add(DataImporter.MSG.TOTAL_DOCS_SKIPPED, cumulative.skipDocCount);\n\n    NamedList requestStatistics = super.getStatistics();\n    if (requestStatistics != null) {\n      for (int i = 0; i < requestStatistics.size(); i++) {\n        result.add(requestStatistics.getName(i), requestStatistics.getVal(i));\n      }\n    }\n\n    return result;\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public NamedList getStatistics() {\n    if (importer == null)\n      return super.getStatistics();\n\n    DocBuilder.Statistics cumulative = importer.cumulativeStatistics;\n    NamedList result = new NamedList();\n\n    result.add(\"Status\", importer.getStatus().toString());\n\n    if (importer.docBuilder != null) {\n      DocBuilder.Statistics running = importer.docBuilder.importStatistics;\n      result.add(\"Documents Processed\", running.docCount);\n      result.add(\"Requests made to DataSource\", running.queryCount);\n      result.add(\"Rows Fetched\", running.rowsCount);\n      result.add(\"Documents Deleted\", running.deletedDocCount);\n      result.add(\"Documents Skipped\", running.skipDocCount);\n    }\n\n    result.add(DataImporter.MSG.TOTAL_DOC_PROCESSED, cumulative.docCount);\n    result.add(DataImporter.MSG.TOTAL_QUERIES_EXECUTED, cumulative.queryCount);\n    result.add(DataImporter.MSG.TOTAL_ROWS_EXECUTED, cumulative.rowsCount);\n    result.add(DataImporter.MSG.TOTAL_DOCS_DELETED, cumulative.deletedDocCount);\n    result.add(DataImporter.MSG.TOTAL_DOCS_SKIPPED, cumulative.skipDocCount);\n\n    NamedList requestStatistics = super.getStatistics();\n    if (requestStatistics != null) {\n      for (int i = 0; i < requestStatistics.size(); i++) {\n        result.add(requestStatistics.getName(i), requestStatistics.getVal(i));\n      }\n    }\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1692bdaf86a8c4783d4a47f0c3d9090e024d8852","date":1359396206,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler#getStatistics().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler#getStatistics().mjava","sourceNew":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public NamedList getStatistics() {\n    if (importer == null)\n      return super.getStatistics();\n\n    DocBuilder.Statistics cumulative = importer.cumulativeStatistics;\n    SimpleOrderedMap result = new SimpleOrderedMap();\n\n    result.add(\"Status\", importer.getStatus().toString());\n\n    if (importer.docBuilder != null) {\n      DocBuilder.Statistics running = importer.docBuilder.importStatistics;\n      result.add(\"Documents Processed\", running.docCount);\n      result.add(\"Requests made to DataSource\", running.queryCount);\n      result.add(\"Rows Fetched\", running.rowsCount);\n      result.add(\"Documents Deleted\", running.deletedDocCount);\n      result.add(\"Documents Skipped\", running.skipDocCount);\n    }\n\n    result.add(DataImporter.MSG.TOTAL_DOC_PROCESSED, cumulative.docCount);\n    result.add(DataImporter.MSG.TOTAL_QUERIES_EXECUTED, cumulative.queryCount);\n    result.add(DataImporter.MSG.TOTAL_ROWS_EXECUTED, cumulative.rowsCount);\n    result.add(DataImporter.MSG.TOTAL_DOCS_DELETED, cumulative.deletedDocCount);\n    result.add(DataImporter.MSG.TOTAL_DOCS_SKIPPED, cumulative.skipDocCount);\n\n    NamedList requestStatistics = super.getStatistics();\n    if (requestStatistics != null) {\n      for (int i = 0; i < requestStatistics.size(); i++) {\n        result.add(requestStatistics.getName(i), requestStatistics.getVal(i));\n      }\n    }\n\n    return result;\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public NamedList getStatistics() {\n    if (importer == null)\n      return super.getStatistics();\n\n    DocBuilder.Statistics cumulative = importer.cumulativeStatistics;\n    NamedList result = new NamedList();\n\n    result.add(\"Status\", importer.getStatus().toString());\n\n    if (importer.docBuilder != null) {\n      DocBuilder.Statistics running = importer.docBuilder.importStatistics;\n      result.add(\"Documents Processed\", running.docCount);\n      result.add(\"Requests made to DataSource\", running.queryCount);\n      result.add(\"Rows Fetched\", running.rowsCount);\n      result.add(\"Documents Deleted\", running.deletedDocCount);\n      result.add(\"Documents Skipped\", running.skipDocCount);\n    }\n\n    result.add(DataImporter.MSG.TOTAL_DOC_PROCESSED, cumulative.docCount);\n    result.add(DataImporter.MSG.TOTAL_QUERIES_EXECUTED, cumulative.queryCount);\n    result.add(DataImporter.MSG.TOTAL_ROWS_EXECUTED, cumulative.rowsCount);\n    result.add(DataImporter.MSG.TOTAL_DOCS_DELETED, cumulative.deletedDocCount);\n    result.add(DataImporter.MSG.TOTAL_DOCS_SKIPPED, cumulative.skipDocCount);\n\n    NamedList requestStatistics = super.getStatistics();\n    if (requestStatistics != null) {\n      for (int i = 0; i < requestStatistics.size(); i++) {\n        result.add(requestStatistics.getName(i), requestStatistics.getVal(i));\n      }\n    }\n\n    return result;\n  }\n\n","bugFix":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de522d9303bd67c8473a269a1319125d1f3700e0","date":1359477856,"type":3,"author":"Adrien Grand","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler#getStatistics().mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler#getStatistics().mjava","sourceNew":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public NamedList getStatistics() {\n    if (importer == null)\n      return super.getStatistics();\n\n    DocBuilder.Statistics cumulative = importer.cumulativeStatistics;\n    SimpleOrderedMap result = new SimpleOrderedMap();\n\n    result.add(\"Status\", importer.getStatus().toString());\n\n    if (importer.docBuilder != null) {\n      DocBuilder.Statistics running = importer.docBuilder.importStatistics;\n      result.add(\"Documents Processed\", running.docCount);\n      result.add(\"Requests made to DataSource\", running.queryCount);\n      result.add(\"Rows Fetched\", running.rowsCount);\n      result.add(\"Documents Deleted\", running.deletedDocCount);\n      result.add(\"Documents Skipped\", running.skipDocCount);\n    }\n\n    result.add(DataImporter.MSG.TOTAL_DOC_PROCESSED, cumulative.docCount);\n    result.add(DataImporter.MSG.TOTAL_QUERIES_EXECUTED, cumulative.queryCount);\n    result.add(DataImporter.MSG.TOTAL_ROWS_EXECUTED, cumulative.rowsCount);\n    result.add(DataImporter.MSG.TOTAL_DOCS_DELETED, cumulative.deletedDocCount);\n    result.add(DataImporter.MSG.TOTAL_DOCS_SKIPPED, cumulative.skipDocCount);\n\n    NamedList requestStatistics = super.getStatistics();\n    if (requestStatistics != null) {\n      for (int i = 0; i < requestStatistics.size(); i++) {\n        result.add(requestStatistics.getName(i), requestStatistics.getVal(i));\n      }\n    }\n\n    return result;\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public NamedList getStatistics() {\n    if (importer == null)\n      return super.getStatistics();\n\n    DocBuilder.Statistics cumulative = importer.cumulativeStatistics;\n    NamedList result = new NamedList();\n\n    result.add(\"Status\", importer.getStatus().toString());\n\n    if (importer.docBuilder != null) {\n      DocBuilder.Statistics running = importer.docBuilder.importStatistics;\n      result.add(\"Documents Processed\", running.docCount);\n      result.add(\"Requests made to DataSource\", running.queryCount);\n      result.add(\"Rows Fetched\", running.rowsCount);\n      result.add(\"Documents Deleted\", running.deletedDocCount);\n      result.add(\"Documents Skipped\", running.skipDocCount);\n    }\n\n    result.add(DataImporter.MSG.TOTAL_DOC_PROCESSED, cumulative.docCount);\n    result.add(DataImporter.MSG.TOTAL_QUERIES_EXECUTED, cumulative.queryCount);\n    result.add(DataImporter.MSG.TOTAL_ROWS_EXECUTED, cumulative.rowsCount);\n    result.add(DataImporter.MSG.TOTAL_DOCS_DELETED, cumulative.deletedDocCount);\n    result.add(DataImporter.MSG.TOTAL_DOCS_SKIPPED, cumulative.skipDocCount);\n\n    NamedList requestStatistics = super.getStatistics();\n    if (requestStatistics != null) {\n      for (int i = 0; i < requestStatistics.size(); i++) {\n        result.add(requestStatistics.getName(i), requestStatistics.getVal(i));\n      }\n    }\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler#getStatistics().mjava","sourceNew":null,"sourceOld":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public NamedList getStatistics() {\n    if (importer == null)\n      return super.getStatistics();\n\n    DocBuilder.Statistics cumulative = importer.cumulativeStatistics;\n    SimpleOrderedMap result = new SimpleOrderedMap();\n\n    result.add(\"Status\", importer.getStatus().toString());\n\n    if (importer.docBuilder != null) {\n      DocBuilder.Statistics running = importer.docBuilder.importStatistics;\n      result.add(\"Documents Processed\", running.docCount);\n      result.add(\"Requests made to DataSource\", running.queryCount);\n      result.add(\"Rows Fetched\", running.rowsCount);\n      result.add(\"Documents Deleted\", running.deletedDocCount);\n      result.add(\"Documents Skipped\", running.skipDocCount);\n    }\n\n    result.add(DataImporter.MSG.TOTAL_DOC_PROCESSED, cumulative.docCount);\n    result.add(DataImporter.MSG.TOTAL_QUERIES_EXECUTED, cumulative.queryCount);\n    result.add(DataImporter.MSG.TOTAL_ROWS_EXECUTED, cumulative.rowsCount);\n    result.add(DataImporter.MSG.TOTAL_DOCS_DELETED, cumulative.deletedDocCount);\n    result.add(DataImporter.MSG.TOTAL_DOCS_SKIPPED, cumulative.skipDocCount);\n\n    NamedList requestStatistics = super.getStatistics();\n    if (requestStatistics != null) {\n      for (int i = 0; i < requestStatistics.size(); i++) {\n        result.add(requestStatistics.getName(i), requestStatistics.getVal(i));\n      }\n    }\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler#getStatistics().mjava","sourceNew":null,"sourceOld":"  @Override\n  @SuppressWarnings(\"unchecked\")\n  public NamedList getStatistics() {\n    if (importer == null)\n      return super.getStatistics();\n\n    DocBuilder.Statistics cumulative = importer.cumulativeStatistics;\n    SimpleOrderedMap result = new SimpleOrderedMap();\n\n    result.add(\"Status\", importer.getStatus().toString());\n\n    if (importer.docBuilder != null) {\n      DocBuilder.Statistics running = importer.docBuilder.importStatistics;\n      result.add(\"Documents Processed\", running.docCount);\n      result.add(\"Requests made to DataSource\", running.queryCount);\n      result.add(\"Rows Fetched\", running.rowsCount);\n      result.add(\"Documents Deleted\", running.deletedDocCount);\n      result.add(\"Documents Skipped\", running.skipDocCount);\n    }\n\n    result.add(DataImporter.MSG.TOTAL_DOC_PROCESSED, cumulative.docCount);\n    result.add(DataImporter.MSG.TOTAL_QUERIES_EXECUTED, cumulative.queryCount);\n    result.add(DataImporter.MSG.TOTAL_ROWS_EXECUTED, cumulative.rowsCount);\n    result.add(DataImporter.MSG.TOTAL_DOCS_DELETED, cumulative.deletedDocCount);\n    result.add(DataImporter.MSG.TOTAL_DOCS_SKIPPED, cumulative.skipDocCount);\n\n    NamedList requestStatistics = super.getStatistics();\n    if (requestStatistics != null) {\n      for (int i = 0; i < requestStatistics.size(); i++) {\n        result.add(requestStatistics.getName(i), requestStatistics.getVal(i));\n      }\n    }\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["1692bdaf86a8c4783d4a47f0c3d9090e024d8852"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"1692bdaf86a8c4783d4a47f0c3d9090e024d8852":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"de522d9303bd67c8473a269a1319125d1f3700e0":["c26f00b574427b55127e869b935845554afde1fa","1692bdaf86a8c4783d4a47f0c3d9090e024d8852"],"816521ebaad5add9cb96bb88c577394e2938c40b":["1692bdaf86a8c4783d4a47f0c3d9090e024d8852"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["816521ebaad5add9cb96bb88c577394e2938c40b"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["1692bdaf86a8c4783d4a47f0c3d9090e024d8852","de522d9303bd67c8473a269a1319125d1f3700e0"],"1692bdaf86a8c4783d4a47f0c3d9090e024d8852":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","de522d9303bd67c8473a269a1319125d1f3700e0","816521ebaad5add9cb96bb88c577394e2938c40b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"de522d9303bd67c8473a269a1319125d1f3700e0":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","de522d9303bd67c8473a269a1319125d1f3700e0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}