{"path":"lucene/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","commits":[{"id":"25433c5cacacb7a2055d62d4d36b0daf210e0a10","date":1315747522,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator();\n      while (te.next() != null) {\n        DocsEnum de = te.docs(null, null);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["8028ab7a24273833d53d35eb160dba5b57283cf5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = te.docs(null, null);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator();\n      while (te.next() != null) {\n        DocsEnum de = te.docs(null, null);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"872cff1d3a554e0cd64014cd97f88d3002b0f491","date":1323024658,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random, te, null, null, false);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = te.docs(null, null);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b65b350ca9588f9fc76ce7d6804160d06c45ff42","date":1323026297,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random, te, null, null, false);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = te.docs(null, null);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocCount#verifyCount(IndexReader).mjava","sourceNew":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random, te, null, null, false);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","sourceOld":"  private void verifyCount(IndexReader ir) throws Exception {\n    Fields fields = MultiFields.getFields(ir);\n    if (fields == null) {\n      return;\n    }\n    FieldsEnum e = fields.iterator();\n    String field;\n    while ((field = e.next()) != null) {\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n      int docCount = terms.getDocCount();\n      FixedBitSet visited = new FixedBitSet(ir.maxDoc());\n      TermsEnum te = terms.iterator(null);\n      while (te.next() != null) {\n        DocsEnum de = _TestUtil.docs(random, te, null, null, false);\n        while (de.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n          visited.set(de.docID());\n        }\n      }\n      assertEquals(visited.cardinality(), docCount);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"25433c5cacacb7a2055d62d4d36b0daf210e0a10":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":["3cc749c053615f5871f3b95715fe292f34e70a53","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["872cff1d3a554e0cd64014cd97f88d3002b0f491"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["25433c5cacacb7a2055d62d4d36b0daf210e0a10"],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["3cc749c053615f5871f3b95715fe292f34e70a53"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"25433c5cacacb7a2055d62d4d36b0daf210e0a10":["3cc749c053615f5871f3b95715fe292f34e70a53"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["25433c5cacacb7a2055d62d4d36b0daf210e0a10"],"3cc749c053615f5871f3b95715fe292f34e70a53":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}