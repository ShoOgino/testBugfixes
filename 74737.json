{"path":"solr/core/src/test/org/apache/solr/search/TestQueryWrapperFilter#testThousandDocuments().mjava","commits":[{"id":"d52e48927ca4ef3655a261f2230b968b6fdf3608","date":1444652107,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestQueryWrapperFilter#testThousandDocuments().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestQueryWrapperFilter#testThousandDocuments().mjava","sourceNew":"  public void testThousandDocuments() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"field\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    \n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    for (int i = 0; i < 1000; i++) {\n      TermQuery termQuery = new TermQuery(new Term(\"field\", English.intToEnglish(i)));\n      QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n      TopDocs td = searcher.search(qwf, 10);\n      assertEquals(1, td.totalHits);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testThousandDocuments() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"field\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    \n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    for (int i = 0; i < 1000; i++) {\n      TermQuery termQuery = new TermQuery(new Term(\"field\", English.intToEnglish(i)));\n      QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n      TopDocs td = searcher.search(qwf, 10);\n      assertEquals(1, td.totalHits);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ddef54907d52d0079217460aacd73c5d3bb1d39","date":1527887541,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/TestQueryWrapperFilter#testThousandDocuments().mjava","sourceNew":null,"sourceOld":"  public void testThousandDocuments() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"field\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    \n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    for (int i = 0; i < 1000; i++) {\n      TermQuery termQuery = new TermQuery(new Term(\"field\", English.intToEnglish(i)));\n      QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n      TopDocs td = searcher.search(qwf, 10);\n      assertEquals(1, td.totalHits);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/TestQueryWrapperFilter#testThousandDocuments().mjava","sourceNew":null,"sourceOld":"  public void testThousandDocuments() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newStringField(\"field\", English.intToEnglish(i), Field.Store.NO));\n      writer.addDocument(doc);\n    }\n    \n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    for (int i = 0; i < 1000; i++) {\n      TermQuery termQuery = new TermQuery(new Term(\"field\", English.intToEnglish(i)));\n      QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n      TopDocs td = searcher.search(qwf, 10);\n      assertEquals(1, td.totalHits);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ddef54907d52d0079217460aacd73c5d3bb1d39":["d52e48927ca4ef3655a261f2230b968b6fdf3608"],"d52e48927ca4ef3655a261f2230b968b6fdf3608":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["d52e48927ca4ef3655a261f2230b968b6fdf3608","4ddef54907d52d0079217460aacd73c5d3bb1d39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4ddef54907d52d0079217460aacd73c5d3bb1d39"]},"commit2Childs":{"4ddef54907d52d0079217460aacd73c5d3bb1d39":["b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d52e48927ca4ef3655a261f2230b968b6fdf3608":["4ddef54907d52d0079217460aacd73c5d3bb1d39","b70042a8a492f7054d480ccdd2be9796510d4327"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d52e48927ca4ef3655a261f2230b968b6fdf3608"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}