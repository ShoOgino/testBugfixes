{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/ResourceLoader#getLines(String).mjava","commits":[{"id":"221aa27710f0397cd0d57b586a06472c8caff278","date":1335749688,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/ResourceLoader#getLines(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/ResourceLoader#getLines(String).mjava","sourceNew":"  /**\n   * Accesses a resource by name and returns the (non comment) lines\n   * containing data.\n   *\n   * <p>\n   * A comment line is any line that starts with the character \"#\"\n   * </p>\n   *\n   * @param resource\n   * @return a list of non-blank non-comment lines with whitespace trimmed\n   * from front and back.\n   * @throws IOException\n   */\n  public List<String> getLines(String resource) throws IOException;\n\n","sourceOld":"  /**\n   * Accesses a resource by name and returns the (non comment) lines\n   * containing data.\n   *\n   * <p>\n   * A comment line is any line that starts with the character \"#\"\n   * </p>\n   *\n   * @param resource\n   * @return a list of non-blank non-comment lines with whitespace trimmed\n   * from front and back.\n   * @throws IOException\n   */\n  public List<String> getLines(String resource) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de6b1e414481e1c25c32f310b02a6d192f7f9faa","date":1343310208,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/ResourceLoader#getLines(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Accesses a resource by name and returns the (non comment) lines\n   * containing data.\n   *\n   * <p>\n   * A comment line is any line that starts with the character \"#\"\n   * </p>\n   *\n   * @param resource\n   * @return a list of non-blank non-comment lines with whitespace trimmed\n   * from front and back.\n   * @throws IOException\n   */\n  public List<String> getLines(String resource) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/ResourceLoader#getLines(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Accesses a resource by name and returns the (non comment) lines\n   * containing data.\n   *\n   * <p>\n   * A comment line is any line that starts with the character \"#\"\n   * </p>\n   *\n   * @param resource\n   * @return a list of non-blank non-comment lines with whitespace trimmed\n   * from front and back.\n   * @throws IOException\n   */\n  public List<String> getLines(String resource) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/ResourceLoader#getLines(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Accesses a resource by name and returns the (non comment) lines\n   * containing data.\n   *\n   * <p>\n   * A comment line is any line that starts with the character \"#\"\n   * </p>\n   *\n   * @param resource\n   * @return a list of non-blank non-comment lines with whitespace trimmed\n   * from front and back.\n   * @throws IOException\n   */\n  public List<String> getLines(String resource) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["221aa27710f0397cd0d57b586a06472c8caff278","de6b1e414481e1c25c32f310b02a6d192f7f9faa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["221aa27710f0397cd0d57b586a06472c8caff278","de6b1e414481e1c25c32f310b02a6d192f7f9faa"],"221aa27710f0397cd0d57b586a06472c8caff278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"de6b1e414481e1c25c32f310b02a6d192f7f9faa":["221aa27710f0397cd0d57b586a06472c8caff278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["de6b1e414481e1c25c32f310b02a6d192f7f9faa"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["221aa27710f0397cd0d57b586a06472c8caff278"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"221aa27710f0397cd0d57b586a06472c8caff278":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","de6b1e414481e1c25c32f310b02a6d192f7f9faa"],"de6b1e414481e1c25c32f310b02a6d192f7f9faa":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}