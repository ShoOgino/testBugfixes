{"path":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","commits":[{"id":"10d2f7af0975ac83900a2c970a62fe4c8667176b","date":1282358169,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status:0\"                         // exact match\n      ,\"/responseHeader:{'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader:{'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped:{'foo_i':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped:{'foo_i':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped:{'foo_i':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/foo_i/groups:\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped:{'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n  }\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71f160a09c8926e48290b7f4342a47eab588a11d","date":1284584360,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status:0\"                         // exact match\n      ,\"/responseHeader:{'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader:{'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped:{'foo_i':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped:{'foo_i':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped:{'foo_i':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/foo_i/groups:\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped:{'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/foo_i/matches:10:\"\n      ,\"/facet_counts/facet_fields/\"+f+\":['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n  }\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status:0\"                         // exact match\n      ,\"/responseHeader:{'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader:{'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped:{'foo_i':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped:{'foo_i':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped:{'foo_i':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/foo_i/groups:\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped:{'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n  }\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d7a4063d87c3c1f313aef4c02d5d02c3d2e18be","date":1284660971,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status:0\"                         // exact match\n      ,\"/responseHeader:{'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader:{'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped:{'foo_i':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped:{'foo_i':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped:{'foo_i':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/foo_i/groups:\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped:{'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/foo_i/matches:10:\"\n      ,\"/facet_counts/facet_fields/\"+f+\":['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/foo_i/matches:10:\"\n      ,\"/highlighting:{'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/foo_i/matches:10:\"\n      ,\"/debug/explain/8:\"\n      ,\"/debug/explain/2:\"\n    );\n  }\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status:0\"                         // exact match\n      ,\"/responseHeader:{'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader:{'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped:{'foo_i':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped:{'foo_i':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped:{'foo_i':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/foo_i/groups:\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped:{'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/foo_i/matches:10:\"\n      ,\"/facet_counts/facet_fields/\"+f+\":['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n  }\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4723db11f8550520912d26e73d0d91869f9eedd2","date":1284919173,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n  }\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status:0\"                         // exact match\n      ,\"/responseHeader:{'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader:{'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped:{'foo_i':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped:{'foo_i':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped:{'foo_i':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/foo_i/groups:\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped:{'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/foo_i/matches:10:\"\n      ,\"/facet_counts/facet_fields/\"+f+\":['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/foo_i/matches:10:\"\n      ,\"/highlighting:{'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/foo_i/matches:10:\"\n      ,\"/debug/explain/8:\"\n      ,\"/debug/explain/2:\"\n    );\n  }\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddd83ce02b85f7d0c728af48e14e0eeb42de813a","date":1288533972,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n  }\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n  }\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad91cf2616804072f22776537c29e12a561e400f","date":1289061025,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n  }\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n  }\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n  }\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n  }\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c32d2a50662592e12dae8ea10960cce611c7ba1c","date":1290627254,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n  }\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n  }\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c800a92bdddc053fba2b1b33e434f7536a2daae1","date":1290628554,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n  }\n","bugFix":null,"bugIntro":["27e851527ef490dd0b790e19b7c62602b5778eb1","27e851527ef490dd0b790e19b7c62602b5778eb1","27e851527ef490dd0b790e19b7c62602b5778eb1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n  }\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c7cdfe5a1ea9db97faa404b251fa644faa73597","date":1308345959,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7edfc3f7caa7b49a18fe367692768b33b018e9db","date":1308374217,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"6d7a4063d87c3c1f313aef4c02d5d02c3d2e18be":["71f160a09c8926e48290b7f4342a47eab588a11d"],"10d2f7af0975ac83900a2c970a62fe4c8667176b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c32d2a50662592e12dae8ea10960cce611c7ba1c":["ad91cf2616804072f22776537c29e12a561e400f"],"4723db11f8550520912d26e73d0d91869f9eedd2":["6d7a4063d87c3c1f313aef4c02d5d02c3d2e18be"],"c26f00b574427b55127e869b935845554afde1fa":["9c7cdfe5a1ea9db97faa404b251fa644faa73597","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"85a883878c0af761245ab048babc63d099f835f3":["4723db11f8550520912d26e73d0d91869f9eedd2","ad91cf2616804072f22776537c29e12a561e400f"],"ad91cf2616804072f22776537c29e12a561e400f":["ddd83ce02b85f7d0c728af48e14e0eeb42de813a"],"c800a92bdddc053fba2b1b33e434f7536a2daae1":["c32d2a50662592e12dae8ea10960cce611c7ba1c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c800a92bdddc053fba2b1b33e434f7536a2daae1"],"7edfc3f7caa7b49a18fe367692768b33b018e9db":["c800a92bdddc053fba2b1b33e434f7536a2daae1","9c7cdfe5a1ea9db97faa404b251fa644faa73597"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["7edfc3f7caa7b49a18fe367692768b33b018e9db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9c7cdfe5a1ea9db97faa404b251fa644faa73597":["c800a92bdddc053fba2b1b33e434f7536a2daae1"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["9c7cdfe5a1ea9db97faa404b251fa644faa73597"],"71f160a09c8926e48290b7f4342a47eab588a11d":["10d2f7af0975ac83900a2c970a62fe4c8667176b"],"ddd83ce02b85f7d0c728af48e14e0eeb42de813a":["4723db11f8550520912d26e73d0d91869f9eedd2"],"3bb13258feba31ab676502787ab2e1779f129b7a":["85a883878c0af761245ab048babc63d099f835f3","c800a92bdddc053fba2b1b33e434f7536a2daae1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"6d7a4063d87c3c1f313aef4c02d5d02c3d2e18be":["4723db11f8550520912d26e73d0d91869f9eedd2"],"10d2f7af0975ac83900a2c970a62fe4c8667176b":["71f160a09c8926e48290b7f4342a47eab588a11d"],"c32d2a50662592e12dae8ea10960cce611c7ba1c":["c800a92bdddc053fba2b1b33e434f7536a2daae1"],"4723db11f8550520912d26e73d0d91869f9eedd2":["85a883878c0af761245ab048babc63d099f835f3","ddd83ce02b85f7d0c728af48e14e0eeb42de813a"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"85a883878c0af761245ab048babc63d099f835f3":["3bb13258feba31ab676502787ab2e1779f129b7a"],"ad91cf2616804072f22776537c29e12a561e400f":["c32d2a50662592e12dae8ea10960cce611c7ba1c","85a883878c0af761245ab048babc63d099f835f3"],"c800a92bdddc053fba2b1b33e434f7536a2daae1":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","7edfc3f7caa7b49a18fe367692768b33b018e9db","9c7cdfe5a1ea9db97faa404b251fa644faa73597","3bb13258feba31ab676502787ab2e1779f129b7a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"7edfc3f7caa7b49a18fe367692768b33b018e9db":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["10d2f7af0975ac83900a2c970a62fe4c8667176b","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"9c7cdfe5a1ea9db97faa404b251fa644faa73597":["c26f00b574427b55127e869b935845554afde1fa","7edfc3f7caa7b49a18fe367692768b33b018e9db","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"71f160a09c8926e48290b7f4342a47eab588a11d":["6d7a4063d87c3c1f313aef4c02d5d02c3d2e18be"],"ddd83ce02b85f7d0c728af48e14e0eeb42de813a":["ad91cf2616804072f22776537c29e12a561e400f"],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a258fbb26824fd104ed795e5d9033d2d040049ee","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}