{"path":"src/java/org/apache/solr/schema/RandomSortField.RandomValueSource#getValues(Map,IndexReader).mjava","commits":[{"id":"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42","date":1253196493,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/RandomSortField.RandomValueSource#getValues(Map,IndexReader).mjava","pathOld":"src/java/org/apache/solr/schema/RandomSortField.RandomValueSource#getValues(IndexReader).mjava","sourceNew":"    @Override\n    public DocValues getValues(Map context, final IndexReader reader) throws IOException {\n      return new DocValues() {\n          private final int seed = getSeed(field, reader);\n          @Override\n          public float floatVal(int doc) {\n            return (float)hash(doc+seed);\n          }\n\n          @Override\n          public int intVal(int doc) {\n            return (int)hash(doc+seed);\n          }\n\n          @Override\n          public long longVal(int doc) {\n            return (long)hash(doc+seed);\n          }\n\n          @Override\n          public double doubleVal(int doc) {\n            return (double)hash(doc+seed);\n          }\n\n          @Override\n          public String strVal(int doc) {\n            return Integer.toString(hash(doc+seed));\n          }\n\n          @Override\n          public String toString(int doc) {\n            return description() + '=' + intVal(doc);\n          }\n        };\n    }\n\n","sourceOld":"    @Override\n    public DocValues getValues(final IndexReader reader) throws IOException {\n      return new DocValues() {\n          private final int seed = getSeed(field, reader);\n          @Override\n          public float floatVal(int doc) {\n            return (float)hash(doc+seed);\n          }\n\n          @Override\n          public int intVal(int doc) {\n            return (int)hash(doc+seed);\n          }\n\n          @Override\n          public long longVal(int doc) {\n            return (long)hash(doc+seed);\n          }\n\n          @Override\n          public double doubleVal(int doc) {\n            return (double)hash(doc+seed);\n          }\n\n          @Override\n          public String strVal(int doc) {\n            return Integer.toString(hash(doc+seed));\n          }\n\n          @Override\n          public String toString(int doc) {\n            return description() + '=' + intVal(doc);\n          }\n        };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/RandomSortField.RandomValueSource#getValues(Map,IndexReader).mjava","pathOld":"src/java/org/apache/solr/schema/RandomSortField.RandomValueSource#getValues(Map,IndexReader).mjava","sourceNew":"    @Override\n    public DocValues getValues(Map context, final IndexReader reader) throws IOException {\n      return new DocValues() {\n          private final int seed = getSeed(field, reader);\n          @Override\n          public float floatVal(int doc) {\n            return (float)hash(doc+seed);\n          }\n\n          @Override\n          public int intVal(int doc) {\n            return (int)hash(doc+seed);\n          }\n\n          @Override\n          public long longVal(int doc) {\n            return (long)hash(doc+seed);\n          }\n\n          @Override\n          public double doubleVal(int doc) {\n            return (double)hash(doc+seed);\n          }\n\n          @Override\n          public String strVal(int doc) {\n            return Integer.toString(hash(doc+seed));\n          }\n\n          @Override\n          public String toString(int doc) {\n            return description() + '=' + intVal(doc);\n          }\n        };\n    }\n\n","sourceOld":"    @Override\n    public DocValues getValues(Map context, final IndexReader reader) throws IOException {\n      return new DocValues() {\n          private final int seed = getSeed(field, reader);\n          @Override\n          public float floatVal(int doc) {\n            return (float)hash(doc+seed);\n          }\n\n          @Override\n          public int intVal(int doc) {\n            return (int)hash(doc+seed);\n          }\n\n          @Override\n          public long longVal(int doc) {\n            return (long)hash(doc+seed);\n          }\n\n          @Override\n          public double doubleVal(int doc) {\n            return (double)hash(doc+seed);\n          }\n\n          @Override\n          public String strVal(int doc) {\n            return Integer.toString(hash(doc+seed));\n          }\n\n          @Override\n          public String toString(int doc) {\n            return description() + '=' + intVal(doc);\n          }\n        };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["7e00023dc6828d09dbfb05d4dfa4d488cc81ee42"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["7e00023dc6828d09dbfb05d4dfa4d488cc81ee42"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}