{"path":"backwards/src/java/org/apache/lucene/index/IndexFileDeleter#deleteCommits().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/index/IndexFileDeleter#deleteCommits().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Remove the CommitPoints in the commitsToDelete List by\n   * DecRef'ing all files from each SegmentInfos.\n   */\n  private void deleteCommits() throws IOException {\n\n    int size = commitsToDelete.size();\n\n    if (size > 0) {\n\n      // First decref all files that had been referred to by\n      // the now-deleted commits:\n      for(int i=0;i<size;i++) {\n        CommitPoint commit = commitsToDelete.get(i);\n        if (infoStream != null) {\n          message(\"deleteCommits: now decRef commit \\\"\" + commit.getSegmentsFileName() + \"\\\"\");\n        }\n        for (final String file : commit.files) {\n          decRef(file);\n        }\n      }\n      commitsToDelete.clear();\n\n      // Now compact commits to remove deleted ones (preserving the sort):\n      size = commits.size();\n      int readFrom = 0;\n      int writeTo = 0;\n      while(readFrom < size) {\n        CommitPoint commit = commits.get(readFrom);\n        if (!commit.deleted) {\n          if (writeTo != readFrom) {\n            commits.set(writeTo, commits.get(readFrom));\n          }\n          writeTo++;\n        }\n        readFrom++;\n      }\n\n      while(size > writeTo) {\n        commits.remove(size-1);\n        size--;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/IndexFileDeleter#deleteCommits().mjava","pathOld":"backwards/src/java/org/apache/lucene/index/IndexFileDeleter#deleteCommits().mjava","sourceNew":"  /**\n   * Remove the CommitPoints in the commitsToDelete List by\n   * DecRef'ing all files from each SegmentInfos.\n   */\n  private void deleteCommits() throws IOException {\n\n    int size = commitsToDelete.size();\n\n    if (size > 0) {\n\n      // First decref all files that had been referred to by\n      // the now-deleted commits:\n      for(int i=0;i<size;i++) {\n        CommitPoint commit = commitsToDelete.get(i);\n        if (infoStream != null) {\n          message(\"deleteCommits: now decRef commit \\\"\" + commit.getSegmentsFileName() + \"\\\"\");\n        }\n        for (final String file : commit.files) {\n          decRef(file);\n        }\n      }\n      commitsToDelete.clear();\n\n      // Now compact commits to remove deleted ones (preserving the sort):\n      size = commits.size();\n      int readFrom = 0;\n      int writeTo = 0;\n      while(readFrom < size) {\n        CommitPoint commit = commits.get(readFrom);\n        if (!commit.deleted) {\n          if (writeTo != readFrom) {\n            commits.set(writeTo, commits.get(readFrom));\n          }\n          writeTo++;\n        }\n        readFrom++;\n      }\n\n      while(size > writeTo) {\n        commits.remove(size-1);\n        size--;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove the CommitPoints in the commitsToDelete List by\n   * DecRef'ing all files from each SegmentInfos.\n   */\n  private void deleteCommits() throws IOException {\n\n    int size = commitsToDelete.size();\n\n    if (size > 0) {\n\n      // First decref all files that had been referred to by\n      // the now-deleted commits:\n      for(int i=0;i<size;i++) {\n        CommitPoint commit = commitsToDelete.get(i);\n        if (infoStream != null) {\n          message(\"deleteCommits: now decRef commit \\\"\" + commit.getSegmentsFileName() + \"\\\"\");\n        }\n        for (final String file : commit.files) {\n          decRef(file);\n        }\n      }\n      commitsToDelete.clear();\n\n      // Now compact commits to remove deleted ones (preserving the sort):\n      size = commits.size();\n      int readFrom = 0;\n      int writeTo = 0;\n      while(readFrom < size) {\n        CommitPoint commit = commits.get(readFrom);\n        if (!commit.deleted) {\n          if (writeTo != readFrom) {\n            commits.set(writeTo, commits.get(readFrom));\n          }\n          writeTo++;\n        }\n        readFrom++;\n      }\n\n      while(size > writeTo) {\n        commits.remove(size-1);\n        size--;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}