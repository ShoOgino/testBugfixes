{"path":"lucene/src/test/org/apache/lucene/index/TestDocsAndPositions#findNext(int[],int,int).mjava","commits":[{"id":"9d7606b7ab7992bc238d10c3bddfe82a639d212a","date":1295971955,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocsAndPositions#findNext(int[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  private static int findNext(int[] docs, int pos, int max) {\n    for (int i = pos; i < max; i++) {\n      if( docs[i] != 0) {\n        return i;\n      }\n    }\n    return Integer.MAX_VALUE;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocsAndPositions#findNext(int[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  private static int findNext(int[] docs, int pos, int max) {\n    for (int i = pos; i < max; i++) {\n      if( docs[i] != 0) {\n        return i;\n      }\n    }\n    return Integer.MAX_VALUE;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocsAndPositions#findNext(int[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  private static int findNext(int[] docs, int pos, int max) {\n    for (int i = pos; i < max; i++) {\n      if( docs[i] != 0) {\n        return i;\n      }\n    }\n    return Integer.MAX_VALUE;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocsAndPositions#findNext(int[],int,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocsAndPositions#findNext(int[],int,int).mjava","sourceNew":"  private static int findNext(int[] docs, int pos, int max) {\n    for (int i = pos; i < max; i++) {\n      if( docs[i] != 0) {\n        return i;\n      }\n    }\n    return Integer.MAX_VALUE;\n  }\n\n","sourceOld":"  private static int findNext(int[] docs, int pos, int max) {\n    for (int i = pos; i < max; i++) {\n      if( docs[i] != 0) {\n        return i;\n      }\n    }\n    return Integer.MAX_VALUE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9d7606b7ab7992bc238d10c3bddfe82a639d212a"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9d7606b7ab7992bc238d10c3bddfe82a639d212a"],"9d7606b7ab7992bc238d10c3bddfe82a639d212a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9d7606b7ab7992bc238d10c3bddfe82a639d212a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"9d7606b7ab7992bc238d10c3bddfe82a639d212a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","9d7606b7ab7992bc238d10c3bddfe82a639d212a","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}