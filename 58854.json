{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","commits":[{"id":"f5eb842cfee458c37a15154f49502a6a00fc662f","date":1494313961,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","pathOld":"/dev/null","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n              .withArgName(\"enable\")\n              .withDescription(\"Enable authentication.\")\n              .create(\"enable\"),\n          OptionBuilder\n              .withArgName(\"disable\")\n              .withDescription(\"Disable existing authentication.\")\n              .create(\"disable\"),\n          OptionBuilder\n              .withArgName(\"type\")\n              .hasArg()\n              .withDescription(\"basicAuth\")\n              .create(\"type\"),\n          OptionBuilder\n              .withArgName(\"credentials\")\n              .hasArg()\n              .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n              .create(\"credentials\"),\n          OptionBuilder\n              .withArgName(\"prompt\")\n              .withDescription(\"Prompt for credentials. Use either -credentials or -prompt, not both\")\n              .create(\"prompt\"),              \n          OptionBuilder\n              .withArgName(\"blockUnknown\")\n              .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n              .hasOptionalArg()\n              .create(\"blockUnknown\"),\n          OptionBuilder\n              .withArgName(\"solrIncludeFile\")\n              .hasArg()\n              .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n              .create(\"solrIncludeFile\"),\n          OptionBuilder\n              .withArgName(\"solrUrl\")\n              .hasArg()\n              .withDescription(\"Solr URL\")\n              .create(\"solrUrl\"),\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1396efc84e04da571f41a8f47919f874385db0a8","date":1494866186,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n          .withArgName(\"type\")\n          .hasArg()\n          .withDescription(\"The authentication mechanism to enable. Defaults to 'basicAuth'.\")\n          .create(\"type\"),\n          OptionBuilder\n          .withArgName(\"credentials\")\n          .hasArg()\n          .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n          .create(\"credentials\"),\n          OptionBuilder\n          .withArgName(\"prompt\")\n          .hasArg()\n          .withDescription(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n          .create(\"prompt\"),\n          OptionBuilder\n          .withArgName(\"blockUnknown\")\n          .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n          .hasArg()\n          .create(\"blockUnknown\"),\n          OptionBuilder\n          .withArgName(\"solrIncludeFile\")\n          .hasArg()\n          .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n          .create(\"solrIncludeFile\"),\n          OptionBuilder\n          .withArgName(\"updateIncludeFileOnly\")\n          .withDescription(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n              + \" authentication (i.e. don't update security.json)\")\n          .hasArg()\n          .create(\"updateIncludeFileOnly\"),\n          OptionBuilder\n          .withArgName(\"authConfDir\")\n          .hasArg()\n          .isRequired()\n          .withDescription(\"This is where any authentication related configuration files, if any, would be placed.\")\n          .create(\"authConfDir\"),\n          OptionBuilder\n          .withArgName(\"solrUrl\")\n          .hasArg()\n          .withDescription(\"Solr URL\")\n          .create(\"solrUrl\"),\n          OptionBuilder\n          .withArgName(\"zkHost\")\n          .hasArg()\n          .withDescription(\"ZooKeeper host\")\n          .create(\"zkHost\"),\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n              .withArgName(\"enable\")\n              .withDescription(\"Enable authentication.\")\n              .create(\"enable\"),\n          OptionBuilder\n              .withArgName(\"disable\")\n              .withDescription(\"Disable existing authentication.\")\n              .create(\"disable\"),\n          OptionBuilder\n              .withArgName(\"type\")\n              .hasArg()\n              .withDescription(\"basicAuth\")\n              .create(\"type\"),\n          OptionBuilder\n              .withArgName(\"credentials\")\n              .hasArg()\n              .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n              .create(\"credentials\"),\n          OptionBuilder\n              .withArgName(\"prompt\")\n              .withDescription(\"Prompt for credentials. Use either -credentials or -prompt, not both\")\n              .create(\"prompt\"),              \n          OptionBuilder\n              .withArgName(\"blockUnknown\")\n              .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n              .hasOptionalArg()\n              .create(\"blockUnknown\"),\n          OptionBuilder\n              .withArgName(\"solrIncludeFile\")\n              .hasArg()\n              .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n              .create(\"solrIncludeFile\"),\n          OptionBuilder\n              .withArgName(\"solrUrl\")\n              .hasArg()\n              .withDescription(\"Solr URL\")\n              .create(\"solrUrl\"),\n      };\n    }\n\n","bugFix":null,"bugIntro":["ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f","date":1495081498,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n          .withArgName(\"type\")\n          .hasArg()\n          .withDescription(\"The authentication mechanism to enable. Defaults to 'basicAuth'.\")\n          .create(\"type\"),\n          OptionBuilder\n          .withArgName(\"credentials\")\n          .hasArg()\n          .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n          .create(\"credentials\"),\n          OptionBuilder\n          .withArgName(\"prompt\")\n          .hasArg()\n          .withDescription(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n          .create(\"prompt\"),\n          OptionBuilder\n          .withArgName(\"blockUnknown\")\n          .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n          .hasArg()\n          .create(\"blockUnknown\"),\n          OptionBuilder\n          .withArgName(\"solrIncludeFile\")\n          .hasArg()\n          .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n          .create(\"solrIncludeFile\"),\n          OptionBuilder\n          .withArgName(\"updateIncludeFileOnly\")\n          .withDescription(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n              + \" authentication (i.e. don't update security.json)\")\n          .hasArg()\n          .create(\"updateIncludeFileOnly\"),\n          OptionBuilder\n          .withArgName(\"authConfDir\")\n          .hasArg()\n          .isRequired()\n          .withDescription(\"This is where any authentication related configuration files, if any, would be placed.\")\n          .create(\"authConfDir\"),\n          OptionBuilder\n          .withArgName(\"solrUrl\")\n          .hasArg()\n          .withDescription(\"Solr URL\")\n          .create(\"solrUrl\"),\n          OptionBuilder\n          .withArgName(\"zkHost\")\n          .hasArg()\n          .withDescription(\"ZooKeeper host\")\n          .create(\"zkHost\"),\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n              .withArgName(\"enable\")\n              .withDescription(\"Enable authentication.\")\n              .create(\"enable\"),\n          OptionBuilder\n              .withArgName(\"disable\")\n              .withDescription(\"Disable existing authentication.\")\n              .create(\"disable\"),\n          OptionBuilder\n              .withArgName(\"type\")\n              .hasArg()\n              .withDescription(\"basicAuth\")\n              .create(\"type\"),\n          OptionBuilder\n              .withArgName(\"credentials\")\n              .hasArg()\n              .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n              .create(\"credentials\"),\n          OptionBuilder\n              .withArgName(\"prompt\")\n              .withDescription(\"Prompt for credentials. Use either -credentials or -prompt, not both\")\n              .create(\"prompt\"),              \n          OptionBuilder\n              .withArgName(\"blockUnknown\")\n              .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n              .hasOptionalArg()\n              .create(\"blockUnknown\"),\n          OptionBuilder\n              .withArgName(\"solrIncludeFile\")\n              .hasArg()\n              .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n              .create(\"solrIncludeFile\"),\n          OptionBuilder\n              .withArgName(\"solrUrl\")\n              .hasArg()\n              .withDescription(\"Solr URL\")\n              .create(\"solrUrl\"),\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","pathOld":"/dev/null","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n          .withArgName(\"type\")\n          .hasArg()\n          .withDescription(\"The authentication mechanism to enable. Defaults to 'basicAuth'.\")\n          .create(\"type\"),\n          OptionBuilder\n          .withArgName(\"credentials\")\n          .hasArg()\n          .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n          .create(\"credentials\"),\n          OptionBuilder\n          .withArgName(\"prompt\")\n          .hasArg()\n          .withDescription(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n          .create(\"prompt\"),\n          OptionBuilder\n          .withArgName(\"blockUnknown\")\n          .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n          .hasArg()\n          .create(\"blockUnknown\"),\n          OptionBuilder\n          .withArgName(\"solrIncludeFile\")\n          .hasArg()\n          .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n          .create(\"solrIncludeFile\"),\n          OptionBuilder\n          .withArgName(\"updateIncludeFileOnly\")\n          .withDescription(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n              + \" authentication (i.e. don't update security.json)\")\n          .hasArg()\n          .create(\"updateIncludeFileOnly\"),\n          OptionBuilder\n          .withArgName(\"authConfDir\")\n          .hasArg()\n          .isRequired()\n          .withDescription(\"This is where any authentication related configuration files, if any, would be placed.\")\n          .create(\"authConfDir\"),\n          OptionBuilder\n          .withArgName(\"solrUrl\")\n          .hasArg()\n          .withDescription(\"Solr URL\")\n          .create(\"solrUrl\"),\n          OptionBuilder\n          .withArgName(\"zkHost\")\n          .hasArg()\n          .withDescription(\"ZooKeeper host\")\n          .create(\"zkHost\"),\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3","date":1503399053,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n          .withArgName(\"type\")\n          .hasArg()\n          .withDescription(\"The authentication mechanism to enable (basicAuth or kerberos). Defaults to 'basicAuth'.\")\n          .create(\"type\"),\n          OptionBuilder\n          .withArgName(\"credentials\")\n          .hasArg()\n          .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n          .create(\"credentials\"),\n          OptionBuilder\n          .withArgName(\"prompt\")\n          .hasArg()\n          .withDescription(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n          .create(\"prompt\"),\n          OptionBuilder\n          .withArgName(\"config\")\n          .hasArgs()\n          .withDescription(\"Configuration parameters (Solr startup parameters). Required for Kerberos authentication\")\n          .create(\"config\"),\n          OptionBuilder\n          .withArgName(\"blockUnknown\")\n          .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n          .hasArg()\n          .create(\"blockUnknown\"),\n          OptionBuilder\n          .withArgName(\"solrIncludeFile\")\n          .hasArg()\n          .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n          .create(\"solrIncludeFile\"),\n          OptionBuilder\n          .withArgName(\"updateIncludeFileOnly\")\n          .withDescription(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n              + \" authentication (i.e. don't update security.json)\")\n          .hasArg()\n          .create(\"updateIncludeFileOnly\"),\n          OptionBuilder\n          .withArgName(\"authConfDir\")\n          .hasArg()\n          .isRequired()\n          .withDescription(\"This is where any authentication related configuration files, if any, would be placed.\")\n          .create(\"authConfDir\"),\n          OptionBuilder\n          .withArgName(\"solrUrl\")\n          .hasArg()\n          .withDescription(\"Solr URL\")\n          .create(\"solrUrl\"),\n          OptionBuilder\n          .withArgName(\"zkHost\")\n          .hasArg()\n          .withDescription(\"ZooKeeper host\")\n          .create(\"zkHost\"),\n          OptionBuilder\n          .isRequired(false)\n          .withDescription(\"Enable more verbose command output.\")\n          .create(\"verbose\")\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n          .withArgName(\"type\")\n          .hasArg()\n          .withDescription(\"The authentication mechanism to enable (basicAuth or kerberos). Defaults to 'basicAuth'.\")\n          .create(\"type\"),\n          OptionBuilder\n          .withArgName(\"credentials\")\n          .hasArg()\n          .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n          .create(\"credentials\"),\n          OptionBuilder\n          .withArgName(\"prompt\")\n          .hasArg()\n          .withDescription(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n          .create(\"prompt\"),\n          OptionBuilder\n          .withArgName(\"config\")\n          .hasArgs()\n          .withDescription(\"Configuration parameters (Solr startup parameters). Required for Kerberos authentication\")\n          .create(\"config\"),\n          OptionBuilder\n          .withArgName(\"blockUnknown\")\n          .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n          .hasArg()\n          .create(\"blockUnknown\"),\n          OptionBuilder\n          .withArgName(\"solrIncludeFile\")\n          .hasArg()\n          .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n          .create(\"solrIncludeFile\"),\n          OptionBuilder\n          .withArgName(\"updateIncludeFileOnly\")\n          .withDescription(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n              + \" authentication (i.e. don't update security.json)\")\n          .hasArg()\n          .create(\"updateIncludeFileOnly\"),\n          OptionBuilder\n          .withArgName(\"authConfDir\")\n          .hasArg()\n          .isRequired()\n          .withDescription(\"This is where any authentication related configuration files, if any, would be placed.\")\n          .create(\"authConfDir\"),\n          OptionBuilder\n          .withArgName(\"solrUrl\")\n          .hasArg()\n          .withDescription(\"Solr URL\")\n          .create(\"solrUrl\"),\n          OptionBuilder\n          .withArgName(\"zkHost\")\n          .hasArg()\n          .withDescription(\"ZooKeeper host\")\n          .create(\"zkHost\"),\n      };\n    }\n\n","bugFix":null,"bugIntro":["ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6e12ffe0fc2f16d13edb8f82cd33da7cbedda264","date":1499421663,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n          .withArgName(\"type\")\n          .hasArg()\n          .withDescription(\"The authentication mechanism to enable (basicAuth or kerberos). Defaults to 'basicAuth'.\")\n          .create(\"type\"),\n          OptionBuilder\n          .withArgName(\"credentials\")\n          .hasArg()\n          .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n          .create(\"credentials\"),\n          OptionBuilder\n          .withArgName(\"prompt\")\n          .hasArg()\n          .withDescription(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n          .create(\"prompt\"),\n          OptionBuilder\n          .withArgName(\"config\")\n          .hasArgs()\n          .withDescription(\"Configuration parameters (Solr startup parameters). Required for Kerberos authentication\")\n          .create(\"config\"),\n          OptionBuilder\n          .withArgName(\"blockUnknown\")\n          .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n          .hasArg()\n          .create(\"blockUnknown\"),\n          OptionBuilder\n          .withArgName(\"solrIncludeFile\")\n          .hasArg()\n          .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n          .create(\"solrIncludeFile\"),\n          OptionBuilder\n          .withArgName(\"updateIncludeFileOnly\")\n          .withDescription(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n              + \" authentication (i.e. don't update security.json)\")\n          .hasArg()\n          .create(\"updateIncludeFileOnly\"),\n          OptionBuilder\n          .withArgName(\"authConfDir\")\n          .hasArg()\n          .isRequired()\n          .withDescription(\"This is where any authentication related configuration files, if any, would be placed.\")\n          .create(\"authConfDir\"),\n          OptionBuilder\n          .withArgName(\"solrUrl\")\n          .hasArg()\n          .withDescription(\"Solr URL\")\n          .create(\"solrUrl\"),\n          OptionBuilder\n          .withArgName(\"zkHost\")\n          .hasArg()\n          .withDescription(\"ZooKeeper host\")\n          .create(\"zkHost\"),\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n          .withArgName(\"type\")\n          .hasArg()\n          .withDescription(\"The authentication mechanism to enable. Defaults to 'basicAuth'.\")\n          .create(\"type\"),\n          OptionBuilder\n          .withArgName(\"credentials\")\n          .hasArg()\n          .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n          .create(\"credentials\"),\n          OptionBuilder\n          .withArgName(\"prompt\")\n          .hasArg()\n          .withDescription(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n          .create(\"prompt\"),\n          OptionBuilder\n          .withArgName(\"blockUnknown\")\n          .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n          .hasArg()\n          .create(\"blockUnknown\"),\n          OptionBuilder\n          .withArgName(\"solrIncludeFile\")\n          .hasArg()\n          .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n          .create(\"solrIncludeFile\"),\n          OptionBuilder\n          .withArgName(\"updateIncludeFileOnly\")\n          .withDescription(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n              + \" authentication (i.e. don't update security.json)\")\n          .hasArg()\n          .create(\"updateIncludeFileOnly\"),\n          OptionBuilder\n          .withArgName(\"authConfDir\")\n          .hasArg()\n          .isRequired()\n          .withDescription(\"This is where any authentication related configuration files, if any, would be placed.\")\n          .create(\"authConfDir\"),\n          OptionBuilder\n          .withArgName(\"solrUrl\")\n          .hasArg()\n          .withDescription(\"Solr URL\")\n          .create(\"solrUrl\"),\n          OptionBuilder\n          .withArgName(\"zkHost\")\n          .hasArg()\n          .withDescription(\"ZooKeeper host\")\n          .create(\"zkHost\"),\n      };\n    }\n\n","bugFix":null,"bugIntro":["ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f9a989a32a073c55e3aef6f807a3474184bbcf49","date":1499930209,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n          .withArgName(\"type\")\n          .hasArg()\n          .withDescription(\"The authentication mechanism to enable (basicAuth or kerberos). Defaults to 'basicAuth'.\")\n          .create(\"type\"),\n          OptionBuilder\n          .withArgName(\"credentials\")\n          .hasArg()\n          .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n          .create(\"credentials\"),\n          OptionBuilder\n          .withArgName(\"prompt\")\n          .hasArg()\n          .withDescription(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n          .create(\"prompt\"),\n          OptionBuilder\n          .withArgName(\"config\")\n          .hasArgs()\n          .withDescription(\"Configuration parameters (Solr startup parameters). Required for Kerberos authentication\")\n          .create(\"config\"),\n          OptionBuilder\n          .withArgName(\"blockUnknown\")\n          .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n          .hasArg()\n          .create(\"blockUnknown\"),\n          OptionBuilder\n          .withArgName(\"solrIncludeFile\")\n          .hasArg()\n          .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n          .create(\"solrIncludeFile\"),\n          OptionBuilder\n          .withArgName(\"updateIncludeFileOnly\")\n          .withDescription(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n              + \" authentication (i.e. don't update security.json)\")\n          .hasArg()\n          .create(\"updateIncludeFileOnly\"),\n          OptionBuilder\n          .withArgName(\"authConfDir\")\n          .hasArg()\n          .isRequired()\n          .withDescription(\"This is where any authentication related configuration files, if any, would be placed.\")\n          .create(\"authConfDir\"),\n          OptionBuilder\n          .withArgName(\"solrUrl\")\n          .hasArg()\n          .withDescription(\"Solr URL\")\n          .create(\"solrUrl\"),\n          OptionBuilder\n          .withArgName(\"zkHost\")\n          .hasArg()\n          .withDescription(\"ZooKeeper host\")\n          .create(\"zkHost\"),\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n          .withArgName(\"type\")\n          .hasArg()\n          .withDescription(\"The authentication mechanism to enable. Defaults to 'basicAuth'.\")\n          .create(\"type\"),\n          OptionBuilder\n          .withArgName(\"credentials\")\n          .hasArg()\n          .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n          .create(\"credentials\"),\n          OptionBuilder\n          .withArgName(\"prompt\")\n          .hasArg()\n          .withDescription(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n          .create(\"prompt\"),\n          OptionBuilder\n          .withArgName(\"blockUnknown\")\n          .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n          .hasArg()\n          .create(\"blockUnknown\"),\n          OptionBuilder\n          .withArgName(\"solrIncludeFile\")\n          .hasArg()\n          .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n          .create(\"solrIncludeFile\"),\n          OptionBuilder\n          .withArgName(\"updateIncludeFileOnly\")\n          .withDescription(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n              + \" authentication (i.e. don't update security.json)\")\n          .hasArg()\n          .create(\"updateIncludeFileOnly\"),\n          OptionBuilder\n          .withArgName(\"authConfDir\")\n          .hasArg()\n          .isRequired()\n          .withDescription(\"This is where any authentication related configuration files, if any, would be placed.\")\n          .create(\"authConfDir\"),\n          OptionBuilder\n          .withArgName(\"solrUrl\")\n          .hasArg()\n          .withDescription(\"Solr URL\")\n          .create(\"solrUrl\"),\n          OptionBuilder\n          .withArgName(\"zkHost\")\n          .hasArg()\n          .withDescription(\"ZooKeeper host\")\n          .create(\"zkHost\"),\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb569fd721c41eafc2a2d788499a7df490c7f1a5","date":1499930871,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n          .withArgName(\"type\")\n          .hasArg()\n          .withDescription(\"The authentication mechanism to enable (basicAuth or kerberos). Defaults to 'basicAuth'.\")\n          .create(\"type\"),\n          OptionBuilder\n          .withArgName(\"credentials\")\n          .hasArg()\n          .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n          .create(\"credentials\"),\n          OptionBuilder\n          .withArgName(\"prompt\")\n          .hasArg()\n          .withDescription(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n          .create(\"prompt\"),\n          OptionBuilder\n          .withArgName(\"config\")\n          .hasArgs()\n          .withDescription(\"Configuration parameters (Solr startup parameters). Required for Kerberos authentication\")\n          .create(\"config\"),\n          OptionBuilder\n          .withArgName(\"blockUnknown\")\n          .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n          .hasArg()\n          .create(\"blockUnknown\"),\n          OptionBuilder\n          .withArgName(\"solrIncludeFile\")\n          .hasArg()\n          .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n          .create(\"solrIncludeFile\"),\n          OptionBuilder\n          .withArgName(\"updateIncludeFileOnly\")\n          .withDescription(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n              + \" authentication (i.e. don't update security.json)\")\n          .hasArg()\n          .create(\"updateIncludeFileOnly\"),\n          OptionBuilder\n          .withArgName(\"authConfDir\")\n          .hasArg()\n          .isRequired()\n          .withDescription(\"This is where any authentication related configuration files, if any, would be placed.\")\n          .create(\"authConfDir\"),\n          OptionBuilder\n          .withArgName(\"solrUrl\")\n          .hasArg()\n          .withDescription(\"Solr URL\")\n          .create(\"solrUrl\"),\n          OptionBuilder\n          .withArgName(\"zkHost\")\n          .hasArg()\n          .withDescription(\"ZooKeeper host\")\n          .create(\"zkHost\"),\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n          .withArgName(\"type\")\n          .hasArg()\n          .withDescription(\"The authentication mechanism to enable. Defaults to 'basicAuth'.\")\n          .create(\"type\"),\n          OptionBuilder\n          .withArgName(\"credentials\")\n          .hasArg()\n          .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n          .create(\"credentials\"),\n          OptionBuilder\n          .withArgName(\"prompt\")\n          .hasArg()\n          .withDescription(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n          .create(\"prompt\"),\n          OptionBuilder\n          .withArgName(\"blockUnknown\")\n          .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n          .hasArg()\n          .create(\"blockUnknown\"),\n          OptionBuilder\n          .withArgName(\"solrIncludeFile\")\n          .hasArg()\n          .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n          .create(\"solrIncludeFile\"),\n          OptionBuilder\n          .withArgName(\"updateIncludeFileOnly\")\n          .withDescription(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n              + \" authentication (i.e. don't update security.json)\")\n          .hasArg()\n          .create(\"updateIncludeFileOnly\"),\n          OptionBuilder\n          .withArgName(\"authConfDir\")\n          .hasArg()\n          .isRequired()\n          .withDescription(\"This is where any authentication related configuration files, if any, would be placed.\")\n          .create(\"authConfDir\"),\n          OptionBuilder\n          .withArgName(\"solrUrl\")\n          .hasArg()\n          .withDescription(\"Solr URL\")\n          .create(\"solrUrl\"),\n          OptionBuilder\n          .withArgName(\"zkHost\")\n          .hasArg()\n          .withDescription(\"ZooKeeper host\")\n          .create(\"zkHost\"),\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n          .withArgName(\"type\")\n          .hasArg()\n          .withDescription(\"The authentication mechanism to enable (basicAuth or kerberos). Defaults to 'basicAuth'.\")\n          .create(\"type\"),\n          OptionBuilder\n          .withArgName(\"credentials\")\n          .hasArg()\n          .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n          .create(\"credentials\"),\n          OptionBuilder\n          .withArgName(\"prompt\")\n          .hasArg()\n          .withDescription(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n          .create(\"prompt\"),\n          OptionBuilder\n          .withArgName(\"config\")\n          .hasArgs()\n          .withDescription(\"Configuration parameters (Solr startup parameters). Required for Kerberos authentication\")\n          .create(\"config\"),\n          OptionBuilder\n          .withArgName(\"blockUnknown\")\n          .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n          .hasArg()\n          .create(\"blockUnknown\"),\n          OptionBuilder\n          .withArgName(\"solrIncludeFile\")\n          .hasArg()\n          .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n          .create(\"solrIncludeFile\"),\n          OptionBuilder\n          .withArgName(\"updateIncludeFileOnly\")\n          .withDescription(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n              + \" authentication (i.e. don't update security.json)\")\n          .hasArg()\n          .create(\"updateIncludeFileOnly\"),\n          OptionBuilder\n          .withArgName(\"authConfDir\")\n          .hasArg()\n          .isRequired()\n          .withDescription(\"This is where any authentication related configuration files, if any, would be placed.\")\n          .create(\"authConfDir\"),\n          OptionBuilder\n          .withArgName(\"solrUrl\")\n          .hasArg()\n          .withDescription(\"Solr URL\")\n          .create(\"solrUrl\"),\n          OptionBuilder\n          .withArgName(\"zkHost\")\n          .hasArg()\n          .withDescription(\"ZooKeeper host\")\n          .create(\"zkHost\"),\n          OptionBuilder\n          .isRequired(false)\n          .withDescription(\"Enable more verbose command output.\")\n          .create(\"verbose\")\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n          .withArgName(\"type\")\n          .hasArg()\n          .withDescription(\"The authentication mechanism to enable (basicAuth or kerberos). Defaults to 'basicAuth'.\")\n          .create(\"type\"),\n          OptionBuilder\n          .withArgName(\"credentials\")\n          .hasArg()\n          .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n          .create(\"credentials\"),\n          OptionBuilder\n          .withArgName(\"prompt\")\n          .hasArg()\n          .withDescription(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n          .create(\"prompt\"),\n          OptionBuilder\n          .withArgName(\"config\")\n          .hasArgs()\n          .withDescription(\"Configuration parameters (Solr startup parameters). Required for Kerberos authentication\")\n          .create(\"config\"),\n          OptionBuilder\n          .withArgName(\"blockUnknown\")\n          .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n          .hasArg()\n          .create(\"blockUnknown\"),\n          OptionBuilder\n          .withArgName(\"solrIncludeFile\")\n          .hasArg()\n          .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n          .create(\"solrIncludeFile\"),\n          OptionBuilder\n          .withArgName(\"updateIncludeFileOnly\")\n          .withDescription(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n              + \" authentication (i.e. don't update security.json)\")\n          .hasArg()\n          .create(\"updateIncludeFileOnly\"),\n          OptionBuilder\n          .withArgName(\"authConfDir\")\n          .hasArg()\n          .isRequired()\n          .withDescription(\"This is where any authentication related configuration files, if any, would be placed.\")\n          .create(\"authConfDir\"),\n          OptionBuilder\n          .withArgName(\"solrUrl\")\n          .hasArg()\n          .withDescription(\"Solr URL\")\n          .create(\"solrUrl\"),\n          OptionBuilder\n          .withArgName(\"zkHost\")\n          .hasArg()\n          .withDescription(\"ZooKeeper host\")\n          .create(\"zkHost\"),\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b79a5db147a1c6f95d1625ddbc3561ef56955225","date":1528848080,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n          .withArgName(\"type\")\n          .hasArg()\n          .withDescription(\"The authentication mechanism to enable (basicAuth or kerberos). Defaults to 'basicAuth'.\")\n          .create(\"type\"),\n          OptionBuilder\n          .withArgName(\"credentials\")\n          .hasArg()\n          .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n          .create(\"credentials\"),\n          OptionBuilder\n          .withArgName(\"prompt\")\n          .hasArg()\n          .withDescription(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n          .create(\"prompt\"),\n          OptionBuilder\n          .withArgName(\"config\")\n          .hasArgs()\n          .withDescription(\"Configuration parameters (Solr startup parameters). Required for Kerberos authentication\")\n          .create(\"config\"),\n          OptionBuilder\n          .withArgName(\"blockUnknown\")\n          .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n          .hasArg()\n          .create(\"blockUnknown\"),\n          OptionBuilder\n          .withArgName(\"solrIncludeFile\")\n          .hasArg()\n          .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n          .create(\"solrIncludeFile\"),\n          OptionBuilder\n          .withArgName(\"updateIncludeFileOnly\")\n          .withDescription(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n              + \" authentication (i.e. don't update security.json)\")\n          .hasArg()\n          .create(\"updateIncludeFileOnly\"),\n          OptionBuilder\n          .withArgName(\"authConfDir\")\n          .hasArg()\n          .isRequired()\n          .withDescription(\"This is where any authentication related configuration files, if any, would be placed.\")\n          .create(\"authConfDir\"),\n          OptionBuilder\n          .withArgName(\"solrUrl\")\n          .hasArg()\n          .withDescription(\"Solr URL\")\n          .create(\"solrUrl\"),\n          OptionBuilder\n          .withArgName(\"zkHost\")\n          .hasArg()\n          .withDescription(\"ZooKeeper host\")\n          .create(\"zkHost\"),\n          OptionBuilder\n          .isRequired(false)\n          .withDescription(\"Enable more verbose command output.\")\n          .create(\"verbose\")\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n          .withArgName(\"type\")\n          .hasArg()\n          .withDescription(\"The authentication mechanism to enable (basicAuth or kerberos). Defaults to 'basicAuth'.\")\n          .create(\"type\"),\n          OptionBuilder\n          .withArgName(\"credentials\")\n          .hasArg()\n          .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n          .create(\"credentials\"),\n          OptionBuilder\n          .withArgName(\"prompt\")\n          .hasArg()\n          .withDescription(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n          .create(\"prompt\"),\n          OptionBuilder\n          .withArgName(\"config\")\n          .hasArgs()\n          .withDescription(\"Configuration parameters (Solr startup parameters). Required for Kerberos authentication\")\n          .create(\"config\"),\n          OptionBuilder\n          .withArgName(\"blockUnknown\")\n          .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n          .hasArg()\n          .create(\"blockUnknown\"),\n          OptionBuilder\n          .withArgName(\"solrIncludeFile\")\n          .hasArg()\n          .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n          .create(\"solrIncludeFile\"),\n          OptionBuilder\n          .withArgName(\"updateIncludeFileOnly\")\n          .withDescription(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n              + \" authentication (i.e. don't update security.json)\")\n          .hasArg()\n          .create(\"updateIncludeFileOnly\"),\n          OptionBuilder\n          .withArgName(\"authConfDir\")\n          .hasArg()\n          .isRequired()\n          .withDescription(\"This is where any authentication related configuration files, if any, would be placed.\")\n          .create(\"authConfDir\"),\n          OptionBuilder\n          .withArgName(\"solrUrl\")\n          .hasArg()\n          .withDescription(\"Solr URL\")\n          .create(\"solrUrl\"),\n          OptionBuilder\n          .withArgName(\"zkHost\")\n          .hasArg()\n          .withDescription(\"ZooKeeper host\")\n          .create(\"zkHost\"),\n          OptionBuilder\n          .isRequired(false)\n          .withDescription(\"Enable more verbose command output.\")\n          .create(\"verbose\")\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n          .withArgName(\"type\")\n          .hasArg()\n          .withDescription(\"The authentication mechanism to enable (basicAuth or kerberos). Defaults to 'basicAuth'.\")\n          .create(\"type\"),\n          OptionBuilder\n          .withArgName(\"credentials\")\n          .hasArg()\n          .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n          .create(\"credentials\"),\n          OptionBuilder\n          .withArgName(\"prompt\")\n          .hasArg()\n          .withDescription(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n          .create(\"prompt\"),\n          OptionBuilder\n          .withArgName(\"config\")\n          .hasArgs()\n          .withDescription(\"Configuration parameters (Solr startup parameters). Required for Kerberos authentication\")\n          .create(\"config\"),\n          OptionBuilder\n          .withArgName(\"blockUnknown\")\n          .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n          .hasArg()\n          .create(\"blockUnknown\"),\n          OptionBuilder\n          .withArgName(\"solrIncludeFile\")\n          .hasArg()\n          .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n          .create(\"solrIncludeFile\"),\n          OptionBuilder\n          .withArgName(\"updateIncludeFileOnly\")\n          .withDescription(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n              + \" authentication (i.e. don't update security.json)\")\n          .hasArg()\n          .create(\"updateIncludeFileOnly\"),\n          OptionBuilder\n          .withArgName(\"authConfDir\")\n          .hasArg()\n          .isRequired()\n          .withDescription(\"This is where any authentication related configuration files, if any, would be placed.\")\n          .create(\"authConfDir\"),\n          OptionBuilder\n          .withArgName(\"solrUrl\")\n          .hasArg()\n          .withDescription(\"Solr URL\")\n          .create(\"solrUrl\"),\n          OptionBuilder\n          .withArgName(\"zkHost\")\n          .hasArg()\n          .withDescription(\"ZooKeeper host\")\n          .create(\"zkHost\"),\n          OptionBuilder\n          .isRequired(false)\n          .withDescription(\"Enable more verbose command output.\")\n          .create(\"verbose\")\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n          .withArgName(\"type\")\n          .hasArg()\n          .withDescription(\"The authentication mechanism to enable (basicAuth or kerberos). Defaults to 'basicAuth'.\")\n          .create(\"type\"),\n          OptionBuilder\n          .withArgName(\"credentials\")\n          .hasArg()\n          .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n          .create(\"credentials\"),\n          OptionBuilder\n          .withArgName(\"prompt\")\n          .hasArg()\n          .withDescription(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n          .create(\"prompt\"),\n          OptionBuilder\n          .withArgName(\"config\")\n          .hasArgs()\n          .withDescription(\"Configuration parameters (Solr startup parameters). Required for Kerberos authentication\")\n          .create(\"config\"),\n          OptionBuilder\n          .withArgName(\"blockUnknown\")\n          .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n          .hasArg()\n          .create(\"blockUnknown\"),\n          OptionBuilder\n          .withArgName(\"solrIncludeFile\")\n          .hasArg()\n          .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n          .create(\"solrIncludeFile\"),\n          OptionBuilder\n          .withArgName(\"updateIncludeFileOnly\")\n          .withDescription(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n              + \" authentication (i.e. don't update security.json)\")\n          .hasArg()\n          .create(\"updateIncludeFileOnly\"),\n          OptionBuilder\n          .withArgName(\"authConfDir\")\n          .hasArg()\n          .isRequired()\n          .withDescription(\"This is where any authentication related configuration files, if any, would be placed.\")\n          .create(\"authConfDir\"),\n          OptionBuilder\n          .withArgName(\"solrUrl\")\n          .hasArg()\n          .withDescription(\"Solr URL\")\n          .create(\"solrUrl\"),\n          OptionBuilder\n          .withArgName(\"zkHost\")\n          .hasArg()\n          .withDescription(\"ZooKeeper host\")\n          .create(\"zkHost\"),\n          OptionBuilder\n          .isRequired(false)\n          .withDescription(\"Enable more verbose command output.\")\n          .create(\"verbose\")\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n          .withArgName(\"type\")\n          .hasArg()\n          .withDescription(\"The authentication mechanism to enable (basicAuth or kerberos). Defaults to 'basicAuth'.\")\n          .create(\"type\"),\n          OptionBuilder\n          .withArgName(\"credentials\")\n          .hasArg()\n          .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n          .create(\"credentials\"),\n          OptionBuilder\n          .withArgName(\"prompt\")\n          .hasArg()\n          .withDescription(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n          .create(\"prompt\"),\n          OptionBuilder\n          .withArgName(\"config\")\n          .hasArgs()\n          .withDescription(\"Configuration parameters (Solr startup parameters). Required for Kerberos authentication\")\n          .create(\"config\"),\n          OptionBuilder\n          .withArgName(\"blockUnknown\")\n          .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n          .hasArg()\n          .create(\"blockUnknown\"),\n          OptionBuilder\n          .withArgName(\"solrIncludeFile\")\n          .hasArg()\n          .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n          .create(\"solrIncludeFile\"),\n          OptionBuilder\n          .withArgName(\"updateIncludeFileOnly\")\n          .withDescription(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n              + \" authentication (i.e. don't update security.json)\")\n          .hasArg()\n          .create(\"updateIncludeFileOnly\"),\n          OptionBuilder\n          .withArgName(\"authConfDir\")\n          .hasArg()\n          .isRequired()\n          .withDescription(\"This is where any authentication related configuration files, if any, would be placed.\")\n          .create(\"authConfDir\"),\n          OptionBuilder\n          .withArgName(\"solrUrl\")\n          .hasArg()\n          .withDescription(\"Solr URL\")\n          .create(\"solrUrl\"),\n          OptionBuilder\n          .withArgName(\"zkHost\")\n          .hasArg()\n          .withDescription(\"ZooKeeper host\")\n          .create(\"zkHost\"),\n          OptionBuilder\n          .isRequired(false)\n          .withDescription(\"Enable more verbose command output.\")\n          .create(\"verbose\")\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n          .withArgName(\"type\")\n          .hasArg()\n          .withDescription(\"The authentication mechanism to enable (basicAuth or kerberos). Defaults to 'basicAuth'.\")\n          .create(\"type\"),\n          OptionBuilder\n          .withArgName(\"credentials\")\n          .hasArg()\n          .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n          .create(\"credentials\"),\n          OptionBuilder\n          .withArgName(\"prompt\")\n          .hasArg()\n          .withDescription(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n          .create(\"prompt\"),\n          OptionBuilder\n          .withArgName(\"config\")\n          .hasArgs()\n          .withDescription(\"Configuration parameters (Solr startup parameters). Required for Kerberos authentication\")\n          .create(\"config\"),\n          OptionBuilder\n          .withArgName(\"blockUnknown\")\n          .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n          .hasArg()\n          .create(\"blockUnknown\"),\n          OptionBuilder\n          .withArgName(\"solrIncludeFile\")\n          .hasArg()\n          .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n          .create(\"solrIncludeFile\"),\n          OptionBuilder\n          .withArgName(\"updateIncludeFileOnly\")\n          .withDescription(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n              + \" authentication (i.e. don't update security.json)\")\n          .hasArg()\n          .create(\"updateIncludeFileOnly\"),\n          OptionBuilder\n          .withArgName(\"authConfDir\")\n          .hasArg()\n          .isRequired()\n          .withDescription(\"This is where any authentication related configuration files, if any, would be placed.\")\n          .create(\"authConfDir\"),\n          OptionBuilder\n          .withArgName(\"solrUrl\")\n          .hasArg()\n          .withDescription(\"Solr URL\")\n          .create(\"solrUrl\"),\n          OptionBuilder\n          .withArgName(\"zkHost\")\n          .hasArg()\n          .withDescription(\"ZooKeeper host\")\n          .create(\"zkHost\"),\n          OptionBuilder\n          .isRequired(false)\n          .withDescription(\"Enable more verbose command output.\")\n          .create(\"verbose\")\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee8fbffa595c312bc0437f2c9bb6376a29c1b427","date":1589412657,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#getOptions().mjava","sourceNew":"    public Option[] getOptions() {\n      return new Option[]{\n          Option.builder(\"type\")\n              .argName(\"type\")\n              .hasArg()\n              .desc(\"The authentication mechanism to enable (basicAuth or kerberos). Defaults to 'basicAuth'.\")\n              .build(),\n          Option.builder(\"credentials\")\n              .argName(\"credentials\")\n              .hasArg()\n              .desc(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n              .build(),\n          Option.builder(\"prompt\")\n              .argName(\"prompt\")\n              .hasArg()\n              .desc(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n              .build(),\n          Option.builder(\"config\")\n              .argName(\"config\")\n              .hasArgs()\n              .desc(\"Configuration parameters (Solr startup parameters). Required for Kerberos authentication\")\n              .build(),\n          Option.builder(\"blockUnknown\")\n              .argName(\"blockUnknown\")\n              .desc(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n              .hasArg()\n              .build(),\n          Option.builder(\"solrIncludeFile\")\n              .argName(\"solrIncludeFile\")\n              .hasArg()\n              .desc(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n              .build(),\n          Option.builder(\"updateIncludeFileOnly\")\n              .argName(\"updateIncludeFileOnly\")\n              .desc(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n                  + \" authentication (i.e. don't update security.json)\")\n              .hasArg()\n              .build(),\n          Option.builder(\"authConfDir\")\n              .argName(\"authConfDir\")\n              .hasArg()\n              .required()\n              .desc(\"This is where any authentication related configuration files, if any, would be placed.\")\n              .build(),\n          Option.builder(\"solrUrl\")\n              .argName(\"solrUrl\")\n              .hasArg()\n              .desc(\"Solr URL\")\n              .build(),\n          Option.builder(\"zkHost\")\n              .argName(\"zkHost\")\n              .hasArg()\n              .desc(\"ZooKeeper host\")\n              .build(),\n          Option.builder(\"verbose\")\n              .required(false)\n              .desc(\"Enable more verbose command output.\")\n              .build()\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n          .withArgName(\"type\")\n          .hasArg()\n          .withDescription(\"The authentication mechanism to enable (basicAuth or kerberos). Defaults to 'basicAuth'.\")\n          .create(\"type\"),\n          OptionBuilder\n          .withArgName(\"credentials\")\n          .hasArg()\n          .withDescription(\"Credentials in the format username:password. Example: -credentials solr:SolrRocks\")\n          .create(\"credentials\"),\n          OptionBuilder\n          .withArgName(\"prompt\")\n          .hasArg()\n          .withDescription(\"Prompts the user to provide the credentials. Use either -credentials or -prompt, not both\")\n          .create(\"prompt\"),\n          OptionBuilder\n          .withArgName(\"config\")\n          .hasArgs()\n          .withDescription(\"Configuration parameters (Solr startup parameters). Required for Kerberos authentication\")\n          .create(\"config\"),\n          OptionBuilder\n          .withArgName(\"blockUnknown\")\n          .withDescription(\"Blocks all access for unknown users (requires authentication for all endpoints)\")\n          .hasArg()\n          .create(\"blockUnknown\"),\n          OptionBuilder\n          .withArgName(\"solrIncludeFile\")\n          .hasArg()\n          .withDescription(\"The Solr include file which contains overridable environment variables for configuring Solr configurations\")\n          .create(\"solrIncludeFile\"),\n          OptionBuilder\n          .withArgName(\"updateIncludeFileOnly\")\n          .withDescription(\"Only update the solr.in.sh or solr.in.cmd file, and skip actual enabling/disabling\"\n              + \" authentication (i.e. don't update security.json)\")\n          .hasArg()\n          .create(\"updateIncludeFileOnly\"),\n          OptionBuilder\n          .withArgName(\"authConfDir\")\n          .hasArg()\n          .isRequired()\n          .withDescription(\"This is where any authentication related configuration files, if any, would be placed.\")\n          .create(\"authConfDir\"),\n          OptionBuilder\n          .withArgName(\"solrUrl\")\n          .hasArg()\n          .withDescription(\"Solr URL\")\n          .create(\"solrUrl\"),\n          OptionBuilder\n          .withArgName(\"zkHost\")\n          .hasArg()\n          .withDescription(\"ZooKeeper host\")\n          .create(\"zkHost\"),\n          OptionBuilder\n          .isRequired(false)\n          .withDescription(\"Enable more verbose command output.\")\n          .create(\"verbose\")\n      };\n    }\n\n","bugFix":["1396efc84e04da571f41a8f47919f874385db0a8","f5eb842cfee458c37a15154f49502a6a00fc662f","86d2df3ca94d97c62f70b0d321f5f597de2d3eb3","6e12ffe0fc2f16d13edb8f82cd33da7cbedda264"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb569fd721c41eafc2a2d788499a7df490c7f1a5":["e9017cf144952056066919f1ebc7897ff9bd71b1","f9a989a32a073c55e3aef6f807a3474184bbcf49"],"1396efc84e04da571f41a8f47919f874385db0a8":["f5eb842cfee458c37a15154f49502a6a00fc662f"],"6e12ffe0fc2f16d13edb8f82cd33da7cbedda264":["c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f"],"c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f":["f5eb842cfee458c37a15154f49502a6a00fc662f","1396efc84e04da571f41a8f47919f874385db0a8"],"f9a989a32a073c55e3aef6f807a3474184bbcf49":["e9017cf144952056066919f1ebc7897ff9bd71b1","6e12ffe0fc2f16d13edb8f82cd33da7cbedda264"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["86d2df3ca94d97c62f70b0d321f5f597de2d3eb3"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["86d2df3ca94d97c62f70b0d321f5f597de2d3eb3","b79a5db147a1c6f95d1625ddbc3561ef56955225"],"f5eb842cfee458c37a15154f49502a6a00fc662f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["fb569fd721c41eafc2a2d788499a7df490c7f1a5","86d2df3ca94d97c62f70b0d321f5f597de2d3eb3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ee8fbffa595c312bc0437f2c9bb6376a29c1b427":["b79a5db147a1c6f95d1625ddbc3561ef56955225"],"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3":["6e12ffe0fc2f16d13edb8f82cd33da7cbedda264"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["86d2df3ca94d97c62f70b0d321f5f597de2d3eb3","b79a5db147a1c6f95d1625ddbc3561ef56955225"]},"commit2Childs":{"fb569fd721c41eafc2a2d788499a7df490c7f1a5":["3a7809d1d753b67f48b1a706e17034bf8b624ea3"],"1396efc84e04da571f41a8f47919f874385db0a8":["c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f"],"6e12ffe0fc2f16d13edb8f82cd33da7cbedda264":["f9a989a32a073c55e3aef6f807a3474184bbcf49","86d2df3ca94d97c62f70b0d321f5f597de2d3eb3"],"c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f":["6e12ffe0fc2f16d13edb8f82cd33da7cbedda264","e9017cf144952056066919f1ebc7897ff9bd71b1"],"f9a989a32a073c55e3aef6f807a3474184bbcf49":["fb569fd721c41eafc2a2d788499a7df490c7f1a5"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","ee8fbffa595c312bc0437f2c9bb6376a29c1b427","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["fb569fd721c41eafc2a2d788499a7df490c7f1a5","f9a989a32a073c55e3aef6f807a3474184bbcf49"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"f5eb842cfee458c37a15154f49502a6a00fc662f":["1396efc84e04da571f41a8f47919f874385db0a8","c5536d1fc2015d46bbeb8163f6f8b99483c7cc1f"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","f5eb842cfee458c37a15154f49502a6a00fc662f"],"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3":["b79a5db147a1c6f95d1625ddbc3561ef56955225","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","3a7809d1d753b67f48b1a706e17034bf8b624ea3","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"ee8fbffa595c312bc0437f2c9bb6376a29c1b427":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}