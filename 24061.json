{"path":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberos#distribSetUp().mjava","commits":[{"id":"8293bb9f086fce9590482de97de6eac8381ae15a","date":1432275970,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberos#distribSetUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    //SSLTestConfig.setSSLSystemProperties();\n    if (brokenLocales.contains(Locale.getDefault().toString())) {\n      Locale.setDefault(Locale.US);\n    }\n    setupMiniKdc();\n    super.distribSetUp();\n    //useExternalKdc();\n    try (ZkStateReader zkStateReader = new ZkStateReader(zkServer.getZkAddress(), TIMEOUT, TIMEOUT)) {\n      zkStateReader.getZkClient().create(ZkStateReader.SOLR_SECURITY_CONF_PATH,\n          \"{\\\"authentication\\\":{\\\"class\\\":\\\"org.apache.solr.security.KerberosPlugin\\\"}}\".getBytes(Charsets.UTF_8),\n          CreateMode.PERSISTENT, true);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["57aea691bd25ee526c2064c85d0ba70c2584fcb6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"814b09f7caddc0d041bf4bac96336638511c7f5f","date":1432568708,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberos#distribSetUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberos#distribSetUp().mjava","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    //SSLTestConfig.setSSLSystemProperties();\n    if (brokenLocales.contains(Locale.getDefault().toString())) {\n      Locale.setDefault(Locale.US);\n    }\n    // Use just one jetty\n    this.sliceCount = 0;\n    this.fixShardCount(1);\n\n    setupMiniKdc();\n    super.distribSetUp();\n    //useExternalKdc();\n    try (ZkStateReader zkStateReader = new ZkStateReader(zkServer.getZkAddress(), TIMEOUT, TIMEOUT)) {\n      zkStateReader.getZkClient().create(ZkStateReader.SOLR_SECURITY_CONF_PATH,\n          \"{\\\"authentication\\\":{\\\"class\\\":\\\"org.apache.solr.security.KerberosPlugin\\\"}}\".getBytes(Charsets.UTF_8),\n          CreateMode.PERSISTENT, true);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void distribSetUp() throws Exception {\n    //SSLTestConfig.setSSLSystemProperties();\n    if (brokenLocales.contains(Locale.getDefault().toString())) {\n      Locale.setDefault(Locale.US);\n    }\n    setupMiniKdc();\n    super.distribSetUp();\n    //useExternalKdc();\n    try (ZkStateReader zkStateReader = new ZkStateReader(zkServer.getZkAddress(), TIMEOUT, TIMEOUT)) {\n      zkStateReader.getZkClient().create(ZkStateReader.SOLR_SECURITY_CONF_PATH,\n          \"{\\\"authentication\\\":{\\\"class\\\":\\\"org.apache.solr.security.KerberosPlugin\\\"}}\".getBytes(Charsets.UTF_8),\n          CreateMode.PERSISTENT, true);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"33c290fa45cdfec3aaa108916ec4b6017d0616cc","date":1432654478,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberos#distribSetUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberos#distribSetUp().mjava","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    //SSLTestConfig.setSSLSystemProperties();\n    if (brokenLocales.contains(Locale.getDefault().toString())) {\n      Locale.setDefault(Locale.US);\n    }\n    // Use just one jetty\n    this.sliceCount = 0;\n    this.fixShardCount(1);\n\n    setupMiniKdc();\n    //useExternalKdc();\n    \n    super.distribSetUp();\n    try (ZkStateReader zkStateReader = new ZkStateReader(zkServer.getZkAddress(), TIMEOUT, TIMEOUT)) {\n      zkStateReader.getZkClient().create(ZkStateReader.SOLR_SECURITY_CONF_PATH,\n          \"{\\\"authentication\\\":{\\\"class\\\":\\\"org.apache.solr.security.KerberosPlugin\\\"}}\".getBytes(Charsets.UTF_8),\n          CreateMode.PERSISTENT, true);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void distribSetUp() throws Exception {\n    //SSLTestConfig.setSSLSystemProperties();\n    if (brokenLocales.contains(Locale.getDefault().toString())) {\n      Locale.setDefault(Locale.US);\n    }\n    // Use just one jetty\n    this.sliceCount = 0;\n    this.fixShardCount(1);\n\n    setupMiniKdc();\n    super.distribSetUp();\n    //useExternalKdc();\n    try (ZkStateReader zkStateReader = new ZkStateReader(zkServer.getZkAddress(), TIMEOUT, TIMEOUT)) {\n      zkStateReader.getZkClient().create(ZkStateReader.SOLR_SECURITY_CONF_PATH,\n          \"{\\\"authentication\\\":{\\\"class\\\":\\\"org.apache.solr.security.KerberosPlugin\\\"}}\".getBytes(Charsets.UTF_8),\n          CreateMode.PERSISTENT, true);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"57aea691bd25ee526c2064c85d0ba70c2584fcb6","date":1432708334,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberos#distribSetUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberos#distribSetUp().mjava","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    //SSLTestConfig.setSSLSystemProperties();\n    savedLocale = KerberosTestUtil.overrideLocaleIfNotSpportedByMiniKdc();\n    // Use just one jetty\n    this.sliceCount = 0;\n    this.fixShardCount(1);\n\n    setupMiniKdc();\n    //useExternalKdc();\n    \n    super.distribSetUp();\n    try (ZkStateReader zkStateReader = new ZkStateReader(zkServer.getZkAddress(), TIMEOUT, TIMEOUT)) {\n      zkStateReader.getZkClient().create(ZkStateReader.SOLR_SECURITY_CONF_PATH,\n          \"{\\\"authentication\\\":{\\\"class\\\":\\\"org.apache.solr.security.KerberosPlugin\\\"}}\".getBytes(Charsets.UTF_8),\n          CreateMode.PERSISTENT, true);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void distribSetUp() throws Exception {\n    //SSLTestConfig.setSSLSystemProperties();\n    if (brokenLocales.contains(Locale.getDefault().toString())) {\n      Locale.setDefault(Locale.US);\n    }\n    // Use just one jetty\n    this.sliceCount = 0;\n    this.fixShardCount(1);\n\n    setupMiniKdc();\n    //useExternalKdc();\n    \n    super.distribSetUp();\n    try (ZkStateReader zkStateReader = new ZkStateReader(zkServer.getZkAddress(), TIMEOUT, TIMEOUT)) {\n      zkStateReader.getZkClient().create(ZkStateReader.SOLR_SECURITY_CONF_PATH,\n          \"{\\\"authentication\\\":{\\\"class\\\":\\\"org.apache.solr.security.KerberosPlugin\\\"}}\".getBytes(Charsets.UTF_8),\n          CreateMode.PERSISTENT, true);\n    }\n  }\n\n","bugFix":["8293bb9f086fce9590482de97de6eac8381ae15a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56c5e935e2f4830591e0b601b70925e02766a941","date":1440553685,"type":4,"author":"Anshum Gupta","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestSolrCloudWithKerberos#distribSetUp().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void distribSetUp() throws Exception {\n    //SSLTestConfig.setSSLSystemProperties();\n    savedLocale = KerberosTestUtil.overrideLocaleIfNotSpportedByMiniKdc();\n    // Use just one jetty\n    this.sliceCount = 0;\n    this.fixShardCount(1);\n\n    setupMiniKdc();\n    //useExternalKdc();\n    \n    super.distribSetUp();\n    try (ZkStateReader zkStateReader = new ZkStateReader(zkServer.getZkAddress(), TIMEOUT, TIMEOUT)) {\n      zkStateReader.getZkClient().create(ZkStateReader.SOLR_SECURITY_CONF_PATH,\n          \"{\\\"authentication\\\":{\\\"class\\\":\\\"org.apache.solr.security.KerberosPlugin\\\"}}\".getBytes(Charsets.UTF_8),\n          CreateMode.PERSISTENT, true);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"57aea691bd25ee526c2064c85d0ba70c2584fcb6":["33c290fa45cdfec3aaa108916ec4b6017d0616cc"],"814b09f7caddc0d041bf4bac96336638511c7f5f":["8293bb9f086fce9590482de97de6eac8381ae15a"],"33c290fa45cdfec3aaa108916ec4b6017d0616cc":["814b09f7caddc0d041bf4bac96336638511c7f5f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8293bb9f086fce9590482de97de6eac8381ae15a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"56c5e935e2f4830591e0b601b70925e02766a941":["57aea691bd25ee526c2064c85d0ba70c2584fcb6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["56c5e935e2f4830591e0b601b70925e02766a941"]},"commit2Childs":{"57aea691bd25ee526c2064c85d0ba70c2584fcb6":["56c5e935e2f4830591e0b601b70925e02766a941"],"814b09f7caddc0d041bf4bac96336638511c7f5f":["33c290fa45cdfec3aaa108916ec4b6017d0616cc"],"33c290fa45cdfec3aaa108916ec4b6017d0616cc":["57aea691bd25ee526c2064c85d0ba70c2584fcb6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8293bb9f086fce9590482de97de6eac8381ae15a"],"8293bb9f086fce9590482de97de6eac8381ae15a":["814b09f7caddc0d041bf4bac96336638511c7f5f"],"56c5e935e2f4830591e0b601b70925e02766a941":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}