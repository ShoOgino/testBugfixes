{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Plane#getSampleIntersectionPoint(Plane).mjava","commits":[{"id":"0fb9dbed1415914caa27460f8abb7afadaa61451","date":1429504289,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Plane#getSampleIntersectionPoint(Plane).mjava","pathOld":"/dev/null","sourceNew":"    /** Find a sample point on the intersection between two planes and the unit sphere.\n    */\n    public GeoPoint getSampleIntersectionPoint(final Plane q) {\n        final GeoPoint[] intersections = findIntersections(q, NO_BOUNDS, NO_BOUNDS);\n        if (intersections.length == 0)\n            return null;\n        return intersections[0];\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2997acf74723385bd84aff1ea0b12af4aefde77","date":1430745542,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Plane#getSampleIntersectionPoint(Plane).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Plane#getSampleIntersectionPoint(Plane).mjava","sourceNew":"  /**\n   * Find a sample point on the intersection between two planes and the unit sphere.\n   */\n  public GeoPoint getSampleIntersectionPoint(final Plane q) {\n    final GeoPoint[] intersections = findIntersections(q, NO_BOUNDS, NO_BOUNDS);\n    if (intersections.length == 0)\n      return null;\n    return intersections[0];\n  }\n\n","sourceOld":"    /** Find a sample point on the intersection between two planes and the unit sphere.\n    */\n    public GeoPoint getSampleIntersectionPoint(final Plane q) {\n        final GeoPoint[] intersections = findIntersections(q, NO_BOUNDS, NO_BOUNDS);\n        if (intersections.length == 0)\n            return null;\n        return intersections[0];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c921d81476f94b6686d3f216daa1f6b076b4a6c0","date":1430922284,"type":0,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Plane#getSampleIntersectionPoint(Plane).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Find a sample point on the intersection between two planes and the unit sphere.\n   */\n  public GeoPoint getSampleIntersectionPoint(final Plane q) {\n    final GeoPoint[] intersections = findIntersections(q, NO_BOUNDS, NO_BOUNDS);\n    if (intersections.length == 0)\n      return null;\n    return intersections[0];\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9f97ca977ad649f14b4f60a888adef2edd7a64e","date":1432702490,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Plane#getSampleIntersectionPoint(PlanetModel,Plane).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Plane#getSampleIntersectionPoint(Plane).mjava","sourceNew":"  /**\n   * Find a sample point on the intersection between two planes and the unit sphere.\n   */\n  public GeoPoint getSampleIntersectionPoint(final PlanetModel planetModel, final Plane q) {\n    final GeoPoint[] intersections = findIntersections(planetModel, q, NO_BOUNDS, NO_BOUNDS);\n    if (intersections.length == 0)\n      return null;\n    return intersections[0];\n  }\n\n","sourceOld":"  /**\n   * Find a sample point on the intersection between two planes and the unit sphere.\n   */\n  public GeoPoint getSampleIntersectionPoint(final Plane q) {\n    final GeoPoint[] intersections = findIntersections(q, NO_BOUNDS, NO_BOUNDS);\n    if (intersections.length == 0)\n      return null;\n    return intersections[0];\n  }\n\n","bugFix":null,"bugIntro":["d48c2726dec3381fb15aa3b90f7857635b6bdf74","d48c2726dec3381fb15aa3b90f7857635b6bdf74"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fec06d6753751ae302c7d35866763e6cb414112d","date":1433250698,"type":5,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Plane#getSampleIntersectionPoint(PlanetModel,Plane).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Plane#getSampleIntersectionPoint(Plane).mjava","sourceNew":"  /**\n   * Find a sample point on the intersection between two planes and the unit sphere.\n   */\n  public GeoPoint getSampleIntersectionPoint(final PlanetModel planetModel, final Plane q) {\n    final GeoPoint[] intersections = findIntersections(planetModel, q, NO_BOUNDS, NO_BOUNDS);\n    if (intersections.length == 0)\n      return null;\n    return intersections[0];\n  }\n\n","sourceOld":"  /**\n   * Find a sample point on the intersection between two planes and the unit sphere.\n   */\n  public GeoPoint getSampleIntersectionPoint(final Plane q) {\n    final GeoPoint[] intersections = findIntersections(q, NO_BOUNDS, NO_BOUNDS);\n    if (intersections.length == 0)\n      return null;\n    return intersections[0];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"0fb9dbed1415914caa27460f8abb7afadaa61451":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fec06d6753751ae302c7d35866763e6cb414112d":["c921d81476f94b6686d3f216daa1f6b076b4a6c0","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["0fb9dbed1415914caa27460f8abb7afadaa61451"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e2997acf74723385bd84aff1ea0b12af4aefde77"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fec06d6753751ae302c7d35866763e6cb414112d"]},"commit2Childs":{"0fb9dbed1415914caa27460f8abb7afadaa61451":["e2997acf74723385bd84aff1ea0b12af4aefde77"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0fb9dbed1415914caa27460f8abb7afadaa61451","c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"fec06d6753751ae302c7d35866763e6cb414112d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["fec06d6753751ae302c7d35866763e6cb414112d","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["fec06d6753751ae302c7d35866763e6cb414112d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}