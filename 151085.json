{"path":"solr/core/src/java/org/apache/solr/util/ConcurrentLFUCache#get(K).mjava","commits":[{"id":"3a2591037a85ef083e6588e0b846a5a34ff9b5a3","date":1326403130,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/ConcurrentLFUCache#get(K).mjava","pathOld":"/dev/null","sourceNew":"  public V get(K key) {\n    CacheEntry<K, V> e = map.get(key);\n    if (e == null) {\n      if (islive) stats.missCounter.incrementAndGet();\n      return null;\n    }\n    if (islive) {\n      e.lastAccessed = stats.accessCounter.incrementAndGet();\n      e.hits.incrementAndGet();\n    }\n    return e.value;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca83400a04ed1cbfa09560d2e7184f93f5d75363","date":1428921124,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/ConcurrentLFUCache#get(K).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/ConcurrentLFUCache#get(K).mjava","sourceNew":"  @Override\n  public V get(K key) {\n    CacheEntry<K, V> e = map.get(key);\n    if (e == null) {\n      if (islive) stats.missCounter.incrementAndGet();\n      return null;\n    }\n    if (islive) {\n      e.lastAccessed = stats.accessCounter.incrementAndGet();\n      e.hits.incrementAndGet();\n    }\n    return e.value;\n  }\n\n","sourceOld":"  public V get(K key) {\n    CacheEntry<K, V> e = map.get(key);\n    if (e == null) {\n      if (islive) stats.missCounter.incrementAndGet();\n      return null;\n    }\n    if (islive) {\n      e.lastAccessed = stats.accessCounter.incrementAndGet();\n      e.hits.incrementAndGet();\n    }\n    return e.value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbd58791ecf2b92d8917c2f4aab0e50965ec6a83","date":1568645407,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/ConcurrentLFUCache#get(K).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/ConcurrentLFUCache#get(K).mjava","sourceNew":"  @Override\n  public V get(K key) {\n    CacheEntry<K, V> e = map.get(key);\n    if (e == null) {\n      if (islive) stats.missCounter.incrementAndGet();\n    } else if (islive) {\n      e.lastAccessed = timeSource.getEpochTimeNs();\n      stats.accessCounter.incrementAndGet();\n      e.hits.incrementAndGet();\n    }\n    return e != null ? e.value : null;\n  }\n\n","sourceOld":"  @Override\n  public V get(K key) {\n    CacheEntry<K, V> e = map.get(key);\n    if (e == null) {\n      if (islive) stats.missCounter.incrementAndGet();\n      return null;\n    }\n    if (islive) {\n      e.lastAccessed = stats.accessCounter.incrementAndGet();\n      e.hits.incrementAndGet();\n    }\n    return e.value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87f0484c38f986062889ed50f3bf3bd462848c26","date":1570108628,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/ConcurrentLFUCache#get(K).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/ConcurrentLFUCache#get(K).mjava","sourceNew":"  @Override\n  public V get(K key) {\n    CacheEntry<K, V> e = map.get(key);\n    if (e == null) {\n      if (islive) stats.missCounter.increment();\n    } else if (islive) {\n      e.lastAccessed = timeSource.getEpochTimeNs();\n      stats.accessCounter.increment();\n      e.hits.increment();\n    }\n    return e != null ? e.value : null;\n  }\n\n","sourceOld":"  @Override\n  public V get(K key) {\n    CacheEntry<K, V> e = map.get(key);\n    if (e == null) {\n      if (islive) stats.missCounter.incrementAndGet();\n    } else if (islive) {\n      e.lastAccessed = timeSource.getEpochTimeNs();\n      stats.accessCounter.incrementAndGet();\n      e.hits.incrementAndGet();\n    }\n    return e != null ? e.value : null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/ConcurrentLFUCache#get(K).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/ConcurrentLFUCache#get(K).mjava","sourceNew":"  @Override\n  public V get(K key) {\n    CacheEntry<K, V> e = map.get(key);\n    if (e == null) {\n      if (islive) stats.missCounter.increment();\n    } else if (islive) {\n      e.lastAccessed = timeSource.getEpochTimeNs();\n      stats.accessCounter.increment();\n      e.hits.increment();\n    }\n    return e != null ? e.value : null;\n  }\n\n","sourceOld":"  @Override\n  public V get(K key) {\n    CacheEntry<K, V> e = map.get(key);\n    if (e == null) {\n      if (islive) stats.missCounter.incrementAndGet();\n    } else if (islive) {\n      e.lastAccessed = timeSource.getEpochTimeNs();\n      stats.accessCounter.incrementAndGet();\n      e.hits.incrementAndGet();\n    }\n    return e != null ? e.value : null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d7d3943904804560937e6239effeebda0f920e4","date":1573762904,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/ConcurrentLFUCache#get(K).mjava","sourceNew":null,"sourceOld":"  @Override\n  public V get(K key) {\n    CacheEntry<K, V> e = map.get(key);\n    if (e == null) {\n      if (islive) stats.missCounter.increment();\n    } else if (islive) {\n      e.lastAccessed = timeSource.getEpochTimeNs();\n      stats.accessCounter.increment();\n      e.hits.increment();\n    }\n    return e != null ? e.value : null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ca83400a04ed1cbfa09560d2e7184f93f5d75363":["3a2591037a85ef083e6588e0b846a5a34ff9b5a3"],"fbd58791ecf2b92d8917c2f4aab0e50965ec6a83":["ca83400a04ed1cbfa09560d2e7184f93f5d75363"],"4d7d3943904804560937e6239effeebda0f920e4":["87f0484c38f986062889ed50f3bf3bd462848c26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"87f0484c38f986062889ed50f3bf3bd462848c26":["fbd58791ecf2b92d8917c2f4aab0e50965ec6a83"],"3a2591037a85ef083e6588e0b846a5a34ff9b5a3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d7d3943904804560937e6239effeebda0f920e4"],"b0b597c65628ca9e73913a07e81691f8229bae35":["fbd58791ecf2b92d8917c2f4aab0e50965ec6a83","87f0484c38f986062889ed50f3bf3bd462848c26"]},"commit2Childs":{"ca83400a04ed1cbfa09560d2e7184f93f5d75363":["fbd58791ecf2b92d8917c2f4aab0e50965ec6a83"],"fbd58791ecf2b92d8917c2f4aab0e50965ec6a83":["87f0484c38f986062889ed50f3bf3bd462848c26","b0b597c65628ca9e73913a07e81691f8229bae35"],"4d7d3943904804560937e6239effeebda0f920e4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a2591037a85ef083e6588e0b846a5a34ff9b5a3"],"87f0484c38f986062889ed50f3bf3bd462848c26":["4d7d3943904804560937e6239effeebda0f920e4","b0b597c65628ca9e73913a07e81691f8229bae35"],"3a2591037a85ef083e6588e0b846a5a34ff9b5a3":["ca83400a04ed1cbfa09560d2e7184f93f5d75363"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}