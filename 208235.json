{"path":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#addField(FieldInfo).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#addField(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public TermsConsumer addField(FieldInfo field) {\n    assert currentField == null || currentField.name.compareTo(field.name) < 0;\n    currentField = field;\n    StandardTermsIndexWriter.FieldWriter fieldIndexWriter = indexWriter.addField(field);\n    TermsConsumer terms = new TermsWriter(fieldIndexWriter, field, postingsWriter);\n    fields.add(terms);\n    return terms;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3aaa3a04692b61e4c5b0f329d461e3e7e041188","date":1277217310,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#addField(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#addField(FieldInfo).mjava","sourceNew":"  @Override\n  public TermsConsumer addField(FieldInfo field) {\n    assert currentField == null || currentField.name.compareTo(field.name) < 0;\n    currentField = field;\n    StandardTermsIndexWriter.FieldWriter fieldIndexWriter = termsIndexWriter.addField(field);\n    TermsConsumer terms = new TermsWriter(fieldIndexWriter, field, postingsWriter);\n    fields.add(terms);\n    return terms;\n  }\n\n","sourceOld":"  @Override\n  public TermsConsumer addField(FieldInfo field) {\n    assert currentField == null || currentField.name.compareTo(field.name) < 0;\n    currentField = field;\n    StandardTermsIndexWriter.FieldWriter fieldIndexWriter = indexWriter.addField(field);\n    TermsConsumer terms = new TermsWriter(fieldIndexWriter, field, postingsWriter);\n    fields.add(terms);\n    return terms;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#addField(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#addField(FieldInfo).mjava","sourceNew":"  @Override\n  public TermsConsumer addField(FieldInfo field) {\n    assert currentField == null || currentField.name.compareTo(field.name) < 0;\n    currentField = field;\n    StandardTermsIndexWriter.FieldWriter fieldIndexWriter = termsIndexWriter.addField(field);\n    TermsConsumer terms = new TermsWriter(fieldIndexWriter, field, postingsWriter);\n    fields.add(terms);\n    return terms;\n  }\n\n","sourceOld":"  @Override\n  public TermsConsumer addField(FieldInfo field) {\n    assert currentField == null || currentField.name.compareTo(field.name) < 0;\n    currentField = field;\n    StandardTermsIndexWriter.FieldWriter fieldIndexWriter = indexWriter.addField(field);\n    TermsConsumer terms = new TermsWriter(fieldIndexWriter, field, postingsWriter);\n    fields.add(terms);\n    return terms;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99cf56f3a650b908f7017a72f9d23940418f8a52","date":1284891529,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsWriter#addField(FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#addField(FieldInfo).mjava","sourceNew":"  @Override\n  public TermsConsumer addField(FieldInfo field) {\n    assert currentField == null || currentField.name.compareTo(field.name) < 0;\n    currentField = field;\n    TermsIndexWriterBase.FieldWriter fieldIndexWriter = termsIndexWriter.addField(field);\n    TermsConsumer terms = new TermsWriter(fieldIndexWriter, field, postingsWriter);\n    fields.add(terms);\n    return terms;\n  }\n\n","sourceOld":"  @Override\n  public TermsConsumer addField(FieldInfo field) {\n    assert currentField == null || currentField.name.compareTo(field.name) < 0;\n    currentField = field;\n    StandardTermsIndexWriter.FieldWriter fieldIndexWriter = termsIndexWriter.addField(field);\n    TermsConsumer terms = new TermsWriter(fieldIndexWriter, field, postingsWriter);\n    fields.add(terms);\n    return terms;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardTermsDictWriter#addField(FieldInfo).mjava","sourceNew":null,"sourceOld":"  @Override\n  public TermsConsumer addField(FieldInfo field) {\n    assert currentField == null || currentField.name.compareTo(field.name) < 0;\n    currentField = field;\n    StandardTermsIndexWriter.FieldWriter fieldIndexWriter = termsIndexWriter.addField(field);\n    TermsConsumer terms = new TermsWriter(fieldIndexWriter, field, postingsWriter);\n    fields.add(terms);\n    return terms;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f3aaa3a04692b61e4c5b0f329d461e3e7e041188":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f4e87790277826a2aea119328600dfb07761f32":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","f3aaa3a04692b61e4c5b0f329d461e3e7e041188"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","99cf56f3a650b908f7017a72f9d23940418f8a52"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["f3aaa3a04692b61e4c5b0f329d461e3e7e041188"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["99cf56f3a650b908f7017a72f9d23940418f8a52"]},"commit2Childs":{"f3aaa3a04692b61e4c5b0f329d461e3e7e041188":["5f4e87790277826a2aea119328600dfb07761f32","99cf56f3a650b908f7017a72f9d23940418f8a52"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["f3aaa3a04692b61e4c5b0f329d461e3e7e041188","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"99cf56f3a650b908f7017a72f9d23940418f8a52":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}