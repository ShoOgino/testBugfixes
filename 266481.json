{"path":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestContribParallelReader#testDocument().mjava","commits":[{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestContribParallelReader#testDocument().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestParallelReader#testDocument().mjava","sourceNew":"  public void testDocument() throws IOException {\n    Directory dir1 = getDir1(random);\n    Directory dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1, false));\n    pr.add(IndexReader.open(dir2, false));\n\n    Document doc11 = getDocument(pr, 0, new MapFieldSelector(\"f1\"));\n    Document doc24 = getDocument(pr, 1, new MapFieldSelector(Arrays.asList(\"f4\")));\n    Document doc223 = getDocument(pr, 1, new MapFieldSelector(\"f2\", \"f3\"));\n    \n    assertEquals(1, doc11.getFields().size());\n    assertEquals(1, doc24.getFields().size());\n    assertEquals(2, doc223.getFields().size());\n    \n    assertEquals(\"v1\", doc11.get(\"f1\"));\n    assertEquals(\"v2\", doc24.get(\"f4\"));\n    assertEquals(\"v2\", doc223.get(\"f2\"));\n    assertEquals(\"v2\", doc223.get(\"f3\"));\n    pr.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testDocument() throws IOException {\n    Directory dir1 = getDir1(random);\n    Directory dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1, false));\n    pr.add(IndexReader.open(dir2, false));\n\n    Document doc11 = pr.document(0, new MapFieldSelector(\"f1\"));\n    Document doc24 = pr.document(1, new MapFieldSelector(Arrays.asList(\"f4\")));\n    Document doc223 = pr.document(1, new MapFieldSelector(\"f2\", \"f3\"));\n    \n    assertEquals(1, doc11.getFields().size());\n    assertEquals(1, doc24.getFields().size());\n    assertEquals(2, doc223.getFields().size());\n    \n    assertEquals(\"v1\", doc11.get(\"f1\"));\n    assertEquals(\"v2\", doc24.get(\"f4\"));\n    assertEquals(\"v2\", doc223.get(\"f2\"));\n    assertEquals(\"v2\", doc223.get(\"f3\"));\n    pr.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestContribParallelReader#testDocument().mjava","sourceNew":null,"sourceOld":"  public void testDocument() throws IOException {\n    Directory dir1 = getDir1(random);\n    Directory dir2 = getDir2(random);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(dir1, false));\n    pr.add(IndexReader.open(dir2, false));\n\n    Document doc11 = getDocument(pr, 0, new MapFieldSelector(\"f1\"));\n    Document doc24 = getDocument(pr, 1, new MapFieldSelector(Arrays.asList(\"f4\")));\n    Document doc223 = getDocument(pr, 1, new MapFieldSelector(\"f2\", \"f3\"));\n    \n    assertEquals(1, doc11.getFields().size());\n    assertEquals(1, doc24.getFields().size());\n    assertEquals(2, doc223.getFields().size());\n    \n    assertEquals(\"v1\", doc11.get(\"f1\"));\n    assertEquals(\"v2\", doc24.get(\"f4\"));\n    assertEquals(\"v2\", doc223.get(\"f2\"));\n    assertEquals(\"v2\", doc223.get(\"f3\"));\n    pr.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"06584e6e98d592b34e1329b384182f368d2025e8":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06584e6e98d592b34e1329b384182f368d2025e8"]},"commit2Childs":{"06584e6e98d592b34e1329b384182f368d2025e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["06584e6e98d592b34e1329b384182f368d2025e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}