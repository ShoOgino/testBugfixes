{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/en/TestEnglishAnalyzer#testBasics().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/en/TestEnglishAnalyzer#testBasics().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/en/TestEnglishAnalyzer#testBasics().mjava","sourceNew":"  /** test stopwords and stemming */\n  public void testBasics() throws IOException {\n    Analyzer a = new EnglishAnalyzer(TEST_VERSION_CURRENT);\n    // stemming\n    checkOneTermReuse(a, \"books\", \"book\");\n    checkOneTermReuse(a, \"book\", \"book\");\n    // stopword\n    assertAnalyzesTo(a, \"the\", new String[] {});\n  }\n\n","sourceOld":"  /** test stopwords and stemming */\n  public void testBasics() throws IOException {\n    Analyzer a = new EnglishAnalyzer(TEST_VERSION_CURRENT);\n    // stemming\n    checkOneTermReuse(a, \"books\", \"book\");\n    checkOneTermReuse(a, \"book\", \"book\");\n    // stopword\n    assertAnalyzesTo(a, \"the\", new String[] {});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"683d3f90dda2bbb999c3ce855706d74563a53680","date":1285654576,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/en/TestEnglishAnalyzer#testBasics().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/en/TestEnglishAnalyzer#testBasics().mjava","sourceNew":"  /** test stopwords and stemming */\n  public void testBasics() throws IOException {\n    Analyzer a = new EnglishAnalyzer(TEST_VERSION_CURRENT);\n    // stemming\n    checkOneTermReuse(a, \"books\", \"book\");\n    checkOneTermReuse(a, \"book\", \"book\");\n    // stopword\n    assertAnalyzesTo(a, \"the\", new String[] {});\n    // possessive removal\n    checkOneTermReuse(a, \"steven's\", \"steven\");\n  }\n\n","sourceOld":"  /** test stopwords and stemming */\n  public void testBasics() throws IOException {\n    Analyzer a = new EnglishAnalyzer(TEST_VERSION_CURRENT);\n    // stemming\n    checkOneTermReuse(a, \"books\", \"book\");\n    checkOneTermReuse(a, \"book\", \"book\");\n    // stopword\n    assertAnalyzesTo(a, \"the\", new String[] {});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/en/TestEnglishAnalyzer#testBasics().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/en/TestEnglishAnalyzer#testBasics().mjava","sourceNew":"  /** test stopwords and stemming */\n  public void testBasics() throws IOException {\n    Analyzer a = new EnglishAnalyzer(TEST_VERSION_CURRENT);\n    // stemming\n    checkOneTermReuse(a, \"books\", \"book\");\n    checkOneTermReuse(a, \"book\", \"book\");\n    // stopword\n    assertAnalyzesTo(a, \"the\", new String[] {});\n    // possessive removal\n    checkOneTermReuse(a, \"steven's\", \"steven\");\n  }\n\n","sourceOld":"  /** test stopwords and stemming */\n  public void testBasics() throws IOException {\n    Analyzer a = new EnglishAnalyzer(TEST_VERSION_CURRENT);\n    // stemming\n    checkOneTermReuse(a, \"books\", \"book\");\n    checkOneTermReuse(a, \"book\", \"book\");\n    // stopword\n    assertAnalyzesTo(a, \"the\", new String[] {});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5109cd683efb25e091b90f9cd48f4b18fe613a77","date":1328871671,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/en/TestEnglishAnalyzer#testBasics().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/en/TestEnglishAnalyzer#testBasics().mjava","sourceNew":"  /** test stopwords and stemming */\n  public void testBasics() throws IOException {\n    Analyzer a = new EnglishAnalyzer(TEST_VERSION_CURRENT);\n    // stemming\n    checkOneTermReuse(a, \"books\", \"book\");\n    checkOneTermReuse(a, \"book\", \"book\");\n    // stopword\n    assertAnalyzesTo(a, \"the\", new String[] {});\n    // possessive removal\n    checkOneTermReuse(a, \"steven's\", \"steven\");\n    checkOneTermReuse(a, \"steven\\u2019s\", \"steven\");\n    checkOneTermReuse(a, \"steven\\uFF07s\", \"steven\");\n  }\n\n","sourceOld":"  /** test stopwords and stemming */\n  public void testBasics() throws IOException {\n    Analyzer a = new EnglishAnalyzer(TEST_VERSION_CURRENT);\n    // stemming\n    checkOneTermReuse(a, \"books\", \"book\");\n    checkOneTermReuse(a, \"book\", \"book\");\n    // stopword\n    assertAnalyzesTo(a, \"the\", new String[] {});\n    // possessive removal\n    checkOneTermReuse(a, \"steven's\", \"steven\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/en/TestEnglishAnalyzer#testBasics().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/en/TestEnglishAnalyzer#testBasics().mjava","sourceNew":"  /** test stopwords and stemming */\n  public void testBasics() throws IOException {\n    Analyzer a = new EnglishAnalyzer(TEST_VERSION_CURRENT);\n    // stemming\n    checkOneTermReuse(a, \"books\", \"book\");\n    checkOneTermReuse(a, \"book\", \"book\");\n    // stopword\n    assertAnalyzesTo(a, \"the\", new String[] {});\n    // possessive removal\n    checkOneTermReuse(a, \"steven's\", \"steven\");\n    checkOneTermReuse(a, \"steven\\u2019s\", \"steven\");\n    checkOneTermReuse(a, \"steven\\uFF07s\", \"steven\");\n  }\n\n","sourceOld":"  /** test stopwords and stemming */\n  public void testBasics() throws IOException {\n    Analyzer a = new EnglishAnalyzer(TEST_VERSION_CURRENT);\n    // stemming\n    checkOneTermReuse(a, \"books\", \"book\");\n    checkOneTermReuse(a, \"book\", \"book\");\n    // stopword\n    assertAnalyzesTo(a, \"the\", new String[] {});\n    // possessive removal\n    checkOneTermReuse(a, \"steven's\", \"steven\");\n    checkOneTermReuse(a, \"steven\\u2019s\", \"steven\");\n    checkOneTermReuse(a, \"steven\\uFF07s\", \"steven\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["5109cd683efb25e091b90f9cd48f4b18fe613a77"],"683d3f90dda2bbb999c3ce855706d74563a53680":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"5109cd683efb25e091b90f9cd48f4b18fe613a77":["683d3f90dda2bbb999c3ce855706d74563a53680"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["0f080986da691a3bba7b757f43ab72cdc82b57ce","683d3f90dda2bbb999c3ce855706d74563a53680"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"683d3f90dda2bbb999c3ce855706d74563a53680":["5109cd683efb25e091b90f9cd48f4b18fe613a77","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"5109cd683efb25e091b90f9cd48f4b18fe613a77":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["683d3f90dda2bbb999c3ce855706d74563a53680","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}