{"path":"solr/test-framework/src/java/org/apache/solr/util/RevertDefaultThreadHandlerRule#apply(Statement,Description).mjava","commits":[{"id":"1c8719b2c0b382be11f5b193b6fc14bc310e906b","date":1344770591,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RevertDefaultThreadHandlerRule#apply(Statement,Description).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Statement apply(Statement s, Description d) {\n    return new StatementAdapter(s) {\n      @Override\n      protected void before() throws Throwable {\n        if (!applied.getAndSet(true)) {\n          UncaughtExceptionHandler p = Thread.getDefaultUncaughtExceptionHandler();\n          try {\n            // Try to initialize a zookeeper class that reinitializes default exception handler.\n            Class<?> cl = org.apache.zookeeper.server.NIOServerCnxn.Factory.class;\n            // Make sure static initializers have been called.\n            Class.forName(cl.getName(), true, cl.getClassLoader());\n          } finally {\n            if (p == Thread.getDefaultUncaughtExceptionHandler()) {\n              throw new RuntimeException(\"Zookeeper no longer resets default thread handler.\");\n            }\n            Thread.setDefaultUncaughtExceptionHandler(p);\n          }\n        }\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RevertDefaultThreadHandlerRule#apply(Statement,Description).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Statement apply(Statement s, Description d) {\n    return new StatementAdapter(s) {\n      @Override\n      protected void before() throws Throwable {\n        if (!applied.getAndSet(true)) {\n          UncaughtExceptionHandler p = Thread.getDefaultUncaughtExceptionHandler();\n          try {\n            // Try to initialize a zookeeper class that reinitializes default exception handler.\n            Class<?> cl = org.apache.zookeeper.server.NIOServerCnxn.Factory.class;\n            // Make sure static initializers have been called.\n            Class.forName(cl.getName(), true, cl.getClassLoader());\n          } finally {\n            if (p == Thread.getDefaultUncaughtExceptionHandler()) {\n              throw new RuntimeException(\"Zookeeper no longer resets default thread handler.\");\n            }\n            Thread.setDefaultUncaughtExceptionHandler(p);\n          }\n        }\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RevertDefaultThreadHandlerRule#apply(Statement,Description).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Statement apply(Statement s, Description d) {\n    return new StatementAdapter(s) {\n      @Override\n      protected void before() throws Throwable {\n        if (!applied.getAndSet(true)) {\n          UncaughtExceptionHandler p = Thread.getDefaultUncaughtExceptionHandler();\n          try {\n            // Try to initialize a zookeeper class that reinitializes default exception handler.\n            Class<?> cl = org.apache.zookeeper.server.NIOServerCnxn.Factory.class;\n            // Make sure static initializers have been called.\n            Class.forName(cl.getName(), true, cl.getClassLoader());\n          } finally {\n            if (p == Thread.getDefaultUncaughtExceptionHandler()) {\n              throw new RuntimeException(\"Zookeeper no longer resets default thread handler.\");\n            }\n            Thread.setDefaultUncaughtExceptionHandler(p);\n          }\n        }\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c05c6a4f999960536d6b23302feffb8a50227466","date":1353382574,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RevertDefaultThreadHandlerRule#apply(Statement,Description).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RevertDefaultThreadHandlerRule#apply(Statement,Description).mjava","sourceNew":"  @Override\n  public Statement apply(Statement s, Description d) {\n    return new StatementAdapter(s) {\n      @Override\n      protected void before() throws Throwable {\n        if (!applied.getAndSet(true)) {\n          UncaughtExceptionHandler p = Thread.getDefaultUncaughtExceptionHandler();\n          try {\n            // Try to initialize a zookeeper class that reinitializes default exception handler.\n            Class<?> cl = NIOServerCnxnFactory.class;\n            // Make sure static initializers have been called.\n            Class.forName(cl.getName(), true, cl.getClassLoader());\n          } finally {\n            if (p == Thread.getDefaultUncaughtExceptionHandler()) {\n            //  throw new RuntimeException(\"Zookeeper no longer resets default thread handler.\");\n            }\n            Thread.setDefaultUncaughtExceptionHandler(p);\n          }\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public Statement apply(Statement s, Description d) {\n    return new StatementAdapter(s) {\n      @Override\n      protected void before() throws Throwable {\n        if (!applied.getAndSet(true)) {\n          UncaughtExceptionHandler p = Thread.getDefaultUncaughtExceptionHandler();\n          try {\n            // Try to initialize a zookeeper class that reinitializes default exception handler.\n            Class<?> cl = org.apache.zookeeper.server.NIOServerCnxn.Factory.class;\n            // Make sure static initializers have been called.\n            Class.forName(cl.getName(), true, cl.getClassLoader());\n          } finally {\n            if (p == Thread.getDefaultUncaughtExceptionHandler()) {\n              throw new RuntimeException(\"Zookeeper no longer resets default thread handler.\");\n            }\n            Thread.setDefaultUncaughtExceptionHandler(p);\n          }\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/RevertDefaultThreadHandlerRule#apply(Statement,Description).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/RevertDefaultThreadHandlerRule#apply(Statement,Description).mjava","sourceNew":"  @Override\n  public Statement apply(Statement s, Description d) {\n    return new StatementAdapter(s) {\n      @Override\n      protected void before() throws Throwable {\n        if (!applied.getAndSet(true)) {\n          UncaughtExceptionHandler p = Thread.getDefaultUncaughtExceptionHandler();\n          try {\n            // Try to initialize a zookeeper class that reinitializes default exception handler.\n            Class<?> cl = NIOServerCnxnFactory.class;\n            // Make sure static initializers have been called.\n            Class.forName(cl.getName(), true, cl.getClassLoader());\n          } finally {\n            if (p == Thread.getDefaultUncaughtExceptionHandler()) {\n            //  throw new RuntimeException(\"Zookeeper no longer resets default thread handler.\");\n            }\n            Thread.setDefaultUncaughtExceptionHandler(p);\n          }\n        }\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public Statement apply(Statement s, Description d) {\n    return new StatementAdapter(s) {\n      @Override\n      protected void before() throws Throwable {\n        if (!applied.getAndSet(true)) {\n          UncaughtExceptionHandler p = Thread.getDefaultUncaughtExceptionHandler();\n          try {\n            // Try to initialize a zookeeper class that reinitializes default exception handler.\n            Class<?> cl = org.apache.zookeeper.server.NIOServerCnxn.Factory.class;\n            // Make sure static initializers have been called.\n            Class.forName(cl.getName(), true, cl.getClassLoader());\n          } finally {\n            if (p == Thread.getDefaultUncaughtExceptionHandler()) {\n              throw new RuntimeException(\"Zookeeper no longer resets default thread handler.\");\n            }\n            Thread.setDefaultUncaughtExceptionHandler(p);\n          }\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1c8719b2c0b382be11f5b193b6fc14bc310e906b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["1c8719b2c0b382be11f5b193b6fc14bc310e906b","c05c6a4f999960536d6b23302feffb8a50227466"],"c05c6a4f999960536d6b23302feffb8a50227466":["1c8719b2c0b382be11f5b193b6fc14bc310e906b"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1c8719b2c0b382be11f5b193b6fc14bc310e906b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c05c6a4f999960536d6b23302feffb8a50227466"],"1c8719b2c0b382be11f5b193b6fc14bc310e906b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","1c8719b2c0b382be11f5b193b6fc14bc310e906b"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"c05c6a4f999960536d6b23302feffb8a50227466":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":[],"1c8719b2c0b382be11f5b193b6fc14bc310e906b":["c7869f64c874ebf7f317d22c00baf2b6857797a6","407687e67faf6e1f02a211ca078d8e3eed631027","c05c6a4f999960536d6b23302feffb8a50227466","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","407687e67faf6e1f02a211ca078d8e3eed631027","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}