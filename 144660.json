{"path":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a78a90fc9701e511308346ea29f4f5e548bb39fe","date":1329489995,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","bugFix":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random(), 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random, 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random(), 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newStringField(\"field\", \"\", Field.Store.NO);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random(), 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newField(\"field\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9279c7cd47f17e1e8b674a3741ff5f040bc680be","date":1341675760,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random(), 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newStringField(\"field\", \"\", Field.Store.NO);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ROOT));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random(), 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newStringField(\"field\", \"\", Field.Store.NO);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random(), 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newStringField(\"field\", \"\", Field.Store.NO);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ROOT));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random(), 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newStringField(\"field\", \"\", Field.Store.NO);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random(), 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newStringField(\"field\", \"\", Field.Store.NO);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ROOT));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random(), 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newStringField(\"field\", \"\", Field.Store.NO);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random(), 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newStringField(\"field\", \"\", Field.Store.NO);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ROOT));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random(), 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newStringField(\"field\", \"\", Field.Store.NO);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ENGLISH));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMaxBufferedDocs(TestUtil.nextInt(random(), 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newStringField(\"field\", \"\", Field.Store.NO);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ROOT));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMaxBufferedDocs(_TestUtil.nextInt(random(), 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newStringField(\"field\", \"\", Field.Store.NO);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ROOT));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMaxBufferedDocs(TestUtil.nextInt(random(), 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newStringField(\"field\", \"\", Field.Store.NO);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ROOT));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.shutdown();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMaxBufferedDocs(TestUtil.nextInt(random(), 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newStringField(\"field\", \"\", Field.Store.NO);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ROOT));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n        newIndexWriterConfig(new MockAnalyzer(random()))\n        .setMaxBufferedDocs(TestUtil.nextInt(random(), 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newStringField(\"field\", \"\", Field.Store.NO);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ROOT));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.shutdown();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMaxBufferedDocs(TestUtil.nextInt(random(), 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newStringField(\"field\", \"\", Field.Store.NO);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ROOT));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.shutdown();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestWildcardRandom#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n        newIndexWriterConfig(new MockAnalyzer(random()))\n        .setMaxBufferedDocs(TestUtil.nextInt(random(), 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newStringField(\"field\", \"\", Field.Store.NO);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ROOT));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir,\n        newIndexWriterConfig(new MockAnalyzer(random()))\n        .setMaxBufferedDocs(TestUtil.nextInt(random(), 50, 1000)));\n    \n    Document doc = new Document();\n    Field field = newStringField(\"field\", \"\", Field.Store.NO);\n    doc.add(field);\n    \n    NumberFormat df = new DecimalFormat(\"000\", new DecimalFormatSymbols(Locale.ROOT));\n    for (int i = 0; i < 1000; i++) {\n      field.setStringValue(df.format(i));\n      writer.addDocument(doc);\n    }\n    \n    reader = writer.getReader();\n    searcher = newSearcher(reader);\n    writer.shutdown();\n    if (VERBOSE) {\n      System.out.println(\"TEST: setUp searcher=\" + searcher);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"6613659748fe4411a7dcf85266e55db1f95f7315":["2acf500f78aa12b92e371fd89c719291986b6b90"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"2acf500f78aa12b92e371fd89c719291986b6b90":["04f07771a2a7dd3a395700665ed839c3dae2def2","9279c7cd47f17e1e8b674a3741ff5f040bc680be"],"46d8ada1fff8d18cb197c38c7983225162599948":["04f07771a2a7dd3a395700665ed839c3dae2def2","2acf500f78aa12b92e371fd89c719291986b6b90"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a78a90fc9701e511308346ea29f4f5e548bb39fe":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["04f07771a2a7dd3a395700665ed839c3dae2def2","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["6613659748fe4411a7dcf85266e55db1f95f7315"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"6613659748fe4411a7dcf85266e55db1f95f7315":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["2acf500f78aa12b92e371fd89c719291986b6b90"],"2acf500f78aa12b92e371fd89c719291986b6b90":["6613659748fe4411a7dcf85266e55db1f95f7315","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"46d8ada1fff8d18cb197c38c7983225162599948":[],"04f07771a2a7dd3a395700665ed839c3dae2def2":["9279c7cd47f17e1e8b674a3741ff5f040bc680be","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"a78a90fc9701e511308346ea29f4f5e548bb39fe":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}