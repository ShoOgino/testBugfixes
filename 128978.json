{"path":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#clusterPropTest().mjava","commits":[{"id":"fab88842367a77ce26aedb47e9ea666beea01cf9","date":1391433372,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#clusterPropTest().mjava","pathOld":"/dev/null","sourceNew":"  private void clusterPropTest() throws Exception {\n      Map m = makeMap(\n          \"action\", CollectionAction.CLUSTERPROP.toString().toLowerCase(Locale.ROOT),\n          \"name\", \"legacyCloud\",\n          \"val\", \"true\");\n      SolrParams params = new MapSolrParams(m);\n      SolrRequest request = new QueryRequest(params);\n      request.setPath(\"/admin/collections\");\n    CloudSolrServer client = createCloudClient(null);\n    client.request(request);\n\n    assertEquals(\"cluster property not set\", \"true\", client.getZkStateReader().getClusterProps().get(\"legacyCloud\"));\n    client.shutdown();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8497bb4f9de61b5520423bd9af88ea11a6e109e7","date":1393245090,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#clusterPropTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#clusterPropTest().mjava","sourceNew":"  private void clusterPropTest() throws Exception {\n    CloudSolrServer client = createCloudClient(null);\n\n    assertTrue(\"cluster property not set\", setClusterProp(client, ZkStateReader.LEGACY_CLOUD, \"false\"));\n    assertTrue(\"cluster property not unset \", setClusterProp(client, ZkStateReader.LEGACY_CLOUD, null));\n\n    client.shutdown();\n  }\n\n","sourceOld":"  private void clusterPropTest() throws Exception {\n      Map m = makeMap(\n          \"action\", CollectionAction.CLUSTERPROP.toString().toLowerCase(Locale.ROOT),\n          \"name\", \"legacyCloud\",\n          \"val\", \"true\");\n      SolrParams params = new MapSolrParams(m);\n      SolrRequest request = new QueryRequest(params);\n      request.setPath(\"/admin/collections\");\n    CloudSolrServer client = createCloudClient(null);\n    client.request(request);\n\n    assertEquals(\"cluster property not set\", \"true\", client.getZkStateReader().getClusterProps().get(\"legacyCloud\"));\n    client.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8","date":1393532551,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#clusterPropTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#clusterPropTest().mjava","sourceNew":"  private void clusterPropTest() throws Exception {\n    CloudSolrServer client = createCloudClient(null);\n\n    assertTrue(\"cluster property not set\", setClusterProp(client, ZkStateReader.LEGACY_CLOUD, \"false\"));\n    assertTrue(\"cluster property not unset \", setClusterProp(client, ZkStateReader.LEGACY_CLOUD, null));\n\n    client.shutdown();\n  }\n\n","sourceOld":"  private void clusterPropTest() throws Exception {\n      Map m = makeMap(\n          \"action\", CollectionAction.CLUSTERPROP.toString().toLowerCase(Locale.ROOT),\n          \"name\", \"legacyCloud\",\n          \"val\", \"true\");\n      SolrParams params = new MapSolrParams(m);\n      SolrRequest request = new QueryRequest(params);\n      request.setPath(\"/admin/collections\");\n    CloudSolrServer client = createCloudClient(null);\n    client.request(request);\n\n    assertEquals(\"cluster property not set\", \"true\", client.getZkStateReader().getClusterProps().get(\"legacyCloud\"));\n    client.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#clusterPropTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#clusterPropTest().mjava","sourceNew":"  private void clusterPropTest() throws Exception {\n    CloudSolrClient client = createCloudClient(null);\n\n    assertTrue(\"cluster property not set\", setClusterProp(client, ZkStateReader.LEGACY_CLOUD, \"false\"));\n    assertTrue(\"cluster property not unset \", setClusterProp(client, ZkStateReader.LEGACY_CLOUD, null));\n\n    client.shutdown();\n  }\n\n","sourceOld":"  private void clusterPropTest() throws Exception {\n    CloudSolrServer client = createCloudClient(null);\n\n    assertTrue(\"cluster property not set\", setClusterProp(client, ZkStateReader.LEGACY_CLOUD, \"false\"));\n    assertTrue(\"cluster property not unset \", setClusterProp(client, ZkStateReader.LEGACY_CLOUD, null));\n\n    client.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#clusterPropTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#clusterPropTest().mjava","sourceNew":"  private void clusterPropTest() throws Exception {\n    try (CloudSolrClient client = createCloudClient(null)) {\n      assertTrue(\"cluster property not set\", setClusterProp(client, ZkStateReader.LEGACY_CLOUD, \"false\"));\n      assertTrue(\"cluster property not unset \", setClusterProp(client, ZkStateReader.LEGACY_CLOUD, null));\n    }\n  }\n\n","sourceOld":"  private void clusterPropTest() throws Exception {\n    CloudSolrClient client = createCloudClient(null);\n\n    assertTrue(\"cluster property not set\", setClusterProp(client, ZkStateReader.LEGACY_CLOUD, \"false\"));\n    assertTrue(\"cluster property not unset \", setClusterProp(client, ZkStateReader.LEGACY_CLOUD, null));\n\n    client.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4efd3fffdd7acd625bb88e455c8097e17f75735","date":1477647201,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#clusterPropTest().mjava","sourceNew":null,"sourceOld":"  private void clusterPropTest() throws Exception {\n    try (CloudSolrClient client = createCloudClient(null)) {\n      assertTrue(\"cluster property not set\", setClusterProp(client, ZkStateReader.LEGACY_CLOUD, \"false\"));\n      assertTrue(\"cluster property not unset \", setClusterProp(client, ZkStateReader.LEGACY_CLOUD, null));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59dce44d6a0b58c171de1d47ad8c0a75831f94fd","date":1477668573,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#clusterPropTest().mjava","sourceNew":null,"sourceOld":"  private void clusterPropTest() throws Exception {\n    try (CloudSolrClient client = createCloudClient(null)) {\n      assertTrue(\"cluster property not set\", setClusterProp(client, ZkStateReader.LEGACY_CLOUD, \"false\"));\n      assertTrue(\"cluster property not unset \", setClusterProp(client, ZkStateReader.LEGACY_CLOUD, null));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a4efd3fffdd7acd625bb88e455c8097e17f75735":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"fab88842367a77ce26aedb47e9ea666beea01cf9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"59dce44d6a0b58c171de1d47ad8c0a75831f94fd":["cc3b13b430571c2e169f98fe38e1e7666f88522d","a4efd3fffdd7acd625bb88e455c8097e17f75735"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["8497bb4f9de61b5520423bd9af88ea11a6e109e7"],"8497bb4f9de61b5520423bd9af88ea11a6e109e7":["fab88842367a77ce26aedb47e9ea666beea01cf9"],"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8":["fab88842367a77ce26aedb47e9ea666beea01cf9","8497bb4f9de61b5520423bd9af88ea11a6e109e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a4efd3fffdd7acd625bb88e455c8097e17f75735"]},"commit2Childs":{"a4efd3fffdd7acd625bb88e455c8097e17f75735":["59dce44d6a0b58c171de1d47ad8c0a75831f94fd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fab88842367a77ce26aedb47e9ea666beea01cf9":["8497bb4f9de61b5520423bd9af88ea11a6e109e7","13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8"],"59dce44d6a0b58c171de1d47ad8c0a75831f94fd":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fab88842367a77ce26aedb47e9ea666beea01cf9"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["a4efd3fffdd7acd625bb88e455c8097e17f75735","59dce44d6a0b58c171de1d47ad8c0a75831f94fd"],"bafca15d8e408346a67f4282ad1143b88023893b":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"8497bb4f9de61b5520423bd9af88ea11a6e109e7":["bafca15d8e408346a67f4282ad1143b88023893b","13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8"],"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["59dce44d6a0b58c171de1d47ad8c0a75831f94fd","13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}