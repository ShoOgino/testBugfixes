{"path":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","commits":[{"id":"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4","date":1442407411,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      PayloadSpanScorer scorer = (PayloadSpanScorer) scorer(context);\n      if (scorer == null || scorer.advance(doc) != doc)\n        return Explanation.noMatch(\"No match\");\n\n      SpanWeight innerWeight = ((PayloadSpanWeight)scorer.getWeight()).innerWeight;\n      Explanation innerExpl = innerWeight.explain(context, doc);\n      scorer.freq();  // force freq calculation\n      Explanation payloadExpl = scorer.getPayloadExplanation();\n\n      return Explanation.match(scorer.scoreCurrentDoc(), \"PayloadSpanQuery, product of:\", innerExpl, payloadExpl);\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      PayloadSpanScorer scorer = (PayloadSpanScorer) scorer(context);\n      if (scorer == null || scorer.advance(doc) != doc)\n        return Explanation.noMatch(\"No match\");\n\n      SpanWeight innerWeight = ((PayloadSpanWeight)scorer.getWeight()).innerWeight;\n      Explanation innerExpl = innerWeight.explain(context, doc);\n      scorer.freq();  // force freq calculation\n      Explanation payloadExpl = scorer.getPayloadExplanation();\n\n      return Explanation.match(scorer.scoreCurrentDoc(), \"PayloadSpanQuery, product of:\", innerExpl, payloadExpl);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13406cad512adb18f0b9447f1f35385a56a7bd88","date":1445252017,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      PayloadSpanScorer scorer = (PayloadSpanScorer) scorer(context);\n      if (scorer == null || scorer.advance(doc) != doc)\n        return Explanation.noMatch(\"No match\");\n\n      scorer.freq();  // force freq calculation\n      Explanation payloadExpl = scorer.getPayloadExplanation();\n\n      if (includeSpanScore) {\n        SpanWeight innerWeight = ((PayloadSpanWeight) scorer.getWeight()).innerWeight;\n        Explanation innerExpl = innerWeight.explain(context, doc);\n        return Explanation.match(scorer.scoreCurrentDoc(), \"PayloadSpanQuery, product of:\", innerExpl, payloadExpl);\n      }\n\n      return scorer.getPayloadExplanation();\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      PayloadSpanScorer scorer = (PayloadSpanScorer) scorer(context);\n      if (scorer == null || scorer.advance(doc) != doc)\n        return Explanation.noMatch(\"No match\");\n\n      SpanWeight innerWeight = ((PayloadSpanWeight)scorer.getWeight()).innerWeight;\n      Explanation innerExpl = innerWeight.explain(context, doc);\n      scorer.freq();  // force freq calculation\n      Explanation payloadExpl = scorer.getPayloadExplanation();\n\n      return Explanation.match(scorer.scoreCurrentDoc(), \"PayloadSpanQuery, product of:\", innerExpl, payloadExpl);\n    }\n\n","bugFix":["2e8525cf39738b3113cc2ef20025af7208403718"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"557b118fdfb9d28b6cfe38fac273af58c4d51135","date":1445505363,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      PayloadSpans scorer = (PayloadSpans) scorer(context);\n      if (scorer == null || scorer.advance(doc) != doc)\n        return Explanation.noMatch(\"No match\");\n\n      scorer.freq();  // force freq calculation\n      Explanation payloadExpl = scorer.getPayloadExplanation();\n\n      if (includeSpanScore) {\n        SpanWeight innerWeight = ((PayloadSpanWeight) scorer.getWeight()).innerWeight;\n        Explanation innerExpl = innerWeight.explain(context, doc);\n        return Explanation.match(scorer.scoreCurrentDoc(), \"PayloadSpanQuery, product of:\", innerExpl, payloadExpl);\n      }\n\n      return scorer.getPayloadExplanation();\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      PayloadSpanScorer scorer = (PayloadSpanScorer) scorer(context);\n      if (scorer == null || scorer.advance(doc) != doc)\n        return Explanation.noMatch(\"No match\");\n\n      scorer.freq();  // force freq calculation\n      Explanation payloadExpl = scorer.getPayloadExplanation();\n\n      if (includeSpanScore) {\n        SpanWeight innerWeight = ((PayloadSpanWeight) scorer.getWeight()).innerWeight;\n        Explanation innerExpl = innerWeight.explain(context, doc);\n        return Explanation.match(scorer.scoreCurrentDoc(), \"PayloadSpanQuery, product of:\", innerExpl, payloadExpl);\n      }\n\n      return scorer.getPayloadExplanation();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      PayloadSpanScorer scorer = scorer(context);\n      if (scorer == null || scorer.iterator().advance(doc) != doc)\n        return Explanation.noMatch(\"No match\");\n\n      scorer.freq();  // force freq calculation\n      Explanation payloadExpl = scorer.getPayloadExplanation();\n\n      if (includeSpanScore) {\n        SpanWeight innerWeight = ((PayloadSpanWeight) scorer.getWeight()).innerWeight;\n        Explanation innerExpl = innerWeight.explain(context, doc);\n        return Explanation.match(scorer.scoreCurrentDoc(), \"PayloadSpanQuery, product of:\", innerExpl, payloadExpl);\n      }\n\n      return scorer.getPayloadExplanation();\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      PayloadSpans scorer = (PayloadSpans) scorer(context);\n      if (scorer == null || scorer.advance(doc) != doc)\n        return Explanation.noMatch(\"No match\");\n\n      scorer.freq();  // force freq calculation\n      Explanation payloadExpl = scorer.getPayloadExplanation();\n\n      if (includeSpanScore) {\n        SpanWeight innerWeight = ((PayloadSpanWeight) scorer.getWeight()).innerWeight;\n        Explanation innerExpl = innerWeight.explain(context, doc);\n        return Explanation.match(scorer.scoreCurrentDoc(), \"PayloadSpanQuery, product of:\", innerExpl, payloadExpl);\n      }\n\n      return scorer.getPayloadExplanation();\n    }\n\n","bugFix":null,"bugIntro":["9ad966686d8994b78aff2375da1a0583bf0cf5ee"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"edefb5aa2f5e63eb483c128a8ee99c939fdf041d","date":1493251532,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      PayloadSpanScorer scorer = (PayloadSpanScorer)scorer(context);\n      if (scorer == null || scorer.iterator().advance(doc) != doc)\n        return Explanation.noMatch(\"No match\");\n\n      scorer.freq();  // force freq calculation\n      Explanation payloadExpl = scorer.getPayloadExplanation();\n\n      if (includeSpanScore) {\n        SpanWeight innerWeight = ((PayloadSpanWeight) scorer.getWeight()).innerWeight;\n        Explanation innerExpl = innerWeight.explain(context, doc);\n        return Explanation.match(scorer.scoreCurrentDoc(), \"PayloadSpanQuery, product of:\", innerExpl, payloadExpl);\n      }\n\n      return scorer.getPayloadExplanation();\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      PayloadSpanScorer scorer = scorer(context);\n      if (scorer == null || scorer.iterator().advance(doc) != doc)\n        return Explanation.noMatch(\"No match\");\n\n      scorer.freq();  // force freq calculation\n      Explanation payloadExpl = scorer.getPayloadExplanation();\n\n      if (includeSpanScore) {\n        SpanWeight innerWeight = ((PayloadSpanWeight) scorer.getWeight()).innerWeight;\n        Explanation innerExpl = innerWeight.explain(context, doc);\n        return Explanation.match(scorer.scoreCurrentDoc(), \"PayloadSpanQuery, product of:\", innerExpl, payloadExpl);\n      }\n\n      return scorer.getPayloadExplanation();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9ad966686d8994b78aff2375da1a0583bf0cf5ee","date":1493322197,"type":3,"author":"Erik Hatcher","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      PayloadSpanScorer scorer = (PayloadSpanScorer)scorer(context);\n      if (scorer == null || scorer.iterator().advance(doc) != doc)\n        return Explanation.noMatch(\"No match\");\n\n      scorer.freq();  // force freq calculation\n      Explanation payloadExpl = scorer.getPayloadExplanation();\n\n      if (includeSpanScore) {\n        SpanWeight innerWeight = ((PayloadSpanWeight) scorer.getWeight()).innerWeight;\n        Explanation innerExpl = innerWeight.explain(context, doc);\n        return Explanation.match(scorer.scoreCurrentDoc(), \"PayloadSpanQuery, product of:\", innerExpl, payloadExpl);\n      }\n\n      return scorer.getPayloadExplanation();\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      PayloadSpanScorer scorer = scorer(context);\n      if (scorer == null || scorer.iterator().advance(doc) != doc)\n        return Explanation.noMatch(\"No match\");\n\n      scorer.freq();  // force freq calculation\n      Explanation payloadExpl = scorer.getPayloadExplanation();\n\n      if (includeSpanScore) {\n        SpanWeight innerWeight = ((PayloadSpanWeight) scorer.getWeight()).innerWeight;\n        Explanation innerExpl = innerWeight.explain(context, doc);\n        return Explanation.match(scorer.scoreCurrentDoc(), \"PayloadSpanQuery, product of:\", innerExpl, payloadExpl);\n      }\n\n      return scorer.getPayloadExplanation();\n    }\n\n","bugFix":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      PayloadSpanScorer scorer = (PayloadSpanScorer)scorer(context);\n      if (scorer == null || scorer.iterator().advance(doc) != doc)\n        return Explanation.noMatch(\"No match\");\n\n      scorer.freq();  // force freq calculation\n      Explanation payloadExpl = scorer.getPayloadExplanation();\n\n      if (includeSpanScore) {\n        SpanWeight innerWeight = ((PayloadSpanWeight) scorer.getWeight()).innerWeight;\n        Explanation innerExpl = innerWeight.explain(context, doc);\n        return Explanation.match(scorer.scoreCurrentDoc(), \"PayloadSpanQuery, product of:\", innerExpl, payloadExpl);\n      }\n\n      return scorer.getPayloadExplanation();\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      PayloadSpanScorer scorer = scorer(context);\n      if (scorer == null || scorer.iterator().advance(doc) != doc)\n        return Explanation.noMatch(\"No match\");\n\n      scorer.freq();  // force freq calculation\n      Explanation payloadExpl = scorer.getPayloadExplanation();\n\n      if (includeSpanScore) {\n        SpanWeight innerWeight = ((PayloadSpanWeight) scorer.getWeight()).innerWeight;\n        Explanation innerExpl = innerWeight.explain(context, doc);\n        return Explanation.match(scorer.scoreCurrentDoc(), \"PayloadSpanQuery, product of:\", innerExpl, payloadExpl);\n      }\n\n      return scorer.getPayloadExplanation();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc14da055888b63b4f8c922d0e1579f3cb315ad7","date":1510744456,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      PayloadSpanScorer scorer = (PayloadSpanScorer)scorer(context);\n      if (scorer == null || scorer.iterator().advance(doc) != doc)\n        return Explanation.noMatch(\"No match\");\n\n      scorer.score();  // force freq calculation\n      Explanation payloadExpl = scorer.getPayloadExplanation();\n\n      if (includeSpanScore) {\n        SpanWeight innerWeight = ((PayloadSpanWeight) scorer.getWeight()).innerWeight;\n        Explanation innerExpl = innerWeight.explain(context, doc);\n        return Explanation.match(scorer.scoreCurrentDoc(), \"PayloadSpanQuery, product of:\", innerExpl, payloadExpl);\n      }\n\n      return scorer.getPayloadExplanation();\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      PayloadSpanScorer scorer = (PayloadSpanScorer)scorer(context);\n      if (scorer == null || scorer.iterator().advance(doc) != doc)\n        return Explanation.noMatch(\"No match\");\n\n      scorer.freq();  // force freq calculation\n      Explanation payloadExpl = scorer.getPayloadExplanation();\n\n      if (includeSpanScore) {\n        SpanWeight innerWeight = ((PayloadSpanWeight) scorer.getWeight()).innerWeight;\n        Explanation innerExpl = innerWeight.explain(context, doc);\n        return Explanation.match(scorer.scoreCurrentDoc(), \"PayloadSpanQuery, product of:\", innerExpl, payloadExpl);\n      }\n\n      return scorer.getPayloadExplanation();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["7dd748bb245633a8195281556bb0e68a6ea97d18","9ad966686d8994b78aff2375da1a0583bf0cf5ee"],"dc14da055888b63b4f8c922d0e1579f3cb315ad7":["9ad966686d8994b78aff2375da1a0583bf0cf5ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"557b118fdfb9d28b6cfe38fac273af58c4d51135":["13406cad512adb18f0b9447f1f35385a56a7bd88"],"edefb5aa2f5e63eb483c128a8ee99c939fdf041d":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["557b118fdfb9d28b6cfe38fac273af58c4d51135"],"9ad966686d8994b78aff2375da1a0583bf0cf5ee":["7dd748bb245633a8195281556bb0e68a6ea97d18","edefb5aa2f5e63eb483c128a8ee99c939fdf041d"],"13406cad512adb18f0b9447f1f35385a56a7bd88":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dc14da055888b63b4f8c922d0e1579f3cb315ad7"]},"commit2Childs":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["13406cad512adb18f0b9447f1f35385a56a7bd88"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"dc14da055888b63b4f8c922d0e1579f3cb315ad7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"557b118fdfb9d28b6cfe38fac273af58c4d51135":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"edefb5aa2f5e63eb483c128a8ee99c939fdf041d":["9ad966686d8994b78aff2375da1a0583bf0cf5ee"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["e9017cf144952056066919f1ebc7897ff9bd71b1","edefb5aa2f5e63eb483c128a8ee99c939fdf041d","9ad966686d8994b78aff2375da1a0583bf0cf5ee"],"9ad966686d8994b78aff2375da1a0583bf0cf5ee":["e9017cf144952056066919f1ebc7897ff9bd71b1","dc14da055888b63b4f8c922d0e1579f3cb315ad7"],"13406cad512adb18f0b9447f1f35385a56a7bd88":["557b118fdfb9d28b6cfe38fac273af58c4d51135"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}