{"path":"lucene/core/src/test/org/apache/lucene/util/bkd/TestDocIdsWriter#testRandom().mjava","commits":[{"id":"adc24e961ba2d17d4cc061a9fde65e9059b7f1ee","date":1467616421,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/bkd/TestDocIdsWriter#testRandom().mjava","pathOld":"/dev/null","sourceNew":"  public void testRandom() throws Exception {\n    try (Directory dir = newDirectory()) {\n      for (int iter = 0; iter < 1000; ++iter) {\n        int[] docIDs = new int[random().nextInt(5000)];\n        final int bpv = TestUtil.nextInt(random(), 1, 32);\n        for (int i = 0; i < docIDs.length; ++i) {\n          docIDs[i] = TestUtil.nextInt(random(), 0, (1 << bpv) - 1);\n        }\n        test(dir, docIDs);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/bkd/TestDocIdsWriter#testRandom().mjava","pathOld":"/dev/null","sourceNew":"  public void testRandom() throws Exception {\n    try (Directory dir = newDirectory()) {\n      for (int iter = 0; iter < 1000; ++iter) {\n        int[] docIDs = new int[random().nextInt(5000)];\n        final int bpv = TestUtil.nextInt(random(), 1, 32);\n        for (int i = 0; i < docIDs.length; ++i) {\n          docIDs[i] = TestUtil.nextInt(random(), 0, (1 << bpv) - 1);\n        }\n        test(dir, docIDs);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f","date":1579652839,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/bkd/TestDocIdsWriter#testRandom().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/bkd/TestDocIdsWriter#testRandom().mjava","sourceNew":"  public void testRandom() throws Exception {\n    int numIters = atLeast(100);\n    try (Directory dir = newDirectory()) {\n      for (int iter = 0; iter < numIters; ++iter) {\n        int[] docIDs = new int[random().nextInt(5000)];\n        final int bpv = TestUtil.nextInt(random(), 1, 32);\n        for (int i = 0; i < docIDs.length; ++i) {\n          docIDs[i] = TestUtil.nextInt(random(), 0, (1 << bpv) - 1);\n        }\n        test(dir, docIDs);\n      }\n    }\n  }\n\n","sourceOld":"  public void testRandom() throws Exception {\n    try (Directory dir = newDirectory()) {\n      for (int iter = 0; iter < 1000; ++iter) {\n        int[] docIDs = new int[random().nextInt(5000)];\n        final int bpv = TestUtil.nextInt(random(), 1, 32);\n        for (int i = 0; i < docIDs.length; ++i) {\n          docIDs[i] = TestUtil.nextInt(random(), 0, (1 << bpv) - 1);\n        }\n        test(dir, docIDs);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"adc24e961ba2d17d4cc061a9fde65e9059b7f1ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f":["adc24e961ba2d17d4cc061a9fde65e9059b7f1ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","adc24e961ba2d17d4cc061a9fde65e9059b7f1ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f"]},"commit2Childs":{"adc24e961ba2d17d4cc061a9fde65e9059b7f1ee":["fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"fc1e9ddca40a3ddf8b097f2cf1fe2547fe8e384f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["adc24e961ba2d17d4cc061a9fde65e9059b7f1ee","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}