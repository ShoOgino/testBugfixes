{"path":"src/test/org/apache/lucene/search/TestExtendedFieldCache#setUp().mjava","commits":[{"id":"8408bef84cc9eadfe3d6bf05cac61d5cb5a71f04","date":1193794105,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestExtendedFieldCache#setUp().mjava","pathOld":"/dev/null","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.UN_TOKENIZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.UN_TOKENIZED));\n      doc.add(new Field(\"text\", English.intToEnglish(i), Field.Store.NO, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(directory);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0018e7a0579df5d3de71d0bd878322a7abef04d9","date":1202242049,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestExtendedFieldCache#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestExtendedFieldCache#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.UN_TOKENIZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.UN_TOKENIZED));\n      doc.add(new Field(\"text\", English.intToEnglish(i), Field.Store.NO, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(directory);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.UN_TOKENIZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.UN_TOKENIZED));\n      doc.add(new Field(\"text\", English.intToEnglish(i), Field.Store.NO, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(directory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestExtendedFieldCache#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestExtendedFieldCache#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"text\", English.intToEnglish(i), Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(directory);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.UN_TOKENIZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.UN_TOKENIZED));\n      doc.add(new Field(\"text\", English.intToEnglish(i), Field.Store.NO, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(directory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65eb076d345a794256daba691a2b366657c807e8","date":1245771732,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestFieldCache#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/TestExtendedFieldCache#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    byte theByte = Byte.MAX_VALUE;\n    short theShort = Short.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theByte\", String.valueOf(theByte--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theShort\", String.valueOf(theShort--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theInt\", String.valueOf(theInt--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theFloat\", String.valueOf(theFloat--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(directory);\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new Field(\"theLong\", String.valueOf(theLong--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"theDouble\", String.valueOf(theDouble--), Field.Store.NO, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"text\", English.intToEnglish(i), Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    reader = IndexReader.open(directory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"65eb076d345a794256daba691a2b366657c807e8":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"8408bef84cc9eadfe3d6bf05cac61d5cb5a71f04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["8408bef84cc9eadfe3d6bf05cac61d5cb5a71f04"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["65eb076d345a794256daba691a2b366657c807e8"]},"commit2Childs":{"65eb076d345a794256daba691a2b366657c807e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8408bef84cc9eadfe3d6bf05cac61d5cb5a71f04":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8408bef84cc9eadfe3d6bf05cac61d5cb5a71f04"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["65eb076d345a794256daba691a2b366657c807e8"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}