{"path":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (int i = 0; i < core.fieldInfos.size(); i++) {\n      FieldInfo fi = core.fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (int i = 0; i < core.fieldInfos.size(); i++) {\n      FieldInfo fi = core.fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e28c49f1fb6215a550fdadcf3805aa629b63ec0","date":1288081775,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (int i = 0; i < core.fieldInfos.size(); i++) {\n      FieldInfo fi = core.fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.indexValues != null && fieldOption == IndexReader.FieldOption.DOC_VALUES) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (int i = 0; i < core.fieldInfos.size(); i++) {\n      FieldInfo fi = core.fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39f3757037aa8f710c0cbf9a76a332de735f58b0","date":1288384416,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (int i = 0; i < core.fieldInfos.size(); i++) {\n      FieldInfo fi = core.fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.docValues != null && fieldOption == IndexReader.FieldOption.DOC_VALUES) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (int i = 0; i < core.fieldInfos.size(); i++) {\n      FieldInfo fi = core.fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.indexValues != null && fieldOption == IndexReader.FieldOption.DOC_VALUES) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0c7a8f7304b75b1528814c5820fa23a96816c27","date":1298314239,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (FieldInfo fi : core.fieldInfos) {\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (int i = 0; i < core.fieldInfos.size(); i++) {\n      FieldInfo fi = core.fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (FieldInfo fi : core.fieldInfos) {\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (int i = 0; i < core.fieldInfos.size(); i++) {\n      FieldInfo fi = core.fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14ec33385f6fbb6ce172882d14605790418a5d31","date":1298910796,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (int i = 0; i < core.fieldInfos.size(); i++) {\n      FieldInfo fi = core.fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (FieldInfo fi : core.fieldInfos) {\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1224a4027481acce15495b03bce9b48b93b42722","date":1300792329,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (FieldInfo fi : core.fieldInfos) {\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (int i = 0; i < core.fieldInfos.size(); i++) {\n      FieldInfo fi = core.fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (FieldInfo fi : core.fieldInfos) {\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.docValues != null && fieldOption == IndexReader.FieldOption.DOC_VALUES) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (int i = 0; i < core.fieldInfos.size(); i++) {\n      FieldInfo fi = core.fieldInfos.fieldInfo(i);\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.docValues != null && fieldOption == IndexReader.FieldOption.DOC_VALUES) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","date":1306150983,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (FieldInfo fi : core.fieldInfos) {\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (FieldInfo fi : core.fieldInfos) {\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.docValues != null && fieldOption == IndexReader.FieldOption.DOC_VALUES) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2afd23a6f1242190c3409d8d81d5c5912d607fc9","date":1310477482,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (FieldInfo fi : core.fieldInfos) {\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.indexOptions == IndexOptions.DOCS_ONLY && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.indexOptions == IndexOptions.DOCS_AND_FREQS && fieldOption == IndexReader.FieldOption.OMIT_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (FieldInfo fi : core.fieldInfos) {\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.omitTermFreqAndPositions && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4af732a9bb4cfe62634ba159e581c6eb45ceb280","date":1323232497,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (FieldInfo fi : core.fieldInfos) {\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.indexOptions == IndexOptions.DOCS_ONLY && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.indexOptions == IndexOptions.DOCS_AND_FREQS && fieldOption == IndexReader.FieldOption.OMIT_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      } \n      else if (fi.hasDocValues() && fieldOption == IndexReader.FieldOption.DOC_VALUES) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (FieldInfo fi : core.fieldInfos) {\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.indexOptions == IndexOptions.DOCS_ONLY && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.indexOptions == IndexOptions.DOCS_AND_FREQS && fieldOption == IndexReader.FieldOption.OMIT_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4681a68f42605af5014dd08a03a253e804a4d80","date":1323260341,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (FieldInfo fi : core.fieldInfos) {\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.indexOptions == IndexOptions.DOCS_ONLY && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.indexOptions == IndexOptions.DOCS_AND_FREQS && fieldOption == IndexReader.FieldOption.OMIT_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      } \n      else if (fi.hasDocValues() && fieldOption == IndexReader.FieldOption.DOC_VALUES) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (FieldInfo fi : core.fieldInfos) {\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.indexOptions == IndexOptions.DOCS_ONLY && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.indexOptions == IndexOptions.DOCS_AND_FREQS && fieldOption == IndexReader.FieldOption.OMIT_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"69e6e5a85de57ea8b642c0b8c9e15a2d7d2d0054","date":1323283758,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (FieldInfo fi : core.fieldInfos) {\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.indexOptions == IndexOptions.DOCS_ONLY && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.indexOptions == IndexOptions.DOCS_AND_FREQS && fieldOption == IndexReader.FieldOption.OMIT_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      } \n      else if (fi.hasDocValues() && fieldOption == IndexReader.FieldOption.DOC_VALUES) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","sourceOld":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (FieldInfo fi : core.fieldInfos) {\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.indexOptions == IndexOptions.DOCS_ONLY && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.indexOptions == IndexOptions.DOCS_AND_FREQS && fieldOption == IndexReader.FieldOption.OMIT_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06","date":1326148180,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getFieldNames(IndexReader.FieldOption).mjava","sourceNew":null,"sourceOld":"  /**\n   * @see IndexReader#getFieldNames(org.apache.lucene.index.IndexReader.FieldOption)\n   */\n  @Override\n  public Collection<String> getFieldNames(IndexReader.FieldOption fieldOption) {\n    ensureOpen();\n\n    Set<String> fieldSet = new HashSet<String>();\n    for (FieldInfo fi : core.fieldInfos) {\n      if (fieldOption == IndexReader.FieldOption.ALL) {\n        fieldSet.add(fi.name);\n      }\n      else if (!fi.isIndexed && fieldOption == IndexReader.FieldOption.UNINDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.indexOptions == IndexOptions.DOCS_ONLY && fieldOption == IndexReader.FieldOption.OMIT_TERM_FREQ_AND_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.indexOptions == IndexOptions.DOCS_AND_FREQS && fieldOption == IndexReader.FieldOption.OMIT_POSITIONS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePayloads && fieldOption == IndexReader.FieldOption.STORES_PAYLOADS) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fieldOption == IndexReader.FieldOption.INDEXED) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector == false && fieldOption == IndexReader.FieldOption.INDEXED_NO_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeTermVector == true &&\n               fi.storePositionWithTermVector == false &&\n               fi.storeOffsetWithTermVector == false &&\n               fieldOption == IndexReader.FieldOption.TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.isIndexed && fi.storeTermVector && fieldOption == IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storePositionWithTermVector && fi.storeOffsetWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION) {\n        fieldSet.add(fi.name);\n      }\n      else if (fi.storeOffsetWithTermVector && fi.storePositionWithTermVector == false && fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_OFFSET) {\n        fieldSet.add(fi.name);\n      }\n      else if ((fi.storeOffsetWithTermVector && fi.storePositionWithTermVector) &&\n                fieldOption == IndexReader.FieldOption.TERMVECTOR_WITH_POSITION_OFFSET) {\n        fieldSet.add(fi.name);\n      } \n      else if (fi.hasDocValues() && fieldOption == IndexReader.FieldOption.DOC_VALUES) {\n        fieldSet.add(fi.name);\n      }\n    }\n    return fieldSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["1224a4027481acce15495b03bce9b48b93b42722"],"5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a":["d619839baa8ce5503e496b94a9e42ad6f079293f","1224a4027481acce15495b03bce9b48b93b42722"],"39f3757037aa8f710c0cbf9a76a332de735f58b0":["0e28c49f1fb6215a550fdadcf3805aa629b63ec0"],"d4681a68f42605af5014dd08a03a253e804a4d80":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"],"4af732a9bb4cfe62634ba159e581c6eb45ceb280":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"],"14ec33385f6fbb6ce172882d14605790418a5d31":["b0c7a8f7304b75b1528814c5820fa23a96816c27"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["39f3757037aa8f710c0cbf9a76a332de735f58b0","1224a4027481acce15495b03bce9b48b93b42722"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"69e6e5a85de57ea8b642c0b8c9e15a2d7d2d0054":["2afd23a6f1242190c3409d8d81d5c5912d607fc9","d4681a68f42605af5014dd08a03a253e804a4d80"],"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06":["d4681a68f42605af5014dd08a03a253e804a4d80"],"0e28c49f1fb6215a550fdadcf3805aa629b63ec0":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["9454a6510e2db155fb01faa5c049b06ece95fab9","b0c7a8f7304b75b1528814c5820fa23a96816c27"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3321cfbf7f8aba27e37e7a4d6901531a97ac2b06"],"1224a4027481acce15495b03bce9b48b93b42722":["14ec33385f6fbb6ce172882d14605790418a5d31"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["d4681a68f42605af5014dd08a03a253e804a4d80","4af732a9bb4cfe62634ba159e581c6eb45ceb280","69e6e5a85de57ea8b642c0b8c9e15a2d7d2d0054"],"5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a":[],"39f3757037aa8f710c0cbf9a76a332de735f58b0":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"d4681a68f42605af5014dd08a03a253e804a4d80":["69e6e5a85de57ea8b642c0b8c9e15a2d7d2d0054","3321cfbf7f8aba27e37e7a4d6901531a97ac2b06"],"4af732a9bb4cfe62634ba159e581c6eb45ceb280":[],"14ec33385f6fbb6ce172882d14605790418a5d31":["1224a4027481acce15495b03bce9b48b93b42722"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["14ec33385f6fbb6ce172882d14605790418a5d31","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"69e6e5a85de57ea8b642c0b8c9e15a2d7d2d0054":[],"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0e28c49f1fb6215a550fdadcf3805aa629b63ec0":["39f3757037aa8f710c0cbf9a76a332de735f58b0"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"1224a4027481acce15495b03bce9b48b93b42722":["2afd23a6f1242190c3409d8d81d5c5912d607fc9","5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","d619839baa8ce5503e496b94a9e42ad6f079293f"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b0c7a8f7304b75b1528814c5820fa23a96816c27","0e28c49f1fb6215a550fdadcf3805aa629b63ec0","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","4af732a9bb4cfe62634ba159e581c6eb45ceb280","69e6e5a85de57ea8b642c0b8c9e15a2d7d2d0054","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}