{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#init(String,SolrParams,String,Metric[],String,String,String,String,String).mjava","commits":[{"id":"18255ef03f6449839fece69b2dbad04f214e55eb","date":1496169578,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#init(String,SolrParams,String,Metric[],String,String,String,String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#init(String,SolrParams,String,Metric[],String,String,String,String).mjava","sourceNew":"  private void init(String collection,\n                    SolrParams params,\n                    String field,\n                    Metric[] metrics,\n                    String start,\n                    String end,\n                    String gap,\n                    String format,\n                    String zkHost) throws IOException {\n    this.zkHost  = zkHost;\n    this.collection = collection;\n    this.start = start;\n    this.gap = gap;\n    if(!gap.startsWith(\"+\")) {\n      this.gap = \"+\"+gap;\n    }\n    this.metrics = metrics;\n    this.field = field;\n    this.params = params;\n    this.end = end;\n    if(format != null) {\n      formatter = DateTimeFormatter.ofPattern(format);\n    }\n  }\n\n","sourceOld":"  private void init(String collection,\n                    SolrParams params,\n                    String field,\n                    Metric[] metrics,\n                    String start,\n                    String end,\n                    String gap,\n                    String zkHost) throws IOException {\n    this.zkHost  = zkHost;\n    this.collection = collection;\n    this.start = start;\n    this.gap = gap;\n    if(!gap.startsWith(\"+\")) {\n      this.gap = \"+\"+gap;\n    }\n    this.metrics = metrics;\n    this.field = field;\n    this.params = params;\n    this.end = end;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3162d8e0cdc5e009f5a488de4c57a8217d3b47a3","date":1496170306,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#init(String,SolrParams,String,Metric[],String,String,String,String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#init(String,SolrParams,String,Metric[],String,String,String,String,String).mjava","sourceNew":"  private void init(String collection,\n                    SolrParams params,\n                    String field,\n                    Metric[] metrics,\n                    String start,\n                    String end,\n                    String gap,\n                    String format,\n                    String zkHost) throws IOException {\n    this.zkHost  = zkHost;\n    this.collection = collection;\n    this.start = start;\n    this.gap = gap;\n    if(!gap.startsWith(\"+\")) {\n      this.gap = \"+\"+gap;\n    }\n    this.metrics = metrics;\n    this.field = field;\n    this.params = params;\n    this.end = end;\n    if(format != null) {\n      this.format = format;\n      formatter = DateTimeFormatter.ofPattern(format, Locale.ROOT);\n    }\n  }\n\n","sourceOld":"  private void init(String collection,\n                    SolrParams params,\n                    String field,\n                    Metric[] metrics,\n                    String start,\n                    String end,\n                    String gap,\n                    String format,\n                    String zkHost) throws IOException {\n    this.zkHost  = zkHost;\n    this.collection = collection;\n    this.start = start;\n    this.gap = gap;\n    if(!gap.startsWith(\"+\")) {\n      this.gap = \"+\"+gap;\n    }\n    this.metrics = metrics;\n    this.field = field;\n    this.params = params;\n    this.end = end;\n    if(format != null) {\n      formatter = DateTimeFormatter.ofPattern(format);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#init(String,SolrParams,String,Metric[],String,String,String,String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#init(String,SolrParams,String,Metric[],String,String,String,String).mjava","sourceNew":"  private void init(String collection,\n                    SolrParams params,\n                    String field,\n                    Metric[] metrics,\n                    String start,\n                    String end,\n                    String gap,\n                    String format,\n                    String zkHost) throws IOException {\n    this.zkHost  = zkHost;\n    this.collection = collection;\n    this.start = start;\n    this.gap = gap;\n    if(!gap.startsWith(\"+\")) {\n      this.gap = \"+\"+gap;\n    }\n    this.metrics = metrics;\n    this.field = field;\n    this.params = params;\n    this.end = end;\n    if(format != null) {\n      this.format = format;\n      formatter = DateTimeFormatter.ofPattern(format, Locale.ROOT);\n    }\n  }\n\n","sourceOld":"  private void init(String collection,\n                    SolrParams params,\n                    String field,\n                    Metric[] metrics,\n                    String start,\n                    String end,\n                    String gap,\n                    String zkHost) throws IOException {\n    this.zkHost  = zkHost;\n    this.collection = collection;\n    this.start = start;\n    this.gap = gap;\n    if(!gap.startsWith(\"+\")) {\n      this.gap = \"+\"+gap;\n    }\n    this.metrics = metrics;\n    this.field = field;\n    this.params = params;\n    this.end = end;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44b289ba5434fa10782118c697fa706d6cf231df","date":1496249545,"type":1,"author":"Chris Hostetter","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#init(String,SolrParams,String,Metric[],String,String,String,String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#init(String,SolrParams,String,Metric[],String,String,String,String).mjava","sourceNew":"  private void init(String collection,\n                    SolrParams params,\n                    String field,\n                    Metric[] metrics,\n                    String start,\n                    String end,\n                    String gap,\n                    String format,\n                    String zkHost) throws IOException {\n    this.zkHost  = zkHost;\n    this.collection = collection;\n    this.start = start;\n    this.gap = gap;\n    if(!gap.startsWith(\"+\")) {\n      this.gap = \"+\"+gap;\n    }\n    this.metrics = metrics;\n    this.field = field;\n    this.params = params;\n    this.end = end;\n    if(format != null) {\n      this.format = format;\n      formatter = DateTimeFormatter.ofPattern(format, Locale.ROOT);\n    }\n  }\n\n","sourceOld":"  private void init(String collection,\n                    SolrParams params,\n                    String field,\n                    Metric[] metrics,\n                    String start,\n                    String end,\n                    String gap,\n                    String zkHost) throws IOException {\n    this.zkHost  = zkHost;\n    this.collection = collection;\n    this.start = start;\n    this.gap = gap;\n    if(!gap.startsWith(\"+\")) {\n      this.gap = \"+\"+gap;\n    }\n    this.metrics = metrics;\n    this.field = field;\n    this.params = params;\n    this.end = end;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#init(String,SolrParams,String,Metric[],String,String,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void init(String collection,\n                    SolrParams params,\n                    String field,\n                    Metric[] metrics,\n                    String start,\n                    String end,\n                    String gap,\n                    String format,\n                    String zkHost) throws IOException {\n    this.zkHost  = zkHost;\n    this.collection = collection;\n    this.start = start;\n    this.gap = gap;\n    if(!gap.startsWith(\"+\")) {\n      this.gap = \"+\"+gap;\n    }\n    this.metrics = metrics;\n    this.field = field;\n    this.params = params;\n    this.end = end;\n    if(format != null) {\n      this.format = format;\n      formatter = DateTimeFormatter.ofPattern(format, Locale.ROOT);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3162d8e0cdc5e009f5a488de4c57a8217d3b47a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3162d8e0cdc5e009f5a488de4c57a8217d3b47a3":["18255ef03f6449839fece69b2dbad04f214e55eb"],"18255ef03f6449839fece69b2dbad04f214e55eb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"44b289ba5434fa10782118c697fa706d6cf231df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3162d8e0cdc5e009f5a488de4c57a8217d3b47a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","18255ef03f6449839fece69b2dbad04f214e55eb","44b289ba5434fa10782118c697fa706d6cf231df","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"3162d8e0cdc5e009f5a488de4c57a8217d3b47a3":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"18255ef03f6449839fece69b2dbad04f214e55eb":["3162d8e0cdc5e009f5a488de4c57a8217d3b47a3"],"44b289ba5434fa10782118c697fa706d6cf231df":[],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["44b289ba5434fa10782118c697fa706d6cf231df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","44b289ba5434fa10782118c697fa706d6cf231df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}