{"path":"src/java/org/apache/lucene/search/FieldComparatorSource#newComparator(String,IndexReader[],int,int,boolean).mjava","commits":[{"id":"63bc3238545c6012bd44f5d294077997f236bc4e","date":1233087321,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldComparatorSource#newComparator(String,IndexReader[],int,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a comparator for the field in the given index.\n   * \n   * @param fieldname\n   *          Name of the field to create comparator for.\n   * @return FieldComparator.\n   * @throws IOException\n   *           If an error occurs reading the index.\n   */\n  abstract FieldComparator newComparator(String fieldname, IndexReader[] subReaders, int numHits, int sortPos, boolean reversed)\n      throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0fc71b4f6cf8c8bad447ec76f25fe459c268ee","date":1235653198,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldComparatorSource#newComparator(String,IndexReader[],int,int,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/FieldComparatorSource#newComparator(String,IndexReader[],int,int,boolean).mjava","sourceNew":"  /**\n   * Creates a comparator for the field in the given index.\n   * \n   * @param fieldname\n   *          Name of the field to create comparator for.\n   * @return FieldComparator.\n   * @throws IOException\n   *           If an error occurs reading the index.\n   */\n  public abstract FieldComparator newComparator(String fieldname, IndexReader[] subReaders, int numHits, int sortPos, boolean reversed)\n      throws IOException;\n\n","sourceOld":"  /**\n   * Creates a comparator for the field in the given index.\n   * \n   * @param fieldname\n   *          Name of the field to create comparator for.\n   * @return FieldComparator.\n   * @throws IOException\n   *           If an error occurs reading the index.\n   */\n  abstract FieldComparator newComparator(String fieldname, IndexReader[] subReaders, int numHits, int sortPos, boolean reversed)\n      throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64714133cf5ec732e3bbceee63351bb9af0117dc","date":1239647636,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldComparatorSource#newComparator(String,int,int,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/FieldComparatorSource#newComparator(String,IndexReader[],int,int,boolean).mjava","sourceNew":"  /**\n   * Creates a comparator for the field in the given index.\n   * \n   * @param fieldname\n   *          Name of the field to create comparator for.\n   * @return FieldComparator.\n   * @throws IOException\n   *           If an error occurs reading the index.\n   */\n  public abstract FieldComparator newComparator(String fieldname, int numHits, int sortPos, boolean reversed)\n      throws IOException;\n\n","sourceOld":"  /**\n   * Creates a comparator for the field in the given index.\n   * \n   * @param fieldname\n   *          Name of the field to create comparator for.\n   * @return FieldComparator.\n   * @throws IOException\n   *           If an error occurs reading the index.\n   */\n  public abstract FieldComparator newComparator(String fieldname, IndexReader[] subReaders, int numHits, int sortPos, boolean reversed)\n      throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2a0fc71b4f6cf8c8bad447ec76f25fe459c268ee":["63bc3238545c6012bd44f5d294077997f236bc4e"],"64714133cf5ec732e3bbceee63351bb9af0117dc":["2a0fc71b4f6cf8c8bad447ec76f25fe459c268ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"63bc3238545c6012bd44f5d294077997f236bc4e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["64714133cf5ec732e3bbceee63351bb9af0117dc"]},"commit2Childs":{"2a0fc71b4f6cf8c8bad447ec76f25fe459c268ee":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"64714133cf5ec732e3bbceee63351bb9af0117dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["63bc3238545c6012bd44f5d294077997f236bc4e"],"63bc3238545c6012bd44f5d294077997f236bc4e":["2a0fc71b4f6cf8c8bad447ec76f25fe459c268ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}