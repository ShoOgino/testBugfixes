{"path":"modules/analysis/kuromoji/src/tools/java/org/apache/lucene/analysis/ja/util/DictionaryBuilder#build(DictionaryFormat,String,String,String,boolean).mjava","commits":[{"id":"98d45c1ff2c99694b6de2201175f9b8b8b27b597","date":1332757908,"type":1,"author":"Christian Moen","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/tools/java/org/apache/lucene/analysis/ja/util/DictionaryBuilder#build(DictionaryFormat,String,String,String,boolean).mjava","pathOld":"modules/analysis/kuromoji/src/tools/java/org/apache/lucene/analysis/kuromoji/util/DictionaryBuilder#build(DictionaryFormat,String,String,String,boolean).mjava","sourceNew":"  public static void build(DictionaryFormat format,\n      String inputDirname,\n      String outputDirname,\n      String encoding,\n      boolean normalizeEntry) throws IOException {\n    System.out.println(\"building tokeninfo dict...\");\n    TokenInfoDictionaryBuilder tokenInfoBuilder = new TokenInfoDictionaryBuilder(format, encoding, normalizeEntry);    \n    TokenInfoDictionaryWriter tokenInfoDictionary = tokenInfoBuilder.build(inputDirname);\n    tokenInfoDictionary.write(outputDirname);\n    tokenInfoDictionary = null;\n    tokenInfoBuilder = null;\n    System.out.println(\"done\");\n    \n    System.out.print(\"building unknown word dict...\");\n    UnknownDictionaryBuilder unkBuilder = new UnknownDictionaryBuilder(encoding);\n    UnknownDictionaryWriter unkDictionary = unkBuilder.build(inputDirname);\n    unkDictionary.write(outputDirname);\n    unkDictionary = null;\n    unkBuilder = null;\n    System.out.println(\"done\");\n    \n    System.out.print(\"building connection costs...\");\n    ConnectionCostsWriter connectionCosts\n      = ConnectionCostsBuilder.build(inputDirname + File.separator + \"matrix.def\");\n    connectionCosts.write(outputDirname);\n    System.out.println(\"done\");\n  }\n\n","sourceOld":"  public static void build(DictionaryFormat format,\n      String inputDirname,\n      String outputDirname,\n      String encoding,\n      boolean normalizeEntry) throws IOException {\n    System.out.println(\"building tokeninfo dict...\");\n    TokenInfoDictionaryBuilder tokenInfoBuilder = new TokenInfoDictionaryBuilder(format, encoding, normalizeEntry);    \n    TokenInfoDictionaryWriter tokenInfoDictionary = tokenInfoBuilder.build(inputDirname);\n    tokenInfoDictionary.write(outputDirname);\n    tokenInfoDictionary = null;\n    tokenInfoBuilder = null;\n    System.out.println(\"done\");\n    \n    System.out.print(\"building unknown word dict...\");\n    UnknownDictionaryBuilder unkBuilder = new UnknownDictionaryBuilder(encoding);\n    UnknownDictionaryWriter unkDictionary = unkBuilder.build(inputDirname);\n    unkDictionary.write(outputDirname);\n    unkDictionary = null;\n    unkBuilder = null;\n    System.out.println(\"done\");\n    \n    System.out.print(\"building connection costs...\");\n    ConnectionCostsWriter connectionCosts\n      = ConnectionCostsBuilder.build(inputDirname + File.separator + \"matrix.def\");\n    connectionCosts.write(outputDirname);\n    System.out.println(\"done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/tools/java/org/apache/lucene/analysis/ja/util/DictionaryBuilder#build(DictionaryFormat,String,String,String,boolean).mjava","pathOld":"modules/analysis/kuromoji/src/tools/java/org/apache/lucene/analysis/ja/util/DictionaryBuilder#build(DictionaryFormat,String,String,String,boolean).mjava","sourceNew":"  public static void build(DictionaryFormat format,\n      String inputDirname,\n      String outputDirname,\n      String encoding,\n      boolean normalizeEntry) throws IOException {\n    System.out.println(\"building tokeninfo dict...\");\n    TokenInfoDictionaryBuilder tokenInfoBuilder = new TokenInfoDictionaryBuilder(format, encoding, normalizeEntry);    \n    TokenInfoDictionaryWriter tokenInfoDictionary = tokenInfoBuilder.build(inputDirname);\n    tokenInfoDictionary.write(outputDirname);\n    tokenInfoDictionary = null;\n    tokenInfoBuilder = null;\n    System.out.println(\"done\");\n    \n    System.out.print(\"building unknown word dict...\");\n    UnknownDictionaryBuilder unkBuilder = new UnknownDictionaryBuilder(encoding);\n    UnknownDictionaryWriter unkDictionary = unkBuilder.build(inputDirname);\n    unkDictionary.write(outputDirname);\n    unkDictionary = null;\n    unkBuilder = null;\n    System.out.println(\"done\");\n    \n    System.out.print(\"building connection costs...\");\n    ConnectionCostsWriter connectionCosts\n      = ConnectionCostsBuilder.build(inputDirname + File.separator + \"matrix.def\");\n    connectionCosts.write(outputDirname);\n    System.out.println(\"done\");\n  }\n\n","sourceOld":"  public static void build(DictionaryFormat format,\n      String inputDirname,\n      String outputDirname,\n      String encoding,\n      boolean normalizeEntry) throws IOException {\n    System.out.println(\"building tokeninfo dict...\");\n    TokenInfoDictionaryBuilder tokenInfoBuilder = new TokenInfoDictionaryBuilder(format, encoding, normalizeEntry);    \n    TokenInfoDictionaryWriter tokenInfoDictionary = tokenInfoBuilder.build(inputDirname);\n    tokenInfoDictionary.write(outputDirname);\n    tokenInfoDictionary = null;\n    tokenInfoBuilder = null;\n    System.out.println(\"done\");\n    \n    System.out.print(\"building unknown word dict...\");\n    UnknownDictionaryBuilder unkBuilder = new UnknownDictionaryBuilder(encoding);\n    UnknownDictionaryWriter unkDictionary = unkBuilder.build(inputDirname);\n    unkDictionary.write(outputDirname);\n    unkDictionary = null;\n    unkBuilder = null;\n    System.out.println(\"done\");\n    \n    System.out.print(\"building connection costs...\");\n    ConnectionCostsWriter connectionCosts\n      = ConnectionCostsBuilder.build(inputDirname + File.separator + \"matrix.def\");\n    connectionCosts.write(outputDirname);\n    System.out.println(\"done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["98d45c1ff2c99694b6de2201175f9b8b8b27b597"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"98d45c1ff2c99694b6de2201175f9b8b8b27b597":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["98d45c1ff2c99694b6de2201175f9b8b8b27b597"],"98d45c1ff2c99694b6de2201175f9b8b8b27b597":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}