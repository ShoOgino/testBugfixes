{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/MissingOrdRemapper#mapMissingToOrd0(Iterable[Number]).mjava","commits":[{"id":"bb234ee7032610cdfbc59e696f5a68b5ff65d1df","date":1376934709,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/MissingOrdRemapper#mapMissingToOrd0(Iterable[Number]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/MissingOrdRemapper#mapMissingToOrd0(Iterable[Number]).mjava","sourceNew":"  /** remaps ord -1 to ord 0 on this iterable. */\n  public static Iterable<Number> mapMissingToOrd0(final Iterable<Number> iterable) {\n    return new Iterable<Number>() {\n      @Override\n      public Iterator<Number> iterator() {\n        return new Iterator<Number>() {\n          Iterator<Number> in = iterable.iterator();\n          \n          @Override\n          public boolean hasNext() {\n            return in.hasNext();\n          }\n\n          @Override\n          public Number next() {\n            Number n = in.next();\n            if (n.longValue() == -1) {\n              return 0;\n            } else {\n              return n;\n            }\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":"  /** remaps ord -1 to ord 0 on this iterable. */\n  public static Iterable<Number> mapMissingToOrd0(final Iterable<Number> iterable) {\n    return new Iterable<Number>() {\n      @Override\n      public Iterator<Number> iterator() {\n        return new Iterator<Number>() {\n          Iterator<Number> in = iterable.iterator();\n          \n          @Override\n          public boolean hasNext() {\n            return in.hasNext();\n          }\n\n          @Override\n          public Number next() {\n            Number n = in.next();\n            if (n.longValue() == -1) {\n              return 0;\n            } else {\n              return n;\n            }\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/MissingOrdRemapper#mapMissingToOrd0(Iterable[Number]).mjava","pathOld":"/dev/null","sourceNew":"  /** remaps ord -1 to ord 0 on this iterable. */\n  public static Iterable<Number> mapMissingToOrd0(final Iterable<Number> iterable) {\n    return new Iterable<Number>() {\n      @Override\n      public Iterator<Number> iterator() {\n        return new Iterator<Number>() {\n          Iterator<Number> in = iterable.iterator();\n          \n          @Override\n          public boolean hasNext() {\n            return in.hasNext();\n          }\n\n          @Override\n          public Number next() {\n            Number n = in.next();\n            if (n.longValue() == -1) {\n              return 0;\n            } else {\n              return n;\n            }\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/MissingOrdRemapper#mapMissingToOrd0(Iterable[Number]).mjava","pathOld":"/dev/null","sourceNew":"  /** remaps ord -1 to ord 0 on this iterable. */\n  public static Iterable<Number> mapMissingToOrd0(final Iterable<Number> iterable) {\n    return new Iterable<Number>() {\n      @Override\n      public Iterator<Number> iterator() {\n        return new Iterator<Number>() {\n          Iterator<Number> in = iterable.iterator();\n          \n          @Override\n          public boolean hasNext() {\n            return in.hasNext();\n          }\n\n          @Override\n          public Number next() {\n            Number n = in.next();\n            if (n.longValue() == -1) {\n              return 0;\n            } else {\n              return n;\n            }\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb234ee7032610cdfbc59e696f5a68b5ff65d1df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bb234ee7032610cdfbc59e696f5a68b5ff65d1df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"]},"commit2Childs":{"bb234ee7032610cdfbc59e696f5a68b5ff65d1df":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb234ee7032610cdfbc59e696f5a68b5ff65d1df","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}