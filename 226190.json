{"path":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testTrieFieldType().mjava","commits":[{"id":"b9e5be1ddf2a174c0c306a089b858c872d7e1f50","date":1323978951,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testTrieFieldType().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTrieFieldType() throws Exception {\n    try {\n      init(\"solrconfig.xml\", \"schema.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\",           \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\",      \"str_s\", \"b\" ));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\" ));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\",                 \"str_s\", \"x\" ));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\",         \"str_s\", \"y\" ));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\" ));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\" ));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n              ,\"//*[@numFound='3']\"\n              ,\"//result/doc[1]/int[@name='id'][.='7']\"\n              ,\"//result/doc[2]/int[@name='id'][.='8']\"\n              ,\"//result/doc[3]/int[@name='id'][.='9']\",\n              \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n              \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n              \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n              );\n    } finally{\n      delete();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1905b98850d35e230d57c77f3a9b292136159f20","date":1323993698,"type":4,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testTrieFieldType().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testTrieFieldType() throws Exception {\n    try {\n      init(\"solrconfig.xml\", \"schema.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\",           \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\",      \"str_s\", \"b\" ));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\" ));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\",                 \"str_s\", \"x\" ));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\",         \"str_s\", \"y\" ));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\" ));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\" ));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n              ,\"//*[@numFound='3']\"\n              ,\"//result/doc[1]/int[@name='id'][.='7']\"\n              ,\"//result/doc[2]/int[@name='id'][.='8']\"\n              ,\"//result/doc[3]/int[@name='id'][.='9']\",\n              \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n              \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n              \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n              );\n    } finally{\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc1b4a18fa5d9c6036a0a3b5d5ad7ac5bafc4f63","date":1324079472,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testTrieFieldType().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTrieFieldType() throws Exception {\n    try {\n      init(\"schema.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\",           \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\",      \"str_s\", \"b\" ));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\" ));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\",                 \"str_s\", \"x\" ));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\",         \"str_s\", \"y\" ));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\" ));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\" ));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n              ,\"//*[@numFound='3']\"\n              ,\"//result/doc[1]/int[@name='id'][.='7']\"\n              ,\"//result/doc[2]/int[@name='id'][.='8']\"\n              ,\"//result/doc[3]/int[@name='id'][.='9']\",\n              \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n              \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n              \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n              );\n    } finally{\n      delete();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testTrieFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testTrieFieldType().mjava","sourceNew":"  @Test\n  public void testTrieFieldType() throws Exception {\n    try {\n      init(\"schema.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\",           \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\",      \"str_s\", \"b\" ));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\" ));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\",                 \"str_s\", \"x\" ));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\",         \"str_s\", \"y\" ));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\" ));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\" ));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n              ,\"//*[@numFound='3']\"\n              ,\"//result/doc[1]/str[@name='id'][.='7']\"\n              ,\"//result/doc[2]/str[@name='id'][.='8']\"\n              ,\"//result/doc[3]/str[@name='id'][.='9']\",\n              \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n              \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n              \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n              );\n    } finally{\n      delete();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFieldType() throws Exception {\n    try {\n      init(\"schema.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\",           \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\",      \"str_s\", \"b\" ));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\" ));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\",                 \"str_s\", \"x\" ));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\",         \"str_s\", \"y\" ));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\" ));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\" ));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n              ,\"//*[@numFound='3']\"\n              ,\"//result/doc[1]/int[@name='id'][.='7']\"\n              ,\"//result/doc[2]/int[@name='id'][.='8']\"\n              ,\"//result/doc[3]/int[@name='id'][.='9']\",\n              \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n              \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n              \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n              );\n    } finally{\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testTrieFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testTrieFieldType().mjava","sourceNew":"  @Test\n  public void testTrieFieldType() throws Exception {\n    try {\n      init(\"schema.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\",           \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\",      \"str_s\", \"b\" ));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\" ));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\",                 \"str_s\", \"x\" ));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\",         \"str_s\", \"y\" ));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\" ));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\" ));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n              ,\"//*[@numFound='3']\"\n              ,\"//result/doc[1]/str[@name='id'][.='7']\"\n              ,\"//result/doc[2]/str[@name='id'][.='8']\"\n              ,\"//result/doc[3]/str[@name='id'][.='9']\",\n              \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n              \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n              \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n              );\n    } finally{\n      delete();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFieldType() throws Exception {\n    try {\n      init(\"schema.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\",           \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\",      \"str_s\", \"b\" ));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\" ));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\",                 \"str_s\", \"x\" ));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\",         \"str_s\", \"y\" ));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\" ));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\" ));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n              ,\"//*[@numFound='3']\"\n              ,\"//result/doc[1]/int[@name='id'][.='7']\"\n              ,\"//result/doc[2]/int[@name='id'][.='8']\"\n              ,\"//result/doc[3]/int[@name='id'][.='9']\",\n              \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n              \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n              \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n              );\n    } finally{\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testTrieFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testTrieFieldType().mjava","sourceNew":"  @Test\n  public void testTrieFieldType() throws Exception {\n    try {\n      init(\"schema.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\",           \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\",      \"str_s\", \"b\" ));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\" ));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\",                 \"str_s\", \"x\" ));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\",         \"str_s\", \"y\" ));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\" ));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\" ));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n              ,\"//*[@numFound='3']\"\n              ,\"//result/doc[1]/str[@name='id'][.='7']\"\n              ,\"//result/doc[2]/str[@name='id'][.='8']\"\n              ,\"//result/doc[3]/str[@name='id'][.='9']\",\n              \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n              \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n              \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n              );\n    } finally{\n      delete();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testTrieFieldType() throws Exception {\n    try {\n      init(\"schema.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\",           \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\",      \"str_s\", \"b\" ));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\" ));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\",                 \"str_s\", \"x\" ));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\",         \"str_s\", \"y\" ));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\" ));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\" ));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n              ,\"//*[@numFound='3']\"\n              ,\"//result/doc[1]/int[@name='id'][.='7']\"\n              ,\"//result/doc[2]/int[@name='id'][.='8']\"\n              ,\"//result/doc[3]/int[@name='id'][.='9']\",\n              \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n              \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n              \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n              );\n    } finally{\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1905b98850d35e230d57c77f3a9b292136159f20":["b9e5be1ddf2a174c0c306a089b858c872d7e1f50"],"b9e5be1ddf2a174c0c306a089b858c872d7e1f50":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cc1b4a18fa5d9c6036a0a3b5d5ad7ac5bafc4f63":["1905b98850d35e230d57c77f3a9b292136159f20"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a71f63026529f3c1f03cfdd664910873ab2369ae":["cc1b4a18fa5d9c6036a0a3b5d5ad7ac5bafc4f63"],"28288370235ed02234a64753cdbf0c6ec096304a":["cc1b4a18fa5d9c6036a0a3b5d5ad7ac5bafc4f63","a71f63026529f3c1f03cfdd664910873ab2369ae"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["cc1b4a18fa5d9c6036a0a3b5d5ad7ac5bafc4f63","a71f63026529f3c1f03cfdd664910873ab2369ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"1905b98850d35e230d57c77f3a9b292136159f20":["cc1b4a18fa5d9c6036a0a3b5d5ad7ac5bafc4f63"],"b9e5be1ddf2a174c0c306a089b858c872d7e1f50":["1905b98850d35e230d57c77f3a9b292136159f20"],"cc1b4a18fa5d9c6036a0a3b5d5ad7ac5bafc4f63":["a71f63026529f3c1f03cfdd664910873ab2369ae","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b9e5be1ddf2a174c0c306a089b858c872d7e1f50"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}