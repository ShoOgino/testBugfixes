{"path":"lucene/core/src/test/org/apache/lucene/util/TestSparseFixedBitDocIdSet#assertEquals(int,BitSet,BitDocIdSet).mjava","commits":[{"id":"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e","date":1414135939,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestSparseFixedBitDocIdSet#assertEquals(int,BitSet,BitDocIdSet).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestSparseFixedBitSet#assertEquals(int,BitSet,SparseFixedBitDocIdSet).mjava","sourceNew":"  @Override\n  public void assertEquals(int numBits, BitSet ds1, BitDocIdSet ds2) throws IOException {\n    for (int i = 0; i < numBits; ++i) {\n      assertEquals(ds1.get(i), ds2.bits().get(i));\n    }\n    assertEquals(ds1.cardinality(), ds2.bits().cardinality());\n    super.assertEquals(numBits, ds1, ds2);\n  }\n\n","sourceOld":"  @Override\n  public void assertEquals(int numBits, BitSet ds1, SparseFixedBitDocIdSet ds2) throws IOException {\n    for (int i = 0; i < numBits; ++i) {\n      assertEquals(ds1.get(i), ds2.bits().get(i));\n    }\n    assertEquals(ds1.cardinality(), ds2.bits().cardinality());\n    super.assertEquals(numBits, ds1, ds2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}