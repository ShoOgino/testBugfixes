{"path":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","sourceNew":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a78a90fc9701e511308346ea29f4f5e548bb39fe","date":1329489995,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","sourceNew":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setStringValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":["c9ff635e6838a2facda02727dec5b77d9e64dc4c"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","sourceNew":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setStringValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setStringValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","sourceNew":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setStringValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setStringValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":["c9ff635e6838a2facda02727dec5b77d9e64dc4c"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","sourceNew":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setStringValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setStringValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","sourceNew":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setStringValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setStringValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","sourceNew":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setStringValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.shutdown();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setStringValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","sourceNew":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setStringValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setStringValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.shutdown();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6fb5dc223475059e18daa29ecbc9ee827971f72c","date":1424359649,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","sourceNew":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setStringValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(1, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setStringValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":["c9ff635e6838a2facda02727dec5b77d9e64dc4c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9e1499c5d26c936238506df90a3c02c76707722","date":1434449920,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","sourceNew":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setStringValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n\n    PhraseQuery.Builder builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"lyrics\", \"drug\"), 1);\n    builder.add(new Term(\"lyrics\", \"drug\"), 4);\n    PhraseQuery pq = builder.build();\n    // \"drug the drug\"~1\n    assertEquals(1, is.search(pq, 4).totalHits);\n    builder.setSlop(1);\n    pq = builder.build();\n    assertEquals(3, is.search(pq, 4).totalHits);\n    builder.setSlop(2);\n    pq = builder.build();\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setStringValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(1, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","sourceNew":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setStringValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n\n    PhraseQuery.Builder builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"lyrics\", \"drug\"), 1);\n    builder.add(new Term(\"lyrics\", \"drug\"), 4);\n    PhraseQuery pq = builder.build();\n    // \"drug the drug\"~1\n    assertEquals(1, is.search(pq, 4).totalHits.value);\n    builder.setSlop(1);\n    pq = builder.build();\n    assertEquals(3, is.search(pq, 4).totalHits.value);\n    builder.setSlop(2);\n    pq = builder.build();\n    assertEquals(4, is.search(pq, 4).totalHits.value);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setStringValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setStringValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n\n    PhraseQuery.Builder builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"lyrics\", \"drug\"), 1);\n    builder.add(new Term(\"lyrics\", \"drug\"), 4);\n    PhraseQuery pq = builder.build();\n    // \"drug the drug\"~1\n    assertEquals(1, is.search(pq, 4).totalHits);\n    builder.setSlop(1);\n    pq = builder.build();\n    assertEquals(3, is.search(pq, 4).totalHits);\n    builder.setSlop(2);\n    pq = builder.build();\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6fb5dc223475059e18daa29ecbc9ee827971f72c":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a78a90fc9701e511308346ea29f4f5e548bb39fe":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e9e1499c5d26c936238506df90a3c02c76707722":["6fb5dc223475059e18daa29ecbc9ee827971f72c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["e9e1499c5d26c936238506df90a3c02c76707722"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"6fb5dc223475059e18daa29ecbc9ee827971f72c":["e9e1499c5d26c936238506df90a3c02c76707722"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["19275ba31e621f6da1b83bf13af75233876fd3d4","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"a78a90fc9701e511308346ea29f4f5e548bb39fe":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"e9e1499c5d26c936238506df90a3c02c76707722":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["6fb5dc223475059e18daa29ecbc9ee827971f72c"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}