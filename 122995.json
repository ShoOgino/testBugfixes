{"path":"lucene/sandbox/src/test/org/apache/lucene/search/TestDocValuesTermsQuery#testEquals().mjava","commits":[{"id":"9fb0efe75e5c6021561f115dfe334b74786364ba","date":1434366074,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestDocValuesTermsQuery#testEquals().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestDocValuesTermsQuery#testEquals().mjava","sourceNew":"  public void testEquals() {\n    assertEquals(new DocValuesTermsQuery(\"foo\", \"bar\"), new DocValuesTermsQuery(\"foo\", \"bar\"));\n    assertEquals(new DocValuesTermsQuery(\"foo\", \"bar\", \"baz\"), new DocValuesTermsQuery(\"foo\", \"baz\", \"bar\"));\n    assertFalse(new DocValuesTermsQuery(\"foo\", \"bar\").equals(new DocValuesTermsQuery(\"foo2\", \"bar\")));\n    assertFalse(new DocValuesTermsQuery(\"foo\", \"bar\").equals(new DocValuesTermsQuery(\"foo\", \"baz\")));\n  }\n\n","sourceOld":"  public void testEquals() {\n    assertEquals(new DocValuesTermsQuery(\"foo\", \"bar\"), new DocValuesTermsQuery(\"foo\", \"bar\"));\n    assertEquals(new DocValuesTermsQuery(\"foo\", \"bar\", \"baz\"), new DocValuesTermsQuery(\"foo\", \"baz\", \"bar\"));\n    assertFalse(new DocValuesTermsQuery(\"foo\", \"bar\").equals(new DocValuesTermsQuery(\"foo2\", \"bar\")));\n    assertFalse(new DocValuesTermsQuery(\"foo\", \"bar\").equals(new DocValuesTermsQuery(\"foo\", \"baz\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b2b4edc1ab85940153f1b5a0eeb7ee6f4f4bafb","date":1481818674,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestDocValuesTermsQuery#testEquals().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestDocValuesTermsQuery#testEquals().mjava","sourceNew":"  public void testEquals() {\n    assertEquals(new DocValuesTermsQuery(\"foo\", \"bar\"), new DocValuesTermsQuery(\"foo\", \"bar\"));\n    assertEquals(new DocValuesTermsQuery(\"foo\", \"bar\"), new DocValuesTermsQuery(\"foo\", \"bar\", \"bar\"));\n    assertEquals(new DocValuesTermsQuery(\"foo\", \"bar\", \"baz\"), new DocValuesTermsQuery(\"foo\", \"baz\", \"bar\"));\n    assertFalse(new DocValuesTermsQuery(\"foo\", \"bar\").equals(new DocValuesTermsQuery(\"foo2\", \"bar\")));\n    assertFalse(new DocValuesTermsQuery(\"foo\", \"bar\").equals(new DocValuesTermsQuery(\"foo\", \"baz\")));\n  }\n\n","sourceOld":"  public void testEquals() {\n    assertEquals(new DocValuesTermsQuery(\"foo\", \"bar\"), new DocValuesTermsQuery(\"foo\", \"bar\"));\n    assertEquals(new DocValuesTermsQuery(\"foo\", \"bar\", \"baz\"), new DocValuesTermsQuery(\"foo\", \"baz\", \"bar\"));\n    assertFalse(new DocValuesTermsQuery(\"foo\", \"bar\").equals(new DocValuesTermsQuery(\"foo2\", \"bar\")));\n    assertFalse(new DocValuesTermsQuery(\"foo\", \"bar\").equals(new DocValuesTermsQuery(\"foo\", \"baz\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestDocValuesTermsQuery#testEquals().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestDocValuesTermsQuery#testEquals().mjava","sourceNew":"  public void testEquals() {\n    assertEquals(new DocValuesTermsQuery(\"foo\", \"bar\"), new DocValuesTermsQuery(\"foo\", \"bar\"));\n    assertEquals(new DocValuesTermsQuery(\"foo\", \"bar\"), new DocValuesTermsQuery(\"foo\", \"bar\", \"bar\"));\n    assertEquals(new DocValuesTermsQuery(\"foo\", \"bar\", \"baz\"), new DocValuesTermsQuery(\"foo\", \"baz\", \"bar\"));\n    assertFalse(new DocValuesTermsQuery(\"foo\", \"bar\").equals(new DocValuesTermsQuery(\"foo2\", \"bar\")));\n    assertFalse(new DocValuesTermsQuery(\"foo\", \"bar\").equals(new DocValuesTermsQuery(\"foo\", \"baz\")));\n  }\n\n","sourceOld":"  public void testEquals() {\n    assertEquals(new DocValuesTermsQuery(\"foo\", \"bar\"), new DocValuesTermsQuery(\"foo\", \"bar\"));\n    assertEquals(new DocValuesTermsQuery(\"foo\", \"bar\", \"baz\"), new DocValuesTermsQuery(\"foo\", \"baz\", \"bar\"));\n    assertFalse(new DocValuesTermsQuery(\"foo\", \"bar\").equals(new DocValuesTermsQuery(\"foo2\", \"bar\")));\n    assertFalse(new DocValuesTermsQuery(\"foo\", \"bar\").equals(new DocValuesTermsQuery(\"foo\", \"baz\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6b2b4edc1ab85940153f1b5a0eeb7ee6f4f4bafb":["9fb0efe75e5c6021561f115dfe334b74786364ba"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9fb0efe75e5c6021561f115dfe334b74786364ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9856095f7afb5a607bf5e65077615ed91273508c":["9fb0efe75e5c6021561f115dfe334b74786364ba","6b2b4edc1ab85940153f1b5a0eeb7ee6f4f4bafb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6b2b4edc1ab85940153f1b5a0eeb7ee6f4f4bafb"]},"commit2Childs":{"6b2b4edc1ab85940153f1b5a0eeb7ee6f4f4bafb":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fb0efe75e5c6021561f115dfe334b74786364ba"],"9fb0efe75e5c6021561f115dfe334b74786364ba":["6b2b4edc1ab85940153f1b5a0eeb7ee6f4f4bafb","9856095f7afb5a607bf5e65077615ed91273508c"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}