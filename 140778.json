{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Temp40PostingsWriter#setField(FieldInfo).mjava","commits":[{"id":"38f154048324ef4d19e56e818d0621cafb4fd453","date":1377246558,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Temp40PostingsWriter#setField(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  // Currently, this instance is re-used across fields, so\n  // our parent calls setField whenever the field changes\n  @Override\n  public int setField(FieldInfo fieldInfo) {\n    //System.out.println(\"SPW: setField\");\n    /*\n    if (BlockTreeTermsWriter.DEBUG && fieldInfo.name.equals(\"id\")) {\n      DEBUG = true;\n    } else {\n      DEBUG = false;\n    }\n    */\n    this.fieldInfo = fieldInfo;\n    indexOptions = fieldInfo.getIndexOptions();\n    \n    storeOffsets = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;        \n    storePayloads = fieldInfo.hasPayloads();\n    lastState = emptyState;\n    //System.out.println(\"  set init blockFreqStart=\" + freqStart);\n    //System.out.println(\"  set init blockProxStart=\" + proxStart);\n    return 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Temp40PostingsWriter#setField(FieldInfo).mjava","sourceNew":null,"sourceOld":"  // Currently, this instance is re-used across fields, so\n  // our parent calls setField whenever the field changes\n  @Override\n  public int setField(FieldInfo fieldInfo) {\n    //System.out.println(\"SPW: setField\");\n    /*\n    if (BlockTreeTermsWriter.DEBUG && fieldInfo.name.equals(\"id\")) {\n      DEBUG = true;\n    } else {\n      DEBUG = false;\n    }\n    */\n    this.fieldInfo = fieldInfo;\n    indexOptions = fieldInfo.getIndexOptions();\n    \n    storeOffsets = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;        \n    storePayloads = fieldInfo.hasPayloads();\n    lastState = emptyState;\n    //System.out.println(\"  set init blockFreqStart=\" + freqStart);\n    //System.out.println(\"  set init blockProxStart=\" + proxStart);\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38f154048324ef4d19e56e818d0621cafb4fd453":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["38f154048324ef4d19e56e818d0621cafb4fd453"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"38f154048324ef4d19e56e818d0621cafb4fd453":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38f154048324ef4d19e56e818d0621cafb4fd453","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}