{"path":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/utils/TestSimpleObjectPool#testAquire().mjava","commits":[{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/utils/TestSimpleObjectPool#testAquire().mjava","pathOld":"contrib/gdata-server/src/test/org/apache/lucene/gdata/utils/TestSimpleObjectPool#testAquire().mjava","sourceNew":"    /*\n     * Test method for 'org.apache.lucene.gdata.utils.SimpleObjectPool.aquire()'\n     */\n    public void testAquire() {\n        List l = new ArrayList(SIZE);\n        for (int i = 0; i < SIZE; i++) {\n            Object o = this.testPool.aquire();\n            assertNotNull(o);\n            assertFalse(l.contains(o));\n            l.add(o);\n            \n        }\n        for (Object object : l) {\n            this.testPool.release(object);\n        }\n        for (int i = 0; i < SIZE; i++) {\n            Object o = this.testPool.aquire();\n            assertNotNull(o);\n            assertTrue(l.contains(o));\n         \n            \n        }\n        \n    }\n\n","sourceOld":"    /*\n     * Test method for 'org.apache.lucene.gdata.utils.SimpleObjectPool.aquire()'\n     */\n    public void testAquire() {\n        List l = new ArrayList(SIZE);\n        for (int i = 0; i < SIZE; i++) {\n            Object o = this.testPool.aquire();\n            assertNotNull(o);\n            assertFalse(l.contains(o));\n            l.add(o);\n            \n        }\n        for (Object object : l) {\n            this.testPool.release(object);\n        }\n        for (int i = 0; i < SIZE; i++) {\n            Object o = this.testPool.aquire();\n            assertNotNull(o);\n            assertTrue(l.contains(o));\n         \n            \n        }\n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/utils/TestSimpleObjectPool#testAquire().mjava","pathOld":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/utils/TestSimpleObjectPool#testAquire().mjava","sourceNew":"    /*\n     * Test method for 'org.apache.lucene.gdata.utils.SimpleObjectPool.aquire()'\n     */\n    public void testAquire() {\n        List l = new ArrayList(SIZE);\n        for (int i = 0; i < SIZE; i++) {\n            Object o = this.testPool.aquire();\n            assertNotNull(o);\n            assertFalse(l.contains(o));\n            l.add(o);\n            \n        }\n        for (Object object : l) {\n            this.testPool.release(object);\n        }\n        for (int i = 0; i < SIZE; i++) {\n            Object o = this.testPool.aquire();\n            assertNotNull(o);\n            assertTrue(l.contains(o));\n         \n            \n        }\n        \n    }\n\n","sourceOld":"    /*\n     * Test method for 'org.apache.lucene.gdata.utils.SimpleObjectPool.aquire()'\n     */\n    public void testAquire() {\n        List l = new ArrayList(SIZE);\n        for (int i = 0; i < SIZE; i++) {\n            Object o = this.testPool.aquire();\n            assertNotNull(o);\n            assertFalse(l.contains(o));\n            l.add(o);\n            \n        }\n        for (Object object : l) {\n            this.testPool.release(object);\n        }\n        for (int i = 0; i < SIZE; i++) {\n            Object o = this.testPool.aquire();\n            assertNotNull(o);\n            assertTrue(l.contains(o));\n         \n            \n        }\n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}