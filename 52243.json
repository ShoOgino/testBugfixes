{"path":"src/java/org/apache/lucene/analysis/Token#termText().mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#termText().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the Token's term text. */\n  public final String termText() { return termText; }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6864413dbc0c12104c978c05456f3da1d45adb03","date":1186770873,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#termText().mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#termText().mjava","sourceNew":"  /** Returns the Token's term text.\n   * \n   * @deprecated Use {@link #termBuffer()} and {@link\n   * #termLength()} instead. */\n  public final String termText() {\n    if (termText == null && termBuffer != null)\n      termText = new String(termBuffer, 0, termLength);\n    return termText;\n  }\n\n","sourceOld":"  /** Returns the Token's term text. */\n  public final String termText() { return termText; }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0eaa92bed9a03eab90a8ecd63ab0d80042296159","date":1206434151,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#termText().mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#termText().mjava","sourceNew":"  /** Returns the Token's term text.\n   * \n   * @deprecated This method now has a performance penalty\n   * because the text is stored internally in a char[].  If\n   * possible, use {@link #termBuffer()} and {@link\n   * #termLength()} directly instead.  If you really need a\n   * String, use <b>new String(token.termBuffer(), 0, token.termLength())</b>\n   */\n  public final String termText() {\n    if (termText == null && termBuffer != null)\n      termText = new String(termBuffer, 0, termLength);\n    return termText;\n  }\n\n","sourceOld":"  /** Returns the Token's term text.\n   * \n   * @deprecated Use {@link #termBuffer()} and {@link\n   * #termLength()} instead. */\n  public final String termText() {\n    if (termText == null && termBuffer != null)\n      termText = new String(termBuffer, 0, termLength);\n    return termText;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2cb543b41c145f33390f460ee743d6693c9c6c","date":1219243087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/Token#termText().mjava","pathOld":"src/java/org/apache/lucene/analysis/Token#termText().mjava","sourceNew":"  /** Returns the Token's term text.\n   * \n   * @deprecated This method now has a performance penalty\n   * because the text is stored internally in a char[].  If\n   * possible, use {@link #termBuffer()} and {@link\n   * #termLength()} directly instead.  If you really need a\n   * String, use {@link #term()}</b>\n   */\n  public final String termText() {\n    if (termText == null && termBuffer != null)\n      termText = new String(termBuffer, 0, termLength);\n    return termText;\n  }\n\n","sourceOld":"  /** Returns the Token's term text.\n   * \n   * @deprecated This method now has a performance penalty\n   * because the text is stored internally in a char[].  If\n   * possible, use {@link #termBuffer()} and {@link\n   * #termLength()} directly instead.  If you really need a\n   * String, use <b>new String(token.termBuffer(), 0, token.termLength())</b>\n   */\n  public final String termText() {\n    if (termText == null && termBuffer != null)\n      termText = new String(termBuffer, 0, termLength);\n    return termText;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64af8690a948c97feaa9e2844a0c7051034f153d","date":1255862276,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/Token#termText().mjava","sourceNew":null,"sourceOld":"  /** Returns the Token's term text.\n   * \n   * @deprecated This method now has a performance penalty\n   * because the text is stored internally in a char[].  If\n   * possible, use {@link #termBuffer()} and {@link\n   * #termLength()} directly instead.  If you really need a\n   * String, use {@link #term()}</b>\n   */\n  public final String termText() {\n    if (termText == null && termBuffer != null)\n      termText = new String(termBuffer, 0, termLength);\n    return termText;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["0eaa92bed9a03eab90a8ecd63ab0d80042296159"],"6864413dbc0c12104c978c05456f3da1d45adb03":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"64af8690a948c97feaa9e2844a0c7051034f153d":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0eaa92bed9a03eab90a8ecd63ab0d80042296159":["6864413dbc0c12104c978c05456f3da1d45adb03"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["64af8690a948c97feaa9e2844a0c7051034f153d"]},"commit2Childs":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["64af8690a948c97feaa9e2844a0c7051034f153d"],"6864413dbc0c12104c978c05456f3da1d45adb03":["0eaa92bed9a03eab90a8ecd63ab0d80042296159"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["6864413dbc0c12104c978c05456f3da1d45adb03"],"64af8690a948c97feaa9e2844a0c7051034f153d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"0eaa92bed9a03eab90a8ecd63ab0d80042296159":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}