{"path":"solr/core/src/java/org/apache/solr/util/CryptoKeys#CryptoKeys(Map[String,byte[]]).mjava","commits":[{"id":"b4d01dd8bb594fcd007a358009375967f9333d0a","date":1425496373,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/CryptoKeys#CryptoKeys(Map[String,byte[]]).mjava","pathOld":"/dev/null","sourceNew":"  public CryptoKeys(Map<String, byte[]> trustedKeys) throws Exception {\n    HashMap<String, PublicKey> m = new HashMap<>();\n    for (Map.Entry<String, byte[]> e : trustedKeys.entrySet()) {\n      m.put(e.getKey(), getX509PublicKey(e.getValue()));\n\n    }\n    this.keys = m;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/CryptoKeys#CryptoKeys(Map[String,byte[]]).mjava","pathOld":"/dev/null","sourceNew":"  public CryptoKeys(Map<String, byte[]> trustedKeys) throws Exception {\n    HashMap<String, PublicKey> m = new HashMap<>();\n    for (Map.Entry<String, byte[]> e : trustedKeys.entrySet()) {\n      m.put(e.getKey(), getX509PublicKey(e.getValue()));\n\n    }\n    this.keys = m;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8476949555f799dff381770c01cfad051a264487","date":1570505073,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/CryptoKeys#CryptoKeys(Map[String,byte[]]).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/CryptoKeys#CryptoKeys(Map[String,byte[]]).mjava","sourceNew":"  public CryptoKeys(Map<String, byte[]> trustedKeys) throws Exception {\n    HashMap<String, PublicKey> m = new HashMap<>();\n    for (Map.Entry<String, byte[]> e : trustedKeys.entrySet()) {\n      m.put(e.getKey(), getX509PublicKey(e.getValue()));\n\n    }\n    this.keys = ImmutableMap.copyOf(m);\n  }\n\n","sourceOld":"  public CryptoKeys(Map<String, byte[]> trustedKeys) throws Exception {\n    HashMap<String, PublicKey> m = new HashMap<>();\n    for (Map.Entry<String, byte[]> e : trustedKeys.entrySet()) {\n      m.put(e.getKey(), getX509PublicKey(e.getValue()));\n\n    }\n    this.keys = m;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/CryptoKeys#CryptoKeys(Map[String,byte[]]).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/CryptoKeys#CryptoKeys(Map[String,byte[]]).mjava","sourceNew":"  public CryptoKeys(Map<String, byte[]> trustedKeys) throws Exception {\n    HashMap<String, PublicKey> m = new HashMap<>();\n    for (Map.Entry<String, byte[]> e : trustedKeys.entrySet()) {\n      m.put(e.getKey(), getX509PublicKey(e.getValue()));\n\n    }\n    this.keys = ImmutableMap.copyOf(m);\n  }\n\n","sourceOld":"  public CryptoKeys(Map<String, byte[]> trustedKeys) throws Exception {\n    HashMap<String, PublicKey> m = new HashMap<>();\n    for (Map.Entry<String, byte[]> e : trustedKeys.entrySet()) {\n      m.put(e.getKey(), getX509PublicKey(e.getValue()));\n\n    }\n    this.keys = m;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b4d01dd8bb594fcd007a358009375967f9333d0a"],"b4d01dd8bb594fcd007a358009375967f9333d0a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8476949555f799dff381770c01cfad051a264487":["b4d01dd8bb594fcd007a358009375967f9333d0a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8476949555f799dff381770c01cfad051a264487"],"b0b597c65628ca9e73913a07e81691f8229bae35":["b4d01dd8bb594fcd007a358009375967f9333d0a","8476949555f799dff381770c01cfad051a264487"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b4d01dd8bb594fcd007a358009375967f9333d0a":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","8476949555f799dff381770c01cfad051a264487","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b4d01dd8bb594fcd007a358009375967f9333d0a"],"8476949555f799dff381770c01cfad051a264487":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}