{"path":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/KoreanTokenizer#KoreanTokenizer(AttributeFactory,TokenInfoDictionary,UnknownDictionary,ConnectionCosts,UserDictionary,DecompoundMode,boolean,boolean).mjava","commits":[{"id":"dc0cab5c9c89e5632387d6c500fc935f0851403b","date":1583169104,"type":0,"author":"Namgyu Kim","isMerge":false,"pathNew":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/KoreanTokenizer#KoreanTokenizer(AttributeFactory,TokenInfoDictionary,UnknownDictionary,ConnectionCosts,UserDictionary,DecompoundMode,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * <p>Create a new KoreanTokenizer supplying a custom system dictionary and unknown dictionary.\n   * This constructor provides an entry point for users that want to construct custom language models\n   * that can be used as input to {@link org.apache.lucene.analysis.ko.util.DictionaryBuilder}.</p>\n   *\n   * @param factory the AttributeFactory to use\n   * @param systemDictionary a custom known token dictionary\n   * @param unkDictionary a custom unknown token dictionary\n   * @param connectionCosts custom token transition costs\n   * @param userDictionary Optional: if non-null, user dictionary.\n   * @param mode Decompound mode.\n   * @param outputUnknownUnigrams if true outputs unigrams for unknown words.\n   * @param discardPunctuation true if punctuation tokens should be dropped from the output.\n   * @lucene.experimental\n   */\n  public KoreanTokenizer(AttributeFactory factory,\n                         TokenInfoDictionary systemDictionary,\n                         UnknownDictionary unkDictionary,\n                         ConnectionCosts connectionCosts,\n                         UserDictionary userDictionary,\n                         DecompoundMode mode,\n                         boolean outputUnknownUnigrams,\n                         boolean discardPunctuation) {\n    super(factory);\n    this.dictionary = systemDictionary;\n    this.fst = dictionary.getFST();\n    this.unkDictionary = unkDictionary;\n    this.characterDefinition = unkDictionary.getCharacterDefinition();\n    this.costs = connectionCosts;\n    this.userDictionary = userDictionary;\n    fstReader = fst.getBytesReader();\n    if (userDictionary != null) {\n      userFST = userDictionary.getFST();\n      userFSTReader = userFST.getBytesReader();\n    } else {\n      userFST = null;\n      userFSTReader = null;\n    }\n    this.mode = mode;\n    this.outputUnknownUnigrams = outputUnknownUnigrams;\n    this.discardPunctuation = discardPunctuation;\n    buffer.reset(this.input);\n\n    resetState();\n\n    dictionaryMap.put(Type.KNOWN, dictionary);\n    dictionaryMap.put(Type.UNKNOWN, unkDictionary);\n    dictionaryMap.put(Type.USER, userDictionary);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dc0cab5c9c89e5632387d6c500fc935f0851403b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dc0cab5c9c89e5632387d6c500fc935f0851403b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dc0cab5c9c89e5632387d6c500fc935f0851403b"],"dc0cab5c9c89e5632387d6c500fc935f0851403b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}