{"path":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#testAggErrors().mjava","commits":[{"id":"43043880eedeac03eab1ed83c32efc3866ae0c6b","date":1584508617,"type":0,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#testAggErrors().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testAggErrors() {\n    ignoreException(\"aggregation\");\n\n    SolrException e = expectThrows(SolrException.class, () -> {\n      h.query(req(\"q\", \"*:*\", \"json.facet\", \"{bleh:'div(2,4)'}\"));\n    });\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertThat(e.getMessage(),\n        containsString(\"Expected multi-doc aggregation from 'div' but got per-doc function in input ('div(2,4)\"));\n\n    e = expectThrows(SolrException.class, () -> {\n      h.query(req(\"q\", \"*:*\", \"json.facet\", \"{b:'agg(div(2,4))'}\"));\n    });\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertThat(e.getMessage(),\n        containsString(\"Expected multi-doc aggregation from 'div' but got per-doc function in input ('agg(div(2,4))\"));\n\n    e = expectThrows(SolrException.class, () -> {\n      h.query(req(\"q\", \"*:*\", \"json.facet\", \"{b:'agg(bleh(2,4))'}\"));\n    });\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertThat(e.getMessage(),\n        containsString(\"Unknown aggregation 'bleh' in input ('agg(bleh(2,4))\"));\n\n    e = expectThrows(SolrException.class, () -> {\n      h.query(req(\"q\", \"*:*\", \"json.facet\", \"{b:'bleh(2,4)'}\"));\n    });\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertThat(e.getMessage(),\n        containsString(\"Unknown aggregation 'bleh' in input ('bleh(2,4)\"));\n\n    resetExceptionIgnores();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a067727e528e9edadcd1704b7a3a10912e5d95c1","date":1584973258,"type":5,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacetErrors#testAggErrors().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#testAggErrors().mjava","sourceNew":"  @Test\n  public void testAggErrors() {\n    ignoreException(\"aggregation\");\n\n    SolrException e = expectThrows(SolrException.class, () -> {\n      h.query(req(\"q\", \"*:*\", \"json.facet\", \"{bleh:'div(2,4)'}\"));\n    });\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertThat(e.getMessage(),\n        containsString(\"Expected multi-doc aggregation from 'div' but got per-doc function in input ('div(2,4)\"));\n\n    e = expectThrows(SolrException.class, () -> {\n      h.query(req(\"q\", \"*:*\", \"json.facet\", \"{b:'agg(div(2,4))'}\"));\n    });\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertThat(e.getMessage(),\n        containsString(\"Expected multi-doc aggregation from 'div' but got per-doc function in input ('agg(div(2,4))\"));\n\n    e = expectThrows(SolrException.class, () -> {\n      h.query(req(\"q\", \"*:*\", \"json.facet\", \"{b:'agg(bleh(2,4))'}\"));\n    });\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertThat(e.getMessage(),\n        containsString(\"Unknown aggregation 'bleh' in input ('agg(bleh(2,4))\"));\n\n    e = expectThrows(SolrException.class, () -> {\n      h.query(req(\"q\", \"*:*\", \"json.facet\", \"{b:'bleh(2,4)'}\"));\n    });\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertThat(e.getMessage(),\n        containsString(\"Unknown aggregation 'bleh' in input ('bleh(2,4)\"));\n\n    resetExceptionIgnores();\n  }\n\n","sourceOld":"  @Test\n  public void testAggErrors() {\n    ignoreException(\"aggregation\");\n\n    SolrException e = expectThrows(SolrException.class, () -> {\n      h.query(req(\"q\", \"*:*\", \"json.facet\", \"{bleh:'div(2,4)'}\"));\n    });\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertThat(e.getMessage(),\n        containsString(\"Expected multi-doc aggregation from 'div' but got per-doc function in input ('div(2,4)\"));\n\n    e = expectThrows(SolrException.class, () -> {\n      h.query(req(\"q\", \"*:*\", \"json.facet\", \"{b:'agg(div(2,4))'}\"));\n    });\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertThat(e.getMessage(),\n        containsString(\"Expected multi-doc aggregation from 'div' but got per-doc function in input ('agg(div(2,4))\"));\n\n    e = expectThrows(SolrException.class, () -> {\n      h.query(req(\"q\", \"*:*\", \"json.facet\", \"{b:'agg(bleh(2,4))'}\"));\n    });\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertThat(e.getMessage(),\n        containsString(\"Unknown aggregation 'bleh' in input ('agg(bleh(2,4))\"));\n\n    e = expectThrows(SolrException.class, () -> {\n      h.query(req(\"q\", \"*:*\", \"json.facet\", \"{b:'bleh(2,4)'}\"));\n    });\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n    assertThat(e.getMessage(),\n        containsString(\"Unknown aggregation 'bleh' in input ('bleh(2,4)\"));\n\n    resetExceptionIgnores();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"43043880eedeac03eab1ed83c32efc3866ae0c6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a067727e528e9edadcd1704b7a3a10912e5d95c1":["43043880eedeac03eab1ed83c32efc3866ae0c6b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a067727e528e9edadcd1704b7a3a10912e5d95c1"]},"commit2Childs":{"43043880eedeac03eab1ed83c32efc3866ae0c6b":["a067727e528e9edadcd1704b7a3a10912e5d95c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["43043880eedeac03eab1ed83c32efc3866ae0c6b"],"a067727e528e9edadcd1704b7a3a10912e5d95c1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}