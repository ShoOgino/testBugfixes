{"path":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Return a fragmenter appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default (GapFragmenter).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate Fragmenter.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","sourceNew":null,"sourceOld":"  /**\n   * Return a fragmenter appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default (GapFragmenter).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate Fragmenter.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","pathOld":"src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","sourceNew":"  /**\n   * Return a fragmenter appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default (GapFragmenter).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate Fragmenter.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","sourceOld":"  /**\n   * Return a fragmenter appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default (GapFragmenter).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate Fragmenter.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Return a fragmenter appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default (GapFragmenter).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate Fragmenter.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6caa0b9d023d447590aa7470d671d277a336508f","date":1280761482,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","sourceNew":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Fragmenter} appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default ({@link org.apache.lucene.search.highlight.GapFragmenter}).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate {@link org.apache.lucene.search.highlight.Fragmenter}.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","sourceOld":"  /**\n   * Return a fragmenter appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default (GapFragmenter).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate Fragmenter.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","sourceNew":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Fragmenter} appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default ({@link org.apache.lucene.search.highlight.GapFragmenter}).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate {@link org.apache.lucene.search.highlight.Fragmenter}.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","sourceOld":"  /**\n   * Return a fragmenter appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default (GapFragmenter).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate Fragmenter.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0b88f0b36bd2cfc8758e8eabcf4def83da1091e","date":1306492698,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","sourceNew":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Fragmenter} appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default ({@link GapFragmenter}).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate {@link org.apache.lucene.search.highlight.Fragmenter}.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","sourceOld":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Fragmenter} appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default ({@link org.apache.lucene.search.highlight.GapFragmenter}).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate {@link org.apache.lucene.search.highlight.Fragmenter}.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","sourceNew":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Fragmenter} appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default ({@link GapFragmenter}).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate {@link org.apache.lucene.search.highlight.Fragmenter}.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","sourceOld":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Fragmenter} appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default ({@link org.apache.lucene.search.highlight.GapFragmenter}).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate {@link org.apache.lucene.search.highlight.Fragmenter}.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a78df532d491644e240b0622ba69dd88c1ad44f","date":1306777120,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","sourceNew":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Fragmenter} appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default ({@link GapFragmenter}).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate {@link org.apache.lucene.search.highlight.Fragmenter}.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","sourceOld":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Fragmenter} appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default ({@link org.apache.lucene.search.highlight.GapFragmenter}).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate {@link org.apache.lucene.search.highlight.Fragmenter}.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","sourceNew":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Fragmenter} appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default ({@link GapFragmenter}).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate {@link org.apache.lucene.search.highlight.Fragmenter}.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","sourceOld":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Fragmenter} appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default ({@link GapFragmenter}).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate {@link org.apache.lucene.search.highlight.Fragmenter}.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","sourceNew":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Fragmenter} appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default ({@link GapFragmenter}).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate {@link org.apache.lucene.search.highlight.Fragmenter}.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","sourceOld":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Fragmenter} appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default ({@link GapFragmenter}).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate {@link org.apache.lucene.search.highlight.Fragmenter}.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#getFragmenter(String,SolrParams).mjava","sourceNew":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Fragmenter} appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default ({@link GapFragmenter}).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate {@link org.apache.lucene.search.highlight.Fragmenter}.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","sourceOld":"  /**\n   * Return a {@link org.apache.lucene.search.highlight.Fragmenter} appropriate for this field. If a fragmenter\n   * has not been configured for this field, fall back to the configured\n   * default or the solr default ({@link GapFragmenter}).\n   * \n   * @param fieldName The name of the field\n   * @param params The params controlling Highlighting\n   * @return An appropriate {@link org.apache.lucene.search.highlight.Fragmenter}.\n   */\n  protected Fragmenter getFragmenter(String fieldName, SolrParams params) \n  {\n    String fmt = params.getFieldParam( fieldName, HighlightParams.FRAGMENTER );\n    SolrFragmenter frag = fragmenters.get( fmt );\n    if( frag == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unknown fragmenter: \"+fmt );\n    }\n    return frag.getFragmenter( fieldName, params );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"6caa0b9d023d447590aa7470d671d277a336508f":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["d0b88f0b36bd2cfc8758e8eabcf4def83da1091e","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1da8d55113b689b06716246649de6f62430f15c0","6caa0b9d023d447590aa7470d671d277a336508f"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["6caa0b9d023d447590aa7470d671d277a336508f","d0b88f0b36bd2cfc8758e8eabcf4def83da1091e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["d0b88f0b36bd2cfc8758e8eabcf4def83da1091e"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"d0b88f0b36bd2cfc8758e8eabcf4def83da1091e":["6caa0b9d023d447590aa7470d671d277a336508f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"],"8a78df532d491644e240b0622ba69dd88c1ad44f":["6caa0b9d023d447590aa7470d671d277a336508f"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"6caa0b9d023d447590aa7470d671d277a336508f":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","d0b88f0b36bd2cfc8758e8eabcf4def83da1091e","8a78df532d491644e240b0622ba69dd88c1ad44f"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"1da8d55113b689b06716246649de6f62430f15c0":["6caa0b9d023d447590aa7470d671d277a336508f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"d0b88f0b36bd2cfc8758e8eabcf4def83da1091e":["c26f00b574427b55127e869b935845554afde1fa","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","a258fbb26824fd104ed795e5d9033d2d040049ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8a78df532d491644e240b0622ba69dd88c1ad44f":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817","8a78df532d491644e240b0622ba69dd88c1ad44f"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}