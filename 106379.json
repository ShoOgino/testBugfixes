{"path":"lucene/src/java/org/apache/lucene/util/UnicodeUtil#validUTF16String(char[],int).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/UnicodeUtil#validUTF16String(char[],int).mjava","pathOld":"/dev/null","sourceNew":"  public static final boolean validUTF16String(char[] s, int size) {\n    for(int i=0;i<size;i++) {\n      char ch = s[i];\n      if (ch >= UNI_SUR_HIGH_START && ch <= UNI_SUR_HIGH_END) {\n        if (i < size-1) {\n          i++;\n          char nextCH = s[i];\n          if (nextCH >= UNI_SUR_LOW_START && nextCH <= UNI_SUR_LOW_END) {\n            // Valid surrogate pair\n          } else\n            return false;\n        } else\n          return false;\n      } else if (ch >= UNI_SUR_LOW_START && ch <= UNI_SUR_LOW_END)\n        // Unmatched low surrogate\n        return false;\n    }\n\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08932c793647a36953d1816b1060121f48820d3f","date":1277386540,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/UnicodeUtil#validUTF16String(char[],int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/UnicodeUtil#validUTF16String(char[],int).mjava","sourceNew":"  public static boolean validUTF16String(char[] s, int size) {\n    for(int i=0;i<size;i++) {\n      char ch = s[i];\n      if (ch >= UNI_SUR_HIGH_START && ch <= UNI_SUR_HIGH_END) {\n        if (i < size-1) {\n          i++;\n          char nextCH = s[i];\n          if (nextCH >= UNI_SUR_LOW_START && nextCH <= UNI_SUR_LOW_END) {\n            // Valid surrogate pair\n          } else\n            return false;\n        } else\n          return false;\n      } else if (ch >= UNI_SUR_LOW_START && ch <= UNI_SUR_LOW_END)\n        // Unmatched low surrogate\n        return false;\n    }\n\n    return true;\n  }\n\n","sourceOld":"  public static final boolean validUTF16String(char[] s, int size) {\n    for(int i=0;i<size;i++) {\n      char ch = s[i];\n      if (ch >= UNI_SUR_HIGH_START && ch <= UNI_SUR_HIGH_END) {\n        if (i < size-1) {\n          i++;\n          char nextCH = s[i];\n          if (nextCH >= UNI_SUR_LOW_START && nextCH <= UNI_SUR_LOW_END) {\n            // Valid surrogate pair\n          } else\n            return false;\n        } else\n          return false;\n      } else if (ch >= UNI_SUR_LOW_START && ch <= UNI_SUR_LOW_END)\n        // Unmatched low surrogate\n        return false;\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/UnicodeUtil#validUTF16String(char[],int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/UnicodeUtil#validUTF16String(char[],int).mjava","sourceNew":"  public static boolean validUTF16String(char[] s, int size) {\n    for(int i=0;i<size;i++) {\n      char ch = s[i];\n      if (ch >= UNI_SUR_HIGH_START && ch <= UNI_SUR_HIGH_END) {\n        if (i < size-1) {\n          i++;\n          char nextCH = s[i];\n          if (nextCH >= UNI_SUR_LOW_START && nextCH <= UNI_SUR_LOW_END) {\n            // Valid surrogate pair\n          } else\n            return false;\n        } else\n          return false;\n      } else if (ch >= UNI_SUR_LOW_START && ch <= UNI_SUR_LOW_END)\n        // Unmatched low surrogate\n        return false;\n    }\n\n    return true;\n  }\n\n","sourceOld":"  public static final boolean validUTF16String(char[] s, int size) {\n    for(int i=0;i<size;i++) {\n      char ch = s[i];\n      if (ch >= UNI_SUR_HIGH_START && ch <= UNI_SUR_HIGH_END) {\n        if (i < size-1) {\n          i++;\n          char nextCH = s[i];\n          if (nextCH >= UNI_SUR_LOW_START && nextCH <= UNI_SUR_LOW_END) {\n            // Valid surrogate pair\n          } else\n            return false;\n        } else\n          return false;\n      } else if (ch >= UNI_SUR_LOW_START && ch <= UNI_SUR_LOW_END)\n        // Unmatched low surrogate\n        return false;\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/UnicodeUtil#validUTF16String(char[],int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/UnicodeUtil#validUTF16String(char[],int).mjava","sourceNew":"  public static boolean validUTF16String(char[] s, int size) {\n    for(int i=0;i<size;i++) {\n      char ch = s[i];\n      if (ch >= UNI_SUR_HIGH_START && ch <= UNI_SUR_HIGH_END) {\n        if (i < size-1) {\n          i++;\n          char nextCH = s[i];\n          if (nextCH >= UNI_SUR_LOW_START && nextCH <= UNI_SUR_LOW_END) {\n            // Valid surrogate pair\n          } else\n            return false;\n        } else\n          return false;\n      } else if (ch >= UNI_SUR_LOW_START && ch <= UNI_SUR_LOW_END)\n        // Unmatched low surrogate\n        return false;\n    }\n\n    return true;\n  }\n\n","sourceOld":"  public static boolean validUTF16String(char[] s, int size) {\n    for(int i=0;i<size;i++) {\n      char ch = s[i];\n      if (ch >= UNI_SUR_HIGH_START && ch <= UNI_SUR_HIGH_END) {\n        if (i < size-1) {\n          i++;\n          char nextCH = s[i];\n          if (nextCH >= UNI_SUR_LOW_START && nextCH <= UNI_SUR_LOW_END) {\n            // Valid surrogate pair\n          } else\n            return false;\n        } else\n          return false;\n      } else if (ch >= UNI_SUR_LOW_START && ch <= UNI_SUR_LOW_END)\n        // Unmatched low surrogate\n        return false;\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"08932c793647a36953d1816b1060121f48820d3f":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["08932c793647a36953d1816b1060121f48820d3f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f4e87790277826a2aea119328600dfb07761f32":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","08932c793647a36953d1816b1060121f48820d3f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"08932c793647a36953d1816b1060121f48820d3f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","5f4e87790277826a2aea119328600dfb07761f32"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["08932c793647a36953d1816b1060121f48820d3f","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}