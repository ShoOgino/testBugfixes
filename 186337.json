{"path":"solr/core/src/test/org/apache/solr/handler/component/FacetPivotSmallTest#testPivotFacetMissing().mjava","commits":[{"id":"4c18a95e9168a30be855f5d5e7d61a863186fdc5","date":1415142581,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/FacetPivotSmallTest#testPivotFacetMissing().mjava","pathOld":"/dev/null","sourceNew":"  public void testPivotFacetMissing() throws Exception {\n    // Test facet.missing=true with diff sorts\n    index();\n    indexMissing();\n\n    SolrParams missingA = params(\"q\", \"*:*\",\n        \"rows\", \"0\",\n        \"facet\", \"true\",\n        \"facet.pivot\", \"place_t,company_t\",\n        // default facet.sort\n        FacetParams.FACET_MISSING, \"true\");\n\n    final String facetPivotPrefix = \"//lst[@name='facet_counts']/lst[@name='facet_pivot']/arr[@name='place_t,company_t']/lst\";\n    SolrQueryRequest req = req(missingA);\n    assertQ(req, facetPivotPrefix + \"/arr[@name='pivot'][count(.) > 0]\",   // not enough values for pivot\n        facetPivotPrefix + \"[7]/null[@name='value'][.='']\",   // not the missing place value\n        facetPivotPrefix + \"[7]/int[@name='count'][.=2]\",       // wrong missing place count\n        facetPivotPrefix + \"[7]/arr[@name='pivot'][count(.) > 0]\", // not enough sub-pivots for missing place\n        facetPivotPrefix + \"[7]/arr[@name='pivot']/lst[6]/null[@name='value'][.='']\", // not the missing company value\n        facetPivotPrefix + \"[7]/arr[@name='pivot']/lst[6]/int[@name='count'][.=1]\", // wrong missing company count\n        facetPivotPrefix + \"[7]/arr[@name='pivot']/lst[6][not(arr[@name='pivot'])]\" // company shouldn't have sub-pivots\n    );\n\n    SolrParams missingB = SolrParams.wrapDefaults(missingA,\n        params(FacetParams.FACET_LIMIT, \"4\",\n            \"facet.sort\", \"index\"));\n\n\n    req = req(missingB);\n    assertQ(req, facetPivotPrefix + \"/arr[@name='pivot'][count(.) > 0]\",   // not enough values for pivot\n        facetPivotPrefix + \"[5]/null[@name='value'][.='']\",   // not the missing place value\n        facetPivotPrefix + \"[5]/int[@name='count'][.=2]\",       // wrong missing place count\n        facetPivotPrefix + \"[5]/arr[@name='pivot'][count(.) > 0]\", // not enough sub-pivots for missing place\n        facetPivotPrefix + \"[5]/arr[@name='pivot']/lst[5]/null[@name='value'][.='']\", // not the missing company value\n        facetPivotPrefix + \"[5]/arr[@name='pivot']/lst[5]/int[@name='count'][.=1]\", // wrong missing company count\n        facetPivotPrefix + \"[5]/arr[@name='pivot']/lst[5][not(arr[@name='pivot'])]\" // company shouldn't have sub-pivots\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7679cc7d5b465ec8936979698cedf5fdbd71c95c","date":1566227764,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/FacetPivotSmallTest#testPivotFacetMissing().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/FacetPivotSmallTest#testPivotFacetMissing().mjava","sourceNew":"  public void testPivotFacetMissing() throws Exception {\n    // Test facet.missing=true with diff sorts\n    index();\n    indexMissing();\n\n    SolrParams missingA = params(\"q\", \"*:*\",\n        \"rows\", \"0\",\n        \"facet\", \"true\",\n        \"facet.pivot\", \"place_t,company_t\",\n        // default facet.sort\n        FacetParams.FACET_MISSING, \"true\");\n\n    final String facetPivotPrefix = \"//lst[@name='facet_counts']/lst[@name='facet_pivot']/arr[@name='place_t,company_t']/lst\";\n    SolrQueryRequest req = req(missingA);\n    assertQ(req, facetPivotPrefix + \"/arr[@name='pivot'][count(.) > 0]\",   // not enough values for pivot\n        facetPivotPrefix + \"[7]/null[@name='value'][.='']\",   // not the missing place value\n        facetPivotPrefix + \"[7]/int[@name='count'][.=2]\",       // wrong missing place count\n        facetPivotPrefix + \"[7]/arr[@name='pivot'][count(.) > 0]\", // not enough sub-pivots for missing place\n        facetPivotPrefix + \"[7]/arr[@name='pivot']/lst[6]/null[@name='value'][.='']\", // not the missing company value\n        facetPivotPrefix + \"[7]/arr[@name='pivot']/lst[6]/int[@name='count'][.=1]\", // wrong missing company count\n        facetPivotPrefix + \"[7]/arr[@name='pivot']/lst[6][not(arr[@name='pivot'])]\" // company shouldn't have sub-pivots\n    );\n\n    SolrParams missingB = SolrParams.wrapDefaults(missingA,\n        params(FacetParams.FACET_LIMIT, \"4\",\n            \"facet.sort\", \"index\"));\n\n\n    req = req(missingB);\n    assertQ(req, facetPivotPrefix + \"/arr[@name='pivot'][count(.) > 0]\",   // not enough values for pivot\n        facetPivotPrefix + \"[5]/null[@name='value'][.='']\",   // not the missing place value\n        facetPivotPrefix + \"[5]/int[@name='count'][.=2]\",       // wrong missing place count\n        facetPivotPrefix + \"[5]/arr[@name='pivot'][count(.) > 0]\", // not enough sub-pivots for missing place\n        facetPivotPrefix + \"[5]/arr[@name='pivot']/lst[5]/null[@name='value'][.='']\", // not the missing company value\n        facetPivotPrefix + \"[5]/arr[@name='pivot']/lst[5]/int[@name='count'][.=1]\", // wrong missing company count\n        facetPivotPrefix + \"[5]/arr[@name='pivot']/lst[5][not(arr[@name='pivot'])]\" // company shouldn't have sub-pivots\n    );\n\n    SolrParams missingC = SolrParams.wrapDefaults(missingA,\n        params(FacetParams.FACET_LIMIT, \"0\", \"facet.sort\", \"index\"));\n\n    assertQ(req(missingC), facetPivotPrefix + \"/arr[@name='pivot'][count(.) > 0]\",   // not enough values for pivot\n        facetPivotPrefix + \"[1]/null[@name='value'][.='']\",   // not the missing place value\n        facetPivotPrefix + \"[1]/int[@name='count'][.=2]\",       // wrong missing place count\n        facetPivotPrefix + \"[1]/arr[@name='pivot'][count(.) > 0]\", // not enough sub-pivots for missing place\n        facetPivotPrefix + \"[1]/arr[@name='pivot']/lst[1]/null[@name='value'][.='']\", // not the missing company value\n        facetPivotPrefix + \"[1]/arr[@name='pivot']/lst[1]/int[@name='count'][.=1]\", // wrong missing company count\n        facetPivotPrefix + \"[1]/arr[@name='pivot']/lst[1][not(arr[@name='pivot'])]\" // company shouldn't have sub-pivots\n    );\n  }\n\n","sourceOld":"  public void testPivotFacetMissing() throws Exception {\n    // Test facet.missing=true with diff sorts\n    index();\n    indexMissing();\n\n    SolrParams missingA = params(\"q\", \"*:*\",\n        \"rows\", \"0\",\n        \"facet\", \"true\",\n        \"facet.pivot\", \"place_t,company_t\",\n        // default facet.sort\n        FacetParams.FACET_MISSING, \"true\");\n\n    final String facetPivotPrefix = \"//lst[@name='facet_counts']/lst[@name='facet_pivot']/arr[@name='place_t,company_t']/lst\";\n    SolrQueryRequest req = req(missingA);\n    assertQ(req, facetPivotPrefix + \"/arr[@name='pivot'][count(.) > 0]\",   // not enough values for pivot\n        facetPivotPrefix + \"[7]/null[@name='value'][.='']\",   // not the missing place value\n        facetPivotPrefix + \"[7]/int[@name='count'][.=2]\",       // wrong missing place count\n        facetPivotPrefix + \"[7]/arr[@name='pivot'][count(.) > 0]\", // not enough sub-pivots for missing place\n        facetPivotPrefix + \"[7]/arr[@name='pivot']/lst[6]/null[@name='value'][.='']\", // not the missing company value\n        facetPivotPrefix + \"[7]/arr[@name='pivot']/lst[6]/int[@name='count'][.=1]\", // wrong missing company count\n        facetPivotPrefix + \"[7]/arr[@name='pivot']/lst[6][not(arr[@name='pivot'])]\" // company shouldn't have sub-pivots\n    );\n\n    SolrParams missingB = SolrParams.wrapDefaults(missingA,\n        params(FacetParams.FACET_LIMIT, \"4\",\n            \"facet.sort\", \"index\"));\n\n\n    req = req(missingB);\n    assertQ(req, facetPivotPrefix + \"/arr[@name='pivot'][count(.) > 0]\",   // not enough values for pivot\n        facetPivotPrefix + \"[5]/null[@name='value'][.='']\",   // not the missing place value\n        facetPivotPrefix + \"[5]/int[@name='count'][.=2]\",       // wrong missing place count\n        facetPivotPrefix + \"[5]/arr[@name='pivot'][count(.) > 0]\", // not enough sub-pivots for missing place\n        facetPivotPrefix + \"[5]/arr[@name='pivot']/lst[5]/null[@name='value'][.='']\", // not the missing company value\n        facetPivotPrefix + \"[5]/arr[@name='pivot']/lst[5]/int[@name='count'][.=1]\", // wrong missing company count\n        facetPivotPrefix + \"[5]/arr[@name='pivot']/lst[5][not(arr[@name='pivot'])]\" // company shouldn't have sub-pivots\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4c18a95e9168a30be855f5d5e7d61a863186fdc5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7679cc7d5b465ec8936979698cedf5fdbd71c95c":["4c18a95e9168a30be855f5d5e7d61a863186fdc5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7679cc7d5b465ec8936979698cedf5fdbd71c95c"]},"commit2Childs":{"4c18a95e9168a30be855f5d5e7d61a863186fdc5":["7679cc7d5b465ec8936979698cedf5fdbd71c95c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4c18a95e9168a30be855f5d5e7d61a863186fdc5"],"7679cc7d5b465ec8936979698cedf5fdbd71c95c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}