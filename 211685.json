{"path":"lucene/src/test/org/apache/lucene/index/TestByteSlices.ByteBlockAllocator#recycleByteBlocks(byte[][],int,int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestByteSlices.ByteBlockAllocator#recycleByteBlocks(byte[][],int,int).mjava","pathOld":"src/test/org/apache/lucene/index/TestByteSlices.ByteBlockAllocator#recycleByteBlocks(byte[][],int,int).mjava","sourceNew":"    /* Return a byte[] to the pool */\n    @Override\n    synchronized void recycleByteBlocks(byte[][] blocks, int start, int end) {\n      for(int i=start;i<end;i++)\n        freeByteBlocks.add(blocks[i]);\n    }\n\n","sourceOld":"    /* Return a byte[] to the pool */\n    @Override\n    synchronized void recycleByteBlocks(byte[][] blocks, int start, int end) {\n      for(int i=start;i<end;i++)\n        freeByteBlocks.add(blocks[i]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392","date":1286023472,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestByteSlices.ByteBlockAllocator#recycleByteBlocks(byte[][],int,int).mjava","sourceNew":null,"sourceOld":"    /* Return a byte[] to the pool */\n    @Override\n    synchronized void recycleByteBlocks(byte[][] blocks, int start, int end) {\n      for(int i=start;i<end;i++)\n        freeByteBlocks.add(blocks[i]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestByteSlices.ByteBlockAllocator#recycleByteBlocks(byte[][],int,int).mjava","sourceNew":null,"sourceOld":"    /* Return a byte[] to the pool */\n    @Override\n    synchronized void recycleByteBlocks(byte[][] blocks, int start, int end) {\n      for(int i=start;i<end;i++)\n        freeByteBlocks.add(blocks[i]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5d6c52f55ea3ba9a5b1d5a6dd17f79bc7d308392","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}