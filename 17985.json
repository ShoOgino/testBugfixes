{"path":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/BaseUIMATokenizer#analyzeInput().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/BaseUIMATokenizer#analyzeInput().mjava","pathOld":"modules/analysis/uima/src/java/org/apache/lucene/analysis/uima/BaseUIMATokenizer#analyzeInput().mjava","sourceNew":"  /**\n   * analyzes the tokenizer input using the given analysis engine\n   * <p/>\n   * {@link #cas} will be filled with  extracted metadata (UIMA annotations, feature structures)\n   *\n   * @throws AnalysisEngineProcessException\n   * @throws IOException\n   */\n  protected void analyzeInput() throws AnalysisEngineProcessException, IOException {\n    cas.reset();\n    cas.setDocumentText(toString(input));\n    ae.process(cas);\n  }\n\n","sourceOld":"  /**\n   * analyzes the tokenizer input using the given analysis engine\n   * <p/>\n   * {@link #cas} will be filled with  extracted metadata (UIMA annotations, feature structures)\n   *\n   * @throws AnalysisEngineProcessException\n   * @throws IOException\n   */\n  protected void analyzeInput() throws AnalysisEngineProcessException, IOException {\n    cas.reset();\n    cas.setDocumentText(toString(input));\n    ae.process(cas);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/BaseUIMATokenizer#analyzeInput().mjava","pathOld":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/BaseUIMATokenizer#analyzeInput().mjava","sourceNew":"  /**\n   * analyzes the tokenizer input using the given analysis engine\n   * <p/>\n   * {@link #cas} will be filled with  extracted metadata (UIMA annotations, feature structures)\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  protected void analyzeInput() throws AnalysisEngineProcessException, IOException {\n    cas.reset();\n    cas.setDocumentText(toString(input));\n    ae.process(cas);\n  }\n\n","sourceOld":"  /**\n   * analyzes the tokenizer input using the given analysis engine\n   * <p/>\n   * {@link #cas} will be filled with  extracted metadata (UIMA annotations, feature structures)\n   *\n   * @throws AnalysisEngineProcessException\n   * @throws IOException\n   */\n  protected void analyzeInput() throws AnalysisEngineProcessException, IOException {\n    cas.reset();\n    cas.setDocumentText(toString(input));\n    ae.process(cas);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ed7109a575849a2656ac2974fe87da5699a6e50","date":1360143548,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/BaseUIMATokenizer#analyzeInput().mjava","pathOld":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/BaseUIMATokenizer#analyzeInput().mjava","sourceNew":"  /**\n   * analyzes the tokenizer input using the given analysis engine\n   * <p/>\n   * {@link #cas} will be filled with  extracted metadata (UIMA annotations, feature structures)\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  protected void analyzeInput() throws ResourceInitializationException, AnalysisEngineProcessException, IOException {\n    if (ae == null) {\n      ae = AEProviderFactory.getInstance().getAEProvider(null, descriptorPath, configurationParameters).getAE();\n    }\n    if (cas == null) {\n      cas = ae.newCAS();\n    } else {\n      cas.reset();\n    }\n    cas.setDocumentText(toString(input));\n    ae.process(cas);\n  }\n\n","sourceOld":"  /**\n   * analyzes the tokenizer input using the given analysis engine\n   * <p/>\n   * {@link #cas} will be filled with  extracted metadata (UIMA annotations, feature structures)\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  protected void analyzeInput() throws AnalysisEngineProcessException, IOException {\n    cas.reset();\n    cas.setDocumentText(toString(input));\n    ae.process(cas);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14600834a1fbc7c12faf344466e00cca8cc67de4","date":1423303834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/BaseUIMATokenizer#analyzeInput().mjava","pathOld":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/BaseUIMATokenizer#analyzeInput().mjava","sourceNew":"  /**\n   * analyzes the tokenizer input using the given analysis engine\n   * <p>\n   * {@link #cas} will be filled with  extracted metadata (UIMA annotations, feature structures)\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  protected void analyzeInput() throws ResourceInitializationException, AnalysisEngineProcessException, IOException {\n    if (ae == null) {\n      ae = AEProviderFactory.getInstance().getAEProvider(null, descriptorPath, configurationParameters).getAE();\n    }\n    if (cas == null) {\n      cas = ae.newCAS();\n    } else {\n      cas.reset();\n    }\n    cas.setDocumentText(toString(input));\n    ae.process(cas);\n  }\n\n","sourceOld":"  /**\n   * analyzes the tokenizer input using the given analysis engine\n   * <p/>\n   * {@link #cas} will be filled with  extracted metadata (UIMA annotations, feature structures)\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  protected void analyzeInput() throws ResourceInitializationException, AnalysisEngineProcessException, IOException {\n    if (ae == null) {\n      ae = AEProviderFactory.getInstance().getAEProvider(null, descriptorPath, configurationParameters).getAE();\n    }\n    if (cas == null) {\n      cas = ae.newCAS();\n    } else {\n      cas.reset();\n    }\n    cas.setDocumentText(toString(input));\n    ae.process(cas);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8c9a6ea78b00a421744e770568d8c2aab262e4cd","date":1530971937,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/BaseUIMATokenizer#analyzeInput().mjava","sourceNew":null,"sourceOld":"  /**\n   * analyzes the tokenizer input using the given analysis engine\n   * <p>\n   * {@link #cas} will be filled with  extracted metadata (UIMA annotations, feature structures)\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  protected void analyzeInput() throws ResourceInitializationException, AnalysisEngineProcessException, IOException {\n    if (ae == null) {\n      ae = AEProviderFactory.getInstance().getAEProvider(null, descriptorPath, configurationParameters).getAE();\n    }\n    if (cas == null) {\n      cas = ae.newCAS();\n    } else {\n      cas.reset();\n    }\n    cas.setDocumentText(toString(input));\n    ae.process(cas);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":4,"author":"Michael Braun","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/BaseUIMATokenizer#analyzeInput().mjava","sourceNew":null,"sourceOld":"  /**\n   * analyzes the tokenizer input using the given analysis engine\n   * <p>\n   * {@link #cas} will be filled with  extracted metadata (UIMA annotations, feature structures)\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  protected void analyzeInput() throws ResourceInitializationException, AnalysisEngineProcessException, IOException {\n    if (ae == null) {\n      ae = AEProviderFactory.getInstance().getAEProvider(null, descriptorPath, configurationParameters).getAE();\n    }\n    if (cas == null) {\n      cas = ae.newCAS();\n    } else {\n      cas.reset();\n    }\n    cas.setDocumentText(toString(input));\n    ae.process(cas);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/uima/src/java/org/apache/lucene/analysis/uima/BaseUIMATokenizer#analyzeInput().mjava","sourceNew":null,"sourceOld":"  /**\n   * analyzes the tokenizer input using the given analysis engine\n   * <p>\n   * {@link #cas} will be filled with  extracted metadata (UIMA annotations, feature structures)\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  protected void analyzeInput() throws ResourceInitializationException, AnalysisEngineProcessException, IOException {\n    if (ae == null) {\n      ae = AEProviderFactory.getInstance().getAEProvider(null, descriptorPath, configurationParameters).getAE();\n    }\n    if (cas == null) {\n      cas = ae.newCAS();\n    } else {\n      cas.reset();\n    }\n    cas.setDocumentText(toString(input));\n    ae.process(cas);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"0ed7109a575849a2656ac2974fe87da5699a6e50":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["14600834a1fbc7c12faf344466e00cca8cc67de4","8c9a6ea78b00a421744e770568d8c2aab262e4cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"14600834a1fbc7c12faf344466e00cca8cc67de4":["0ed7109a575849a2656ac2974fe87da5699a6e50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8c9a6ea78b00a421744e770568d8c2aab262e4cd"],"8c9a6ea78b00a421744e770568d8c2aab262e4cd":["14600834a1fbc7c12faf344466e00cca8cc67de4"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["14600834a1fbc7c12faf344466e00cca8cc67de4","8c9a6ea78b00a421744e770568d8c2aab262e4cd"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["0ed7109a575849a2656ac2974fe87da5699a6e50"],"0ed7109a575849a2656ac2974fe87da5699a6e50":["14600834a1fbc7c12faf344466e00cca8cc67de4"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"14600834a1fbc7c12faf344466e00cca8cc67de4":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","8c9a6ea78b00a421744e770568d8c2aab262e4cd","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"8c9a6ea78b00a421744e770568d8c2aab262e4cd":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}