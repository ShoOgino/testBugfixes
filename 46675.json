{"path":"lucene/core/src/java/org/apache/lucene/util/CollectionUtil#[T-extends-Comparable[#-super-T]]_getSorter(List[T]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/CollectionUtil#[T-extends-Comparable[#-super-T]]_getSorter(List[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/CollectionUtil#[T-extends-Comparable[#-super-T]]_getSorter(List[T]).mjava","sourceNew":"  /** Natural SorterTemplate */\n  private static <T extends Comparable<? super T>> SorterTemplate getSorter(final List<T> list) {\n    if (!(list instanceof RandomAccess))\n      throw new IllegalArgumentException(\"CollectionUtil can only sort random access lists in-place.\");\n    return new SorterTemplate() {\n      @Override\n      protected void swap(int i, int j) {\n        Collections.swap(list, i, j);\n      }\n      \n      @Override\n      protected int compare(int i, int j) {\n        return list.get(i).compareTo(list.get(j));\n      }\n\n      @Override\n      protected void setPivot(int i) {\n        pivot = list.get(i);\n      }\n  \n      @Override\n      protected int comparePivot(int j) {\n        return pivot.compareTo(list.get(j));\n      }\n      \n      private T pivot;\n    };\n  }\n\n","sourceOld":"  /** Natural SorterTemplate */\n  private static <T extends Comparable<? super T>> SorterTemplate getSorter(final List<T> list) {\n    if (!(list instanceof RandomAccess))\n      throw new IllegalArgumentException(\"CollectionUtil can only sort random access lists in-place.\");\n    return new SorterTemplate() {\n      @Override\n      protected void swap(int i, int j) {\n        Collections.swap(list, i, j);\n      }\n      \n      @Override\n      protected int compare(int i, int j) {\n        return list.get(i).compareTo(list.get(j));\n      }\n\n      @Override\n      protected void setPivot(int i) {\n        pivot = list.get(i);\n      }\n  \n      @Override\n      protected int comparePivot(int j) {\n        return pivot.compareTo(list.get(j));\n      }\n      \n      private T pivot;\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"179c01998affd8475cfbb86e5c74e568870b2a9f","date":1363967234,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/CollectionUtil#[T-extends-Comparable[#-super-T]]_getSorter(List[T]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/CollectionUtil#[T-extends-Comparable[#-super-T]]_getSorter(List[T]).mjava","sourceNew":"  /** Natural SorterTemplate */\n  private static <T extends Comparable<? super T>> SorterTemplate getSorter(final List<T> list) {\n    if (!(list instanceof RandomAccess))\n      throw new IllegalArgumentException(\"CollectionUtil can only sort random access lists in-place.\");\n    return new ListSorterTemplate<T>(list) {\n\n      @Override\n      protected int compare(T a, T b) {\n        return a.compareTo(b);\n      }\n\n    };\n  }\n\n","sourceOld":"  /** Natural SorterTemplate */\n  private static <T extends Comparable<? super T>> SorterTemplate getSorter(final List<T> list) {\n    if (!(list instanceof RandomAccess))\n      throw new IllegalArgumentException(\"CollectionUtil can only sort random access lists in-place.\");\n    return new SorterTemplate() {\n      @Override\n      protected void swap(int i, int j) {\n        Collections.swap(list, i, j);\n      }\n      \n      @Override\n      protected int compare(int i, int j) {\n        return list.get(i).compareTo(list.get(j));\n      }\n\n      @Override\n      protected void setPivot(int i) {\n        pivot = list.get(i);\n      }\n  \n      @Override\n      protected int comparePivot(int j) {\n        return pivot.compareTo(list.get(j));\n      }\n      \n      private T pivot;\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dcc555744b1a581a4beccd0b75f8d3fe49735a2f","date":1367588265,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/CollectionUtil#[T-extends-Comparable[#-super-T]]_getSorter(List[T]).mjava","sourceNew":null,"sourceOld":"  /** Natural SorterTemplate */\n  private static <T extends Comparable<? super T>> SorterTemplate getSorter(final List<T> list) {\n    if (!(list instanceof RandomAccess))\n      throw new IllegalArgumentException(\"CollectionUtil can only sort random access lists in-place.\");\n    return new ListSorterTemplate<T>(list) {\n\n      @Override\n      protected int compare(T a, T b) {\n        return a.compareTo(b);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"179c01998affd8475cfbb86e5c74e568870b2a9f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dcc555744b1a581a4beccd0b75f8d3fe49735a2f":["179c01998affd8475cfbb86e5c74e568870b2a9f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dcc555744b1a581a4beccd0b75f8d3fe49735a2f"]},"commit2Childs":{"179c01998affd8475cfbb86e5c74e568870b2a9f":["dcc555744b1a581a4beccd0b75f8d3fe49735a2f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["179c01998affd8475cfbb86e5c74e568870b2a9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"dcc555744b1a581a4beccd0b75f8d3fe49735a2f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}