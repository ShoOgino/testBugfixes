{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","commits":[{"id":"2c30e4c1cee08b3b229a77991882594fe7250b66","date":1344448871,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    System.setProperty(\"enable.update.log\", \"true\");\n    System.setProperty(\"remove.version.field\", \"true\");\n\n\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    System.setProperty(\"enable.update.log\", \"true\");\n    System.setProperty(\"remove.version.field\", \"true\");\n\n\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    System.setProperty(\"enable.update.log\", \"true\");\n    System.setProperty(\"remove.version.field\", \"true\");\n\n\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    System.setProperty(\"enable.update.log\", \"true\");\n    System.setProperty(\"remove.version.field\", \"true\");\n\n\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AbstractDistributedZkTestCase#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    System.setProperty(\"enable.update.log\", \"true\");\n    System.setProperty(\"remove.version.field\", \"true\");\n\n\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    System.setProperty(\"enable.update.log\", \"true\");\n    System.setProperty(\"remove.version.field\", \"true\");\n\n\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dcc420420a40e6842b773b19d6d7a6348cc6de01","date":1354995290,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    System.setProperty(\"enable.update.log\", \"true\");\n    System.setProperty(\"remove.version.field\", \"true\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), \"solrconfig.xml\", schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    System.setProperty(\"enable.update.log\", \"true\");\n    System.setProperty(\"remove.version.field\", \"true\");\n\n\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    System.setProperty(\"enable.update.log\", \"true\");\n    System.setProperty(\"remove.version.field\", \"true\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), \"solrconfig.xml\", schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    System.setProperty(\"enable.update.log\", \"true\");\n    System.setProperty(\"remove.version.field\", \"true\");\n\n\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"709ec1e7204705625cbd074102a6ced459df9c99","date":1361046093,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    System.setProperty(\"enable.update.log\", \"true\");\n    System.setProperty(\"remove.version.field\", \"true\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    System.setProperty(\"enable.update.log\", \"true\");\n    System.setProperty(\"remove.version.field\", \"true\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), \"solrconfig.xml\", schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    System.setProperty(\"enable.update.log\", \"true\");\n    System.setProperty(\"remove.version.field\", \"true\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    System.setProperty(\"enable.update.log\", \"true\");\n    System.setProperty(\"remove.version.field\", \"true\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), \"solrconfig.xml\", schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cdf0df9894a374e563fdad5663fab11dd088c5d3","date":1395200389,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    System.setProperty(\"enable.update.log\", \"true\");\n    System.setProperty(\"remove.version.field\", \"true\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"147fca81cba5be17cdecc4975f39b8ee2acac38f","date":1395240175,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    //System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d4ed36f176b343ecb0debaae6ff79962a018d77","date":1395241513,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    //System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9b346c75aa26766db314a531e6e7dd87a3a19a2a","date":1395629273,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    createTempDir();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#distribSetUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractDistribZkTestBase#setUp().mjava","sourceNew":"  @Override\n  public void distribSetUp() throws Exception {\n    super.distribSetUp();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    String zkDir = testDir.getAbsolutePath() + File.separator\n    + \"zookeeper/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    \n    System.setProperty(ZK_HOST, zkServer.getZkAddress());\n    System.setProperty(ENABLE_UPDATE_LOG, \"true\");\n    System.setProperty(REMOVE_VERSION_FIELD, \"true\");\n    System.setProperty(ZOOKEEPER_FORCE_SYNC, \"false\");\n    System.setProperty(MockDirectoryFactory.SOLR_TESTS_ALLOW_READING_FILES_STILL_OPEN_FOR_WRITE, \"true\");\n\n    String schema = getSchemaFile();\n    if (schema == null) schema = \"schema.xml\";\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(), zkServer.getZkAddress(), getCloudSolrConfig(), schema);\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"147fca81cba5be17cdecc4975f39b8ee2acac38f":["cdf0df9894a374e563fdad5663fab11dd088c5d3"],"cdf0df9894a374e563fdad5663fab11dd088c5d3":["709ec1e7204705625cbd074102a6ced459df9c99"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["9b346c75aa26766db314a531e6e7dd87a3a19a2a"],"abb23fcc2461782ab204e61213240feb77d355aa":["1416f9d09d016a6894cd17e1caac137dad2bba59"],"407687e67faf6e1f02a211ca078d8e3eed631027":["2c30e4c1cee08b3b229a77991882594fe7250b66","dcc420420a40e6842b773b19d6d7a6348cc6de01"],"4d4ed36f176b343ecb0debaae6ff79962a018d77":["147fca81cba5be17cdecc4975f39b8ee2acac38f"],"dcc420420a40e6842b773b19d6d7a6348cc6de01":["2c30e4c1cee08b3b229a77991882594fe7250b66"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":["dcc420420a40e6842b773b19d6d7a6348cc6de01","709ec1e7204705625cbd074102a6ced459df9c99"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["9b346c75aa26766db314a531e6e7dd87a3a19a2a"],"9b346c75aa26766db314a531e6e7dd87a3a19a2a":["4d4ed36f176b343ecb0debaae6ff79962a018d77"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"709ec1e7204705625cbd074102a6ced459df9c99":["dcc420420a40e6842b773b19d6d7a6348cc6de01"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["abb23fcc2461782ab204e61213240feb77d355aa"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"147fca81cba5be17cdecc4975f39b8ee2acac38f":["4d4ed36f176b343ecb0debaae6ff79962a018d77"],"cdf0df9894a374e563fdad5663fab11dd088c5d3":["147fca81cba5be17cdecc4975f39b8ee2acac38f"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":[],"abb23fcc2461782ab204e61213240feb77d355aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"4d4ed36f176b343ecb0debaae6ff79962a018d77":["9b346c75aa26766db314a531e6e7dd87a3a19a2a"],"dcc420420a40e6842b773b19d6d7a6348cc6de01":["407687e67faf6e1f02a211ca078d8e3eed631027","95303ff3749680c743b9425f9cf99e6e4065e8a8","709ec1e7204705625cbd074102a6ced459df9c99"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"9b346c75aa26766db314a531e6e7dd87a3a19a2a":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","1416f9d09d016a6894cd17e1caac137dad2bba59"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["abb23fcc2461782ab204e61213240feb77d355aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","2c30e4c1cee08b3b229a77991882594fe7250b66"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"709ec1e7204705625cbd074102a6ced459df9c99":["cdf0df9894a374e563fdad5663fab11dd088c5d3","95303ff3749680c743b9425f9cf99e6e4065e8a8"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["407687e67faf6e1f02a211ca078d8e3eed631027","dcc420420a40e6842b773b19d6d7a6348cc6de01","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","407687e67faf6e1f02a211ca078d8e3eed631027","c7869f64c874ebf7f317d22c00baf2b6857797a6","95303ff3749680c743b9425f9cf99e6e4065e8a8","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}