{"path":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/dict/BinaryDictionary#pronunciationOffset(int).mjava","commits":[{"id":"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2","date":1326399048,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/dict/BinaryDictionary#pronunciationOffset(int).mjava","pathOld":"/dev/null","sourceNew":"  private int pronunciationOffset(int wordId) {\n    int offset = readingOffset(wordId);\n    int readingData = buffer.get(offset++) & 0xff;\n    final int readingLength;\n    if ((readingData & 1) == 0) {\n      readingLength = readingData & 0xfe; // UTF-16: mask off kana bit\n    } else {\n      readingLength = readingData >>> 1;\n    }\n    return offset + readingLength;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df594fa0daea908bb30c4f3a453f2bd0a55f9a1e","date":1326766347,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/dict/BinaryDictionary#pronunciationOffset(int).mjava","pathOld":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/dict/BinaryDictionary#pronunciationOffset(int).mjava","sourceNew":"  private int pronunciationOffset(int wordId) {\n    if (hasReadingData(wordId)) {\n      int offset = readingOffset(wordId);\n      int readingData = buffer.get(offset++) & 0xff;\n      final int readingLength;\n      if ((readingData & 1) == 0) {\n        readingLength = readingData & 0xfe; // UTF-16: mask off kana bit\n      } else {\n        readingLength = readingData >>> 1;\n      }\n      return offset + readingLength;\n    } else {\n      return readingOffset(wordId);\n    }\n  }\n\n","sourceOld":"  private int pronunciationOffset(int wordId) {\n    int offset = readingOffset(wordId);\n    int readingData = buffer.get(offset++) & 0xff;\n    final int readingLength;\n    if ((readingData & 1) == 0) {\n      readingLength = readingData & 0xfe; // UTF-16: mask off kana bit\n    } else {\n      readingLength = readingData >>> 1;\n    }\n    return offset + readingLength;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98d45c1ff2c99694b6de2201175f9b8b8b27b597","date":1332757908,"type":5,"author":"Christian Moen","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/dict/BinaryDictionary#pronunciationOffset(int).mjava","pathOld":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/dict/BinaryDictionary#pronunciationOffset(int).mjava","sourceNew":"  private int pronunciationOffset(int wordId) {\n    if (hasReadingData(wordId)) {\n      int offset = readingOffset(wordId);\n      int readingData = buffer.get(offset++) & 0xff;\n      final int readingLength;\n      if ((readingData & 1) == 0) {\n        readingLength = readingData & 0xfe; // UTF-16: mask off kana bit\n      } else {\n        readingLength = readingData >>> 1;\n      }\n      return offset + readingLength;\n    } else {\n      return readingOffset(wordId);\n    }\n  }\n\n","sourceOld":"  private int pronunciationOffset(int wordId) {\n    if (hasReadingData(wordId)) {\n      int offset = readingOffset(wordId);\n      int readingData = buffer.get(offset++) & 0xff;\n      final int readingLength;\n      if ((readingData & 1) == 0) {\n        readingLength = readingData & 0xfe; // UTF-16: mask off kana bit\n      } else {\n        readingLength = readingData >>> 1;\n      }\n      return offset + readingLength;\n    } else {\n      return readingOffset(wordId);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df594fa0daea908bb30c4f3a453f2bd0a55f9a1e":["6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"98d45c1ff2c99694b6de2201175f9b8b8b27b597":["df594fa0daea908bb30c4f3a453f2bd0a55f9a1e"],"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["98d45c1ff2c99694b6de2201175f9b8b8b27b597"]},"commit2Childs":{"df594fa0daea908bb30c4f3a453f2bd0a55f9a1e":["98d45c1ff2c99694b6de2201175f9b8b8b27b597"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2"],"98d45c1ff2c99694b6de2201175f9b8b8b27b597":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2":["df594fa0daea908bb30c4f3a453f2bd0a55f9a1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}