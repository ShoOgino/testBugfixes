{"path":"solr/src/java/org/apache/solr/spelling/SpellingResult#add(Token,int).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/spelling/SpellingResult#add(Token,int).mjava","pathOld":"/dev/null","sourceNew":"  public void add(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/spelling/SpellingResult#add(Token,int).mjava","sourceNew":null,"sourceOld":"  public void add(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/spelling/SpellingResult#add(Token,int).mjava","pathOld":"src/java/org/apache/solr/spelling/SpellingResult#add(Token,int).mjava","sourceNew":"  public void add(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","sourceOld":"  public void add(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/spelling/SpellingResult#add(Token,int).mjava","pathOld":"/dev/null","sourceNew":"  public void add(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de86357ed7f45c7efec5ea6ab5a403b027a9f0b0","date":1307486921,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/spelling/SpellingResult#addFrequency(Token,int).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/SpellingResult#add(Token,int).mjava","sourceNew":"  /**\n   * Adds an original token with its document frequency\n   * \n   * @param token original token\n   * @param docFreq original token's document frequency\n   */\n  public void addFrequency(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","sourceOld":"  public void add(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/spelling/SpellingResult#addFrequency(Token,int).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/SpellingResult#add(Token,int).mjava","sourceNew":"  /**\n   * Adds an original token with its document frequency\n   * \n   * @param token original token\n   * @param docFreq original token's document frequency\n   */\n  public void addFrequency(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","sourceOld":"  public void add(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/spelling/SpellingResult#add(Token,int).mjava","sourceNew":null,"sourceOld":"  public void add(Token token, int docFreq) {\n    if (tokenFrequency == null) {\n      tokenFrequency = new LinkedHashMap<Token, Integer>();\n    }\n    tokenFrequency.put(token, docFreq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["1da8d55113b689b06716246649de6f62430f15c0","de86357ed7f45c7efec5ea6ab5a403b027a9f0b0"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["1da8d55113b689b06716246649de6f62430f15c0","de86357ed7f45c7efec5ea6ab5a403b027a9f0b0"],"de86357ed7f45c7efec5ea6ab5a403b027a9f0b0":["1da8d55113b689b06716246649de6f62430f15c0"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["de86357ed7f45c7efec5ea6ab5a403b027a9f0b0"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","de86357ed7f45c7efec5ea6ab5a403b027a9f0b0"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"de86357ed7f45c7efec5ea6ab5a403b027a9f0b0":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}