{"path":"lucene/src/java/org/apache/lucene/search/similarities/BM25Similarity#computeStats(IndexSearcher,String,float,TermContext...).mjava","commits":[{"id":"60e3b31201fd9bb5d73884faa5a38c63ea9239f2","date":1315756041,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/similarities/BM25Similarity#computeStats(IndexSearcher,String,float,TermContext...).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public final Stats computeStats(IndexSearcher searcher, String fieldName, float queryBoost, TermContext... termStats) throws IOException {\n    Explanation idf = termStats.length == 1 ? idfExplain(termStats[0], searcher) : idfExplain(termStats, searcher);\n\n    float avgdl = avgFieldLength(searcher, fieldName);\n\n    // compute freq-independent part of bm25 equation across all norm values\n    float cache[] = new float[256];\n    for (int i = 0; i < cache.length; i++) {\n      cache[i] = k1 * ((1 - b) + b * decodeNormValue((byte)i) / avgdl);\n    }\n    return new BM25Stats(idf, queryBoost, avgdl, cache);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d","date":1320398636,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/similarities/BM25Similarity#computeStats(CollectionStatistics,float,TermStatistics...).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/BM25Similarity#computeStats(IndexSearcher,String,float,TermContext...).mjava","sourceNew":"  @Override\n  public final Stats computeStats(CollectionStatistics collectionStats, float queryBoost, TermStatistics... termStats) {\n    Explanation idf = termStats.length == 1 ? idfExplain(collectionStats, termStats[0]) : idfExplain(collectionStats, termStats);\n\n    float avgdl = avgFieldLength(collectionStats);\n\n    // compute freq-independent part of bm25 equation across all norm values\n    float cache[] = new float[256];\n    for (int i = 0; i < cache.length; i++) {\n      cache[i] = k1 * ((1 - b) + b * decodeNormValue((byte)i) / avgdl);\n    }\n    return new BM25Stats(idf, queryBoost, avgdl, cache);\n  }\n\n","sourceOld":"  @Override\n  public final Stats computeStats(IndexSearcher searcher, String fieldName, float queryBoost, TermContext... termStats) throws IOException {\n    Explanation idf = termStats.length == 1 ? idfExplain(termStats[0], searcher) : idfExplain(termStats, searcher);\n\n    float avgdl = avgFieldLength(searcher, fieldName);\n\n    // compute freq-independent part of bm25 equation across all norm values\n    float cache[] = new float[256];\n    for (int i = 0; i < cache.length; i++) {\n      cache[i] = k1 * ((1 - b) + b * decodeNormValue((byte)i) / avgdl);\n    }\n    return new BM25Stats(idf, queryBoost, avgdl, cache);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"60e3b31201fd9bb5d73884faa5a38c63ea9239f2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d"]},"commit2Childs":{"9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2"],"60e3b31201fd9bb5d73884faa5a38c63ea9239f2":["9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}