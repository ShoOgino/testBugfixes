{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","commits":[{"id":"fa64435b5902ce266c23755a4a00691a3285dab8","date":1347243290,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  public Replica(String name, Map<String,Object> propMap) {         // TODO: back compat for handling Map<String,String>\n    super(propMap);\n    this.name = name;\n    String nodeName = (String)propMap.get(ZkStateReader.NODE_NAME_PROP);\n    assert nodeName == null || name.startsWith(nodeName);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e7d59baa18f0aed2bb5f93a76ffce5343aee13d","date":1347918051,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","sourceNew":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    String nodeName = (String)propMap.get(ZkStateReader.NODE_NAME_PROP);\n    assert nodeName == null || name.startsWith(nodeName);\n  }\n\n","sourceOld":"  public Replica(String name, Map<String,Object> propMap) {         // TODO: back compat for handling Map<String,String>\n    super(propMap);\n    this.name = name;\n    String nodeName = (String)propMap.get(ZkStateReader.NODE_NAME_PROP);\n    assert nodeName == null || name.startsWith(nodeName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89f828d954597b98a28942874636f35c719b8a5d","date":1354471211,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","sourceNew":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    nodeName = (String)propMap.get(ZkStateReader.NODE_NAME_PROP);\n    assert nodeName == null || name.startsWith(nodeName);\n  }\n\n","sourceOld":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    String nodeName = (String)propMap.get(ZkStateReader.NODE_NAME_PROP);\n    assert nodeName == null || name.startsWith(nodeName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","sourceNew":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    nodeName = (String)propMap.get(ZkStateReader.NODE_NAME_PROP);\n    assert nodeName == null || name.startsWith(nodeName);\n  }\n\n","sourceOld":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    String nodeName = (String)propMap.get(ZkStateReader.NODE_NAME_PROP);\n    assert nodeName == null || name.startsWith(nodeName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb4a195b8dc1808cd01748bd2e0fba26ca915d4d","date":1361851792,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","sourceNew":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    nodeName = (String)propMap.get(ZkStateReader.NODE_NAME_PROP);\n  }\n\n","sourceOld":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    nodeName = (String)propMap.get(ZkStateReader.NODE_NAME_PROP);\n    assert nodeName == null || name.startsWith(nodeName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a219f1dcad1700e84807666bdbd2b573e8de7021","date":1428130940,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","sourceNew":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    this.nodeName = (String) propMap.get(ZkStateReader.NODE_NAME_PROP);\n    if (propMap.get(ZkStateReader.STATE_PROP) != null) {\n      this.state = State.getState((String) propMap.get(ZkStateReader.STATE_PROP));\n    } else {\n      this.state = State.ACTIVE;                         //Default to ACTIVE\n      propMap.put(ZkStateReader.STATE_PROP, state.toString());\n    }\n\n  }\n\n","sourceOld":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    nodeName = (String)propMap.get(ZkStateReader.NODE_NAME_PROP);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61c45e99cf6676da48f19d7511c73712ad39402b","date":1495508331,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","sourceNew":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    this.nodeName = (String) propMap.get(ZkStateReader.NODE_NAME_PROP);\n    if (propMap.get(ZkStateReader.STATE_PROP) != null) {\n      this.state = State.getState((String) propMap.get(ZkStateReader.STATE_PROP));\n    } else {\n      this.state = State.ACTIVE;                         //Default to ACTIVE\n      propMap.put(ZkStateReader.STATE_PROP, state.toString());\n    }\n    String typeString = (String)propMap.get(ZkStateReader.REPLICA_TYPE);\n    if (typeString == null) {\n      this.type = Type.NRT;\n    } else {\n      this.type = Type.valueOf(typeString);\n    }\n\n  }\n\n","sourceOld":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    this.nodeName = (String) propMap.get(ZkStateReader.NODE_NAME_PROP);\n    if (propMap.get(ZkStateReader.STATE_PROP) != null) {\n      this.state = State.getState((String) propMap.get(ZkStateReader.STATE_PROP));\n    } else {\n      this.state = State.ACTIVE;                         //Default to ACTIVE\n      propMap.put(ZkStateReader.STATE_PROP, state.toString());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","sourceNew":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    this.nodeName = (String) propMap.get(ZkStateReader.NODE_NAME_PROP);\n    if (propMap.get(ZkStateReader.STATE_PROP) != null) {\n      this.state = State.getState((String) propMap.get(ZkStateReader.STATE_PROP));\n    } else {\n      this.state = State.ACTIVE;                         //Default to ACTIVE\n      propMap.put(ZkStateReader.STATE_PROP, state.toString());\n    }\n    String typeString = (String)propMap.get(ZkStateReader.REPLICA_TYPE);\n    if (typeString == null) {\n      this.type = Type.NRT;\n    } else {\n      this.type = Type.valueOf(typeString);\n    }\n\n  }\n\n","sourceOld":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    this.nodeName = (String) propMap.get(ZkStateReader.NODE_NAME_PROP);\n    if (propMap.get(ZkStateReader.STATE_PROP) != null) {\n      this.state = State.getState((String) propMap.get(ZkStateReader.STATE_PROP));\n    } else {\n      this.state = State.ACTIVE;                         //Default to ACTIVE\n      propMap.put(ZkStateReader.STATE_PROP, state.toString());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1852ff897aecd2f7c8376a02aedfd44104533f28","date":1498224361,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","sourceNew":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    this.nodeName = (String) propMap.get(ZkStateReader.NODE_NAME_PROP);\n    if (propMap.get(ZkStateReader.STATE_PROP) != null) {\n      this.state = State.getState((String) propMap.get(ZkStateReader.STATE_PROP));\n    } else {\n      this.state = State.ACTIVE;                         //Default to ACTIVE\n      propMap.put(ZkStateReader.STATE_PROP, state.toString());\n    }\n    type = Type.get((String) propMap.get(ZkStateReader.REPLICA_TYPE));\n  }\n\n","sourceOld":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    this.nodeName = (String) propMap.get(ZkStateReader.NODE_NAME_PROP);\n    if (propMap.get(ZkStateReader.STATE_PROP) != null) {\n      this.state = State.getState((String) propMap.get(ZkStateReader.STATE_PROP));\n    } else {\n      this.state = State.ACTIVE;                         //Default to ACTIVE\n      propMap.put(ZkStateReader.STATE_PROP, state.toString());\n    }\n    String typeString = (String)propMap.get(ZkStateReader.REPLICA_TYPE);\n    if (typeString == null) {\n      this.type = Type.NRT;\n    } else {\n      this.type = Type.valueOf(typeString);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","sourceNew":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    this.nodeName = (String) propMap.get(ZkStateReader.NODE_NAME_PROP);\n    if (propMap.get(ZkStateReader.STATE_PROP) != null) {\n      this.state = State.getState((String) propMap.get(ZkStateReader.STATE_PROP));\n    } else {\n      this.state = State.ACTIVE;                         //Default to ACTIVE\n      propMap.put(ZkStateReader.STATE_PROP, state.toString());\n    }\n    type = Type.get((String) propMap.get(ZkStateReader.REPLICA_TYPE));\n  }\n\n","sourceOld":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    this.nodeName = (String) propMap.get(ZkStateReader.NODE_NAME_PROP);\n    if (propMap.get(ZkStateReader.STATE_PROP) != null) {\n      this.state = State.getState((String) propMap.get(ZkStateReader.STATE_PROP));\n    } else {\n      this.state = State.ACTIVE;                         //Default to ACTIVE\n      propMap.put(ZkStateReader.STATE_PROP, state.toString());\n    }\n    String typeString = (String)propMap.get(ZkStateReader.REPLICA_TYPE);\n    if (typeString == null) {\n      this.type = Type.NRT;\n    } else {\n      this.type = Type.valueOf(typeString);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","sourceNew":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    this.nodeName = (String) propMap.get(ZkStateReader.NODE_NAME_PROP);\n    if (propMap.get(ZkStateReader.STATE_PROP) != null) {\n      this.state = State.getState((String) propMap.get(ZkStateReader.STATE_PROP));\n    } else {\n      this.state = State.ACTIVE;                         //Default to ACTIVE\n      propMap.put(ZkStateReader.STATE_PROP, state.toString());\n    }\n    type = Type.get((String) propMap.get(ZkStateReader.REPLICA_TYPE));\n  }\n\n","sourceOld":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    this.nodeName = (String) propMap.get(ZkStateReader.NODE_NAME_PROP);\n    if (propMap.get(ZkStateReader.STATE_PROP) != null) {\n      this.state = State.getState((String) propMap.get(ZkStateReader.STATE_PROP));\n    } else {\n      this.state = State.ACTIVE;                         //Default to ACTIVE\n      propMap.put(ZkStateReader.STATE_PROP, state.toString());\n    }\n    String typeString = (String)propMap.get(ZkStateReader.REPLICA_TYPE);\n    if (typeString == null) {\n      this.type = Type.NRT;\n    } else {\n      this.type = Type.valueOf(typeString);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6681d02f2302c363be938426e68f8dfd090cc1bf","date":1575339019,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object],String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","sourceNew":"  public Replica(String name, Map<String,Object> propMap, String collection, String slice) {\n    super(propMap);\n    this.collection = collection;\n    this.slice = slice;\n    this.name = name;\n    this.nodeName = (String) propMap.get(ZkStateReader.NODE_NAME_PROP);\n    if (propMap.get(ZkStateReader.STATE_PROP) != null) {\n      this.state = State.getState((String) propMap.get(ZkStateReader.STATE_PROP));\n    } else {\n      this.state = State.ACTIVE;                         //Default to ACTIVE\n      propMap.put(ZkStateReader.STATE_PROP, state.toString());\n    }\n    type = Type.get((String) propMap.get(ZkStateReader.REPLICA_TYPE));\n  }\n\n","sourceOld":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    this.nodeName = (String) propMap.get(ZkStateReader.NODE_NAME_PROP);\n    if (propMap.get(ZkStateReader.STATE_PROP) != null) {\n      this.state = State.getState((String) propMap.get(ZkStateReader.STATE_PROP));\n    } else {\n      this.state = State.ACTIVE;                         //Default to ACTIVE\n      propMap.put(ZkStateReader.STATE_PROP, state.toString());\n    }\n    type = Type.get((String) propMap.get(ZkStateReader.REPLICA_TYPE));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3aa683bba99315838c968fefedf3d74f44aa993","date":1575395112,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object],String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Replica#Replica(String,Map[String,Object]).mjava","sourceNew":"  public Replica(String name, Map<String,Object> propMap, String collection, String slice) {\n    super(propMap);\n    this.collection = collection;\n    this.slice = slice;\n    this.name = name;\n    this.nodeName = (String) propMap.get(ZkStateReader.NODE_NAME_PROP);\n    if (propMap.get(ZkStateReader.STATE_PROP) != null) {\n      this.state = State.getState((String) propMap.get(ZkStateReader.STATE_PROP));\n    } else {\n      this.state = State.ACTIVE;                         //Default to ACTIVE\n      propMap.put(ZkStateReader.STATE_PROP, state.toString());\n    }\n    type = Type.get((String) propMap.get(ZkStateReader.REPLICA_TYPE));\n  }\n\n","sourceOld":"  public Replica(String name, Map<String,Object> propMap) {\n    super(propMap);\n    this.name = name;\n    this.nodeName = (String) propMap.get(ZkStateReader.NODE_NAME_PROP);\n    if (propMap.get(ZkStateReader.STATE_PROP) != null) {\n      this.state = State.getState((String) propMap.get(ZkStateReader.STATE_PROP));\n    } else {\n      this.state = State.ACTIVE;                         //Default to ACTIVE\n      propMap.put(ZkStateReader.STATE_PROP, state.toString());\n    }\n    type = Type.get((String) propMap.get(ZkStateReader.REPLICA_TYPE));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3aa683bba99315838c968fefedf3d74f44aa993":["560c18d71dad43d675158783c3840f8c80d6d39c","6681d02f2302c363be938426e68f8dfd090cc1bf"],"89f828d954597b98a28942874636f35c719b8a5d":["7e7d59baa18f0aed2bb5f93a76ffce5343aee13d"],"c304e97e7c1d472bc70e801b35ee78583916c6cd":["61c45e99cf6676da48f19d7511c73712ad39402b","1852ff897aecd2f7c8376a02aedfd44104533f28"],"61c45e99cf6676da48f19d7511c73712ad39402b":["a219f1dcad1700e84807666bdbd2b573e8de7021"],"7e7d59baa18f0aed2bb5f93a76ffce5343aee13d":["fa64435b5902ce266c23755a4a00691a3285dab8"],"fa64435b5902ce266c23755a4a00691a3285dab8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"407687e67faf6e1f02a211ca078d8e3eed631027":["7e7d59baa18f0aed2bb5f93a76ffce5343aee13d","89f828d954597b98a28942874636f35c719b8a5d"],"6681d02f2302c363be938426e68f8dfd090cc1bf":["560c18d71dad43d675158783c3840f8c80d6d39c"],"a219f1dcad1700e84807666bdbd2b573e8de7021":["cb4a195b8dc1808cd01748bd2e0fba26ca915d4d"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a219f1dcad1700e84807666bdbd2b573e8de7021","61c45e99cf6676da48f19d7511c73712ad39402b"],"1852ff897aecd2f7c8376a02aedfd44104533f28":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"560c18d71dad43d675158783c3840f8c80d6d39c":["61c45e99cf6676da48f19d7511c73712ad39402b","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"cb4a195b8dc1808cd01748bd2e0fba26ca915d4d":["89f828d954597b98a28942874636f35c719b8a5d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6681d02f2302c363be938426e68f8dfd090cc1bf"]},"commit2Childs":{"d3aa683bba99315838c968fefedf3d74f44aa993":[],"89f828d954597b98a28942874636f35c719b8a5d":["407687e67faf6e1f02a211ca078d8e3eed631027","cb4a195b8dc1808cd01748bd2e0fba26ca915d4d"],"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"61c45e99cf6676da48f19d7511c73712ad39402b":["c304e97e7c1d472bc70e801b35ee78583916c6cd","e9017cf144952056066919f1ebc7897ff9bd71b1","560c18d71dad43d675158783c3840f8c80d6d39c"],"7e7d59baa18f0aed2bb5f93a76ffce5343aee13d":["89f828d954597b98a28942874636f35c719b8a5d","407687e67faf6e1f02a211ca078d8e3eed631027"],"fa64435b5902ce266c23755a4a00691a3285dab8":["7e7d59baa18f0aed2bb5f93a76ffce5343aee13d"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"6681d02f2302c363be938426e68f8dfd090cc1bf":["d3aa683bba99315838c968fefedf3d74f44aa993","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a219f1dcad1700e84807666bdbd2b573e8de7021":["61c45e99cf6676da48f19d7511c73712ad39402b","e9017cf144952056066919f1ebc7897ff9bd71b1"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["1852ff897aecd2f7c8376a02aedfd44104533f28"],"1852ff897aecd2f7c8376a02aedfd44104533f28":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fa64435b5902ce266c23755a4a00691a3285dab8"],"560c18d71dad43d675158783c3840f8c80d6d39c":["d3aa683bba99315838c968fefedf3d74f44aa993","6681d02f2302c363be938426e68f8dfd090cc1bf"],"cb4a195b8dc1808cd01748bd2e0fba26ca915d4d":["a219f1dcad1700e84807666bdbd2b573e8de7021"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3aa683bba99315838c968fefedf3d74f44aa993","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}