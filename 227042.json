{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkNodeProps#ZkNodeProps(String...).mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkNodeProps#ZkNodeProps(String...).mjava","pathOld":"/dev/null","sourceNew":"  public ZkNodeProps(String... keyVals) {\n    if (keyVals.length % 2 != 0) {\n      throw new IllegalArgumentException(\"arguments should be key,value\");\n    }\n    propMap = new HashMap<String,String>();\n    for (int i = 0; i < keyVals.length; i+=2) {\n      propMap.put(keyVals[i], keyVals[i+1]);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkNodeProps#ZkNodeProps(String...).mjava","pathOld":"/dev/null","sourceNew":"  public ZkNodeProps(String... keyVals) {\n    if (keyVals.length % 2 != 0) {\n      throw new IllegalArgumentException(\"arguments should be key,value\");\n    }\n    propMap = new HashMap<String,String>();\n    for (int i = 0; i < keyVals.length; i+=2) {\n      propMap.put(keyVals[i], keyVals[i+1]);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkNodeProps#ZkNodeProps(String...).mjava","pathOld":"/dev/null","sourceNew":"  public ZkNodeProps(String... keyVals) {\n    if (keyVals.length % 2 != 0) {\n      throw new IllegalArgumentException(\"arguments should be key,value\");\n    }\n    propMap = new HashMap<String,String>();\n    for (int i = 0; i < keyVals.length; i+=2) {\n      propMap.put(keyVals[i], keyVals[i+1]);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81363494a48d3b6215bf1e37c1fe754c3e67f3fe","date":1338972402,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkNodeProps#ZkNodeProps(String...).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkNodeProps#ZkNodeProps(String...).mjava","sourceNew":"  /**\n   * Constructor that populates the from array of Strings in form key1, value1,\n   * key2, value2, ..., keyN, valueN\n   */\n  public ZkNodeProps(String... keyVals) {\n    if (keyVals.length % 2 != 0) {\n      throw new IllegalArgumentException(\"arguments should be key,value\");\n    }\n    propMap = new HashMap<String,String>();\n    for (int i = 0; i < keyVals.length; i+=2) {\n      propMap.put(keyVals[i], keyVals[i+1]);\n    }\n  }\n\n","sourceOld":"  public ZkNodeProps(String... keyVals) {\n    if (keyVals.length % 2 != 0) {\n      throw new IllegalArgumentException(\"arguments should be key,value\");\n    }\n    propMap = new HashMap<String,String>();\n    for (int i = 0; i < keyVals.length; i+=2) {\n      propMap.put(keyVals[i], keyVals[i+1]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa64435b5902ce266c23755a4a00691a3285dab8","date":1347243290,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkNodeProps#ZkNodeProps(String...).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkNodeProps#ZkNodeProps(String...).mjava","sourceNew":"  /**\n   * Constructor that populates the from array of Strings in form key1, value1,\n   * key2, value2, ..., keyN, valueN\n   */\n  public ZkNodeProps(String... keyVals) {\n    this( makeMap(keyVals) );\n  }\n\n","sourceOld":"  /**\n   * Constructor that populates the from array of Strings in form key1, value1,\n   * key2, value2, ..., keyN, valueN\n   */\n  public ZkNodeProps(String... keyVals) {\n    if (keyVals.length % 2 != 0) {\n      throw new IllegalArgumentException(\"arguments should be key,value\");\n    }\n    propMap = new HashMap<String,String>();\n    for (int i = 0; i < keyVals.length; i+=2) {\n      propMap.put(keyVals[i], keyVals[i+1]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e7d59baa18f0aed2bb5f93a76ffce5343aee13d","date":1347918051,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkNodeProps#ZkNodeProps(String...).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkNodeProps#ZkNodeProps(String...).mjava","sourceNew":"  /**\n   * Constructor that populates the from array of Strings in form key1, value1,\n   * key2, value2, ..., keyN, valueN\n   */\n  public ZkNodeProps(String... keyVals) {\n    this( makeMap((Object[])keyVals) );\n  }\n\n","sourceOld":"  /**\n   * Constructor that populates the from array of Strings in form key1, value1,\n   * key2, value2, ..., keyN, valueN\n   */\n  public ZkNodeProps(String... keyVals) {\n    this( makeMap(keyVals) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b693a83132c9e45afcd564fd65a25b60ed80388b","date":1436882146,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkNodeProps#ZkNodeProps(String...).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ZkNodeProps#ZkNodeProps(String...).mjava","sourceNew":"  /**\n   * Constructor that populates the from array of Strings in form key1, value1,\n   * key2, value2, ..., keyN, valueN\n   */\n  public ZkNodeProps(String... keyVals) {\n    this( Utils.makeMap((Object[]) keyVals) );\n  }\n\n","sourceOld":"  /**\n   * Constructor that populates the from array of Strings in form key1, value1,\n   * key2, value2, ..., keyN, valueN\n   */\n  public ZkNodeProps(String... keyVals) {\n    this( makeMap((Object[])keyVals) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"81363494a48d3b6215bf1e37c1fe754c3e67f3fe":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"7e7d59baa18f0aed2bb5f93a76ffce5343aee13d":["fa64435b5902ce266c23755a4a00691a3285dab8"],"fa64435b5902ce266c23755a4a00691a3285dab8":["81363494a48d3b6215bf1e37c1fe754c3e67f3fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"b693a83132c9e45afcd564fd65a25b60ed80388b":["7e7d59baa18f0aed2bb5f93a76ffce5343aee13d"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b693a83132c9e45afcd564fd65a25b60ed80388b"]},"commit2Childs":{"81363494a48d3b6215bf1e37c1fe754c3e67f3fe":["fa64435b5902ce266c23755a4a00691a3285dab8"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"7e7d59baa18f0aed2bb5f93a76ffce5343aee13d":["b693a83132c9e45afcd564fd65a25b60ed80388b"],"fa64435b5902ce266c23755a4a00691a3285dab8":["7e7d59baa18f0aed2bb5f93a76ffce5343aee13d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["81363494a48d3b6215bf1e37c1fe754c3e67f3fe","0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d"],"b693a83132c9e45afcd564fd65a25b60ed80388b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}