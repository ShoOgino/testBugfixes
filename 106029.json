{"path":"lucene/core/src/test/org/apache/lucene/index/TestDocInverterPerFieldErrorInfo#testInfoStreamGetsFieldName().mjava","commits":[{"id":"4b9ad5f40b2ccdbcb584fa26d35ff8cebc4fa64e","date":1391042632,"type":0,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocInverterPerFieldErrorInfo#testInfoStreamGetsFieldName().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testInfoStreamGetsFieldName() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer;\n    IndexWriterConfig c = new IndexWriterConfig(TEST_VERSION_CURRENT, new ThrowingAnalyzer());\n    final ByteArrayOutputStream infoBytes = new ByteArrayOutputStream();\n    PrintStream infoPrintStream = new PrintStream(infoBytes, true, \"utf-8\");\n    PrintStreamInfoStream printStreamInfoStream = new PrintStreamInfoStream(infoPrintStream);\n    c.setInfoStream(printStreamInfoStream);\n    writer = new IndexWriter(dir, c);\n    Document doc = new Document();\n    doc.add(newField(\"distinctiveFieldName\", \"aaa \", storedTextType));\n    try {\n      writer.addDocument(doc);\n      fail(\"Failed to fail.\");\n    } catch(BadNews badNews) {\n      infoPrintStream.flush();\n      String infoStream = new String(infoBytes.toByteArray(), \"utf-8\");\n      assertTrue(infoStream.contains(\"distinctiveFieldName\"));\n    }\n\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocInverterPerFieldErrorInfo#testInfoStreamGetsFieldName().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocInverterPerFieldErrorInfo#testInfoStreamGetsFieldName().mjava","sourceNew":"  @Test\n  public void testInfoStreamGetsFieldName() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer;\n    IndexWriterConfig c = new IndexWriterConfig(TEST_VERSION_CURRENT, new ThrowingAnalyzer());\n    final ByteArrayOutputStream infoBytes = new ByteArrayOutputStream();\n    PrintStream infoPrintStream = new PrintStream(infoBytes, true, IOUtils.UTF_8);\n    PrintStreamInfoStream printStreamInfoStream = new PrintStreamInfoStream(infoPrintStream);\n    c.setInfoStream(printStreamInfoStream);\n    writer = new IndexWriter(dir, c);\n    Document doc = new Document();\n    doc.add(newField(\"distinctiveFieldName\", \"aaa \", storedTextType));\n    try {\n      writer.addDocument(doc);\n      fail(\"Failed to fail.\");\n    } catch(BadNews badNews) {\n      infoPrintStream.flush();\n      String infoStream = new String(infoBytes.toByteArray(), IOUtils.UTF_8);\n      assertTrue(infoStream.contains(\"distinctiveFieldName\"));\n    }\n\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testInfoStreamGetsFieldName() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer;\n    IndexWriterConfig c = new IndexWriterConfig(TEST_VERSION_CURRENT, new ThrowingAnalyzer());\n    final ByteArrayOutputStream infoBytes = new ByteArrayOutputStream();\n    PrintStream infoPrintStream = new PrintStream(infoBytes, true, \"utf-8\");\n    PrintStreamInfoStream printStreamInfoStream = new PrintStreamInfoStream(infoPrintStream);\n    c.setInfoStream(printStreamInfoStream);\n    writer = new IndexWriter(dir, c);\n    Document doc = new Document();\n    doc.add(newField(\"distinctiveFieldName\", \"aaa \", storedTextType));\n    try {\n      writer.addDocument(doc);\n      fail(\"Failed to fail.\");\n    } catch(BadNews badNews) {\n      infoPrintStream.flush();\n      String infoStream = new String(infoBytes.toByteArray(), \"utf-8\");\n      assertTrue(infoStream.contains(\"distinctiveFieldName\"));\n    }\n\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocInverterPerFieldErrorInfo#testInfoStreamGetsFieldName().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocInverterPerFieldErrorInfo#testInfoStreamGetsFieldName().mjava","sourceNew":"  @Test\n  public void testInfoStreamGetsFieldName() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer;\n    IndexWriterConfig c = new IndexWriterConfig(TEST_VERSION_CURRENT, new ThrowingAnalyzer());\n    final ByteArrayOutputStream infoBytes = new ByteArrayOutputStream();\n    PrintStream infoPrintStream = new PrintStream(infoBytes, true, IOUtils.UTF_8);\n    PrintStreamInfoStream printStreamInfoStream = new PrintStreamInfoStream(infoPrintStream);\n    c.setInfoStream(printStreamInfoStream);\n    writer = new IndexWriter(dir, c);\n    Document doc = new Document();\n    doc.add(newField(\"distinctiveFieldName\", \"aaa \", storedTextType));\n    try {\n      writer.addDocument(doc);\n      fail(\"Failed to fail.\");\n    } catch(BadNews badNews) {\n      infoPrintStream.flush();\n      String infoStream = new String(infoBytes.toByteArray(), IOUtils.UTF_8);\n      assertTrue(infoStream.contains(\"distinctiveFieldName\"));\n    }\n\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testInfoStreamGetsFieldName() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer;\n    IndexWriterConfig c = new IndexWriterConfig(TEST_VERSION_CURRENT, new ThrowingAnalyzer());\n    final ByteArrayOutputStream infoBytes = new ByteArrayOutputStream();\n    PrintStream infoPrintStream = new PrintStream(infoBytes, true, \"utf-8\");\n    PrintStreamInfoStream printStreamInfoStream = new PrintStreamInfoStream(infoPrintStream);\n    c.setInfoStream(printStreamInfoStream);\n    writer = new IndexWriter(dir, c);\n    Document doc = new Document();\n    doc.add(newField(\"distinctiveFieldName\", \"aaa \", storedTextType));\n    try {\n      writer.addDocument(doc);\n      fail(\"Failed to fail.\");\n    } catch(BadNews badNews) {\n      infoPrintStream.flush();\n      String infoStream = new String(infoBytes.toByteArray(), \"utf-8\");\n      assertTrue(infoStream.contains(\"distinctiveFieldName\"));\n    }\n\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocInverterPerFieldErrorInfo#testInfoStreamGetsFieldName().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocInverterPerFieldErrorInfo#testInfoStreamGetsFieldName().mjava","sourceNew":"  @Test\n  public void testInfoStreamGetsFieldName() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer;\n    IndexWriterConfig c = new IndexWriterConfig(TEST_VERSION_CURRENT, new ThrowingAnalyzer());\n    final ByteArrayOutputStream infoBytes = new ByteArrayOutputStream();\n    PrintStream infoPrintStream = new PrintStream(infoBytes, true, IOUtils.UTF_8);\n    PrintStreamInfoStream printStreamInfoStream = new PrintStreamInfoStream(infoPrintStream);\n    c.setInfoStream(printStreamInfoStream);\n    writer = new IndexWriter(dir, c);\n    Document doc = new Document();\n    doc.add(newField(\"distinctiveFieldName\", \"aaa \", storedTextType));\n    try {\n      writer.addDocument(doc);\n      fail(\"Failed to fail.\");\n    } catch(BadNews badNews) {\n      infoPrintStream.flush();\n      String infoStream = new String(infoBytes.toByteArray(), IOUtils.UTF_8);\n      assertTrue(infoStream.contains(\"distinctiveFieldName\"));\n    }\n\n    writer.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testInfoStreamGetsFieldName() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer;\n    IndexWriterConfig c = new IndexWriterConfig(TEST_VERSION_CURRENT, new ThrowingAnalyzer());\n    final ByteArrayOutputStream infoBytes = new ByteArrayOutputStream();\n    PrintStream infoPrintStream = new PrintStream(infoBytes, true, IOUtils.UTF_8);\n    PrintStreamInfoStream printStreamInfoStream = new PrintStreamInfoStream(infoPrintStream);\n    c.setInfoStream(printStreamInfoStream);\n    writer = new IndexWriter(dir, c);\n    Document doc = new Document();\n    doc.add(newField(\"distinctiveFieldName\", \"aaa \", storedTextType));\n    try {\n      writer.addDocument(doc);\n      fail(\"Failed to fail.\");\n    } catch(BadNews badNews) {\n      infoPrintStream.flush();\n      String infoStream = new String(infoBytes.toByteArray(), IOUtils.UTF_8);\n      assertTrue(infoStream.contains(\"distinctiveFieldName\"));\n    }\n\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocInverterPerFieldErrorInfo#testInfoStreamGetsFieldName().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocInverterPerFieldErrorInfo#testInfoStreamGetsFieldName().mjava","sourceNew":"  @Test\n  public void testInfoStreamGetsFieldName() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer;\n    IndexWriterConfig c = new IndexWriterConfig(new ThrowingAnalyzer());\n    final ByteArrayOutputStream infoBytes = new ByteArrayOutputStream();\n    PrintStream infoPrintStream = new PrintStream(infoBytes, true, IOUtils.UTF_8);\n    PrintStreamInfoStream printStreamInfoStream = new PrintStreamInfoStream(infoPrintStream);\n    c.setInfoStream(printStreamInfoStream);\n    writer = new IndexWriter(dir, c);\n    Document doc = new Document();\n    doc.add(newField(\"distinctiveFieldName\", \"aaa \", storedTextType));\n    try {\n      writer.addDocument(doc);\n      fail(\"Failed to fail.\");\n    } catch(BadNews badNews) {\n      infoPrintStream.flush();\n      String infoStream = new String(infoBytes.toByteArray(), IOUtils.UTF_8);\n      assertTrue(infoStream.contains(\"distinctiveFieldName\"));\n    }\n\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testInfoStreamGetsFieldName() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer;\n    IndexWriterConfig c = new IndexWriterConfig(TEST_VERSION_CURRENT, new ThrowingAnalyzer());\n    final ByteArrayOutputStream infoBytes = new ByteArrayOutputStream();\n    PrintStream infoPrintStream = new PrintStream(infoBytes, true, IOUtils.UTF_8);\n    PrintStreamInfoStream printStreamInfoStream = new PrintStreamInfoStream(infoPrintStream);\n    c.setInfoStream(printStreamInfoStream);\n    writer = new IndexWriter(dir, c);\n    Document doc = new Document();\n    doc.add(newField(\"distinctiveFieldName\", \"aaa \", storedTextType));\n    try {\n      writer.addDocument(doc);\n      fail(\"Failed to fail.\");\n    } catch(BadNews badNews) {\n      infoPrintStream.flush();\n      String infoStream = new String(infoBytes.toByteArray(), IOUtils.UTF_8);\n      assertTrue(infoStream.contains(\"distinctiveFieldName\"));\n    }\n\n    writer.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocInverterPerFieldErrorInfo#testInfoStreamGetsFieldName().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocInverterPerFieldErrorInfo#testInfoStreamGetsFieldName().mjava","sourceNew":"  @Test\n  public void testInfoStreamGetsFieldName() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer;\n    IndexWriterConfig c = new IndexWriterConfig(new ThrowingAnalyzer());\n    final ByteArrayOutputStream infoBytes = new ByteArrayOutputStream();\n    PrintStream infoPrintStream = new PrintStream(infoBytes, true, IOUtils.UTF_8);\n    PrintStreamInfoStream printStreamInfoStream = new PrintStreamInfoStream(infoPrintStream);\n    c.setInfoStream(printStreamInfoStream);\n    writer = new IndexWriter(dir, c);\n    Document doc = new Document();\n    doc.add(newField(\"distinctiveFieldName\", \"aaa \", storedTextType));\n    expectThrows(BadNews.class, () -> {\n      writer.addDocument(doc);\n    });\n    infoPrintStream.flush();\n    String infoStream = new String(infoBytes.toByteArray(), IOUtils.UTF_8);\n    assertTrue(infoStream.contains(\"distinctiveFieldName\"));\n\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testInfoStreamGetsFieldName() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter writer;\n    IndexWriterConfig c = new IndexWriterConfig(new ThrowingAnalyzer());\n    final ByteArrayOutputStream infoBytes = new ByteArrayOutputStream();\n    PrintStream infoPrintStream = new PrintStream(infoBytes, true, IOUtils.UTF_8);\n    PrintStreamInfoStream printStreamInfoStream = new PrintStreamInfoStream(infoPrintStream);\n    c.setInfoStream(printStreamInfoStream);\n    writer = new IndexWriter(dir, c);\n    Document doc = new Document();\n    doc.add(newField(\"distinctiveFieldName\", \"aaa \", storedTextType));\n    try {\n      writer.addDocument(doc);\n      fail(\"Failed to fail.\");\n    } catch(BadNews badNews) {\n      infoPrintStream.flush();\n      String infoStream = new String(infoBytes.toByteArray(), IOUtils.UTF_8);\n      assertTrue(infoStream.contains(\"distinctiveFieldName\"));\n    }\n\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":["4b9ad5f40b2ccdbcb584fa26d35ff8cebc4fa64e","7d89d7e4e5101347833eea558851bf4209218619"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["4b9ad5f40b2ccdbcb584fa26d35ff8cebc4fa64e","7d89d7e4e5101347833eea558851bf4209218619"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["7d89d7e4e5101347833eea558851bf4209218619"],"7d89d7e4e5101347833eea558851bf4209218619":["4b9ad5f40b2ccdbcb584fa26d35ff8cebc4fa64e"],"4b9ad5f40b2ccdbcb584fa26d35ff8cebc4fa64e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4b9ad5f40b2ccdbcb584fa26d35ff8cebc4fa64e"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["05fe562aa248790944d43cdd478f512572835ba0"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"4b9ad5f40b2ccdbcb584fa26d35ff8cebc4fa64e":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}