{"path":"lucene/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(Weight,Similarity,int,List[Scorer],List[Scorer],int).mjava","commits":[{"id":"e4946500259641951dbd7f8a61956bf14bef3f60","date":1283284212,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(Weight,Similarity,int,List[Scorer],List[Scorer],int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(Similarity,int,List[Scorer],List[Scorer],int).mjava","sourceNew":"  BooleanScorer(Weight weight, Similarity similarity, int minNrShouldMatch,\n      List<Scorer> optionalScorers, List<Scorer> prohibitedScorers, int maxCoord) throws IOException {\n    super(similarity, weight);\n    this.minNrShouldMatch = minNrShouldMatch;\n\n    if (optionalScorers != null && optionalScorers.size() > 0) {\n      for (Scorer scorer : optionalScorers) {\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n        }\n      }\n    }\n    \n    if (prohibitedScorers != null && prohibitedScorers.size() > 0) {\n      for (Scorer scorer : prohibitedScorers) {\n        int mask = nextMask;\n        nextMask = nextMask << 1;\n        prohibitedMask |= mask;                     // update prohibited mask\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(mask), scorers);\n        }\n      }\n    }\n\n    coordFactors = new float[optionalScorers.size() + 1];\n    Similarity sim = getSimilarity();\n    for (int i = 0; i < coordFactors.length; i++) {\n      coordFactors[i] = sim.coord(i, maxCoord); \n    }\n  }\n\n","sourceOld":"  BooleanScorer(Similarity similarity, int minNrShouldMatch,\n      List<Scorer> optionalScorers, List<Scorer> prohibitedScorers, int maxCoord) throws IOException {\n    super(similarity);\n    this.minNrShouldMatch = minNrShouldMatch;\n\n    if (optionalScorers != null && optionalScorers.size() > 0) {\n      for (Scorer scorer : optionalScorers) {\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n        }\n      }\n    }\n    \n    if (prohibitedScorers != null && prohibitedScorers.size() > 0) {\n      for (Scorer scorer : prohibitedScorers) {\n        int mask = nextMask;\n        nextMask = nextMask << 1;\n        prohibitedMask |= mask;                     // update prohibited mask\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(mask), scorers);\n        }\n      }\n    }\n\n    coordFactors = new float[optionalScorers.size() + 1];\n    Similarity sim = getSimilarity();\n    for (int i = 0; i < coordFactors.length; i++) {\n      coordFactors[i] = sim.coord(i, maxCoord); \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(Weight,Similarity,int,List[Scorer],List[Scorer],int).mjava","pathOld":"/dev/null","sourceNew":"  BooleanScorer(Weight weight, Similarity similarity, int minNrShouldMatch,\n      List<Scorer> optionalScorers, List<Scorer> prohibitedScorers, int maxCoord) throws IOException {\n    super(similarity, weight);\n    this.minNrShouldMatch = minNrShouldMatch;\n\n    if (optionalScorers != null && optionalScorers.size() > 0) {\n      for (Scorer scorer : optionalScorers) {\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n        }\n      }\n    }\n    \n    if (prohibitedScorers != null && prohibitedScorers.size() > 0) {\n      for (Scorer scorer : prohibitedScorers) {\n        int mask = nextMask;\n        nextMask = nextMask << 1;\n        prohibitedMask |= mask;                     // update prohibited mask\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(mask), scorers);\n        }\n      }\n    }\n\n    coordFactors = new float[optionalScorers.size() + 1];\n    Similarity sim = getSimilarity();\n    for (int i = 0; i < coordFactors.length; i++) {\n      coordFactors[i] = sim.coord(i, maxCoord); \n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e00f80591de714c6975f454e33e0fa5218b5902","date":1294514405,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(Weight,boolean,Similarity,int,List[Scorer],List[Scorer],int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(Weight,Similarity,int,List[Scorer],List[Scorer],int).mjava","sourceNew":"  BooleanScorer(Weight weight, boolean disableCoord, Similarity similarity, int minNrShouldMatch,\n      List<Scorer> optionalScorers, List<Scorer> prohibitedScorers, int maxCoord) throws IOException {\n    super(null, weight);   // Similarity not used\n    this.minNrShouldMatch = minNrShouldMatch;\n\n    if (optionalScorers != null && optionalScorers.size() > 0) {\n      for (Scorer scorer : optionalScorers) {\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n        }\n      }\n    }\n    \n    if (prohibitedScorers != null && prohibitedScorers.size() > 0) {\n      for (Scorer scorer : prohibitedScorers) {\n        int mask = nextMask;\n        nextMask = nextMask << 1;\n        prohibitedMask |= mask;                     // update prohibited mask\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(mask), scorers);\n        }\n      }\n    }\n\n    coordFactors = new float[optionalScorers.size() + 1];\n    for (int i = 0; i < coordFactors.length; i++) {\n      coordFactors[i] = disableCoord ? 1.0f : similarity.coord(i, maxCoord); \n    }\n  }\n\n","sourceOld":"  BooleanScorer(Weight weight, Similarity similarity, int minNrShouldMatch,\n      List<Scorer> optionalScorers, List<Scorer> prohibitedScorers, int maxCoord) throws IOException {\n    super(similarity, weight);\n    this.minNrShouldMatch = minNrShouldMatch;\n\n    if (optionalScorers != null && optionalScorers.size() > 0) {\n      for (Scorer scorer : optionalScorers) {\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n        }\n      }\n    }\n    \n    if (prohibitedScorers != null && prohibitedScorers.size() > 0) {\n      for (Scorer scorer : prohibitedScorers) {\n        int mask = nextMask;\n        nextMask = nextMask << 1;\n        prohibitedMask |= mask;                     // update prohibited mask\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(mask), scorers);\n        }\n      }\n    }\n\n    coordFactors = new float[optionalScorers.size() + 1];\n    Similarity sim = getSimilarity();\n    for (int i = 0; i < coordFactors.length; i++) {\n      coordFactors[i] = sim.coord(i, maxCoord); \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(Weight,Similarity,int,List[Scorer],List[Scorer],int).mjava","sourceNew":null,"sourceOld":"  BooleanScorer(Weight weight, Similarity similarity, int minNrShouldMatch,\n      List<Scorer> optionalScorers, List<Scorer> prohibitedScorers, int maxCoord) throws IOException {\n    super(similarity, weight);\n    this.minNrShouldMatch = minNrShouldMatch;\n\n    if (optionalScorers != null && optionalScorers.size() > 0) {\n      for (Scorer scorer : optionalScorers) {\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n        }\n      }\n    }\n    \n    if (prohibitedScorers != null && prohibitedScorers.size() > 0) {\n      for (Scorer scorer : prohibitedScorers) {\n        int mask = nextMask;\n        nextMask = nextMask << 1;\n        prohibitedMask |= mask;                     // update prohibited mask\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(mask), scorers);\n        }\n      }\n    }\n\n    coordFactors = new float[optionalScorers.size() + 1];\n    Similarity sim = getSimilarity();\n    for (int i = 0; i < coordFactors.length; i++) {\n      coordFactors[i] = sim.coord(i, maxCoord); \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(Weight,Similarity,int,List[Scorer],List[Scorer],int).mjava","sourceNew":null,"sourceOld":"  BooleanScorer(Weight weight, Similarity similarity, int minNrShouldMatch,\n      List<Scorer> optionalScorers, List<Scorer> prohibitedScorers, int maxCoord) throws IOException {\n    super(similarity, weight);\n    this.minNrShouldMatch = minNrShouldMatch;\n\n    if (optionalScorers != null && optionalScorers.size() > 0) {\n      for (Scorer scorer : optionalScorers) {\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n        }\n      }\n    }\n    \n    if (prohibitedScorers != null && prohibitedScorers.size() > 0) {\n      for (Scorer scorer : prohibitedScorers) {\n        int mask = nextMask;\n        nextMask = nextMask << 1;\n        prohibitedMask |= mask;                     // update prohibited mask\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(mask), scorers);\n        }\n      }\n    }\n\n    coordFactors = new float[optionalScorers.size() + 1];\n    Similarity sim = getSimilarity();\n    for (int i = 0; i < coordFactors.length; i++) {\n      coordFactors[i] = sim.coord(i, maxCoord); \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e00f80591de714c6975f454e33e0fa5218b5902":["e4946500259641951dbd7f8a61956bf14bef3f60"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["e4946500259641951dbd7f8a61956bf14bef3f60","3e00f80591de714c6975f454e33e0fa5218b5902"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e4946500259641951dbd7f8a61956bf14bef3f60"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3e00f80591de714c6975f454e33e0fa5218b5902"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e00f80591de714c6975f454e33e0fa5218b5902"],"e4946500259641951dbd7f8a61956bf14bef3f60":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3e00f80591de714c6975f454e33e0fa5218b5902":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","e4946500259641951dbd7f8a61956bf14bef3f60"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"e4946500259641951dbd7f8a61956bf14bef3f60":["3e00f80591de714c6975f454e33e0fa5218b5902","29ef99d61cda9641b6250bf9567329a6e65f901d","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}