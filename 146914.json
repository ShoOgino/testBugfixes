{"path":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#before(IntervalsSource,IntervalsSource).mjava","commits":[{"id":"798f4c48c9561bff1dcf2652d51afc7dd0ceae3e","date":1546868039,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#before(IntervalsSource,IntervalsSource).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns intervals from the source that appear before intervals from the reference\n   */\n  public static IntervalsSource before(IntervalsSource source, IntervalsSource reference) {\n    return new ConjunctionIntervalsSource(Arrays.asList(source,\n        Intervals.extend(new OffsetIntervalsSource(reference, true), Integer.MAX_VALUE, 0)),\n        IntervalFunction.CONTAINED_BY);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"362cb5d910af28f1dadaddc4c7670d7d166b23c2","date":1547647156,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#before(IntervalsSource,IntervalsSource).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#before(IntervalsSource,IntervalsSource).mjava","sourceNew":"  /**\n   * Returns intervals from the source that appear before intervals from the reference\n   */\n  public static IntervalsSource before(IntervalsSource source, IntervalsSource reference) {\n    return new FilteringConjunctionIntervalsSource(source,\n        Intervals.extend(new OffsetIntervalsSource(reference, true), Integer.MAX_VALUE, 0),\n        IntervalFunction.CONTAINED_BY);\n  }\n\n","sourceOld":"  /**\n   * Returns intervals from the source that appear before intervals from the reference\n   */\n  public static IntervalsSource before(IntervalsSource source, IntervalsSource reference) {\n    return new ConjunctionIntervalsSource(Arrays.asList(source,\n        Intervals.extend(new OffsetIntervalsSource(reference, true), Integer.MAX_VALUE, 0)),\n        IntervalFunction.CONTAINED_BY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde","date":1553685823,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#before(IntervalsSource,IntervalsSource).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#before(IntervalsSource,IntervalsSource).mjava","sourceNew":"  /**\n   * Returns intervals from the source that appear before intervals from the reference\n   */\n  public static IntervalsSource before(IntervalsSource source, IntervalsSource reference) {\n    return ContainedByIntervalsSource.build(source,\n        Intervals.extend(new OffsetIntervalsSource(reference, true), Integer.MAX_VALUE, 0));\n  }\n\n","sourceOld":"  /**\n   * Returns intervals from the source that appear before intervals from the reference\n   */\n  public static IntervalsSource before(IntervalsSource source, IntervalsSource reference) {\n    return new FilteringConjunctionIntervalsSource(source,\n        Intervals.extend(new OffsetIntervalsSource(reference, true), Integer.MAX_VALUE, 0),\n        IntervalFunction.CONTAINED_BY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97ee2282ff806e9bc9d705f389cf40451ab81c3e","date":1561721333,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/intervals/Intervals#before(IntervalsSource,IntervalsSource).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#before(IntervalsSource,IntervalsSource).mjava","sourceNew":"  /**\n   * Returns intervals from the source that appear before intervals from the reference\n   */\n  public static IntervalsSource before(IntervalsSource source, IntervalsSource reference) {\n    return ContainedByIntervalsSource.build(source,\n        Intervals.extend(new OffsetIntervalsSource(reference, true), Integer.MAX_VALUE, 0));\n  }\n\n","sourceOld":"  /**\n   * Returns intervals from the source that appear before intervals from the reference\n   */\n  public static IntervalsSource before(IntervalsSource source, IntervalsSource reference) {\n    return ContainedByIntervalsSource.build(source,\n        Intervals.extend(new OffsetIntervalsSource(reference, true), Integer.MAX_VALUE, 0));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde"],"4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde":["362cb5d910af28f1dadaddc4c7670d7d166b23c2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"362cb5d910af28f1dadaddc4c7670d7d166b23c2":["798f4c48c9561bff1dcf2652d51afc7dd0ceae3e"],"798f4c48c9561bff1dcf2652d51afc7dd0ceae3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"]},"commit2Childs":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["798f4c48c9561bff1dcf2652d51afc7dd0ceae3e"],"362cb5d910af28f1dadaddc4c7670d7d166b23c2":["4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde"],"798f4c48c9561bff1dcf2652d51afc7dd0ceae3e":["362cb5d910af28f1dadaddc4c7670d7d166b23c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}