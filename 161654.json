{"path":"src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","commits":[{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"client/java/solrj/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n  }\n\n","sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","pathOld":"src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties#testProperties().mjava","sourceNew":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n  }\n\n","sourceOld":"  @Test\n  public void testProperties() throws Exception {\n    UpdateRequest up = new UpdateRequest();\n    up.setAction(ACTION.COMMIT, true, true);\n    up.deleteByQuery(\"*:*\");\n    up.process(getSolrCore0());\n    up.process(getSolrCore1());\n    up.clear();\n\n    // Add something to each core\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.setField(\"id\", \"AAA\");\n    doc.setField(\"core0\", \"yup stopfra stopfrb stopena stopenb\");\n\n    // Add to core0\n    up.add(doc);\n    up.process(getSolrCore0());\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore1());\n      fail(\"Can't add core0 field to core1!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // Add to core1\n    doc.setField(\"id\", \"BBB\");\n    doc.setField(\"core1\", \"yup stopfra stopfrb stopena stopenb\");\n    doc.removeField(\"core0\");\n    up.add(doc);\n    up.process(getSolrCore1());\n\n    // You can't add it to core1\n    try {\n      up.process(getSolrCore0());\n      fail(\"Can't add core1 field to core0!\");\n    }\n    catch (Exception ex) {\n    }\n\n    // now Make sure AAA is in 0 and BBB in 1\n    SolrQuery q = new SolrQuery();\n    QueryRequest r = new QueryRequest(q);\n    q.setQuery(\"id:AAA\");\n    assertEquals(1, r.process(getSolrCore0()).getResults().size());\n    assertEquals(0, r.process(getSolrCore1()).getResults().size());\n\n    // Now test Changing the default core\n    assertEquals(1, getSolrCore0().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(0, getSolrCore0().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    assertEquals(0, getSolrCore1().query(new SolrQuery(\"id:AAA\")).getResults().size());\n    assertEquals(1, getSolrCore1().query(new SolrQuery(\"id:BBB\")).getResults().size());\n\n    // Now test reloading it should have a newer open time\n    String name = \"core0\";\n    SolrServer coreadmin = getSolrAdmin();\n    CoreAdminResponse mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long before = mcr.getStartTime(name).getTime();\n    CoreAdminRequest.reloadCore(name, coreadmin);\n\n    mcr = CoreAdminRequest.getStatus(name, coreadmin);\n    long after = mcr.getStartTime(name).getTime();\n    assertTrue(\"should have more recent time: \" + after + \",\" + before, after > before);\n\n    mcr = CoreAdminRequest.persist(\"solr-persist.xml\", coreadmin);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}