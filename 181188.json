{"path":"lucene/src/java/org/apache/lucene/index/codecs/DocValuesConsumer#merge(MergeState).mjava","commits":[{"id":"d47326e0c6ce589b6962777df409aad0550940fa","date":1304584540,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DocValuesConsumer#merge(MergeState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/docvalues/DocValuesConsumer#merge(MergeState).mjava","sourceNew":"  /**\n   * Merges the given {@link MergeState} into this {@link DocValuesConsumer}.\n   * {@link MergeState#docBase} must always be increasing. Merging segments out\n   * of order is not supported.\n   * \n   * @param mergeState\n   *          the {@link MergeState} to merge\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  protected abstract void merge(MergeState mergeState) throws IOException;\n\n","sourceOld":"  /**\n   * Merges the given {@link MergeState} into this {@link DocValuesConsumer}.\n   * {@link MergeState#docBase} must always be increasing. Merging segments out\n   * of order is not supported.\n   * \n   * @param mergeState\n   *          the {@link MergeState} to merge\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  protected abstract void merge(MergeState mergeState) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DocValuesConsumer#merge(MergeState).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Merges the given {@link MergeState} into this {@link DocValuesConsumer}.\n   * {@link MergeState#docBase} must always be increasing. Merging segments out\n   * of order is not supported.\n   * \n   * @param mergeState\n   *          the {@link MergeState} to merge\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  protected abstract void merge(MergeState mergeState) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DocValuesConsumer#merge(MergeState).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Merges the given {@link MergeState} into this {@link DocValuesConsumer}.\n   * {@link MergeState#docBase} must always be increasing. Merging segments out\n   * of order is not supported.\n   * \n   * @param mergeState\n   *          the {@link MergeState} to merge\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  protected abstract void merge(MergeState mergeState) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32aca6bb0a6aa0a1813e7d035ac0e039f54269f4","date":1318260487,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DocValuesConsumer#merge(MergeState).mjava","sourceNew":null,"sourceOld":"  /**\n   * Merges the given {@link MergeState} into this {@link DocValuesConsumer}.\n   * {@link MergeState#docBase} must always be increasing. Merging segments out\n   * of order is not supported.\n   * \n   * @param mergeState\n   *          the {@link MergeState} to merge\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  protected abstract void merge(MergeState mergeState) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d47326e0c6ce589b6962777df409aad0550940fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"32aca6bb0a6aa0a1813e7d035ac0e039f54269f4":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["32aca6bb0a6aa0a1813e7d035ac0e039f54269f4"],"d47326e0c6ce589b6962777df409aad0550940fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","32aca6bb0a6aa0a1813e7d035ac0e039f54269f4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","d47326e0c6ce589b6962777df409aad0550940fa"],"32aca6bb0a6aa0a1813e7d035ac0e039f54269f4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d47326e0c6ce589b6962777df409aad0550940fa":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}