{"path":"solr/core/src/java/org/apache/solr/update/PeerSync#percentile(List[Long],float).mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#percentile(List[Long],float).mjava","pathOld":"/dev/null","sourceNew":"  public long percentile(List<Long> arr, float frac) {\n    int elem = (int) (arr.size() * frac);\n    return Math.abs(arr.get(elem));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#percentile(List[Long],float).mjava","pathOld":"/dev/null","sourceNew":"  public long percentile(List<Long> arr, float frac) {\n    int elem = (int) (arr.size() * frac);\n    return Math.abs(arr.get(elem));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#percentile(List[Long],float).mjava","pathOld":"/dev/null","sourceNew":"  public long percentile(List<Long> arr, float frac) {\n    int elem = (int) (arr.size() * frac);\n    return Math.abs(arr.get(elem));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7","date":1529486762,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#percentile(List[Long],float).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#percentile(List[Long],float).mjava","sourceNew":"  public static long percentile(List<Long> arr, float frac) {\n    int elem = (int) (arr.size() * frac);\n    return Math.abs(arr.get(elem));\n  }\n\n","sourceOld":"  public long percentile(List<Long> arr, float frac) {\n    int elem = (int) (arr.size() * frac);\n    return Math.abs(arr.get(elem));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#percentile(List[Long],float).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#percentile(List[Long],float).mjava","sourceNew":"  public static long percentile(List<Long> arr, float frac) {\n    int elem = (int) (arr.size() * frac);\n    return Math.abs(arr.get(elem));\n  }\n\n","sourceOld":"  public long percentile(List<Long> arr, float frac) {\n    int elem = (int) (arr.size() * frac);\n    return Math.abs(arr.get(elem));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync#percentile(List[Long],float).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync#percentile(List[Long],float).mjava","sourceNew":"  public static long percentile(List<Long> arr, float frac) {\n    int elem = (int) (arr.size() * frac);\n    return Math.abs(arr.get(elem));\n  }\n\n","sourceOld":"  public long percentile(List<Long> arr, float frac) {\n    int elem = (int) (arr.size() * frac);\n    return Math.abs(arr.get(elem));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f","ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7"],"ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f","ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}