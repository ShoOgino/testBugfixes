{"path":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesWriter.NumericIterator#next().mjava","commits":[{"id":"75a2078fb7a7fce496e15f7a7ea829a778def1a5","date":1359508846,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesWriter.NumericIterator#next().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Number next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      long value;\n      if (upto < size) {\n        value = iter.next();\n      } else {\n        value = 0;\n      }\n      upto++;\n      // TODO: make reusable Number\n      return value;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesWriter.NumericIterator#next().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Number next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      long value;\n      if (upto < size) {\n        value = iter.next();\n      } else {\n        value = 0;\n      }\n      upto++;\n      // TODO: make reusable Number\n      return value;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9faa42f41b6adb98daf009cf99a4ee239189e469","date":1376648738,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesWriter.NumericIterator#next().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesWriter.NumericIterator#next().mjava","sourceNew":"    @Override\n    public Number next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      Long value;\n      if (upto < size) {\n        long v = iter.next();\n        if (!trackDocsWithField || docsWithField.get(upto)) {\n          value = v;\n        } else {\n          value = null;\n        }\n      } else {\n        value = trackDocsWithField ? null : MISSING;\n      }\n      upto++;\n      return value;\n    }\n\n","sourceOld":"    @Override\n    public Number next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      long value;\n      if (upto < size) {\n        value = iter.next();\n      } else {\n        value = 0;\n      }\n      upto++;\n      // TODO: make reusable Number\n      return value;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesWriter.NumericIterator#next().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesWriter.NumericIterator#next().mjava","sourceNew":"    @Override\n    public Number next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      Long value;\n      if (upto < size) {\n        long v = iter.next();\n        if (!trackDocsWithField || docsWithField.get(upto)) {\n          value = v;\n        } else {\n          value = null;\n        }\n      } else {\n        value = trackDocsWithField ? null : MISSING;\n      }\n      upto++;\n      return value;\n    }\n\n","sourceOld":"    @Override\n    public Number next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      long value;\n      if (upto < size) {\n        value = iter.next();\n      } else {\n        value = 0;\n      }\n      upto++;\n      // TODO: make reusable Number\n      return value;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesWriter.NumericIterator#next().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesWriter.NumericIterator#next().mjava","sourceNew":"    @Override\n    public Number next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      Long value;\n      if (upto < size) {\n        long v = iter.next();\n        if (!trackDocsWithField || docsWithField.get(upto)) {\n          value = v;\n        } else {\n          value = null;\n        }\n      } else {\n        value = trackDocsWithField ? null : MISSING;\n      }\n      upto++;\n      return value;\n    }\n\n","sourceOld":"    @Override\n    public Number next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      long value;\n      if (upto < size) {\n        value = iter.next();\n      } else {\n        value = 0;\n      }\n      upto++;\n      // TODO: make reusable Number\n      return value;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3995f83351082af8ae83bb017e63c56818fc1568","date":1392047063,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesWriter.NumericIterator#next().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesWriter.NumericIterator#next().mjava","sourceNew":"    @Override\n    public Number next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      Long value;\n      if (upto < size) {\n        long v = iter.next();\n        if (docsWithField == null || docsWithField.get(upto)) {\n          value = v;\n        } else {\n          value = null;\n        }\n      } else {\n        value = docsWithField != null ? null : MISSING;\n      }\n      upto++;\n      return value;\n    }\n\n","sourceOld":"    @Override\n    public Number next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      Long value;\n      if (upto < size) {\n        long v = iter.next();\n        if (!trackDocsWithField || docsWithField.get(upto)) {\n          value = v;\n        } else {\n          value = null;\n        }\n      } else {\n        value = trackDocsWithField ? null : MISSING;\n      }\n      upto++;\n      return value;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22a2e66dfda83847e80095b8693c660742ab3e9c","date":1408628796,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesWriter.NumericIterator#next().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesWriter.NumericIterator#next().mjava","sourceNew":"    @Override\n    public Number next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      Long value;\n      if (upto < size) {\n        long v = iter.next();\n        if (docsWithField.get(upto)) {\n          value = v;\n        } else {\n          value = null;\n        }\n      } else {\n        value = null;\n      }\n      upto++;\n      return value;\n    }\n\n","sourceOld":"    @Override\n    public Number next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      Long value;\n      if (upto < size) {\n        long v = iter.next();\n        if (docsWithField == null || docsWithField.get(upto)) {\n          value = v;\n        } else {\n          value = null;\n        }\n      } else {\n        value = docsWithField != null ? null : MISSING;\n      }\n      upto++;\n      return value;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesWriter.NumericIterator#next().mjava","sourceNew":null,"sourceOld":"    @Override\n    public Number next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      Long value;\n      if (upto < size) {\n        long v = iter.next();\n        if (docsWithField.get(upto)) {\n          value = v;\n        } else {\n          value = null;\n        }\n      } else {\n        value = null;\n      }\n      upto++;\n      return value;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesWriter.NumericIterator#next().mjava","sourceNew":null,"sourceOld":"    @Override\n    public Number next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      Long value;\n      if (upto < size) {\n        long v = iter.next();\n        if (docsWithField.get(upto)) {\n          value = v;\n        } else {\n          value = null;\n        }\n      } else {\n        value = null;\n      }\n      upto++;\n      return value;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesWriter.NumericIterator#next().mjava","sourceNew":null,"sourceOld":"    @Override\n    public Number next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      Long value;\n      if (upto < size) {\n        long v = iter.next();\n        if (docsWithField.get(upto)) {\n          value = v;\n        } else {\n          value = null;\n        }\n      } else {\n        value = null;\n      }\n      upto++;\n      return value;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","75a2078fb7a7fce496e15f7a7ea829a778def1a5"],"9faa42f41b6adb98daf009cf99a4ee239189e469":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["d4d69c535930b5cce125cff868d40f6373dc27d4","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["22a2e66dfda83847e80095b8693c660742ab3e9c","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["22a2e66dfda83847e80095b8693c660742ab3e9c"],"22a2e66dfda83847e80095b8693c660742ab3e9c":["3995f83351082af8ae83bb017e63c56818fc1568"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["d4d69c535930b5cce125cff868d40f6373dc27d4","9faa42f41b6adb98daf009cf99a4ee239189e469"],"75a2078fb7a7fce496e15f7a7ea829a778def1a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3995f83351082af8ae83bb017e63c56818fc1568":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["22a2e66dfda83847e80095b8693c660742ab3e9c","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["9faa42f41b6adb98daf009cf99a4ee239189e469","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"9faa42f41b6adb98daf009cf99a4ee239189e469":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","75a2078fb7a7fce496e15f7a7ea829a778def1a5"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"22a2e66dfda83847e80095b8693c660742ab3e9c":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","3995f83351082af8ae83bb017e63c56818fc1568"],"75a2078fb7a7fce496e15f7a7ea829a778def1a5":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"3995f83351082af8ae83bb017e63c56818fc1568":["22a2e66dfda83847e80095b8693c660742ab3e9c"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}