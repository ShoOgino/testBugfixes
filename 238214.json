{"path":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","commits":[{"id":"e886fb6afe33a296f3d21a4c18694ecb64545fab","date":1226485789,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    DataImporter.RequestParams rp = new DataImporter.RequestParams(createMap(\"command\", \"full-import\"));\n    List<Map<String, Object>> l = new ArrayList<Map<String, Object>>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw, new HashMap<String, String>());\n    Assert.assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db6dfac30d1553e9356900c2b76b768139483a62","date":1230619368,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","sourceNew":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    DataImporter.RequestParams rp = new DataImporter.RequestParams(createMap(\"command\", \"full-import\"));\n    List<Map<String, Object>> l = new ArrayList<Map<String, Object>>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    Assert.assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","sourceOld":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    DataImporter.RequestParams rp = new DataImporter.RequestParams(createMap(\"command\", \"full-import\"));\n    List<Map<String, Object>> l = new ArrayList<Map<String, Object>>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw, new HashMap<String, String>());\n    Assert.assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestFieldReader#simple().mjava","sourceNew":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    DataImporter.RequestParams rp = new DataImporter.RequestParams(createMap(\"command\", \"full-import\"));\n    List<Map<String, Object>> l = new ArrayList<Map<String, Object>>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    Assert.assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","sourceOld":"  @Test\n  public void simple() {\n    DataImporter di = new DataImporter();\n    di.loadAndInit(config);\n    TestDocBuilder.SolrWriterImpl sw = new TestDocBuilder.SolrWriterImpl();\n    DataImporter.RequestParams rp = new DataImporter.RequestParams(createMap(\"command\", \"full-import\"));\n    List<Map<String, Object>> l = new ArrayList<Map<String, Object>>();\n    l.add(createMap(\"xml\", xml));\n    MockDataSource.setIterator(\"select * from a\", l.iterator());\n    di.runCmd(rp, sw);\n    Assert.assertEquals(sw.docs.get(0).getFieldValue(\"y\"), \"Hello\");\n    MockDataSource.clearCache();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["db6dfac30d1553e9356900c2b76b768139483a62"],"db6dfac30d1553e9356900c2b76b768139483a62":["e886fb6afe33a296f3d21a4c18694ecb64545fab"],"e886fb6afe33a296f3d21a4c18694ecb64545fab":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e886fb6afe33a296f3d21a4c18694ecb64545fab"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"db6dfac30d1553e9356900c2b76b768139483a62":["ad94625fb8d088209f46650c8097196fec67f00c"],"e886fb6afe33a296f3d21a4c18694ecb64545fab":["db6dfac30d1553e9356900c2b76b768139483a62"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}