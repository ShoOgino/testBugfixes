{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#load(InputStream).mjava","commits":[{"id":"6ce825e9276493231308229152c48f755ce1a0a5","date":1348871483,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#load(InputStream).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean load(InputStream input) throws IOException {\n    try {\n      this.fst = new FST<Pair<Long,BytesRef>>(new InputStreamDataInput(input), new PairOutputs<Long,BytesRef>(PositiveIntOutputs.getSingleton(true), ByteSequenceOutputs.getSingleton()));\n    } finally {\n      IOUtils.close(input);\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["414aae1db83a83d247caa9514e383e4ca3d43da5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"414aae1db83a83d247caa9514e383e4ca3d43da5","date":1350824365,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#load(InputStream).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#load(InputStream).mjava","sourceNew":"  @Override\n  public boolean load(InputStream input) throws IOException {\n    DataInput dataIn = new InputStreamDataInput(input);\n    try {\n      this.fst = new FST<Pair<Long,BytesRef>>(dataIn, new PairOutputs<Long,BytesRef>(PositiveIntOutputs.getSingleton(true), ByteSequenceOutputs.getSingleton()));\n      maxAnalyzedPathsForOneInput = dataIn.readVInt();\n    } finally {\n      IOUtils.close(input);\n    }\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean load(InputStream input) throws IOException {\n    try {\n      this.fst = new FST<Pair<Long,BytesRef>>(new InputStreamDataInput(input), new PairOutputs<Long,BytesRef>(PositiveIntOutputs.getSingleton(true), ByteSequenceOutputs.getSingleton()));\n    } finally {\n      IOUtils.close(input);\n    }\n    return true;\n  }\n\n","bugFix":["6ce825e9276493231308229152c48f755ce1a0a5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62e52115b56781006682fd92c6938efaf174304d","date":1351014780,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#load(InputStream).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#load(InputStream).mjava","sourceNew":"  @Override\n  public boolean load(InputStream input) throws IOException {\n    DataInput dataIn = new InputStreamDataInput(input);\n    try {\n      this.fst = new FST<Pair<Long,BytesRef>>(dataIn, new PairOutputs<Long,BytesRef>(PositiveIntOutputs.getSingleton(true), ByteSequenceOutputs.getSingleton()));\n      maxAnalyzedPathsForOneInput = dataIn.readVInt();\n    } finally {\n      IOUtils.close(input);\n    }\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean load(InputStream input) throws IOException {\n    try {\n      this.fst = new FST<Pair<Long,BytesRef>>(new InputStreamDataInput(input), new PairOutputs<Long,BytesRef>(PositiveIntOutputs.getSingleton(true), ByteSequenceOutputs.getSingleton()));\n    } finally {\n      IOUtils.close(input);\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a48377c9931ddb38c784846217ff68d7dcd0b44","date":1363202036,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#load(InputStream).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#load(InputStream).mjava","sourceNew":"  @Override\n  public boolean load(InputStream input) throws IOException {\n    DataInput dataIn = new InputStreamDataInput(input);\n    try {\n      this.fst = new FST<Pair<Long,BytesRef>>(dataIn, new PairOutputs<Long,BytesRef>(PositiveIntOutputs.getSingleton(true), ByteSequenceOutputs.getSingleton()));\n      maxAnalyzedPathsForOneInput = dataIn.readVInt();\n      hasPayloads = dataIn.readByte() == 1;\n    } finally {\n      IOUtils.close(input);\n    }\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean load(InputStream input) throws IOException {\n    DataInput dataIn = new InputStreamDataInput(input);\n    try {\n      this.fst = new FST<Pair<Long,BytesRef>>(dataIn, new PairOutputs<Long,BytesRef>(PositiveIntOutputs.getSingleton(true), ByteSequenceOutputs.getSingleton()));\n      maxAnalyzedPathsForOneInput = dataIn.readVInt();\n    } finally {\n      IOUtils.close(input);\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b1e6a1c51433ebaa34dc0b76d7ab1876072be39","date":1370266419,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#load(InputStream).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#load(InputStream).mjava","sourceNew":"  @Override\n  public boolean load(InputStream input) throws IOException {\n    DataInput dataIn = new InputStreamDataInput(input);\n    try {\n      this.fst = new FST<Pair<Long,BytesRef>>(dataIn, new PairOutputs<Long,BytesRef>(PositiveIntOutputs.getSingleton(), ByteSequenceOutputs.getSingleton()));\n      maxAnalyzedPathsForOneInput = dataIn.readVInt();\n      hasPayloads = dataIn.readByte() == 1;\n    } finally {\n      IOUtils.close(input);\n    }\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean load(InputStream input) throws IOException {\n    DataInput dataIn = new InputStreamDataInput(input);\n    try {\n      this.fst = new FST<Pair<Long,BytesRef>>(dataIn, new PairOutputs<Long,BytesRef>(PositiveIntOutputs.getSingleton(true), ByteSequenceOutputs.getSingleton()));\n      maxAnalyzedPathsForOneInput = dataIn.readVInt();\n      hasPayloads = dataIn.readByte() == 1;\n    } finally {\n      IOUtils.close(input);\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a645276cbaf5dc96a42fd473b9019bde352996c8","date":1391806699,"type":4,"author":"Areek Zillur","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#load(InputStream).mjava","sourceNew":null,"sourceOld":"  @Override\n  public boolean load(InputStream input) throws IOException {\n    DataInput dataIn = new InputStreamDataInput(input);\n    try {\n      this.fst = new FST<Pair<Long,BytesRef>>(dataIn, new PairOutputs<Long,BytesRef>(PositiveIntOutputs.getSingleton(), ByteSequenceOutputs.getSingleton()));\n      maxAnalyzedPathsForOneInput = dataIn.readVInt();\n      hasPayloads = dataIn.readByte() == 1;\n    } finally {\n      IOUtils.close(input);\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"62e52115b56781006682fd92c6938efaf174304d":["6ce825e9276493231308229152c48f755ce1a0a5","414aae1db83a83d247caa9514e383e4ca3d43da5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5a48377c9931ddb38c784846217ff68d7dcd0b44":["414aae1db83a83d247caa9514e383e4ca3d43da5"],"6ce825e9276493231308229152c48f755ce1a0a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"414aae1db83a83d247caa9514e383e4ca3d43da5":["6ce825e9276493231308229152c48f755ce1a0a5"],"a645276cbaf5dc96a42fd473b9019bde352996c8":["6b1e6a1c51433ebaa34dc0b76d7ab1876072be39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a645276cbaf5dc96a42fd473b9019bde352996c8"],"6b1e6a1c51433ebaa34dc0b76d7ab1876072be39":["5a48377c9931ddb38c784846217ff68d7dcd0b44"]},"commit2Childs":{"62e52115b56781006682fd92c6938efaf174304d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6ce825e9276493231308229152c48f755ce1a0a5"],"6ce825e9276493231308229152c48f755ce1a0a5":["62e52115b56781006682fd92c6938efaf174304d","414aae1db83a83d247caa9514e383e4ca3d43da5"],"5a48377c9931ddb38c784846217ff68d7dcd0b44":["6b1e6a1c51433ebaa34dc0b76d7ab1876072be39"],"414aae1db83a83d247caa9514e383e4ca3d43da5":["62e52115b56781006682fd92c6938efaf174304d","5a48377c9931ddb38c784846217ff68d7dcd0b44"],"a645276cbaf5dc96a42fd473b9019bde352996c8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6b1e6a1c51433ebaa34dc0b76d7ab1876072be39":["a645276cbaf5dc96a42fd473b9019bde352996c8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["62e52115b56781006682fd92c6938efaf174304d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}