{"path":"solr/core/src/java/org/apache/solr/update/processor/SkipExistingDocumentsProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","commits":[{"id":"e1915a2721a80afb07f9d36cd3108d22a1dfbf7a","date":1484102913,"type":0,"author":"koji","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/SkipExistingDocumentsProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SkipExistingDocumentsUpdateProcessor getInstance(SolrQueryRequest req,\n                                                          SolrQueryResponse rsp,\n                                                          UpdateRequestProcessor next) {\n    // Ensure the parameters are forwarded to the leader\n    DistributedUpdateProcessorFactory.addParamToDistributedRequestWhitelist(req, PARAM_SKIP_INSERT_IF_EXISTS, PARAM_SKIP_UPDATE_IF_MISSING);\n\n    // Allow the particular request to override the plugin's configured behaviour\n    boolean skipInsertForRequest = req.getOriginalParams().getBool(PARAM_SKIP_INSERT_IF_EXISTS, this.skipInsertIfExists);\n    boolean skipUpdateForRequest = req.getOriginalParams().getBool(PARAM_SKIP_UPDATE_IF_MISSING, this.skipUpdateIfMissing);\n\n    return new SkipExistingDocumentsUpdateProcessor(req, next, skipInsertForRequest, skipUpdateForRequest);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/SkipExistingDocumentsProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SkipExistingDocumentsUpdateProcessor getInstance(SolrQueryRequest req,\n                                                          SolrQueryResponse rsp,\n                                                          UpdateRequestProcessor next) {\n    // Ensure the parameters are forwarded to the leader\n    DistributedUpdateProcessorFactory.addParamToDistributedRequestWhitelist(req, PARAM_SKIP_INSERT_IF_EXISTS, PARAM_SKIP_UPDATE_IF_MISSING);\n\n    // Allow the particular request to override the plugin's configured behaviour\n    boolean skipInsertForRequest = req.getOriginalParams().getBool(PARAM_SKIP_INSERT_IF_EXISTS, this.skipInsertIfExists);\n    boolean skipUpdateForRequest = req.getOriginalParams().getBool(PARAM_SKIP_UPDATE_IF_MISSING, this.skipUpdateIfMissing);\n\n    return new SkipExistingDocumentsUpdateProcessor(req, next, skipInsertForRequest, skipUpdateForRequest);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e1915a2721a80afb07f9d36cd3108d22a1dfbf7a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e1915a2721a80afb07f9d36cd3108d22a1dfbf7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e1915a2721a80afb07f9d36cd3108d22a1dfbf7a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e1915a2721a80afb07f9d36cd3108d22a1dfbf7a","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"e1915a2721a80afb07f9d36cd3108d22a1dfbf7a":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}