{"path":"solr/core/src/test/org/apache/solr/cloud/SSLMigrationTest#setUrlScheme(String).mjava","commits":[{"id":"cc9dd0d6ff8e58a4ce40ba13d20664a95589de3d","date":1395095209,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SSLMigrationTest#setUrlScheme(String).mjava","pathOld":"/dev/null","sourceNew":"  private void setUrlScheme(String value) throws Exception {\n    @SuppressWarnings(\"rawtypes\")\n    Map m = makeMap(\"action\", CollectionAction.CLUSTERPROP.toString()\n        .toLowerCase(Locale.ROOT), \"name\", \"urlScheme\", \"val\", value);\n    @SuppressWarnings(\"unchecked\")\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    \n    List<String> urls = new ArrayList<String>();\n    for(Replica replica : getReplicas()) {\n      urls.add(replica.getStr(ZkStateReader.BASE_URL_PROP));\n    }\n    //Create new SolrServer to configure new HttpClient w/ SSL config\n    new LBHttpSolrServer(urls.toArray(new String[]{})).request(request);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SSLMigrationTest#setUrlScheme(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SSLMigrationTest#setUrlScheme(String).mjava","sourceNew":"  private void setUrlScheme(String value) throws Exception {\n    @SuppressWarnings(\"rawtypes\")\n    Map m = makeMap(\"action\", CollectionAction.CLUSTERPROP.toString()\n        .toLowerCase(Locale.ROOT), \"name\", \"urlScheme\", \"val\", value);\n    @SuppressWarnings(\"unchecked\")\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    \n    List<String> urls = new ArrayList<String>();\n    for(Replica replica : getReplicas()) {\n      urls.add(replica.getStr(ZkStateReader.BASE_URL_PROP));\n    }\n    //Create new SolrServer to configure new HttpClient w/ SSL config\n    new LBHttpSolrClient(urls.toArray(new String[]{})).request(request);\n  }\n\n","sourceOld":"  private void setUrlScheme(String value) throws Exception {\n    @SuppressWarnings(\"rawtypes\")\n    Map m = makeMap(\"action\", CollectionAction.CLUSTERPROP.toString()\n        .toLowerCase(Locale.ROOT), \"name\", \"urlScheme\", \"val\", value);\n    @SuppressWarnings(\"unchecked\")\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    \n    List<String> urls = new ArrayList<String>();\n    for(Replica replica : getReplicas()) {\n      urls.add(replica.getStr(ZkStateReader.BASE_URL_PROP));\n    }\n    //Create new SolrServer to configure new HttpClient w/ SSL config\n    new LBHttpSolrServer(urls.toArray(new String[]{})).request(request);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SSLMigrationTest#setUrlScheme(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SSLMigrationTest#setUrlScheme(String).mjava","sourceNew":"  private void setUrlScheme(String value) throws Exception {\n    @SuppressWarnings(\"rawtypes\")\n    Map m = makeMap(\"action\", CollectionAction.CLUSTERPROP.toString()\n        .toLowerCase(Locale.ROOT), \"name\", \"urlScheme\", \"val\", value);\n    @SuppressWarnings(\"unchecked\")\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    \n    List<String> urls = new ArrayList<String>();\n    for(Replica replica : getReplicas()) {\n      urls.add(replica.getStr(ZkStateReader.BASE_URL_PROP));\n    }\n    //Create new SolrServer to configure new HttpClient w/ SSL config\n    getLBHttpSolrClient(urls.toArray(new String[]{})).request(request);\n  }\n\n","sourceOld":"  private void setUrlScheme(String value) throws Exception {\n    @SuppressWarnings(\"rawtypes\")\n    Map m = makeMap(\"action\", CollectionAction.CLUSTERPROP.toString()\n        .toLowerCase(Locale.ROOT), \"name\", \"urlScheme\", \"val\", value);\n    @SuppressWarnings(\"unchecked\")\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    \n    List<String> urls = new ArrayList<String>();\n    for(Replica replica : getReplicas()) {\n      urls.add(replica.getStr(ZkStateReader.BASE_URL_PROP));\n    }\n    //Create new SolrServer to configure new HttpClient w/ SSL config\n    new LBHttpSolrClient(urls.toArray(new String[]{})).request(request);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SSLMigrationTest#setUrlScheme(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SSLMigrationTest#setUrlScheme(String).mjava","sourceNew":"  private void setUrlScheme(String value) throws Exception {\n    @SuppressWarnings(\"rawtypes\")\n    Map m = makeMap(\"action\", CollectionAction.CLUSTERPROP.toString()\n        .toLowerCase(Locale.ROOT), \"name\", \"urlScheme\", \"val\", value);\n    @SuppressWarnings(\"unchecked\")\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    \n    List<String> urls = new ArrayList<String>();\n    for(Replica replica : getReplicas()) {\n      urls.add(replica.getStr(ZkStateReader.BASE_URL_PROP));\n    }\n    //Create new SolrServer to configure new HttpClient w/ SSL config\n    getLBHttpSolrClient(urls.toArray(new String[]{})).request(request);\n  }\n\n","sourceOld":"  private void setUrlScheme(String value) throws Exception {\n    @SuppressWarnings(\"rawtypes\")\n    Map m = makeMap(\"action\", CollectionAction.CLUSTERPROP.toString()\n        .toLowerCase(Locale.ROOT), \"name\", \"urlScheme\", \"val\", value);\n    @SuppressWarnings(\"unchecked\")\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    \n    List<String> urls = new ArrayList<String>();\n    for(Replica replica : getReplicas()) {\n      urls.add(replica.getStr(ZkStateReader.BASE_URL_PROP));\n    }\n    //Create new SolrServer to configure new HttpClient w/ SSL config\n    new LBHttpSolrClient(urls.toArray(new String[]{})).request(request);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ea58e0a344726fdd2cbfbfaf2df83ca3ab6b8f9","date":1519856799,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SSLMigrationTest#setUrlScheme(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SSLMigrationTest#setUrlScheme(String).mjava","sourceNew":"  private void setUrlScheme(String value) throws Exception {\n    @SuppressWarnings(\"rawtypes\")\n    Map m = makeMap(\"action\", CollectionAction.CLUSTERPROP.toString()\n        .toLowerCase(Locale.ROOT), \"name\", \"urlScheme\", \"val\", value);\n    @SuppressWarnings(\"unchecked\")\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    \n    List<String> urls = new ArrayList<String>();\n    for(Replica replica : getReplicas()) {\n      urls.add(replica.getStr(ZkStateReader.BASE_URL_PROP));\n    }\n    //Create new SolrServer to configure new HttpClient w/ SSL config\n    try (SolrClient client = getLBHttpSolrClient(urls.toArray(new String[]{}))) {\n      client.request(request);\n    }\n  }\n\n","sourceOld":"  private void setUrlScheme(String value) throws Exception {\n    @SuppressWarnings(\"rawtypes\")\n    Map m = makeMap(\"action\", CollectionAction.CLUSTERPROP.toString()\n        .toLowerCase(Locale.ROOT), \"name\", \"urlScheme\", \"val\", value);\n    @SuppressWarnings(\"unchecked\")\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    \n    List<String> urls = new ArrayList<String>();\n    for(Replica replica : getReplicas()) {\n      urls.add(replica.getStr(ZkStateReader.BASE_URL_PROP));\n    }\n    //Create new SolrServer to configure new HttpClient w/ SSL config\n    getLBHttpSolrClient(urls.toArray(new String[]{})).request(request);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SSLMigrationTest#setUrlScheme(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SSLMigrationTest#setUrlScheme(String).mjava","sourceNew":"  private void setUrlScheme(String value) throws Exception {\n    @SuppressWarnings(\"rawtypes\")\n    Map m = makeMap(\"action\", CollectionAction.CLUSTERPROP.toString()\n        .toLowerCase(Locale.ROOT), \"name\", \"urlScheme\", \"val\", value);\n    @SuppressWarnings(\"unchecked\")\n    SolrParams params = new MapSolrParams(m);\n    @SuppressWarnings({\"rawtypes\"})\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    \n    List<String> urls = new ArrayList<String>();\n    for(Replica replica : getReplicas()) {\n      urls.add(replica.getStr(ZkStateReader.BASE_URL_PROP));\n    }\n    //Create new SolrServer to configure new HttpClient w/ SSL config\n    try (SolrClient client = getLBHttpSolrClient(urls.toArray(new String[]{}))) {\n      client.request(request);\n    }\n  }\n\n","sourceOld":"  private void setUrlScheme(String value) throws Exception {\n    @SuppressWarnings(\"rawtypes\")\n    Map m = makeMap(\"action\", CollectionAction.CLUSTERPROP.toString()\n        .toLowerCase(Locale.ROOT), \"name\", \"urlScheme\", \"val\", value);\n    @SuppressWarnings(\"unchecked\")\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    \n    List<String> urls = new ArrayList<String>();\n    for(Replica replica : getReplicas()) {\n      urls.add(replica.getStr(ZkStateReader.BASE_URL_PROP));\n    }\n    //Create new SolrServer to configure new HttpClient w/ SSL config\n    try (SolrClient client = getLBHttpSolrClient(urls.toArray(new String[]{}))) {\n      client.request(request);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2ea58e0a344726fdd2cbfbfaf2df83ca3ab6b8f9":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["bafca15d8e408346a67f4282ad1143b88023893b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["bafca15d8e408346a67f4282ad1143b88023893b","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"bafca15d8e408346a67f4282ad1143b88023893b":["cc9dd0d6ff8e58a4ce40ba13d20664a95589de3d"],"cc9dd0d6ff8e58a4ce40ba13d20664a95589de3d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["2ea58e0a344726fdd2cbfbfaf2df83ca3ab6b8f9"]},"commit2Childs":{"2ea58e0a344726fdd2cbfbfaf2df83ca3ab6b8f9":["e98520789adb1d5ad05afb4956eca0944a929688"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cc9dd0d6ff8e58a4ce40ba13d20664a95589de3d"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["2ea58e0a344726fdd2cbfbfaf2df83ca3ab6b8f9"],"bafca15d8e408346a67f4282ad1143b88023893b":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"cc9dd0d6ff8e58a4ce40ba13d20664a95589de3d":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}