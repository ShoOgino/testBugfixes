{"path":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    \n    Document doc = new Document();\n    doc.add(newField(\"source\", \"marketing info\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(newField(\"contents\", \"foobar\", TextField.TYPE_STORED));\n    doc.add(newField(\"source\", \"marketing info\", TextField.TYPE_STORED)); \n    writer.addDocument(doc);\n    \n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random, phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random, termQuery,searcher);\n\n    \n    reader.close();\n    \n    writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(newField(\"contents\", \"map entry woo\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"contents\", \"woo map entry\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"contents\", \"map foobarword entry woo\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    reader = writer.getReader();\n    writer.close();\n    \n    searcher = newSearcher(reader);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random, booleanQuery,searcher);\n\n    \n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    \n    Document doc = new Document();\n    doc.add(newField(\"source\", \"marketing info\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(newField(\"contents\", \"foobar\", TextField.TYPE_STORED));\n    doc.add(newField(\"source\", \"marketing info\", TextField.TYPE_STORED)); \n    writer.addDocument(doc);\n    \n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random, phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random, termQuery,searcher);\n\n    \n    reader.close();\n    \n    writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(newField(\"contents\", \"map entry woo\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"contents\", \"woo map entry\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"contents\", \"map foobarword entry woo\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    reader = writer.getReader();\n    writer.close();\n    \n    searcher = newSearcher(reader);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random, booleanQuery,searcher);\n\n    \n    reader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    \n    Document doc = new Document();\n    doc.add(newField(\"source\", \"marketing info\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(newField(\"contents\", \"foobar\", TextField.TYPE_STORED));\n    doc.add(newField(\"source\", \"marketing info\", TextField.TYPE_STORED)); \n    writer.addDocument(doc);\n    \n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), termQuery,searcher);\n\n    \n    reader.close();\n    \n    writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(newField(\"contents\", \"map entry woo\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"contents\", \"woo map entry\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"contents\", \"map foobarword entry woo\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    reader = writer.getReader();\n    writer.close();\n    \n    searcher = newSearcher(reader);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), booleanQuery,searcher);\n\n    \n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory);\n    \n    Document doc = new Document();\n    doc.add(newField(\"source\", \"marketing info\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(newField(\"contents\", \"foobar\", TextField.TYPE_STORED));\n    doc.add(newField(\"source\", \"marketing info\", TextField.TYPE_STORED)); \n    writer.addDocument(doc);\n    \n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random, phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random, termQuery,searcher);\n\n    \n    reader.close();\n    \n    writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(newField(\"contents\", \"map entry woo\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"contents\", \"woo map entry\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"contents\", \"map foobarword entry woo\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    reader = writer.getReader();\n    writer.close();\n    \n    searcher = newSearcher(reader);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random, booleanQuery,searcher);\n\n    \n    reader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    \n    Document doc = new Document();\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"foobar\", Field.Store.YES));\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES)); \n    writer.addDocument(doc);\n    \n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), termQuery,searcher);\n\n    \n    reader.close();\n    \n    writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"woo map entry\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map foobarword entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    reader = writer.getReader();\n    writer.close();\n    \n    searcher = newSearcher(reader);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), booleanQuery,searcher);\n\n    \n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    \n    Document doc = new Document();\n    doc.add(newField(\"source\", \"marketing info\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(newField(\"contents\", \"foobar\", TextField.TYPE_STORED));\n    doc.add(newField(\"source\", \"marketing info\", TextField.TYPE_STORED)); \n    writer.addDocument(doc);\n    \n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), termQuery,searcher);\n\n    \n    reader.close();\n    \n    writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(newField(\"contents\", \"map entry woo\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"contents\", \"woo map entry\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newField(\"contents\", \"map foobarword entry woo\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n\n    reader = writer.getReader();\n    writer.close();\n    \n    searcher = newSearcher(reader);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), booleanQuery,searcher);\n\n    \n    reader.close();\n    directory.close();\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    \n    Document doc = new Document();\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"foobar\", Field.Store.YES));\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES)); \n    writer.addDocument(doc);\n    \n    IndexReader reader = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), termQuery,searcher);\n\n    \n    reader.close();\n    \n    writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"woo map entry\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map foobarword entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    reader = writer.getReader();\n    writer.shutdown();\n    \n    searcher = newSearcher(reader);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), booleanQuery,searcher);\n\n    \n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    \n    Document doc = new Document();\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"foobar\", Field.Store.YES));\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES)); \n    writer.addDocument(doc);\n    \n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), termQuery,searcher);\n\n    \n    reader.close();\n    \n    writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"woo map entry\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map foobarword entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    reader = writer.getReader();\n    writer.close();\n    \n    searcher = newSearcher(reader);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), booleanQuery,searcher);\n\n    \n    reader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    \n    Document doc = new Document();\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"foobar\", Field.Store.YES));\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES)); \n    writer.addDocument(doc);\n    \n    IndexReader reader = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), termQuery,searcher);\n\n    \n    reader.close();\n    \n    writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"woo map entry\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map foobarword entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    reader = writer.getReader();\n    writer.shutdown();\n    \n    searcher = newSearcher(reader);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), booleanQuery,searcher);\n\n    \n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    \n    Document doc = new Document();\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"foobar\", Field.Store.YES));\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES)); \n    writer.addDocument(doc);\n    \n    IndexReader reader = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), termQuery,searcher);\n\n    \n    reader.close();\n    \n    writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"woo map entry\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map foobarword entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    reader = writer.getReader();\n    writer.shutdown();\n    \n    searcher = newSearcher(reader);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), booleanQuery,searcher);\n\n    \n    reader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    \n    Document doc = new Document();\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"foobar\", Field.Store.YES));\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES)); \n    writer.addDocument(doc);\n    \n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), termQuery,searcher);\n\n    \n    reader.close();\n    \n    writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"woo map entry\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map foobarword entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    reader = writer.getReader();\n    writer.close();\n    \n    searcher = newSearcher(reader);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), booleanQuery,searcher);\n\n    \n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    \n    Document doc = new Document();\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"foobar\", Field.Store.YES));\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES)); \n    writer.addDocument(doc);\n    \n    IndexReader reader = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), termQuery,searcher);\n\n    \n    reader.close();\n    \n    writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"woo map entry\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map foobarword entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    reader = writer.getReader();\n    writer.shutdown();\n    \n    searcher = newSearcher(reader);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), booleanQuery,searcher);\n\n    \n    reader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    \n    Document doc = new Document();\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"foobar\", Field.Store.YES));\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES)); \n    writer.addDocument(doc);\n    \n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), termQuery,searcher);\n\n    \n    reader.close();\n    \n    writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"woo map entry\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map foobarword entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    reader = writer.getReader();\n    writer.close();\n    \n    searcher = newSearcher(reader);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), booleanQuery,searcher);\n\n    \n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    \n    Document doc = new Document();\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"foobar\", Field.Store.YES));\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES)); \n    writer.addDocument(doc);\n    \n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), termQuery,searcher);\n\n    \n    reader.close();\n    \n    writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"woo map entry\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map foobarword entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    reader = writer.getReader();\n    writer.close();\n    \n    searcher = newSearcher(reader);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, null, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, null, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), booleanQuery,searcher);\n\n    \n    reader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9e1499c5d26c936238506df90a3c02c76707722","date":1434449920,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    \n    Document doc = new Document();\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"foobar\", Field.Store.YES));\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES)); \n    writer.addDocument(doc);\n    \n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    PhraseQuery phraseQuery = new PhraseQuery(\"source\", \"marketing\", \"info\");\n    ScoreDoc[] hits = searcher.search(phraseQuery, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), termQuery,searcher);\n\n    \n    reader.close();\n    \n    writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"woo map entry\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map foobarword entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    reader = writer.getReader();\n    writer.close();\n    \n    searcher = newSearcher(reader);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery(\"contents\", \"map\", \"entry\");\n    \n    hits = searcher.search(termQuery, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), booleanQuery,searcher);\n\n    \n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    \n    Document doc = new Document();\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"foobar\", Field.Store.YES));\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES)); \n    writer.addDocument(doc);\n    \n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    PhraseQuery phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"source\", \"marketing\"));\n    phraseQuery.add(new Term(\"source\", \"info\"));\n    ScoreDoc[] hits = searcher.search(phraseQuery, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), termQuery,searcher);\n\n    \n    reader.close();\n    \n    writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"woo map entry\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map foobarword entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    reader = writer.getReader();\n    writer.close();\n    \n    searcher = newSearcher(reader);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery();\n    phraseQuery.add(new Term(\"contents\",\"map\"));\n    phraseQuery.add(new Term(\"contents\",\"entry\"));\n    \n    hits = searcher.search(termQuery, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), booleanQuery,searcher);\n\n    \n    reader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testPhraseQueryInConjunctionScorer().mjava","sourceNew":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    \n    Document doc = new Document();\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"foobar\", Field.Store.YES));\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES)); \n    writer.addDocument(doc);\n    \n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    PhraseQuery phraseQuery = new PhraseQuery(\"source\", \"marketing\", \"info\");\n    ScoreDoc[] hits = searcher.search(phraseQuery, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery.Builder booleanQuery = new BooleanQuery.Builder();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery.build(), 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), termQuery,searcher);\n\n    \n    reader.close();\n    \n    writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"woo map entry\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map foobarword entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    reader = writer.getReader();\n    writer.close();\n    \n    searcher = newSearcher(reader);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery(\"contents\", \"map\", \"entry\");\n    \n    hits = searcher.search(termQuery, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery.Builder();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery.build(), 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery.Builder();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery.build(), 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), booleanQuery.build(),searcher);\n\n    \n    reader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testPhraseQueryInConjunctionScorer() throws Exception {\n    Directory directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory);\n    \n    Document doc = new Document();\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES));\n    writer.addDocument(doc);\n    \n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"foobar\", Field.Store.YES));\n    doc.add(newTextField(\"source\", \"marketing info\", Field.Store.YES)); \n    writer.addDocument(doc);\n    \n    IndexReader reader = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(reader);\n    \n    PhraseQuery phraseQuery = new PhraseQuery(\"source\", \"marketing\", \"info\");\n    ScoreDoc[] hits = searcher.search(phraseQuery, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), phraseQuery,searcher);\n\n    \n    TermQuery termQuery = new TermQuery(new Term(\"contents\",\"foobar\"));\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, 1000).scoreDocs;\n    assertEquals(1, hits.length);\n    QueryUtils.check(random(), termQuery,searcher);\n\n    \n    reader.close();\n    \n    writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new MockAnalyzer(random())).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"woo map entry\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(newTextField(\"contents\", \"map foobarword entry woo\", Field.Store.YES));\n    writer.addDocument(doc);\n\n    reader = writer.getReader();\n    writer.close();\n    \n    searcher = newSearcher(reader);\n    \n    termQuery = new TermQuery(new Term(\"contents\",\"woo\"));\n    phraseQuery = new PhraseQuery(\"contents\", \"map\", \"entry\");\n    \n    hits = searcher.search(termQuery, 1000).scoreDocs;\n    assertEquals(3, hits.length);\n    hits = searcher.search(phraseQuery, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    \n    booleanQuery = new BooleanQuery();\n    booleanQuery.add(phraseQuery, BooleanClause.Occur.MUST);\n    booleanQuery.add(termQuery, BooleanClause.Occur.MUST);\n    hits = searcher.search(booleanQuery, 1000).scoreDocs;\n    assertEquals(2, hits.length);\n    QueryUtils.check(random(), booleanQuery,searcher);\n\n    \n    reader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["e9e1499c5d26c936238506df90a3c02c76707722"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"e9e1499c5d26c936238506df90a3c02c76707722":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"e9e1499c5d26c936238506df90a3c02c76707722":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["e9e1499c5d26c936238506df90a3c02c76707722"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}