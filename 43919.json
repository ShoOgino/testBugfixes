{"path":"sandbox/contributions/webcrawler-LARM/src/hplb/misc/ByteArray#readn(InputStream,int).mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/hplb/misc/ByteArray#readn(InputStream,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Reads n bytes from the specified input stream. It will return\n   * fewer bytes if fewer bytes are available on the stream.\n   * Hence the application should check the resulting arrays length.\n   */\n  public static byte[] readn(InputStream in, int n) throws IOException {\n    byte[] buf = new byte[n];\n    int ntotal = 0;\n    int nread;\n\n    while (ntotal < n) {\n      nread = in.read(buf, ntotal, n - ntotal);\n      if (nread < 0) {\n        // we got less than expected - return what we got\n        byte[] newbuf = new byte[ntotal];\n        System.arraycopy(buf, 0, newbuf, 0, ntotal);\n        return newbuf;\n      }\n      ntotal += nread;\n    }\n    return buf;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e","date":1022957716,"type":4,"author":"cmarschner","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/hplb/misc/ByteArray#readn(InputStream,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Reads n bytes from the specified input stream. It will return\n   * fewer bytes if fewer bytes are available on the stream.\n   * Hence the application should check the resulting arrays length.\n   */\n  public static byte[] readn(InputStream in, int n) throws IOException {\n    byte[] buf = new byte[n];\n    int ntotal = 0;\n    int nread;\n\n    while (ntotal < n) {\n      nread = in.read(buf, ntotal, n - ntotal);\n      if (nread < 0) {\n        // we got less than expected - return what we got\n        byte[] newbuf = new byte[ntotal];\n        System.arraycopy(buf, 0, newbuf, 0, ntotal);\n        return newbuf;\n      }\n      ntotal += nread;\n    }\n    return buf;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e":["05d36e0b328ec96237035fbcca240e73631396e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e"]},"commit2Childs":{"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"05d36e0b328ec96237035fbcca240e73631396e5":["12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}