{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest#testContainsPairOverlap().mjava","commits":[{"id":"0521546db127e358ced1772a9d696dbdd255b203","date":1403202289,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest#testContainsPairOverlap().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest#testContainsPairOverlap().mjava","sourceNew":"  /** See LUCENE-5062, {@link ContainsPrefixTreeFilter#multiOverlappingIndexedShapes}. */\n  @Test\n  public void testContainsPairOverlap() throws IOException {\n    setupQuadGrid(3);\n    adoc(\"0\", new ShapePair(ctx.makeRectangle(0, 33, -128, 128), ctx.makeRectangle(33, 128, -128, 128), true));\n    commit();\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Contains,\n        ctx.makeRectangle(0, 128, -16, 128)));\n    SearchResults searchResults = executeQuery(query, 1);\n    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  /** See LUCENE-5062, {@link ContainsPrefixTreeFilter#multiOverlappingIndexedShapes}. */\n  @Test\n  public void testContainsPairOverlap() throws IOException {\n    setupQuadGrid(3);\n    adoc(\"0\", new ShapePair(ctx.makeRectangle(0, 33, -128, 128), ctx.makeRectangle(33, 128, -128, 128), true));\n    commit();\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Contains,\n        ctx.makeRectangle(0, 128, -16, 128)));\n    SearchResults searchResults = executeQuery(query, 1);\n    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d3854546d75fdc5a4c3b13d0c67b6b331185945","date":1429762111,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest#testContainsPairOverlap().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest#testContainsPairOverlap().mjava","sourceNew":"  /** See LUCENE-5062, {@link ContainsPrefixTreeFilter#multiOverlappingIndexedShapes}. */\n  @Test\n  public void testContainsPairOverlap() throws IOException {\n    setupQuadGrid(3, randomBoolean());\n    adoc(\"0\", new ShapePair(ctx.makeRectangle(0, 33, -128, 128), ctx.makeRectangle(33, 128, -128, 128), true));\n    commit();\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Contains,\n        ctx.makeRectangle(0, 128, -16, 128)));\n    SearchResults searchResults = executeQuery(query, 1);\n    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  /** See LUCENE-5062, {@link ContainsPrefixTreeFilter#multiOverlappingIndexedShapes}. */\n  @Test\n  public void testContainsPairOverlap() throws IOException {\n    setupQuadGrid(3);\n    adoc(\"0\", new ShapePair(ctx.makeRectangle(0, 33, -128, 128), ctx.makeRectangle(33, 128, -128, 128), true));\n    commit();\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Contains,\n        ctx.makeRectangle(0, 128, -16, 128)));\n    SearchResults searchResults = executeQuery(query, 1);\n    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"672b198fc3dce868916c727917cae58c2906763d","date":1443669960,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest#testContainsPairOverlap().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest#testContainsPairOverlap().mjava","sourceNew":"  /** See LUCENE-5062, {@link ContainsPrefixTreeQuery#multiOverlappingIndexedShapes}. */\n  @Test\n  public void testContainsPairOverlap() throws IOException {\n    setupQuadGrid(3, randomBoolean());\n    adoc(\"0\", new ShapePair(ctx.makeRectangle(0, 33, -128, 128), ctx.makeRectangle(33, 128, -128, 128), true));\n    commit();\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Contains,\n        ctx.makeRectangle(0, 128, -16, 128)));\n    SearchResults searchResults = executeQuery(query, 1);\n    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  /** See LUCENE-5062, {@link ContainsPrefixTreeFilter#multiOverlappingIndexedShapes}. */\n  @Test\n  public void testContainsPairOverlap() throws IOException {\n    setupQuadGrid(3, randomBoolean());\n    adoc(\"0\", new ShapePair(ctx.makeRectangle(0, 33, -128, 128), ctx.makeRectangle(33, 128, -128, 128), true));\n    commit();\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Contains,\n        ctx.makeRectangle(0, 128, -16, 128)));\n    SearchResults searchResults = executeQuery(query, 1);\n    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest#testContainsPairOverlap().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest#testContainsPairOverlap().mjava","sourceNew":"  /** See LUCENE-5062, {@link ContainsPrefixTreeQuery#multiOverlappingIndexedShapes}. */\n  @Test\n  public void testContainsPairOverlap() throws IOException {\n    setupQuadGrid(3, randomBoolean());\n    adoc(\"0\", new ShapePair(ctx.makeRectangle(0, 33, -128, 128), ctx.makeRectangle(33, 128, -128, 128), true));\n    commit();\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Contains,\n        ctx.makeRectangle(0, 128, -16, 128)));\n    SearchResults searchResults = executeQuery(query, 1);\n    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  /** See LUCENE-5062, {@link ContainsPrefixTreeQuery#multiOverlappingIndexedShapes}. */\n  @Test\n  public void testContainsPairOverlap() throws IOException {\n    setupQuadGrid(3, randomBoolean());\n    adoc(\"0\", new ShapePair(ctx.makeRectangle(0, 33, -128, 128), ctx.makeRectangle(33, 128, -128, 128), true));\n    commit();\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Contains,\n        ctx.makeRectangle(0, 128, -16, 128)));\n    SearchResults searchResults = executeQuery(query, 1);\n    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest#testContainsPairOverlap().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest#testContainsPairOverlap().mjava","sourceNew":"  /** See LUCENE-5062, {@link ContainsPrefixTreeQuery#multiOverlappingIndexedShapes}. */\n  @Test\n  public void testContainsPairOverlap() throws IOException {\n    setupQuadGrid(3, randomBoolean());\n    adoc(\"0\", new ShapePair(ctx.makeRectangle(0, 33, -128, 128), ctx.makeRectangle(33, 128, -128, 128), true));\n    commit();\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Contains,\n        ctx.makeRectangle(0, 128, -16, 128)));\n    SearchResults searchResults = executeQuery(query, 1);\n    assertEquals(1, searchResults.numFound);\n  }\n\n","sourceOld":"  /** See LUCENE-5062, {@link ContainsPrefixTreeQuery#multiOverlappingIndexedShapes}. */\n  @Test\n  public void testContainsPairOverlap() throws IOException {\n    setupQuadGrid(3, randomBoolean());\n    adoc(\"0\", new ShapePair(ctx.makeRectangle(0, 33, -128, 128), ctx.makeRectangle(33, 128, -128, 128), true));\n    commit();\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Contains,\n        ctx.makeRectangle(0, 128, -16, 128)));\n    SearchResults searchResults = executeQuery(query, 1);\n    assertEquals(1, searchResults.numFound);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["672b198fc3dce868916c727917cae58c2906763d","112d77ac8d3e10a362516ad834c9a11d35c94234"],"672b198fc3dce868916c727917cae58c2906763d":["9d3854546d75fdc5a4c3b13d0c67b6b331185945"],"9d3854546d75fdc5a4c3b13d0c67b6b331185945":["0521546db127e358ced1772a9d696dbdd255b203"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["672b198fc3dce868916c727917cae58c2906763d"],"0521546db127e358ced1772a9d696dbdd255b203":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"672b198fc3dce868916c727917cae58c2906763d":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"9d3854546d75fdc5a4c3b13d0c67b6b331185945":["672b198fc3dce868916c727917cae58c2906763d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0521546db127e358ced1772a9d696dbdd255b203"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"0521546db127e358ced1772a9d696dbdd255b203":["9d3854546d75fdc5a4c3b13d0c67b6b331185945"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}