{"path":"solr/core/src/test/org/apache/solr/handler/component/TestHttpShardHandlerFactory#testLiveNodesToHostUrl().mjava","commits":[{"id":"4d51e7db479b42602c7e23ba871b177387268179","date":1547581497,"type":0,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestHttpShardHandlerFactory#testLiveNodesToHostUrl().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLiveNodesToHostUrl() throws Exception {\n    Set<String> liveNodes = new HashSet<>(Arrays.asList(new String[]{\n        \"1.2.3.4:8983_solr\",\n        \"1.2.3.4:9000_\",\n        \"1.2.3.4:9001_solr-2\",\n    }));\n    ClusterState cs = new ClusterState(0, liveNodes, new HashMap<>());\n    WhitelistHostChecker checker = new WhitelistHostChecker(null, true);\n    Set<String> hostSet = checker.generateWhitelistFromLiveNodes(cs);\n    assertThat(hostSet.size(), is(3));\n    assertThat(hostSet, hasItem(\"1.2.3.4:8983\"));\n    assertThat(hostSet, hasItem(\"1.2.3.4:9000\"));\n    assertThat(hostSet, hasItem(\"1.2.3.4:9001\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5ad9c35f926b4bf8da0336d1300efc709c8d5a56","date":1591729157,"type":3,"author":"murblanc","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestHttpShardHandlerFactory#testLiveNodesToHostUrl().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestHttpShardHandlerFactory#testLiveNodesToHostUrl().mjava","sourceNew":"  @Test\n  public void testLiveNodesToHostUrl() throws Exception {\n    Set<String> liveNodes = new HashSet<>(Arrays.asList(new String[]{\n        \"1.2.3.4:8983_solr\",\n        \"1.2.3.4:9000_\",\n        \"1.2.3.4:9001_solr-2\",\n    }));\n    ClusterState cs = new ClusterState(liveNodes, new HashMap<>());\n    WhitelistHostChecker checker = new WhitelistHostChecker(null, true);\n    Set<String> hostSet = checker.generateWhitelistFromLiveNodes(cs);\n    assertThat(hostSet.size(), is(3));\n    assertThat(hostSet, hasItem(\"1.2.3.4:8983\"));\n    assertThat(hostSet, hasItem(\"1.2.3.4:9000\"));\n    assertThat(hostSet, hasItem(\"1.2.3.4:9001\"));\n  }\n\n","sourceOld":"  @Test\n  public void testLiveNodesToHostUrl() throws Exception {\n    Set<String> liveNodes = new HashSet<>(Arrays.asList(new String[]{\n        \"1.2.3.4:8983_solr\",\n        \"1.2.3.4:9000_\",\n        \"1.2.3.4:9001_solr-2\",\n    }));\n    ClusterState cs = new ClusterState(0, liveNodes, new HashMap<>());\n    WhitelistHostChecker checker = new WhitelistHostChecker(null, true);\n    Set<String> hostSet = checker.generateWhitelistFromLiveNodes(cs);\n    assertThat(hostSet.size(), is(3));\n    assertThat(hostSet, hasItem(\"1.2.3.4:8983\"));\n    assertThat(hostSet, hasItem(\"1.2.3.4:9000\"));\n    assertThat(hostSet, hasItem(\"1.2.3.4:9001\"));\n  }\n\n","bugFix":["4d51e7db479b42602c7e23ba871b177387268179"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d51e7db479b42602c7e23ba871b177387268179":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["4d51e7db479b42602c7e23ba871b177387268179"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"]},"commit2Childs":{"4d51e7db479b42602c7e23ba871b177387268179":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d51e7db479b42602c7e23ba871b177387268179"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}