{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50NormsConsumer.NormMap#getDecodeTable().mjava","commits":[{"id":"bc8f80fee115148a0e4a0574560be06b494de821","date":1412069872,"type":2,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50NormsConsumer.NormMap#getDecodeTable().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49NormsConsumer.NormMap#getDecodeTable().mjava","sourceNew":"    /** retrieves the ordinal table for previously added items */\n    public long[] getDecodeTable() {\n      long decode[] = new long[size];\n      for (int i = 0; i < singleByteRange.length; i++) {\n        short s = singleByteRange[i];\n        if (s >= 0) {\n          decode[s] = i - 128;\n        }\n      }\n      for (Map.Entry<Long,Short> entry : other.entrySet()) {\n        decode[entry.getValue()] = entry.getKey();\n      }\n      return decode;\n    }\n\n","sourceOld":"    /** retrieves the ordinal table for previously added items */\n    public long[] getDecodeTable() {\n      long decode[] = new long[size];\n      for (int i = 0; i < singleByteRange.length; i++) {\n        short s = singleByteRange[i];\n        if (s >= 0) {\n          decode[s] = i - 128;\n        }\n      }\n      for (Map.Entry<Long,Short> entry : other.entrySet()) {\n        decode[entry.getValue()] = entry.getKey();\n      }\n      return decode;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":2,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50NormsConsumer.NormMap#getDecodeTable().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49NormsConsumer.NormMap#getDecodeTable().mjava","sourceNew":"    /** retrieves the ordinal table for previously added items */\n    public long[] getDecodeTable() {\n      long decode[] = new long[size];\n      for (int i = 0; i < singleByteRange.length; i++) {\n        short s = singleByteRange[i];\n        if (s >= 0) {\n          decode[s] = i - 128;\n        }\n      }\n      for (Map.Entry<Long,Short> entry : other.entrySet()) {\n        decode[entry.getValue()] = entry.getKey();\n      }\n      return decode;\n    }\n\n","sourceOld":"    /** retrieves the ordinal table for previously added items */\n    public long[] getDecodeTable() {\n      long decode[] = new long[size];\n      for (int i = 0; i < singleByteRange.length; i++) {\n        short s = singleByteRange[i];\n        if (s >= 0) {\n          decode[s] = i - 128;\n        }\n      }\n      for (Map.Entry<Long,Short> entry : other.entrySet()) {\n        decode[entry.getValue()] = entry.getKey();\n      }\n      return decode;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c3fae32338d82a0710e1756793faba13dcb598b","date":1414786590,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50NormsConsumer.NormMap#getDecodeTable().mjava","sourceNew":null,"sourceOld":"    /** retrieves the ordinal table for previously added items */\n    public long[] getDecodeTable() {\n      long decode[] = new long[size];\n      for (int i = 0; i < singleByteRange.length; i++) {\n        short s = singleByteRange[i];\n        if (s >= 0) {\n          decode[s] = i - 128;\n        }\n      }\n      for (Map.Entry<Long,Short> entry : other.entrySet()) {\n        decode[entry.getValue()] = entry.getKey();\n      }\n      return decode;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bc8f80fee115148a0e4a0574560be06b494de821":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bc8f80fee115148a0e4a0574560be06b494de821"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0c3fae32338d82a0710e1756793faba13dcb598b":["9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0c3fae32338d82a0710e1756793faba13dcb598b"]},"commit2Childs":{"bc8f80fee115148a0e4a0574560be06b494de821":["9bb9a29a5e71a90295f175df8919802993142c9a"],"9bb9a29a5e71a90295f175df8919802993142c9a":["0c3fae32338d82a0710e1756793faba13dcb598b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bc8f80fee115148a0e4a0574560be06b494de821","9bb9a29a5e71a90295f175df8919802993142c9a"],"0c3fae32338d82a0710e1756793faba13dcb598b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}