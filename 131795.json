{"path":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentTest#testPerField().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentTest#testPerField().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/TermVectorComponentTest#testPerField().mjava","sourceNew":"  @Test\n  public void testPerField() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",tv, \"q\", \"id:0\", TermVectorComponent.COMPONENT_NAME, \"true\"\n        ,TermVectorParams.TF, \"true\", TermVectorParams.DF, \"true\", TermVectorParams.OFFSETS, \"true\", TermVectorParams.POSITIONS, \"true\", TermVectorParams.TF_IDF, \"true\"\n        ,TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\"\n        ,\"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\"\n        ,\"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.DF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\"\n        )\n    ,\"/termVectors/doc-0/test_basictv=={'anoth':{},'titl':{}}\"\n    ,\"/termVectors/doc-0/test_postv/anoth=={'tf':1, 'positions':{'position':1}, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/doc-0/test_offtv/anoth=={'tf':1, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/warnings=={ 'noTermVectors':['test_notv'], 'noPositions':['test_basictv', 'test_offtv'], 'noOffsets':['test_basictv', 'test_postv']}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testPerField() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",tv, \"q\", \"id:0\", TermVectorComponent.COMPONENT_NAME, \"true\"\n        ,TermVectorParams.TF, \"true\", TermVectorParams.DF, \"true\", TermVectorParams.OFFSETS, \"true\", TermVectorParams.POSITIONS, \"true\", TermVectorParams.TF_IDF, \"true\"\n        ,TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\"\n        ,\"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\"\n        ,\"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.DF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\"\n        )\n    ,\"/termVectors/doc-0/test_basictv=={'anoth':{},'titl':{}}\"\n    ,\"/termVectors/doc-0/test_postv/anoth=={'tf':1, 'positions':{'position':1}, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/doc-0/test_offtv/anoth=={'tf':1, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/warnings=={ 'noTermVectors':['test_notv'], 'noPositions':['test_basictv', 'test_offtv'], 'noOffsets':['test_basictv', 'test_postv']}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentTest#testPerField().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/TermVectorComponentTest#testPerField().mjava","sourceNew":"  @Test\n  public void testPerField() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",tv, \"q\", \"id:0\", TermVectorComponent.COMPONENT_NAME, \"true\"\n        ,TermVectorParams.TF, \"true\", TermVectorParams.DF, \"true\", TermVectorParams.OFFSETS, \"true\", TermVectorParams.POSITIONS, \"true\", TermVectorParams.TF_IDF, \"true\"\n        ,TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\"\n        ,\"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\"\n        ,\"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.DF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\"\n        )\n    ,\"/termVectors/doc-0/test_basictv=={'anoth':{},'titl':{}}\"\n    ,\"/termVectors/doc-0/test_postv/anoth=={'tf':1, 'positions':{'position':1}, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/doc-0/test_offtv/anoth=={'tf':1, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/warnings=={ 'noTermVectors':['test_notv'], 'noPositions':['test_basictv', 'test_offtv'], 'noOffsets':['test_basictv', 'test_postv']}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testPerField() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",tv, \"q\", \"id:0\", TermVectorComponent.COMPONENT_NAME, \"true\"\n        ,TermVectorParams.TF, \"true\", TermVectorParams.DF, \"true\", TermVectorParams.OFFSETS, \"true\", TermVectorParams.POSITIONS, \"true\", TermVectorParams.TF_IDF, \"true\"\n        ,TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\"\n        ,\"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\"\n        ,\"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.DF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\"\n        )\n    ,\"/termVectors/doc-0/test_basictv=={'anoth':{},'titl':{}}\"\n    ,\"/termVectors/doc-0/test_postv/anoth=={'tf':1, 'positions':{'position':1}, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/doc-0/test_offtv/anoth=={'tf':1, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/warnings=={ 'noTermVectors':['test_notv'], 'noPositions':['test_basictv', 'test_offtv'], 'noOffsets':['test_basictv', 'test_postv']}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentTest#testPerField().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/TermVectorComponentTest#testPerField().mjava","sourceNew":"  @Test\n  public void testPerField() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",tv, \"q\", \"id:0\", TermVectorComponent.COMPONENT_NAME, \"true\"\n        ,TermVectorParams.TF, \"true\", TermVectorParams.DF, \"true\", TermVectorParams.OFFSETS, \"true\", TermVectorParams.POSITIONS, \"true\", TermVectorParams.TF_IDF, \"true\"\n        ,TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\"\n        ,\"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\"\n        ,\"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.DF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\"\n        )\n    ,\"/termVectors/doc-0/test_basictv=={'anoth':{},'titl':{}}\"\n    ,\"/termVectors/doc-0/test_postv/anoth=={'tf':1, 'positions':{'position':1}, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/doc-0/test_offtv/anoth=={'tf':1, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/warnings=={ 'noTermVectors':['test_notv'], 'noPositions':['test_basictv', 'test_offtv'], 'noOffsets':['test_basictv', 'test_postv']}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testPerField() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",tv, \"q\", \"id:0\", TermVectorComponent.COMPONENT_NAME, \"true\"\n        ,TermVectorParams.TF, \"true\", TermVectorParams.DF, \"true\", TermVectorParams.OFFSETS, \"true\", TermVectorParams.POSITIONS, \"true\", TermVectorParams.TF_IDF, \"true\"\n        ,TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\"\n        ,\"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\"\n        ,\"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.DF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\"\n        )\n    ,\"/termVectors/doc-0/test_basictv=={'anoth':{},'titl':{}}\"\n    ,\"/termVectors/doc-0/test_postv/anoth=={'tf':1, 'positions':{'position':1}, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/doc-0/test_offtv/anoth=={'tf':1, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/warnings=={ 'noTermVectors':['test_notv'], 'noPositions':['test_basictv', 'test_offtv'], 'noOffsets':['test_basictv', 'test_postv']}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba3a184cc785359756dd0a77bbdb0e4f06bf727b","date":1344450045,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentTest#testPerField().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentTest#testPerField().mjava","sourceNew":"  @Test\n  public void testPerField() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",tv, \"q\", \"id:0\", TermVectorComponent.COMPONENT_NAME, \"true\"\n        ,TermVectorParams.TF, \"true\", TermVectorParams.DF, \"true\", TermVectorParams.OFFSETS, \"true\", TermVectorParams.POSITIONS, \"true\", TermVectorParams.TF_IDF, \"true\"\n        ,TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\"\n        ,\"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\"\n        ,\"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.DF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\"\n        )\n    ,\"/termVectors/0/test_basictv=={'anoth':{},'titl':{}}\"\n    ,\"/termVectors/0/test_postv/anoth=={'tf':1, 'positions':{'position':1}, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/0/test_offtv/anoth=={'tf':1, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/warnings=={ 'noTermVectors':['test_notv'], 'noPositions':['test_basictv', 'test_offtv'], 'noOffsets':['test_basictv', 'test_postv']}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testPerField() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",tv, \"q\", \"id:0\", TermVectorComponent.COMPONENT_NAME, \"true\"\n        ,TermVectorParams.TF, \"true\", TermVectorParams.DF, \"true\", TermVectorParams.OFFSETS, \"true\", TermVectorParams.POSITIONS, \"true\", TermVectorParams.TF_IDF, \"true\"\n        ,TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\"\n        ,\"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\"\n        ,\"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.DF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\"\n        )\n    ,\"/termVectors/doc-0/test_basictv=={'anoth':{},'titl':{}}\"\n    ,\"/termVectors/doc-0/test_postv/anoth=={'tf':1, 'positions':{'position':1}, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/doc-0/test_offtv/anoth=={'tf':1, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/warnings=={ 'noTermVectors':['test_notv'], 'noPositions':['test_basictv', 'test_offtv'], 'noOffsets':['test_basictv', 'test_postv']}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentTest#testPerField().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentTest#testPerField().mjava","sourceNew":"  @Test\n  public void testPerField() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",tv, \"q\", \"id:0\", TermVectorComponent.COMPONENT_NAME, \"true\"\n        ,TermVectorParams.TF, \"true\", TermVectorParams.DF, \"true\", TermVectorParams.OFFSETS, \"true\", TermVectorParams.POSITIONS, \"true\", TermVectorParams.TF_IDF, \"true\"\n        ,TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\"\n        ,\"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\"\n        ,\"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.DF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\"\n        )\n    ,\"/termVectors/0/test_basictv=={'anoth':{},'titl':{}}\"\n    ,\"/termVectors/0/test_postv/anoth=={'tf':1, 'positions':{'position':1}, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/0/test_offtv/anoth=={'tf':1, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/warnings=={ 'noTermVectors':['test_notv'], 'noPositions':['test_basictv', 'test_offtv'], 'noOffsets':['test_basictv', 'test_postv']}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testPerField() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",tv, \"q\", \"id:0\", TermVectorComponent.COMPONENT_NAME, \"true\"\n        ,TermVectorParams.TF, \"true\", TermVectorParams.DF, \"true\", TermVectorParams.OFFSETS, \"true\", TermVectorParams.POSITIONS, \"true\", TermVectorParams.TF_IDF, \"true\"\n        ,TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\"\n        ,\"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\"\n        ,\"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.DF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\"\n        )\n    ,\"/termVectors/doc-0/test_basictv=={'anoth':{},'titl':{}}\"\n    ,\"/termVectors/doc-0/test_postv/anoth=={'tf':1, 'positions':{'position':1}, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/doc-0/test_offtv/anoth=={'tf':1, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/warnings=={ 'noTermVectors':['test_notv'], 'noPositions':['test_basictv', 'test_offtv'], 'noOffsets':['test_basictv', 'test_postv']}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentTest#testPerField().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentTest#testPerField().mjava","sourceNew":"  @Test\n  public void testPerField() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",tv, \"q\", \"id:0\", TermVectorComponent.COMPONENT_NAME, \"true\"\n        ,TermVectorParams.TF, \"true\", TermVectorParams.DF, \"true\", TermVectorParams.OFFSETS, \"true\", TermVectorParams.POSITIONS, \"true\", TermVectorParams.TF_IDF, \"true\"\n        ,TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\"\n        ,\"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\"\n        ,\"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.DF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\"\n        )\n    ,\"/termVectors/0/test_basictv=={'anoth':{},'titl':{}}\"\n    ,\"/termVectors/0/test_postv/anoth=={'tf':1, 'positions':{'position':1}, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/0/test_offtv/anoth=={'tf':1, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/warnings=={ 'noTermVectors':['test_notv'], 'noPositions':['test_basictv', 'test_offtv'], 'noOffsets':['test_basictv', 'test_postv']}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testPerField() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",tv, \"q\", \"id:0\", TermVectorComponent.COMPONENT_NAME, \"true\"\n        ,TermVectorParams.TF, \"true\", TermVectorParams.DF, \"true\", TermVectorParams.OFFSETS, \"true\", TermVectorParams.POSITIONS, \"true\", TermVectorParams.TF_IDF, \"true\"\n        ,TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\"\n        ,\"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\"\n        ,\"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.DF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\"\n        )\n    ,\"/termVectors/doc-0/test_basictv=={'anoth':{},'titl':{}}\"\n    ,\"/termVectors/doc-0/test_postv/anoth=={'tf':1, 'positions':{'position':1}, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/doc-0/test_offtv/anoth=={'tf':1, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/warnings=={ 'noTermVectors':['test_notv'], 'noPositions':['test_basictv', 'test_offtv'], 'noOffsets':['test_basictv', 'test_postv']}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eafa8c5eabc3dacd34680054e6a33bda024080ac","date":1367691488,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentTest#testPerField().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentTest#testPerField().mjava","sourceNew":"  @Test\n  public void testPerField() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",tv, \"q\", \"id:0\", TermVectorComponent.COMPONENT_NAME, \"true\"\n        ,TermVectorParams.TF, \"true\", TermVectorParams.DF, \"true\", TermVectorParams.OFFSETS, \"true\", TermVectorParams.POSITIONS, \"true\", TermVectorParams.TF_IDF, \"true\"\n        ,TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\"\n        ,\"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\"\n        ,\"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.DF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\"\n        )\n    ,\"/termVectors/0/test_basictv=={'anoth':{},'titl':{}}\"\n    ,\"/termVectors/0/test_postv/anoth=={'tf':1, 'positions':{'position':5}, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/0/test_offtv/anoth=={'tf':1, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/warnings=={ 'noTermVectors':['test_notv'], 'noPositions':['test_basictv', 'test_offtv'], 'noOffsets':['test_basictv', 'test_postv']}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testPerField() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",tv, \"q\", \"id:0\", TermVectorComponent.COMPONENT_NAME, \"true\"\n        ,TermVectorParams.TF, \"true\", TermVectorParams.DF, \"true\", TermVectorParams.OFFSETS, \"true\", TermVectorParams.POSITIONS, \"true\", TermVectorParams.TF_IDF, \"true\"\n        ,TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\"\n        ,\"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\"\n        ,\"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.DF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\"\n        )\n    ,\"/termVectors/0/test_basictv=={'anoth':{},'titl':{}}\"\n    ,\"/termVectors/0/test_postv/anoth=={'tf':1, 'positions':{'position':1}, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/0/test_offtv/anoth=={'tf':1, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/warnings=={ 'noTermVectors':['test_notv'], 'noPositions':['test_basictv', 'test_offtv'], 'noOffsets':['test_basictv', 'test_postv']}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a76608e7f735dce831f49f9b0c6bc13f10adc5a6","date":1427421698,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentTest#testPerField().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentTest#testPerField().mjava","sourceNew":"  @Test\n  public void testPerField() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",tv, \"q\", \"id:0\", TermVectorComponent.COMPONENT_NAME, \"true\"\n        ,TermVectorParams.TF, \"true\", TermVectorParams.DF, \"true\", TermVectorParams.OFFSETS, \"true\", TermVectorParams.POSITIONS, \"true\", TermVectorParams.TF_IDF, \"true\"\n        ,TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv,test_posoffpaytv\"\n        ,\"f.test_posoffpaytv.\" + TermVectorParams.PAYLOADS, \"false\"\n        ,\"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\"\n        ,\"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.DF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\"\n        )\n    ,\"/termVectors/0/test_basictv=={'anoth':{},'titl':{}}\"\n    ,\"/termVectors/0/test_postv/anoth=={'tf':1, 'positions':{'position':5}, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/0/test_offtv/anoth=={'tf':1, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/warnings=={ 'noTermVectors':['test_notv'], 'noPositions':['test_basictv', 'test_offtv'], 'noOffsets':['test_basictv', 'test_postv']}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testPerField() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",tv, \"q\", \"id:0\", TermVectorComponent.COMPONENT_NAME, \"true\"\n        ,TermVectorParams.TF, \"true\", TermVectorParams.DF, \"true\", TermVectorParams.OFFSETS, \"true\", TermVectorParams.POSITIONS, \"true\", TermVectorParams.TF_IDF, \"true\"\n        ,TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\"\n        ,\"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\"\n        ,\"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.DF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\"\n        )\n    ,\"/termVectors/0/test_basictv=={'anoth':{},'titl':{}}\"\n    ,\"/termVectors/0/test_postv/anoth=={'tf':1, 'positions':{'position':5}, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/0/test_offtv/anoth=={'tf':1, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/warnings=={ 'noTermVectors':['test_notv'], 'noPositions':['test_basictv', 'test_offtv'], 'noOffsets':['test_basictv', 'test_postv']}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentTest#testPerField().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentTest#testPerField().mjava","sourceNew":"  @Test\n  public void testPerField() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",tv, \"q\", \"id:0\", TermVectorComponent.COMPONENT_NAME, \"true\"\n        ,TermVectorParams.TF, \"true\", TermVectorParams.DF, \"true\", TermVectorParams.OFFSETS, \"true\", TermVectorParams.POSITIONS, \"true\", TermVectorParams.TF_IDF, \"true\"\n        ,TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv,test_posoffpaytv\"\n        ,\"f.test_posoffpaytv.\" + TermVectorParams.PAYLOADS, \"false\"\n        ,\"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\"\n        ,\"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.DF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\"\n        )\n    ,\"/termVectors/0/test_basictv=={'anoth':{},'titl':{}}\"\n    ,\"/termVectors/0/test_postv/anoth=={'tf':1, 'positions':{'position':5}, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/0/test_offtv/anoth=={'tf':1, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/warnings=={ 'noTermVectors':['test_notv'], 'noPositions':['test_basictv', 'test_offtv'], 'noOffsets':['test_basictv', 'test_postv']}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testPerField() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",tv, \"q\", \"id:0\", TermVectorComponent.COMPONENT_NAME, \"true\"\n        ,TermVectorParams.TF, \"true\", TermVectorParams.DF, \"true\", TermVectorParams.OFFSETS, \"true\", TermVectorParams.POSITIONS, \"true\", TermVectorParams.TF_IDF, \"true\"\n        ,TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv\"\n        ,\"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\"\n        ,\"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.DF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\"\n        )\n    ,\"/termVectors/0/test_basictv=={'anoth':{},'titl':{}}\"\n    ,\"/termVectors/0/test_postv/anoth=={'tf':1, 'positions':{'position':5}, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/0/test_offtv/anoth=={'tf':1, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/warnings=={ 'noTermVectors':['test_notv'], 'noPositions':['test_basictv', 'test_offtv'], 'noOffsets':['test_basictv', 'test_postv']}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa4d13fa31a8688899168167cbb4449e399b686f","date":1533611099,"type":4,"author":"Erick Erickson","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TermVectorComponentTest#testPerField().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testPerField() throws Exception {\n    assertJQ(req(\"json.nl\",\"map\", \"qt\",tv, \"q\", \"id:0\", TermVectorComponent.COMPONENT_NAME, \"true\"\n        ,TermVectorParams.TF, \"true\", TermVectorParams.DF, \"true\", TermVectorParams.OFFSETS, \"true\", TermVectorParams.POSITIONS, \"true\", TermVectorParams.TF_IDF, \"true\"\n        ,TermVectorParams.FIELDS, \"test_basictv,test_notv,test_postv,test_offtv,test_posofftv,test_posoffpaytv\"\n        ,\"f.test_posoffpaytv.\" + TermVectorParams.PAYLOADS, \"false\"\n        ,\"f.test_posofftv.\" + TermVectorParams.POSITIONS, \"false\"\n        ,\"f.test_offtv.\" + TermVectorParams.OFFSETS, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.DF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF, \"false\"\n        ,\"f.test_basictv.\" + TermVectorParams.TF_IDF, \"false\"\n        )\n    ,\"/termVectors/0/test_basictv=={'anoth':{},'titl':{}}\"\n    ,\"/termVectors/0/test_postv/anoth=={'tf':1, 'positions':{'position':5}, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/0/test_offtv/anoth=={'tf':1, 'df':2, 'tf-idf':0.5}\"\n    ,\"/termVectors/warnings=={ 'noTermVectors':['test_notv'], 'noPositions':['test_basictv', 'test_offtv'], 'noOffsets':['test_basictv', 'test_postv']}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["eafa8c5eabc3dacd34680054e6a33bda024080ac","a76608e7f735dce831f49f9b0c6bc13f10adc5a6"],"ba3a184cc785359756dd0a77bbdb0e4f06bf727b":["c26f00b574427b55127e869b935845554afde1fa"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["c26f00b574427b55127e869b935845554afde1fa","ba3a184cc785359756dd0a77bbdb0e4f06bf727b"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fa4d13fa31a8688899168167cbb4449e399b686f":["a76608e7f735dce831f49f9b0c6bc13f10adc5a6"],"a76608e7f735dce831f49f9b0c6bc13f10adc5a6":["eafa8c5eabc3dacd34680054e6a33bda024080ac"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"eafa8c5eabc3dacd34680054e6a33bda024080ac":["ba3a184cc785359756dd0a77bbdb0e4f06bf727b"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["c26f00b574427b55127e869b935845554afde1fa","ba3a184cc785359756dd0a77bbdb0e4f06bf727b"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fa4d13fa31a8688899168167cbb4449e399b686f"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"ba3a184cc785359756dd0a77bbdb0e4f06bf727b":["c7869f64c874ebf7f317d22c00baf2b6857797a6","eafa8c5eabc3dacd34680054e6a33bda024080ac","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a76608e7f735dce831f49f9b0c6bc13f10adc5a6":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","fa4d13fa31a8688899168167cbb4449e399b686f"],"c26f00b574427b55127e869b935845554afde1fa":["ba3a184cc785359756dd0a77bbdb0e4f06bf727b","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"fa4d13fa31a8688899168167cbb4449e399b686f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"eafa8c5eabc3dacd34680054e6a33bda024080ac":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a76608e7f735dce831f49f9b0c6bc13f10adc5a6"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}