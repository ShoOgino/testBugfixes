{"path":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","commits":[{"id":"d4769bdea5a853f1841c485bc1fd9d79cb7022fc","date":1292168168,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","pathOld":"/dev/null","sourceNew":"  public void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null) {\n      throw new IllegalStateException(\"empty output is already set\");\n    }\n    emptyOutput = v;\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","pathOld":"/dev/null","sourceNew":"  public void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null) {\n      throw new IllegalStateException(\"empty output is already set\");\n    }\n    emptyOutput = v;\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","pathOld":"/dev/null","sourceNew":"  public void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null) {\n      throw new IllegalStateException(\"empty output is already set\");\n    }\n    emptyOutput = v;\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56da903869515527852ee21ea7ef7bfe414cd40d","date":1294224724,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","sourceNew":"  void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null && !emptyOutput.equals(v)) {\n      throw new IllegalStateException(\"empty output is already set: \" + outputs.outputToString(emptyOutput) + \" vs \" + outputs.outputToString(v));\n    }\n    emptyOutput = v;\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","sourceOld":"  public void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null) {\n      throw new IllegalStateException(\"empty output is already set\");\n    }\n    emptyOutput = v;\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","sourceNew":"  void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null && !emptyOutput.equals(v)) {\n      throw new IllegalStateException(\"empty output is already set: \" + outputs.outputToString(emptyOutput) + \" vs \" + outputs.outputToString(v));\n    }\n    emptyOutput = v;\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","sourceOld":"  public void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null) {\n      throw new IllegalStateException(\"empty output is already set\");\n    }\n    emptyOutput = v;\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","sourceNew":"  void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null && !emptyOutput.equals(v)) {\n      throw new IllegalStateException(\"empty output is already set: \" + outputs.outputToString(emptyOutput) + \" vs \" + outputs.outputToString(v));\n    }\n    emptyOutput = v;\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","sourceOld":"  public void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null) {\n      throw new IllegalStateException(\"empty output is already set\");\n    }\n    emptyOutput = v;\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea8136d8c9f128223389b731b2affdeccdbf1af3","date":1305220410,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","sourceNew":"  void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null) {\n      if (!emptyOutput.equals(v)) {\n        emptyOutput = outputs.merge(emptyOutput, v);\n      }\n    } else {\n      emptyOutput = v;\n    }\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","sourceOld":"  void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null && !emptyOutput.equals(v)) {\n      throw new IllegalStateException(\"empty output is already set: \" + outputs.outputToString(emptyOutput) + \" vs \" + outputs.outputToString(v));\n    }\n    emptyOutput = v;\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","sourceNew":"  void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null) {\n      if (!emptyOutput.equals(v)) {\n        emptyOutput = outputs.merge(emptyOutput, v);\n      }\n    } else {\n      emptyOutput = v;\n    }\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","sourceOld":"  void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null && !emptyOutput.equals(v)) {\n      throw new IllegalStateException(\"empty output is already set: \" + outputs.outputToString(emptyOutput) + \" vs \" + outputs.outputToString(v));\n    }\n    emptyOutput = v;\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7bb4e4e4a6b66f262115066bbc28b9859f54747e","date":1305657437,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","sourceNew":"  void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null) {\n      emptyOutput = outputs.merge(emptyOutput, v);\n    } else {\n      emptyOutput = v;\n    }\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","sourceOld":"  void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null) {\n      if (!emptyOutput.equals(v)) {\n        emptyOutput = outputs.merge(emptyOutput, v);\n      }\n    } else {\n      emptyOutput = v;\n    }\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","sourceNew":"  void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null) {\n      emptyOutput = outputs.merge(emptyOutput, v);\n    } else {\n      emptyOutput = v;\n    }\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","sourceOld":"  void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null) {\n      if (!emptyOutput.equals(v)) {\n        emptyOutput = outputs.merge(emptyOutput, v);\n      }\n    } else {\n      emptyOutput = v;\n    }\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","sourceNew":"  void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null) {\n      emptyOutput = outputs.merge(emptyOutput, v);\n    } else {\n      emptyOutput = v;\n    }\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","sourceOld":"  void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null && !emptyOutput.equals(v)) {\n      throw new IllegalStateException(\"empty output is already set: \" + outputs.outputToString(emptyOutput) + \" vs \" + outputs.outputToString(v));\n    }\n    emptyOutput = v;\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8be6e1e4fbbc94d90b78f175c03ff389b6949373","date":1306674752,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#setEmptyOutput(T).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","sourceNew":"  void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null) {\n      emptyOutput = outputs.merge(emptyOutput, v);\n    } else {\n      emptyOutput = v;\n    }\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","sourceOld":"  void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null) {\n      emptyOutput = outputs.merge(emptyOutput, v);\n    } else {\n      emptyOutput = v;\n    }\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#setEmptyOutput(T).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","sourceNew":"  void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null) {\n      emptyOutput = outputs.merge(emptyOutput, v);\n    } else {\n      emptyOutput = v;\n    }\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","sourceOld":"  void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null) {\n      emptyOutput = outputs.merge(emptyOutput, v);\n    } else {\n      emptyOutput = v;\n    }\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#setEmptyOutput(T).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#setEmptyOutput(T).mjava","sourceNew":"  void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null) {\n      emptyOutput = outputs.merge(emptyOutput, v);\n    } else {\n      emptyOutput = v;\n    }\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","sourceOld":"  void setEmptyOutput(T v) throws IOException {\n    if (emptyOutput != null) {\n      emptyOutput = outputs.merge(emptyOutput, v);\n    } else {\n      emptyOutput = v;\n    }\n\n    // TODO: this is messy -- replace with sillyBytesWriter; maybe make\n    // bytes private\n    final int posSave = writer.posWrite;\n    outputs.write(emptyOutput, writer);\n    emptyOutputBytes = new byte[writer.posWrite-posSave];\n\n    // reverse\n    final int stopAt = (writer.posWrite - posSave)/2;\n    int upto = 0;\n    while(upto < stopAt) {\n      final byte b = bytes[posSave + upto];\n      bytes[posSave+upto] = bytes[writer.posWrite-upto-1];\n      bytes[writer.posWrite-upto-1] = b;\n      upto++;\n    }\n    System.arraycopy(bytes, posSave, emptyOutputBytes, 0, writer.posWrite-posSave);\n    writer.posWrite = posSave;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","56da903869515527852ee21ea7ef7bfe414cd40d"],"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["7bb4e4e4a6b66f262115066bbc28b9859f54747e"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"7bb4e4e4a6b66f262115066bbc28b9859f54747e":["ea8136d8c9f128223389b731b2affdeccdbf1af3"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"d4769bdea5a853f1841c485bc1fd9d79cb7022fc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb","7bb4e4e4a6b66f262115066bbc28b9859f54747e"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"56da903869515527852ee21ea7ef7bfe414cd40d":["d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"a3776dccca01c11e7046323cfad46a3b4a471233":["56da903869515527852ee21ea7ef7bfe414cd40d","7bb4e4e4a6b66f262115066bbc28b9859f54747e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ea8136d8c9f128223389b731b2affdeccdbf1af3":["56da903869515527852ee21ea7ef7bfe414cd40d"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["70ad682703b8585f5d0a637efec044d57ec05efb","ea8136d8c9f128223389b731b2affdeccdbf1af3"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","56da903869515527852ee21ea7ef7bfe414cd40d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["c3a8a449466c1ff7ce2274fe73dab487256964b4","8be6e1e4fbbc94d90b78f175c03ff389b6949373"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["70ad682703b8585f5d0a637efec044d57ec05efb"],"7bb4e4e4a6b66f262115066bbc28b9859f54747e":["8be6e1e4fbbc94d90b78f175c03ff389b6949373","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"d4769bdea5a853f1841c485bc1fd9d79cb7022fc":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","56da903869515527852ee21ea7ef7bfe414cd40d"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"56da903869515527852ee21ea7ef7bfe414cd40d":["70ad682703b8585f5d0a637efec044d57ec05efb","a3776dccca01c11e7046323cfad46a3b4a471233","ea8136d8c9f128223389b731b2affdeccdbf1af3","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"ea8136d8c9f128223389b731b2affdeccdbf1af3":["7bb4e4e4a6b66f262115066bbc28b9859f54747e","c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["c3a8a449466c1ff7ce2274fe73dab487256964b4"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}