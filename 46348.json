{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/DateEvaluatorTest#testExplain().mjava","commits":[{"id":"431fcaec9cce0a765cb0d341b8e4e51f133e6519","date":1492023302,"type":0,"author":"Gethin James","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/DateEvaluatorTest#testExplain().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testExplain() throws IOException {\n    StreamExpression express = StreamExpressionParser.parse(\"month('myfield')\");\n    DateEvaluator dateEvaluator = new DateEvaluator(express,factory);\n    Explanation explain = dateEvaluator.toExplanation(factory);\n    assertEquals(\"month(myfield)\", explain.getExpression());\n\n    express = StreamExpressionParser.parse(\"day(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbb)\");\n    dateEvaluator = new DateEvaluator(express,factory);\n    explain = dateEvaluator.toExplanation(factory);\n    assertEquals(\"day(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbb)\", explain.getExpression());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"40b789607c421011dabf36a935528a74fb8b2032","date":1492023606,"type":5,"author":"Gethin James","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/DatePartEvaluatorTest#testExplain().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/DateEvaluatorTest#testExplain().mjava","sourceNew":"  @Test\n  public void testExplain() throws IOException {\n    StreamExpression express = StreamExpressionParser.parse(\"month('myfield')\");\n    DatePartEvaluator datePartEvaluator = new DatePartEvaluator(express,factory);\n    Explanation explain = datePartEvaluator.toExplanation(factory);\n    assertEquals(\"month(myfield)\", explain.getExpression());\n\n    express = StreamExpressionParser.parse(\"day(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbb)\");\n    datePartEvaluator = new DatePartEvaluator(express,factory);\n    explain = datePartEvaluator.toExplanation(factory);\n    assertEquals(\"day(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbb)\", explain.getExpression());\n  }\n\n","sourceOld":"  @Test\n  public void testExplain() throws IOException {\n    StreamExpression express = StreamExpressionParser.parse(\"month('myfield')\");\n    DateEvaluator dateEvaluator = new DateEvaluator(express,factory);\n    Explanation explain = dateEvaluator.toExplanation(factory);\n    assertEquals(\"month(myfield)\", explain.getExpression());\n\n    express = StreamExpressionParser.parse(\"day(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbb)\");\n    dateEvaluator = new DateEvaluator(express,factory);\n    explain = dateEvaluator.toExplanation(factory);\n    assertEquals(\"day(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbb)\", explain.getExpression());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"431fcaec9cce0a765cb0d341b8e4e51f133e6519":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"40b789607c421011dabf36a935528a74fb8b2032":["431fcaec9cce0a765cb0d341b8e4e51f133e6519"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["40b789607c421011dabf36a935528a74fb8b2032"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["431fcaec9cce0a765cb0d341b8e4e51f133e6519"],"431fcaec9cce0a765cb0d341b8e4e51f133e6519":["40b789607c421011dabf36a935528a74fb8b2032"],"40b789607c421011dabf36a935528a74fb8b2032":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}