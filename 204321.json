{"path":"lucene/core/src/java/org/apache/lucene/util/compress/LZ4#encodeLiterals(byte[],int,int,int,DataOutput).mjava","commits":[{"id":"9407318969e8504257b4c5764c65755a043e5404","date":1579873617,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/compress/LZ4#encodeLiterals(byte[],int,int,int,DataOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/LZ4#encodeLiterals(byte[],int,int,int,DataOutput).mjava","sourceNew":"  private static void encodeLiterals(byte[] bytes, int token, int anchor, int literalLen, DataOutput out) throws IOException {\n    out.writeByte((byte) token);\n\n    // encode literal length\n    if (literalLen >= 0x0F) {\n      encodeLen(literalLen - 0x0F, out);\n    }\n\n    // encode literals\n    out.writeBytes(bytes, anchor, literalLen);\n  }\n\n","sourceOld":"  private static void encodeLiterals(byte[] bytes, int token, int anchor, int literalLen, DataOutput out) throws IOException {\n    out.writeByte((byte) token);\n\n    // encode literal length\n    if (literalLen >= 0x0F) {\n      encodeLen(literalLen - 0x0F, out);\n    }\n\n    // encode literals\n    out.writeBytes(bytes, anchor, literalLen);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9407318969e8504257b4c5764c65755a043e5404":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9407318969e8504257b4c5764c65755a043e5404"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9407318969e8504257b4c5764c65755a043e5404"],"9407318969e8504257b4c5764c65755a043e5404":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}