{"path":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#equals(Object).mjava","commits":[{"id":"c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d","date":1382570352,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"    public boolean equals(Object o) {\n      //Uses the unique id for equals to ensure that the query result cache always fails.\n      if(o instanceof CollapsingPostFilter) {\n        CollapsingPostFilter c = (CollapsingPostFilter)o;\n        //Do object comparison to be sure only the same object will return true.\n        if(this.cacheId == c.cacheId && this.getBoost()==c.getBoost()) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f9eac2f0b568b3694682edb863185a273fbbc6f","date":1391883217,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#equals(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#equals(Object).mjava","sourceNew":"    public boolean equals(Object o) {\n\n      if(o instanceof CollapsingPostFilter) {\n        CollapsingPostFilter c = (CollapsingPostFilter)o;\n        if(this.field.equals(c.field) &&\n           ((this.max == null && c.max == null) || (this.max != null && c.max != null && this.max.equals(c.max))) &&\n           ((this.min == null && c.min == null) || (this.min != null && c.min != null && this.min.equals(c.min))) &&\n           this.nullPolicy == c.nullPolicy &&\n           ((this.boosted == null && c.boosted == null) || (this.boosted == c.boosted)) &&\n           this.getBoost()==c.getBoost()) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n","sourceOld":"    public boolean equals(Object o) {\n      //Uses the unique id for equals to ensure that the query result cache always fails.\n      if(o instanceof CollapsingPostFilter) {\n        CollapsingPostFilter c = (CollapsingPostFilter)o;\n        //Do object comparison to be sure only the same object will return true.\n        if(this.cacheId == c.cacheId && this.getBoost()==c.getBoost()) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7","date":1401992910,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#equals(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#equals(Object).mjava","sourceNew":"    public boolean equals(Object o) {\n\n      if(o instanceof CollapsingPostFilter) {\n        CollapsingPostFilter c = (CollapsingPostFilter)o;\n        if(this.field.equals(c.field) &&\n           ((this.max == null && c.max == null) || (this.max != null && c.max != null && this.max.equals(c.max))) &&\n           ((this.min == null && c.min == null) || (this.min != null && c.min != null && this.min.equals(c.min))) &&\n           this.nullPolicy == c.nullPolicy &&\n           this.getBoost()==c.getBoost()) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n","sourceOld":"    public boolean equals(Object o) {\n\n      if(o instanceof CollapsingPostFilter) {\n        CollapsingPostFilter c = (CollapsingPostFilter)o;\n        if(this.field.equals(c.field) &&\n           ((this.max == null && c.max == null) || (this.max != null && c.max != null && this.max.equals(c.max))) &&\n           ((this.min == null && c.min == null) || (this.min != null && c.min != null && this.min.equals(c.min))) &&\n           this.nullPolicy == c.nullPolicy &&\n           ((this.boosted == null && c.boosted == null) || (this.boosted == c.boosted)) &&\n           this.getBoost()==c.getBoost()) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ced52befdc8d88d90766aadbaac496f3fd0e4ee","date":1421070034,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#equals(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#equals(Object).mjava","sourceNew":"    public boolean equals(Object o) {\n\n      if(o instanceof CollapsingPostFilter) {\n        CollapsingPostFilter c = (CollapsingPostFilter)o;\n        if(this.collapseField.equals(c.collapseField) &&\n           ((this.max == null && c.max == null) || (this.max != null && c.max != null && this.max.equals(c.max))) &&\n           ((this.min == null && c.min == null) || (this.min != null && c.min != null && this.min.equals(c.min))) &&\n           this.nullPolicy == c.nullPolicy &&\n           this.getBoost()==c.getBoost()) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n","sourceOld":"    public boolean equals(Object o) {\n\n      if(o instanceof CollapsingPostFilter) {\n        CollapsingPostFilter c = (CollapsingPostFilter)o;\n        if(this.field.equals(c.field) &&\n           ((this.max == null && c.max == null) || (this.max != null && c.max != null && this.max.equals(c.max))) &&\n           ((this.min == null && c.min == null) || (this.min != null && c.min != null && this.min.equals(c.min))) &&\n           this.nullPolicy == c.nullPolicy &&\n           this.getBoost()==c.getBoost()) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#equals(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#equals(Object).mjava","sourceNew":"    public boolean equals(Object o) {\n\n      if(o instanceof CollapsingPostFilter) {\n        CollapsingPostFilter c = (CollapsingPostFilter)o;\n        if(this.collapseField.equals(c.collapseField) &&\n           ((this.max == null && c.max == null) || (this.max != null && c.max != null && this.max.equals(c.max))) &&\n           ((this.min == null && c.min == null) || (this.min != null && c.min != null && this.min.equals(c.min))) &&\n           this.nullPolicy == c.nullPolicy) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n","sourceOld":"    public boolean equals(Object o) {\n\n      if(o instanceof CollapsingPostFilter) {\n        CollapsingPostFilter c = (CollapsingPostFilter)o;\n        if(this.collapseField.equals(c.collapseField) &&\n           ((this.max == null && c.max == null) || (this.max != null && c.max != null && this.max.equals(c.max))) &&\n           ((this.min == null && c.min == null) || (this.min != null && c.min != null && this.min.equals(c.min))) &&\n           this.nullPolicy == c.nullPolicy &&\n           this.getBoost()==c.getBoost()) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0325de99180d346d61d36938843a5c8451fe26ae","date":1447368726,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#equals(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#equals(Object).mjava","sourceNew":"    public boolean equals(Object o) {\n\n      if(o instanceof CollapsingPostFilter) {\n        CollapsingPostFilter c = (CollapsingPostFilter)o;\n        if(this.collapseField.equals(c.collapseField) &&\n           this.groupHeadSelector.equals(c.groupHeadSelector) &&\n           this.nullPolicy == c.nullPolicy) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n","sourceOld":"    public boolean equals(Object o) {\n\n      if(o instanceof CollapsingPostFilter) {\n        CollapsingPostFilter c = (CollapsingPostFilter)o;\n        if(this.collapseField.equals(c.collapseField) &&\n           ((this.max == null && c.max == null) || (this.max != null && c.max != null && this.max.equals(c.max))) &&\n           ((this.min == null && c.min == null) || (this.min != null && c.min != null && this.min.equals(c.min))) &&\n           this.nullPolicy == c.nullPolicy) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#equals(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#equals(Object).mjava","sourceNew":"    public boolean equals(Object other) {\n      return sameClassAs(other) &&\n             equalsTo(getClass().cast(other));\n    }\n\n","sourceOld":"    public boolean equals(Object o) {\n\n      if(o instanceof CollapsingPostFilter) {\n        CollapsingPostFilter c = (CollapsingPostFilter)o;\n        if(this.collapseField.equals(c.collapseField) &&\n           this.groupHeadSelector.equals(c.groupHeadSelector) &&\n           this.nullPolicy == c.nullPolicy) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#equals(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingPostFilter#equals(Object).mjava","sourceNew":"    public boolean equals(Object other) {\n      return sameClassAs(other) &&\n             equalsTo(getClass().cast(other));\n    }\n\n","sourceOld":"    public boolean equals(Object o) {\n\n      if(o instanceof CollapsingPostFilter) {\n        CollapsingPostFilter c = (CollapsingPostFilter)o;\n        if(this.collapseField.equals(c.collapseField) &&\n           this.groupHeadSelector.equals(c.groupHeadSelector) &&\n           this.nullPolicy == c.nullPolicy) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7"],"c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["0325de99180d346d61d36938843a5c8451fe26ae"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"6f9eac2f0b568b3694682edb863185a273fbbc6f":["c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d"],"0325de99180d346d61d36938843a5c8451fe26ae":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7":["6f9eac2f0b568b3694682edb863185a273fbbc6f"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["0325de99180d346d61d36938843a5c8451fe26ae","0e7bc21595222ae4f75509300fbb7726691f387f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e7bc21595222ae4f75509300fbb7726691f387f"]},"commit2Childs":{"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d":["6f9eac2f0b568b3694682edb863185a273fbbc6f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d"],"0e7bc21595222ae4f75509300fbb7726691f387f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["0325de99180d346d61d36938843a5c8451fe26ae"],"6f9eac2f0b568b3694682edb863185a273fbbc6f":["a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7"],"a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"0325de99180d346d61d36938843a5c8451fe26ae":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}