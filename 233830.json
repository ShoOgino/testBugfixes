{"path":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","commits":[{"id":"e4946500259641951dbd7f8a61956bf14bef3f60","date":1283284212,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        newStaticRandom(TestSubScorerFreqs.class), dir);\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(new Field(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = new IndexSearcher(w.getReader());\n    w.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","sourceNew":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    Random random = newStaticRandom(TestSubScorerFreqs.class);\n    RandomIndexWriter w = new RandomIndexWriter(\n        random, dir);\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(random, \"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(random, \"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = new IndexSearcher(w.getReader());\n    w.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        newStaticRandom(TestSubScorerFreqs.class), dir);\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(new Field(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = new IndexSearcher(w.getReader());\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f9dba8ffba48fba97d7a90fd45f6da87ba55736","date":1285244347,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","sourceNew":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random, dir);\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = new IndexSearcher(w.getReader());\n    w.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    Random random = newStaticRandom(TestSubScorerFreqs.class);\n    RandomIndexWriter w = new RandomIndexWriter(\n        random, dir);\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(random, \"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(random, \"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = new IndexSearcher(w.getReader());\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random, dir);\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = new IndexSearcher(w.getReader());\n    w.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c19f985e36a65cc969e8e564fe337a0d41512075","date":1296330536,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","sourceNew":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = new IndexSearcher(w.getReader());\n    w.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random, dir);\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = new IndexSearcher(w.getReader());\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"790e1fde4caa765b3faaad3fbcd25c6973450336","date":1296689245,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","sourceNew":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = new IndexSearcher(w.getReader());\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","sourceNew":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random, dir);\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = new IndexSearcher(w.getReader());\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","sourceNew":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random, dir);\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = new IndexSearcher(w.getReader());\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"01e5948db9a07144112d2f08f28ca2e3cd880348","date":1301759232,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","sourceNew":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","sourceNew":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","sourceNew":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","sourceNew":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","sourceNew":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","sourceNew":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f83af14a2a8131b14d7aee6274c740334e0363d3","date":1307579822,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","sourceNew":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    int num = atLeast(31);\n    for (int i = 0; i < num; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","sourceNew":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    int num = atLeast(31);\n    for (int i = 0; i < num; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","sourceNew":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    int num = atLeast(31);\n    for (int i = 0; i < num; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    for (int i = 0; i < 31 * RANDOM_MULTIPLIER; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","sourceNew":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    int num = atLeast(31);\n    for (int i = 0; i < num; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", TextField.TYPE_UNSTORED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", TextField.TYPE_UNSTORED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    int num = atLeast(31);\n    for (int i = 0; i < num; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", Field.Store.NO,\n          Field.Index.ANALYZED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", Field.Store.NO, Field.Index.ANALYZED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSubScorerFreqs#makeIndex().mjava","sourceNew":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    int num = atLeast(31);\n    for (int i = 0; i < num; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", TextField.TYPE_UNSTORED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", TextField.TYPE_UNSTORED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void makeIndex() throws Exception {\n    dir = new RAMDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n                                                random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    // make sure we have more than one segment occationally\n    int num = atLeast(31);\n    for (int i = 0; i < num; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"f\", \"a b c d b c d c d d\", TextField.TYPE_UNSTORED));\n      w.addDocument(doc);\n\n      doc = new Document();\n      doc.add(newField(\"f\", \"a b c d\", TextField.TYPE_UNSTORED));\n      w.addDocument(doc);\n    }\n\n    s = newSearcher(w.getReader());\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a3776dccca01c11e7046323cfad46a3b4a471233","f83af14a2a8131b14d7aee6274c740334e0363d3"],"f83af14a2a8131b14d7aee6274c740334e0363d3":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["e4946500259641951dbd7f8a61956bf14bef3f60"],"962d04139994fce5193143ef35615499a9a96d78":["45669a651c970812a680841b97a77cce06af559f","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5f9dba8ffba48fba97d7a90fd45f6da87ba55736"],"c19f985e36a65cc969e8e564fe337a0d41512075":["5f9dba8ffba48fba97d7a90fd45f6da87ba55736"],"5f9dba8ffba48fba97d7a90fd45f6da87ba55736":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["c19f985e36a65cc969e8e564fe337a0d41512075"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["01e5948db9a07144112d2f08f28ca2e3cd880348"],"a3776dccca01c11e7046323cfad46a3b4a471233":["790e1fde4caa765b3faaad3fbcd25c6973450336","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["5f9dba8ffba48fba97d7a90fd45f6da87ba55736","790e1fde4caa765b3faaad3fbcd25c6973450336"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["135621f3a0670a9394eb563224a3b76cc4dddc0f","f83af14a2a8131b14d7aee6274c740334e0363d3"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["f83af14a2a8131b14d7aee6274c740334e0363d3"],"45669a651c970812a680841b97a77cce06af559f":["bde51b089eb7f86171eb3406e38a274743f9b7ac","01e5948db9a07144112d2f08f28ca2e3cd880348"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","790e1fde4caa765b3faaad3fbcd25c6973450336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e4946500259641951dbd7f8a61956bf14bef3f60":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"f83af14a2a8131b14d7aee6274c740334e0363d3":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["5f9dba8ffba48fba97d7a90fd45f6da87ba55736"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"5f9dba8ffba48fba97d7a90fd45f6da87ba55736":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c19f985e36a65cc969e8e564fe337a0d41512075","29ef99d61cda9641b6250bf9567329a6e65f901d"],"c19f985e36a65cc969e8e564fe337a0d41512075":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["f2c5f0cb44df114db4228c8f77861714b5cabaea","45669a651c970812a680841b97a77cce06af559f"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["01e5948db9a07144112d2f08f28ca2e3cd880348","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["f83af14a2a8131b14d7aee6274c740334e0363d3","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","e4946500259641951dbd7f8a61956bf14bef3f60"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"45669a651c970812a680841b97a77cce06af559f":["962d04139994fce5193143ef35615499a9a96d78"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["45669a651c970812a680841b97a77cce06af559f"],"e4946500259641951dbd7f8a61956bf14bef3f60":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","962d04139994fce5193143ef35615499a9a96d78","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}