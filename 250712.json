{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilter#beforeClass().mjava","commits":[{"id":"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e","date":1393532367,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilter#beforeClass().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell2/TestHunspell2StemFilter#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    try (InputStream affixStream = TestStemmer.class.getResourceAsStream(\"simple.aff\");\n         InputStream dictStream = TestStemmer.class.getResourceAsStream(\"simple.dic\")) {\n      dictionary = new Dictionary(affixStream, dictStream);\n    }\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    try (InputStream affixStream = TestStemmer.class.getResourceAsStream(\"simple.aff\");\n         InputStream dictStream = TestStemmer.class.getResourceAsStream(\"simple.dic\")) {\n      dictionary = new Dictionary(affixStream, dictStream);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba791bce8103c79e38f957e9c5a53a75871bd918","date":1393539206,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilter#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    try (InputStream affixStream = TestStemmer.class.getResourceAsStream(\"simple.aff\");\n         InputStream dictStream = TestStemmer.class.getResourceAsStream(\"simple.dic\")) {\n      dictionary = new Dictionary(affixStream, dictStream);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b6b9214e93abd5c360b7dc32483691d5555a9c7e","date":1394289706,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilter#beforeClass().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilter#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // no multiple try-with to workaround bogus VerifyError\n    InputStream affixStream = TestStemmer.class.getResourceAsStream(\"simple.aff\");\n    InputStream dictStream = TestStemmer.class.getResourceAsStream(\"simple.dic\");\n    try {\n      dictionary = new Dictionary(affixStream, dictStream);\n    } finally {\n      IOUtils.closeWhileHandlingException(affixStream, dictStream);\n    }\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    try (InputStream affixStream = TestStemmer.class.getResourceAsStream(\"simple.aff\");\n         InputStream dictStream = TestStemmer.class.getResourceAsStream(\"simple.dic\")) {\n      dictionary = new Dictionary(affixStream, dictStream);\n    }\n  }\n\n","bugFix":["c214bc712d04c78c4d434119d560d0a4dd2fce4f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","date":1394564625,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilter#beforeClass().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilter#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // no multiple try-with to workaround bogus VerifyError\n    InputStream affixStream = TestStemmer.class.getResourceAsStream(\"simple.aff\");\n    InputStream dictStream = TestStemmer.class.getResourceAsStream(\"simple.dic\");\n    try {\n      dictionary = new Dictionary(affixStream, dictStream);\n    } finally {\n      IOUtils.closeWhileHandlingException(affixStream, dictStream);\n    }\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    try (InputStream affixStream = TestStemmer.class.getResourceAsStream(\"simple.aff\");\n         InputStream dictStream = TestStemmer.class.getResourceAsStream(\"simple.dic\")) {\n      dictionary = new Dictionary(affixStream, dictStream);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilter#beforeClass().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestHunspellStemFilter#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // no multiple try-with to workaround bogus VerifyError\n    InputStream affixStream = TestStemmer.class.getResourceAsStream(\"simple.aff\");\n    InputStream dictStream = TestStemmer.class.getResourceAsStream(\"simple.dic\");\n    Directory tempDir = getDirectory();\n    \n    try {\n      dictionary = new Dictionary(tempDir, \"dictionary\", affixStream, dictStream);\n    } finally {\n      IOUtils.closeWhileHandlingException(affixStream, dictStream);\n    }\n    tempDir.close();\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    // no multiple try-with to workaround bogus VerifyError\n    InputStream affixStream = TestStemmer.class.getResourceAsStream(\"simple.aff\");\n    InputStream dictStream = TestStemmer.class.getResourceAsStream(\"simple.dic\");\n    try {\n      dictionary = new Dictionary(affixStream, dictStream);\n    } finally {\n      IOUtils.closeWhileHandlingException(affixStream, dictStream);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ba791bce8103c79e38f957e9c5a53a75871bd918":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dc3f094cafa4a87b4066e1d6710fa4e6afe6260e"],"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4":["ba791bce8103c79e38f957e9c5a53a75871bd918","b6b9214e93abd5c360b7dc32483691d5555a9c7e"],"b6b9214e93abd5c360b7dc32483691d5555a9c7e":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["b6b9214e93abd5c360b7dc32483691d5555a9c7e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["867e3d9153fb761456b54a9dcce566e1545c5ef6"]},"commit2Childs":{"ba791bce8103c79e38f957e9c5a53a75871bd918":["a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","b6b9214e93abd5c360b7dc32483691d5555a9c7e"],"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba791bce8103c79e38f957e9c5a53a75871bd918","dc3f094cafa4a87b4066e1d6710fa4e6afe6260e"],"b6b9214e93abd5c360b7dc32483691d5555a9c7e":["a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","867e3d9153fb761456b54a9dcce566e1545c5ef6"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}