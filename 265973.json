{"path":"src/test/org/apache/lucene/analysis/TestAnalyzers#testLowerCaseFilterBWComp().mjava","commits":[{"id":"41ce0ce6485d29a241c4ca4b6179d14df6a66bae","date":1259357651,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestAnalyzers#testLowerCaseFilterBWComp().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test that LowercaseFilter only works on BMP for back compat,\n   * depending upon version\n   * @deprecated remove this test when lucene 3.0 \"broken unicode 4\" support\n   * is no longer needed.\n   */\n  public void testLowerCaseFilterBWComp() throws IOException {\n    Analyzer a = new LowerCaseWhitespaceAnalyzerBWComp();\n    // BMP\n    assertAnalyzesTo(a, \"AbaCaDabA\", new String[] { \"abacadaba\" });\n    // supplementary, no-op\n    assertAnalyzesTo(a, \"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\",\n        new String[] {\"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\"});\n    assertAnalyzesTo(a, \"AbaCa\\ud801\\udc16DabA\",\n        new String[] { \"abaca\\ud801\\udc16daba\" });\n    // unpaired lead surrogate\n    assertAnalyzesTo(a, \"AbaC\\uD801AdaBa\", \n        new String [] { \"abac\\uD801adaba\" });\n    // unpaired trail surrogate\n    assertAnalyzesTo(a, \"AbaC\\uDC16AdaBa\", \n        new String [] { \"abac\\uDC16adaba\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5","date":1262514702,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestAnalyzers#testLowerCaseFilterBWComp().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestAnalyzers#testLowerCaseFilterBWComp().mjava","sourceNew":"  /**\n   * Test that LowercaseFilter only works on BMP for back compat,\n   * depending upon version\n   * @deprecated remove this test when lucene 3.0 \"broken unicode 4\" support\n   * is no longer needed.\n   */\n  @Deprecated\n  public void testLowerCaseFilterBWComp() throws IOException {\n    Analyzer a = new LowerCaseWhitespaceAnalyzerBWComp();\n    // BMP\n    assertAnalyzesTo(a, \"AbaCaDabA\", new String[] { \"abacadaba\" });\n    // supplementary, no-op\n    assertAnalyzesTo(a, \"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\",\n        new String[] {\"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\"});\n    assertAnalyzesTo(a, \"AbaCa\\ud801\\udc16DabA\",\n        new String[] { \"abaca\\ud801\\udc16daba\" });\n    // unpaired lead surrogate\n    assertAnalyzesTo(a, \"AbaC\\uD801AdaBa\", \n        new String [] { \"abac\\uD801adaba\" });\n    // unpaired trail surrogate\n    assertAnalyzesTo(a, \"AbaC\\uDC16AdaBa\", \n        new String [] { \"abac\\uDC16adaba\" });\n  }\n\n","sourceOld":"  /**\n   * Test that LowercaseFilter only works on BMP for back compat,\n   * depending upon version\n   * @deprecated remove this test when lucene 3.0 \"broken unicode 4\" support\n   * is no longer needed.\n   */\n  public void testLowerCaseFilterBWComp() throws IOException {\n    Analyzer a = new LowerCaseWhitespaceAnalyzerBWComp();\n    // BMP\n    assertAnalyzesTo(a, \"AbaCaDabA\", new String[] { \"abacadaba\" });\n    // supplementary, no-op\n    assertAnalyzesTo(a, \"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\",\n        new String[] {\"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\"});\n    assertAnalyzesTo(a, \"AbaCa\\ud801\\udc16DabA\",\n        new String[] { \"abaca\\ud801\\udc16daba\" });\n    // unpaired lead surrogate\n    assertAnalyzesTo(a, \"AbaC\\uD801AdaBa\", \n        new String [] { \"abac\\uD801adaba\" });\n    // unpaired trail surrogate\n    assertAnalyzesTo(a, \"AbaC\\uDC16AdaBa\", \n        new String [] { \"abac\\uDC16adaba\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestAnalyzers#testLowerCaseFilterBWComp().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestAnalyzers#testLowerCaseFilterBWComp().mjava","sourceNew":"  /**\n   * Test that LowercaseFilter only works on BMP for back compat,\n   * depending upon version\n   * @deprecated remove this test when lucene 3.0 \"broken unicode 4\" support\n   * is no longer needed.\n   */\n  @Deprecated\n  public void testLowerCaseFilterBWComp() throws IOException {\n    Analyzer a = new LowerCaseWhitespaceAnalyzerBWComp();\n    // BMP\n    assertAnalyzesTo(a, \"AbaCaDabA\", new String[] { \"abacadaba\" });\n    // supplementary, no-op\n    assertAnalyzesTo(a, \"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\",\n        new String[] {\"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\"});\n    assertAnalyzesTo(a, \"AbaCa\\ud801\\udc16DabA\",\n        new String[] { \"abaca\\ud801\\udc16daba\" });\n    // unpaired lead surrogate\n    assertAnalyzesTo(a, \"AbaC\\uD801AdaBa\", \n        new String [] { \"abac\\uD801adaba\" });\n    // unpaired trail surrogate\n    assertAnalyzesTo(a, \"AbaC\\uDC16AdaBa\", \n        new String [] { \"abac\\uDC16adaba\" });\n  }\n\n","sourceOld":"  /**\n   * Test that LowercaseFilter only works on BMP for back compat,\n   * depending upon version\n   * @deprecated remove this test when lucene 3.0 \"broken unicode 4\" support\n   * is no longer needed.\n   */\n  @Deprecated\n  public void testLowerCaseFilterBWComp() throws IOException {\n    Analyzer a = new LowerCaseWhitespaceAnalyzerBWComp();\n    // BMP\n    assertAnalyzesTo(a, \"AbaCaDabA\", new String[] { \"abacadaba\" });\n    // supplementary, no-op\n    assertAnalyzesTo(a, \"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\",\n        new String[] {\"\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\\ud801\\udc16\"});\n    assertAnalyzesTo(a, \"AbaCa\\ud801\\udc16DabA\",\n        new String[] { \"abaca\\ud801\\udc16daba\" });\n    // unpaired lead surrogate\n    assertAnalyzesTo(a, \"AbaC\\uD801AdaBa\", \n        new String [] { \"abac\\uD801adaba\" });\n    // unpaired trail surrogate\n    assertAnalyzesTo(a, \"AbaC\\uDC16AdaBa\", \n        new String [] { \"abac\\uDC16adaba\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5":["41ce0ce6485d29a241c4ca4b6179d14df6a66bae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"41ce0ce6485d29a241c4ca4b6179d14df6a66bae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5384d626ad24f6a1d56141ba6b0b144d1b2eafc5"]},"commit2Childs":{"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["41ce0ce6485d29a241c4ca4b6179d14df6a66bae"],"41ce0ce6485d29a241c4ca4b6179d14df6a66bae":["5384d626ad24f6a1d56141ba6b0b144d1b2eafc5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}