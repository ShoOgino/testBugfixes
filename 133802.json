{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#testSingleTermPhrase().mjava","commits":[{"id":"72adbc0c89de5fae07a4c2dbf2798821b037f37d","date":1483738924,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#testSingleTermPhrase().mjava","pathOld":"/dev/null","sourceNew":"  public void testSingleTermPhrase() throws Exception {\n    checkMatches(\"\\\"joh*\\\" \\\"tom\\\"\", \"1,2,3,4\"); \n    checkMatches(\"+\\\"j*\\\" +\\\"tom\\\"\", \"4\"); \n    checkMatches(\"\\\"jo*\\\" \\\"[sma TO smZ]\\\" \", \"1,2,3\");\n    checkMatches(\"+\\\"j*hn\\\" +\\\"sm*h\\\"\", \"1,3\"); \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["de299b6017d29ce89b72c3ef9cfb99ca50d433cf"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#testSingleTermPhrase().mjava","pathOld":"/dev/null","sourceNew":"  public void testSingleTermPhrase() throws Exception {\n    checkMatches(\"\\\"joh*\\\" \\\"tom\\\"\", \"1,2,3,4\"); \n    checkMatches(\"+\\\"j*\\\" +\\\"tom\\\"\", \"4\"); \n    checkMatches(\"\\\"jo*\\\" \\\"[sma TO smZ]\\\" \", \"1,2,3\");\n    checkMatches(\"+\\\"j*hn\\\" +\\\"sm*h\\\"\", \"1,3\"); \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de299b6017d29ce89b72c3ef9cfb99ca50d433cf","date":1488961235,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#testSingleTermPhrase().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/complexPhrase/TestComplexPhraseQuery#testSingleTermPhrase().mjava","sourceNew":"  public void testSingleTermPhrase() throws Exception {\n    checkMatches(\"\\\"joh*\\\"\",\"1,2,3,5\");\n    checkMatches(\"\\\"joh~\\\"\",\"1,3,5\");\n    checkMatches(\"\\\"joh*\\\" \\\"tom\\\"\", \"1,2,3,4,5\"); \n    checkMatches(\"+\\\"j*\\\" +\\\"tom\\\"\", \"4\"); \n    checkMatches(\"\\\"jo*\\\" \\\"[sma TO smZ]\\\" \", \"1,2,3,5,8\");\n    checkMatches(\"+\\\"j*hn\\\" +\\\"sm*h\\\"\", \"1,3\"); \n  }\n\n","sourceOld":"  public void testSingleTermPhrase() throws Exception {\n    checkMatches(\"\\\"joh*\\\" \\\"tom\\\"\", \"1,2,3,4\"); \n    checkMatches(\"+\\\"j*\\\" +\\\"tom\\\"\", \"4\"); \n    checkMatches(\"\\\"jo*\\\" \\\"[sma TO smZ]\\\" \", \"1,2,3\");\n    checkMatches(\"+\\\"j*hn\\\" +\\\"sm*h\\\"\", \"1,3\"); \n  }\n\n","bugFix":["72adbc0c89de5fae07a4c2dbf2798821b037f37d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","72adbc0c89de5fae07a4c2dbf2798821b037f37d"],"de299b6017d29ce89b72c3ef9cfb99ca50d433cf":["72adbc0c89de5fae07a4c2dbf2798821b037f37d"],"72adbc0c89de5fae07a4c2dbf2798821b037f37d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["de299b6017d29ce89b72c3ef9cfb99ca50d433cf"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","72adbc0c89de5fae07a4c2dbf2798821b037f37d"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"de299b6017d29ce89b72c3ef9cfb99ca50d433cf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"72adbc0c89de5fae07a4c2dbf2798821b037f37d":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","de299b6017d29ce89b72c3ef9cfb99ca50d433cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}