{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#processEvents(boolean,boolean).mjava","commits":[{"id":"7af110b00ea8df9429309d83e38e0533d82e144f","date":1376924768,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#processEvents(boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private boolean processEvents(boolean triggerMerge, boolean forcePurge) throws IOException {\n    return processEvents(eventQueue, triggerMerge, forcePurge);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#processEvents(boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private boolean processEvents(boolean triggerMerge, boolean forcePurge) throws IOException {\n    return processEvents(eventQueue, triggerMerge, forcePurge);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#processEvents(boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private boolean processEvents(boolean triggerMerge, boolean forcePurge) throws IOException {\n    return processEvents(eventQueue, triggerMerge, forcePurge);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#processEvents(boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#processEvents(boolean,boolean).mjava","sourceNew":"  private void processEvents(boolean triggerMerge, boolean forcePurge) throws IOException {\n    processEvents(eventQueue, triggerMerge, forcePurge);\n    if (triggerMerge) {\n      maybeMerge(getConfig().getMergePolicy(), MergeTrigger.SEGMENT_FLUSH, UNBOUNDED_MAX_MERGE_SEGMENTS);\n    }\n  }\n\n","sourceOld":"  private boolean processEvents(boolean triggerMerge, boolean forcePurge) throws IOException {\n    return processEvents(eventQueue, triggerMerge, forcePurge);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#processEvents(boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#processEvents(boolean,boolean).mjava","sourceNew":"  private void processEvents(boolean triggerMerge, boolean forcePurge) throws IOException {\n    processEvents(eventQueue, triggerMerge, forcePurge);\n    if (triggerMerge) {\n      maybeMerge(getConfig().getMergePolicy(), MergeTrigger.SEGMENT_FLUSH, UNBOUNDED_MAX_MERGE_SEGMENTS);\n    }\n  }\n\n","sourceOld":"  private boolean processEvents(boolean triggerMerge, boolean forcePurge) throws IOException {\n    return processEvents(eventQueue, triggerMerge, forcePurge);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#processEvents(boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#processEvents(boolean,boolean).mjava","sourceNew":"  private void processEvents(boolean triggerMerge, boolean forcePurge) throws IOException {\n    processEvents(eventQueue, triggerMerge, forcePurge);\n    if (triggerMerge) {\n      maybeMerge(getConfig().getMergePolicy(), MergeTrigger.SEGMENT_FLUSH, UNBOUNDED_MAX_MERGE_SEGMENTS);\n    }\n  }\n\n","sourceOld":"  private boolean processEvents(boolean triggerMerge, boolean forcePurge) throws IOException {\n    return processEvents(eventQueue, triggerMerge, forcePurge);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"845b760a99e5f369fcd0a5d723a87b8def6a3f56","date":1521117993,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#processEvents(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#processEvents(boolean,boolean).mjava","sourceNew":"  private void processEvents(boolean triggerMerge) throws IOException {\n    if (tragedy.get() == null) {\n      Event event;\n      while ((event = eventQueue.poll()) != null)  {\n        event.process(this);\n      }\n    }\n    if (triggerMerge) {\n      maybeMerge(getConfig().getMergePolicy(), MergeTrigger.SEGMENT_FLUSH, UNBOUNDED_MAX_MERGE_SEGMENTS);\n    }\n  }\n\n","sourceOld":"  private void processEvents(boolean triggerMerge, boolean forcePurge) throws IOException {\n    processEvents(eventQueue, triggerMerge, forcePurge);\n    if (triggerMerge) {\n      maybeMerge(getConfig().getMergePolicy(), MergeTrigger.SEGMENT_FLUSH, UNBOUNDED_MAX_MERGE_SEGMENTS);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"845b760a99e5f369fcd0a5d723a87b8def6a3f56":["28288370235ed02234a64753cdbf0c6ec096304a"],"7af110b00ea8df9429309d83e38e0533d82e144f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["7af110b00ea8df9429309d83e38e0533d82e144f"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7af110b00ea8df9429309d83e38e0533d82e144f"],"31d4861802ca404d78ca1d15f4550eec415b9199":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7af110b00ea8df9429309d83e38e0533d82e144f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["7af110b00ea8df9429309d83e38e0533d82e144f","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["7af110b00ea8df9429309d83e38e0533d82e144f","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["845b760a99e5f369fcd0a5d723a87b8def6a3f56"]},"commit2Childs":{"845b760a99e5f369fcd0a5d723a87b8def6a3f56":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7af110b00ea8df9429309d83e38e0533d82e144f":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7af110b00ea8df9429309d83e38e0533d82e144f","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["845b760a99e5f369fcd0a5d723a87b8def6a3f56"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}