{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoWideDegenerateHorizontalLine#getRadius().mjava","commits":[{"id":"ea1a3e0b93787916a1002c2be9f1043b6575ea69","date":1429103360,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoWideDegenerateHorizontalLine#getRadius().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public double getRadius()\n    {\n        // Here we compute the distance from the middle point to one of the corners.  However, we need to be careful\n        // to use the longest of three distances: the distance to a corner on the top; the distnace to a corner on the bottom, and\n        // the distance to the right or left edge from the center.\n        double topAngle = centerPoint.arcDistance(RHC);\n        double bottomAngle = centerPoint.arcDistance(LHC);\n        return Math.max(topAngle,bottomAngle);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0fb9dbed1415914caa27460f8abb7afadaa61451","date":1429504289,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoWideDegenerateHorizontalLine#getRadius().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoWideDegenerateHorizontalLine#getRadius().mjava","sourceNew":"    @Override\n    public double getRadius()\n    {\n        // Here we compute the distance from the middle point to one of the corners.  However, we need to be careful\n        // to use the longest of three distances: the distance to a corner on the top; the distnace to a corner on the bottom, and\n        // the distance to the right or left edge from the center.\n        final double topAngle = centerPoint.arcDistance(RHC);\n        final double bottomAngle = centerPoint.arcDistance(LHC);\n        return Math.max(topAngle,bottomAngle);\n    }\n\n","sourceOld":"    @Override\n    public double getRadius()\n    {\n        // Here we compute the distance from the middle point to one of the corners.  However, we need to be careful\n        // to use the longest of three distances: the distance to a corner on the top; the distnace to a corner on the bottom, and\n        // the distance to the right or left edge from the center.\n        double topAngle = centerPoint.arcDistance(RHC);\n        double bottomAngle = centerPoint.arcDistance(LHC);\n        return Math.max(topAngle,bottomAngle);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2997acf74723385bd84aff1ea0b12af4aefde77","date":1430745542,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoWideDegenerateHorizontalLine#getRadius().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoWideDegenerateHorizontalLine#getRadius().mjava","sourceNew":"  @Override\n  public double getRadius() {\n    // Here we compute the distance from the middle point to one of the corners.  However, we need to be careful\n    // to use the longest of three distances: the distance to a corner on the top; the distnace to a corner on the bottom, and\n    // the distance to the right or left edge from the center.\n    final double topAngle = centerPoint.arcDistance(RHC);\n    final double bottomAngle = centerPoint.arcDistance(LHC);\n    return Math.max(topAngle, bottomAngle);\n  }\n\n","sourceOld":"    @Override\n    public double getRadius()\n    {\n        // Here we compute the distance from the middle point to one of the corners.  However, we need to be careful\n        // to use the longest of three distances: the distance to a corner on the top; the distnace to a corner on the bottom, and\n        // the distance to the right or left edge from the center.\n        final double topAngle = centerPoint.arcDistance(RHC);\n        final double bottomAngle = centerPoint.arcDistance(LHC);\n        return Math.max(topAngle,bottomAngle);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c921d81476f94b6686d3f216daa1f6b076b4a6c0","date":1430922284,"type":0,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoWideDegenerateHorizontalLine#getRadius().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public double getRadius() {\n    // Here we compute the distance from the middle point to one of the corners.  However, we need to be careful\n    // to use the longest of three distances: the distance to a corner on the top; the distnace to a corner on the bottom, and\n    // the distance to the right or left edge from the center.\n    final double topAngle = centerPoint.arcDistance(RHC);\n    final double bottomAngle = centerPoint.arcDistance(LHC);\n    return Math.max(topAngle, bottomAngle);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoWideDegenerateHorizontalLine#getRadius().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoWideDegenerateHorizontalLine#getRadius().mjava","sourceNew":"  @Override\n  public double getRadius() {\n    // Here we compute the distance from the middle point to one of the corners.  However, we need to be careful\n    // to use the longest of three distances: the distance to a corner on the top; the distnace to a corner on the bottom, and\n    // the distance to the right or left edge from the center.\n    final double topAngle = centerPoint.arcDistance(RHC);\n    final double bottomAngle = centerPoint.arcDistance(LHC);\n    return Math.max(topAngle, bottomAngle);\n  }\n\n","sourceOld":"  @Override\n  public double getRadius() {\n    // Here we compute the distance from the middle point to one of the corners.  However, we need to be careful\n    // to use the longest of three distances: the distance to a corner on the top; the distnace to a corner on the bottom, and\n    // the distance to the right or left edge from the center.\n    final double topAngle = centerPoint.arcDistance(RHC);\n    final double bottomAngle = centerPoint.arcDistance(LHC);\n    return Math.max(topAngle, bottomAngle);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ea1a3e0b93787916a1002c2be9f1043b6575ea69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0fb9dbed1415914caa27460f8abb7afadaa61451":["ea1a3e0b93787916a1002c2be9f1043b6575ea69"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3022be5842502b7c2a57a5124199bbc30236f0a0":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["0fb9dbed1415914caa27460f8abb7afadaa61451"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e2997acf74723385bd84aff1ea0b12af4aefde77"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3022be5842502b7c2a57a5124199bbc30236f0a0"]},"commit2Childs":{"ea1a3e0b93787916a1002c2be9f1043b6575ea69":["0fb9dbed1415914caa27460f8abb7afadaa61451"],"0fb9dbed1415914caa27460f8abb7afadaa61451":["e2997acf74723385bd84aff1ea0b12af4aefde77"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ea1a3e0b93787916a1002c2be9f1043b6575ea69","c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}