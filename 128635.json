{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits.value);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"\", Field.Store.NO));\n    w.addDocument(doc);\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2a1862266772deb28cdcb7d996b64d2177022687":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["2a1862266772deb28cdcb7d996b64d2177022687"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"2a1862266772deb28cdcb7d996b64d2177022687":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["2a1862266772deb28cdcb7d996b64d2177022687"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}