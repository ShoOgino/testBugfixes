{"path":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#getSortedSetDocValues(String).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":1,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues dv = super.getSortedSetDocValues(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (dv != null) {\n      assert fi != null;\n      assert fi.getDocValuesType() == FieldInfo.DocValuesType.SORTED_SET;\n      if (dv instanceof RandomAccessOrds) {\n        return new AssertingRandomAccessOrds((RandomAccessOrds) dv, maxDoc());\n      } else {\n        return new AssertingSortedSetDocValues(dv, maxDoc());\n      }\n    } else {\n      assert fi == null || fi.getDocValuesType() != FieldInfo.DocValuesType.SORTED_SET;\n      return null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues dv = super.getSortedSetDocValues(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (dv != null) {\n      assert fi != null;\n      assert fi.getDocValuesType() == FieldInfo.DocValuesType.SORTED_SET;\n      if (dv instanceof RandomAccessOrds) {\n        return new AssertingRandomAccessOrds((RandomAccessOrds) dv, maxDoc());\n      } else {\n        return new AssertingSortedSetDocValues(dv, maxDoc());\n      }\n    } else {\n      assert fi == null || fi.getDocValuesType() != FieldInfo.DocValuesType.SORTED_SET;\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2bb2842e561df4e8e9ad89010605fc86ac265465","date":1414768208,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues dv = super.getSortedSetDocValues(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (dv != null) {\n      assert fi != null;\n      assert fi.getDocValuesType() == DocValuesType.SORTED_SET;\n      if (dv instanceof RandomAccessOrds) {\n        return new AssertingRandomAccessOrds((RandomAccessOrds) dv, maxDoc());\n      } else {\n        return new AssertingSortedSetDocValues(dv, maxDoc());\n      }\n    } else {\n      assert fi == null || fi.getDocValuesType() != DocValuesType.SORTED_SET;\n      return null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues dv = super.getSortedSetDocValues(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (dv != null) {\n      assert fi != null;\n      assert fi.getDocValuesType() == FieldInfo.DocValuesType.SORTED_SET;\n      if (dv instanceof RandomAccessOrds) {\n        return new AssertingRandomAccessOrds((RandomAccessOrds) dv, maxDoc());\n      } else {\n        return new AssertingSortedSetDocValues(dv, maxDoc());\n      }\n    } else {\n      assert fi == null || fi.getDocValuesType() != FieldInfo.DocValuesType.SORTED_SET;\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues dv = super.getSortedSetDocValues(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (dv != null) {\n      assert fi != null;\n      assert fi.getDocValuesType() == DocValuesType.SORTED_SET;\n      return new AssertingSortedSetDocValues(dv, maxDoc());\n    } else {\n      assert fi == null || fi.getDocValuesType() != DocValuesType.SORTED_SET;\n      return null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues dv = super.getSortedSetDocValues(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (dv != null) {\n      assert fi != null;\n      assert fi.getDocValuesType() == DocValuesType.SORTED_SET;\n      if (dv instanceof RandomAccessOrds) {\n        return new AssertingRandomAccessOrds((RandomAccessOrds) dv, maxDoc());\n      } else {\n        return new AssertingSortedSetDocValues(dv, maxDoc());\n      }\n    } else {\n      assert fi == null || fi.getDocValuesType() != DocValuesType.SORTED_SET;\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues dv = super.getSortedSetDocValues(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (dv != null) {\n      assert fi != null;\n      assert fi.getDocValuesType() == DocValuesType.SORTED_SET;\n      return new AssertingSortedSetDocValues(dv, maxDoc());\n    } else {\n      assert fi == null || fi.getDocValuesType() != DocValuesType.SORTED_SET;\n      return null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues dv = super.getSortedSetDocValues(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (dv != null) {\n      assert fi != null;\n      assert fi.getDocValuesType() == DocValuesType.SORTED_SET;\n      if (dv instanceof RandomAccessOrds) {\n        return new AssertingRandomAccessOrds((RandomAccessOrds) dv, maxDoc());\n      } else {\n        return new AssertingSortedSetDocValues(dv, maxDoc());\n      }\n    } else {\n      assert fi == null || fi.getDocValuesType() != DocValuesType.SORTED_SET;\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues dv = super.getSortedSetDocValues(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (dv != null) {\n      assert fi != null;\n      assert fi.getDocValuesType() == DocValuesType.SORTED_SET;\n      return new AssertingSortedSetDocValues(dv, maxDoc());\n    } else {\n      assert fi == null || fi.getDocValuesType() != DocValuesType.SORTED_SET;\n      return null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    SortedSetDocValues dv = super.getSortedSetDocValues(field);\n    FieldInfo fi = getFieldInfos().fieldInfo(field);\n    if (dv != null) {\n      assert fi != null;\n      assert fi.getDocValuesType() == DocValuesType.SORTED_SET;\n      if (dv instanceof RandomAccessOrds) {\n        return new AssertingRandomAccessOrds((RandomAccessOrds) dv, maxDoc());\n      } else {\n        return new AssertingSortedSetDocValues(dv, maxDoc());\n      }\n    } else {\n      assert fi == null || fi.getDocValuesType() != DocValuesType.SORTED_SET;\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["2bb2842e561df4e8e9ad89010605fc86ac265465","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["2bb2842e561df4e8e9ad89010605fc86ac265465"],"2bb2842e561df4e8e9ad89010605fc86ac265465":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2bb2842e561df4e8e9ad89010605fc86ac265465","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"2bb2842e561df4e8e9ad89010605fc86ac265465":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["2bb2842e561df4e8e9ad89010605fc86ac265465"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}