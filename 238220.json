{"path":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#buildDoc(Map[String,Object]).mjava","commits":[{"id":"b4e08e2b6886d78c91752d82ea2b436c4324cd55","date":1464786234,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#buildDoc(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"    private SolrInputDocument buildDoc(Map<String, Object> m) {\n      SolrInputDocument result = new SolrInputDocument();\n      for (Map.Entry<String, Object> e : m.entrySet()) {\n        if (e.getKey() == null) {// special case. JsonRecordReader emits child docs with null key\n          if (e.getValue() instanceof List) {\n            List value = (List) e.getValue();\n            for (Object o : value) {\n              if (o instanceof Map) result.addChildDocument(buildDoc((Map) o));\n            }\n          } else if (e.getValue() instanceof Map) {\n            result.addChildDocument(buildDoc((Map) e));\n          }\n        } else {\n          result.setField(e.getKey(), e.getValue());\n        }\n      }\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"611f7ea4eee5babadf4129bfa5fbae964738cd7c","date":1464787051,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#buildDoc(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"    private SolrInputDocument buildDoc(Map<String, Object> m) {\n      SolrInputDocument result = new SolrInputDocument();\n      for (Map.Entry<String, Object> e : m.entrySet()) {\n        if (e.getKey() == null) {// special case. JsonRecordReader emits child docs with null key\n          if (e.getValue() instanceof List) {\n            List value = (List) e.getValue();\n            for (Object o : value) {\n              if (o instanceof Map) result.addChildDocument(buildDoc((Map) o));\n            }\n          } else if (e.getValue() instanceof Map) {\n            result.addChildDocument(buildDoc((Map) e));\n          }\n        } else {\n          result.setField(e.getKey(), e.getValue());\n        }\n      }\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b8ee93140fd0efef7e101786e3ed5160a700b5f","date":1464820111,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#buildDoc(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"    private SolrInputDocument buildDoc(Map<String, Object> m) {\n      SolrInputDocument result = new SolrInputDocument();\n      for (Map.Entry<String, Object> e : m.entrySet()) {\n        if (e.getKey() == null) {// special case. JsonRecordReader emits child docs with null key\n          if (e.getValue() instanceof List) {\n            List value = (List) e.getValue();\n            for (Object o : value) {\n              if (o instanceof Map) result.addChildDocument(buildDoc((Map) o));\n            }\n          } else if (e.getValue() instanceof Map) {\n            result.addChildDocument(buildDoc((Map) e));\n          }\n        } else {\n          result.setField(e.getKey(), e.getValue());\n        }\n      }\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77","date":1464821470,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#buildDoc(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"    private SolrInputDocument buildDoc(Map<String, Object> m) {\n      SolrInputDocument result = new SolrInputDocument();\n      for (Map.Entry<String, Object> e : m.entrySet()) {\n        if (e.getKey() == null) {// special case. JsonRecordReader emits child docs with null key\n          if (e.getValue() instanceof List) {\n            List value = (List) e.getValue();\n            for (Object o : value) {\n              if (o instanceof Map) result.addChildDocument(buildDoc((Map) o));\n            }\n          } else if (e.getValue() instanceof Map) {\n            result.addChildDocument(buildDoc((Map) e));\n          }\n        } else {\n          result.setField(e.getKey(), e.getValue());\n        }\n      }\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9dbf1742cf31777011ef976c17df1c8507c3de9f","date":1465452246,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#buildDoc(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#buildDoc(Map[String,Object]).mjava","sourceNew":"    private SolrInputDocument buildDoc(Map<String, Object> m) {\n      SolrInputDocument result = new SolrInputDocument();\n      for (Map.Entry<String, Object> e : m.entrySet()) {\n        if (e.getKey() == null) {// special case. JsonRecordReader emits child docs with null key\n          if (e.getValue() instanceof List) {\n            List value = (List) e.getValue();\n            for (Object o : value) {\n              if (o instanceof Map) result.addChildDocument(buildDoc((Map) o));\n            }\n          } else if (e.getValue() instanceof Map) {\n            result.addChildDocument(buildDoc((Map) e.getValue()));\n          }\n        } else {\n          result.setField(e.getKey(), e.getValue());\n        }\n      }\n      return result;\n    }\n\n","sourceOld":"    private SolrInputDocument buildDoc(Map<String, Object> m) {\n      SolrInputDocument result = new SolrInputDocument();\n      for (Map.Entry<String, Object> e : m.entrySet()) {\n        if (e.getKey() == null) {// special case. JsonRecordReader emits child docs with null key\n          if (e.getValue() instanceof List) {\n            List value = (List) e.getValue();\n            for (Object o : value) {\n              if (o instanceof Map) result.addChildDocument(buildDoc((Map) o));\n            }\n          } else if (e.getValue() instanceof Map) {\n            result.addChildDocument(buildDoc((Map) e));\n          }\n        } else {\n          result.setField(e.getKey(), e.getValue());\n        }\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#buildDoc(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"    private SolrInputDocument buildDoc(Map<String, Object> m) {\n      SolrInputDocument result = new SolrInputDocument();\n      for (Map.Entry<String, Object> e : m.entrySet()) {\n        if (e.getKey() == null) {// special case. JsonRecordReader emits child docs with null key\n          if (e.getValue() instanceof List) {\n            List value = (List) e.getValue();\n            for (Object o : value) {\n              if (o instanceof Map) result.addChildDocument(buildDoc((Map) o));\n            }\n          } else if (e.getValue() instanceof Map) {\n            result.addChildDocument(buildDoc((Map) e.getValue()));\n          }\n        } else {\n          result.setField(e.getKey(), e.getValue());\n        }\n      }\n      return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9440b5b1eec7788a0edd10385e4d7a614d1024d7","date":1528992889,"type":3,"author":"user","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#buildDoc(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#buildDoc(Map[String,Object]).mjava","sourceNew":"    private SolrInputDocument buildDoc(Map<String, Object> m) {\n      SolrInputDocument result = new SolrInputDocument();\n      for (Map.Entry<String, Object> e : m.entrySet()) {\n        if (mapEntryIsChildDoc(e.getValue())) { // parse child documents\n          if (e.getValue() instanceof List) {\n            List value = (List) e.getValue();\n            for (Object o : value) {\n              if (o instanceof Map) {\n                if (anonChildDoc) {\n                  result.addChildDocument(buildDoc((Map) o));\n                } else {\n                  // retain the value as a list, even if the list contains a single value.\n                  if(!result.containsKey(e.getKey())) {\n                    result.setField(e.getKey(), new ArrayList<>(1));\n                  }\n                  result.addField(e.getKey(), buildDoc((Map) o));\n                }\n              }\n            }\n          } else if (e.getValue() instanceof Map) {\n            if (anonChildDoc) {\n              result.addChildDocument(buildDoc((Map) e.getValue()));\n            } else {\n              result.addField(e.getKey(), buildDoc((Map) e.getValue()));\n            }\n          }\n        } else {\n          result.setField(e.getKey(), e.getValue());\n        }\n      }\n      return result;\n    }\n\n","sourceOld":"    private SolrInputDocument buildDoc(Map<String, Object> m) {\n      SolrInputDocument result = new SolrInputDocument();\n      for (Map.Entry<String, Object> e : m.entrySet()) {\n        if (e.getKey() == null) {// special case. JsonRecordReader emits child docs with null key\n          if (e.getValue() instanceof List) {\n            List value = (List) e.getValue();\n            for (Object o : value) {\n              if (o instanceof Map) result.addChildDocument(buildDoc((Map) o));\n            }\n          } else if (e.getValue() instanceof Map) {\n            result.addChildDocument(buildDoc((Map) e.getValue()));\n          }\n        } else {\n          result.setField(e.getKey(), e.getValue());\n        }\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#buildDoc(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#buildDoc(Map[String,Object]).mjava","sourceNew":"    private SolrInputDocument buildDoc(Map<String, Object> m) {\n      SolrInputDocument result = new SolrInputDocument();\n      for (Map.Entry<String, Object> e : m.entrySet()) {\n        if (mapEntryIsChildDoc(e.getValue())) { // parse child documents\n          if (e.getValue() instanceof List) {\n            List value = (List) e.getValue();\n            for (Object o : value) {\n              if (o instanceof Map) {\n                if (anonChildDoc) {\n                  result.addChildDocument(buildDoc((Map) o));\n                } else {\n                  // retain the value as a list, even if the list contains a single value.\n                  if(!result.containsKey(e.getKey())) {\n                    result.setField(e.getKey(), new ArrayList<>(1));\n                  }\n                  result.addField(e.getKey(), buildDoc((Map) o));\n                }\n              }\n            }\n          } else if (e.getValue() instanceof Map) {\n            if (anonChildDoc) {\n              result.addChildDocument(buildDoc((Map) e.getValue()));\n            } else {\n              result.addField(e.getKey(), buildDoc((Map) e.getValue()));\n            }\n          }\n        } else {\n          result.setField(e.getKey(), e.getValue());\n        }\n      }\n      return result;\n    }\n\n","sourceOld":"    private SolrInputDocument buildDoc(Map<String, Object> m) {\n      SolrInputDocument result = new SolrInputDocument();\n      for (Map.Entry<String, Object> e : m.entrySet()) {\n        if (e.getKey() == null) {// special case. JsonRecordReader emits child docs with null key\n          if (e.getValue() instanceof List) {\n            List value = (List) e.getValue();\n            for (Object o : value) {\n              if (o instanceof Map) result.addChildDocument(buildDoc((Map) o));\n            }\n          } else if (e.getValue() instanceof Map) {\n            result.addChildDocument(buildDoc((Map) e.getValue()));\n          }\n        } else {\n          result.setField(e.getKey(), e.getValue());\n        }\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#buildDoc(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#buildDoc(Map[String,Object]).mjava","sourceNew":"    private SolrInputDocument buildDoc(Map<String, Object> m) {\n      SolrInputDocument result = new SolrInputDocument();\n      for (Map.Entry<String, Object> e : m.entrySet()) {\n        if (mapEntryIsChildDoc(e.getValue())) { // parse child documents\n          if (e.getValue() instanceof List) {\n            List value = (List) e.getValue();\n            for (Object o : value) {\n              if (o instanceof Map) {\n                if (anonChildDoc) {\n                  result.addChildDocument(buildDoc((Map) o));\n                } else {\n                  // retain the value as a list, even if the list contains a single value.\n                  if(!result.containsKey(e.getKey())) {\n                    result.setField(e.getKey(), new ArrayList<>(1));\n                  }\n                  result.addField(e.getKey(), buildDoc((Map) o));\n                }\n              }\n            }\n          } else if (e.getValue() instanceof Map) {\n            if (anonChildDoc) {\n              result.addChildDocument(buildDoc((Map) e.getValue()));\n            } else {\n              result.addField(e.getKey(), buildDoc((Map) e.getValue()));\n            }\n          }\n        } else {\n          result.setField(e.getKey(), e.getValue());\n        }\n      }\n      return result;\n    }\n\n","sourceOld":"    private SolrInputDocument buildDoc(Map<String, Object> m) {\n      SolrInputDocument result = new SolrInputDocument();\n      for (Map.Entry<String, Object> e : m.entrySet()) {\n        if (e.getKey() == null) {// special case. JsonRecordReader emits child docs with null key\n          if (e.getValue() instanceof List) {\n            List value = (List) e.getValue();\n            for (Object o : value) {\n              if (o instanceof Map) result.addChildDocument(buildDoc((Map) o));\n            }\n          } else if (e.getValue() instanceof Map) {\n            result.addChildDocument(buildDoc((Map) e.getValue()));\n          }\n        } else {\n          result.setField(e.getKey(), e.getValue());\n        }\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"263caed1e020aa6ed422c9243c9b1759ab27e703","date":1546531139,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#buildDoc(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#buildDoc(Map[String,Object]).mjava","sourceNew":"    private SolrInputDocument buildDoc(Map<String, Object> m) {\n      SolrInputDocument result = new SolrInputDocument();\n      for (Map.Entry<String, Object> e : m.entrySet()) {\n        if (mapEntryIsChildDoc(e.getValue())) { // parse child documents\n          if (e.getValue() instanceof List) {\n            List value = (List) e.getValue();\n            for (Object o : value) {\n              if (o instanceof Map) {\n                // retain the value as a list, even if the list contains a single value.\n                if(!result.containsKey(e.getKey())) {\n                  result.setField(e.getKey(), new ArrayList<>(1));\n                }\n                result.addField(e.getKey(), buildDoc((Map) o));\n              }\n            }\n          } else if (e.getValue() instanceof Map) {\n            result.addField(e.getKey(), buildDoc((Map) e.getValue()));\n          }\n        } else {\n          result.setField(e.getKey(), e.getValue());\n        }\n      }\n      return result;\n    }\n\n","sourceOld":"    private SolrInputDocument buildDoc(Map<String, Object> m) {\n      SolrInputDocument result = new SolrInputDocument();\n      for (Map.Entry<String, Object> e : m.entrySet()) {\n        if (mapEntryIsChildDoc(e.getValue())) { // parse child documents\n          if (e.getValue() instanceof List) {\n            List value = (List) e.getValue();\n            for (Object o : value) {\n              if (o instanceof Map) {\n                if (anonChildDoc) {\n                  result.addChildDocument(buildDoc((Map) o));\n                } else {\n                  // retain the value as a list, even if the list contains a single value.\n                  if(!result.containsKey(e.getKey())) {\n                    result.setField(e.getKey(), new ArrayList<>(1));\n                  }\n                  result.addField(e.getKey(), buildDoc((Map) o));\n                }\n              }\n            }\n          } else if (e.getValue() instanceof Map) {\n            if (anonChildDoc) {\n              result.addChildDocument(buildDoc((Map) e.getValue()));\n            } else {\n              result.addField(e.getKey(), buildDoc((Map) e.getValue()));\n            }\n          }\n        } else {\n          result.setField(e.getKey(), e.getValue());\n        }\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8582f07e9350eaeb33bf6c4617b8c9895d99c839","date":1591307386,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#buildDoc(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#buildDoc(Map[String,Object]).mjava","sourceNew":"    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    private SolrInputDocument buildDoc(Map<String, Object> m) {\n      SolrInputDocument result = new SolrInputDocument();\n      for (Map.Entry<String, Object> e : m.entrySet()) {\n        if (mapEntryIsChildDoc(e.getValue())) { // parse child documents\n          if (e.getValue() instanceof List) {\n            List value = (List) e.getValue();\n            for (Object o : value) {\n              if (o instanceof Map) {\n                // retain the value as a list, even if the list contains a single value.\n                if(!result.containsKey(e.getKey())) {\n                  result.setField(e.getKey(), new ArrayList<>(1));\n                }\n                result.addField(e.getKey(), buildDoc((Map) o));\n              }\n            }\n          } else if (e.getValue() instanceof Map) {\n            result.addField(e.getKey(), buildDoc((Map) e.getValue()));\n          }\n        } else {\n          result.setField(e.getKey(), e.getValue());\n        }\n      }\n      return result;\n    }\n\n","sourceOld":"    private SolrInputDocument buildDoc(Map<String, Object> m) {\n      SolrInputDocument result = new SolrInputDocument();\n      for (Map.Entry<String, Object> e : m.entrySet()) {\n        if (mapEntryIsChildDoc(e.getValue())) { // parse child documents\n          if (e.getValue() instanceof List) {\n            List value = (List) e.getValue();\n            for (Object o : value) {\n              if (o instanceof Map) {\n                // retain the value as a list, even if the list contains a single value.\n                if(!result.containsKey(e.getKey())) {\n                  result.setField(e.getKey(), new ArrayList<>(1));\n                }\n                result.addField(e.getKey(), buildDoc((Map) o));\n              }\n            }\n          } else if (e.getValue() instanceof Map) {\n            result.addField(e.getKey(), buildDoc((Map) e.getValue()));\n          }\n        } else {\n          result.setField(e.getKey(), e.getValue());\n        }\n      }\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b4e08e2b6886d78c91752d82ea2b436c4324cd55":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9440b5b1eec7788a0edd10385e4d7a614d1024d7":["9dbf1742cf31777011ef976c17df1c8507c3de9f"],"5b8ee93140fd0efef7e101786e3ed5160a700b5f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","611f7ea4eee5babadf4129bfa5fbae964738cd7c"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9dbf1742cf31777011ef976c17df1c8507c3de9f"],"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5b8ee93140fd0efef7e101786e3ed5160a700b5f"],"8582f07e9350eaeb33bf6c4617b8c9895d99c839":["263caed1e020aa6ed422c9243c9b1759ab27e703"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["9dbf1742cf31777011ef976c17df1c8507c3de9f","9440b5b1eec7788a0edd10385e4d7a614d1024d7"],"9dbf1742cf31777011ef976c17df1c8507c3de9f":["b4e08e2b6886d78c91752d82ea2b436c4324cd55"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"611f7ea4eee5babadf4129bfa5fbae964738cd7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b4e08e2b6886d78c91752d82ea2b436c4324cd55"],"263caed1e020aa6ed422c9243c9b1759ab27e703":["9440b5b1eec7788a0edd10385e4d7a614d1024d7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8582f07e9350eaeb33bf6c4617b8c9895d99c839"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["9dbf1742cf31777011ef976c17df1c8507c3de9f","9440b5b1eec7788a0edd10385e4d7a614d1024d7"]},"commit2Childs":{"b4e08e2b6886d78c91752d82ea2b436c4324cd55":["9dbf1742cf31777011ef976c17df1c8507c3de9f","611f7ea4eee5babadf4129bfa5fbae964738cd7c"],"9440b5b1eec7788a0edd10385e4d7a614d1024d7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","263caed1e020aa6ed422c9243c9b1759ab27e703","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"5b8ee93140fd0efef7e101786e3ed5160a700b5f":["b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77":[],"8582f07e9350eaeb33bf6c4617b8c9895d99c839":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"9dbf1742cf31777011ef976c17df1c8507c3de9f":["9440b5b1eec7788a0edd10385e4d7a614d1024d7","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4e08e2b6886d78c91752d82ea2b436c4324cd55","5b8ee93140fd0efef7e101786e3ed5160a700b5f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77","611f7ea4eee5babadf4129bfa5fbae964738cd7c"],"611f7ea4eee5babadf4129bfa5fbae964738cd7c":["5b8ee93140fd0efef7e101786e3ed5160a700b5f"],"263caed1e020aa6ed422c9243c9b1759ab27e703":["8582f07e9350eaeb33bf6c4617b8c9895d99c839"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}