{"path":"src/java/org/apache/lucene/index/IndexWriterConfig#toString().mjava","commits":[{"id":"103e2ec175f1aa5629df5bcd34eb1c53055caeb1","date":1268243753,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriterConfig#toString().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"matchVersion=\").append(matchVersion).append(\"\\n\");\n    sb.append(\"analyzer=\").append(analyzer.getClass().getName()).append(\"\\n\");\n    sb.append(\"delPolicy=\").append(delPolicy.getClass().getName()).append(\"\\n\");\n    sb.append(\"commit=\").append(commit == null ? \"null\" : commit.getClass().getName()).append(\"\\n\");\n    sb.append(\"openMode=\").append(openMode).append(\"\\n\");\n    sb.append(\"maxFieldLength=\").append(maxFieldLength).append(\"\\n\");\n    sb.append(\"similarity=\").append(similarity.getClass().getName()).append(\"\\n\");\n    sb.append(\"termIndexInterval=\").append(termIndexInterval).append(\"\\n\");\n    sb.append(\"mergeScheduler=\").append(mergeScheduler.getClass().getName()).append(\"\\n\");\n    sb.append(\"default WRITE_LOCK_TIMEOUT=\").append(WRITE_LOCK_TIMEOUT).append(\"\\n\");\n    sb.append(\"writeLockTimeout=\").append(writeLockTimeout).append(\"\\n\");\n    sb.append(\"maxBufferedDeleteTerms=\").append(maxBufferedDeleteTerms).append(\"\\n\");\n    sb.append(\"ramBufferSizeMB=\").append(ramBufferSizeMB).append(\"\\n\");\n    sb.append(\"maxBufferedDocs=\").append(maxBufferedDocs).append(\"\\n\");\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/IndexWriterConfig#toString().mjava","sourceNew":null,"sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"matchVersion=\").append(matchVersion).append(\"\\n\");\n    sb.append(\"analyzer=\").append(analyzer.getClass().getName()).append(\"\\n\");\n    sb.append(\"delPolicy=\").append(delPolicy.getClass().getName()).append(\"\\n\");\n    sb.append(\"commit=\").append(commit == null ? \"null\" : commit.getClass().getName()).append(\"\\n\");\n    sb.append(\"openMode=\").append(openMode).append(\"\\n\");\n    sb.append(\"maxFieldLength=\").append(maxFieldLength).append(\"\\n\");\n    sb.append(\"similarity=\").append(similarity.getClass().getName()).append(\"\\n\");\n    sb.append(\"termIndexInterval=\").append(termIndexInterval).append(\"\\n\");\n    sb.append(\"mergeScheduler=\").append(mergeScheduler.getClass().getName()).append(\"\\n\");\n    sb.append(\"default WRITE_LOCK_TIMEOUT=\").append(WRITE_LOCK_TIMEOUT).append(\"\\n\");\n    sb.append(\"writeLockTimeout=\").append(writeLockTimeout).append(\"\\n\");\n    sb.append(\"maxBufferedDeleteTerms=\").append(maxBufferedDeleteTerms).append(\"\\n\");\n    sb.append(\"ramBufferSizeMB=\").append(ramBufferSizeMB).append(\"\\n\");\n    sb.append(\"maxBufferedDocs=\").append(maxBufferedDocs).append(\"\\n\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriterConfig#toString().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"matchVersion=\").append(matchVersion).append(\"\\n\");\n    sb.append(\"analyzer=\").append(analyzer.getClass().getName()).append(\"\\n\");\n    sb.append(\"delPolicy=\").append(delPolicy.getClass().getName()).append(\"\\n\");\n    sb.append(\"commit=\").append(commit == null ? \"null\" : commit.getClass().getName()).append(\"\\n\");\n    sb.append(\"openMode=\").append(openMode).append(\"\\n\");\n    sb.append(\"maxFieldLength=\").append(maxFieldLength).append(\"\\n\");\n    sb.append(\"similarity=\").append(similarity.getClass().getName()).append(\"\\n\");\n    sb.append(\"termIndexInterval=\").append(termIndexInterval).append(\"\\n\");\n    sb.append(\"mergeScheduler=\").append(mergeScheduler.getClass().getName()).append(\"\\n\");\n    sb.append(\"default WRITE_LOCK_TIMEOUT=\").append(WRITE_LOCK_TIMEOUT).append(\"\\n\");\n    sb.append(\"writeLockTimeout=\").append(writeLockTimeout).append(\"\\n\");\n    sb.append(\"maxBufferedDeleteTerms=\").append(maxBufferedDeleteTerms).append(\"\\n\");\n    sb.append(\"ramBufferSizeMB=\").append(ramBufferSizeMB).append(\"\\n\");\n    sb.append(\"maxBufferedDocs=\").append(maxBufferedDocs).append(\"\\n\");\n    sb.append(\"mergedSegmentWarmer=\").append(mergedSegmentWarmer).append(\"\\n\");\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9802bb5985cb6cc3e0a3a0ecb2158acf4d5cfcf","date":1268662366,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriterConfig#toString().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriterConfig#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"matchVersion=\").append(matchVersion).append(\"\\n\");\n    sb.append(\"analyzer=\").append(analyzer.getClass().getName()).append(\"\\n\");\n    sb.append(\"delPolicy=\").append(delPolicy.getClass().getName()).append(\"\\n\");\n    sb.append(\"commit=\").append(commit == null ? \"null\" : commit.getClass().getName()).append(\"\\n\");\n    sb.append(\"openMode=\").append(openMode).append(\"\\n\");\n    sb.append(\"maxFieldLength=\").append(maxFieldLength).append(\"\\n\");\n    sb.append(\"similarity=\").append(similarity.getClass().getName()).append(\"\\n\");\n    sb.append(\"termIndexInterval=\").append(termIndexInterval).append(\"\\n\");\n    sb.append(\"mergeScheduler=\").append(mergeScheduler.getClass().getName()).append(\"\\n\");\n    sb.append(\"default WRITE_LOCK_TIMEOUT=\").append(WRITE_LOCK_TIMEOUT).append(\"\\n\");\n    sb.append(\"writeLockTimeout=\").append(writeLockTimeout).append(\"\\n\");\n    sb.append(\"maxBufferedDeleteTerms=\").append(maxBufferedDeleteTerms).append(\"\\n\");\n    sb.append(\"ramBufferSizeMB=\").append(ramBufferSizeMB).append(\"\\n\");\n    sb.append(\"maxBufferedDocs=\").append(maxBufferedDocs).append(\"\\n\");\n    sb.append(\"mergedSegmentWarmer=\").append(mergedSegmentWarmer).append(\"\\n\");\n    sb.append(\"maxThreadStates=\").append(maxThreadStates).append(\"\\n\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"matchVersion=\").append(matchVersion).append(\"\\n\");\n    sb.append(\"analyzer=\").append(analyzer.getClass().getName()).append(\"\\n\");\n    sb.append(\"delPolicy=\").append(delPolicy.getClass().getName()).append(\"\\n\");\n    sb.append(\"commit=\").append(commit == null ? \"null\" : commit.getClass().getName()).append(\"\\n\");\n    sb.append(\"openMode=\").append(openMode).append(\"\\n\");\n    sb.append(\"maxFieldLength=\").append(maxFieldLength).append(\"\\n\");\n    sb.append(\"similarity=\").append(similarity.getClass().getName()).append(\"\\n\");\n    sb.append(\"termIndexInterval=\").append(termIndexInterval).append(\"\\n\");\n    sb.append(\"mergeScheduler=\").append(mergeScheduler.getClass().getName()).append(\"\\n\");\n    sb.append(\"default WRITE_LOCK_TIMEOUT=\").append(WRITE_LOCK_TIMEOUT).append(\"\\n\");\n    sb.append(\"writeLockTimeout=\").append(writeLockTimeout).append(\"\\n\");\n    sb.append(\"maxBufferedDeleteTerms=\").append(maxBufferedDeleteTerms).append(\"\\n\");\n    sb.append(\"ramBufferSizeMB=\").append(ramBufferSizeMB).append(\"\\n\");\n    sb.append(\"maxBufferedDocs=\").append(maxBufferedDocs).append(\"\\n\");\n    sb.append(\"mergedSegmentWarmer=\").append(mergedSegmentWarmer).append(\"\\n\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#toString().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriterConfig#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"matchVersion=\").append(matchVersion).append(\"\\n\");\n    sb.append(\"analyzer=\").append(analyzer.getClass().getName()).append(\"\\n\");\n    sb.append(\"delPolicy=\").append(delPolicy.getClass().getName()).append(\"\\n\");\n    sb.append(\"commit=\").append(commit == null ? \"null\" : commit.getClass().getName()).append(\"\\n\");\n    sb.append(\"openMode=\").append(openMode).append(\"\\n\");\n    sb.append(\"maxFieldLength=\").append(maxFieldLength).append(\"\\n\");\n    sb.append(\"similarity=\").append(similarity.getClass().getName()).append(\"\\n\");\n    sb.append(\"termIndexInterval=\").append(termIndexInterval).append(\"\\n\");\n    sb.append(\"mergeScheduler=\").append(mergeScheduler.getClass().getName()).append(\"\\n\");\n    sb.append(\"default WRITE_LOCK_TIMEOUT=\").append(WRITE_LOCK_TIMEOUT).append(\"\\n\");\n    sb.append(\"writeLockTimeout=\").append(writeLockTimeout).append(\"\\n\");\n    sb.append(\"maxBufferedDeleteTerms=\").append(maxBufferedDeleteTerms).append(\"\\n\");\n    sb.append(\"ramBufferSizeMB=\").append(ramBufferSizeMB).append(\"\\n\");\n    sb.append(\"maxBufferedDocs=\").append(maxBufferedDocs).append(\"\\n\");\n    sb.append(\"mergedSegmentWarmer=\").append(mergedSegmentWarmer).append(\"\\n\");\n    sb.append(\"maxThreadStates=\").append(maxThreadStates).append(\"\\n\");\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"matchVersion=\").append(matchVersion).append(\"\\n\");\n    sb.append(\"analyzer=\").append(analyzer.getClass().getName()).append(\"\\n\");\n    sb.append(\"delPolicy=\").append(delPolicy.getClass().getName()).append(\"\\n\");\n    sb.append(\"commit=\").append(commit == null ? \"null\" : commit.getClass().getName()).append(\"\\n\");\n    sb.append(\"openMode=\").append(openMode).append(\"\\n\");\n    sb.append(\"maxFieldLength=\").append(maxFieldLength).append(\"\\n\");\n    sb.append(\"similarity=\").append(similarity.getClass().getName()).append(\"\\n\");\n    sb.append(\"termIndexInterval=\").append(termIndexInterval).append(\"\\n\");\n    sb.append(\"mergeScheduler=\").append(mergeScheduler.getClass().getName()).append(\"\\n\");\n    sb.append(\"default WRITE_LOCK_TIMEOUT=\").append(WRITE_LOCK_TIMEOUT).append(\"\\n\");\n    sb.append(\"writeLockTimeout=\").append(writeLockTimeout).append(\"\\n\");\n    sb.append(\"maxBufferedDeleteTerms=\").append(maxBufferedDeleteTerms).append(\"\\n\");\n    sb.append(\"ramBufferSizeMB=\").append(ramBufferSizeMB).append(\"\\n\");\n    sb.append(\"maxBufferedDocs=\").append(maxBufferedDocs).append(\"\\n\");\n    sb.append(\"mergedSegmentWarmer=\").append(mergedSegmentWarmer).append(\"\\n\");\n    sb.append(\"maxThreadStates=\").append(maxThreadStates).append(\"\\n\");\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"103e2ec175f1aa5629df5bcd34eb1c53055caeb1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9802bb5985cb6cc3e0a3a0ecb2158acf4d5cfcf":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"e52fea2c4081a1e552b98506691990be59503168":["103e2ec175f1aa5629df5bcd34eb1c53055caeb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9802bb5985cb6cc3e0a3a0ecb2158acf4d5cfcf"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["a9802bb5985cb6cc3e0a3a0ecb2158acf4d5cfcf"],"103e2ec175f1aa5629df5bcd34eb1c53055caeb1":["e52fea2c4081a1e552b98506691990be59503168"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["103e2ec175f1aa5629df5bcd34eb1c53055caeb1"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"a9802bb5985cb6cc3e0a3a0ecb2158acf4d5cfcf":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}