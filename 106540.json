{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestFacetLabel#testGetComponent().mjava","commits":[{"id":"78522aad83283ca58fae08fd89406b65429d0229","date":1385573562,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestFacetLabel#testGetComponent().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestCategoryPath#testGetComponent().mjava","sourceNew":"  @Test \n  public void testGetComponent() {\n    String[] components = new String[atLeast(10)];\n    for (int i = 0; i < components.length; i++) {\n      components[i] = Integer.toString(i);\n    }\n    FacetLabel cp = new FacetLabel(components);\n    for (int i = 0; i < components.length; i++) {\n      assertEquals(i, Integer.parseInt(cp.components[i]));\n    }\n  }\n\n","sourceOld":"  @Test \n  public void testGetComponent() {\n    String[] components = new String[atLeast(10)];\n    for (int i = 0; i < components.length; i++) {\n      components[i] = Integer.toString(i);\n    }\n    FacetLabel cp = new FacetLabel(components);\n    for (int i = 0; i < components.length; i++) {\n      assertEquals(i, Integer.parseInt(cp.components[i]));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestFacetLabel#testGetComponent().mjava","pathOld":"/dev/null","sourceNew":"  @Test \n  public void testGetComponent() {\n    String[] components = new String[atLeast(10)];\n    for (int i = 0; i < components.length; i++) {\n      components[i] = Integer.toString(i);\n    }\n    FacetLabel cp = new FacetLabel(components);\n    for (int i = 0; i < components.length; i++) {\n      assertEquals(i, Integer.parseInt(cp.components[i]));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78522aad83283ca58fae08fd89406b65429d0229":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","78522aad83283ca58fae08fd89406b65429d0229"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["78522aad83283ca58fae08fd89406b65429d0229","3cc728b07df73b197e6d940d27f9b08b63918f13"],"78522aad83283ca58fae08fd89406b65429d0229":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}