{"path":"solr/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","commits":[{"id":"b24326411db492f92ea49f6fb947c90bc73cf19e","date":1298813468,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","pathOld":"/dev/null","sourceNew":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME, this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","pathOld":"/dev/null","sourceNew":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME, this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","pathOld":"/dev/null","sourceNew":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME, this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d20d5e40789b1c42f4f926e3174b271256c43657","date":1301641092,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","pathOld":"solr/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","sourceNew":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME(), this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","sourceOld":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME, this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b09c7419b92e982a901698cb401ce22ac35e4b04","date":1301668869,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","pathOld":"solr/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","sourceNew":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME(), this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","sourceOld":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME, this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","pathOld":"solr/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","sourceNew":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME(), this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","sourceOld":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME, this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","pathOld":"solr/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","sourceNew":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME(), this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","sourceOld":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME, this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","pathOld":"solr/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","sourceNew":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME(), this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","sourceOld":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME(), this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","pathOld":"solr/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","sourceNew":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME(), this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","sourceOld":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME(), this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","pathOld":"solr/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","sourceNew":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME(), this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","sourceOld":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME(), this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b24326411db492f92ea49f6fb947c90bc73cf19e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b24326411db492f92ea49f6fb947c90bc73cf19e"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["d20d5e40789b1c42f4f926e3174b271256c43657"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b24326411db492f92ea49f6fb947c90bc73cf19e"],"c26f00b574427b55127e869b935845554afde1fa":["b09c7419b92e982a901698cb401ce22ac35e4b04","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["d619839baa8ce5503e496b94a9e42ad6f079293f","b09c7419b92e982a901698cb401ce22ac35e4b04"],"b09c7419b92e982a901698cb401ce22ac35e4b04":["b24326411db492f92ea49f6fb947c90bc73cf19e"],"d20d5e40789b1c42f4f926e3174b271256c43657":["b24326411db492f92ea49f6fb947c90bc73cf19e"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["b09c7419b92e982a901698cb401ce22ac35e4b04"],"45669a651c970812a680841b97a77cce06af559f":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","b09c7419b92e982a901698cb401ce22ac35e4b04"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"b24326411db492f92ea49f6fb947c90bc73cf19e":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","b09c7419b92e982a901698cb401ce22ac35e4b04","d20d5e40789b1c42f4f926e3174b271256c43657"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["45669a651c970812a680841b97a77cce06af559f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b24326411db492f92ea49f6fb947c90bc73cf19e","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d20d5e40789b1c42f4f926e3174b271256c43657":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"b09c7419b92e982a901698cb401ce22ac35e4b04":["c26f00b574427b55127e869b935845554afde1fa","135621f3a0670a9394eb563224a3b76cc4dddc0f","a258fbb26824fd104ed795e5d9033d2d040049ee","45669a651c970812a680841b97a77cce06af559f"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"45669a651c970812a680841b97a77cce06af559f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","a258fbb26824fd104ed795e5d9033d2d040049ee","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}