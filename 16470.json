{"path":"contrib/xml-query-parser/src/demo/java/org/apache/lucene/xmlparser/webdemo/FormBasedXmlQueryDemo#init(ServletConfig).mjava","commits":[{"id":"48723f897a60bd03cbbde5978fc56918af4ee635","date":1226103632,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/demo/java/org/apache/lucene/xmlparser/webdemo/FormBasedXmlQueryDemo#init(ServletConfig).mjava","pathOld":"/dev/null","sourceNew":"\tpublic void init(ServletConfig config) throws ServletException {\r\n\t\tsuper.init(config);\r\n\t\ttry {\r\n\t\t\topenExampleIndex();\r\n\r\n\t\t\t//load servlet configuration settings\r\n\t\t\tString xslFile=config.getInitParameter(\"xslFile\");\r\n\t\t\tString defaultStandardQueryParserField = config.getInitParameter(\"defaultStandardQueryParserField\");\r\n\r\n\r\n\t\t\t//Load and cache choice of XSL query template using QueryTemplateManager\r\n\t\t\tqueryTemplateManager=new QueryTemplateManager(\r\n\t\t\t\t\tgetServletContext().getResourceAsStream(\"/WEB-INF/\"+xslFile));\r\n\r\n\t\t\t//initialize an XML Query Parser for use by all threads\r\n\t\t\txmlParser=new CorePlusExtensionsParser(defaultStandardQueryParserField,analyzer);\r\n\t\t} catch (Exception e) {\r\n\t\t\tthrow new ServletException(\"Error loading query template\",e);\r\n\t\t}\r\n\t}\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a361a621b184d9b73c9c9a37323a9845b8f8260","date":1226370946,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/xml-query-parser/src/demo/java/org/apache/lucene/xmlparser/webdemo/FormBasedXmlQueryDemo#init(ServletConfig).mjava","pathOld":"contrib/xml-query-parser/src/demo/java/org/apache/lucene/xmlparser/webdemo/FormBasedXmlQueryDemo#init(ServletConfig).mjava","sourceNew":"\tpublic void init(ServletConfig config) throws ServletException {\n\t\tsuper.init(config);\n\t\ttry {\n\t\t\topenExampleIndex();\n\n\t\t\t//load servlet configuration settings\n\t\t\tString xslFile=config.getInitParameter(\"xslFile\");\n\t\t\tString defaultStandardQueryParserField = config.getInitParameter(\"defaultStandardQueryParserField\");\n\n\n\t\t\t//Load and cache choice of XSL query template using QueryTemplateManager\n\t\t\tqueryTemplateManager=new QueryTemplateManager(\n\t\t\t\t\tgetServletContext().getResourceAsStream(\"/WEB-INF/\"+xslFile));\n\n\t\t\t//initialize an XML Query Parser for use by all threads\n\t\t\txmlParser=new CorePlusExtensionsParser(defaultStandardQueryParserField,analyzer);\n\t\t} catch (Exception e) {\n\t\t\tthrow new ServletException(\"Error loading query template\",e);\n\t\t}\n\t}\n\n","sourceOld":"\tpublic void init(ServletConfig config) throws ServletException {\r\n\t\tsuper.init(config);\r\n\t\ttry {\r\n\t\t\topenExampleIndex();\r\n\r\n\t\t\t//load servlet configuration settings\r\n\t\t\tString xslFile=config.getInitParameter(\"xslFile\");\r\n\t\t\tString defaultStandardQueryParserField = config.getInitParameter(\"defaultStandardQueryParserField\");\r\n\r\n\r\n\t\t\t//Load and cache choice of XSL query template using QueryTemplateManager\r\n\t\t\tqueryTemplateManager=new QueryTemplateManager(\r\n\t\t\t\t\tgetServletContext().getResourceAsStream(\"/WEB-INF/\"+xslFile));\r\n\r\n\t\t\t//initialize an XML Query Parser for use by all threads\r\n\t\t\txmlParser=new CorePlusExtensionsParser(defaultStandardQueryParserField,analyzer);\r\n\t\t} catch (Exception e) {\r\n\t\t\tthrow new ServletException(\"Error loading query template\",e);\r\n\t\t}\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/xml-query-parser/src/demo/java/org/apache/lucene/xmlparser/webdemo/FormBasedXmlQueryDemo#init(ServletConfig).mjava","pathOld":"contrib/xml-query-parser/src/demo/java/org/apache/lucene/xmlparser/webdemo/FormBasedXmlQueryDemo#init(ServletConfig).mjava","sourceNew":"\t@Override\n\tpublic void init(ServletConfig config) throws ServletException {\n\t\tsuper.init(config);\n\t\ttry {\n\t\t\topenExampleIndex();\n\n\t\t\t//load servlet configuration settings\n\t\t\tString xslFile=config.getInitParameter(\"xslFile\");\n\t\t\tString defaultStandardQueryParserField = config.getInitParameter(\"defaultStandardQueryParserField\");\n\n\n\t\t\t//Load and cache choice of XSL query template using QueryTemplateManager\n\t\t\tqueryTemplateManager=new QueryTemplateManager(\n\t\t\t\t\tgetServletContext().getResourceAsStream(\"/WEB-INF/\"+xslFile));\n\n\t\t\t//initialize an XML Query Parser for use by all threads\n\t\t\txmlParser=new CorePlusExtensionsParser(defaultStandardQueryParserField,analyzer);\n\t\t} catch (Exception e) {\n\t\t\tthrow new ServletException(\"Error loading query template\",e);\n\t\t}\n\t}\n\n","sourceOld":"\tpublic void init(ServletConfig config) throws ServletException {\n\t\tsuper.init(config);\n\t\ttry {\n\t\t\topenExampleIndex();\n\n\t\t\t//load servlet configuration settings\n\t\t\tString xslFile=config.getInitParameter(\"xslFile\");\n\t\t\tString defaultStandardQueryParserField = config.getInitParameter(\"defaultStandardQueryParserField\");\n\n\n\t\t\t//Load and cache choice of XSL query template using QueryTemplateManager\n\t\t\tqueryTemplateManager=new QueryTemplateManager(\n\t\t\t\t\tgetServletContext().getResourceAsStream(\"/WEB-INF/\"+xslFile));\n\n\t\t\t//initialize an XML Query Parser for use by all threads\n\t\t\txmlParser=new CorePlusExtensionsParser(defaultStandardQueryParserField,analyzer);\n\t\t} catch (Exception e) {\n\t\t\tthrow new ServletException(\"Error loading query template\",e);\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/demo/java/org/apache/lucene/xmlparser/webdemo/FormBasedXmlQueryDemo#init(ServletConfig).mjava","pathOld":"contrib/xml-query-parser/src/demo/java/org/apache/lucene/xmlparser/webdemo/FormBasedXmlQueryDemo#init(ServletConfig).mjava","sourceNew":"\t@Override\n\tpublic void init(ServletConfig config) throws ServletException {\n\t\tsuper.init(config);\n\t\ttry {\n\t\t\topenExampleIndex();\n\n\t\t\t//load servlet configuration settings\n\t\t\tString xslFile=config.getInitParameter(\"xslFile\");\n\t\t\tString defaultStandardQueryParserField = config.getInitParameter(\"defaultStandardQueryParserField\");\n\n\n\t\t\t//Load and cache choice of XSL query template using QueryTemplateManager\n\t\t\tqueryTemplateManager=new QueryTemplateManager(\n\t\t\t\t\tgetServletContext().getResourceAsStream(\"/WEB-INF/\"+xslFile));\n\n\t\t\t//initialize an XML Query Parser for use by all threads\n\t\t\txmlParser=new CorePlusExtensionsParser(defaultStandardQueryParserField,analyzer);\n\t\t} catch (Exception e) {\n\t\t\tthrow new ServletException(\"Error loading query template\",e);\n\t\t}\n\t}\n\n","sourceOld":"\t@Override\n\tpublic void init(ServletConfig config) throws ServletException {\n\t\tsuper.init(config);\n\t\ttry {\n\t\t\topenExampleIndex();\n\n\t\t\t//load servlet configuration settings\n\t\t\tString xslFile=config.getInitParameter(\"xslFile\");\n\t\t\tString defaultStandardQueryParserField = config.getInitParameter(\"defaultStandardQueryParserField\");\n\n\n\t\t\t//Load and cache choice of XSL query template using QueryTemplateManager\n\t\t\tqueryTemplateManager=new QueryTemplateManager(\n\t\t\t\t\tgetServletContext().getResourceAsStream(\"/WEB-INF/\"+xslFile));\n\n\t\t\t//initialize an XML Query Parser for use by all threads\n\t\t\txmlParser=new CorePlusExtensionsParser(defaultStandardQueryParserField,analyzer);\n\t\t} catch (Exception e) {\n\t\t\tthrow new ServletException(\"Error loading query template\",e);\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"48723f897a60bd03cbbde5978fc56918af4ee635":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["48723f897a60bd03cbbde5978fc56918af4ee635"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"]},"commit2Childs":{"48723f897a60bd03cbbde5978fc56918af4ee635":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["48723f897a60bd03cbbde5978fc56918af4ee635"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}