{"path":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#files(Directory,SegmentInfo,int,Collection[String]).mjava","commits":[{"id":"0150c6e116b24d66f02d63fcb0758f336e8791e2","date":1307283797,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#files(Directory,SegmentInfo,int,Collection[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#files(Directory,SegmentInfo,String,Collection[String]).mjava","sourceNew":"  public static void files(Directory dir, SegmentInfo segmentInfo, int id, Collection<String> files) throws IOException {\n    files.add(IndexFileNames.segmentFileName(segmentInfo.name, id, StandardCodec.FREQ_EXTENSION));\n    if (segmentInfo.getHasProx()) {\n      files.add(IndexFileNames.segmentFileName(segmentInfo.name, id, StandardCodec.PROX_EXTENSION));\n    }\n  }\n\n","sourceOld":"  public static void files(Directory dir, SegmentInfo segmentInfo, String id, Collection<String> files) throws IOException {\n    files.add(IndexFileNames.segmentFileName(segmentInfo.name, id, StandardCodec.FREQ_EXTENSION));\n    if (segmentInfo.getHasProx()) {\n      files.add(IndexFileNames.segmentFileName(segmentInfo.name, id, StandardCodec.PROX_EXTENSION));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#files(Directory,SegmentInfo,int,Collection[String]).mjava","pathOld":"/dev/null","sourceNew":"  public static void files(Directory dir, SegmentInfo segmentInfo, int id, Collection<String> files) throws IOException {\n    files.add(IndexFileNames.segmentFileName(segmentInfo.name, id, StandardCodec.FREQ_EXTENSION));\n    if (segmentInfo.getHasProx()) {\n      files.add(IndexFileNames.segmentFileName(segmentInfo.name, id, StandardCodec.PROX_EXTENSION));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#files(Directory,SegmentInfo,int,Collection[String]).mjava","pathOld":"/dev/null","sourceNew":"  public static void files(Directory dir, SegmentInfo segmentInfo, int id, Collection<String> files) throws IOException {\n    files.add(IndexFileNames.segmentFileName(segmentInfo.name, id, StandardCodec.FREQ_EXTENSION));\n    if (segmentInfo.getHasProx()) {\n      files.add(IndexFileNames.segmentFileName(segmentInfo.name, id, StandardCodec.PROX_EXTENSION));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#files(Directory,SegmentInfo,int,Collection[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#files(Directory,SegmentInfo,int,Collection[String]).mjava","sourceNew":"  public static void files(Directory dir, SegmentInfo segmentInfo, int codecID, Collection<String> files) throws IOException {\n    files.add(IndexFileNames.segmentFileName(segmentInfo.name, codecID, StandardCodec.FREQ_EXTENSION));\n    if (segmentInfo.getHasProx()) {\n      files.add(IndexFileNames.segmentFileName(segmentInfo.name, codecID, StandardCodec.PROX_EXTENSION));\n    }\n  }\n\n","sourceOld":"  public static void files(Directory dir, SegmentInfo segmentInfo, int id, Collection<String> files) throws IOException {\n    files.add(IndexFileNames.segmentFileName(segmentInfo.name, id, StandardCodec.FREQ_EXTENSION));\n    if (segmentInfo.getHasProx()) {\n      files.add(IndexFileNames.segmentFileName(segmentInfo.name, id, StandardCodec.PROX_EXTENSION));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40PostingsReader#files(Directory,SegmentInfo,String,Collection[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#files(Directory,SegmentInfo,int,Collection[String]).mjava","sourceNew":"  public static void files(Directory dir, SegmentInfo segmentInfo, String segmentSuffix, Collection<String> files) throws IOException {\n    files.add(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, Lucene40PostingsFormat.FREQ_EXTENSION));\n    if (segmentInfo.getHasProx()) {\n      files.add(IndexFileNames.segmentFileName(segmentInfo.name, segmentSuffix, Lucene40PostingsFormat.PROX_EXTENSION));\n    }\n  }\n\n","sourceOld":"  public static void files(Directory dir, SegmentInfo segmentInfo, int codecID, Collection<String> files) throws IOException {\n    files.add(IndexFileNames.segmentFileName(segmentInfo.name, codecID, StandardCodec.FREQ_EXTENSION));\n    if (segmentInfo.getHasProx()) {\n      files.add(IndexFileNames.segmentFileName(segmentInfo.name, codecID, StandardCodec.PROX_EXTENSION));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"7b91922b55d15444d554721b352861d028eb8278":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0150c6e116b24d66f02d63fcb0758f336e8791e2"],"0150c6e116b24d66f02d63fcb0758f336e8791e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["7b91922b55d15444d554721b352861d028eb8278"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["60ba444201d2570214b6fcf1d15600dc1a01f548","a02058e0eaba4bbd5d05e6b06b9522c0acfd1655"],"0150c6e116b24d66f02d63fcb0758f336e8791e2":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","0150c6e116b24d66f02d63fcb0758f336e8791e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}