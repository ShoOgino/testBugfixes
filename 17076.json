{"path":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOExceptionOnOpen(String).mjava","commits":[{"id":"bac2bd9d901ec1ee7111a77c8e616d745fb2a362","date":1368131212,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOExceptionOnOpen(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOExceptionOnOpen().mjava","sourceNew":"  void maybeThrowIOExceptionOnOpen(String name) throws IOException {\n    if (randomState.nextDouble() < randomIOExceptionRateOnOpen) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception during open file=\" + name);\n        new Throwable().printStackTrace(System.out);\n      }\n      if (randomState.nextBoolean()) {\n        throw new IOException(\"a random IOException\");\n      } else {\n        throw new FileNotFoundException(\"a random IOException\");\n      }\n    }\n  }\n\n","sourceOld":"  void maybeThrowIOExceptionOnOpen() throws IOException {\n    if (randomState.nextDouble() < randomIOExceptionRateOnOpen) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception during open\");\n        new Throwable().printStackTrace(System.out);\n      }\n      if (randomState.nextBoolean()) {\n        throw new IOException(\"a random IOException\");\n      } else {\n        throw new FileNotFoundException(\"a random IOException\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4","date":1368446242,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOExceptionOnOpen(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOExceptionOnOpen(String).mjava","sourceNew":"  void maybeThrowIOExceptionOnOpen(String name) throws IOException {\n    if (randomState.nextDouble() < randomIOExceptionRateOnOpen) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception during open file=\" + name);\n        new Throwable().printStackTrace(System.out);\n      }\n      if (randomState.nextBoolean()) {\n        throw new IOException(\"a random IOException (\" + name + \")\");\n      } else {\n        throw new FileNotFoundException(\"a random IOException (\" + name + \")\");\n      }\n    }\n  }\n\n","sourceOld":"  void maybeThrowIOExceptionOnOpen(String name) throws IOException {\n    if (randomState.nextDouble() < randomIOExceptionRateOnOpen) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception during open file=\" + name);\n        new Throwable().printStackTrace(System.out);\n      }\n      if (randomState.nextBoolean()) {\n        throw new IOException(\"a random IOException\");\n      } else {\n        throw new FileNotFoundException(\"a random IOException\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52","date":1370989568,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOExceptionOnOpen(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOExceptionOnOpen(String).mjava","sourceNew":"  void maybeThrowIOExceptionOnOpen(String name) throws IOException {\n    if (randomState.nextDouble() < randomIOExceptionRateOnOpen) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception during open file=\" + name);\n        new Throwable().printStackTrace(System.out);\n      }\n      if (randomState.nextBoolean()) {\n        throw new IOException(\"a random IOException (\" + name + \")\");\n      } else {\n        throw randomState.nextBoolean() ? new FileNotFoundException(\"a random IOException (\" + name + \")\") : new NoSuchFileException(\"a random IOException (\" + name + \")\");\n      }\n    }\n  }\n\n","sourceOld":"  void maybeThrowIOExceptionOnOpen(String name) throws IOException {\n    if (randomState.nextDouble() < randomIOExceptionRateOnOpen) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception during open file=\" + name);\n        new Throwable().printStackTrace(System.out);\n      }\n      if (randomState.nextBoolean()) {\n        throw new IOException(\"a random IOException (\" + name + \")\");\n      } else {\n        throw new FileNotFoundException(\"a random IOException (\" + name + \")\");\n      }\n    }\n  }\n\n","bugFix":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b1518fdad7b84b251e9210a29419b2fd0fc7e6a","date":1395610047,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOExceptionOnOpen(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOExceptionOnOpen(String).mjava","sourceNew":"  void maybeThrowIOExceptionOnOpen(String name) throws IOException {\n    if (randomState.nextDouble() < randomIOExceptionRateOnOpen) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception during open file=\" + name);\n        new Throwable().printStackTrace(System.out);\n      }\n      if (allowRandomFileNotFoundException == false || randomState.nextBoolean()) {\n        throw new IOException(\"a random IOException (\" + name + \")\");\n      } else {\n        throw randomState.nextBoolean() ? new FileNotFoundException(\"a random IOException (\" + name + \")\") : new NoSuchFileException(\"a random IOException (\" + name + \")\");\n      }\n    }\n  }\n\n","sourceOld":"  void maybeThrowIOExceptionOnOpen(String name) throws IOException {\n    if (randomState.nextDouble() < randomIOExceptionRateOnOpen) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception during open file=\" + name);\n        new Throwable().printStackTrace(System.out);\n      }\n      if (randomState.nextBoolean()) {\n        throw new IOException(\"a random IOException (\" + name + \")\");\n      } else {\n        throw randomState.nextBoolean() ? new FileNotFoundException(\"a random IOException (\" + name + \")\") : new NoSuchFileException(\"a random IOException (\" + name + \")\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4":["bac2bd9d901ec1ee7111a77c8e616d745fb2a362"],"d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bac2bd9d901ec1ee7111a77c8e616d745fb2a362":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b1518fdad7b84b251e9210a29419b2fd0fc7e6a"],"3b1518fdad7b84b251e9210a29419b2fd0fc7e6a":["d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52"]},"commit2Childs":{"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4":["d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52"],"d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52":["3b1518fdad7b84b251e9210a29419b2fd0fc7e6a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bac2bd9d901ec1ee7111a77c8e616d745fb2a362"],"bac2bd9d901ec1ee7111a77c8e616d745fb2a362":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"3b1518fdad7b84b251e9210a29419b2fd0fc7e6a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}