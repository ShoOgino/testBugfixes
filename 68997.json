{"path":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon#testIllegalGeoJSONMultipleFeatures().mjava","commits":[{"id":"928077c840ee09456eee199964d886c73fc53314","date":1468594268,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon#testIllegalGeoJSONMultipleFeatures().mjava","pathOld":"/dev/null","sourceNew":"  // FeatureCollection with more than one geometry is not supported:\n  public void testIllegalGeoJSONMultipleFeatures() throws Exception {\n    StringBuilder b = new StringBuilder();\n    b.append(\"{ \\\"type\\\": \\\"FeatureCollection\\\",\\n\");\n    b.append(\"  \\\"features\\\": [\\n\");\n    b.append(\"    { \\\"type\\\": \\\"Feature\\\",\\n\");\n    b.append(\"      \\\"geometry\\\": {\\\"type\\\": \\\"Point\\\", \\\"coordinates\\\": [102.0, 0.5]},\\n\");\n    b.append(\"      \\\"properties\\\": {\\\"prop0\\\": \\\"value0\\\"}\\n\");\n    b.append(\"    },\\n\");\n    b.append(\"    { \\\"type\\\": \\\"Feature\\\",\\n\");\n    b.append(\"      \\\"geometry\\\": {\\n\");\n    b.append(\"      \\\"type\\\": \\\"LineString\\\",\\n\");\n    b.append(\"      \\\"coordinates\\\": [\\n\");\n    b.append(\"        [102.0, 0.0], [103.0, 1.0], [104.0, 0.0], [105.0, 1.0]\\n\");\n    b.append(\"        ]\\n\");\n    b.append(\"      },\\n\");\n    b.append(\"      \\\"properties\\\": {\\n\");\n    b.append(\"        \\\"prop0\\\": \\\"value0\\\",\\n\");\n    b.append(\"        \\\"prop1\\\": 0.0\\n\");\n    b.append(\"      }\\n\");\n    b.append(\"    },\\n\");\n    b.append(\"    { \\\"type\\\": \\\"Feature\\\",\\n\");\n    b.append(\"      \\\"geometry\\\": {\\n\");\n    b.append(\"        \\\"type\\\": \\\"Polygon\\\",\\n\");\n    b.append(\"        \\\"coordinates\\\": [\\n\");\n    b.append(\"          [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0],\\n\");\n    b.append(\"            [100.0, 1.0], [100.0, 0.0] ]\\n\");\n    b.append(\"          ]\\n\");\n    b.append(\"      },\\n\");\n    b.append(\"      \\\"properties\\\": {\\n\");\n    b.append(\"        \\\"prop0\\\": \\\"value0\\\",\\n\");\n    b.append(\"        \\\"prop1\\\": {\\\"this\\\": \\\"that\\\"}\\n\");\n    b.append(\"      }\\n\");\n    b.append(\"    }\\n\");\n    b.append(\"  ]\\n\");\n    b.append(\"}    \\n\");\n\n    Exception e = expectThrows(ParseException.class, () -> Polygon.fromGeoJSON(b.toString()));\n    assertTrue(e.getMessage().contains(\"can only handle type FeatureCollection (if it has a single polygon geometry), Feature, Polygon or MutiPolygon, but got Point\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon#testIllegalGeoJSONMultipleFeatures().mjava","pathOld":"/dev/null","sourceNew":"  // FeatureCollection with more than one geometry is not supported:\n  public void testIllegalGeoJSONMultipleFeatures() throws Exception {\n    StringBuilder b = new StringBuilder();\n    b.append(\"{ \\\"type\\\": \\\"FeatureCollection\\\",\\n\");\n    b.append(\"  \\\"features\\\": [\\n\");\n    b.append(\"    { \\\"type\\\": \\\"Feature\\\",\\n\");\n    b.append(\"      \\\"geometry\\\": {\\\"type\\\": \\\"Point\\\", \\\"coordinates\\\": [102.0, 0.5]},\\n\");\n    b.append(\"      \\\"properties\\\": {\\\"prop0\\\": \\\"value0\\\"}\\n\");\n    b.append(\"    },\\n\");\n    b.append(\"    { \\\"type\\\": \\\"Feature\\\",\\n\");\n    b.append(\"      \\\"geometry\\\": {\\n\");\n    b.append(\"      \\\"type\\\": \\\"LineString\\\",\\n\");\n    b.append(\"      \\\"coordinates\\\": [\\n\");\n    b.append(\"        [102.0, 0.0], [103.0, 1.0], [104.0, 0.0], [105.0, 1.0]\\n\");\n    b.append(\"        ]\\n\");\n    b.append(\"      },\\n\");\n    b.append(\"      \\\"properties\\\": {\\n\");\n    b.append(\"        \\\"prop0\\\": \\\"value0\\\",\\n\");\n    b.append(\"        \\\"prop1\\\": 0.0\\n\");\n    b.append(\"      }\\n\");\n    b.append(\"    },\\n\");\n    b.append(\"    { \\\"type\\\": \\\"Feature\\\",\\n\");\n    b.append(\"      \\\"geometry\\\": {\\n\");\n    b.append(\"        \\\"type\\\": \\\"Polygon\\\",\\n\");\n    b.append(\"        \\\"coordinates\\\": [\\n\");\n    b.append(\"          [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0],\\n\");\n    b.append(\"            [100.0, 1.0], [100.0, 0.0] ]\\n\");\n    b.append(\"          ]\\n\");\n    b.append(\"      },\\n\");\n    b.append(\"      \\\"properties\\\": {\\n\");\n    b.append(\"        \\\"prop0\\\": \\\"value0\\\",\\n\");\n    b.append(\"        \\\"prop1\\\": {\\\"this\\\": \\\"that\\\"}\\n\");\n    b.append(\"      }\\n\");\n    b.append(\"    }\\n\");\n    b.append(\"  ]\\n\");\n    b.append(\"}    \\n\");\n\n    Exception e = expectThrows(ParseException.class, () -> Polygon.fromGeoJSON(b.toString()));\n    assertTrue(e.getMessage().contains(\"can only handle type FeatureCollection (if it has a single polygon geometry), Feature, Polygon or MutiPolygon, but got Point\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc568cb4c7e3789d73d61ccb5862d92573138f29","date":1574853614,"type":3,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon#testIllegalGeoJSONMultipleFeatures().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon#testIllegalGeoJSONMultipleFeatures().mjava","sourceNew":"  // FeatureCollection with more than one geometry is not supported:\n  public void testIllegalGeoJSONMultipleFeatures() throws Exception {\n    StringBuilder b = new StringBuilder();\n    b.append(\"{ \\\"type\\\": \\\"FeatureCollection\\\",\\n\");\n    b.append(\"  \\\"features\\\": [\\n\");\n    b.append(\"    { \\\"type\\\": \\\"Feature\\\",\\n\");\n    b.append(\"      \\\"geometry\\\": {\\\"type\\\": \\\"Point\\\", \\\"coordinates\\\": [102.0, 0.5]},\\n\");\n    b.append(\"      \\\"properties\\\": {\\\"prop0\\\": \\\"value0\\\"}\\n\");\n    b.append(\"    },\\n\");\n    b.append(\"    { \\\"type\\\": \\\"Feature\\\",\\n\");\n    b.append(\"      \\\"geometry\\\": {\\n\");\n    b.append(\"      \\\"type\\\": \\\"LineString\\\",\\n\");\n    b.append(\"      \\\"coordinates\\\": [\\n\");\n    b.append(\"        [102.0, 0.0], [103.0, 1.0], [104.0, 0.0], [105.0, 1.0]\\n\");\n    b.append(\"        ]\\n\");\n    b.append(\"      },\\n\");\n    b.append(\"      \\\"properties\\\": {\\n\");\n    b.append(\"        \\\"prop0\\\": \\\"value0\\\",\\n\");\n    b.append(\"        \\\"prop1\\\": 0.0\\n\");\n    b.append(\"      }\\n\");\n    b.append(\"    },\\n\");\n    b.append(\"    { \\\"type\\\": \\\"Feature\\\",\\n\");\n    b.append(\"      \\\"geometry\\\": {\\n\");\n    b.append(\"        \\\"type\\\": \\\"Polygon\\\",\\n\");\n    b.append(\"        \\\"coordinates\\\": [\\n\");\n    b.append(\"          [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0],\\n\");\n    b.append(\"            [100.0, 1.0], [100.0, 0.0] ]\\n\");\n    b.append(\"          ]\\n\");\n    b.append(\"      },\\n\");\n    b.append(\"      \\\"properties\\\": {\\n\");\n    b.append(\"        \\\"prop0\\\": \\\"value0\\\",\\n\");\n    b.append(\"        \\\"prop1\\\": {\\\"this\\\": \\\"that\\\"}\\n\");\n    b.append(\"      }\\n\");\n    b.append(\"    }\\n\");\n    b.append(\"  ]\\n\");\n    b.append(\"}    \\n\");\n\n    Exception e = expectThrows(ParseException.class, () -> Polygon.fromGeoJSON(b.toString()));\n    assertTrue(e.getMessage().contains(\"can only handle type FeatureCollection (if it has a single polygon geometry), Feature, Polygon or MultiPolygon, but got Point\"));\n  }\n\n","sourceOld":"  // FeatureCollection with more than one geometry is not supported:\n  public void testIllegalGeoJSONMultipleFeatures() throws Exception {\n    StringBuilder b = new StringBuilder();\n    b.append(\"{ \\\"type\\\": \\\"FeatureCollection\\\",\\n\");\n    b.append(\"  \\\"features\\\": [\\n\");\n    b.append(\"    { \\\"type\\\": \\\"Feature\\\",\\n\");\n    b.append(\"      \\\"geometry\\\": {\\\"type\\\": \\\"Point\\\", \\\"coordinates\\\": [102.0, 0.5]},\\n\");\n    b.append(\"      \\\"properties\\\": {\\\"prop0\\\": \\\"value0\\\"}\\n\");\n    b.append(\"    },\\n\");\n    b.append(\"    { \\\"type\\\": \\\"Feature\\\",\\n\");\n    b.append(\"      \\\"geometry\\\": {\\n\");\n    b.append(\"      \\\"type\\\": \\\"LineString\\\",\\n\");\n    b.append(\"      \\\"coordinates\\\": [\\n\");\n    b.append(\"        [102.0, 0.0], [103.0, 1.0], [104.0, 0.0], [105.0, 1.0]\\n\");\n    b.append(\"        ]\\n\");\n    b.append(\"      },\\n\");\n    b.append(\"      \\\"properties\\\": {\\n\");\n    b.append(\"        \\\"prop0\\\": \\\"value0\\\",\\n\");\n    b.append(\"        \\\"prop1\\\": 0.0\\n\");\n    b.append(\"      }\\n\");\n    b.append(\"    },\\n\");\n    b.append(\"    { \\\"type\\\": \\\"Feature\\\",\\n\");\n    b.append(\"      \\\"geometry\\\": {\\n\");\n    b.append(\"        \\\"type\\\": \\\"Polygon\\\",\\n\");\n    b.append(\"        \\\"coordinates\\\": [\\n\");\n    b.append(\"          [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0],\\n\");\n    b.append(\"            [100.0, 1.0], [100.0, 0.0] ]\\n\");\n    b.append(\"          ]\\n\");\n    b.append(\"      },\\n\");\n    b.append(\"      \\\"properties\\\": {\\n\");\n    b.append(\"        \\\"prop0\\\": \\\"value0\\\",\\n\");\n    b.append(\"        \\\"prop1\\\": {\\\"this\\\": \\\"that\\\"}\\n\");\n    b.append(\"      }\\n\");\n    b.append(\"    }\\n\");\n    b.append(\"  ]\\n\");\n    b.append(\"}    \\n\");\n\n    Exception e = expectThrows(ParseException.class, () -> Polygon.fromGeoJSON(b.toString()));\n    assertTrue(e.getMessage().contains(\"can only handle type FeatureCollection (if it has a single polygon geometry), Feature, Polygon or MutiPolygon, but got Point\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cc568cb4c7e3789d73d61ccb5862d92573138f29":["928077c840ee09456eee199964d886c73fc53314"],"928077c840ee09456eee199964d886c73fc53314":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","928077c840ee09456eee199964d886c73fc53314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cc568cb4c7e3789d73d61ccb5862d92573138f29"]},"commit2Childs":{"cc568cb4c7e3789d73d61ccb5862d92573138f29":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"928077c840ee09456eee199964d886c73fc53314":["cc568cb4c7e3789d73d61ccb5862d92573138f29","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["928077c840ee09456eee199964d886c73fc53314","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}