{"path":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParser#DisjQuery(CharSequence).mjava","commits":[{"id":"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","date":1310612214,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParser#DisjQuery(CharSequence).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#DisjQuery(CharSequence).mjava","sourceNew":"  final public QueryNode DisjQuery(CharSequence field) throws ParseException {\n        QueryNode first, c;\n        Vector<QueryNode> clauses = null;\n    first = ConjQuery(field);\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case OR:\n        ;\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        break label_2;\n      }\n      jj_consume_token(OR);\n      c = ConjQuery(field);\n     if (clauses == null) {\n         clauses = new Vector<QueryNode>();\n         clauses.addElement(first);\n     }\n     clauses.addElement(c);\n    }\n    if (clauses != null) {\n            {if (true) return new OrQueryNode(clauses);}\n    } else {\n        {if (true) return first;}\n    }\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public QueryNode DisjQuery(CharSequence field) throws ParseException {\n        QueryNode first, c;\n        Vector<QueryNode> clauses = null;\n    first = ConjQuery(field);\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case OR:\n        ;\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        break label_2;\n      }\n      jj_consume_token(OR);\n      c = ConjQuery(field);\n     if (clauses == null) {\n         clauses = new Vector<QueryNode>();\n         clauses.addElement(first);\n     }\n     clauses.addElement(c);\n    }\n    if (clauses != null) {\n            {if (true) return new OrQueryNode(clauses);}\n    } else {\n        {if (true) return first;}\n    }\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParser#DisjQuery(CharSequence).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParser#DisjQuery(CharSequence).mjava","sourceNew":"  final public QueryNode DisjQuery(CharSequence field) throws ParseException {\n        QueryNode first, c;\n        Vector<QueryNode> clauses = null;\n    first = ConjQuery(field);\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case OR:\n        ;\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        break label_2;\n      }\n      jj_consume_token(OR);\n      c = ConjQuery(field);\n     if (clauses == null) {\n         clauses = new Vector<QueryNode>();\n         clauses.addElement(first);\n     }\n     clauses.addElement(c);\n    }\n    if (clauses != null) {\n            {if (true) return new OrQueryNode(clauses);}\n    } else {\n        {if (true) return first;}\n    }\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public QueryNode DisjQuery(CharSequence field) throws ParseException {\n        QueryNode first, c;\n        Vector<QueryNode> clauses = null;\n    first = ConjQuery(field);\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case OR:\n        ;\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        break label_2;\n      }\n      jj_consume_token(OR);\n      c = ConjQuery(field);\n     if (clauses == null) {\n         clauses = new Vector<QueryNode>();\n         clauses.addElement(first);\n     }\n     clauses.addElement(c);\n    }\n    if (clauses != null) {\n            {if (true) return new OrQueryNode(clauses);}\n    } else {\n        {if (true) return first;}\n    }\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}