{"path":"modules/join/src/test/org/apache/lucene/search/join/TestJoinUtil#createExpectedResult(String,boolean,IndexReader,IndexIterationContext).mjava","commits":[{"id":"3cd7782b032787117c986a2278d05b25056b2eba","date":1326755795,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/join/src/test/org/apache/lucene/search/join/TestJoinUtil#createExpectedResult(String,boolean,IndexReader,IndexIterationContext).mjava","pathOld":"/dev/null","sourceNew":"  private FixedBitSet createExpectedResult(String queryValue, boolean from, IndexReader topLevelReader, IndexIterationContext context) throws IOException {\n    final Map<String, List<RandomDoc>> randomValueDocs;\n    final Map<String, List<RandomDoc>> linkValueDocuments;\n    if (from) {\n      randomValueDocs = context.randomValueFromDocs;\n      linkValueDocuments = context.toDocuments;\n    } else {\n      randomValueDocs = context.randomValueToDocs;\n      linkValueDocuments = context.fromDocuments;\n    }\n\n    FixedBitSet expectedResult = new FixedBitSet(topLevelReader.maxDoc());\n    List<RandomDoc> matchingDocs = randomValueDocs.get(queryValue);\n    if (matchingDocs == null) {\n      return new FixedBitSet(topLevelReader.maxDoc());\n    }\n\n    for (RandomDoc matchingDoc : matchingDocs) {\n      for (String linkValue : matchingDoc.linkValues) {\n        List<RandomDoc> otherMatchingDocs = linkValueDocuments.get(linkValue);\n        if (otherMatchingDocs == null) {\n          continue;\n        }\n\n        for (RandomDoc otherSideDoc : otherMatchingDocs) {\n          DocsEnum docsEnum = MultiFields.getTermDocsEnum(topLevelReader, MultiFields.getLiveDocs(topLevelReader), \"id\", new BytesRef(otherSideDoc.id), false);\n          assert docsEnum != null;\n          int doc = docsEnum.nextDoc();\n          expectedResult.set(doc);\n        }\n      }\n    }\n    return expectedResult;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["02331260bb246364779cb6f04919ca47900d01bb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#createExpectedResult(String,boolean,IndexReader,IndexIterationContext).mjava","pathOld":"modules/join/src/test/org/apache/lucene/search/join/TestJoinUtil#createExpectedResult(String,boolean,IndexReader,IndexIterationContext).mjava","sourceNew":"  private FixedBitSet createExpectedResult(String queryValue, boolean from, IndexReader topLevelReader, IndexIterationContext context) throws IOException {\n    final Map<String, List<RandomDoc>> randomValueDocs;\n    final Map<String, List<RandomDoc>> linkValueDocuments;\n    if (from) {\n      randomValueDocs = context.randomValueFromDocs;\n      linkValueDocuments = context.toDocuments;\n    } else {\n      randomValueDocs = context.randomValueToDocs;\n      linkValueDocuments = context.fromDocuments;\n    }\n\n    FixedBitSet expectedResult = new FixedBitSet(topLevelReader.maxDoc());\n    List<RandomDoc> matchingDocs = randomValueDocs.get(queryValue);\n    if (matchingDocs == null) {\n      return new FixedBitSet(topLevelReader.maxDoc());\n    }\n\n    for (RandomDoc matchingDoc : matchingDocs) {\n      for (String linkValue : matchingDoc.linkValues) {\n        List<RandomDoc> otherMatchingDocs = linkValueDocuments.get(linkValue);\n        if (otherMatchingDocs == null) {\n          continue;\n        }\n\n        for (RandomDoc otherSideDoc : otherMatchingDocs) {\n          DocsEnum docsEnum = MultiFields.getTermDocsEnum(topLevelReader, MultiFields.getLiveDocs(topLevelReader), \"id\", new BytesRef(otherSideDoc.id), false);\n          assert docsEnum != null;\n          int doc = docsEnum.nextDoc();\n          expectedResult.set(doc);\n        }\n      }\n    }\n    return expectedResult;\n  }\n\n","sourceOld":"  private FixedBitSet createExpectedResult(String queryValue, boolean from, IndexReader topLevelReader, IndexIterationContext context) throws IOException {\n    final Map<String, List<RandomDoc>> randomValueDocs;\n    final Map<String, List<RandomDoc>> linkValueDocuments;\n    if (from) {\n      randomValueDocs = context.randomValueFromDocs;\n      linkValueDocuments = context.toDocuments;\n    } else {\n      randomValueDocs = context.randomValueToDocs;\n      linkValueDocuments = context.fromDocuments;\n    }\n\n    FixedBitSet expectedResult = new FixedBitSet(topLevelReader.maxDoc());\n    List<RandomDoc> matchingDocs = randomValueDocs.get(queryValue);\n    if (matchingDocs == null) {\n      return new FixedBitSet(topLevelReader.maxDoc());\n    }\n\n    for (RandomDoc matchingDoc : matchingDocs) {\n      for (String linkValue : matchingDoc.linkValues) {\n        List<RandomDoc> otherMatchingDocs = linkValueDocuments.get(linkValue);\n        if (otherMatchingDocs == null) {\n          continue;\n        }\n\n        for (RandomDoc otherSideDoc : otherMatchingDocs) {\n          DocsEnum docsEnum = MultiFields.getTermDocsEnum(topLevelReader, MultiFields.getLiveDocs(topLevelReader), \"id\", new BytesRef(otherSideDoc.id), false);\n          assert docsEnum != null;\n          int doc = docsEnum.nextDoc();\n          expectedResult.set(doc);\n        }\n      }\n    }\n    return expectedResult;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3cd7782b032787117c986a2278d05b25056b2eba"],"3cd7782b032787117c986a2278d05b25056b2eba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cd7782b032787117c986a2278d05b25056b2eba":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3cd7782b032787117c986a2278d05b25056b2eba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}