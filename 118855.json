{"path":"modules/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#getRandomSort().mjava","commits":[{"id":"307cff5af2b00f126fdf9d3435b75d5ed4d0f402","date":1305370109,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#getRandomSort().mjava","pathOld":"/dev/null","sourceNew":"  private Sort getRandomSort() {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random.nextBoolean()) {\n      if (random.nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n      } else {\n        sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n      }\n    } else if (random.nextBoolean()) {\n      sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n      sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n    }\n    sortFields.add(new SortField(\"id\", SortField.INT));\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#getRandomSort().mjava","pathOld":"/dev/null","sourceNew":"  private Sort getRandomSort() {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random.nextBoolean()) {\n      if (random.nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n      } else {\n        sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n      }\n    } else if (random.nextBoolean()) {\n      sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n      sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n    }\n    sortFields.add(new SortField(\"id\", SortField.INT));\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#getRandomSort().mjava","pathOld":"/dev/null","sourceNew":"  private Sort getRandomSort() {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random.nextBoolean()) {\n      if (random.nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n      } else {\n        sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n      }\n    } else if (random.nextBoolean()) {\n      sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n      sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n    }\n    sortFields.add(new SortField(\"id\", SortField.INT));\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b861c0fdfa4d005c70848c9121655e9dc704f96","date":1307129511,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#getRandomSort().mjava","pathOld":"modules/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#getRandomSort().mjava","sourceNew":"  private Sort getRandomSort() {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random.nextInt(7) == 2) {\n      sortFields.add(SortField.FIELD_SCORE);\n    } else {\n      if (random.nextBoolean()) {\n        if (random.nextBoolean()) {\n          sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n        } else {\n          sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n        }\n      } else if (random.nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n        sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n      }\n    }\n    // Break ties:\n    sortFields.add(new SortField(\"id\", SortField.INT));\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","sourceOld":"  private Sort getRandomSort() {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random.nextBoolean()) {\n      if (random.nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n      } else {\n        sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n      }\n    } else if (random.nextBoolean()) {\n      sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n      sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n    }\n    sortFields.add(new SortField(\"id\", SortField.INT));\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c03daa6ddcb4768a702115ec63799cab5fff3d92","date":1307140842,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#getRandomSort().mjava","pathOld":"modules/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#getRandomSort().mjava","sourceNew":"  private Sort getRandomSort() {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random.nextInt(7) == 2) {\n      sortFields.add(SortField.FIELD_SCORE);\n    } else {\n      if (random.nextBoolean()) {\n        if (random.nextBoolean()) {\n          sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n        } else {\n          sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n        }\n      } else if (random.nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n        sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n      }\n    }\n    // Break ties:\n    sortFields.add(new SortField(\"id\", SortField.INT));\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","sourceOld":"  private Sort getRandomSort() {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random.nextBoolean()) {\n      if (random.nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n      } else {\n        sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n      }\n    } else if (random.nextBoolean()) {\n      sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n      sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n    }\n    sortFields.add(new SortField(\"id\", SortField.INT));\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e7c99bd45fa88a3d93a03fdd773053bef72268e","date":1307218088,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#getRandomSort().mjava","pathOld":"modules/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#getRandomSort().mjava","sourceNew":"  private Sort getRandomSort() {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random.nextInt(7) == 2) {\n      sortFields.add(SortField.FIELD_SCORE);\n    } else {\n      if (random.nextBoolean()) {\n        if (random.nextBoolean()) {\n          sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n        } else {\n          sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n        }\n      } else if (random.nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n        sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n      }\n    }\n    // Break ties:\n    sortFields.add(new SortField(\"id\", SortField.INT));\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","sourceOld":"  private Sort getRandomSort() {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random.nextBoolean()) {\n      if (random.nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n      } else {\n        sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n      }\n    } else if (random.nextBoolean()) {\n      sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n      sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n    }\n    sortFields.add(new SortField(\"id\", SortField.INT));\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"090a0320e4de4a3674376aef96b9701f47564f86","date":1308707325,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#getRandomSort().mjava","pathOld":"modules/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#getRandomSort().mjava","sourceNew":"  private Sort getRandomSort() {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random.nextInt(7) == 2) {\n      sortFields.add(SortField.FIELD_SCORE);\n    } else {\n      if (random.nextBoolean()) {\n        if (random.nextBoolean()) {\n          sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random.nextBoolean()));\n        } else {\n          sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random.nextBoolean()));\n        }\n      } else if (random.nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random.nextBoolean()));\n        sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random.nextBoolean()));\n      }\n    }\n    // Break ties:\n    sortFields.add(new SortField(\"id\", SortField.Type.INT));\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","sourceOld":"  private Sort getRandomSort() {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random.nextInt(7) == 2) {\n      sortFields.add(SortField.FIELD_SCORE);\n    } else {\n      if (random.nextBoolean()) {\n        if (random.nextBoolean()) {\n          sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n        } else {\n          sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n        }\n      } else if (random.nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n        sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n      }\n    }\n    // Break ties:\n    sortFields.add(new SortField(\"id\", SortField.INT));\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#getRandomSort().mjava","pathOld":"modules/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#getRandomSort().mjava","sourceNew":"  private Sort getRandomSort() {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random.nextInt(7) == 2) {\n      sortFields.add(SortField.FIELD_SCORE);\n    } else {\n      if (random.nextBoolean()) {\n        if (random.nextBoolean()) {\n          sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random.nextBoolean()));\n        } else {\n          sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random.nextBoolean()));\n        }\n      } else if (random.nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random.nextBoolean()));\n        sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random.nextBoolean()));\n      }\n    }\n    // Break ties:\n    sortFields.add(new SortField(\"id\", SortField.Type.INT));\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","sourceOld":"  private Sort getRandomSort() {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random.nextInt(7) == 2) {\n      sortFields.add(SortField.FIELD_SCORE);\n    } else {\n      if (random.nextBoolean()) {\n        if (random.nextBoolean()) {\n          sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n        } else {\n          sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n        }\n      } else if (random.nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n        sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n      }\n    }\n    // Break ties:\n    sortFields.add(new SortField(\"id\", SortField.INT));\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#getRandomSort().mjava","pathOld":"modules/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#getRandomSort().mjava","sourceNew":"  private Sort getRandomSort() {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random.nextInt(7) == 2) {\n      sortFields.add(SortField.FIELD_SCORE);\n    } else {\n      if (random.nextBoolean()) {\n        if (random.nextBoolean()) {\n          sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random.nextBoolean()));\n        } else {\n          sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random.nextBoolean()));\n        }\n      } else if (random.nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random.nextBoolean()));\n        sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random.nextBoolean()));\n      }\n    }\n    // Break ties:\n    sortFields.add(new SortField(\"id\", SortField.Type.INT));\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","sourceOld":"  private Sort getRandomSort() {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random.nextInt(7) == 2) {\n      sortFields.add(SortField.FIELD_SCORE);\n    } else {\n      if (random.nextBoolean()) {\n        if (random.nextBoolean()) {\n          sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n        } else {\n          sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n        }\n      } else if (random.nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.STRING, random.nextBoolean()));\n        sortFields.add(new SortField(\"sort2\", SortField.STRING, random.nextBoolean()));\n      }\n    }\n    // Break ties:\n    sortFields.add(new SortField(\"id\", SortField.INT));\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#getRandomSort().mjava","pathOld":"modules/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#getRandomSort().mjava","sourceNew":"  private Sort getRandomSort() {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random().nextInt(7) == 2) {\n      sortFields.add(SortField.FIELD_SCORE);\n    } else {\n      if (random().nextBoolean()) {\n        if (random().nextBoolean()) {\n          sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random().nextBoolean()));\n        } else {\n          sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random().nextBoolean()));\n        }\n      } else if (random().nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random().nextBoolean()));\n        sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random().nextBoolean()));\n      }\n    }\n    // Break ties:\n    sortFields.add(new SortField(\"id\", SortField.Type.INT));\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","sourceOld":"  private Sort getRandomSort() {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random.nextInt(7) == 2) {\n      sortFields.add(SortField.FIELD_SCORE);\n    } else {\n      if (random.nextBoolean()) {\n        if (random.nextBoolean()) {\n          sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random.nextBoolean()));\n        } else {\n          sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random.nextBoolean()));\n        }\n      } else if (random.nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random.nextBoolean()));\n        sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random.nextBoolean()));\n      }\n    }\n    // Break ties:\n    sortFields.add(new SortField(\"id\", SortField.Type.INT));\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#getRandomSort().mjava","pathOld":"modules/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#getRandomSort().mjava","sourceNew":"  private Sort getRandomSort() {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random().nextInt(7) == 2) {\n      sortFields.add(SortField.FIELD_SCORE);\n    } else {\n      if (random().nextBoolean()) {\n        if (random().nextBoolean()) {\n          sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random().nextBoolean()));\n        } else {\n          sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random().nextBoolean()));\n        }\n      } else if (random().nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random().nextBoolean()));\n        sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random().nextBoolean()));\n      }\n    }\n    // Break ties:\n    sortFields.add(new SortField(\"id\", SortField.Type.INT));\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","sourceOld":"  private Sort getRandomSort() {\n    final List<SortField> sortFields = new ArrayList<SortField>();\n    if (random().nextInt(7) == 2) {\n      sortFields.add(SortField.FIELD_SCORE);\n    } else {\n      if (random().nextBoolean()) {\n        if (random().nextBoolean()) {\n          sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random().nextBoolean()));\n        } else {\n          sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random().nextBoolean()));\n        }\n      } else if (random().nextBoolean()) {\n        sortFields.add(new SortField(\"sort1\", SortField.Type.STRING, random().nextBoolean()));\n        sortFields.add(new SortField(\"sort2\", SortField.Type.STRING, random().nextBoolean()));\n      }\n    }\n    // Break ties:\n    sortFields.add(new SortField(\"id\", SortField.Type.INT));\n    return new Sort(sortFields.toArray(new SortField[sortFields.size()]));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6b861c0fdfa4d005c70848c9121655e9dc704f96":["307cff5af2b00f126fdf9d3435b75d5ed4d0f402"],"2553b00f699380c64959ccb27991289aae87be2e":["1e7c99bd45fa88a3d93a03fdd773053bef72268e","090a0320e4de4a3674376aef96b9701f47564f86"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["6b861c0fdfa4d005c70848c9121655e9dc704f96","090a0320e4de4a3674376aef96b9701f47564f86"],"090a0320e4de4a3674376aef96b9701f47564f86":["6b861c0fdfa4d005c70848c9121655e9dc704f96"],"1e7c99bd45fa88a3d93a03fdd773053bef72268e":["a3776dccca01c11e7046323cfad46a3b4a471233","6b861c0fdfa4d005c70848c9121655e9dc704f96"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","307cff5af2b00f126fdf9d3435b75d5ed4d0f402"],"307cff5af2b00f126fdf9d3435b75d5ed4d0f402":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","307cff5af2b00f126fdf9d3435b75d5ed4d0f402"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["090a0320e4de4a3674376aef96b9701f47564f86"],"c03daa6ddcb4768a702115ec63799cab5fff3d92":["c3a8a449466c1ff7ce2274fe73dab487256964b4","6b861c0fdfa4d005c70848c9121655e9dc704f96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"6b861c0fdfa4d005c70848c9121655e9dc704f96":["d083e83f225b11e5fdd900e83d26ddb385b6955c","090a0320e4de4a3674376aef96b9701f47564f86","1e7c99bd45fa88a3d93a03fdd773053bef72268e","c03daa6ddcb4768a702115ec63799cab5fff3d92"],"2553b00f699380c64959ccb27991289aae87be2e":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"1e7c99bd45fa88a3d93a03fdd773053bef72268e":["2553b00f699380c64959ccb27991289aae87be2e"],"090a0320e4de4a3674376aef96b9701f47564f86":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["c03daa6ddcb4768a702115ec63799cab5fff3d92"],"307cff5af2b00f126fdf9d3435b75d5ed4d0f402":["6b861c0fdfa4d005c70848c9121655e9dc704f96","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233"],"a3776dccca01c11e7046323cfad46a3b4a471233":["1e7c99bd45fa88a3d93a03fdd773053bef72268e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c3a8a449466c1ff7ce2274fe73dab487256964b4","307cff5af2b00f126fdf9d3435b75d5ed4d0f402","a3776dccca01c11e7046323cfad46a3b4a471233"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"c03daa6ddcb4768a702115ec63799cab5fff3d92":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","c03daa6ddcb4768a702115ec63799cab5fff3d92","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}