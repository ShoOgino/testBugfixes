{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestScandinavianNormalizationFilter#testEmptyTerm().mjava","commits":[{"id":"16a6fd993c77d4a3657683248844517a731fcd7d","date":1372862346,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestScandinavianNormalizationFilter#testEmptyTerm().mjava","pathOld":"/dev/null","sourceNew":"  /** check that the empty string doesn't cause issues */\n  public void testEmptyTerm() throws Exception {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new KeywordTokenizer(reader);\n        return new TokenStreamComponents(tokenizer, new ScandinavianNormalizationFilter(tokenizer));\n      } \n    };\n    checkOneTerm(a, \"\", \"\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestScandinavianNormalizationFilter#testEmptyTerm().mjava","pathOld":"/dev/null","sourceNew":"  /** check that the empty string doesn't cause issues */\n  public void testEmptyTerm() throws Exception {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new KeywordTokenizer(reader);\n        return new TokenStreamComponents(tokenizer, new ScandinavianNormalizationFilter(tokenizer));\n      } \n    };\n    checkOneTerm(a, \"\", \"\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestScandinavianNormalizationFilter#testEmptyTerm().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestScandinavianNormalizationFilter#testEmptyTerm().mjava","sourceNew":"  /** check that the empty string doesn't cause issues */\n  public void testEmptyTerm() throws Exception {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new KeywordTokenizer();\n        return new TokenStreamComponents(tokenizer, new ScandinavianNormalizationFilter(tokenizer));\n      } \n    };\n    checkOneTerm(a, \"\", \"\");\n  }\n\n","sourceOld":"  /** check that the empty string doesn't cause issues */\n  public void testEmptyTerm() throws Exception {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new KeywordTokenizer(reader);\n        return new TokenStreamComponents(tokenizer, new ScandinavianNormalizationFilter(tokenizer));\n      } \n    };\n    checkOneTerm(a, \"\", \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestScandinavianNormalizationFilter#testEmptyTerm().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestScandinavianNormalizationFilter#testEmptyTerm().mjava","sourceNew":"  /** check that the empty string doesn't cause issues */\n  public void testEmptyTerm() throws Exception {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new KeywordTokenizer();\n        return new TokenStreamComponents(tokenizer, new ScandinavianNormalizationFilter(tokenizer));\n      } \n    };\n    checkOneTerm(a, \"\", \"\");\n    a.close();\n  }\n\n","sourceOld":"  /** check that the empty string doesn't cause issues */\n  public void testEmptyTerm() throws Exception {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new KeywordTokenizer();\n        return new TokenStreamComponents(tokenizer, new ScandinavianNormalizationFilter(tokenizer));\n      } \n    };\n    checkOneTerm(a, \"\", \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestScandinavianNormalizationFilter#testEmptyTerm().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestScandinavianNormalizationFilter#testEmptyTerm().mjava","sourceNew":"  /** check that the empty string doesn't cause issues */\n  public void testEmptyTerm() throws Exception {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new KeywordTokenizer();\n        return new TokenStreamComponents(tokenizer, new ScandinavianNormalizationFilter(tokenizer));\n      } \n    };\n    checkOneTerm(a, \"\", \"\");\n    a.close();\n  }\n\n","sourceOld":"  /** check that the empty string doesn't cause issues */\n  public void testEmptyTerm() throws Exception {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new KeywordTokenizer();\n        return new TokenStreamComponents(tokenizer, new ScandinavianNormalizationFilter(tokenizer));\n      } \n    };\n    checkOneTerm(a, \"\", \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","a56958d7f71a28824f20031ffbb2e13502a0274e"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","16a6fd993c77d4a3657683248844517a731fcd7d"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["16a6fd993c77d4a3657683248844517a731fcd7d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"16a6fd993c77d4a3657683248844517a731fcd7d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56958d7f71a28824f20031ffbb2e13502a0274e"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","16a6fd993c77d4a3657683248844517a731fcd7d"],"16a6fd993c77d4a3657683248844517a731fcd7d":["37a0f60745e53927c4c876cfe5b5a58170f0646c","ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}