{"path":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/FieldHighlighter#highlightFieldForDoc(LeafReader,int,String).mjava","commits":[{"id":"795822cce6616d4035b5a4bdbb6c113ea2f715ba","date":1535599765,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/FieldHighlighter#highlightFieldForDoc(LeafReader,int,String).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/FieldHighlighter#highlightFieldForDoc(IndexReader,int,String).mjava","sourceNew":"  /**\n   * The primary method -- highlight this doc, assuming a specific field and given this content.\n   */\n  public Object highlightFieldForDoc(LeafReader reader, int docId, String content) throws IOException {\n    // note: it'd be nice to accept a CharSequence for content, but we need a CharacterIterator impl for it.\n    if (content.length() == 0) {\n      return null; // nothing to do\n    }\n\n    breakIterator.setText(content);\n\n    try (OffsetsEnum offsetsEnums = fieldOffsetStrategy.getOffsetsEnum(reader, docId, content)) {\n\n      // Highlight the offsetsEnum list against the content to produce Passages.\n      Passage[] passages = highlightOffsetsEnums(offsetsEnums);// and breakIterator & scorer\n\n      // Format the resulting Passages.\n      if (passages.length == 0) {\n        // no passages were returned, so ask for a default summary\n        passages = getSummaryPassagesNoHighlight(maxNoHighlightPassages == -1 ? maxPassages : maxNoHighlightPassages);\n      }\n\n      if (passages.length > 0) {\n        return passageFormatter.format(passages, content);\n      } else {\n        return null;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * The primary method -- highlight this doc, assuming a specific field and given this content.\n   */\n  public Object highlightFieldForDoc(IndexReader reader, int docId, String content) throws IOException {\n    // TODO accept LeafReader instead?\n    // note: it'd be nice to accept a CharSequence for content, but we need a CharacterIterator impl for it.\n    if (content.length() == 0) {\n      return null; // nothing to do\n    }\n\n    breakIterator.setText(content);\n\n    try (OffsetsEnum offsetsEnums = fieldOffsetStrategy.getOffsetsEnum(reader, docId, content)) {\n\n      // Highlight the offsetsEnum list against the content to produce Passages.\n      Passage[] passages = highlightOffsetsEnums(offsetsEnums);// and breakIterator & scorer\n\n      // Format the resulting Passages.\n      if (passages.length == 0) {\n        // no passages were returned, so ask for a default summary\n        passages = getSummaryPassagesNoHighlight(maxNoHighlightPassages == -1 ? maxPassages : maxNoHighlightPassages);\n      }\n\n      if (passages.length > 0) {\n        return passageFormatter.format(passages, content);\n      } else {\n        return null;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"795822cce6616d4035b5a4bdbb6c113ea2f715ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["795822cce6616d4035b5a4bdbb6c113ea2f715ba"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["795822cce6616d4035b5a4bdbb6c113ea2f715ba"],"795822cce6616d4035b5a4bdbb6c113ea2f715ba":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}