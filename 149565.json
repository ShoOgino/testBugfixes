{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest#testTwoTrailingHolesTriShingleWithTokenFiller().mjava","commits":[{"id":"6237bacfd44ad16661121d7d8a604a57f78978e9","date":1391038488,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest#testTwoTrailingHolesTriShingleWithTokenFiller().mjava","pathOld":"/dev/null","sourceNew":"  public void testTwoTrailingHolesTriShingleWithTokenFiller() throws IOException {\n    // Analyzing \"purple wizard of the\", where of and the are removed as a\n    // stopwords, leaving two trailing holes:\n    Token[] inputTokens = new Token[] {createToken(\"purple\", 0, 6), createToken(\"wizard\", 7, 13)};\n    ShingleFilter filter = new ShingleFilter(new CannedTokenStream(2, 20, inputTokens), 2, 3);\n    filter.setFillerToken(\"--\");\n\n    assertTokenStreamContents(filter,\n        new String[]{\"purple\", \"purple wizard\", \"purple wizard --\", \"wizard\", \"wizard --\", \"wizard -- --\"},\n        new int[]{0, 0, 0, 7, 7, 7},\n        new int[]{6, 13, 20, 13, 20, 20},\n        new int[]{1, 0, 0, 1, 0, 0},\n        20);\n\n     filter = new ShingleFilter(new CannedTokenStream(2, 20, inputTokens), 2, 3);\n    filter.setFillerToken(\"\");\n\n    assertTokenStreamContents(filter,\n        new String[]{\"purple\", \"purple wizard\", \"purple wizard \", \"wizard\", \"wizard \", \"wizard  \"},\n        new int[]{0, 0, 0, 7, 7, 7},\n        new int[]{6, 13, 20, 13, 20, 20},\n        new int[]{1, 0, 0, 1, 0, 0},\n        20);\n\n\n    filter = new ShingleFilter(new CannedTokenStream(2, 20, inputTokens), 2, 3);\n    filter.setFillerToken(null);\n\n    assertTokenStreamContents(filter,\n        new String[] {\"purple\", \"purple wizard\", \"purple wizard \", \"wizard\", \"wizard \", \"wizard  \"},\n        new int[] {0, 0, 0, 7, 7, 7},\n        new int[] {6, 13, 20, 13, 20, 20},\n        new int[] {1, 0, 0, 1, 0, 0},\n        20);\n\n\n    filter = new ShingleFilter(new CannedTokenStream(2, 20, inputTokens), 2, 3);\n    filter.setFillerToken(null);\n    filter.setTokenSeparator(null);\n\n    assertTokenStreamContents(filter,\n        new String[] {\"purple\", \"purplewizard\", \"purplewizard\", \"wizard\", \"wizard\", \"wizard\"},\n        new int[] {0, 0, 0, 7, 7, 7},\n        new int[] {6, 13, 20, 13, 20, 20},\n        new int[] {1, 0, 0, 1, 0, 0},\n        20);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bce5c9637fdd284e5990e2e810bc9faafa336bc5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bce5c9637fdd284e5990e2e810bc9faafa336bc5","date":1487975857,"type":3,"author":"Jim Ferenczi","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest#testTwoTrailingHolesTriShingleWithTokenFiller().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/shingle/ShingleFilterTest#testTwoTrailingHolesTriShingleWithTokenFiller().mjava","sourceNew":"  public void testTwoTrailingHolesTriShingleWithTokenFiller() throws IOException {\n    // Analyzing \"purple wizard of the\", where of and the are removed as a\n    // stopwords, leaving two trailing holes:\n    Token[] inputTokens = new Token[] {createToken(\"purple\", 0, 6), createToken(\"wizard\", 7, 13)};\n    ShingleFilter filter = new ShingleFilter(new CannedTokenStream(2, 20, inputTokens), 2, 3);\n    filter.setFillerToken(\"--\");\n\n    assertTokenStreamContents(filter,\n        new String[]{\"purple\", \"purple wizard\", \"purple wizard --\", \"wizard\", \"wizard --\", \"wizard -- --\"},\n        new int[]{0, 0, 0, 7, 7, 7},\n        new int[]{6, 13, 20, 13, 20, 20},\n        new int[]{1, 0, 0, 1, 0, 0},\n        20);\n\n     filter = new ShingleFilter(new CannedTokenStream(2, 20, inputTokens), 2, 3);\n    filter.setFillerToken(\"\");\n\n    assertTokenStreamContents(filter,\n        new String[]{\"purple\", \"purple wizard\", \"purple wizard \", \"wizard\", \"wizard \", \"wizard  \"},\n        new int[]{0, 0, 0, 7, 7, 7},\n        new int[]{6, 13, 20, 13, 20, 20},\n        new int[]{1, 0, 0, 1, 0, 0},\n        20);\n\n\n    filter = new ShingleFilter(new CannedTokenStream(2, 20, inputTokens), 2, 3);\n    filter.setFillerToken(null);\n\n    assertTokenStreamContents(filter,\n        new String[] {\"purple\", \"purple wizard\", \"purple wizard \", \"wizard\", \"wizard \", \"wizard  \"},\n        new int[] {0, 0, 0, 7, 7, 7},\n        new int[] {6, 13, 20, 13, 20, 20},\n        new int[] {1, 0, 0, 1, 0, 0},\n        20);\n\n\n    filter = new ShingleFilter(new CannedTokenStream(2, 20, inputTokens), 2, 3);\n    filter.setFillerToken(null);\n    filter.setTokenSeparator(null);\n    assertTokenStreamContents(filter,\n        new String[] {\"purple\", \"purplewizard\", \"purplewizard\", \"wizard\", \"wizard\", \"wizard\"},\n        new int[] {0, 0, 0, 7, 7, 7},\n        new int[] {6, 13, 20, 13, 20, 20},\n        new int[] {1, 0, 0, 1, 0, 0},\n        20);\n  }\n\n","sourceOld":"  public void testTwoTrailingHolesTriShingleWithTokenFiller() throws IOException {\n    // Analyzing \"purple wizard of the\", where of and the are removed as a\n    // stopwords, leaving two trailing holes:\n    Token[] inputTokens = new Token[] {createToken(\"purple\", 0, 6), createToken(\"wizard\", 7, 13)};\n    ShingleFilter filter = new ShingleFilter(new CannedTokenStream(2, 20, inputTokens), 2, 3);\n    filter.setFillerToken(\"--\");\n\n    assertTokenStreamContents(filter,\n        new String[]{\"purple\", \"purple wizard\", \"purple wizard --\", \"wizard\", \"wizard --\", \"wizard -- --\"},\n        new int[]{0, 0, 0, 7, 7, 7},\n        new int[]{6, 13, 20, 13, 20, 20},\n        new int[]{1, 0, 0, 1, 0, 0},\n        20);\n\n     filter = new ShingleFilter(new CannedTokenStream(2, 20, inputTokens), 2, 3);\n    filter.setFillerToken(\"\");\n\n    assertTokenStreamContents(filter,\n        new String[]{\"purple\", \"purple wizard\", \"purple wizard \", \"wizard\", \"wizard \", \"wizard  \"},\n        new int[]{0, 0, 0, 7, 7, 7},\n        new int[]{6, 13, 20, 13, 20, 20},\n        new int[]{1, 0, 0, 1, 0, 0},\n        20);\n\n\n    filter = new ShingleFilter(new CannedTokenStream(2, 20, inputTokens), 2, 3);\n    filter.setFillerToken(null);\n\n    assertTokenStreamContents(filter,\n        new String[] {\"purple\", \"purple wizard\", \"purple wizard \", \"wizard\", \"wizard \", \"wizard  \"},\n        new int[] {0, 0, 0, 7, 7, 7},\n        new int[] {6, 13, 20, 13, 20, 20},\n        new int[] {1, 0, 0, 1, 0, 0},\n        20);\n\n\n    filter = new ShingleFilter(new CannedTokenStream(2, 20, inputTokens), 2, 3);\n    filter.setFillerToken(null);\n    filter.setTokenSeparator(null);\n\n    assertTokenStreamContents(filter,\n        new String[] {\"purple\", \"purplewizard\", \"purplewizard\", \"wizard\", \"wizard\", \"wizard\"},\n        new int[] {0, 0, 0, 7, 7, 7},\n        new int[] {6, 13, 20, 13, 20, 20},\n        new int[] {1, 0, 0, 1, 0, 0},\n        20);\n  }\n\n","bugFix":["6237bacfd44ad16661121d7d8a604a57f78978e9"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bce5c9637fdd284e5990e2e810bc9faafa336bc5":["6237bacfd44ad16661121d7d8a604a57f78978e9"],"6237bacfd44ad16661121d7d8a604a57f78978e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bce5c9637fdd284e5990e2e810bc9faafa336bc5"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6237bacfd44ad16661121d7d8a604a57f78978e9"],"bce5c9637fdd284e5990e2e810bc9faafa336bc5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6237bacfd44ad16661121d7d8a604a57f78978e9":["bce5c9637fdd284e5990e2e810bc9faafa336bc5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}