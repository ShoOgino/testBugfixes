{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.SetShardMetrics#execute(SimScenario).mjava","commits":[{"id":"a7aeb53916301ea6a5fedff4fdc9617b257cbc7d","date":1571856490,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.SetShardMetrics#execute(SimScenario).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      String collection = params.required().get(\"collection\");\n      String shard = params.get(\"shard\");\n      boolean delta = params.getBool(\"delta\", false);\n      boolean divide = params.getBool(\"divide\", false);\n      params.remove(\"collection\");\n      params.remove(\"shard\");\n      params.remove(\"delta\");\n      params.remove(\"divide\");\n      Map<String, Object> values = new HashMap<>();\n      for (String key : params.getParameterNames()) {\n        // try guessing if it's a number\n        try {\n          Double d = Double.valueOf(params.get(key));\n          values.put(key, d);\n        } catch (NumberFormatException nfe) {\n          // not a number\n          values.put(key, params.get(key));\n        }\n      }\n      values.forEach((k, v) -> {\n        try {\n          scenario.cluster.getSimClusterStateProvider().simSetShardValue(collection, shard, k, v, delta, divide);\n        } catch (Exception e) {\n          throw new RuntimeException(\"Error setting shard value\", e);\n        }\n      });\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["8f79e6c597ec19b2f9669589153faac2f803462a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8f79e6c597ec19b2f9669589153faac2f803462a","date":1575984097,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.SetShardMetrics#execute(SimScenario).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.SetShardMetrics#execute(SimScenario).mjava","sourceNew":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      String collection = params.required().get(\"collection\");\n      String shard = params.get(\"shard\");\n      boolean delta = params.getBool(\"delta\", false);\n      boolean divide = params.getBool(\"divide\", false);\n      params.remove(\"collection\");\n      params.remove(\"shard\");\n      params.remove(\"delta\");\n      params.remove(\"divide\");\n      Map<String, Object> values = new HashMap<>();\n      for (String key : params.getParameterNames()) {\n        // try guessing if it's a number\n        try {\n          Integer i = Integer.valueOf(params.get(key));\n          values.put(key, i);\n        } catch (NumberFormatException nfe) {\n          try {\n            Double d = Double.valueOf(params.get(key));\n            values.put(key, d);\n          } catch (NumberFormatException nfe1) {\n            // not a number\n            values.put(key, params.get(key));\n          }\n        }\n      }\n      values.forEach((k, v) -> {\n        try {\n          scenario.cluster.getSimClusterStateProvider().simSetShardValue(collection, shard, k, v, delta, divide);\n        } catch (Exception e) {\n          throw new RuntimeException(\"Error setting shard value\", e);\n        }\n      });\n    }\n\n","sourceOld":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      String collection = params.required().get(\"collection\");\n      String shard = params.get(\"shard\");\n      boolean delta = params.getBool(\"delta\", false);\n      boolean divide = params.getBool(\"divide\", false);\n      params.remove(\"collection\");\n      params.remove(\"shard\");\n      params.remove(\"delta\");\n      params.remove(\"divide\");\n      Map<String, Object> values = new HashMap<>();\n      for (String key : params.getParameterNames()) {\n        // try guessing if it's a number\n        try {\n          Double d = Double.valueOf(params.get(key));\n          values.put(key, d);\n        } catch (NumberFormatException nfe) {\n          // not a number\n          values.put(key, params.get(key));\n        }\n      }\n      values.forEach((k, v) -> {\n        try {\n          scenario.cluster.getSimClusterStateProvider().simSetShardValue(collection, shard, k, v, delta, divide);\n        } catch (Exception e) {\n          throw new RuntimeException(\"Error setting shard value\", e);\n        }\n      });\n    }\n\n","bugFix":["a7aeb53916301ea6a5fedff4fdc9617b257cbc7d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"993b0c7dda6341b437fe5685d35c6cc35eaac420","date":1575985950,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.SetShardMetrics#execute(SimScenario).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.SetShardMetrics#execute(SimScenario).mjava","sourceNew":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      String collection = params.required().get(\"collection\");\n      String shard = params.get(\"shard\");\n      boolean delta = params.getBool(\"delta\", false);\n      boolean divide = params.getBool(\"divide\", false);\n      params.remove(\"collection\");\n      params.remove(\"shard\");\n      params.remove(\"delta\");\n      params.remove(\"divide\");\n      Map<String, Object> values = new HashMap<>();\n      for (String key : params.getParameterNames()) {\n        // try guessing if it's a number\n        try {\n          Integer i = Integer.valueOf(params.get(key));\n          values.put(key, i);\n        } catch (NumberFormatException nfe) {\n          try {\n            Double d = Double.valueOf(params.get(key));\n            values.put(key, d);\n          } catch (NumberFormatException nfe1) {\n            // not a number\n            values.put(key, params.get(key));\n          }\n        }\n      }\n      values.forEach((k, v) -> {\n        try {\n          scenario.cluster.getSimClusterStateProvider().simSetShardValue(collection, shard, k, v, delta, divide);\n        } catch (Exception e) {\n          throw new RuntimeException(\"Error setting shard value\", e);\n        }\n      });\n    }\n\n","sourceOld":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      String collection = params.required().get(\"collection\");\n      String shard = params.get(\"shard\");\n      boolean delta = params.getBool(\"delta\", false);\n      boolean divide = params.getBool(\"divide\", false);\n      params.remove(\"collection\");\n      params.remove(\"shard\");\n      params.remove(\"delta\");\n      params.remove(\"divide\");\n      Map<String, Object> values = new HashMap<>();\n      for (String key : params.getParameterNames()) {\n        // try guessing if it's a number\n        try {\n          Double d = Double.valueOf(params.get(key));\n          values.put(key, d);\n        } catch (NumberFormatException nfe) {\n          // not a number\n          values.put(key, params.get(key));\n        }\n      }\n      values.forEach((k, v) -> {\n        try {\n          scenario.cluster.getSimClusterStateProvider().simSetShardValue(collection, shard, k, v, delta, divide);\n        } catch (Exception e) {\n          throw new RuntimeException(\"Error setting shard value\", e);\n        }\n      });\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.SetShardMetrics#execute(SimScenario).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      String collection = params.required().get(\"collection\");\n      String shard = params.get(\"shard\");\n      boolean delta = params.getBool(\"delta\", false);\n      boolean divide = params.getBool(\"divide\", false);\n      params.remove(\"collection\");\n      params.remove(\"shard\");\n      params.remove(\"delta\");\n      params.remove(\"divide\");\n      Map<String, Object> values = new HashMap<>();\n      for (String key : params.getParameterNames()) {\n        // try guessing if it's a number\n        try {\n          Integer i = Integer.valueOf(params.get(key));\n          values.put(key, i);\n        } catch (NumberFormatException nfe) {\n          try {\n            Double d = Double.valueOf(params.get(key));\n            values.put(key, d);\n          } catch (NumberFormatException nfe1) {\n            // not a number\n            values.put(key, params.get(key));\n          }\n        }\n      }\n      values.forEach((k, v) -> {\n        try {\n          scenario.cluster.getSimClusterStateProvider().simSetShardValue(collection, shard, k, v, delta, divide);\n        } catch (Exception e) {\n          throw new RuntimeException(\"Error setting shard value\", e);\n        }\n      });\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"993b0c7dda6341b437fe5685d35c6cc35eaac420":["a7aeb53916301ea6a5fedff4fdc9617b257cbc7d","8f79e6c597ec19b2f9669589153faac2f803462a"],"3f504512a03d978990cbff30db0522b354e846db":["8f79e6c597ec19b2f9669589153faac2f803462a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8f79e6c597ec19b2f9669589153faac2f803462a":["a7aeb53916301ea6a5fedff4fdc9617b257cbc7d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"],"a7aeb53916301ea6a5fedff4fdc9617b257cbc7d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"993b0c7dda6341b437fe5685d35c6cc35eaac420":[],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a7aeb53916301ea6a5fedff4fdc9617b257cbc7d"],"8f79e6c597ec19b2f9669589153faac2f803462a":["993b0c7dda6341b437fe5685d35c6cc35eaac420","3f504512a03d978990cbff30db0522b354e846db"],"a7aeb53916301ea6a5fedff4fdc9617b257cbc7d":["993b0c7dda6341b437fe5685d35c6cc35eaac420","8f79e6c597ec19b2f9669589153faac2f803462a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["993b0c7dda6341b437fe5685d35c6cc35eaac420","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}