{"path":"lucene/codecs/src/test/org/apache/lucene/codecs/uniformsplit/sharedterms/STBlockReaderTest#generateBlockLines(Iterable[BlockLineDefinition]).mjava","commits":[{"id":"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89","date":1567784912,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/codecs/src/test/org/apache/lucene/codecs/uniformsplit/sharedterms/STBlockReaderTest#generateBlockLines(Iterable[BlockLineDefinition]).mjava","pathOld":"/dev/null","sourceNew":"  private static List<MockSTBlockLine> generateBlockLines(Iterable<BlockLineDefinition> blockLineDefinitions) {\n    List<MockSTBlockLine> lines = new ArrayList<>();\n    for (BlockLineDefinition blockLineDefinition : blockLineDefinitions) {\n      lines.add(new MockSTBlockLine(blockLineDefinition.termBytes, blockLineDefinition.fields));\n    }\n    return lines;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bf19e0585c61e03c645ac979e97c192529637d6","date":1591892388,"type":5,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/codecs/src/test/org/apache/lucene/codecs/uniformsplit/sharedterms/TestSTBlockReader#generateBlockLines(Iterable[BlockLineDefinition]).mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/uniformsplit/sharedterms/STBlockReaderTest#generateBlockLines(Iterable[BlockLineDefinition]).mjava","sourceNew":"  private static List<MockSTBlockLine> generateBlockLines(Iterable<BlockLineDefinition> blockLineDefinitions) {\n    List<MockSTBlockLine> lines = new ArrayList<>();\n    for (BlockLineDefinition blockLineDefinition : blockLineDefinitions) {\n      lines.add(new MockSTBlockLine(blockLineDefinition.termBytes, blockLineDefinition.fields));\n    }\n    return lines;\n  }\n\n","sourceOld":"  private static List<MockSTBlockLine> generateBlockLines(Iterable<BlockLineDefinition> blockLineDefinitions) {\n    List<MockSTBlockLine> lines = new ArrayList<>();\n    for (BlockLineDefinition blockLineDefinition : blockLineDefinitions) {\n      lines.add(new MockSTBlockLine(blockLineDefinition.termBytes, blockLineDefinition.fields));\n    }\n    return lines;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5bf19e0585c61e03c645ac979e97c192529637d6":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5bf19e0585c61e03c645ac979e97c192529637d6"]},"commit2Childs":{"5bf19e0585c61e03c645ac979e97c192529637d6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["5bf19e0585c61e03c645ac979e97c192529637d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}