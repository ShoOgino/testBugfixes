{"path":"solr/core/src/java/org/apache/solr/filestore/PackageStoreAPI.FSRead#writeRawFile(SolrQueryRequest,SolrQueryResponse,String).mjava","commits":[{"id":"8476949555f799dff381770c01cfad051a264487","date":1570505073,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/filestore/PackageStoreAPI.FSRead#writeRawFile(SolrQueryRequest,SolrQueryResponse,String).mjava","pathOld":"/dev/null","sourceNew":"    private void writeRawFile(SolrQueryRequest req, SolrQueryResponse rsp, String path) {\n      ModifiableSolrParams solrParams = new ModifiableSolrParams();\n      solrParams.add(CommonParams.WT, FILE_STREAM);\n      req.setParams(SolrParams.wrapDefaults(solrParams, req.getParams()));\n      rsp.add(FILE_STREAM, (SolrCore.RawWriter) os -> {\n        packageStore.get(path, (it) -> {\n          try {\n            org.apache.commons.io.IOUtils.copy(it.getInputStream(), os);\n          } catch (IOException e) {\n            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error reading file\" + path);\n          }\n        });\n\n      });\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"849dbf8570155b8e5fd03d8c2274a0a60491051c","date":1570859954,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/filestore/PackageStoreAPI.FSRead#writeRawFile(SolrQueryRequest,SolrQueryResponse,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/filestore/PackageStoreAPI.FSRead#writeRawFile(SolrQueryRequest,SolrQueryResponse,String).mjava","sourceNew":"    private void writeRawFile(SolrQueryRequest req, SolrQueryResponse rsp, String path) {\n      ModifiableSolrParams solrParams = new ModifiableSolrParams();\n      solrParams.add(CommonParams.WT, FILE_STREAM);\n      req.setParams(SolrParams.wrapDefaults(solrParams, req.getParams()));\n      rsp.add(FILE_STREAM, (SolrCore.RawWriter) os -> {\n        packageStore.get(path, (it) -> {\n          try {\n            org.apache.commons.io.IOUtils.copy(it.getInputStream(), os);\n          } catch (IOException e) {\n            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error reading file\" + path);\n          }\n        }, false);\n\n      });\n    }\n\n","sourceOld":"    private void writeRawFile(SolrQueryRequest req, SolrQueryResponse rsp, String path) {\n      ModifiableSolrParams solrParams = new ModifiableSolrParams();\n      solrParams.add(CommonParams.WT, FILE_STREAM);\n      req.setParams(SolrParams.wrapDefaults(solrParams, req.getParams()));\n      rsp.add(FILE_STREAM, (SolrCore.RawWriter) os -> {\n        packageStore.get(path, (it) -> {\n          try {\n            org.apache.commons.io.IOUtils.copy(it.getInputStream(), os);\n          } catch (IOException e) {\n            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error reading file\" + path);\n          }\n        });\n\n      });\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":0,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/filestore/PackageStoreAPI.FSRead#writeRawFile(SolrQueryRequest,SolrQueryResponse,String).mjava","pathOld":"/dev/null","sourceNew":"    private void writeRawFile(SolrQueryRequest req, SolrQueryResponse rsp, String path) {\n      ModifiableSolrParams solrParams = new ModifiableSolrParams();\n      solrParams.add(CommonParams.WT, FILE_STREAM);\n      req.setParams(SolrParams.wrapDefaults(solrParams, req.getParams()));\n      rsp.add(FILE_STREAM, (SolrCore.RawWriter) os -> {\n        packageStore.get(path, (it) -> {\n          try {\n            org.apache.commons.io.IOUtils.copy(it.getInputStream(), os);\n          } catch (IOException e) {\n            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error reading file\" + path);\n          }\n        }, false);\n\n      });\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8476949555f799dff381770c01cfad051a264487":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"849dbf8570155b8e5fd03d8c2274a0a60491051c":["8476949555f799dff381770c01cfad051a264487"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["849dbf8570155b8e5fd03d8c2274a0a60491051c"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849dbf8570155b8e5fd03d8c2274a0a60491051c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8476949555f799dff381770c01cfad051a264487","b0b597c65628ca9e73913a07e81691f8229bae35"],"8476949555f799dff381770c01cfad051a264487":["849dbf8570155b8e5fd03d8c2274a0a60491051c"],"849dbf8570155b8e5fd03d8c2274a0a60491051c":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}