{"path":"solr/core/src/java/org/apache/solr/core/CoreContainer#getLocalCollections().mjava","commits":[{"id":"20c56b78a24b25c89b1deb0a1331f7ee7af8ac7e","date":1464965423,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getLocalCollections().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @return a Set containing the names of all collections with a core hosted in this container\n   */\n  public Set<String> getLocalCollections() {\n    Set<String> collections = getCoreDescriptors().stream()\n        .filter(cd -> cd.getCollectionName() != null)\n        .map(CoreDescriptor::getCollectionName)\n        .collect(Collectors.toSet());\n    return collections;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"650d17e953fb1d54e644f9928e3202e68b88eeb1","date":1465215234,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getLocalCollections().mjava","sourceNew":null,"sourceOld":"  /**\n   * @return a Set containing the names of all collections with a core hosted in this container\n   */\n  public Set<String> getLocalCollections() {\n    Set<String> collections = getCoreDescriptors().stream()\n        .filter(cd -> cd.getCollectionName() != null)\n        .map(CoreDescriptor::getCollectionName)\n        .collect(Collectors.toSet());\n    return collections;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"191128ac5b85671b1671e2c857437694283b6ebf","date":1465297861,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getLocalCollections().mjava","sourceNew":null,"sourceOld":"  /**\n   * @return a Set containing the names of all collections with a core hosted in this container\n   */\n  public Set<String> getLocalCollections() {\n    Set<String> collections = getCoreDescriptors().stream()\n        .filter(cd -> cd.getCollectionName() != null)\n        .map(CoreDescriptor::getCollectionName)\n        .collect(Collectors.toSet());\n    return collections;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"20c56b78a24b25c89b1deb0a1331f7ee7af8ac7e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"650d17e953fb1d54e644f9928e3202e68b88eeb1":["20c56b78a24b25c89b1deb0a1331f7ee7af8ac7e"],"191128ac5b85671b1671e2c857437694283b6ebf":["20c56b78a24b25c89b1deb0a1331f7ee7af8ac7e","650d17e953fb1d54e644f9928e3202e68b88eeb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["191128ac5b85671b1671e2c857437694283b6ebf"]},"commit2Childs":{"20c56b78a24b25c89b1deb0a1331f7ee7af8ac7e":["650d17e953fb1d54e644f9928e3202e68b88eeb1","191128ac5b85671b1671e2c857437694283b6ebf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["20c56b78a24b25c89b1deb0a1331f7ee7af8ac7e"],"650d17e953fb1d54e644f9928e3202e68b88eeb1":["191128ac5b85671b1671e2c857437694283b6ebf"],"191128ac5b85671b1671e2c857437694283b6ebf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}