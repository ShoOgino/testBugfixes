{"path":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#getInfosToApply(IndexWriter).mjava","commits":[{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#getInfosToApply(IndexWriter).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the {@link SegmentCommitInfo} that this packet is supposed to apply its deletes to, or null\n   *  if the private segment was already merged away. */\n  private List<SegmentCommitInfo> getInfosToApply(IndexWriter writer) {\n    assert Thread.holdsLock(writer);\n    List<SegmentCommitInfo> infos;\n    if (privateSegment != null) {\n      if (writer.segmentInfos.indexOf(privateSegment) == -1) {\n        if (infoStream.isEnabled(\"BD\")) {\n          infoStream.message(\"BD\", \"private segment already gone; skip processing updates\");\n        }\n        return null;\n      } else {\n        infos = Collections.singletonList(privateSegment);\n      }\n    } else {\n      infos = writer.segmentInfos.asList();\n    }\n    return infos;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["631ea3d1607299c59f33edef140ffc19a81f07a0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#getInfosToApply(IndexWriter).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the {@link SegmentCommitInfo} that this packet is supposed to apply its deletes to, or null\n   *  if the private segment was already merged away. */\n  private List<SegmentCommitInfo> getInfosToApply(IndexWriter writer) {\n    assert Thread.holdsLock(writer);\n    List<SegmentCommitInfo> infos;\n    if (privateSegment != null) {\n      if (writer.segmentInfos.indexOf(privateSegment) == -1) {\n        if (infoStream.isEnabled(\"BD\")) {\n          infoStream.message(\"BD\", \"private segment already gone; skip processing updates\");\n        }\n        return null;\n      } else {\n        infos = Collections.singletonList(privateSegment);\n      }\n    } else {\n      infos = writer.segmentInfos.asList();\n    }\n    return infos;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#getInfosToApply(IndexWriter).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the {@link SegmentCommitInfo} that this packet is supposed to apply its deletes to, or null\n   *  if the private segment was already merged away. */\n  private List<SegmentCommitInfo> getInfosToApply(IndexWriter writer) {\n    assert Thread.holdsLock(writer);\n    List<SegmentCommitInfo> infos;\n    if (privateSegment != null) {\n      if (writer.segmentInfos.indexOf(privateSegment) == -1) {\n        if (infoStream.isEnabled(\"BD\")) {\n          infoStream.message(\"BD\", \"private segment already gone; skip processing updates\");\n        }\n        return null;\n      } else {\n        infos = Collections.singletonList(privateSegment);\n      }\n    } else {\n      infos = writer.segmentInfos.asList();\n    }\n    return infos;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"631ea3d1607299c59f33edef140ffc19a81f07a0","date":1532450367,"type":3,"author":"Nhat Nguyen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#getInfosToApply(IndexWriter).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#getInfosToApply(IndexWriter).mjava","sourceNew":"  /** Returns the {@link SegmentCommitInfo} that this packet is supposed to apply its deletes to, or null\n   *  if the private segment was already merged away. */\n  private List<SegmentCommitInfo> getInfosToApply(IndexWriter writer) {\n    assert Thread.holdsLock(writer);\n    final List<SegmentCommitInfo> infos;\n    if (privateSegment != null) {\n      if (writer.segmentCommitInfoExist(privateSegment)) {\n        infos = Collections.singletonList(privateSegment);\n      }else {\n        if (infoStream.isEnabled(\"BD\")) {\n          infoStream.message(\"BD\", \"private segment already gone; skip processing updates\");\n        }\n        infos = null;\n      }\n    } else {\n      infos = writer.listOfSegmentCommitInfos();\n    }\n    return infos;\n  }\n\n","sourceOld":"  /** Returns the {@link SegmentCommitInfo} that this packet is supposed to apply its deletes to, or null\n   *  if the private segment was already merged away. */\n  private List<SegmentCommitInfo> getInfosToApply(IndexWriter writer) {\n    assert Thread.holdsLock(writer);\n    List<SegmentCommitInfo> infos;\n    if (privateSegment != null) {\n      if (writer.segmentInfos.indexOf(privateSegment) == -1) {\n        if (infoStream.isEnabled(\"BD\")) {\n          infoStream.message(\"BD\", \"private segment already gone; skip processing updates\");\n        }\n        return null;\n      } else {\n        infos = Collections.singletonList(privateSegment);\n      }\n    } else {\n      infos = writer.segmentInfos.asList();\n    }\n    return infos;\n  }\n\n","bugFix":["f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f21f1920c232db2352489eed260fe5c1f39e5a0","date":1587748041,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getInfosToApply(FrozenBufferedUpdates).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#getInfosToApply(IndexWriter).mjava","sourceNew":"  /** Returns the {@link SegmentCommitInfo} that this packet is supposed to apply its deletes to, or null\n   *  if the private segment was already merged away. */\n  private synchronized List<SegmentCommitInfo> getInfosToApply(FrozenBufferedUpdates updates) {\n    final List<SegmentCommitInfo> infos;\n    if (updates.privateSegment != null) {\n      if (segmentInfos.contains(updates.privateSegment)) {\n        infos = Collections.singletonList(updates.privateSegment);\n      }else {\n        if (infoStream.isEnabled(\"BD\")) {\n          infoStream.message(\"BD\", \"private segment already gone; skip processing updates\");\n        }\n        infos = null;\n      }\n    } else {\n      infos = listOfSegmentCommitInfos();\n    }\n    return infos;\n  }\n\n","sourceOld":"  /** Returns the {@link SegmentCommitInfo} that this packet is supposed to apply its deletes to, or null\n   *  if the private segment was already merged away. */\n  private List<SegmentCommitInfo> getInfosToApply(IndexWriter writer) {\n    assert Thread.holdsLock(writer);\n    final List<SegmentCommitInfo> infos;\n    if (privateSegment != null) {\n      if (writer.segmentCommitInfoExist(privateSegment)) {\n        infos = Collections.singletonList(privateSegment);\n      }else {\n        if (infoStream.isEnabled(\"BD\")) {\n          infoStream.message(\"BD\", \"private segment already gone; skip processing updates\");\n        }\n        infos = null;\n      }\n    } else {\n      infos = writer.listOfSegmentCommitInfos();\n    }\n    return infos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9f21f1920c232db2352489eed260fe5c1f39e5a0":["631ea3d1607299c59f33edef140ffc19a81f07a0"],"631ea3d1607299c59f33edef140ffc19a81f07a0":["28288370235ed02234a64753cdbf0c6ec096304a"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9f21f1920c232db2352489eed260fe5c1f39e5a0"]},"commit2Childs":{"9f21f1920c232db2352489eed260fe5c1f39e5a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"631ea3d1607299c59f33edef140ffc19a81f07a0":["9f21f1920c232db2352489eed260fe5c1f39e5a0"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["631ea3d1607299c59f33edef140ffc19a81f07a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}