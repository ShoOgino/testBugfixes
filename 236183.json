{"path":"contrib/analyzers/src/test/org/apache/lucene/analysis/reverse/TestReverseStringFilter#testFilter().mjava","commits":[{"id":"1f656c9d5a91e23698b78ce79bb0609c01dd4d7a","date":1235594645,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/analyzers/src/test/org/apache/lucene/analysis/reverse/TestReverseStringFilter#testFilter().mjava","pathOld":"/dev/null","sourceNew":"  public void testFilter() throws Exception {\n    TokenStream stream = new WhitespaceTokenizer(\n        new StringReader(\"Do have a nice day\"));     // 1-4 length string\n    ReverseStringFilter filter = new ReverseStringFilter(stream);\n    final Token reusableToken = new Token();\n    assertEquals(\"oD\", filter.next(reusableToken).term());\n    assertEquals(\"evah\", filter.next(reusableToken).term());\n    assertEquals(\"a\", filter.next(reusableToken).term());\n    assertEquals(\"ecin\", filter.next(reusableToken).term());\n    assertEquals(\"yad\", filter.next(reusableToken).term());\n    assertNull(filter.next(reusableToken));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/reverse/TestReverseStringFilter#testFilter().mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/reverse/TestReverseStringFilter#testFilter().mjava","sourceNew":"  public void testFilter() throws Exception {\n    TokenStream stream = new WhitespaceTokenizer(\n        new StringReader(\"Do have a nice day\"));     // 1-4 length string\n    ReverseStringFilter filter = new ReverseStringFilter(stream);\n    final Token reusableToken = new Token();\n    assertEquals(\"oD\", filter.next(reusableToken).term());\n    assertEquals(\"evah\", filter.next(reusableToken).term());\n    assertEquals(\"a\", filter.next(reusableToken).term());\n    assertEquals(\"ecin\", filter.next(reusableToken).term());\n    assertEquals(\"yad\", filter.next(reusableToken).term());\n    assertNull(filter.next(reusableToken));\n  }\n\n","sourceOld":"  public void testFilter() throws Exception {\n    TokenStream stream = new WhitespaceTokenizer(\n        new StringReader(\"Do have a nice day\"));     // 1-4 length string\n    ReverseStringFilter filter = new ReverseStringFilter(stream);\n    final Token reusableToken = new Token();\n    assertEquals(\"oD\", filter.next(reusableToken).term());\n    assertEquals(\"evah\", filter.next(reusableToken).term());\n    assertEquals(\"a\", filter.next(reusableToken).term());\n    assertEquals(\"ecin\", filter.next(reusableToken).term());\n    assertEquals(\"yad\", filter.next(reusableToken).term());\n    assertNull(filter.next(reusableToken));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["1f656c9d5a91e23698b78ce79bb0609c01dd4d7a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1f656c9d5a91e23698b78ce79bb0609c01dd4d7a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f656c9d5a91e23698b78ce79bb0609c01dd4d7a"],"1f656c9d5a91e23698b78ce79bb0609c01dd4d7a":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}