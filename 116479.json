{"path":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.LongValueCollapse#LongValueCollapse(int,String,int,int[],boolean,boolean,IntIntOpenHashMap,SortedDocValues).mjava","commits":[{"id":"a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7","date":1401992910,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.LongValueCollapse#LongValueCollapse(int,String,int,int[],boolean,boolean,IntIntOpenHashMap,SortedDocValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.LongValueCollapse#LongValueCollapse(int,String,int,int[],boolean,boolean,IntOpenHashSet,SortedDocValues).mjava","sourceNew":"    public LongValueCollapse(int maxDoc, String field,\n                             int nullPolicy,\n                             int[] ords,\n                             boolean max,\n                             boolean needsScores,\n                             IntIntOpenHashMap boostDocs, SortedDocValues values) throws IOException {\n      super(maxDoc, field, nullPolicy, max, needsScores, boostDocs, values);\n      this.ords = ords;\n      this.ordVals = new long[ords.length];\n      Arrays.fill(ords, -1);\n\n      if(max) {\n        comp = new MaxLongComp();\n        Arrays.fill(ordVals, Long.MIN_VALUE);\n      } else {\n        this.nullVal = Long.MAX_VALUE;\n        comp = new MinLongComp();\n        Arrays.fill(ordVals, Long.MAX_VALUE);\n      }\n\n      if(needsScores) {\n        this.scores = new float[ords.length];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","sourceOld":"    public LongValueCollapse(int maxDoc, String field,\n                             int nullPolicy,\n                             int[] ords,\n                             boolean max,\n                             boolean needsScores,\n                             IntOpenHashSet boostDocs, SortedDocValues values) throws IOException {\n      super(maxDoc, field, nullPolicy, max, needsScores, boostDocs, values);\n      this.ords = ords;\n      this.ordVals = new long[ords.length];\n      Arrays.fill(ords, -1);\n\n      if(max) {\n        comp = new MaxLongComp();\n        Arrays.fill(ordVals, Long.MIN_VALUE);\n      } else {\n        this.nullVal = Long.MAX_VALUE;\n        comp = new MinLongComp();\n        Arrays.fill(ordVals, Long.MAX_VALUE);\n      }\n\n      if(needsScores) {\n        this.scores = new float[ords.length];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ced52befdc8d88d90766aadbaac496f3fd0e4ee","date":1421070034,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdLongStrategy#OrdLongStrategy(int,String,int,int[],boolean,boolean,IntIntOpenHashMap,SortedDocValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.LongValueCollapse#LongValueCollapse(int,String,int,int[],boolean,boolean,IntIntOpenHashMap,SortedDocValues).mjava","sourceNew":"    public OrdLongStrategy(int maxDoc, String field,\n                           int nullPolicy,\n                           int[] ords,\n                           boolean max,\n                           boolean needsScores,\n                           IntIntOpenHashMap boostDocs, SortedDocValues values) throws IOException {\n      super(maxDoc, field, nullPolicy, max, needsScores, boostDocs, values);\n      this.ords = ords;\n      this.ordVals = new long[ords.length];\n      Arrays.fill(ords, -1);\n\n      if(max) {\n        comp = new MaxLongComp();\n        Arrays.fill(ordVals, Long.MIN_VALUE);\n      } else {\n        this.nullVal = Long.MAX_VALUE;\n        comp = new MinLongComp();\n        Arrays.fill(ordVals, Long.MAX_VALUE);\n      }\n\n      if(needsScores) {\n        this.scores = new float[ords.length];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","sourceOld":"    public LongValueCollapse(int maxDoc, String field,\n                             int nullPolicy,\n                             int[] ords,\n                             boolean max,\n                             boolean needsScores,\n                             IntIntOpenHashMap boostDocs, SortedDocValues values) throws IOException {\n      super(maxDoc, field, nullPolicy, max, needsScores, boostDocs, values);\n      this.ords = ords;\n      this.ordVals = new long[ords.length];\n      Arrays.fill(ords, -1);\n\n      if(max) {\n        comp = new MaxLongComp();\n        Arrays.fill(ordVals, Long.MIN_VALUE);\n      } else {\n        this.nullVal = Long.MAX_VALUE;\n        comp = new MinLongComp();\n        Arrays.fill(ordVals, Long.MAX_VALUE);\n      }\n\n      if(needsScores) {\n        this.scores = new float[ords.length];\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"]},"commit2Childs":{"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7"],"a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}