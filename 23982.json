{"path":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#testTooLargeBytes().mjava","commits":[{"id":"423d89a2b3cc419b647c07c2b3fdbc54311d07f9","date":1358836612,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#testTooLargeBytes().mjava","pathOld":"/dev/null","sourceNew":"  // nocommit: test exactly 32766, also add field-level check so you get exc faster\n  // same for sorted bytes\n  public void testTooLargeBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new BinaryDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    iwriter.close();\n\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2b06aa393a555ad9ff07ecce512acf08bdfad6","date":1359316392,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#testTooLargeBytes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#testTooLargeBytes().mjava","sourceNew":"  public void testTooLargeBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new BinaryDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    iwriter.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  // nocommit: test exactly 32766, also add field-level check so you get exc faster\n  // same for sorted bytes\n  public void testTooLargeBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new BinaryDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    iwriter.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ec08217282b5e9df023dcdff55c745ff68b1c7d","date":1359392781,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testTooLargeBytes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#testTooLargeBytes().mjava","sourceNew":"  public void testTooLargeBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new BinaryDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    iwriter.close();\n\n    directory.close();\n  }\n\n","sourceOld":"  public void testTooLargeBytes() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    byte bytes[] = new byte[100000];\n    BytesRef b = new BytesRef(bytes);\n    random().nextBytes(bytes);\n    doc.add(new BinaryDocValuesField(\"dv\", b));\n    try {\n      iwriter.addDocument(doc);\n      fail(\"did not get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    iwriter.close();\n\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"423d89a2b3cc419b647c07c2b3fdbc54311d07f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aa2b06aa393a555ad9ff07ecce512acf08bdfad6":["423d89a2b3cc419b647c07c2b3fdbc54311d07f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2ec08217282b5e9df023dcdff55c745ff68b1c7d":["aa2b06aa393a555ad9ff07ecce512acf08bdfad6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["423d89a2b3cc419b647c07c2b3fdbc54311d07f9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"423d89a2b3cc419b647c07c2b3fdbc54311d07f9":["aa2b06aa393a555ad9ff07ecce512acf08bdfad6"],"aa2b06aa393a555ad9ff07ecce512acf08bdfad6":["2ec08217282b5e9df023dcdff55c745ff68b1c7d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2ec08217282b5e9df023dcdff55c745ff68b1c7d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","2ec08217282b5e9df023dcdff55c745ff68b1c7d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}