{"path":"contrib/analyzers/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getInterletterValues(String).mjava","commits":[{"id":"dbb53146e3651ed4ebca43f69ee26f9150c6cb5a","date":1210940570,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getInterletterValues(String).mjava","pathOld":"/dev/null","sourceNew":"  protected static String getInterletterValues(String pat) {\n    StringBuffer il = new StringBuffer();\n    String word = pat + \"a\"; // add dummy letter to serve as sentinel\n    int len = word.length();\n    for (int i = 0; i < len; i++) {\n      char c = word.charAt(i);\n      if (Character.isDigit(c)) {\n        il.append(c);\n        i++;\n      } else {\n        il.append('0');\n      }\n    }\n    return il.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getInterletterValues(String).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getInterletterValues(String).mjava","sourceNew":"  protected static String getInterletterValues(String pat) {\n    StringBuffer il = new StringBuffer();\n    String word = pat + \"a\"; // add dummy letter to serve as sentinel\n    int len = word.length();\n    for (int i = 0; i < len; i++) {\n      char c = word.charAt(i);\n      if (Character.isDigit(c)) {\n        il.append(c);\n        i++;\n      } else {\n        il.append('0');\n      }\n    }\n    return il.toString();\n  }\n\n","sourceOld":"  protected static String getInterletterValues(String pat) {\n    StringBuffer il = new StringBuffer();\n    String word = pat + \"a\"; // add dummy letter to serve as sentinel\n    int len = word.length();\n    for (int i = 0; i < len; i++) {\n      char c = word.charAt(i);\n      if (Character.isDigit(c)) {\n        il.append(c);\n        i++;\n      } else {\n        il.append('0');\n      }\n    }\n    return il.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dbb53146e3651ed4ebca43f69ee26f9150c6cb5a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["dbb53146e3651ed4ebca43f69ee26f9150c6cb5a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"dbb53146e3651ed4ebca43f69ee26f9150c6cb5a":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dbb53146e3651ed4ebca43f69ee26f9150c6cb5a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}