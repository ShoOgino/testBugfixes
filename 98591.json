{"path":"src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter#initMultiCore(FilterConfig).mjava","commits":[{"id":"58b41d4093a9662306bdc051e4b46643deff70de","date":1205090944,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter#initMultiCore(FilterConfig).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Initializes the multicore instance.\n   * @param config the filter configuration\n   * @return the multicore instance or null\n   * @throws java.lang.Exception\n   */\n  protected MultiCore initMultiCore(FilterConfig config) throws Exception {\n    @SuppressWarnings(\"deprecation\") // since SolrDispatchFilter can be derived & initMultiCore can be overriden\n    MultiCore mcore = org.apache.solr.core.SolrMultiCore.getInstance();\n    if (mcore.isEnabled()) {\n      log.info(\"Using existing multicore configuration\");\n    } else {\n      // multicore load\n      String instanceDir = SolrResourceLoader.locateInstanceDir();\n      File fconf = new File(instanceDir, \"multicore.xml\");\n      log.info(\"looking for multicore.xml: \" + fconf.getAbsolutePath());\n      if (fconf.exists()) {\n        mcore.load(instanceDir, fconf);\n      }\n    }\n    return mcore;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a46cae2a2f75e7ff129d40effceea9918b450a5","date":1206457283,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter#initMultiCore(FilterConfig).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter#initMultiCore(FilterConfig).mjava","sourceNew":"  /**\n   * Initialize the multicore instance.\n   * @param config the filter configuration\n   * @return the multicore instance or null\n   * @throws java.lang.Exception\n   */\n  protected MultiCore initMultiCore(FilterConfig config) throws Exception {\n    MultiCore mcore = new MultiCore();\n    String instanceDir = SolrResourceLoader.locateInstanceDir();\n    File fconf = new File(instanceDir, \"multicore.xml\");\n    log.info(\"looking for multicore.xml: \" + fconf.getAbsolutePath());\n    if (fconf.exists()) {\n      mcore.load(instanceDir, fconf);\n    }\n    return mcore;\n  }\n\n","sourceOld":"  /**\n   * Initializes the multicore instance.\n   * @param config the filter configuration\n   * @return the multicore instance or null\n   * @throws java.lang.Exception\n   */\n  protected MultiCore initMultiCore(FilterConfig config) throws Exception {\n    @SuppressWarnings(\"deprecation\") // since SolrDispatchFilter can be derived & initMultiCore can be overriden\n    MultiCore mcore = org.apache.solr.core.SolrMultiCore.getInstance();\n    if (mcore.isEnabled()) {\n      log.info(\"Using existing multicore configuration\");\n    } else {\n      // multicore load\n      String instanceDir = SolrResourceLoader.locateInstanceDir();\n      File fconf = new File(instanceDir, \"multicore.xml\");\n      log.info(\"looking for multicore.xml: \" + fconf.getAbsolutePath());\n      if (fconf.exists()) {\n        mcore.load(instanceDir, fconf);\n      }\n    }\n    return mcore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d262ab35a1389f4ad912bfa8b61a202c61cc475a","date":1218563685,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter#initMultiCore(FilterConfig).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter#initMultiCore(FilterConfig).mjava","sourceNew":"  /**\n   * Initialize the multicore instance.\n   * @param config the filter configuration\n   * @return the multicore instance or null\n   * @throws java.lang.Exception\n   */\n  protected MultiCore initMultiCore(FilterConfig config) throws Exception {\n    MultiCore mcore = new MultiCore();\n    String instanceDir = SolrResourceLoader.locateInstanceDir();\n    File fconf = new File(instanceDir, \"solr.xml\");\n    log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n    if (fconf.exists()) {\n      mcore.load(instanceDir, fconf);\n    }\n    return mcore;\n  }\n\n","sourceOld":"  /**\n   * Initialize the multicore instance.\n   * @param config the filter configuration\n   * @return the multicore instance or null\n   * @throws java.lang.Exception\n   */\n  protected MultiCore initMultiCore(FilterConfig config) throws Exception {\n    MultiCore mcore = new MultiCore();\n    String instanceDir = SolrResourceLoader.locateInstanceDir();\n    File fconf = new File(instanceDir, \"multicore.xml\");\n    log.info(\"looking for multicore.xml: \" + fconf.getAbsolutePath());\n    if (fconf.exists()) {\n      mcore.load(instanceDir, fconf);\n    }\n    return mcore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5","date":1218639440,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter#initMultiCore(FilterConfig).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter#initMultiCore(FilterConfig).mjava","sourceNew":"  /**\n   * Initialize the cores instance.\n   * @param config the filter configuration\n   * @return the cores instance or null\n   * @throws java.lang.Exception\n   */\n  protected CoreContainer initMultiCore(FilterConfig config) throws Exception {\n    CoreContainer mcore = new CoreContainer();\n    String instanceDir = SolrResourceLoader.locateInstanceDir();\n    File fconf = new File(instanceDir, \"solr.xml\");\n    log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n    if (fconf.exists()) {\n      mcore.load(instanceDir, fconf);\n    }\n    return mcore;\n  }\n\n","sourceOld":"  /**\n   * Initialize the multicore instance.\n   * @param config the filter configuration\n   * @return the multicore instance or null\n   * @throws java.lang.Exception\n   */\n  protected MultiCore initMultiCore(FilterConfig config) throws Exception {\n    MultiCore mcore = new MultiCore();\n    String instanceDir = SolrResourceLoader.locateInstanceDir();\n    File fconf = new File(instanceDir, \"solr.xml\");\n    log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n    if (fconf.exists()) {\n      mcore.load(instanceDir, fconf);\n    }\n    return mcore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4926b5318ba4167d360445a0c5f3fc8af2cf8c49","date":1218678599,"type":4,"author":"Ryan McKinley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrDispatchFilter#initMultiCore(FilterConfig).mjava","sourceNew":null,"sourceOld":"  /**\n   * Initialize the cores instance.\n   * @param config the filter configuration\n   * @return the cores instance or null\n   * @throws java.lang.Exception\n   */\n  protected CoreContainer initMultiCore(FilterConfig config) throws Exception {\n    CoreContainer mcore = new CoreContainer();\n    String instanceDir = SolrResourceLoader.locateInstanceDir();\n    File fconf = new File(instanceDir, \"solr.xml\");\n    log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n    if (fconf.exists()) {\n      mcore.load(instanceDir, fconf);\n    }\n    return mcore;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d262ab35a1389f4ad912bfa8b61a202c61cc475a":["4a46cae2a2f75e7ff129d40effceea9918b450a5"],"4926b5318ba4167d360445a0c5f3fc8af2cf8c49":["9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"58b41d4093a9662306bdc051e4b46643deff70de":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"4a46cae2a2f75e7ff129d40effceea9918b450a5":["58b41d4093a9662306bdc051e4b46643deff70de"],"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5":["d262ab35a1389f4ad912bfa8b61a202c61cc475a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d262ab35a1389f4ad912bfa8b61a202c61cc475a":["9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5"],"4926b5318ba4167d360445a0c5f3fc8af2cf8c49":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["58b41d4093a9662306bdc051e4b46643deff70de"],"58b41d4093a9662306bdc051e4b46643deff70de":["4a46cae2a2f75e7ff129d40effceea9918b450a5"],"4a46cae2a2f75e7ff129d40effceea9918b450a5":["d262ab35a1389f4ad912bfa8b61a202c61cc475a"],"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5":["4926b5318ba4167d360445a0c5f3fc8af2cf8c49"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4926b5318ba4167d360445a0c5f3fc8af2cf8c49","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}