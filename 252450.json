{"path":"solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#writeToFileSystem(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"94df854a0d36420ddbf7a4a21330bd00c2354017","date":1384538000,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#writeToFileSystem(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  // Write the data passed in from the stream to the file indicated by the file=XXX parameter on the local file system\n  private void writeToFileSystem(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    ContentStream stream = getOneInputStream(req, rsp);\n    if (stream == null) {\n      return; // Error should already have been logged.\n    }\n\n    File adminFile = getAdminFileFromFileSystem(req, rsp);\n    if (adminFile == null || adminFile.isDirectory()) {\n      String fname = req.getParams().get(\"file\", null);\n\n      if (adminFile == null) {\n        log.error(\"File \" + fname + \" was not found.\");\n        rsp.setException(new SolrException( ErrorCode.BAD_REQUEST, \"File \" + fname + \" was not found.\"));\n        return;\n      }\n      log.error(\"File \" + fname + \" is a directory.\");\n      rsp.setException(new SolrException( ErrorCode.BAD_REQUEST, \"File \" + fname + \" is a directory.\"));\n      return;\n    }\n\n    FileUtils.copyInputStreamToFile(stream.getStream(), adminFile);\n    log.info(\"Successfully saved file \" + adminFile.getAbsolutePath() + \" locally\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b51e04dc58a1002908e3caba8f5eb8ef59abe00","date":1384906513,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#writeToFileSystem(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#writeToFileSystem(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  // Write the data passed in from the stream to the file indicated by the file=XXX parameter on the local file system\n  private void writeToFileSystem(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    ContentStream stream = getOneInputStream(req, rsp);\n    if (stream == null) {\n      return; // Error should already have been logged.\n    }\n\n    File adminFile = getAdminFileFromFileSystem(req, rsp);\n    if (adminFile == null || adminFile.isDirectory()) {\n      String fname = req.getParams().get(\"file\", null);\n\n      if (adminFile == null) {\n        log.error(\"File \" + fname + \" was not found.\");\n        rsp.setException(new SolrException( ErrorCode.BAD_REQUEST, \"File \" + fname + \" was not found.\"));\n        return;\n      }\n      log.error(\"File \" + fname + \" is a directory.\");\n      rsp.setException(new SolrException( ErrorCode.BAD_REQUEST, \"File \" + fname + \" is a directory.\"));\n      return;\n    }\n    if (OP_TEST.equals(req.getParams().get(OP_PARAM))) {\n      testReloadSuccess(req, rsp, stream);\n      return;\n    }\n\n    FileUtils.copyInputStreamToFile(stream.getStream(), adminFile);\n    log.info(\"Successfully saved file \" + adminFile.getAbsolutePath() + \" locally\");\n  }\n\n","sourceOld":"  // Write the data passed in from the stream to the file indicated by the file=XXX parameter on the local file system\n  private void writeToFileSystem(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    ContentStream stream = getOneInputStream(req, rsp);\n    if (stream == null) {\n      return; // Error should already have been logged.\n    }\n\n    File adminFile = getAdminFileFromFileSystem(req, rsp);\n    if (adminFile == null || adminFile.isDirectory()) {\n      String fname = req.getParams().get(\"file\", null);\n\n      if (adminFile == null) {\n        log.error(\"File \" + fname + \" was not found.\");\n        rsp.setException(new SolrException( ErrorCode.BAD_REQUEST, \"File \" + fname + \" was not found.\"));\n        return;\n      }\n      log.error(\"File \" + fname + \" is a directory.\");\n      rsp.setException(new SolrException( ErrorCode.BAD_REQUEST, \"File \" + fname + \" is a directory.\"));\n      return;\n    }\n\n    FileUtils.copyInputStreamToFile(stream.getStream(), adminFile);\n    log.info(\"Successfully saved file \" + adminFile.getAbsolutePath() + \" locally\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7455ee5c847b2ee7e44656e4218141f62dacb572","date":1386032125,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/EditFileRequestHandler#writeToFileSystem(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler#writeToFileSystem(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  // Write the data passed in from the stream to the file indicated by the file=XXX parameter on the local file system\n  private void writeToFileSystem(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n\n    File adminFile = ShowFileRequestHandler.getAdminFileFromFileSystem(req, rsp, hiddenFiles);\n    if (adminFile == null || adminFile.isDirectory()) {\n      String fname = req.getParams().get(\"file\", null);\n\n      if (adminFile == null) {\n        log.error(\"File \" + fname + \" was not found.\");\n        rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"File \" + fname + \" was not found.\"));\n        return;\n      }\n      log.error(\"File \" + fname + \" is a directory.\");\n      rsp.setException(new SolrException(ErrorCode.BAD_REQUEST, \"File \" + fname + \" is a directory.\"));\n      return;\n    }\n    if (OP_TEST.equals(req.getParams().get(OP_PARAM))) {\n      testReloadSuccess(req, rsp);\n      return;\n    }\n\n    FileUtils.copyInputStreamToFile(stream.getStream(), adminFile);\n    log.info(\"Successfully saved file \" + adminFile.getAbsolutePath() + \" locally\");\n  }\n\n","sourceOld":"  // Write the data passed in from the stream to the file indicated by the file=XXX parameter on the local file system\n  private void writeToFileSystem(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    ContentStream stream = getOneInputStream(req, rsp);\n    if (stream == null) {\n      return; // Error should already have been logged.\n    }\n\n    File adminFile = getAdminFileFromFileSystem(req, rsp);\n    if (adminFile == null || adminFile.isDirectory()) {\n      String fname = req.getParams().get(\"file\", null);\n\n      if (adminFile == null) {\n        log.error(\"File \" + fname + \" was not found.\");\n        rsp.setException(new SolrException( ErrorCode.BAD_REQUEST, \"File \" + fname + \" was not found.\"));\n        return;\n      }\n      log.error(\"File \" + fname + \" is a directory.\");\n      rsp.setException(new SolrException( ErrorCode.BAD_REQUEST, \"File \" + fname + \" is a directory.\"));\n      return;\n    }\n    if (OP_TEST.equals(req.getParams().get(OP_PARAM))) {\n      testReloadSuccess(req, rsp, stream);\n      return;\n    }\n\n    FileUtils.copyInputStreamToFile(stream.getStream(), adminFile);\n    log.info(\"Successfully saved file \" + adminFile.getAbsolutePath() + \" locally\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8b51e04dc58a1002908e3caba8f5eb8ef59abe00":["94df854a0d36420ddbf7a4a21330bd00c2354017"],"94df854a0d36420ddbf7a4a21330bd00c2354017":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7455ee5c847b2ee7e44656e4218141f62dacb572":["8b51e04dc58a1002908e3caba8f5eb8ef59abe00"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7455ee5c847b2ee7e44656e4218141f62dacb572"]},"commit2Childs":{"8b51e04dc58a1002908e3caba8f5eb8ef59abe00":["7455ee5c847b2ee7e44656e4218141f62dacb572"],"94df854a0d36420ddbf7a4a21330bd00c2354017":["8b51e04dc58a1002908e3caba8f5eb8ef59abe00"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["94df854a0d36420ddbf7a4a21330bd00c2354017"],"7455ee5c847b2ee7e44656e4218141f62dacb572":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}