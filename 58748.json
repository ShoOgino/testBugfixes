{"path":"src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#setAction(ACTION,boolean,boolean,int).mjava","commits":[{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#setAction(ACTION,boolean,boolean,int).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/request/UpdateRequest#setAction(ACTION,boolean,boolean,int).mjava","sourceNew":"  public UpdateRequest setAction(ACTION action, boolean waitFlush, boolean waitSearcher, int maxSegments ) {\n    if (params == null)\n      params = new ModifiableSolrParams();\n\n    if( action == ACTION.OPTIMIZE ) {\n      params.set( UpdateParams.OPTIMIZE, \"true\" );\n      params.set(UpdateParams.MAX_OPTIMIZE_SEGMENTS, maxSegments);\n    }\n    else if( action == ACTION.COMMIT ) {\n      params.set( UpdateParams.COMMIT, \"true\" );\n    }\n    params.set( UpdateParams.WAIT_FLUSH, waitFlush+\"\" );\n    params.set( UpdateParams.WAIT_SEARCHER, waitSearcher+\"\" );\n    return this;\n  }\n\n","sourceOld":"  public UpdateRequest setAction(ACTION action, boolean waitFlush, boolean waitSearcher, int maxSegments ) {\n    if (params == null)\n      params = new ModifiableSolrParams();\n\n    if( action == ACTION.OPTIMIZE ) {\n      params.set( UpdateParams.OPTIMIZE, \"true\" );\n      params.set(UpdateParams.MAX_OPTIMIZE_SEGMENTS, maxSegments);\n    }\n    else if( action == ACTION.COMMIT ) {\n      params.set( UpdateParams.COMMIT, \"true\" );\n    }\n    params.set( UpdateParams.WAIT_FLUSH, waitFlush+\"\" );\n    params.set( UpdateParams.WAIT_SEARCHER, waitSearcher+\"\" );\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0698c497f27c6f59a7a094c46c0f8795f330edf7","date":1252588039,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#setAction(ACTION,boolean,boolean,int).mjava","pathOld":"src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#setAction(ACTION,boolean,boolean,int).mjava","sourceNew":"  /**\n   *\n   * @deprecated Use {@link org.apache.solr.client.solrj.request.AbstractUpdateRequest.ACTION} instead\n   */\n  public UpdateRequest setAction(ACTION action, boolean waitFlush, boolean waitSearcher, int maxSegments ) {\n    if (params == null)\n      params = new ModifiableSolrParams();\n\n    if( action == ACTION.OPTIMIZE ) {\n      params.set( UpdateParams.OPTIMIZE, \"true\" );\n      params.set(UpdateParams.MAX_OPTIMIZE_SEGMENTS, maxSegments);\n    }\n    else if( action == ACTION.COMMIT ) {\n      params.set( UpdateParams.COMMIT, \"true\" );\n    }\n    params.set( UpdateParams.WAIT_FLUSH, waitFlush+\"\" );\n    params.set( UpdateParams.WAIT_SEARCHER, waitSearcher+\"\" );\n    return this;\n  }\n\n","sourceOld":"  public UpdateRequest setAction(ACTION action, boolean waitFlush, boolean waitSearcher, int maxSegments ) {\n    if (params == null)\n      params = new ModifiableSolrParams();\n\n    if( action == ACTION.OPTIMIZE ) {\n      params.set( UpdateParams.OPTIMIZE, \"true\" );\n      params.set(UpdateParams.MAX_OPTIMIZE_SEGMENTS, maxSegments);\n    }\n    else if( action == ACTION.COMMIT ) {\n      params.set( UpdateParams.COMMIT, \"true\" );\n    }\n    params.set( UpdateParams.WAIT_FLUSH, waitFlush+\"\" );\n    params.set( UpdateParams.WAIT_SEARCHER, waitSearcher+\"\" );\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#setAction(ACTION,boolean,boolean,int).mjava","pathOld":"src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#setAction(ACTION,boolean,boolean,int).mjava","sourceNew":"  /**\n   *\n   * @deprecated Use {@link org.apache.solr.client.solrj.request.AbstractUpdateRequest.ACTION} instead\n   */\n  public UpdateRequest setAction(ACTION action, boolean waitFlush, boolean waitSearcher, int maxSegments ) {\n    if (params == null)\n      params = new ModifiableSolrParams();\n\n    if( action == ACTION.OPTIMIZE ) {\n      params.set( UpdateParams.OPTIMIZE, \"true\" );\n      params.set(UpdateParams.MAX_OPTIMIZE_SEGMENTS, maxSegments);\n    }\n    else if( action == ACTION.COMMIT ) {\n      params.set( UpdateParams.COMMIT, \"true\" );\n    }\n    params.set( UpdateParams.WAIT_FLUSH, waitFlush+\"\" );\n    params.set( UpdateParams.WAIT_SEARCHER, waitSearcher+\"\" );\n    return this;\n  }\n\n","sourceOld":"  /**\n   *\n   * @deprecated Use {@link org.apache.solr.client.solrj.request.AbstractUpdateRequest.ACTION} instead\n   */\n  public UpdateRequest setAction(ACTION action, boolean waitFlush, boolean waitSearcher, int maxSegments ) {\n    if (params == null)\n      params = new ModifiableSolrParams();\n\n    if( action == ACTION.OPTIMIZE ) {\n      params.set( UpdateParams.OPTIMIZE, \"true\" );\n      params.set(UpdateParams.MAX_OPTIMIZE_SEGMENTS, maxSegments);\n    }\n    else if( action == ACTION.COMMIT ) {\n      params.set( UpdateParams.COMMIT, \"true\" );\n    }\n    params.set( UpdateParams.WAIT_FLUSH, waitFlush+\"\" );\n    params.set( UpdateParams.WAIT_SEARCHER, waitSearcher+\"\" );\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"0698c497f27c6f59a7a094c46c0f8795f330edf7":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["0698c497f27c6f59a7a094c46c0f8795f330edf7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["0698c497f27c6f59a7a094c46c0f8795f330edf7"],"0698c497f27c6f59a7a094c46c0f8795f330edf7":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}