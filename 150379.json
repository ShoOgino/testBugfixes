{"path":"solr/core/src/java/org/apache/solr/search/facet/LegacyFacet#addStat(String).mjava","commits":[{"id":"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","date":1426480823,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/LegacyFacet#addStat(String).mjava","pathOld":"/dev/null","sourceNew":"  private void addStat(String val) {\n    QueryParsing.StrParser sp = new QueryParsing.StrParser(val);\n    int start = 0;\n    sp.eatws();\n    if (sp.pos >= sp.end) addStat(val, val);\n\n    // try key:func() format\n    String key = null;\n    String funcStr = val;\n\n    if (key == null) {\n      key = SolrReturnFields.getFieldName(sp);\n      if (key != null && sp.opt(':')) {\n        // OK, we got the key\n        funcStr = val.substring(sp.pos);\n      } else {\n        // an invalid key... it must not be present.\n        sp.pos = start;\n        key = null;\n      }\n    }\n\n    if (key == null) {\n      key = funcStr;  // not really ideal\n    }\n\n    addStat(key, funcStr);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/LegacyFacet#addStat(String).mjava","pathOld":"/dev/null","sourceNew":"  private void addStat(String val) {\n    QueryParsing.StrParser sp = new QueryParsing.StrParser(val);\n    int start = 0;\n    sp.eatws();\n    if (sp.pos >= sp.end) addStat(val, val);\n\n    // try key:func() format\n    String key = null;\n    String funcStr = val;\n\n    if (key == null) {\n      key = SolrReturnFields.getFieldName(sp);\n      if (key != null && sp.opt(':')) {\n        // OK, we got the key\n        funcStr = val.substring(sp.pos);\n      } else {\n        // an invalid key... it must not be present.\n        sp.pos = start;\n        key = null;\n      }\n    }\n\n    if (key == null) {\n      key = funcStr;  // not really ideal\n    }\n\n    addStat(key, funcStr);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"051c3069a96e986b8fa0435398a73a922ce85418","date":1447853599,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/LegacyFacet#addStat(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/LegacyFacet#addStat(String).mjava","sourceNew":"  private void addStat(String val) {\n    StrParser sp = new StrParser(val);\n    int start = 0;\n    sp.eatws();\n    if (sp.pos >= sp.end) addStat(val, val);\n\n    // try key:func() format\n    String key = null;\n    String funcStr = val;\n\n    if (key == null) {\n      key = SolrReturnFields.getFieldName(sp);\n      if (key != null && sp.opt(':')) {\n        // OK, we got the key\n        funcStr = val.substring(sp.pos);\n      } else {\n        // an invalid key... it must not be present.\n        sp.pos = start;\n        key = null;\n      }\n    }\n\n    if (key == null) {\n      key = funcStr;  // not really ideal\n    }\n\n    addStat(key, funcStr);\n  }\n\n","sourceOld":"  private void addStat(String val) {\n    QueryParsing.StrParser sp = new QueryParsing.StrParser(val);\n    int start = 0;\n    sp.eatws();\n    if (sp.pos >= sp.end) addStat(val, val);\n\n    // try key:func() format\n    String key = null;\n    String funcStr = val;\n\n    if (key == null) {\n      key = SolrReturnFields.getFieldName(sp);\n      if (key != null && sp.opt(':')) {\n        // OK, we got the key\n        funcStr = val.substring(sp.pos);\n      } else {\n        // an invalid key... it must not be present.\n        sp.pos = start;\n        key = null;\n      }\n    }\n\n    if (key == null) {\n      key = funcStr;  // not really ideal\n    }\n\n    addStat(key, funcStr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"051c3069a96e986b8fa0435398a73a922ce85418":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["051c3069a96e986b8fa0435398a73a922ce85418"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"051c3069a96e986b8fa0435398a73a922ce85418":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","051c3069a96e986b8fa0435398a73a922ce85418"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}