{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#addDetails(List[Map[String,Object]],File,String).mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#addDetails(List[Map[String,Object]],File,String).mjava","pathOld":"/dev/null","sourceNew":"  private void addDetails(List<Map<String, Object>> files, File dir, String name) {\n    Map<String, Object> details = new HashMap<String, Object>();\n    File aFile = new File(dir, name);\n    if (aFile.isDirectory()) {\n      if (!recursive)\n        return;\n      getFolderFiles(aFile, files);\n      return;\n    }\n    long sz = aFile.length();\n    Date lastModified = new Date(aFile.lastModified());\n    if (biggerThan != -1 && sz <= biggerThan)\n      return;\n    if (smallerThan != -1 && sz >= smallerThan)\n      return;\n    if (olderThan != null && lastModified.after(olderThan))\n      return;\n    if (newerThan != null && lastModified.before(newerThan))\n      return;\n    details.put(DIR, dir.getAbsolutePath());\n    details.put(FILE, name);\n    details.put(ABSOLUTE_FILE, aFile.getAbsolutePath());\n    details.put(SIZE, sz);\n    details.put(LAST_MODIFIED, lastModified);\n    files.add(details);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d241a0d7846c11e0602e9ade2311edaa6e833c9a","date":1233693200,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#addDetails(List[Map[String,Object]],File,String).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#addDetails(List[Map[String,Object]],File,String).mjava","sourceNew":"  private void addDetails(List<Map<String, Object>> files, File dir, String name) {\n    Map<String, Object> details = new HashMap<String, Object>();\n    File aFile = new File(dir, name);\n    if (aFile.isDirectory()) return;\n    long sz = aFile.length();\n    Date lastModified = new Date(aFile.lastModified());\n    if (biggerThan != -1 && sz <= biggerThan)\n      return;\n    if (smallerThan != -1 && sz >= smallerThan)\n      return;\n    if (olderThan != null && lastModified.after(olderThan))\n      return;\n    if (newerThan != null && lastModified.before(newerThan))\n      return;\n    details.put(DIR, dir.getAbsolutePath());\n    details.put(FILE, name);\n    details.put(ABSOLUTE_FILE, aFile.getAbsolutePath());\n    details.put(SIZE, sz);\n    details.put(LAST_MODIFIED, lastModified);\n    files.add(details);\n  }\n\n","sourceOld":"  private void addDetails(List<Map<String, Object>> files, File dir, String name) {\n    Map<String, Object> details = new HashMap<String, Object>();\n    File aFile = new File(dir, name);\n    if (aFile.isDirectory()) {\n      if (!recursive)\n        return;\n      getFolderFiles(aFile, files);\n      return;\n    }\n    long sz = aFile.length();\n    Date lastModified = new Date(aFile.lastModified());\n    if (biggerThan != -1 && sz <= biggerThan)\n      return;\n    if (smallerThan != -1 && sz >= smallerThan)\n      return;\n    if (olderThan != null && lastModified.after(olderThan))\n      return;\n    if (newerThan != null && lastModified.before(newerThan))\n      return;\n    details.put(DIR, dir.getAbsolutePath());\n    details.put(FILE, name);\n    details.put(ABSOLUTE_FILE, aFile.getAbsolutePath());\n    details.put(SIZE, sz);\n    details.put(LAST_MODIFIED, lastModified);\n    files.add(details);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#addDetails(List[Map[String,Object]],File,String).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#addDetails(List[Map[String,Object]],File,String).mjava","sourceNew":"  private void addDetails(List<Map<String, Object>> files, File dir, String name) {\n    Map<String, Object> details = new HashMap<String, Object>();\n    File aFile = new File(dir, name);\n    if (aFile.isDirectory()) return;\n    long sz = aFile.length();\n    Date lastModified = new Date(aFile.lastModified());\n    if (biggerThan != -1 && sz <= biggerThan)\n      return;\n    if (smallerThan != -1 && sz >= smallerThan)\n      return;\n    if (olderThan != null && lastModified.after(olderThan))\n      return;\n    if (newerThan != null && lastModified.before(newerThan))\n      return;\n    details.put(DIR, dir.getAbsolutePath());\n    details.put(FILE, name);\n    details.put(ABSOLUTE_FILE, aFile.getAbsolutePath());\n    details.put(SIZE, sz);\n    details.put(LAST_MODIFIED, lastModified);\n    files.add(details);\n  }\n\n","sourceOld":"  private void addDetails(List<Map<String, Object>> files, File dir, String name) {\n    Map<String, Object> details = new HashMap<String, Object>();\n    File aFile = new File(dir, name);\n    if (aFile.isDirectory()) return;\n    long sz = aFile.length();\n    Date lastModified = new Date(aFile.lastModified());\n    if (biggerThan != -1 && sz <= biggerThan)\n      return;\n    if (smallerThan != -1 && sz >= smallerThan)\n      return;\n    if (olderThan != null && lastModified.after(olderThan))\n      return;\n    if (newerThan != null && lastModified.before(newerThan))\n      return;\n    details.put(DIR, dir.getAbsolutePath());\n    details.put(FILE, name);\n    details.put(ABSOLUTE_FILE, aFile.getAbsolutePath());\n    details.put(SIZE, sz);\n    details.put(LAST_MODIFIED, lastModified);\n    files.add(details);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["d241a0d7846c11e0602e9ade2311edaa6e833c9a"],"d241a0d7846c11e0602e9ade2311edaa6e833c9a":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["d241a0d7846c11e0602e9ade2311edaa6e833c9a"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"d241a0d7846c11e0602e9ade2311edaa6e833c9a":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}