{"path":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","sourceNew":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new RAMDirectory();\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","sourceOld":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new RAMDirectory();\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9","date":1270985469,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","sourceNew":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new RAMDirectory();\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","sourceOld":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new RAMDirectory();\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10","date":1270996866,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","sourceNew":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new RAMDirectory();\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","sourceOld":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new RAMDirectory();\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","bugFix":null,"bugIntro":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4","date":1271167458,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","sourceNew":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new RAMDirectory();\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","sourceOld":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new RAMDirectory();\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","bugFix":["d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","sourceNew":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new RAMDirectory();\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","sourceOld":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new RAMDirectory();\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","sourceNew":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new MockRAMDirectory();\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","sourceOld":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new RAMDirectory();\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a05409176bd65129d67a785ee70e881e238a9aef","date":1282582843,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","sourceNew":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new MockDirectoryWrapper(new RAMDirectory());\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","sourceOld":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new MockRAMDirectory();\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53a31399f2471493d67b19a95c028a74e0113b6a","date":1289817072,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","sourceNew":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new MockDirectoryWrapper(random, new RAMDirectory());\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","sourceOld":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new MockDirectoryWrapper(new RAMDirectory());\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","sourceNew":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new MockDirectoryWrapper(random, new RAMDirectory());\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","sourceOld":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new MockDirectoryWrapper(new RAMDirectory());\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","sourceNew":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new MockDirectoryWrapper(random, new RAMDirectory());\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","sourceOld":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new RAMDirectory();\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","sourceNew":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new MockDirectoryWrapper(random, new RAMDirectory());\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","sourceOld":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new MockDirectoryWrapper(random, new RAMDirectory());\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","sourceNew":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new MockDirectoryWrapper(random, new RAMDirectory());\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","sourceOld":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new MockDirectoryWrapper(random, new RAMDirectory());\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","sourceNew":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new MockDirectoryWrapper(random, new RAMDirectory());\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","sourceOld":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new MockDirectoryWrapper(random, new RAMDirectory());\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","sourceNew":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new MockDirectoryWrapper(random, new RAMDirectory());\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","sourceOld":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new MockDirectoryWrapper(random, new RAMDirectory());\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory#testRAMDirectoryNoLocking().mjava","sourceNew":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new MockDirectoryWrapper(random, new RAMDirectory());\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","sourceOld":"    // Verify: we can use the NoLockFactory with RAMDirectory w/ no\n    // exceptions raised:\n    // Verify: NoLockFactory allows two IndexWriters\n    public void testRAMDirectoryNoLocking() throws IOException {\n        Directory dir = new MockDirectoryWrapper(random, new RAMDirectory());\n        dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        assertTrue(\"RAMDirectory.setLockFactory did not take\",\n                   NoLockFactory.class.isInstance(dir.getLockFactory()));\n\n        IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n        writer.commit(); // required so the second open succeed \n        // Create a 2nd IndexWriter.  This is normally not allowed but it should run through since we're not\n        // using any locks:\n        IndexWriter writer2 = null;\n        try {\n            writer2 = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.APPEND));\n        } catch (Exception e) {\n            e.printStackTrace(System.out);\n            fail(\"Should not have hit an IOException with no locking\");\n        }\n\n        writer.close();\n        if (writer2 != null) {\n            writer2.close();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["a05409176bd65129d67a785ee70e881e238a9aef","53a31399f2471493d67b19a95c028a74e0113b6a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","53a31399f2471493d67b19a95c028a74e0113b6a"],"d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10":["b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["53a31399f2471493d67b19a95c028a74e0113b6a"],"53a31399f2471493d67b19a95c028a74e0113b6a":["a05409176bd65129d67a785ee70e881e238a9aef"],"69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4":["d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10"],"a3776dccca01c11e7046323cfad46a3b4a471233":["53a31399f2471493d67b19a95c028a74e0113b6a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["d572389229127c297dd1fa5ce4758e1cec41e799"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a05409176bd65129d67a785ee70e881e238a9aef":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9":["d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"d8d3f45cdd3ff689aaf7a3aab99e2df31305ac10":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4"],"53a31399f2471493d67b19a95c028a74e0113b6a":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4":["d572389229127c297dd1fa5ce4758e1cec41e799"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["a05409176bd65129d67a785ee70e881e238a9aef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a05409176bd65129d67a785ee70e881e238a9aef":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","53a31399f2471493d67b19a95c028a74e0113b6a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b48e4082e2f39f1eb6f935ea9a1203c5e8d830a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}