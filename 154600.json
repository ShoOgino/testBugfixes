{"path":"solr/core/src/java/org/apache/solr/analytics/accumulator/FacetingAccumulator#setNextReader(AtomicReaderContext).mjava","commits":[{"id":"ff403346522eaa9de75403763e297e83a3ea585c","date":1384904731,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analytics/accumulator/FacetingAccumulator#setNextReader(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Update the readers for the {@link BasicAccumulator}, field facets and field facet {@link StatsCollector}s.\n   * @param context The context to read documents from.\n   * @throws IOException if there is an error setting the next reader\n   */\n  @Override\n  public void setNextReader(AtomicReaderContext context) throws IOException {\n    super.setNextReader(context);\n    for( Map<String,StatsCollector[]> valueList : fieldFacetCollectors.values() ){\n      for (StatsCollector[] statsCollectorList : valueList.values()) {\n        for (StatsCollector statsCollector : statsCollectorList) {\n          statsCollector.setNextReader(context);\n        }\n      }\n    }\n    for (FieldFacetAccumulator fa : facetAccumulators) {\n      fa.setNextReader(context);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/analytics/accumulator/FacetingAccumulator#setNextReader(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Update the readers for the {@link BasicAccumulator}, field facets and field facet {@link StatsCollector}s.\n   * @param context The context to read documents from.\n   * @throws IOException if there is an error setting the next reader\n   */\n  @Override\n  public void setNextReader(AtomicReaderContext context) throws IOException {\n    super.setNextReader(context);\n    for( Map<String,StatsCollector[]> valueList : fieldFacetCollectors.values() ){\n      for (StatsCollector[] statsCollectorList : valueList.values()) {\n        for (StatsCollector statsCollector : statsCollectorList) {\n          statsCollector.setNextReader(context);\n        }\n      }\n    }\n    for (FieldFacetAccumulator fa : facetAccumulators) {\n      fa.setNextReader(context);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae73da626f97850c922c42736f808d0378e165f0","date":1396625460,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analytics/accumulator/FacetingAccumulator#doSetNextReader(AtomicReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/analytics/accumulator/FacetingAccumulator#setNextReader(AtomicReaderContext).mjava","sourceNew":"  /**\n   * Update the readers for the {@link BasicAccumulator}, field facets and field facet {@link StatsCollector}s.\n   * @param context The context to read documents from.\n   * @throws IOException if there is an error setting the next reader\n   */\n  @Override\n  protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n    super.doSetNextReader(context);\n    for( Map<String,StatsCollector[]> valueList : fieldFacetCollectors.values() ){\n      for (StatsCollector[] statsCollectorList : valueList.values()) {\n        for (StatsCollector statsCollector : statsCollectorList) {\n          statsCollector.setNextReader(context);\n        }\n      }\n    }\n    for (FieldFacetAccumulator fa : facetAccumulators) {\n      fa.getLeafCollector(context);\n    }\n  }\n\n","sourceOld":"  /**\n   * Update the readers for the {@link BasicAccumulator}, field facets and field facet {@link StatsCollector}s.\n   * @param context The context to read documents from.\n   * @throws IOException if there is an error setting the next reader\n   */\n  @Override\n  public void setNextReader(AtomicReaderContext context) throws IOException {\n    super.setNextReader(context);\n    for( Map<String,StatsCollector[]> valueList : fieldFacetCollectors.values() ){\n      for (StatsCollector[] statsCollectorList : valueList.values()) {\n        for (StatsCollector statsCollector : statsCollectorList) {\n          statsCollector.setNextReader(context);\n        }\n      }\n    }\n    for (FieldFacetAccumulator fa : facetAccumulators) {\n      fa.setNextReader(context);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/analytics/accumulator/FacetingAccumulator#doSetNextReader(AtomicReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/analytics/accumulator/FacetingAccumulator#setNextReader(AtomicReaderContext).mjava","sourceNew":"  /**\n   * Update the readers for the {@link BasicAccumulator}, field facets and field facet {@link StatsCollector}s.\n   * @param context The context to read documents from.\n   * @throws IOException if there is an error setting the next reader\n   */\n  @Override\n  protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n    super.doSetNextReader(context);\n    for( Map<String,StatsCollector[]> valueList : fieldFacetCollectors.values() ){\n      for (StatsCollector[] statsCollectorList : valueList.values()) {\n        for (StatsCollector statsCollector : statsCollectorList) {\n          statsCollector.setNextReader(context);\n        }\n      }\n    }\n    for (FieldFacetAccumulator fa : facetAccumulators) {\n      fa.getLeafCollector(context);\n    }\n  }\n\n","sourceOld":"  /**\n   * Update the readers for the {@link BasicAccumulator}, field facets and field facet {@link StatsCollector}s.\n   * @param context The context to read documents from.\n   * @throws IOException if there is an error setting the next reader\n   */\n  @Override\n  public void setNextReader(AtomicReaderContext context) throws IOException {\n    super.setNextReader(context);\n    for( Map<String,StatsCollector[]> valueList : fieldFacetCollectors.values() ){\n      for (StatsCollector[] statsCollectorList : valueList.values()) {\n        for (StatsCollector statsCollector : statsCollectorList) {\n          statsCollector.setNextReader(context);\n        }\n      }\n    }\n    for (FieldFacetAccumulator fa : facetAccumulators) {\n      fa.setNextReader(context);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["ff403346522eaa9de75403763e297e83a3ea585c","ae73da626f97850c922c42736f808d0378e165f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ae73da626f97850c922c42736f808d0378e165f0":["ff403346522eaa9de75403763e297e83a3ea585c"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ff403346522eaa9de75403763e297e83a3ea585c"],"ff403346522eaa9de75403763e297e83a3ea585c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae73da626f97850c922c42736f808d0378e165f0"]},"commit2Childs":{"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","ff403346522eaa9de75403763e297e83a3ea585c"],"ae73da626f97850c922c42736f808d0378e165f0":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"ff403346522eaa9de75403763e297e83a3ea585c":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","ae73da626f97850c922c42736f808d0378e165f0","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}