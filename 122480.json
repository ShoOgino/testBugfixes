{"path":"lucene/core/src/test/org/apache/lucene/index/TestPayloadsOnVectors#testPayloadsWithoutPositions().mjava","commits":[{"id":"0935c850ea562932997b72c69d93e345f21d7f45","date":1344711506,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPayloadsOnVectors#testPayloadsWithoutPositions().mjava","pathOld":"/dev/null","sourceNew":"  public void testPayloadsWithoutPositions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(false);\n    customType.setStoreTermVectorPayloads(true);\n    customType.setStoreTermVectorOffsets(random().nextBoolean());\n    doc.add(new Field(\"field\", \"foo\", customType));\n    try {\n      writer.addDocument(doc);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPayloadsOnVectors#testPayloadsWithoutPositions().mjava","pathOld":"/dev/null","sourceNew":"  public void testPayloadsWithoutPositions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(false);\n    customType.setStoreTermVectorPayloads(true);\n    customType.setStoreTermVectorOffsets(random().nextBoolean());\n    doc.add(new Field(\"field\", \"foo\", customType));\n    try {\n      writer.addDocument(doc);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPayloadsOnVectors#testPayloadsWithoutPositions().mjava","pathOld":"/dev/null","sourceNew":"  public void testPayloadsWithoutPositions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(false);\n    customType.setStoreTermVectorPayloads(true);\n    customType.setStoreTermVectorOffsets(random().nextBoolean());\n    doc.add(new Field(\"field\", \"foo\", customType));\n    try {\n      writer.addDocument(doc);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPayloadsOnVectors#testPayloadsWithoutPositions().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPayloadsOnVectors#testPayloadsWithoutPositions().mjava","sourceNew":"  public void testPayloadsWithoutPositions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(false);\n    customType.setStoreTermVectorPayloads(true);\n    customType.setStoreTermVectorOffsets(random().nextBoolean());\n    doc.add(new Field(\"field\", \"foo\", customType));\n    try {\n      writer.addDocument(doc);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    writer.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testPayloadsWithoutPositions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(false);\n    customType.setStoreTermVectorPayloads(true);\n    customType.setStoreTermVectorOffsets(random().nextBoolean());\n    doc.add(new Field(\"field\", \"foo\", customType));\n    try {\n      writer.addDocument(doc);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPayloadsOnVectors#testPayloadsWithoutPositions().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPayloadsOnVectors#testPayloadsWithoutPositions().mjava","sourceNew":"  public void testPayloadsWithoutPositions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(false);\n    customType.setStoreTermVectorPayloads(true);\n    customType.setStoreTermVectorOffsets(random().nextBoolean());\n    doc.add(new Field(\"field\", \"foo\", customType));\n    try {\n      writer.addDocument(doc);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testPayloadsWithoutPositions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(false);\n    customType.setStoreTermVectorPayloads(true);\n    customType.setStoreTermVectorOffsets(random().nextBoolean());\n    doc.add(new Field(\"field\", \"foo\", customType));\n    try {\n      writer.addDocument(doc);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    writer.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPayloadsOnVectors#testPayloadsWithoutPositions().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPayloadsOnVectors#testPayloadsWithoutPositions().mjava","sourceNew":"  public void testPayloadsWithoutPositions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(false);\n    customType.setStoreTermVectorPayloads(true);\n    customType.setStoreTermVectorOffsets(random().nextBoolean());\n    doc.add(new Field(\"field\", \"foo\", customType));\n\n    expectThrows(IllegalArgumentException.class, () -> {\n      writer.addDocument(doc);\n    });\n\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testPayloadsWithoutPositions() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);\n    customType.setStoreTermVectors(true);\n    customType.setStoreTermVectorPositions(false);\n    customType.setStoreTermVectorPayloads(true);\n    customType.setStoreTermVectorOffsets(random().nextBoolean());\n    doc.add(new Field(\"field\", \"foo\", customType));\n    try {\n      writer.addDocument(doc);\n      fail();\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":["0935c850ea562932997b72c69d93e345f21d7f45"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0935c850ea562932997b72c69d93e345f21d7f45"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["0935c850ea562932997b72c69d93e345f21d7f45"],"0935c850ea562932997b72c69d93e345f21d7f45":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0935c850ea562932997b72c69d93e345f21d7f45"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7869f64c874ebf7f317d22c00baf2b6857797a6","0935c850ea562932997b72c69d93e345f21d7f45","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["05fe562aa248790944d43cdd478f512572835ba0"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"0935c850ea562932997b72c69d93e345f21d7f45":["c7869f64c874ebf7f317d22c00baf2b6857797a6","ae14298f4eec6d5faee6a149f88ba57d14a6f21a","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}