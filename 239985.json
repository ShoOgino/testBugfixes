{"path":"lucene/core/src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","sourceNew":"  /** Skips to the first match beyond the current, whose document number is\n   * greater than or equal to <i>target</i>. <p>Returns true iff there is such\n   * a match.  <p>Behaves as if written: <pre>\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   * \t     return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Most implementations are considerably more efficient than that.\n   */\n  public abstract boolean skipTo(int target) throws IOException;\n\n","sourceOld":"  /** Skips to the first match beyond the current, whose document number is\n   * greater than or equal to <i>target</i>. <p>Returns true iff there is such\n   * a match.  <p>Behaves as if written: <pre>\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   * \t     return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Most implementations are considerably more efficient than that.\n   */\n  public abstract boolean skipTo(int target) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8471c0f357621e859602d44e1af230581b739319","date":1347468766,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","sourceNew":"  /** Skips to the first match beyond the current, whose document number is\n   * greater than or equal to <i>target</i>. <p>Returns true iff there is such\n   * a match.  <p>Behaves as if written: <pre class=\"prettyprint\">\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   * \t     return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Most implementations are considerably more efficient than that.\n   */\n  public abstract boolean skipTo(int target) throws IOException;\n\n","sourceOld":"  /** Skips to the first match beyond the current, whose document number is\n   * greater than or equal to <i>target</i>. <p>Returns true iff there is such\n   * a match.  <p>Behaves as if written: <pre>\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   * \t     return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Most implementations are considerably more efficient than that.\n   */\n  public abstract boolean skipTo(int target) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","sourceNew":"  /** Skips to the first match beyond the current, whose document number is\n   * greater than or equal to <i>target</i>. <p>Returns true iff there is such\n   * a match.  <p>Behaves as if written: <pre class=\"prettyprint\">\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   *         return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Most implementations are considerably more efficient than that.\n   */\n  public abstract boolean skipTo(int target) throws IOException;\n\n","sourceOld":"  /** Skips to the first match beyond the current, whose document number is\n   * greater than or equal to <i>target</i>. <p>Returns true iff there is such\n   * a match.  <p>Behaves as if written: <pre class=\"prettyprint\">\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   * \t     return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Most implementations are considerably more efficient than that.\n   */\n  public abstract boolean skipTo(int target) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"07c6861cb029cd251d930aa4c4578c8ca21aa957","date":1364984125,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","sourceNew":"  /** Skips to the first match beyond the current, whose document number is\n   * greater than or equal to <i>target</i>.\n   * <p>The behavior of this method is <b>undefined</b> when called with\n   * <code> target &le; current</code>, or after the iterator has exhausted.\n   * Both cases may result in unpredicted behavior.\n   * <p>Returns true iff there is such\n   * a match.  <p>Behaves as if written: <pre class=\"prettyprint\">\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   *         return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Most implementations are considerably more efficient than that.\n   */\n  public abstract boolean skipTo(int target) throws IOException;\n\n","sourceOld":"  /** Skips to the first match beyond the current, whose document number is\n   * greater than or equal to <i>target</i>. <p>Returns true iff there is such\n   * a match.  <p>Behaves as if written: <pre class=\"prettyprint\">\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   *         return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Most implementations are considerably more efficient than that.\n   */\n  public abstract boolean skipTo(int target) throws IOException;\n\n","bugFix":["0bcbf4ed0baed877c8b36d024e17a99bedfdd904"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1eb427f2c6beed80d1724555fc1db003ccf3030","date":1417137397,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","sourceNew":"  /** Skips to the first match beyond the current, whose document number is\n   * greater than or equal to <i>target</i>.\n   * <p>The behavior of this method is <b>undefined</b> when called with\n   * <code> target &le; current</code>, or after the iterator has exhausted.\n   * Both cases may result in unpredicted behavior.\n   * <p>Returns true iff there is such\n   * a match.  <p>Behaves as if written: \n   * <pre class=\"prettyprint\">\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   *         return false;\n   *     } while (target &gt; doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Most implementations are considerably more efficient than that.\n   */\n  public abstract boolean skipTo(int target) throws IOException;\n\n","sourceOld":"  /** Skips to the first match beyond the current, whose document number is\n   * greater than or equal to <i>target</i>.\n   * <p>The behavior of this method is <b>undefined</b> when called with\n   * <code> target &le; current</code>, or after the iterator has exhausted.\n   * Both cases may result in unpredicted behavior.\n   * <p>Returns true iff there is such\n   * a match.  <p>Behaves as if written: <pre class=\"prettyprint\">\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   *         return false;\n   *     } while (target > doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Most implementations are considerably more efficient than that.\n   */\n  public abstract boolean skipTo(int target) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30de45e50bdc1a79a6797f34dca6271c8866cb6e","date":1427790465,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","sourceNew":null,"sourceOld":"  /** Skips to the first match beyond the current, whose document number is\n   * greater than or equal to <i>target</i>.\n   * <p>The behavior of this method is <b>undefined</b> when called with\n   * <code> target &le; current</code>, or after the iterator has exhausted.\n   * Both cases may result in unpredicted behavior.\n   * <p>Returns true iff there is such\n   * a match.  <p>Behaves as if written: \n   * <pre class=\"prettyprint\">\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   *         return false;\n   *     } while (target &gt; doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Most implementations are considerably more efficient than that.\n   */\n  public abstract boolean skipTo(int target) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fab172655716b96f7e42376116235017a922de3a","date":1427850611,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/Spans#skipTo(int).mjava","sourceNew":null,"sourceOld":"  /** Skips to the first match beyond the current, whose document number is\n   * greater than or equal to <i>target</i>.\n   * <p>The behavior of this method is <b>undefined</b> when called with\n   * <code> target &le; current</code>, or after the iterator has exhausted.\n   * Both cases may result in unpredicted behavior.\n   * <p>Returns true iff there is such\n   * a match.  <p>Behaves as if written: \n   * <pre class=\"prettyprint\">\n   *   boolean skipTo(int target) {\n   *     do {\n   *       if (!next())\n   *         return false;\n   *     } while (target &gt; doc());\n   *     return true;\n   *   }\n   * </pre>\n   * Most implementations are considerably more efficient than that.\n   */\n  public abstract boolean skipTo(int target) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b1eb427f2c6beed80d1724555fc1db003ccf3030":["07c6861cb029cd251d930aa4c4578c8ca21aa957"],"8471c0f357621e859602d44e1af230581b739319":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"07c6861cb029cd251d930aa4c4578c8ca21aa957":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["b1eb427f2c6beed80d1724555fc1db003ccf3030"],"fab172655716b96f7e42376116235017a922de3a":["b1eb427f2c6beed80d1724555fc1db003ccf3030","30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["8471c0f357621e859602d44e1af230581b739319"]},"commit2Childs":{"b1eb427f2c6beed80d1724555fc1db003ccf3030":["30de45e50bdc1a79a6797f34dca6271c8866cb6e","fab172655716b96f7e42376116235017a922de3a"],"8471c0f357621e859602d44e1af230581b739319":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8471c0f357621e859602d44e1af230581b739319"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"07c6861cb029cd251d930aa4c4578c8ca21aa957":["b1eb427f2c6beed80d1724555fc1db003ccf3030"],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["fab172655716b96f7e42376116235017a922de3a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fab172655716b96f7e42376116235017a922de3a":[],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["07c6861cb029cd251d930aa4c4578c8ca21aa957"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fab172655716b96f7e42376116235017a922de3a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}