{"path":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newField(String,String,Store,Index,TermVector).mjava","commits":[{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newField(String,String,Store,Index,TermVector).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newField(String,String,Store,Index,TermVector).mjava","sourceNew":"  public static Field newField(String name, String value, Store store, Index index, TermVector tv) {\n    return newField(random, name, value, store, index, tv);\n  }\n\n","sourceOld":"  public static Field newField(String name, String value, Store store, Index index, TermVector tv) {\n    return newField(random, name, value, store, index, tv);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newField(String,String,Store,Index,TermVector).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newField(String,String,Store,Index,TermVector).mjava","sourceNew":"  public static Field newField(String name, String value, Store store, Index index, TermVector tv) {\n    return newField(random, name, value, store, index, tv);\n  }\n\n","sourceOld":"  public static Field newField(String name, String value, Store store, Index index, TermVector tv) {\n    return newField(random, name, value, store, index, tv);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d","date":1298208351,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newField(String,String,Store,Index,TermVector).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newField(String,String,Store,Index,TermVector).mjava","sourceNew":"  /**\n   * Returns a new Field instance. Use this when the test does not\n   * care about some specific field settings (most tests)\n   * <ul>\n   *  <li>If the store value is set to Store.NO, sometimes the field will be randomly stored.\n   *  <li>More term vector data than you ask for might be indexed, for example if you choose YES\n   *      it might index term vectors with offsets too.\n   * </ul>\n   */\n  public static Field newField(String name, String value, Store store, Index index, TermVector tv) {\n    return newField(random, name, value, store, index, tv);\n  }\n\n","sourceOld":"  public static Field newField(String name, String value, Store store, Index index, TermVector tv) {\n    return newField(random, name, value, store, index, tv);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newField(String,String,Store,Index,TermVector).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newField(String,String,Store,Index,TermVector).mjava","sourceNew":"  /**\n   * Returns a new Field instance. Use this when the test does not\n   * care about some specific field settings (most tests)\n   * <ul>\n   *  <li>If the store value is set to Store.NO, sometimes the field will be randomly stored.\n   *  <li>More term vector data than you ask for might be indexed, for example if you choose YES\n   *      it might index term vectors with offsets too.\n   * </ul>\n   */\n  public static Field newField(String name, String value, Store store, Index index, TermVector tv) {\n    return newField(random, name, value, store, index, tv);\n  }\n\n","sourceOld":"  public static Field newField(String name, String value, Store store, Index index, TermVector tv) {\n    return newField(random, name, value, store, index, tv);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newField(String,String,Store,Index,TermVector).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#newField(String,String,Store,Index,TermVector).mjava","sourceNew":"  public static Field newField(String name, String value, Store store, Index index, TermVector tv) {\n    return newField(random, name, value, store, index, tv);\n  }\n\n","sourceOld":"  public static Field newField(String name, String value, Store store, Index index, TermVector tv) {\n    return newField(random, name, value, store, index, tv);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newField(String,String,Store,Index,TermVector).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newField(String,String,Store,Index,TermVector).mjava","sourceNew":"  /**\n   * Returns a new Field instance. Use this when the test does not\n   * care about some specific field settings (most tests)\n   * <ul>\n   *  <li>If the store value is set to Store.NO, sometimes the field will be randomly stored.\n   *  <li>More term vector data than you ask for might be indexed, for example if you choose YES\n   *      it might index term vectors with offsets too.\n   * </ul>\n   */\n  public static Field newField(String name, String value, Store store, Index index, TermVector tv) {\n    return newField(random, name, value, store, index, tv);\n  }\n\n","sourceOld":"  public static Field newField(String name, String value, Store store, Index index, TermVector tv) {\n    return newField(random, name, value, store, index, tv);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#newField(String,String,Store,Index,TermVector).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns a new Field instance. Use this when the test does not\n   * care about some specific field settings (most tests)\n   * <ul>\n   *  <li>If the store value is set to Store.NO, sometimes the field will be randomly stored.\n   *  <li>More term vector data than you ask for might be indexed, for example if you choose YES\n   *      it might index term vectors with offsets too.\n   * </ul>\n   */\n  public static Field newField(String name, String value, Store store, Index index, TermVector tv) {\n    return newField(random, name, value, store, index, tv);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["bde51b089eb7f86171eb3406e38a274743f9b7ac","0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["29ef99d61cda9641b6250bf9567329a6e65f901d","0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","f1bdbf92da222965b46c0a942c3857ba56e5c638","1509f151d7692d84fae414b2b799ac06ba60fcb4","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["0ffe3fbd77ef1d62c9164a042f5bcdb625a7c53d","29ef99d61cda9641b6250bf9567329a6e65f901d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","f1bdbf92da222965b46c0a942c3857ba56e5c638","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}