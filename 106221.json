{"path":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#skipPositions().mjava","commits":[{"id":"3d53c3f769ca0f9e7434937b792877770271aecf","date":1294785129,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#skipPositions().mjava","pathOld":"/dev/null","sourceNew":"    private void skipPositions() throws IOException {\n      while(posPending != 0) {\n        nextPosition();\n      }\n      if (storePayloads && !payloadRetrieved) {\n        //System.out.println(\"  skip payload len=\" + payloadLength);\n        postings.skipBytes(payloadLength);\n        payloadRetrieved = true;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#skipPositions().mjava","pathOld":"/dev/null","sourceNew":"    private void skipPositions() throws IOException {\n      while(posPending != 0) {\n        nextPosition();\n      }\n      if (storePayloads && !payloadRetrieved) {\n        //System.out.println(\"  skip payload len=\" + payloadLength);\n        postings.skipBytes(payloadLength);\n        payloadRetrieved = true;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#skipPositions().mjava","pathOld":"/dev/null","sourceNew":"    private void skipPositions() throws IOException {\n      while(posPending != 0) {\n        nextPosition();\n      }\n      if (storePayloads && !payloadRetrieved) {\n        //System.out.println(\"  skip payload len=\" + payloadLength);\n        postings.skipBytes(payloadLength);\n        payloadRetrieved = true;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a653ca3bb595a9c1f775fc44684e6ba7daafd3f5","date":1302211592,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#skipPositions().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#skipPositions().mjava","sourceNew":"    private void skipPositions() throws IOException {\n      //System.out.println(\"PR.skipPositions: posPending=\" + posPending);\n      while(posPending != 0) {\n        nextPosition();\n      }\n      if (storePayloads && !payloadRetrieved) {\n        //System.out.println(\"  skip last payload len=\" + payloadLength);\n        postings.skipBytes(payloadLength);\n        payloadRetrieved = true;\n      }\n    }\n\n","sourceOld":"    private void skipPositions() throws IOException {\n      while(posPending != 0) {\n        nextPosition();\n      }\n      if (storePayloads && !payloadRetrieved) {\n        //System.out.println(\"  skip payload len=\" + payloadLength);\n        postings.skipBytes(payloadLength);\n        payloadRetrieved = true;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#skipPositions().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#skipPositions().mjava","sourceNew":"    private void skipPositions() throws IOException {\n      //System.out.println(\"PR.skipPositions: posPending=\" + posPending);\n      while(posPending != 0) {\n        nextPosition();\n      }\n      if (storePayloads && !payloadRetrieved) {\n        //System.out.println(\"  skip last payload len=\" + payloadLength);\n        postings.skipBytes(payloadLength);\n        payloadRetrieved = true;\n      }\n    }\n\n","sourceOld":"    private void skipPositions() throws IOException {\n      while(posPending != 0) {\n        nextPosition();\n      }\n      if (storePayloads && !payloadRetrieved) {\n        //System.out.println(\"  skip payload len=\" + payloadLength);\n        postings.skipBytes(payloadLength);\n        payloadRetrieved = true;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#skipPositions().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#skipPositions().mjava","sourceNew":"    private void skipPositions() throws IOException {\n      //System.out.println(\"PR.skipPositions: posPending=\" + posPending);\n      while(posPending != 0) {\n        nextPosition();\n      }\n      if (storePayloads && !payloadRetrieved) {\n        //System.out.println(\"  skip last payload len=\" + payloadLength);\n        postings.skipBytes(payloadLength);\n        payloadRetrieved = true;\n      }\n    }\n\n","sourceOld":"    private void skipPositions() throws IOException {\n      while(posPending != 0) {\n        nextPosition();\n      }\n      if (storePayloads && !payloadRetrieved) {\n        //System.out.println(\"  skip payload len=\" + payloadLength);\n        postings.skipBytes(payloadLength);\n        payloadRetrieved = true;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#skipPositions().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#skipPositions().mjava","sourceNew":"    private void skipPositions() throws IOException {\n      //System.out.println(\"PR.skipPositions: posPending=\" + posPending);\n      while(posPending != 0) {\n        nextPosition();\n      }\n      if (storePayloads && !payloadRetrieved) {\n        //System.out.println(\"  skip last payload len=\" + payloadLength);\n        postings.skipBytes(payloadLength);\n        payloadRetrieved = true;\n      }\n    }\n\n","sourceOld":"    private void skipPositions() throws IOException {\n      while(posPending != 0) {\n        nextPosition();\n      }\n      if (storePayloads && !payloadRetrieved) {\n        //System.out.println(\"  skip payload len=\" + payloadLength);\n        postings.skipBytes(payloadLength);\n        payloadRetrieved = true;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#skipPositions().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl.PulsingDocsAndPositionsEnum#skipPositions().mjava","sourceNew":"    private void skipPositions() throws IOException {\n      while(posPending != 0) {\n        nextPosition();\n      }\n      if (storePayloads && !payloadRetrieved) {\n        //System.out.println(\"  skip payload len=\" + payloadLength);\n        postings.skipBytes(payloadLength);\n        payloadRetrieved = true;\n      }\n    }\n\n","sourceOld":"    private void skipPositions() throws IOException {\n      //System.out.println(\"PR.skipPositions: posPending=\" + posPending);\n      while(posPending != 0) {\n        nextPosition();\n      }\n      if (storePayloads && !payloadRetrieved) {\n        //System.out.println(\"  skip last payload len=\" + payloadLength);\n        postings.skipBytes(payloadLength);\n        payloadRetrieved = true;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["a653ca3bb595a9c1f775fc44684e6ba7daafd3f5"],"a653ca3bb595a9c1f775fc44684e6ba7daafd3f5":["3d53c3f769ca0f9e7434937b792877770271aecf"],"a3776dccca01c11e7046323cfad46a3b4a471233":["3d53c3f769ca0f9e7434937b792877770271aecf","a653ca3bb595a9c1f775fc44684e6ba7daafd3f5"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3d53c3f769ca0f9e7434937b792877770271aecf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","a653ca3bb595a9c1f775fc44684e6ba7daafd3f5"],"3d53c3f769ca0f9e7434937b792877770271aecf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"962d04139994fce5193143ef35615499a9a96d78":["868da859b43505d9d2a023bfeae6dd0c795f5295","a653ca3bb595a9c1f775fc44684e6ba7daafd3f5"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3d53c3f769ca0f9e7434937b792877770271aecf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60ba444201d2570214b6fcf1d15600dc1a01f548"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a653ca3bb595a9c1f775fc44684e6ba7daafd3f5":["60ba444201d2570214b6fcf1d15600dc1a01f548","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","3d53c3f769ca0f9e7434937b792877770271aecf","868da859b43505d9d2a023bfeae6dd0c795f5295"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"3d53c3f769ca0f9e7434937b792877770271aecf":["a653ca3bb595a9c1f775fc44684e6ba7daafd3f5","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"962d04139994fce5193143ef35615499a9a96d78":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["962d04139994fce5193143ef35615499a9a96d78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}