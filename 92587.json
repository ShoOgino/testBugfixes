{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharArrayMap#put(char[],V).mjava","commits":[{"id":"9dd42aeb8984bdfef80056722e7c1c239b7e3c07","date":1274826512,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharArrayMap#put(char[],V).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/CharArrayMap#put(char[],V).mjava","sourceNew":"  /** Add the given mapping.\n   * If ignoreCase is true for this Set, the text array will be directly modified.\n   * The user should never modify this text array after calling this method.\n   */\n  public V put(char[] text, V value) {\n    if (ignoreCase)\n      for(int i=0;i<text.length;){\n        i += Character.toChars(\n              Character.toLowerCase(\n                  charUtils.codePointAt(text, i)), text, i);\n      }\n    int slot = getSlot(text, 0, text.length);\n    if (keys[slot] != null) {\n      final V oldValue = values[slot];\n      values[slot] = value;\n      return oldValue;\n    }\n    keys[slot] = text;\n    values[slot] = value;\n    count++;\n\n    if (count + (count>>2) > keys.length) {\n      rehash();\n    }\n\n    return null;\n  }\n\n","sourceOld":"  /** Add the given mapping.\n   * If ignoreCase is true for this Set, the text array will be directly modified.\n   * The user should never modify this text array after calling this method.\n   */\n  public V put(char[] text, V value) {\n    if (ignoreCase)\n      for(int i=0;i<text.length;){\n        i += Character.toChars(\n              Character.toLowerCase(\n                  charUtils.codePointAt(text, i)), text, i);\n      }\n    int slot = getSlot(text, 0, text.length);\n    if (keys[slot] != null) {\n      final V oldValue = values[slot];\n      values[slot] = value;\n      return oldValue;\n    }\n    keys[slot] = text;\n    values[slot] = value;\n    count++;\n\n    if (count + (count>>2) > keys.length) {\n      rehash();\n    }\n\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharArrayMap#put(char[],V).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharArrayMap#put(char[],V).mjava","sourceNew":"  /** Add the given mapping.\n   * If ignoreCase is true for this Set, the text array will be directly modified.\n   * The user should never modify this text array after calling this method.\n   */\n  public V put(char[] text, V value) {\n    if (ignoreCase)\n      for(int i=0;i<text.length;){\n        i += Character.toChars(\n              Character.toLowerCase(\n                  charUtils.codePointAt(text, i)), text, i);\n      }\n    int slot = getSlot(text, 0, text.length);\n    if (keys[slot] != null) {\n      final V oldValue = values[slot];\n      values[slot] = value;\n      return oldValue;\n    }\n    keys[slot] = text;\n    values[slot] = value;\n    count++;\n\n    if (count + (count>>2) > keys.length) {\n      rehash();\n    }\n\n    return null;\n  }\n\n","sourceOld":"  /** Add the given mapping.\n   * If ignoreCase is true for this Set, the text array will be directly modified.\n   * The user should never modify this text array after calling this method.\n   */\n  public V put(char[] text, V value) {\n    if (ignoreCase)\n      for(int i=0;i<text.length;){\n        i += Character.toChars(\n              Character.toLowerCase(\n                  charUtils.codePointAt(text, i)), text, i);\n      }\n    int slot = getSlot(text, 0, text.length);\n    if (keys[slot] != null) {\n      final V oldValue = values[slot];\n      values[slot] = value;\n      return oldValue;\n    }\n    keys[slot] = text;\n    values[slot] = value;\n    count++;\n\n    if (count + (count>>2) > keys.length) {\n      rehash();\n    }\n\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["9dd42aeb8984bdfef80056722e7c1c239b7e3c07"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9dd42aeb8984bdfef80056722e7c1c239b7e3c07":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9dd42aeb8984bdfef80056722e7c1c239b7e3c07"],"9dd42aeb8984bdfef80056722e7c1c239b7e3c07":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}