{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/RepAllTask#reportAll(List[TaskStats]).mjava","commits":[{"id":"4e1ce9be74263e9659aad8a6ee1f213193710b71","date":1256298843,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/RepAllTask#reportAll(List[TaskStats]).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/RepAllTask#reportAll(List).mjava","sourceNew":"  /**\n   * Report detailed statistics as a string\n   * @return the report\n   */\n  protected Report reportAll(List<TaskStats> taskStats) {\n    String longestOp = longestOp(taskStats);\n    boolean first = true;\n    StringBuffer sb = new StringBuffer();\n    sb.append(tableTitle(longestOp));\n    sb.append(newline);\n    int reported = 0;\n    for (final TaskStats stat : taskStats) {\n      if (stat.getElapsed()>=0) { // consider only tasks that ended\n        if (!first) {\n          sb.append(newline);\n        }\n        first = false;\n        String line = taskReportLine(longestOp, stat);\n        reported++;\n        if (taskStats.size()>2 && reported%2==0) {\n          line = line.replaceAll(\"   \",\" - \");\n        }\n        sb.append(line);\n      }\n    }\n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,reported,reported,taskStats.size());\n  }\n\n","sourceOld":"  /**\n   * Report detailed statistics as a string\n   * @return the report\n   */\n  protected Report reportAll(List taskStats) {\n    String longestOp = longestOp(taskStats.iterator());\n    boolean first = true;\n    StringBuffer sb = new StringBuffer();\n    sb.append(tableTitle(longestOp));\n    sb.append(newline);\n    int reported = 0;\n    Iterator it = taskStats.iterator();\n    while (it.hasNext()) {\n      TaskStats stat = (TaskStats) it.next();\n      if (stat.getElapsed()>=0) { // consider only tasks that ended\n        if (!first) {\n          sb.append(newline);\n        }\n        first = false;\n        String line = taskReportLine(longestOp, stat);\n        reported++;\n        if (taskStats.size()>2 && reported%2==0) {\n          line = line.replaceAll(\"   \",\" - \");\n        }\n        sb.append(line);\n      }\n    }\n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,reported,reported,taskStats.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/RepAllTask#reportAll(List[TaskStats]).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/RepAllTask#reportAll(List[TaskStats]).mjava","sourceNew":"  /**\n   * Report detailed statistics as a string\n   * @return the report\n   */\n  protected Report reportAll(List<TaskStats> taskStats) {\n    String longestOp = longestOp(taskStats);\n    boolean first = true;\n    StringBuffer sb = new StringBuffer();\n    sb.append(tableTitle(longestOp));\n    sb.append(newline);\n    int reported = 0;\n    for (final TaskStats stat : taskStats) {\n      if (stat.getElapsed()>=0) { // consider only tasks that ended\n        if (!first) {\n          sb.append(newline);\n        }\n        first = false;\n        String line = taskReportLine(longestOp, stat);\n        reported++;\n        if (taskStats.size()>2 && reported%2==0) {\n          line = line.replaceAll(\"   \",\" - \");\n        }\n        sb.append(line);\n      }\n    }\n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,reported,reported,taskStats.size());\n  }\n\n","sourceOld":"  /**\n   * Report detailed statistics as a string\n   * @return the report\n   */\n  protected Report reportAll(List<TaskStats> taskStats) {\n    String longestOp = longestOp(taskStats);\n    boolean first = true;\n    StringBuffer sb = new StringBuffer();\n    sb.append(tableTitle(longestOp));\n    sb.append(newline);\n    int reported = 0;\n    for (final TaskStats stat : taskStats) {\n      if (stat.getElapsed()>=0) { // consider only tasks that ended\n        if (!first) {\n          sb.append(newline);\n        }\n        first = false;\n        String line = taskReportLine(longestOp, stat);\n        reported++;\n        if (taskStats.size()>2 && reported%2==0) {\n          line = line.replaceAll(\"   \",\" - \");\n        }\n        sb.append(line);\n      }\n    }\n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,reported,reported,taskStats.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4e1ce9be74263e9659aad8a6ee1f213193710b71":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4e1ce9be74263e9659aad8a6ee1f213193710b71"]},"commit2Childs":{"4e1ce9be74263e9659aad8a6ee1f213193710b71":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e1ce9be74263e9659aad8a6ee1f213193710b71"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}