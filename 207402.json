{"path":"contrib/snowball/src/java/org/tartarus/snowball/ext/DutchStemmer#stem().mjava","commits":[{"id":"b62da6a75575f59a016a076b4753dc6e20c74b44","date":1219528967,"type":1,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/DutchStemmer#stem().mjava","pathOld":"contrib/snowball/src/java/net/sf/snowball/ext/DutchStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            // (, line 157\n            // do, line 159\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 159\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 160\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 160\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 161\n            limit_backward = cursor; cursor = limit;\n            // do, line 162\n            v_3 = limit - cursor;\n            lab2: do {\n                // call standard_suffix, line 162\n                if (!r_standard_suffix())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            cursor = limit_backward;            // do, line 163\n            v_4 = cursor;\n            lab3: do {\n                // call postlude, line 163\n                if (!r_postlude())\n                {\n                    break lab3;\n                }\n            } while (false);\n            cursor = v_4;\n            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            // (, line 157\n            // do, line 159\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 159\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 160\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 160\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 161\n            limit_backward = cursor; cursor = limit;\n            // do, line 162\n            v_3 = limit - cursor;\n            lab2: do {\n                // call standard_suffix, line 162\n                if (!r_standard_suffix())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            cursor = limit_backward;            // do, line 163\n            v_4 = cursor;\n            lab3: do {\n                // call postlude, line 163\n                if (!r_postlude())\n                {\n                    break lab3;\n                }\n            } while (false);\n            cursor = v_4;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5aa159e1ac4009d23cea92797d3804da4f5e7ad","date":1264041909,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/DutchStemmer#stem().mjava","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/DutchStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            // (, line 157\n            // do, line 159\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 159\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 160\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 160\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 161\n            limit_backward = cursor; cursor = limit;\n            // do, line 162\n            v_3 = limit - cursor;\n            lab2: do {\n                // call standard_suffix, line 162\n                if (!r_standard_suffix())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            cursor = limit_backward;            // do, line 163\n            v_4 = cursor;\n            lab3: do {\n                // call postlude, line 163\n                if (!r_postlude())\n                {\n                    break lab3;\n                }\n            } while (false);\n            cursor = v_4;\n            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            // (, line 157\n            // do, line 159\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 159\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 160\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 160\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 161\n            limit_backward = cursor; cursor = limit;\n            // do, line 162\n            v_3 = limit - cursor;\n            lab2: do {\n                // call standard_suffix, line 162\n                if (!r_standard_suffix())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            cursor = limit_backward;            // do, line 163\n            v_4 = cursor;\n            lab3: do {\n                // call postlude, line 163\n                if (!r_postlude())\n                {\n                    break lab3;\n                }\n            } while (false);\n            cursor = v_4;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38c26570a4fd6cf0856801c977a2bc9c28a5424c","date":1264074890,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/DutchStemmer#stem().mjava","pathOld":"/dev/null","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            // (, line 157\n            // do, line 159\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 159\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 160\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 160\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 161\n            limit_backward = cursor; cursor = limit;\n            // do, line 162\n            v_3 = limit - cursor;\n            lab2: do {\n                // call standard_suffix, line 162\n                if (!r_standard_suffix())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            cursor = limit_backward;            // do, line 163\n            v_4 = cursor;\n            lab3: do {\n                // call postlude, line 163\n                if (!r_postlude())\n                {\n                    break lab3;\n                }\n            } while (false);\n            cursor = v_4;\n            return true;\n        }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d40ff39db4a2b90a440b97f2a7d7eda344f004ef","date":1264074978,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/DutchStemmer#stem().mjava","sourceNew":null,"sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            // (, line 157\n            // do, line 159\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 159\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 160\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 160\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 161\n            limit_backward = cursor; cursor = limit;\n            // do, line 162\n            v_3 = limit - cursor;\n            lab2: do {\n                // call standard_suffix, line 162\n                if (!r_standard_suffix())\n                {\n                    break lab2;\n                }\n            } while (false);\n            cursor = limit - v_3;\n            cursor = limit_backward;            // do, line 163\n            v_4 = cursor;\n            lab3: do {\n                // call postlude, line 163\n                if (!r_postlude())\n                {\n                    break lab3;\n                }\n            } while (false);\n            cursor = v_4;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"d40ff39db4a2b90a440b97f2a7d7eda344f004ef":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d40ff39db4a2b90a440b97f2a7d7eda344f004ef"]},"commit2Childs":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["d40ff39db4a2b90a440b97f2a7d7eda344f004ef"],"d40ff39db4a2b90a440b97f2a7d7eda344f004ef":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}