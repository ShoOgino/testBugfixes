{"path":"backwards/src/test/org/apache/lucene/search/QueryUtils#checkHashEquals(Query).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/search/QueryUtils#checkHashEquals(Query).mjava","pathOld":"/dev/null","sourceNew":"  /** check very basic hashCode and equals */\n  public static void checkHashEquals(Query q) {\n    Query q2 = (Query)q.clone();\n    checkEqual(q,q2);\n\n    Query q3 = (Query)q.clone();\n    q3.setBoost(7.21792348f);\n    checkUnequal(q,q3);\n\n    // test that a class check is done so that no exception is thrown\n    // in the implementation of equals()\n    Query whacky = new Query() {\n      @Override\n      public String toString(String field) {\n        return \"My Whacky Query\";\n      }\n    };\n    whacky.setBoost(q.getBoost());\n    checkUnequal(q, whacky);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/QueryUtils#checkHashEquals(Query).mjava","pathOld":"backwards/src/test/org/apache/lucene/search/QueryUtils#checkHashEquals(Query).mjava","sourceNew":"  /** check very basic hashCode and equals */\n  public static void checkHashEquals(Query q) {\n    Query q2 = (Query)q.clone();\n    checkEqual(q,q2);\n\n    Query q3 = (Query)q.clone();\n    q3.setBoost(7.21792348f);\n    checkUnequal(q,q3);\n\n    // test that a class check is done so that no exception is thrown\n    // in the implementation of equals()\n    Query whacky = new Query() {\n      @Override\n      public String toString(String field) {\n        return \"My Whacky Query\";\n      }\n    };\n    whacky.setBoost(q.getBoost());\n    checkUnequal(q, whacky);\n  }\n\n","sourceOld":"  /** check very basic hashCode and equals */\n  public static void checkHashEquals(Query q) {\n    Query q2 = (Query)q.clone();\n    checkEqual(q,q2);\n\n    Query q3 = (Query)q.clone();\n    q3.setBoost(7.21792348f);\n    checkUnequal(q,q3);\n\n    // test that a class check is done so that no exception is thrown\n    // in the implementation of equals()\n    Query whacky = new Query() {\n      @Override\n      public String toString(String field) {\n        return \"My Whacky Query\";\n      }\n    };\n    whacky.setBoost(q.getBoost());\n    checkUnequal(q, whacky);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}