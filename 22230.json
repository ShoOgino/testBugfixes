{"path":"src/java/org/apache/lucene/document/Document#get(String).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Document#get(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the string value of the field with the given name if any exist in\n    this document, or null.  If multiple fields may exist with this name, this\n    method returns the last added such added. */\n  public final String get(String name) {\n    Field field = getField(name);\n    if (field != null)\n      return field.stringValue();\n    else\n      return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f698e1153cefa582a35d82aa8fa7316fb3c688f3","date":1036612502,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Document#get(String).mjava","pathOld":"src/java/org/apache/lucene/document/Document#get(String).mjava","sourceNew":"  /** Returns the string value of the field with the given name if any exist in\n    this document, or null.  If multiple fields exist with this name, this\n    method returns the last value added. */\n  public final String get(String name) {\n    Field field = getField(name);\n    if (field != null)\n      return field.stringValue();\n    else\n      return null;\n  }\n\n","sourceOld":"  /** Returns the string value of the field with the given name if any exist in\n    this document, or null.  If multiple fields may exist with this name, this\n    method returns the last added such added. */\n  public final String get(String name) {\n    Field field = getField(name);\n    if (field != null)\n      return field.stringValue();\n    else\n      return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32cf2e30bd45f6248722d0d19a0045a712782ebc","date":1080240435,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Document#get(String).mjava","pathOld":"src/java/org/apache/lucene/document/Document#get(String).mjava","sourceNew":"  /** Returns the string value of the field with the given name if any exist in\n   * this document, or null.  If multiple fields exist with this name, this\n   * method returns the first value added.\n   */\n  public final String get(String name) {\n    Field field = getField(name);\n    if (field != null)\n      return field.stringValue();\n    else\n      return null;\n  }\n\n","sourceOld":"  /** Returns the string value of the field with the given name if any exist in\n    this document, or null.  If multiple fields exist with this name, this\n    method returns the last value added. */\n  public final String get(String name) {\n    Field field = getField(name);\n    if (field != null)\n      return field.stringValue();\n    else\n      return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e0eacdfc94f700086189bb44f7f73ed9cfd85c75","date":1095252623,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Document#get(String).mjava","pathOld":"src/java/org/apache/lucene/document/Document#get(String).mjava","sourceNew":"  /** Returns the string value of the field with the given name if any exist in\n   * this document, or null.  If multiple fields exist with this name, this\n   * method returns the first value added. If only binary fields with this name\n   * exist, returns null.\n   */\n  public final String get(String name) {\n    for (int i = 0; i < fields.size(); i++) {\n      Field field = (Field)fields.get(i);\n      if (field.name().equals(name) && (!field.isBinary()))\n        return field.stringValue();\n    }\n    return null;\n  }\n\n","sourceOld":"  /** Returns the string value of the field with the given name if any exist in\n   * this document, or null.  If multiple fields exist with this name, this\n   * method returns the first value added.\n   */\n  public final String get(String name) {\n    Field field = getField(name);\n    if (field != null)\n      return field.stringValue();\n    else\n      return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12d40284fd9481f79444bc63bc5d13847caddd3d","date":1149902602,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Document#get(String).mjava","pathOld":"src/java/org/apache/lucene/document/Document#get(String).mjava","sourceNew":"  /** Returns the string value of the field with the given name if any exist in\n   * this document, or null.  If multiple fields exist with this name, this\n   * method returns the first value added. If only binary fields with this name\n   * exist, returns null.\n   */\n  public final String get(String name) {\n    for (int i = 0; i < fields.size(); i++) {\n      Fieldable field = (Fieldable)fields.get(i);\n      if (field.name().equals(name) && (!field.isBinary()))\n        return field.stringValue();\n    }\n    return null;\n  }\n\n","sourceOld":"  /** Returns the string value of the field with the given name if any exist in\n   * this document, or null.  If multiple fields exist with this name, this\n   * method returns the first value added. If only binary fields with this name\n   * exist, returns null.\n   */\n  public final String get(String name) {\n    for (int i = 0; i < fields.size(); i++) {\n      Field field = (Field)fields.get(i);\n      if (field.name().equals(name) && (!field.isBinary()))\n        return field.stringValue();\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a70c362dc47e16ef90835bd9d78415bdceefbd7e","date":1254561360,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Document#get(String).mjava","pathOld":"src/java/org/apache/lucene/document/Document#get(String).mjava","sourceNew":"  /** Returns the string value of the field with the given name if any exist in\n   * this document, or null.  If multiple fields exist with this name, this\n   * method returns the first value added. If only binary fields with this name\n   * exist, returns null.\n   */\n  public final String get(String name) {\n   for (Fieldable field : fields) {\n      if (field.name().equals(name) && (!field.isBinary()))\n        return field.stringValue();\n    }\n    return null;\n  }\n\n","sourceOld":"  /** Returns the string value of the field with the given name if any exist in\n   * this document, or null.  If multiple fields exist with this name, this\n   * method returns the first value added. If only binary fields with this name\n   * exist, returns null.\n   */\n  public final String get(String name) {\n    for (int i = 0; i < fields.size(); i++) {\n      Fieldable field = (Fieldable)fields.get(i);\n      if (field.name().equals(name) && (!field.isBinary()))\n        return field.stringValue();\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/document/Document#get(String).mjava","sourceNew":null,"sourceOld":"  /** Returns the string value of the field with the given name if any exist in\n   * this document, or null.  If multiple fields exist with this name, this\n   * method returns the first value added. If only binary fields with this name\n   * exist, returns null.\n   */\n  public final String get(String name) {\n   for (Fieldable field : fields) {\n      if (field.name().equals(name) && (!field.isBinary()))\n        return field.stringValue();\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a70c362dc47e16ef90835bd9d78415bdceefbd7e":["12d40284fd9481f79444bc63bc5d13847caddd3d"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f698e1153cefa582a35d82aa8fa7316fb3c688f3":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"e0eacdfc94f700086189bb44f7f73ed9cfd85c75":["32cf2e30bd45f6248722d0d19a0045a712782ebc"],"32cf2e30bd45f6248722d0d19a0045a712782ebc":["f698e1153cefa582a35d82aa8fa7316fb3c688f3"],"12d40284fd9481f79444bc63bc5d13847caddd3d":["e0eacdfc94f700086189bb44f7f73ed9cfd85c75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a70c362dc47e16ef90835bd9d78415bdceefbd7e"]},"commit2Childs":{"a70c362dc47e16ef90835bd9d78415bdceefbd7e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["f698e1153cefa582a35d82aa8fa7316fb3c688f3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"f698e1153cefa582a35d82aa8fa7316fb3c688f3":["32cf2e30bd45f6248722d0d19a0045a712782ebc"],"e0eacdfc94f700086189bb44f7f73ed9cfd85c75":["12d40284fd9481f79444bc63bc5d13847caddd3d"],"32cf2e30bd45f6248722d0d19a0045a712782ebc":["e0eacdfc94f700086189bb44f7f73ed9cfd85c75"],"12d40284fd9481f79444bc63bc5d13847caddd3d":["a70c362dc47e16ef90835bd9d78415bdceefbd7e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}