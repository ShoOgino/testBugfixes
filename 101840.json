{"path":"src/test/org/apache/lucene/index/TestNewIndexModifierDelete#testSimpleCase().mjava","commits":[{"id":"6b772434f9f358356f8eedc2e017b9ddfb2615ec","date":1170327312,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestNewIndexModifierDelete#testSimpleCase().mjava","pathOld":"/dev/null","sourceNew":"  // test the simple case\n  public void testSimpleCase() throws IOException {\n    String[] keywords = { \"1\", \"2\" };\n    String[] unindexed = { \"Netherlands\", \"Italy\" };\n    String[] unstored = { \"Amsterdam has lots of bridges\",\n        \"Venice has lots of canals\" };\n    String[] text = { \"Amsterdam\", \"Venice\" };\n\n    Directory dir = new RAMDirectory();\n    NewIndexModifier modifier = new NewIndexModifier(dir,\n        new WhitespaceAnalyzer(), true);\n    modifier.setUseCompoundFile(true);\n    modifier.setMaxBufferedDeleteTerms(1);\n\n    for (int i = 0; i < keywords.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"id\", keywords[i], Field.Store.YES,\n          Field.Index.UN_TOKENIZED));\n      doc.add(new Field(\"country\", unindexed[i], Field.Store.YES,\n          Field.Index.NO));\n      doc.add(new Field(\"contents\", unstored[i], Field.Store.NO,\n          Field.Index.TOKENIZED));\n      doc\n          .add(new Field(\"city\", text[i], Field.Store.YES,\n              Field.Index.TOKENIZED));\n      modifier.addDocument(doc);\n    }\n    modifier.optimize();\n\n    Term term = new Term(\"city\", \"Amsterdam\");\n    int hitCount = getHitCount(dir, term);\n    assertEquals(1, hitCount);\n    modifier.deleteDocuments(term);\n    hitCount = getHitCount(dir, term);\n    assertEquals(0, hitCount);\n\n    modifier.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42a18cb0bca2c4ac9747f31c7a74fac90c661f39","date":1171363388,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterDelete#testSimpleCase().mjava","pathOld":"src/test/org/apache/lucene/index/TestNewIndexModifierDelete#testSimpleCase().mjava","sourceNew":"  // test the simple case\n  public void testSimpleCase() throws IOException {\n    String[] keywords = { \"1\", \"2\" };\n    String[] unindexed = { \"Netherlands\", \"Italy\" };\n    String[] unstored = { \"Amsterdam has lots of bridges\",\n        \"Venice has lots of canals\" };\n    String[] text = { \"Amsterdam\", \"Venice\" };\n\n    Directory dir = new RAMDirectory();\n    IndexWriter modifier = new IndexWriter(dir,\n        new WhitespaceAnalyzer(), true);\n    modifier.setUseCompoundFile(true);\n    modifier.setMaxBufferedDeleteTerms(1);\n\n    for (int i = 0; i < keywords.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"id\", keywords[i], Field.Store.YES,\n          Field.Index.UN_TOKENIZED));\n      doc.add(new Field(\"country\", unindexed[i], Field.Store.YES,\n          Field.Index.NO));\n      doc.add(new Field(\"contents\", unstored[i], Field.Store.NO,\n          Field.Index.TOKENIZED));\n      doc\n          .add(new Field(\"city\", text[i], Field.Store.YES,\n              Field.Index.TOKENIZED));\n      modifier.addDocument(doc);\n    }\n    modifier.optimize();\n\n    Term term = new Term(\"city\", \"Amsterdam\");\n    int hitCount = getHitCount(dir, term);\n    assertEquals(1, hitCount);\n    modifier.deleteDocuments(term);\n    hitCount = getHitCount(dir, term);\n    assertEquals(0, hitCount);\n\n    modifier.close();\n  }\n\n","sourceOld":"  // test the simple case\n  public void testSimpleCase() throws IOException {\n    String[] keywords = { \"1\", \"2\" };\n    String[] unindexed = { \"Netherlands\", \"Italy\" };\n    String[] unstored = { \"Amsterdam has lots of bridges\",\n        \"Venice has lots of canals\" };\n    String[] text = { \"Amsterdam\", \"Venice\" };\n\n    Directory dir = new RAMDirectory();\n    NewIndexModifier modifier = new NewIndexModifier(dir,\n        new WhitespaceAnalyzer(), true);\n    modifier.setUseCompoundFile(true);\n    modifier.setMaxBufferedDeleteTerms(1);\n\n    for (int i = 0; i < keywords.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"id\", keywords[i], Field.Store.YES,\n          Field.Index.UN_TOKENIZED));\n      doc.add(new Field(\"country\", unindexed[i], Field.Store.YES,\n          Field.Index.NO));\n      doc.add(new Field(\"contents\", unstored[i], Field.Store.NO,\n          Field.Index.TOKENIZED));\n      doc\n          .add(new Field(\"city\", text[i], Field.Store.YES,\n              Field.Index.TOKENIZED));\n      modifier.addDocument(doc);\n    }\n    modifier.optimize();\n\n    Term term = new Term(\"city\", \"Amsterdam\");\n    int hitCount = getHitCount(dir, term);\n    assertEquals(1, hitCount);\n    modifier.deleteDocuments(term);\n    hitCount = getHitCount(dir, term);\n    assertEquals(0, hitCount);\n\n    modifier.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"42a18cb0bca2c4ac9747f31c7a74fac90c661f39":["6b772434f9f358356f8eedc2e017b9ddfb2615ec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["42a18cb0bca2c4ac9747f31c7a74fac90c661f39"],"6b772434f9f358356f8eedc2e017b9ddfb2615ec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"42a18cb0bca2c4ac9747f31c7a74fac90c661f39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6b772434f9f358356f8eedc2e017b9ddfb2615ec"],"6b772434f9f358356f8eedc2e017b9ddfb2615ec":["42a18cb0bca2c4ac9747f31c7a74fac90c661f39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}