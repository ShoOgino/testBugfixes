{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getBoolean(String,boolean,boolean).mjava","commits":[{"id":"687e86054415a85f912c6eaa38f995038e5c1cd8","date":1336447427,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getBoolean(String,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/BaseTokenStreamFactory#getBoolean(String,boolean,boolean).mjava","sourceNew":"  protected boolean getBoolean(String name, boolean defaultVal, boolean useDefault) {\n    String s = args.get(name);\n    if (s==null) {\n      if (useDefault) return defaultVal;\n      throw new InitializationException(\"Configuration Error: missing parameter '\" + name + \"'\");\n    }\n    return Boolean.parseBoolean(s);\n  }\n\n","sourceOld":"  protected boolean getBoolean(String name, boolean defaultVal, boolean useDefault) {\n    String s = args.get(name);\n    if (s==null) {\n      if (useDefault) return defaultVal;\n      throw new InitializationException(\"Configuration Error: missing parameter '\" + name + \"'\");\n    }\n    return Boolean.parseBoolean(s);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6f80818731469e00f54165ec94aae2db868ea05","date":1343266866,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getBoolean(String,boolean,boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getBoolean(String,boolean,boolean).mjava","sourceNew":"  protected boolean getBoolean(String name, boolean defaultVal, boolean useDefault) {\n    String s = args.get(name);\n    if (s==null) {\n      if (useDefault) return defaultVal;\n      throw new IllegalArgumentException(\"Configuration Error: missing parameter '\" + name + \"'\");\n    }\n    return Boolean.parseBoolean(s);\n  }\n\n","sourceOld":"  protected boolean getBoolean(String name, boolean defaultVal, boolean useDefault) {\n    String s = args.get(name);\n    if (s==null) {\n      if (useDefault) return defaultVal;\n      throw new InitializationException(\"Configuration Error: missing parameter '\" + name + \"'\");\n    }\n    return Boolean.parseBoolean(s);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getBoolean(String,boolean,boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getBoolean(String,boolean,boolean).mjava","sourceNew":"  protected boolean getBoolean(String name, boolean defaultVal, boolean useDefault) {\n    String s = args.get(name);\n    if (s==null) {\n      if (useDefault) return defaultVal;\n      throw new IllegalArgumentException(\"Configuration Error: missing parameter '\" + name + \"'\");\n    }\n    return Boolean.parseBoolean(s);\n  }\n\n","sourceOld":"  protected boolean getBoolean(String name, boolean defaultVal, boolean useDefault) {\n    String s = args.get(name);\n    if (s==null) {\n      if (useDefault) return defaultVal;\n      throw new InitializationException(\"Configuration Error: missing parameter '\" + name + \"'\");\n    }\n    return Boolean.parseBoolean(s);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getBoolean(String,boolean,boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getBoolean(String,boolean,boolean).mjava","sourceNew":"  protected boolean getBoolean(String name, boolean defaultVal, boolean useDefault) {\n    String s = args.get(name);\n    if (s==null) {\n      if (useDefault) return defaultVal;\n      throw new IllegalArgumentException(\"Configuration Error: missing parameter '\" + name + \"'\");\n    }\n    return Boolean.parseBoolean(s);\n  }\n\n","sourceOld":"  protected boolean getBoolean(String name, boolean defaultVal, boolean useDefault) {\n    String s = args.get(name);\n    if (s==null) {\n      if (useDefault) return defaultVal;\n      throw new InitializationException(\"Configuration Error: missing parameter '\" + name + \"'\");\n    }\n    return Boolean.parseBoolean(s);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getBoolean(Map[String,String],String,boolean,boolean).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/AbstractAnalysisFactory#getBoolean(String,boolean,boolean).mjava","sourceNew":"  protected final boolean getBoolean(Map<String,String> args, String name, boolean defaultVal, boolean useDefault) {\n    String s = args.remove(name);\n    if (s==null) {\n      if (useDefault) return defaultVal;\n      throw new IllegalArgumentException(\"Configuration Error: missing parameter '\" + name + \"'\");\n    }\n    return Boolean.parseBoolean(s);\n  }\n\n","sourceOld":"  protected boolean getBoolean(String name, boolean defaultVal, boolean useDefault) {\n    String s = args.get(name);\n    if (s==null) {\n      if (useDefault) return defaultVal;\n      throw new IllegalArgumentException(\"Configuration Error: missing parameter '\" + name + \"'\");\n    }\n    return Boolean.parseBoolean(s);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["687e86054415a85f912c6eaa38f995038e5c1cd8","f6f80818731469e00f54165ec94aae2db868ea05"],"687e86054415a85f912c6eaa38f995038e5c1cd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["687e86054415a85f912c6eaa38f995038e5c1cd8","f6f80818731469e00f54165ec94aae2db868ea05"],"f6f80818731469e00f54165ec94aae2db868ea05":["687e86054415a85f912c6eaa38f995038e5c1cd8"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["f6f80818731469e00f54165ec94aae2db868ea05"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"687e86054415a85f912c6eaa38f995038e5c1cd8":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","f6f80818731469e00f54165ec94aae2db868ea05"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["687e86054415a85f912c6eaa38f995038e5c1cd8"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"f6f80818731469e00f54165ec94aae2db868ea05":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}