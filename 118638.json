{"path":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/storage/SQLServerStorage#SQLServerStorage(String,String,String,String,int).mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/storage/SQLServerStorage#SQLServerStorage(String,String,String,String,int).mjava","pathOld":"/dev/null","sourceNew":"    public SQLServerStorage(String driver, String connectionString, String account, String password, int nrConnections)\n    {\n        try\n        {\n            Class.forName(driver);\n            freeCons = new Vector(nrConnections);\n            busyCons = new Vector(nrConnections);\n            freeStatements = new Vector(nrConnections);\n            busyStatements = new Vector(nrConnections);\n\n            Connection sqlConn;\n            PreparedStatement statement;\n            for(int i=0; i<nrConnections; i++)\n            {\n                sqlConn = DriverManager.getConnection(connectionString, account, password);\n                statement = sqlConn.prepareStatement(\"INSERT INTO Document (DO_URL, DO_MimeType, DO_Data2) VALUES (?,?,?)\");\n                freeCons.add(sqlConn);\n                freeStatements.add(statement);\n            }\n\n\n\n        }\n        catch(SQLException e)\n        {\n            synchronized(this)\n            {\n                System.out.println(/*\"Task \" + taskNr + \": */ \"SQLException: \" + e.getMessage());\n                System.err.println(\"       SQLState:     \" + e.getSQLState());\n                System.err.println(\"       VendorError:  \" + e.getErrorCode());\n            }\n            return;\n        }\n\n        catch(Exception e)\n        {\n            System.out.println(\"SQLServerStorage: \" + e.getClass().getName() + \": \" + e.getMessage());\n            e.printStackTrace();\n            System.exit(0);\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/storage/SQLServerStorage#SQLServerStorage(String,String,String,String,int).mjava","sourceNew":null,"sourceOld":"    public SQLServerStorage(String driver, String connectionString, String account, String password, int nrConnections)\n    {\n        try\n        {\n            Class.forName(driver);\n            freeCons = new Vector(nrConnections);\n            busyCons = new Vector(nrConnections);\n            freeStatements = new Vector(nrConnections);\n            busyStatements = new Vector(nrConnections);\n\n            Connection sqlConn;\n            PreparedStatement statement;\n            for(int i=0; i<nrConnections; i++)\n            {\n                sqlConn = DriverManager.getConnection(connectionString, account, password);\n                statement = sqlConn.prepareStatement(\"INSERT INTO Document (DO_URL, DO_MimeType, DO_Data2) VALUES (?,?,?)\");\n                freeCons.add(sqlConn);\n                freeStatements.add(statement);\n            }\n\n\n\n        }\n        catch(SQLException e)\n        {\n            synchronized(this)\n            {\n                System.out.println(/*\"Task \" + taskNr + \": */ \"SQLException: \" + e.getMessage());\n                System.err.println(\"       SQLState:     \" + e.getSQLState());\n                System.err.println(\"       VendorError:  \" + e.getErrorCode());\n            }\n            return;\n        }\n\n        catch(Exception e)\n        {\n            System.out.println(\"SQLServerStorage: \" + e.getClass().getName() + \": \" + e.getMessage());\n            e.printStackTrace();\n            System.exit(0);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["05d36e0b328ec96237035fbcca240e73631396e5"],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05d36e0b328ec96237035fbcca240e73631396e5":["afc16d717d9ed1a8e45371668ca6de674164d624"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}