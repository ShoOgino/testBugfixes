{"path":"solr/core/src/java/org/apache/solr/update/processor/SkipExistingDocumentsProcessorFactory.SkipExistingDocumentsUpdateProcessor#SkipExistingDocumentsUpdateProcessor(SolrQueryRequest,UpdateRequestProcessor,boolean,boolean).mjava","commits":[{"id":"e1915a2721a80afb07f9d36cd3108d22a1dfbf7a","date":1484102913,"type":0,"author":"koji","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/SkipExistingDocumentsProcessorFactory.SkipExistingDocumentsUpdateProcessor#SkipExistingDocumentsUpdateProcessor(SolrQueryRequest,UpdateRequestProcessor,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"    SkipExistingDocumentsUpdateProcessor(SolrQueryRequest req,\n                                         UpdateRequestProcessor next,\n                                         boolean skipInsertIfExists,\n                                         boolean skipUpdateIfMissing) {\n      super(next);\n      this.skipInsertIfExists = skipInsertIfExists;\n      this.skipUpdateIfMissing = skipUpdateIfMissing;\n      this.core = req.getCore();\n\n      for (UpdateRequestProcessor proc = next ;proc != null; proc = proc.next) {\n        if (proc instanceof DistributedUpdateProcessor) {\n          distribProc = (DistributedUpdateProcessor)proc;\n          break;\n        }\n      }\n\n      if (distribProc == null) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"DistributedUpdateProcessor must follow SkipExistingDocumentsUpdateProcessor\");\n      }\n\n      phase = DistributedUpdateProcessor.DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/SkipExistingDocumentsProcessorFactory.SkipExistingDocumentsUpdateProcessor#SkipExistingDocumentsUpdateProcessor(SolrQueryRequest,UpdateRequestProcessor,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"    SkipExistingDocumentsUpdateProcessor(SolrQueryRequest req,\n                                         UpdateRequestProcessor next,\n                                         boolean skipInsertIfExists,\n                                         boolean skipUpdateIfMissing) {\n      super(next);\n      this.skipInsertIfExists = skipInsertIfExists;\n      this.skipUpdateIfMissing = skipUpdateIfMissing;\n      this.core = req.getCore();\n\n      for (UpdateRequestProcessor proc = next ;proc != null; proc = proc.next) {\n        if (proc instanceof DistributedUpdateProcessor) {\n          distribProc = (DistributedUpdateProcessor)proc;\n          break;\n        }\n      }\n\n      if (distribProc == null) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"DistributedUpdateProcessor must follow SkipExistingDocumentsUpdateProcessor\");\n      }\n\n      phase = DistributedUpdateProcessor.DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e1915a2721a80afb07f9d36cd3108d22a1dfbf7a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e1915a2721a80afb07f9d36cd3108d22a1dfbf7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e1915a2721a80afb07f9d36cd3108d22a1dfbf7a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e1915a2721a80afb07f9d36cd3108d22a1dfbf7a","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"e1915a2721a80afb07f9d36cd3108d22a1dfbf7a":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}