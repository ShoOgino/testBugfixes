{"path":"lucene/core/src/java/org/apache/lucene/index/DocTermOrds.TermOrdsIterator#reset(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocTermOrds.TermOrdsIterator#reset(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocTermOrds.TermOrdsIterator#reset(int).mjava","sourceNew":"    public TermOrdsIterator reset(int docID) {\n      //System.out.println(\"  reset docID=\" + docID);\n      tnum = 0;\n      final int code = index[docID];\n      if ((code & 0xff)==1) {\n        // a pointer\n        upto = code>>>8;\n        //System.out.println(\"    pointer!  upto=\" + upto);\n        int whichArray = (docID >>> 16) & 0xff;\n        arr = tnums[whichArray];\n      } else {\n        //System.out.println(\"    inline!\");\n        arr = null;\n        upto = code;\n      }\n      return this;\n    }\n\n","sourceOld":"    public TermOrdsIterator reset(int docID) {\n      //System.out.println(\"  reset docID=\" + docID);\n      tnum = 0;\n      final int code = index[docID];\n      if ((code & 0xff)==1) {\n        // a pointer\n        upto = code>>>8;\n        //System.out.println(\"    pointer!  upto=\" + upto);\n        int whichArray = (docID >>> 16) & 0xff;\n        arr = tnums[whichArray];\n      } else {\n        //System.out.println(\"    inline!\");\n        arr = null;\n        upto = code;\n      }\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c14aed69f37b57db63b1fccc0740b17060a08f2b","date":1348227091,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocTermOrds.TermOrdsIterator#reset(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocTermOrds.TermOrdsIterator#reset(int).mjava","sourceNew":"    /** Reset the iterator on a new document. */\n    public TermOrdsIterator reset(int docID) {\n      //System.out.println(\"  reset docID=\" + docID);\n      tnum = 0;\n      final int code = index[docID];\n      if ((code & 0xff)==1) {\n        // a pointer\n        upto = code>>>8;\n        //System.out.println(\"    pointer!  upto=\" + upto);\n        int whichArray = (docID >>> 16) & 0xff;\n        arr = tnums[whichArray];\n      } else {\n        //System.out.println(\"    inline!\");\n        arr = null;\n        upto = code;\n      }\n      return this;\n    }\n\n","sourceOld":"    public TermOrdsIterator reset(int docID) {\n      //System.out.println(\"  reset docID=\" + docID);\n      tnum = 0;\n      final int code = index[docID];\n      if ((code & 0xff)==1) {\n        // a pointer\n        upto = code>>>8;\n        //System.out.println(\"    pointer!  upto=\" + upto);\n        int whichArray = (docID >>> 16) & 0xff;\n        arr = tnums[whichArray];\n      } else {\n        //System.out.println(\"    inline!\");\n        arr = null;\n        upto = code;\n      }\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44e56f421c9a4407f8bef7c459b9e747ab3a62c4","date":1361044622,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocTermOrds.TermOrdsIterator#reset(int).mjava","sourceNew":null,"sourceOld":"    /** Reset the iterator on a new document. */\n    public TermOrdsIterator reset(int docID) {\n      //System.out.println(\"  reset docID=\" + docID);\n      tnum = 0;\n      final int code = index[docID];\n      if ((code & 0xff)==1) {\n        // a pointer\n        upto = code>>>8;\n        //System.out.println(\"    pointer!  upto=\" + upto);\n        int whichArray = (docID >>> 16) & 0xff;\n        arr = tnums[whichArray];\n      } else {\n        //System.out.println(\"    inline!\");\n        arr = null;\n        upto = code;\n      }\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddbb72a33557d2b5bc22ee95daf3281c43560502","date":1361334582,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocTermOrds.Iterator#setDocument(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocTermOrds.TermOrdsIterator#reset(int).mjava","sourceNew":"    @Override\n    public void setDocument(int docID) {\n      tnum = 0;\n      final int code = index[docID];\n      if ((code & 0xff)==1) {\n        // a pointer\n        upto = code>>>8;\n        //System.out.println(\"    pointer!  upto=\" + upto);\n        int whichArray = (docID >>> 16) & 0xff;\n        arr = tnums[whichArray];\n      } else {\n        //System.out.println(\"    inline!\");\n        arr = null;\n        upto = code;\n      }\n      bufferUpto = 0;\n      bufferLength = read(buffer);\n    }\n\n","sourceOld":"    /** Reset the iterator on a new document. */\n    public TermOrdsIterator reset(int docID) {\n      //System.out.println(\"  reset docID=\" + docID);\n      tnum = 0;\n      final int code = index[docID];\n      if ((code & 0xff)==1) {\n        // a pointer\n        upto = code>>>8;\n        //System.out.println(\"    pointer!  upto=\" + upto);\n        int whichArray = (docID >>> 16) & 0xff;\n        arr = tnums[whichArray];\n      } else {\n        //System.out.println(\"    inline!\");\n        arr = null;\n        upto = code;\n      }\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"44e56f421c9a4407f8bef7c459b9e747ab3a62c4":["c14aed69f37b57db63b1fccc0740b17060a08f2b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["c14aed69f37b57db63b1fccc0740b17060a08f2b","44e56f421c9a4407f8bef7c459b9e747ab3a62c4"],"c14aed69f37b57db63b1fccc0740b17060a08f2b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddbb72a33557d2b5bc22ee95daf3281c43560502"]},"commit2Childs":{"44e56f421c9a4407f8bef7c459b9e747ab3a62c4":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c14aed69f37b57db63b1fccc0740b17060a08f2b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c14aed69f37b57db63b1fccc0740b17060a08f2b":["44e56f421c9a4407f8bef7c459b9e747ab3a62c4","ddbb72a33557d2b5bc22ee95daf3281c43560502"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}