{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/BitVector#write(Directory,String,IOContext).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/BitVector#write(Directory,String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/BitVector#write(Directory,String,IOContext).mjava","sourceNew":"  /** Writes this vector to the file <code>name</code> in Directory\n    <code>d</code>, in a format that can be read by the constructor {@link\n    #BitVector(Directory, String, IOContext)}.  */\n  public final void write(Directory d, String name, IOContext context) throws IOException {\n    assert !(d instanceof CompoundFileDirectory);\n    IndexOutput output = d.createOutput(name, context);\n    try {\n      output.writeInt(-2);\n      CodecUtil.writeHeader(output, CODEC, VERSION_CURRENT);\n      if (isSparse()) { \n        // sparse bit-set more efficiently saved as d-gaps.\n        writeClearedDgaps(output);\n      } else {\n        writeBits(output);\n      }\n      assert verifyCount();\n    } finally {\n      output.close();\n    }\n  }\n\n","sourceOld":"  /** Writes this vector to the file <code>name</code> in Directory\n    <code>d</code>, in a format that can be read by the constructor {@link\n    #BitVector(Directory, String, IOContext)}.  */\n  public final void write(Directory d, String name, IOContext context) throws IOException {\n    assert !(d instanceof CompoundFileDirectory);\n    IndexOutput output = d.createOutput(name, context);\n    try {\n      output.writeInt(-2);\n      CodecUtil.writeHeader(output, CODEC, VERSION_CURRENT);\n      if (isSparse()) { \n        // sparse bit-set more efficiently saved as d-gaps.\n        writeClearedDgaps(output);\n      } else {\n        writeBits(output);\n      }\n      assert verifyCount();\n    } finally {\n      output.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"479fba77febd29e498fc4a430359e4cf88341da7","date":1357213856,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/BitVector#write(Directory,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/BitVector#write(Directory,String,IOContext).mjava","sourceNew":"  /** Writes this vector to the file <code>name</code> in Directory\n    <code>d</code>, in a format that can be read by the constructor {@link\n    #BitVector(Directory, String, IOContext)}.  */\n  public final void write(Directory d, String name, IOContext context) throws IOException {\n    assert !(d instanceof CompoundFileDirectory);\n    IndexOutput output = d.createOutput(name, context);\n    try {\n      output.writeInt(-2);\n      CodecUtil.writeHeader(output, CODEC, VERSION_CURRENT);\n      if (isSparse()) { \n        // sparse bit-set more efficiently saved as d-gaps.\n        writeClearedDgaps(output);\n      } else {\n        writeBits(output);\n      }\n      assert verifyCount();\n    } finally {\n      IOUtils.close(output);\n    }\n  }\n\n","sourceOld":"  /** Writes this vector to the file <code>name</code> in Directory\n    <code>d</code>, in a format that can be read by the constructor {@link\n    #BitVector(Directory, String, IOContext)}.  */\n  public final void write(Directory d, String name, IOContext context) throws IOException {\n    assert !(d instanceof CompoundFileDirectory);\n    IndexOutput output = d.createOutput(name, context);\n    try {\n      output.writeInt(-2);\n      CodecUtil.writeHeader(output, CODEC, VERSION_CURRENT);\n      if (isSparse()) { \n        // sparse bit-set more efficiently saved as d-gaps.\n        writeClearedDgaps(output);\n      } else {\n        writeBits(output);\n      }\n      assert verifyCount();\n    } finally {\n      output.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":["9a70ce9bddc6f985feb8e5e182aebe20872328d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/BitVector#write(Directory,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/BitVector#write(Directory,String,IOContext).mjava","sourceNew":"  /** Writes this vector to the file <code>name</code> in Directory\n    <code>d</code>, in a format that can be read by the constructor {@link\n    #BitVector(Directory, String, IOContext)}.  */\n  public final void write(Directory d, String name, IOContext context) throws IOException {\n    assert !(d instanceof CompoundFileDirectory);\n    IndexOutput output = d.createOutput(name, context);\n    try {\n      output.writeInt(-2);\n      CodecUtil.writeHeader(output, CODEC, VERSION_CURRENT);\n      if (isSparse()) { \n        // sparse bit-set more efficiently saved as d-gaps.\n        writeClearedDgaps(output);\n      } else {\n        writeBits(output);\n      }\n      assert verifyCount();\n    } finally {\n      IOUtils.close(output);\n    }\n  }\n\n","sourceOld":"  /** Writes this vector to the file <code>name</code> in Directory\n    <code>d</code>, in a format that can be read by the constructor {@link\n    #BitVector(Directory, String, IOContext)}.  */\n  public final void write(Directory d, String name, IOContext context) throws IOException {\n    assert !(d instanceof CompoundFileDirectory);\n    IndexOutput output = d.createOutput(name, context);\n    try {\n      output.writeInt(-2);\n      CodecUtil.writeHeader(output, CODEC, VERSION_CURRENT);\n      if (isSparse()) { \n        // sparse bit-set more efficiently saved as d-gaps.\n        writeClearedDgaps(output);\n      } else {\n        writeBits(output);\n      }\n      assert verifyCount();\n    } finally {\n      output.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/BitVector#write(Directory,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/BitVector#write(Directory,String,IOContext).mjava","sourceNew":"  /** Writes this vector to the file <code>name</code> in Directory\n    <code>d</code>, in a format that can be read by the constructor {@link\n    #BitVector(Directory, String, IOContext)}.  */\n  public final void write(Directory d, String name, IOContext context) throws IOException {\n    assert !(d instanceof CompoundFileDirectory);\n    IndexOutput output = d.createOutput(name, context);\n    try {\n      output.writeInt(-2);\n      CodecUtil.writeHeader(output, CODEC, VERSION_CURRENT);\n      if (isSparse()) { \n        // sparse bit-set more efficiently saved as d-gaps.\n        writeClearedDgaps(output);\n      } else {\n        writeBits(output);\n      }\n      CodecUtil.writeFooter(output);\n      assert verifyCount();\n    } finally {\n      IOUtils.close(output);\n    }\n  }\n\n","sourceOld":"  /** Writes this vector to the file <code>name</code> in Directory\n    <code>d</code>, in a format that can be read by the constructor {@link\n    #BitVector(Directory, String, IOContext)}.  */\n  public final void write(Directory d, String name, IOContext context) throws IOException {\n    assert !(d instanceof CompoundFileDirectory);\n    IndexOutput output = d.createOutput(name, context);\n    try {\n      output.writeInt(-2);\n      CodecUtil.writeHeader(output, CODEC, VERSION_CURRENT);\n      if (isSparse()) { \n        // sparse bit-set more efficiently saved as d-gaps.\n        writeClearedDgaps(output);\n      } else {\n        writeBits(output);\n      }\n      assert verifyCount();\n    } finally {\n      IOUtils.close(output);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/BitVector#write(Directory,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/BitVector#write(Directory,String,IOContext).mjava","sourceNew":"  /** Writes this vector to the file <code>name</code> in Directory\n    <code>d</code>, in a format that can be read by the constructor {@link\n    #BitVector(Directory, String, IOContext)}.  */\n  public final void write(Directory d, String name, IOContext context) throws IOException {\n    assert !(d instanceof CompoundFileDirectory);\n    IndexOutput output = d.createOutput(name, context);\n    try {\n      output.writeInt(-2);\n      CodecUtil.writeHeader(output, CODEC, VERSION_CURRENT);\n      if (isSparse()) { \n        // sparse bit-set more efficiently saved as d-gaps.\n        writeClearedDgaps(output);\n      } else {\n        writeBits(output);\n      }\n      CodecUtil.writeFooter(output);\n      assert verifyCount();\n    } finally {\n      IOUtils.close(output);\n    }\n  }\n\n","sourceOld":"  /** Writes this vector to the file <code>name</code> in Directory\n    <code>d</code>, in a format that can be read by the constructor {@link\n    #BitVector(Directory, String, IOContext)}.  */\n  public final void write(Directory d, String name, IOContext context) throws IOException {\n    assert !(d instanceof CompoundFileDirectory);\n    IndexOutput output = d.createOutput(name, context);\n    try {\n      output.writeInt(-2);\n      CodecUtil.writeHeader(output, CODEC, VERSION_CURRENT);\n      if (isSparse()) { \n        // sparse bit-set more efficiently saved as d-gaps.\n        writeClearedDgaps(output);\n      } else {\n        writeBits(output);\n      }\n      assert verifyCount();\n    } finally {\n      IOUtils.close(output);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a70ce9bddc6f985feb8e5e182aebe20872328d4","date":1411172748,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/BitVector#write(Directory,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/BitVector#write(Directory,String,IOContext).mjava","sourceNew":"  /** Writes this vector to the file <code>name</code> in Directory\n    <code>d</code>, in a format that can be read by the constructor {@link\n    #BitVector(Directory, String, IOContext)}.  */\n  public final void write(Directory d, String name, IOContext context) throws IOException {\n    assert !(d instanceof CompoundFileDirectory);\n    try (IndexOutput output = d.createOutput(name, context)) {\n      output.writeInt(-2);\n      CodecUtil.writeHeader(output, CODEC, VERSION_CURRENT);\n      if (isSparse()) { \n        // sparse bit-set more efficiently saved as d-gaps.\n        writeClearedDgaps(output);\n      } else {\n        writeBits(output);\n      }\n      CodecUtil.writeFooter(output);\n      assert verifyCount();\n    }\n  }\n\n","sourceOld":"  /** Writes this vector to the file <code>name</code> in Directory\n    <code>d</code>, in a format that can be read by the constructor {@link\n    #BitVector(Directory, String, IOContext)}.  */\n  public final void write(Directory d, String name, IOContext context) throws IOException {\n    assert !(d instanceof CompoundFileDirectory);\n    IndexOutput output = d.createOutput(name, context);\n    try {\n      output.writeInt(-2);\n      CodecUtil.writeHeader(output, CODEC, VERSION_CURRENT);\n      if (isSparse()) { \n        // sparse bit-set more efficiently saved as d-gaps.\n        writeClearedDgaps(output);\n      } else {\n        writeBits(output);\n      }\n      CodecUtil.writeFooter(output);\n      assert verifyCount();\n    } finally {\n      IOUtils.close(output);\n    }\n  }\n\n","bugFix":["91109046a59c58ee0ee5d0d2767b08d1f30d6702","479fba77febd29e498fc4a430359e4cf88341da7","639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b11b097f011a298f1a54676482032c2b261e26f3","date":1411698138,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/BitVector#write(Directory,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/BitVector#write(Directory,String,IOContext).mjava","sourceNew":"  /** Writes this vector to the file <code>name</code> in Directory\n    <code>d</code>, in a format that can be read by the constructor {@link\n    #BitVector(Directory, String, IOContext)}.  */\n  public final void write(Directory d, String name, IOContext context) throws IOException {\n    assert !(d instanceof CompoundFileDirectory);\n    try (IndexOutput output = d.createOutput(name, context)) {\n      output.writeInt(-2);\n      CodecUtil.writeHeader(output, CODEC, VERSION_CURRENT);\n      if (isSparse()) { \n        // sparse bit-set more efficiently saved as d-gaps.\n        writeClearedDgaps(output);\n      } else {\n        writeBits(output);\n      }\n      CodecUtil.writeFooter(output);\n      assert verifyCount();\n    }\n  }\n\n","sourceOld":"  /** Writes this vector to the file <code>name</code> in Directory\n    <code>d</code>, in a format that can be read by the constructor {@link\n    #BitVector(Directory, String, IOContext)}.  */\n  public final void write(Directory d, String name, IOContext context) throws IOException {\n    assert !(d instanceof CompoundFileDirectory);\n    try (IndexOutput output = d.createOutput(name, context)) {\n      output.writeInt(-2);\n      CodecUtil.writeHeader(output, CODEC, VERSION_CURRENT);\n      if (isSparse()) { \n        // sparse bit-set more efficiently saved as d-gaps.\n        writeClearedDgaps(output);\n      } else {\n        writeBits(output);\n      }\n      CodecUtil.writeFooter(output);\n      assert verifyCount();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f6bd27530a2846413fe2d00030493c0e2d3a072","date":1411811855,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/BitVector#write(Directory,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/BitVector#write(Directory,String,IOContext).mjava","sourceNew":"  /** Writes this vector to the file <code>name</code> in Directory\n    <code>d</code>, in a format that can be read by the constructor {@link\n    #BitVector(Directory, String, IOContext)}.  */\n  public final void write(Directory d, String name, IOContext context) throws IOException {\n    assert !(d instanceof CompoundFileDirectory);\n    try (IndexOutput output = d.createOutput(name, context)) {\n      output.writeInt(-2);\n      CodecUtil.writeHeader(output, CODEC, VERSION_CURRENT);\n      if (isSparse()) { \n        // sparse bit-set more efficiently saved as d-gaps.\n        writeClearedDgaps(output);\n      } else {\n        writeBits(output);\n      }\n      CodecUtil.writeFooter(output);\n      assert verifyCount();\n    }\n  }\n\n","sourceOld":"  /** Writes this vector to the file <code>name</code> in Directory\n    <code>d</code>, in a format that can be read by the constructor {@link\n    #BitVector(Directory, String, IOContext)}.  */\n  public final void write(Directory d, String name, IOContext context) throws IOException {\n    assert !(d instanceof CompoundFileDirectory);\n    try (IndexOutput output = d.createOutput(name, context)) {\n      output.writeInt(-2);\n      CodecUtil.writeHeader(output, CODEC, VERSION_CURRENT);\n      if (isSparse()) { \n        // sparse bit-set more efficiently saved as d-gaps.\n        writeClearedDgaps(output);\n      } else {\n        writeBits(output);\n      }\n      CodecUtil.writeFooter(output);\n      assert verifyCount();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["479fba77febd29e498fc4a430359e4cf88341da7","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","479fba77febd29e498fc4a430359e4cf88341da7"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["479fba77febd29e498fc4a430359e4cf88341da7"],"9a70ce9bddc6f985feb8e5e182aebe20872328d4":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["9a70ce9bddc6f985feb8e5e182aebe20872328d4","b11b097f011a298f1a54676482032c2b261e26f3"],"479fba77febd29e498fc4a430359e4cf88341da7":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b11b097f011a298f1a54676482032c2b261e26f3":["9a70ce9bddc6f985feb8e5e182aebe20872328d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5f6bd27530a2846413fe2d00030493c0e2d3a072"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","9a70ce9bddc6f985feb8e5e182aebe20872328d4"],"9a70ce9bddc6f985feb8e5e182aebe20872328d4":["5f6bd27530a2846413fe2d00030493c0e2d3a072","b11b097f011a298f1a54676482032c2b261e26f3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","479fba77febd29e498fc4a430359e4cf88341da7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"479fba77febd29e498fc4a430359e4cf88341da7":["5eb2511ababf862ea11e10761c70ee560cd84510","d3fcb70cf561547c7bb1506e0cf32ca7b1287064","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"b11b097f011a298f1a54676482032c2b261e26f3":["5f6bd27530a2846413fe2d00030493c0e2d3a072"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}