{"path":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#expectedShardsAndActiveReplicas(int,int).mjava","commits":[{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#expectedShardsAndActiveReplicas(int,int).mjava","pathOld":"/dev/null","sourceNew":"  public static CollectionStatePredicate expectedShardsAndActiveReplicas(int expectedShards, int expectedReplicas) {\n    return (liveNodes, collectionState) -> {\n      if (collectionState == null)\n        return false;\n      if (collectionState.getSlices().size() != expectedShards) {\n        return false;\n      }\n      \n      int activeReplicas = 0;\n      for (Slice slice : collectionState) {\n        for (Replica replica : slice) {\n          if (replica.isActive(liveNodes)) {\n            activeReplicas++;\n          }\n        }\n      }\n      if (activeReplicas == expectedReplicas) {\n        return true;\n      }\n      \n      return false;\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b348431b834ecbda752134f7d345c754e283815","date":1567051312,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#expectedShardsAndActiveReplicas(int,int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#expectedShardsAndActiveReplicas(int,int).mjava","sourceNew":"  public static CollectionStatePredicate expectedShardsAndActiveReplicas(int expectedShards, int expectedReplicas) {\n    return (liveNodes, collectionState) -> {\n      if (collectionState == null)\n        return false;\n      if (collectionState.getSlices().size() != expectedShards) {\n        return false;\n      }\n      \n      int activeReplicas = 0;\n      for (Slice slice : collectionState) {\n        for (Replica replica : slice) {\n          if (replica.isActive(liveNodes)) {\n            activeReplicas++;\n          }\n        }\n      }\n      if (activeReplicas == expectedReplicas) {\n        return true;\n      }\n\n      return false;\n    };\n  }\n\n","sourceOld":"  public static CollectionStatePredicate expectedShardsAndActiveReplicas(int expectedShards, int expectedReplicas) {\n    return (liveNodes, collectionState) -> {\n      if (collectionState == null)\n        return false;\n      if (collectionState.getSlices().size() != expectedShards) {\n        return false;\n      }\n      \n      int activeReplicas = 0;\n      for (Slice slice : collectionState) {\n        for (Replica replica : slice) {\n          if (replica.isActive(liveNodes)) {\n            activeReplicas++;\n          }\n        }\n      }\n      if (activeReplicas == expectedReplicas) {\n        return true;\n      }\n      \n      return false;\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3b348431b834ecbda752134f7d345c754e283815":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b348431b834ecbda752134f7d345c754e283815"]},"commit2Childs":{"3b348431b834ecbda752134f7d345c754e283815":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["3b348431b834ecbda752134f7d345c754e283815"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}