{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#getNextSafeDouble(double).mjava","commits":[{"id":"4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9","date":1459984736,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#getNextSafeDouble(double).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns a double value >= x such that if you multiply that value by an int, and then\n   *  divide it by that int again, you get precisely the same value back */\n  private static double getNextSafeDouble(double x) {\n\n    // Move to double space:\n    long bits = Double.doubleToLongBits(x);\n\n    // Make sure we are beyond the actual maximum value:\n    bits += Integer.MAX_VALUE;\n\n    // Clear the bottom 32 bits:\n    bits &= ~((long) Integer.MAX_VALUE);\n\n    // Convert back to double:\n    double result = Double.longBitsToDouble(bits);\n    assert result > x;\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5911e43da0a397d56198dce934a4091dc30a0c97","date":1460069327,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#getNextSafeDouble(double).mjava","sourceNew":null,"sourceOld":"  /** Returns a double value >= x such that if you multiply that value by an int, and then\n   *  divide it by that int again, you get precisely the same value back */\n  private static double getNextSafeDouble(double x) {\n\n    // Move to double space:\n    long bits = Double.doubleToLongBits(x);\n\n    // Make sure we are beyond the actual maximum value:\n    bits += Integer.MAX_VALUE;\n\n    // Clear the bottom 32 bits:\n    bits &= ~((long) Integer.MAX_VALUE);\n\n    // Convert back to double:\n    double result = Double.longBitsToDouble(bits);\n    assert result > x;\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#getNextSafeDouble(double).mjava","sourceNew":null,"sourceOld":"  /** Returns a double value >= x such that if you multiply that value by an int, and then\n   *  divide it by that int again, you get precisely the same value back */\n  private static double getNextSafeDouble(double x) {\n\n    // Move to double space:\n    long bits = Double.doubleToLongBits(x);\n\n    // Make sure we are beyond the actual maximum value:\n    bits += Integer.MAX_VALUE;\n\n    // Clear the bottom 32 bits:\n    bits &= ~((long) Integer.MAX_VALUE);\n\n    // Convert back to double:\n    double result = Double.longBitsToDouble(bits);\n    assert result > x;\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17ccf2dc08bf23a048cb9c7326eb957586a86cd5","date":1465078564,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#getNextSafeDouble(double).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns a double value >= x such that if you multiply that value by an int, and then\n   *  divide it by that int again, you get precisely the same value back */\n  private static double getNextSafeDouble(double x) {\n\n    // Move to double space:\n    long bits = Double.doubleToLongBits(x);\n\n    // Make sure we are beyond the actual maximum value:\n    bits += Integer.MAX_VALUE;\n\n    // Clear the bottom 32 bits:\n    bits &= ~((long) Integer.MAX_VALUE);\n\n    // Convert back to double:\n    double result = Double.longBitsToDouble(bits);\n    assert result > x;\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#getNextSafeDouble(double).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns a double value >= x such that if you multiply that value by an int, and then\n   *  divide it by that int again, you get precisely the same value back */\n  private static double getNextSafeDouble(double x) {\n\n    // Move to double space:\n    long bits = Double.doubleToLongBits(x);\n\n    // Make sure we are beyond the actual maximum value:\n    bits += Integer.MAX_VALUE;\n\n    // Clear the bottom 32 bits:\n    bits &= ~((long) Integer.MAX_VALUE);\n\n    // Convert back to double:\n    double result = Double.longBitsToDouble(bits);\n    assert result > x;\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a","date":1583186777,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/PlanetModel#getNextSafeDouble(double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#getNextSafeDouble(double).mjava","sourceNew":"  /** Returns a double value >= x such that if you multiply that value by an int, and then\n   *  divide it by that int again, you get precisely the same value back */\n  private static double getNextSafeDouble(double x) {\n\n    // Move to double space:\n    long bits = Double.doubleToLongBits(x);\n\n    // Make sure we are beyond the actual maximum value:\n    bits += Integer.MAX_VALUE;\n\n    // Clear the bottom 32 bits:\n    bits &= ~((long) Integer.MAX_VALUE);\n\n    // Convert back to double:\n    double result = Double.longBitsToDouble(bits);\n    assert result >= x;\n    return result;\n  }\n\n","sourceOld":"  /** Returns a double value >= x such that if you multiply that value by an int, and then\n   *  divide it by that int again, you get precisely the same value back */\n  private static double getNextSafeDouble(double x) {\n\n    // Move to double space:\n    long bits = Double.doubleToLongBits(x);\n\n    // Make sure we are beyond the actual maximum value:\n    bits += Integer.MAX_VALUE;\n\n    // Clear the bottom 32 bits:\n    bits &= ~((long) Integer.MAX_VALUE);\n\n    // Convert back to double:\n    double result = Double.longBitsToDouble(bits);\n    assert result > x;\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"17ccf2dc08bf23a048cb9c7326eb957586a86cd5":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9","5911e43da0a397d56198dce934a4091dc30a0c97"],"5911e43da0a397d56198dce934a4091dc30a0c97":["4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["17ccf2dc08bf23a048cb9c7326eb957586a86cd5"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","17ccf2dc08bf23a048cb9c7326eb957586a86cd5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"]},"commit2Childs":{"4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","5911e43da0a397d56198dce934a4091dc30a0c97"],"17ccf2dc08bf23a048cb9c7326eb957586a86cd5":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d3a37d877793d2b7b46b7d8b0b0319d65f7d2a9"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["17ccf2dc08bf23a048cb9c7326eb957586a86cd5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"5911e43da0a397d56198dce934a4091dc30a0c97":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}