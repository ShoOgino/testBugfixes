{"path":"lucene/src/java/org/apache/lucene/index/StoredFieldsConsumer#finishDocument().mjava","commits":[{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/StoredFieldsConsumer#finishDocument().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#finishDocument().mjava","sourceNew":"  void finishDocument() throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n\n    initFieldsWriter(IOContext.DEFAULT);\n    fill(docState.docID);\n\n    if (fieldsWriter != null && numStoredFields > 0) {\n      fieldsWriter.startDocument(numStoredFields);\n      for (int i = 0; i < numStoredFields; i++) {\n        fieldsWriter.writeField(fieldNumbers[i], storedFields[i]);\n      }\n      lastDocID++;\n    }\n\n    reset();\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","sourceOld":"  void finishDocument() throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n\n    initFieldsWriter(IOContext.DEFAULT);\n    fill(docState.docID);\n\n    if (fieldsWriter != null && numStoredFields > 0) {\n      fieldsWriter.startDocument(numStoredFields);\n      for (int i = 0; i < numStoredFields; i++) {\n        fieldsWriter.writeField(fieldNumbers[i], storedFields[i]);\n      }\n      lastDocID++;\n    }\n\n    reset();\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/StoredFieldsConsumer#finishDocument().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/StoredFieldsConsumer#finishDocument().mjava","sourceNew":"  void finishDocument() throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n\n    initFieldsWriter(IOContext.DEFAULT);\n    fill(docState.docID);\n\n    if (fieldsWriter != null && numStoredFields > 0) {\n      fieldsWriter.startDocument(numStoredFields);\n      for (int i = 0; i < numStoredFields; i++) {\n        fieldsWriter.writeField(fieldInfos[i], storedFields[i]);\n      }\n      lastDocID++;\n    }\n\n    reset();\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","sourceOld":"  void finishDocument() throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n\n    initFieldsWriter(IOContext.DEFAULT);\n    fill(docState.docID);\n\n    if (fieldsWriter != null && numStoredFields > 0) {\n      fieldsWriter.startDocument(numStoredFields);\n      for (int i = 0; i < numStoredFields; i++) {\n        fieldsWriter.writeField(fieldNumbers[i], storedFields[i]);\n      }\n      lastDocID++;\n    }\n\n    reset();\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#finishDocument().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/StoredFieldsConsumer#finishDocument().mjava","sourceNew":"  void finishDocument() throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n\n    initFieldsWriter(IOContext.DEFAULT);\n    fill(docState.docID);\n\n    if (fieldsWriter != null && numStoredFields > 0) {\n      fieldsWriter.startDocument(numStoredFields);\n      for (int i = 0; i < numStoredFields; i++) {\n        fieldsWriter.writeField(fieldInfos[i], storedFields[i]);\n      }\n      lastDocID++;\n    }\n\n    reset();\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","sourceOld":"  void finishDocument() throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n\n    initFieldsWriter(IOContext.DEFAULT);\n    fill(docState.docID);\n\n    if (fieldsWriter != null && numStoredFields > 0) {\n      fieldsWriter.startDocument(numStoredFields);\n      for (int i = 0; i < numStoredFields; i++) {\n        fieldsWriter.writeField(fieldInfos[i], storedFields[i]);\n      }\n      lastDocID++;\n    }\n\n    reset();\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3cc749c053615f5871f3b95715fe292f34e70a53"],"06584e6e98d592b34e1329b384182f368d2025e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["06584e6e98d592b34e1329b384182f368d2025e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06584e6e98d592b34e1329b384182f368d2025e8":["3cc749c053615f5871f3b95715fe292f34e70a53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06584e6e98d592b34e1329b384182f368d2025e8"],"3cc749c053615f5871f3b95715fe292f34e70a53":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}