{"path":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#getTuples(SolrParams).mjava","commits":[{"id":"600937be95b5a041815220371fa7882e73031d56","date":1551734162,"type":1,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#getTuples(SolrParams).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#getTuples(TupleStream).mjava","sourceNew":"  protected List<Tuple> getTuples(final SolrParams params) throws IOException {\n    log.info(\"Tuples from params: {}\", params);\n    TupleStream tupleStream = new SolrStream(this.cloudJettys.get(0).url, params);\n    \n    tupleStream.open();\n    List<Tuple> tuples = new ArrayList<>();\n    for (;;) {\n      Tuple t = tupleStream.read();\n      log.info(\" ... {}\", t.fields);\n      if (t.EOF) {\n        break;\n      } else {\n        tuples.add(t);\n      }\n    }\n    tupleStream.close();\n    return tuples;\n  }\n\n","sourceOld":"  protected List<Tuple> getTuples(TupleStream tupleStream) throws IOException {\n    tupleStream.open();\n    List<Tuple> tuples = new ArrayList<>();\n    for (;;) {\n      Tuple t = tupleStream.read();\n      if (t.EOF) {\n        break;\n      } else {\n        tuples.add(t);\n      }\n    }\n    tupleStream.close();\n    return tuples;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22191e72f6c40dec88c9b94f9bb55c7527772a47","date":1553715407,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler2[TestSQLHandler]#getTuples(SolrParams,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#getTuples(SolrParams).mjava","sourceNew":"  protected List<Tuple> getTuples(final SolrParams params, String baseUrl) throws IOException {\n    //log.info(\"Tuples from params: {}\", params);\n    TupleStream tupleStream = new SolrStream(baseUrl, params);\n\n    tupleStream.open();\n    List<Tuple> tuples = new ArrayList<>();\n    for (;;) {\n      Tuple t = tupleStream.read();\n      //log.info(\" ... {}\", t.fields);\n      if (t.EOF) {\n        break;\n      } else {\n        tuples.add(t);\n      }\n    }\n    tupleStream.close();\n    return tuples;\n  }\n\n","sourceOld":"  protected List<Tuple> getTuples(final SolrParams params) throws IOException {\n    log.info(\"Tuples from params: {}\", params);\n    TupleStream tupleStream = new SolrStream(this.cloudJettys.get(0).url, params);\n    \n    tupleStream.open();\n    List<Tuple> tuples = new ArrayList<>();\n    for (;;) {\n      Tuple t = tupleStream.read();\n      log.info(\" ... {}\", t.fields);\n      if (t.EOF) {\n        break;\n      } else {\n        tuples.add(t);\n      }\n    }\n    tupleStream.close();\n    return tuples;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"22191e72f6c40dec88c9b94f9bb55c7527772a47":["600937be95b5a041815220371fa7882e73031d56"],"600937be95b5a041815220371fa7882e73031d56":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["22191e72f6c40dec88c9b94f9bb55c7527772a47"]},"commit2Childs":{"22191e72f6c40dec88c9b94f9bb55c7527772a47":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"600937be95b5a041815220371fa7882e73031d56":["22191e72f6c40dec88c9b94f9bb55c7527772a47"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["600937be95b5a041815220371fa7882e73031d56"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}