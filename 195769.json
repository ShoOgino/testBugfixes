{"path":"src/test/org/apache/solr/search/TestSearchPerf#XtestRangePerformance().mjava","commits":[{"id":"1de28dd3a9dd43a5d574a7f5469b28f789e68c56","date":1242823326,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/search/TestSearchPerf#XtestRangePerformance().mjava","pathOld":"/dev/null","sourceNew":"  /** test range query performance */\n  public void XtestRangePerformance() throws Exception {\n    int indexSize=199999;\n    float fractionCovered=1.0f;\n\n    String l=t(0);\n    String u=t((int)(indexSize*10*fractionCovered));   \n\n    SolrQueryRequest req = lrf.makeRequest();\n    QParser parser = QParser.getParser(\"foomany_s:[\" + l + \" TO \" + u + \"]\", null, req);\n    Query range = parser.parse();\n                                     \n    QParser parser2 = QParser.getParser(\"{!frange l=\"+l+\" u=\"+u+\"}foomany_s\", null, req);\n    Query frange = parser2.parse();\n    req.close();\n\n    createIndex2(indexSize);\n\n    doSetGen(1, range);\n    doSetGen(1, frange);   // load field cache\n\n    doSetGen(100, range);\n    doSetGen(10000, frange);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52df4540d5cd0c887f5e56ef0f387d7489f5d44f","date":1243099614,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/search/TestSearchPerf#XtestRangePerformance().mjava","pathOld":"src/test/org/apache/solr/search/TestSearchPerf#XtestRangePerformance().mjava","sourceNew":"  /** test range query performance */\n  public void XtestRangePerformance() throws Exception {\n    int indexSize=1999;\n    float fractionCovered=1.0f;\n\n    String l=t(0);\n    String u=t((int)(indexSize*10*fractionCovered));   \n\n    SolrQueryRequest req = lrf.makeRequest();\n    QParser parser = QParser.getParser(\"foomany_s:[\" + l + \" TO \" + u + \"]\", null, req);\n    Query range = parser.parse();\n                                     \n    QParser parser2 = QParser.getParser(\"{!frange l=\"+l+\" u=\"+u+\"}foomany_s\", null, req);\n    Query frange = parser2.parse();\n    req.close();\n\n    createIndex2(indexSize,\"foomany_s\");\n\n    doSetGen(1, range);\n    doSetGen(1, frange);   // load field cache\n\n    doSetGen(100, range);\n    doSetGen(10000, frange);\n  }\n\n","sourceOld":"  /** test range query performance */\n  public void XtestRangePerformance() throws Exception {\n    int indexSize=199999;\n    float fractionCovered=1.0f;\n\n    String l=t(0);\n    String u=t((int)(indexSize*10*fractionCovered));   \n\n    SolrQueryRequest req = lrf.makeRequest();\n    QParser parser = QParser.getParser(\"foomany_s:[\" + l + \" TO \" + u + \"]\", null, req);\n    Query range = parser.parse();\n                                     \n    QParser parser2 = QParser.getParser(\"{!frange l=\"+l+\" u=\"+u+\"}foomany_s\", null, req);\n    Query frange = parser2.parse();\n    req.close();\n\n    createIndex2(indexSize);\n\n    doSetGen(1, range);\n    doSetGen(1, frange);   // load field cache\n\n    doSetGen(100, range);\n    doSetGen(10000, frange);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/TestSearchPerf#XtestRangePerformance().mjava","pathOld":"src/test/org/apache/solr/search/TestSearchPerf#XtestRangePerformance().mjava","sourceNew":"  /** test range query performance */\n  public void XtestRangePerformance() throws Exception {\n    int indexSize=1999;\n    float fractionCovered=1.0f;\n\n    String l=t(0);\n    String u=t((int)(indexSize*10*fractionCovered));   \n\n    SolrQueryRequest req = lrf.makeRequest();\n    QParser parser = QParser.getParser(\"foomany_s:[\" + l + \" TO \" + u + \"]\", null, req);\n    Query range = parser.parse();\n                                     \n    QParser parser2 = QParser.getParser(\"{!frange l=\"+l+\" u=\"+u+\"}foomany_s\", null, req);\n    Query frange = parser2.parse();\n    req.close();\n\n    createIndex2(indexSize,\"foomany_s\");\n\n    doSetGen(1, range);\n    doSetGen(1, frange);   // load field cache\n\n    doSetGen(100, range);\n    doSetGen(10000, frange);\n  }\n\n","sourceOld":"  /** test range query performance */\n  public void XtestRangePerformance() throws Exception {\n    int indexSize=1999;\n    float fractionCovered=1.0f;\n\n    String l=t(0);\n    String u=t((int)(indexSize*10*fractionCovered));   \n\n    SolrQueryRequest req = lrf.makeRequest();\n    QParser parser = QParser.getParser(\"foomany_s:[\" + l + \" TO \" + u + \"]\", null, req);\n    Query range = parser.parse();\n                                     \n    QParser parser2 = QParser.getParser(\"{!frange l=\"+l+\" u=\"+u+\"}foomany_s\", null, req);\n    Query frange = parser2.parse();\n    req.close();\n\n    createIndex2(indexSize,\"foomany_s\");\n\n    doSetGen(1, range);\n    doSetGen(1, frange);   // load field cache\n\n    doSetGen(100, range);\n    doSetGen(10000, frange);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"52df4540d5cd0c887f5e56ef0f387d7489f5d44f":["1de28dd3a9dd43a5d574a7f5469b28f789e68c56"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["52df4540d5cd0c887f5e56ef0f387d7489f5d44f"],"1de28dd3a9dd43a5d574a7f5469b28f789e68c56":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"52df4540d5cd0c887f5e56ef0f387d7489f5d44f":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["1de28dd3a9dd43a5d574a7f5469b28f789e68c56"],"1de28dd3a9dd43a5d574a7f5469b28f789e68c56":["52df4540d5cd0c887f5e56ef0f387d7489f5d44f"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}