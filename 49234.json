{"path":"lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask#readChecksumFile(File).mjava","commits":[{"id":"0dc336cf0d57e7e3a9fb0de2d61bb4563940c29d","date":1333562012,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask#readChecksumFile(File).mjava","pathOld":"/dev/null","sourceNew":"  private static final String readChecksumFile(File f) {\n    BufferedReader reader = null;\n    try {\n      reader = new BufferedReader(new InputStreamReader\n                                  (new FileInputStream(f), \"UTF-8\"));\n      try {\n        String checksum = reader.readLine();\n        if (null == checksum || 0 == checksum.length()) {\n          throw new BuildException(\"Failed to find checksum in file: \" + f);\n        }\n        return checksum;\n      } finally {\n        reader.close();\n      }\n    } catch (IOException e) {\n      throw new BuildException(\"IO error reading checksum file: \" + f, e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask#readChecksumFile(File).mjava","pathOld":"lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask#readChecksumFile(File).mjava","sourceNew":"  private static final String readChecksumFile(File f) {\n    BufferedReader reader = null;\n    try {\n      reader = new BufferedReader(new InputStreamReader\n                                  (new FileInputStream(f), StandardCharsets.UTF_8));\n      try {\n        String checksum = reader.readLine();\n        if (null == checksum || 0 == checksum.length()) {\n          throw new BuildException(\"Failed to find checksum in file: \" + f);\n        }\n        return checksum;\n      } finally {\n        reader.close();\n      }\n    } catch (IOException e) {\n      throw new BuildException(\"IO error reading checksum file: \" + f, e);\n    }\n  }\n\n","sourceOld":"  private static final String readChecksumFile(File f) {\n    BufferedReader reader = null;\n    try {\n      reader = new BufferedReader(new InputStreamReader\n                                  (new FileInputStream(f), \"UTF-8\"));\n      try {\n        String checksum = reader.readLine();\n        if (null == checksum || 0 == checksum.length()) {\n          throw new BuildException(\"Failed to find checksum in file: \" + f);\n        }\n        return checksum;\n      } finally {\n        reader.close();\n      }\n    } catch (IOException e) {\n      throw new BuildException(\"IO error reading checksum file: \" + f, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask#readChecksumFile(File).mjava","pathOld":"lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask#readChecksumFile(File).mjava","sourceNew":"  private static final String readChecksumFile(File f) {\n    BufferedReader reader = null;\n    try {\n      reader = new BufferedReader(new InputStreamReader\n                                  (new FileInputStream(f), StandardCharsets.UTF_8));\n      try {\n        String checksum = reader.readLine();\n        if (null == checksum || 0 == checksum.length()) {\n          throw new BuildException(\"Failed to find checksum in file: \" + f);\n        }\n        return checksum;\n      } finally {\n        reader.close();\n      }\n    } catch (IOException e) {\n      throw new BuildException(\"IO error reading checksum file: \" + f, e);\n    }\n  }\n\n","sourceOld":"  private static final String readChecksumFile(File f) {\n    BufferedReader reader = null;\n    try {\n      reader = new BufferedReader(new InputStreamReader\n                                  (new FileInputStream(f), \"UTF-8\"));\n      try {\n        String checksum = reader.readLine();\n        if (null == checksum || 0 == checksum.length()) {\n          throw new BuildException(\"Failed to find checksum in file: \" + f);\n        }\n        return checksum;\n      } finally {\n        reader.close();\n      }\n    } catch (IOException e) {\n      throw new BuildException(\"IO error reading checksum file: \" + f, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e025cf1c07150c8db28879d785db17eb3a66ca9f","date":1598788864,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/tools/src/java/org/apache/lucene/validation/LicenseCheckTask#readChecksumFile(File).mjava","sourceNew":null,"sourceOld":"  private static final String readChecksumFile(File f) {\n    BufferedReader reader = null;\n    try {\n      reader = new BufferedReader(new InputStreamReader\n                                  (new FileInputStream(f), StandardCharsets.UTF_8));\n      try {\n        String checksum = reader.readLine();\n        if (null == checksum || 0 == checksum.length()) {\n          throw new BuildException(\"Failed to find checksum in file: \" + f);\n        }\n        return checksum;\n      } finally {\n        reader.close();\n      }\n    } catch (IOException e) {\n      throw new BuildException(\"IO error reading checksum file: \" + f, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["0dc336cf0d57e7e3a9fb0de2d61bb4563940c29d","7d89d7e4e5101347833eea558851bf4209218619"],"0dc336cf0d57e7e3a9fb0de2d61bb4563940c29d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e025cf1c07150c8db28879d785db17eb3a66ca9f":["7d89d7e4e5101347833eea558851bf4209218619"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7d89d7e4e5101347833eea558851bf4209218619":["0dc336cf0d57e7e3a9fb0de2d61bb4563940c29d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e025cf1c07150c8db28879d785db17eb3a66ca9f"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"0dc336cf0d57e7e3a9fb0de2d61bb4563940c29d":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0dc336cf0d57e7e3a9fb0de2d61bb4563940c29d"],"e025cf1c07150c8db28879d785db17eb3a66ca9f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","e025cf1c07150c8db28879d785db17eb3a66ca9f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}