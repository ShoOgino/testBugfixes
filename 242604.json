{"path":"lucene/core/src/test/org/apache/lucene/util/TestNumericUtils#testIllegalSubtract().mjava","commits":[{"id":"a0e7cdd0facd912df00ec53365f98e7c54d6c9bb","date":1457059932,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestNumericUtils#testIllegalSubtract().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKD#testIllegalNumericUtilsSubtract().mjava","sourceNew":"  public void testIllegalSubtract() throws Exception {\n    byte[] v1 = new byte[4];\n    v1[3] = (byte) 0xf0;\n    byte[] v2 = new byte[4];\n    v2[3] = (byte) 0xf1;\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      NumericUtils.subtract(4, 0, v1, v2, new byte[4]);\n    });\n    assertEquals(\"a < b\", expected.getMessage());\n  }\n\n","sourceOld":"  public void testIllegalNumericUtilsSubtract() throws Exception {\n    byte[] v1 = new byte[4];\n    v1[3] = (byte) 0xf0;\n    byte[] v2 = new byte[4];\n    v2[3] = (byte) 0xf1;\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      NumericUtils.subtract(4, 0, v1, v2, new byte[4]);\n    });\n    assertEquals(\"a < b\", expected.getMessage());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestNumericUtils#testIllegalSubtract().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKD#testIllegalNumericUtilsSubtract().mjava","sourceNew":"  public void testIllegalSubtract() throws Exception {\n    byte[] v1 = new byte[4];\n    v1[3] = (byte) 0xf0;\n    byte[] v2 = new byte[4];\n    v2[3] = (byte) 0xf1;\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      NumericUtils.subtract(4, 0, v1, v2, new byte[4]);\n    });\n    assertEquals(\"a < b\", expected.getMessage());\n  }\n\n","sourceOld":"  public void testIllegalNumericUtilsSubtract() throws Exception {\n    byte[] v1 = new byte[4];\n    v1[3] = (byte) 0xf0;\n    byte[] v2 = new byte[4];\n    v2[3] = (byte) 0xf1;\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      NumericUtils.subtract(4, 0, v1, v2, new byte[4]);\n    });\n    assertEquals(\"a < b\", expected.getMessage());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7cdd0facd912df00ec53365f98e7c54d6c9bb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"a0e7cdd0facd912df00ec53365f98e7c54d6c9bb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","a0e7cdd0facd912df00ec53365f98e7c54d6c9bb"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7cdd0facd912df00ec53365f98e7c54d6c9bb":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}