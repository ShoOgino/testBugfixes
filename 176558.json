{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#forceApplyGlobalSlice().mjava","commits":[{"id":"327863a2fd61e831028b6c56c8fef6b00a44eb0b","date":1302686439,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#forceApplyGlobalSlice().mjava","pathOld":"/dev/null","sourceNew":"  private boolean forceApplyGlobalSlice() {\n    globalBufferLock.lock();\n    final Node currentTail = tail;\n    try {\n      if (globalSlice.sliceTail != currentTail) {\n        globalSlice.sliceTail = currentTail;\n        globalSlice.apply(globalBufferedDeletes, BufferedDeletes.MAX_INT);\n      }\n      return globalBufferedDeletes.any();\n    } finally {\n      globalBufferLock.unlock();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#forceApplyGlobalSlice().mjava","pathOld":"/dev/null","sourceNew":"  private boolean forceApplyGlobalSlice() {\n    globalBufferLock.lock();\n    final Node currentTail = tail;\n    try {\n      if (globalSlice.sliceTail != currentTail) {\n        globalSlice.sliceTail = currentTail;\n        globalSlice.apply(globalBufferedDeletes, BufferedDeletes.MAX_INT);\n      }\n      return globalBufferedDeletes.any();\n    } finally {\n      globalBufferLock.unlock();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#forceApplyGlobalSlice().mjava","pathOld":"/dev/null","sourceNew":"  private boolean forceApplyGlobalSlice() {\n    globalBufferLock.lock();\n    final Node currentTail = tail;\n    try {\n      if (globalSlice.sliceTail != currentTail) {\n        globalSlice.sliceTail = currentTail;\n        globalSlice.apply(globalBufferedDeletes, BufferedDeletes.MAX_INT);\n      }\n      return globalBufferedDeletes.any();\n    } finally {\n      globalBufferLock.unlock();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44dd1d54e91da99a56fda5795bd7d44f0bd629a4","date":1304702770,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#forceApplyGlobalSlice().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#forceApplyGlobalSlice().mjava","sourceNew":"  private boolean forceApplyGlobalSlice() {\n    globalBufferLock.lock();\n    final Node<?> currentTail = tail;\n    try {\n      if (globalSlice.sliceTail != currentTail) {\n        globalSlice.sliceTail = currentTail;\n        globalSlice.apply(globalBufferedDeletes, BufferedDeletes.MAX_INT);\n      }\n      return globalBufferedDeletes.any();\n    } finally {\n      globalBufferLock.unlock();\n    }\n  }\n\n","sourceOld":"  private boolean forceApplyGlobalSlice() {\n    globalBufferLock.lock();\n    final Node currentTail = tail;\n    try {\n      if (globalSlice.sliceTail != currentTail) {\n        globalSlice.sliceTail = currentTail;\n        globalSlice.apply(globalBufferedDeletes, BufferedDeletes.MAX_INT);\n      }\n      return globalBufferedDeletes.any();\n    } finally {\n      globalBufferLock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#forceApplyGlobalSlice().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#forceApplyGlobalSlice().mjava","sourceNew":"  private boolean forceApplyGlobalSlice() {\n    globalBufferLock.lock();\n    final Node<?> currentTail = tail;\n    try {\n      if (globalSlice.sliceTail != currentTail) {\n        globalSlice.sliceTail = currentTail;\n        globalSlice.apply(globalBufferedDeletes, BufferedDeletes.MAX_INT);\n      }\n      return globalBufferedDeletes.any();\n    } finally {\n      globalBufferLock.unlock();\n    }\n  }\n\n","sourceOld":"  private boolean forceApplyGlobalSlice() {\n    globalBufferLock.lock();\n    final Node currentTail = tail;\n    try {\n      if (globalSlice.sliceTail != currentTail) {\n        globalSlice.sliceTail = currentTail;\n        globalSlice.apply(globalBufferedDeletes, BufferedDeletes.MAX_INT);\n      }\n      return globalBufferedDeletes.any();\n    } finally {\n      globalBufferLock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#forceApplyGlobalSlice().mjava","pathOld":"/dev/null","sourceNew":"  private boolean forceApplyGlobalSlice() {\n    globalBufferLock.lock();\n    final Node<?> currentTail = tail;\n    try {\n      if (globalSlice.sliceTail != currentTail) {\n        globalSlice.sliceTail = currentTail;\n        globalSlice.apply(globalBufferedDeletes, BufferedDeletes.MAX_INT);\n      }\n      return globalBufferedDeletes.any();\n    } finally {\n      globalBufferLock.unlock();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#forceApplyGlobalSlice().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#forceApplyGlobalSlice().mjava","sourceNew":"  private boolean forceApplyGlobalSlice() {\n    globalBufferLock.lock();\n    final Node<?> currentTail = tail;\n    try {\n      if (globalSlice.sliceTail != currentTail) {\n        globalSlice.sliceTail = currentTail;\n        globalSlice.apply(globalBufferedDeletes, BufferedDeletes.MAX_INT);\n      }\n      return globalBufferedDeletes.any();\n    } finally {\n      globalBufferLock.unlock();\n    }\n  }\n\n","sourceOld":"  private boolean forceApplyGlobalSlice() {\n    globalBufferLock.lock();\n    final Node<?> currentTail = tail;\n    try {\n      if (globalSlice.sliceTail != currentTail) {\n        globalSlice.sliceTail = currentTail;\n        globalSlice.apply(globalBufferedDeletes, BufferedDeletes.MAX_INT);\n      }\n      return globalBufferedDeletes.any();\n    } finally {\n      globalBufferLock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"44dd1d54e91da99a56fda5795bd7d44f0bd629a4":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["44dd1d54e91da99a56fda5795bd7d44f0bd629a4"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","44dd1d54e91da99a56fda5795bd7d44f0bd629a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","327863a2fd61e831028b6c56c8fef6b00a44eb0b"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["135621f3a0670a9394eb563224a3b76cc4dddc0f","44dd1d54e91da99a56fda5795bd7d44f0bd629a4"],"327863a2fd61e831028b6c56c8fef6b00a44eb0b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"44dd1d54e91da99a56fda5795bd7d44f0bd629a4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","b3e06be49006ecac364d39d12b9c9f74882f9b9f","327863a2fd61e831028b6c56c8fef6b00a44eb0b"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["44dd1d54e91da99a56fda5795bd7d44f0bd629a4","135621f3a0670a9394eb563224a3b76cc4dddc0f"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":[],"327863a2fd61e831028b6c56c8fef6b00a44eb0b":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}