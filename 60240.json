{"path":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#getFieldInfo(String).mjava","commits":[{"id":"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","date":1475611903,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#getFieldInfo(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Called by the default implementation of {@link #getOffsetSource(String)}.\n   * If there is no searcher then we simply always return null.\n   */\n  protected FieldInfo getFieldInfo(String field) {\n    if (searcher == null) {\n      return null;\n    }\n    // Need thread-safety for lazy-init but lets avoid 'synchronized' by using double-check locking idiom\n    FieldInfos fieldInfos = this.fieldInfos; // note: it's volatile; read once\n    if (fieldInfos == null) {\n      synchronized (this) {\n        fieldInfos = this.fieldInfos;\n        if (fieldInfos == null) {\n          fieldInfos = MultiFields.getMergedFieldInfos(searcher.getIndexReader());\n          this.fieldInfos = fieldInfos;\n        }\n\n      }\n\n    }\n    return fieldInfos.fieldInfo(field);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#getFieldInfo(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Called by the default implementation of {@link #getOffsetSource(String)}.\n   * If there is no searcher then we simply always return null.\n   */\n  protected FieldInfo getFieldInfo(String field) {\n    if (searcher == null) {\n      return null;\n    }\n    // Need thread-safety for lazy-init but lets avoid 'synchronized' by using double-check locking idiom\n    FieldInfos fieldInfos = this.fieldInfos; // note: it's volatile; read once\n    if (fieldInfos == null) {\n      synchronized (this) {\n        fieldInfos = this.fieldInfos;\n        if (fieldInfos == null) {\n          fieldInfos = MultiFields.getMergedFieldInfos(searcher.getIndexReader());\n          this.fieldInfos = fieldInfos;\n        }\n\n      }\n\n    }\n    return fieldInfos.fieldInfo(field);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e775de416dd2d8067b10db1c8af975a1d5017e","date":1539906554,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#getFieldInfo(String).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/UnifiedHighlighter#getFieldInfo(String).mjava","sourceNew":"  /**\n   * Called by the default implementation of {@link #getOffsetSource(String)}.\n   * If there is no searcher then we simply always return null.\n   */\n  protected FieldInfo getFieldInfo(String field) {\n    if (searcher == null) {\n      return null;\n    }\n    // Need thread-safety for lazy-init but lets avoid 'synchronized' by using double-check locking idiom\n    FieldInfos fieldInfos = this.fieldInfos; // note: it's volatile; read once\n    if (fieldInfos == null) {\n      synchronized (this) {\n        fieldInfos = this.fieldInfos;\n        if (fieldInfos == null) {\n          fieldInfos = FieldInfos.getMergedFieldInfos(searcher.getIndexReader());\n          this.fieldInfos = fieldInfos;\n        }\n\n      }\n\n    }\n    return fieldInfos.fieldInfo(field);\n  }\n\n","sourceOld":"  /**\n   * Called by the default implementation of {@link #getOffsetSource(String)}.\n   * If there is no searcher then we simply always return null.\n   */\n  protected FieldInfo getFieldInfo(String field) {\n    if (searcher == null) {\n      return null;\n    }\n    // Need thread-safety for lazy-init but lets avoid 'synchronized' by using double-check locking idiom\n    FieldInfos fieldInfos = this.fieldInfos; // note: it's volatile; read once\n    if (fieldInfos == null) {\n      synchronized (this) {\n        fieldInfos = this.fieldInfos;\n        if (fieldInfos == null) {\n          fieldInfos = MultiFields.getMergedFieldInfos(searcher.getIndexReader());\n          this.fieldInfos = fieldInfos;\n        }\n\n      }\n\n    }\n    return fieldInfos.fieldInfo(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["04e775de416dd2d8067b10db1c8af975a1d5017e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2":["04e775de416dd2d8067b10db1c8af975a1d5017e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}