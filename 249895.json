{"path":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/ValueFacetTest#medianTest().mjava","commits":[{"id":"3bd4c6955956e76c96eb12dfe64108ed03522983","date":1508262722,"type":0,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/ValueFacetTest#medianTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void medianTest() throws Exception {\n    Map<String, String> expressions = new HashMap<>();\n    expressions.put(\"int\", \"median(int_i)\");\n    expressions.put(\"longs\", \"median(long_lm)\");\n    expressions.put(\"float\", \"median(float_f)\");\n    expressions.put(\"doubles\", \"median(double_dm)\");\n    expressions.put(\"dates\", \"median(date_dtm)\");\n    \n    // Value Facet \"without_missing\"\n    addFacet(\"without_missing\", \"{ 'type':'value', 'expression':'date_dt' }\");\n\n    addFacetValue(\"1801-12-31T23:59:59Z\");\n    addFacetResult(\"int\", 3.5);\n    addFacetResult(\"longs\", 6.0);\n    addFacetResult(\"float\", 1.0);\n    addFacetResult(\"doubles\", 7.5);\n    addFacetResult(\"dates\", \"1806-12-31T23:59:59Z\");\n\n    addFacetValue(\"1802-12-31T23:59:59Z\");\n    addFacetResult(\"int\", 3.0);\n    addFacetResult(\"longs\", 6.0);\n    addFacetResult(\"float\", 3.5);\n    addFacetResult(\"doubles\", 7.50);\n    addFacetResult(\"dates\", \"1808-01-01T11:59:59Z\");\n    \n    testGrouping(expressions, false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e4e64b7199d2f2a17be7f3926c7532553910dce","date":1564342581,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/ValueFacetTest#medianTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/ValueFacetTest#medianTest().mjava","sourceNew":"  @Test\n  public void medianTest() throws Exception {\n    Map<String, String> expressions = new HashMap<>();\n    expressions.put(\"int\", \"median(int_i)\");\n    expressions.put(\"longs\", \"median(long_lm)\");\n    expressions.put(\"float\", \"median(float_f)\");\n    expressions.put(\"doubles\", \"median(double_dm)\");\n    expressions.put(\"dates\", \"median(date_dtm)\");\n\n    // Value Facet \"without_missing\"\n    addFacet(\"without_missing\", \"{ 'type':'value', 'expression':'date_dt' }\");\n\n    addFacetValue(\"1801-12-31T23:59:59Z\");\n    addFacetResult(\"int\", 3.5);\n    addFacetResult(\"longs\", 6.0);\n    addFacetResult(\"float\", 1.0);\n    addFacetResult(\"doubles\", 7.5);\n    addFacetResult(\"dates\", \"1806-12-31T23:59:59Z\");\n\n    addFacetValue(\"1802-12-31T23:59:59Z\");\n    addFacetResult(\"int\", 3.0);\n    addFacetResult(\"longs\", 6.0);\n    addFacetResult(\"float\", 3.5);\n    addFacetResult(\"doubles\", 7.50);\n    addFacetResult(\"dates\", \"1808-01-01T11:59:59Z\");\n\n    testGrouping(expressions, false);\n  }\n\n","sourceOld":"  @Test\n  public void medianTest() throws Exception {\n    Map<String, String> expressions = new HashMap<>();\n    expressions.put(\"int\", \"median(int_i)\");\n    expressions.put(\"longs\", \"median(long_lm)\");\n    expressions.put(\"float\", \"median(float_f)\");\n    expressions.put(\"doubles\", \"median(double_dm)\");\n    expressions.put(\"dates\", \"median(date_dtm)\");\n    \n    // Value Facet \"without_missing\"\n    addFacet(\"without_missing\", \"{ 'type':'value', 'expression':'date_dt' }\");\n\n    addFacetValue(\"1801-12-31T23:59:59Z\");\n    addFacetResult(\"int\", 3.5);\n    addFacetResult(\"longs\", 6.0);\n    addFacetResult(\"float\", 1.0);\n    addFacetResult(\"doubles\", 7.5);\n    addFacetResult(\"dates\", \"1806-12-31T23:59:59Z\");\n\n    addFacetValue(\"1802-12-31T23:59:59Z\");\n    addFacetResult(\"int\", 3.0);\n    addFacetResult(\"longs\", 6.0);\n    addFacetResult(\"float\", 3.5);\n    addFacetResult(\"doubles\", 7.50);\n    addFacetResult(\"dates\", \"1808-01-01T11:59:59Z\");\n    \n    testGrouping(expressions, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/ValueFacetTest#medianTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/ValueFacetTest#medianTest().mjava","sourceNew":"  @Test\n  public void medianTest() throws Exception {\n    Map<String, String> expressions = new HashMap<>();\n    expressions.put(\"int\", \"median(int_i)\");\n    expressions.put(\"longs\", \"median(long_lm)\");\n    expressions.put(\"float\", \"median(float_f)\");\n    expressions.put(\"doubles\", \"median(double_dm)\");\n    expressions.put(\"dates\", \"median(date_dtm)\");\n\n    // Value Facet \"without_missing\"\n    addFacet(\"without_missing\", \"{ 'type':'value', 'expression':'date_dt' }\");\n\n    addFacetValue(\"1801-12-31T23:59:59Z\");\n    addFacetResult(\"int\", 3.5);\n    addFacetResult(\"longs\", 6.0);\n    addFacetResult(\"float\", 1.0);\n    addFacetResult(\"doubles\", 7.5);\n    addFacetResult(\"dates\", \"1806-12-31T23:59:59Z\");\n\n    addFacetValue(\"1802-12-31T23:59:59Z\");\n    addFacetResult(\"int\", 3.0);\n    addFacetResult(\"longs\", 6.0);\n    addFacetResult(\"float\", 3.5);\n    addFacetResult(\"doubles\", 7.50);\n    addFacetResult(\"dates\", \"1808-01-01T11:59:59Z\");\n\n    testGrouping(expressions, false);\n  }\n\n","sourceOld":"  @Test\n  public void medianTest() throws Exception {\n    Map<String, String> expressions = new HashMap<>();\n    expressions.put(\"int\", \"median(int_i)\");\n    expressions.put(\"longs\", \"median(long_lm)\");\n    expressions.put(\"float\", \"median(float_f)\");\n    expressions.put(\"doubles\", \"median(double_dm)\");\n    expressions.put(\"dates\", \"median(date_dtm)\");\n    \n    // Value Facet \"without_missing\"\n    addFacet(\"without_missing\", \"{ 'type':'value', 'expression':'date_dt' }\");\n\n    addFacetValue(\"1801-12-31T23:59:59Z\");\n    addFacetResult(\"int\", 3.5);\n    addFacetResult(\"longs\", 6.0);\n    addFacetResult(\"float\", 1.0);\n    addFacetResult(\"doubles\", 7.5);\n    addFacetResult(\"dates\", \"1806-12-31T23:59:59Z\");\n\n    addFacetValue(\"1802-12-31T23:59:59Z\");\n    addFacetResult(\"int\", 3.0);\n    addFacetResult(\"longs\", 6.0);\n    addFacetResult(\"float\", 3.5);\n    addFacetResult(\"doubles\", 7.50);\n    addFacetResult(\"dates\", \"1808-01-01T11:59:59Z\");\n    \n    testGrouping(expressions, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8061ddd97f3352007d927dae445884a6f3d857b":["3bd4c6955956e76c96eb12dfe64108ed03522983","1e4e64b7199d2f2a17be7f3926c7532553910dce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e4e64b7199d2f2a17be7f3926c7532553910dce"],"3bd4c6955956e76c96eb12dfe64108ed03522983":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"3bd4c6955956e76c96eb12dfe64108ed03522983":["1e4e64b7199d2f2a17be7f3926c7532553910dce","f8061ddd97f3352007d927dae445884a6f3d857b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}