{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKInEachNodeHandler#generateNode(int,double,IntToObjectMap[AACO]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKInEachNodeHandler#generateNode(int,double,IntToObjectMap[AACO]).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/search/TopKInEachNodeHandler#generateNode(int,double,IntToObjectMap[AACO]).mjava","sourceNew":"  private MutableFacetResultNode generateNode (int ordinal, double val,  IntToObjectMap<AACO> mapToAACOs) {\n    MutableFacetResultNode node = new MutableFacetResultNode(ordinal, val);\n    AACO aaco = mapToAACOs.get(ordinal);\n    if (null == aaco) {\n      return node;\n    }\n    List<FacetResultNode> list = new ArrayList<FacetResultNode>();\n    for (int i = 0; i < aaco.ordinals.length; i++) {\n      list.add(generateNode(aaco.ordinals[i], aaco.values[i], mapToAACOs));\n    }\n    node.setSubResults(list);\n    node.setResidue(aaco.residue);\n    return node;  \n  }\n\n","sourceOld":"  private MutableFacetResultNode generateNode (int ordinal, double val,  IntToObjectMap<AACO> mapToAACOs) {\n    MutableFacetResultNode node = new MutableFacetResultNode(ordinal, val);\n    AACO aaco = mapToAACOs.get(ordinal);\n    if (null == aaco) {\n      return node;\n    }\n    List<FacetResultNode> list = new ArrayList<FacetResultNode>();\n    for (int i = 0; i < aaco.ordinals.length; i++) {\n      list.add(generateNode(aaco.ordinals[i], aaco.values[i], mapToAACOs));\n    }\n    node.setSubResults(list);\n    node.setResidue(aaco.residue);\n    return node;  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"811cdb4a80352766eb0c762e48972707a924e5cd","date":1358767313,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKInEachNodeHandler#generateNode(int,double,IntToObjectMap[AACO]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKInEachNodeHandler#generateNode(int,double,IntToObjectMap[AACO]).mjava","sourceNew":"  private FacetResultNode generateNode(int ordinal, double val,  IntToObjectMap<AACO> mapToAACOs) {\n    FacetResultNode node = new FacetResultNode(ordinal, val);\n    AACO aaco = mapToAACOs.get(ordinal);\n    if (null == aaco) {\n      return node;\n    }\n    List<FacetResultNode> list = new ArrayList<FacetResultNode>();\n    for (int i = 0; i < aaco.ordinals.length; i++) {\n      list.add(generateNode(aaco.ordinals[i], aaco.values[i], mapToAACOs));\n    }\n    node.subResults = list;\n    node.residue = aaco.residue;\n    return node;  \n  }\n\n","sourceOld":"  private MutableFacetResultNode generateNode (int ordinal, double val,  IntToObjectMap<AACO> mapToAACOs) {\n    MutableFacetResultNode node = new MutableFacetResultNode(ordinal, val);\n    AACO aaco = mapToAACOs.get(ordinal);\n    if (null == aaco) {\n      return node;\n    }\n    List<FacetResultNode> list = new ArrayList<FacetResultNode>();\n    for (int i = 0; i < aaco.ordinals.length; i++) {\n      list.add(generateNode(aaco.ordinals[i], aaco.values[i], mapToAACOs));\n    }\n    node.setSubResults(list);\n    node.setResidue(aaco.residue);\n    return node;  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKInEachNodeHandler#generateNode(int,double,IntToObjectMap[AACO]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKInEachNodeHandler#generateNode(int,double,IntToObjectMap[AACO]).mjava","sourceNew":"  private FacetResultNode generateNode(int ordinal, double val,  IntToObjectMap<AACO> mapToAACOs) {\n    FacetResultNode node = new FacetResultNode(ordinal, val);\n    AACO aaco = mapToAACOs.get(ordinal);\n    if (null == aaco) {\n      return node;\n    }\n    List<FacetResultNode> list = new ArrayList<FacetResultNode>();\n    for (int i = 0; i < aaco.ordinals.length; i++) {\n      list.add(generateNode(aaco.ordinals[i], aaco.values[i], mapToAACOs));\n    }\n    node.subResults = list;\n    node.residue = aaco.residue;\n    return node;  \n  }\n\n","sourceOld":"  private MutableFacetResultNode generateNode (int ordinal, double val,  IntToObjectMap<AACO> mapToAACOs) {\n    MutableFacetResultNode node = new MutableFacetResultNode(ordinal, val);\n    AACO aaco = mapToAACOs.get(ordinal);\n    if (null == aaco) {\n      return node;\n    }\n    List<FacetResultNode> list = new ArrayList<FacetResultNode>();\n    for (int i = 0; i < aaco.ordinals.length; i++) {\n      list.add(generateNode(aaco.ordinals[i], aaco.values[i], mapToAACOs));\n    }\n    node.setSubResults(list);\n    node.setResidue(aaco.residue);\n    return node;  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dae862628c7a5275e1ff00ff3bc9803dedf124a9","date":1358939646,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKInEachNodeHandler#generateNode(int,double,IntToObjectMap[AACO]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKInEachNodeHandler#generateNode(int,double,IntToObjectMap[AACO]).mjava","sourceNew":"  private FacetResultNode generateNode(int ordinal, double val,  IntToObjectMap<AACO> mapToAACOs) {\n    FacetResultNode node = new FacetResultNode(ordinal, val);\n    AACO aaco = mapToAACOs.get(ordinal);\n    if (null == aaco) {\n      return node;\n    }\n    List<FacetResultNode> list = new ArrayList<FacetResultNode>();\n    for (int i = 0; i < aaco.ordinals.length; i++) {\n      list.add(generateNode(aaco.ordinals[i], aaco.values[i], mapToAACOs));\n    }\n    node.subResults = list;\n    return node;  \n  }\n\n","sourceOld":"  private FacetResultNode generateNode(int ordinal, double val,  IntToObjectMap<AACO> mapToAACOs) {\n    FacetResultNode node = new FacetResultNode(ordinal, val);\n    AACO aaco = mapToAACOs.get(ordinal);\n    if (null == aaco) {\n      return node;\n    }\n    List<FacetResultNode> list = new ArrayList<FacetResultNode>();\n    for (int i = 0; i < aaco.ordinals.length; i++) {\n      list.add(generateNode(aaco.ordinals[i], aaco.values[i], mapToAACOs));\n    }\n    node.subResults = list;\n    node.residue = aaco.residue;\n    return node;  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b2d5244a676b83c2d551c3746e8181588ba619e1","date":1359031414,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKInEachNodeHandler#generateNode(int,double,IntToObjectMap[AACO]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKInEachNodeHandler#generateNode(int,double,IntToObjectMap[AACO]).mjava","sourceNew":"  private FacetResultNode generateNode(int ordinal, double val,  IntToObjectMap<AACO> mapToAACOs) {\n    FacetResultNode node = new FacetResultNode(ordinal, val);\n    AACO aaco = mapToAACOs.get(ordinal);\n    if (null == aaco) {\n      return node;\n    }\n    List<FacetResultNode> list = new ArrayList<FacetResultNode>();\n    for (int i = 0; i < aaco.ordinals.length; i++) {\n      list.add(generateNode(aaco.ordinals[i], aaco.values[i], mapToAACOs));\n    }\n    node.subResults = list;\n    return node;  \n  }\n\n","sourceOld":"  private FacetResultNode generateNode(int ordinal, double val,  IntToObjectMap<AACO> mapToAACOs) {\n    FacetResultNode node = new FacetResultNode(ordinal, val);\n    AACO aaco = mapToAACOs.get(ordinal);\n    if (null == aaco) {\n      return node;\n    }\n    List<FacetResultNode> list = new ArrayList<FacetResultNode>();\n    for (int i = 0; i < aaco.ordinals.length; i++) {\n      list.add(generateNode(aaco.ordinals[i], aaco.values[i], mapToAACOs));\n    }\n    node.subResults = list;\n    node.residue = aaco.residue;\n    return node;  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKInEachNodeHandler#generateNode(int,double,IntToObjectMap[AACO]).mjava","sourceNew":null,"sourceOld":"  private FacetResultNode generateNode(int ordinal, double val,  IntToObjectMap<AACO> mapToAACOs) {\n    FacetResultNode node = new FacetResultNode(ordinal, val);\n    AACO aaco = mapToAACOs.get(ordinal);\n    if (null == aaco) {\n      return node;\n    }\n    List<FacetResultNode> list = new ArrayList<FacetResultNode>();\n    for (int i = 0; i < aaco.ordinals.length; i++) {\n      list.add(generateNode(aaco.ordinals[i], aaco.values[i], mapToAACOs));\n    }\n    node.subResults = list;\n    return node;  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/TopKInEachNodeHandler#generateNode(int,double,IntToObjectMap[AACO]).mjava","sourceNew":null,"sourceOld":"  private FacetResultNode generateNode(int ordinal, double val,  IntToObjectMap<AACO> mapToAACOs) {\n    FacetResultNode node = new FacetResultNode(ordinal, val);\n    AACO aaco = mapToAACOs.get(ordinal);\n    if (null == aaco) {\n      return node;\n    }\n    List<FacetResultNode> list = new ArrayList<FacetResultNode>();\n    for (int i = 0; i < aaco.ordinals.length; i++) {\n      list.add(generateNode(aaco.ordinals[i], aaco.values[i], mapToAACOs));\n    }\n    node.subResults = list;\n    return node;  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dae862628c7a5275e1ff00ff3bc9803dedf124a9":["811cdb4a80352766eb0c762e48972707a924e5cd"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d33e19a97046248623a7591aeaa6547233fd15e2":["dae862628c7a5275e1ff00ff3bc9803dedf124a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["dae862628c7a5275e1ff00ff3bc9803dedf124a9","d33e19a97046248623a7591aeaa6547233fd15e2"],"07155cdd910937cdf6877e48884d5782845c8b8b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","811cdb4a80352766eb0c762e48972707a924e5cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"811cdb4a80352766eb0c762e48972707a924e5cd":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b2d5244a676b83c2d551c3746e8181588ba619e1":["07155cdd910937cdf6877e48884d5782845c8b8b","dae862628c7a5275e1ff00ff3bc9803dedf124a9"]},"commit2Childs":{"dae862628c7a5275e1ff00ff3bc9803dedf124a9":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13","b2d5244a676b83c2d551c3746e8181588ba619e1"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["07155cdd910937cdf6877e48884d5782845c8b8b","811cdb4a80352766eb0c762e48972707a924e5cd"],"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"07155cdd910937cdf6877e48884d5782845c8b8b":["b2d5244a676b83c2d551c3746e8181588ba619e1"],"811cdb4a80352766eb0c762e48972707a924e5cd":["dae862628c7a5275e1ff00ff3bc9803dedf124a9","07155cdd910937cdf6877e48884d5782845c8b8b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b2d5244a676b83c2d551c3746e8181588ba619e1":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b2d5244a676b83c2d551c3746e8181588ba619e1"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}