{"path":"solr/core/src/java/org/apache/solr/security/JWTAuthPlugin.WellKnownDiscoveryConfig#parse(String).mjava","commits":[{"id":"bb3e075eaa5788b2762ec235bf72b069cefe3f50","date":1548244981,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/JWTAuthPlugin.WellKnownDiscoveryConfig#parse(String).mjava","pathOld":"/dev/null","sourceNew":"    public static WellKnownDiscoveryConfig parse(String urlString) {\n      try {\n        URL url = new URL(urlString);\n        if (!Arrays.asList(\"https\", \"file\").contains(url.getProtocol())) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Well-known config URL must be HTTPS or file\");\n        }\n        return parse(url.openStream());\n      } catch (MalformedURLException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Well-known config URL \" + urlString + \" is malformed\", e);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Well-known config could not be read from url \" + urlString, e);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2682a1cd25864ccdc1b44bf047bd08700f28ba06","date":1548321910,"type":0,"author":"Tommaso Teofili","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/JWTAuthPlugin.WellKnownDiscoveryConfig#parse(String).mjava","pathOld":"/dev/null","sourceNew":"    public static WellKnownDiscoveryConfig parse(String urlString) {\n      try {\n        URL url = new URL(urlString);\n        if (!Arrays.asList(\"https\", \"file\").contains(url.getProtocol())) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Well-known config URL must be HTTPS or file\");\n        }\n        return parse(url.openStream());\n      } catch (MalformedURLException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Well-known config URL \" + urlString + \" is malformed\", e);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Well-known config could not be read from url \" + urlString, e);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ac780c217504f0ca673ac5dcb98768984267c60","date":1568879420,"type":5,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/JWTIssuerConfig.WellKnownDiscoveryConfig#parse(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/JWTAuthPlugin.WellKnownDiscoveryConfig#parse(String).mjava","sourceNew":"    public static WellKnownDiscoveryConfig parse(String urlString) {\n      try {\n        URL url = new URL(urlString);\n        if (!Arrays.asList(\"https\", \"file\").contains(url.getProtocol())) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Well-known config URL must be HTTPS or file\");\n        }\n        return parse(url.openStream());\n      } catch (MalformedURLException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Well-known config URL \" + urlString + \" is malformed\", e);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Well-known config could not be read from url \" + urlString, e);\n      }\n    }\n\n","sourceOld":"    public static WellKnownDiscoveryConfig parse(String urlString) {\n      try {\n        URL url = new URL(urlString);\n        if (!Arrays.asList(\"https\", \"file\").contains(url.getProtocol())) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Well-known config URL must be HTTPS or file\");\n        }\n        return parse(url.openStream());\n      } catch (MalformedURLException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Well-known config URL \" + urlString + \" is malformed\", e);\n      } catch (IOException e) {\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Well-known config could not be read from url \" + urlString, e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1ac780c217504f0ca673ac5dcb98768984267c60":["bb3e075eaa5788b2762ec235bf72b069cefe3f50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1ac780c217504f0ca673ac5dcb98768984267c60"],"bb3e075eaa5788b2762ec235bf72b069cefe3f50":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bb3e075eaa5788b2762ec235bf72b069cefe3f50"]},"commit2Childs":{"1ac780c217504f0ca673ac5dcb98768984267c60":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb3e075eaa5788b2762ec235bf72b069cefe3f50","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"bb3e075eaa5788b2762ec235bf72b069cefe3f50":["1ac780c217504f0ca673ac5dcb98768984267c60","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}