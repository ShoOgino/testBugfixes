{"path":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","commits":[{"id":"09517fe4d278fb37c05202d2a897d77a48f3e002","date":1332454823,"type":0,"author":"Tommaso Teofili","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solrconfig-mergepolicy.xml\");\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertEquals(\"org.apache.lucene.index.TieredMergePolicy\", solrIndexConfig.defaultMergePolicyClassName);\n    IndexSchema indexSchema = new IndexSchema(solrConfig, \"schema.xml\", null);\n    solrIndexConfig.toIndexWriterConfig(indexSchema);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21591922fb4db3e2a6ffb2cb342b3d61c053a973","date":1340761680,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","sourceNew":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solr\" + File.separator\n        + \"collection1\", \"solrconfig-mergepolicy.xml\", null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    assertEquals(\"org.apache.lucene.index.TieredMergePolicy\",\n        solrIndexConfig.defaultMergePolicyClassName);\n    IndexSchema indexSchema = new IndexSchema(solrConfig, \"schema.xml\", null);\n    solrIndexConfig.toIndexWriterConfig(indexSchema);\n  }\n\n","sourceOld":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solrconfig-mergepolicy.xml\");\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertEquals(\"org.apache.lucene.index.TieredMergePolicy\", solrIndexConfig.defaultMergePolicyClassName);\n    IndexSchema indexSchema = new IndexSchema(solrConfig, \"schema.xml\", null);\n    solrIndexConfig.toIndexWriterConfig(indexSchema);\n  }\n\n","bugFix":null,"bugIntro":["5cedf6c663f63b47755a40ae6cd1405a7fe6b24d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","sourceNew":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solr\" + File.separator\n        + \"collection1\", \"solrconfig-mergepolicy.xml\", null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    assertEquals(\"org.apache.lucene.index.TieredMergePolicy\",\n        solrIndexConfig.defaultMergePolicyClassName);\n    IndexSchema indexSchema = new IndexSchema(solrConfig, \"schema.xml\", null);\n    solrIndexConfig.toIndexWriterConfig(indexSchema);\n  }\n\n","sourceOld":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solrconfig-mergepolicy.xml\");\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    assertNotNull(solrIndexConfig);\n    assertEquals(\"org.apache.lucene.index.TieredMergePolicy\", solrIndexConfig.defaultMergePolicyClassName);\n    IndexSchema indexSchema = new IndexSchema(solrConfig, \"schema.xml\", null);\n    solrIndexConfig.toIndexWriterConfig(indexSchema);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9cf81bc8c6e4078e236f0e38b3a2d0271854f207","date":1364832963,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","sourceNew":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solr\" + File.separator\n        + \"collection1\", \"solrconfig-mergepolicy.xml\", null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    assertEquals(\"org.apache.lucene.index.TieredMergePolicy\",\n        solrIndexConfig.defaultMergePolicyClassName);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n    solrIndexConfig.toIndexWriterConfig(indexSchema);\n  }\n\n","sourceOld":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solr\" + File.separator\n        + \"collection1\", \"solrconfig-mergepolicy.xml\", null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    assertEquals(\"org.apache.lucene.index.TieredMergePolicy\",\n        solrIndexConfig.defaultMergePolicyClassName);\n    IndexSchema indexSchema = new IndexSchema(solrConfig, \"schema.xml\", null);\n    solrIndexConfig.toIndexWriterConfig(indexSchema);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ebde9486a977af222624985a28edb3aa31b0be06","date":1375749490,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","sourceNew":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solr\" + File.separator\n        + \"collection1\", \"solrconfig-mergepolicy.xml\", null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(indexSchema);\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TMP\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solr\" + File.separator\n        + \"collection1\", \"solrconfig-mergepolicy.xml\", null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    assertEquals(\"org.apache.lucene.index.TieredMergePolicy\",\n        solrIndexConfig.defaultMergePolicyClassName);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n    solrIndexConfig.toIndexWriterConfig(indexSchema);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","sourceNew":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solr\" + File.separator\n        + \"collection1\", \"solrconfig-mergepolicy.xml\", null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(indexSchema);\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TMP\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solr\" + File.separator\n        + \"collection1\", \"solrconfig-mergepolicy.xml\", null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    assertEquals(\"org.apache.lucene.index.TieredMergePolicy\",\n        solrIndexConfig.defaultMergePolicyClassName);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n    solrIndexConfig.toIndexWriterConfig(indexSchema);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb79e9d21cd02f5118615fa9df1ac079d1327196","date":1377721131,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","sourceNew":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solr\" + File.separator\n        + \"collection1\", \"solrconfig-tieredmergepolicy.xml\", null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(indexSchema);\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TMP\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solr\" + File.separator\n        + \"collection1\", \"solrconfig-mergepolicy.xml\", null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(indexSchema);\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TMP\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","bugFix":null,"bugIntro":["5cedf6c663f63b47755a40ae6cd1405a7fe6b24d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","sourceNew":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solr\" + File.separator\n        + \"collection1\", \"solrconfig-tieredmergepolicy.xml\", null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(indexSchema);\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TMP\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solr\" + File.separator\n        + \"collection1\", \"solrconfig-mergepolicy.xml\", null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(indexSchema);\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TMP\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0","date":1422781929,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","sourceNew":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solr\" + File.separator\n        + \"collection1\", \"solrconfig-tieredmergepolicy.xml\", null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TMP\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solr\" + File.separator\n        + \"collection1\", \"solrconfig-tieredmergepolicy.xml\", null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(indexSchema);\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TMP\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cedf6c663f63b47755a40ae6cd1405a7fe6b24d","date":1435939256,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","sourceNew":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameTieredMergePolicy, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TMP\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(\"solr\" + File.separator\n        + \"collection1\", \"solrconfig-tieredmergepolicy.xml\", null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TMP\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","bugFix":["bb79e9d21cd02f5118615fa9df1ac079d1327196","21591922fb4db3e2a6ffb2cb342b3d61c053a973"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9de9cb439f6b08d8865ea8c3fc81091598312851","date":1451904531,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","sourceNew":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameTieredMergePolicy, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameTieredMergePolicy, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TMP\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0d5133e42b1e15c059bf161799dec4fd263bce8","date":1452251193,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","sourceNew":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameTieredMergePolicy, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameTieredMergePolicy, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e02c0d6a64df9c63897458b31d88b5ec3b854a5","date":1454964111,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","sourceNew":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = random().nextBoolean() ? solrConfigFileNameTieredMergePolicy : solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileNameTieredMergePolicy, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null,\n        null);\n    assertNotNull(solrIndexConfig);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70d848516a5d0b23d183a2ceb4f4fb8634205956","date":1496408348,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","sourceNew":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = random().nextBoolean() ? solrConfigFileNameTieredMergePolicy : solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","sourceNew":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = random().nextBoolean() ? solrConfigFileNameTieredMergePolicy : solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","sourceNew":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = random().nextBoolean() ? solrConfigFileNameTieredMergePolicy : solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1fc849bc99a046ff6fb7e03c792f2a4ddee419f2","date":1524216844,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","sourceNew":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", true, ms.getAutoIOThrottle());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96","date":1576143009,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","sourceNew":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null, true);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", true, ms.getAutoIOThrottle());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", true, ms.getAutoIOThrottle());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df724d84dab24a0cc54bec95a8680867adc7f171","date":1576156608,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","sourceNew":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null, true);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", true, ms.getAutoIOThrottle());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", true, ms.getAutoIOThrottle());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexConfigTest#testTieredMPSolrIndexConfigCreation().mjava","sourceNew":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", true, ms.getAutoIOThrottle());\n\n  }\n\n","sourceOld":"  @Test\n  public void testTieredMPSolrIndexConfigCreation() throws Exception {\n    String solrConfigFileName = solrConfigFileNameTieredMergePolicyFactory;\n    SolrConfig solrConfig = new SolrConfig(instanceDir, solrConfigFileName, null, true);\n    SolrIndexConfig solrIndexConfig = new SolrIndexConfig(solrConfig, null, null);\n    IndexSchema indexSchema = IndexSchemaFactory.buildIndexSchema(schemaFileName, solrConfig);\n    \n    h.getCore().setLatestSchema(indexSchema);\n    IndexWriterConfig iwc = solrIndexConfig.toIndexWriterConfig(h.getCore());\n\n    assertNotNull(\"null mp\", iwc.getMergePolicy());\n    assertTrue(\"mp is not TieredMergePolicy\", iwc.getMergePolicy() instanceof TieredMergePolicy);\n    TieredMergePolicy mp = (TieredMergePolicy) iwc.getMergePolicy();\n    assertEquals(\"mp.maxMergeAtOnceExplicit\", 19, mp.getMaxMergeAtOnceExplicit());\n    assertEquals(\"mp.segmentsPerTier\",9,(int)mp.getSegmentsPerTier());\n\n    assertNotNull(\"null ms\", iwc.getMergeScheduler());\n    assertTrue(\"ms is not CMS\", iwc.getMergeScheduler() instanceof ConcurrentMergeScheduler);\n    ConcurrentMergeScheduler ms = (ConcurrentMergeScheduler)  iwc.getMergeScheduler();\n    assertEquals(\"ms.maxMergeCount\", 987, ms.getMaxMergeCount());\n    assertEquals(\"ms.maxThreadCount\", 42, ms.getMaxThreadCount());\n    assertEquals(\"ms.isAutoIOThrottle\", true, ms.getAutoIOThrottle());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5cedf6c663f63b47755a40ae6cd1405a7fe6b24d":["5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["9cf81bc8c6e4078e236f0e38b3a2d0271854f207","ebde9486a977af222624985a28edb3aa31b0be06"],"1fc849bc99a046ff6fb7e03c792f2a4ddee419f2":["28288370235ed02234a64753cdbf0c6ec096304a"],"21591922fb4db3e2a6ffb2cb342b3d61c053a973":["09517fe4d278fb37c05202d2a897d77a48f3e002"],"6e02c0d6a64df9c63897458b31d88b5ec3b854a5":["f0d5133e42b1e15c059bf161799dec4fd263bce8"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","bb79e9d21cd02f5118615fa9df1ac079d1327196"],"9de9cb439f6b08d8865ea8c3fc81091598312851":["5cedf6c663f63b47755a40ae6cd1405a7fe6b24d"],"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96":["1fc849bc99a046ff6fb7e03c792f2a4ddee419f2"],"70d848516a5d0b23d183a2ceb4f4fb8634205956":["6e02c0d6a64df9c63897458b31d88b5ec3b854a5"],"28288370235ed02234a64753cdbf0c6ec096304a":["6e02c0d6a64df9c63897458b31d88b5ec3b854a5","70d848516a5d0b23d183a2ceb4f4fb8634205956"],"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0":["bb79e9d21cd02f5118615fa9df1ac079d1327196"],"df724d84dab24a0cc54bec95a8680867adc7f171":["1fc849bc99a046ff6fb7e03c792f2a4ddee419f2","ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"f0d5133e42b1e15c059bf161799dec4fd263bce8":["9de9cb439f6b08d8865ea8c3fc81091598312851"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["6e02c0d6a64df9c63897458b31d88b5ec3b854a5","70d848516a5d0b23d183a2ceb4f4fb8634205956"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"9cf81bc8c6e4078e236f0e38b3a2d0271854f207":["21591922fb4db3e2a6ffb2cb342b3d61c053a973"],"09517fe4d278fb37c05202d2a897d77a48f3e002":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["09517fe4d278fb37c05202d2a897d77a48f3e002","21591922fb4db3e2a6ffb2cb342b3d61c053a973"],"ebde9486a977af222624985a28edb3aa31b0be06":["9cf81bc8c6e4078e236f0e38b3a2d0271854f207"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb79e9d21cd02f5118615fa9df1ac079d1327196":["ebde9486a977af222624985a28edb3aa31b0be06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"]},"commit2Childs":{"5cedf6c663f63b47755a40ae6cd1405a7fe6b24d":["9de9cb439f6b08d8865ea8c3fc81091598312851"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"1fc849bc99a046ff6fb7e03c792f2a4ddee419f2":["ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96","df724d84dab24a0cc54bec95a8680867adc7f171"],"21591922fb4db3e2a6ffb2cb342b3d61c053a973":["9cf81bc8c6e4078e236f0e38b3a2d0271854f207","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"6e02c0d6a64df9c63897458b31d88b5ec3b854a5":["70d848516a5d0b23d183a2ceb4f4fb8634205956","28288370235ed02234a64753cdbf0c6ec096304a","e9017cf144952056066919f1ebc7897ff9bd71b1"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"9de9cb439f6b08d8865ea8c3fc81091598312851":["f0d5133e42b1e15c059bf161799dec4fd263bce8"],"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96":["df724d84dab24a0cc54bec95a8680867adc7f171","ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"70d848516a5d0b23d183a2ceb4f4fb8634205956":["28288370235ed02234a64753cdbf0c6ec096304a","e9017cf144952056066919f1ebc7897ff9bd71b1"],"28288370235ed02234a64753cdbf0c6ec096304a":["1fc849bc99a046ff6fb7e03c792f2a4ddee419f2"],"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0":["5cedf6c663f63b47755a40ae6cd1405a7fe6b24d"],"df724d84dab24a0cc54bec95a8680867adc7f171":[],"f0d5133e42b1e15c059bf161799dec4fd263bce8":["6e02c0d6a64df9c63897458b31d88b5ec3b854a5"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9cf81bc8c6e4078e236f0e38b3a2d0271854f207":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","ebde9486a977af222624985a28edb3aa31b0be06"],"09517fe4d278fb37c05202d2a897d77a48f3e002":["21591922fb4db3e2a6ffb2cb342b3d61c053a973","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"ebde9486a977af222624985a28edb3aa31b0be06":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","bb79e9d21cd02f5118615fa9df1ac079d1327196"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09517fe4d278fb37c05202d2a897d77a48f3e002"],"bb79e9d21cd02f5118615fa9df1ac079d1327196":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","df724d84dab24a0cc54bec95a8680867adc7f171","e9017cf144952056066919f1ebc7897ff9bd71b1","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}