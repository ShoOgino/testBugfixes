{"path":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    DocValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    DocValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    DocValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    DocValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    DocValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    DocValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32e7c2a80dad193a76a03ec46b878969d469ff6c","date":1323722006,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    FunctionValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    DocValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    FunctionValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    DocValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8493985e6883b3fa8231d172694d2aa3a85cb182","date":1327920390,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    IndexReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    FunctionValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    FunctionValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    IndexReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    FunctionValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    FunctionValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d4602ca2700dfd2f6159ad1499e5b6d1f3b92a8","date":1328775259,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    IndexReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = topReaderContext.leaves();\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    FunctionValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    IndexReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    FunctionValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","date":1340090669,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    IndexReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    List<AtomicReaderContext> leaves = topReaderContext.leaves();\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves.get(idx);\n    FunctionValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    IndexReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = topReaderContext.leaves();\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    FunctionValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    IndexReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    List<AtomicReaderContext> leaves = topReaderContext.leaves();\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves.get(idx);\n    FunctionValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    IndexReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    List<AtomicReaderContext> leaves = topReaderContext.leaves();\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves.get(idx);\n    FunctionValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    IndexReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    List<AtomicReaderContext> leaves = topReaderContext.leaves();\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves.get(idx);\n    FunctionValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    IndexReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    List<AtomicReaderContext> leaves = topReaderContext.leaves();\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves.get(idx);\n    FunctionValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    IndexReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    List<LeafReaderContext> leaves = topReaderContext.leaves();\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    LeafReaderContext leaf = leaves.get(idx);\n    FunctionValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    IndexReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    List<AtomicReaderContext> leaves = topReaderContext.leaves();\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves.get(idx);\n    FunctionValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    @SuppressWarnings({\"rawtypes\"})\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    IndexReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    List<LeafReaderContext> leaves = topReaderContext.leaves();\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    LeafReaderContext leaf = leaves.get(idx);\n    FunctionValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    IndexReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    List<LeafReaderContext> leaves = topReaderContext.leaves();\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    LeafReaderContext leaf = leaves.get(idx);\n    FunctionValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8493985e6883b3fa8231d172694d2aa3a85cb182":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","19275ba31e621f6da1b83bf13af75233876fd3d4"],"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["0d4602ca2700dfd2f6159ad1499e5b6d1f3b92a8"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"0d4602ca2700dfd2f6159ad1499e5b6d1f3b92a8":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["d638301ad1cfcae567b681b893bc8781f0ee48a5","8493985e6883b3fa8231d172694d2aa3a85cb182"],"e98520789adb1d5ad05afb4956eca0944a929688":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["c26f00b574427b55127e869b935845554afde1fa","32e7c2a80dad193a76a03ec46b878969d469ff6c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"32e7c2a80dad193a76a03ec46b878969d469ff6c":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"]},"commit2Childs":{"8493985e6883b3fa8231d172694d2aa3a85cb182":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c26f00b574427b55127e869b935845554afde1fa":["d638301ad1cfcae567b681b893bc8781f0ee48a5","32e7c2a80dad193a76a03ec46b878969d469ff6c"],"0d4602ca2700dfd2f6159ad1499e5b6d1f3b92a8":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","c9fb5f46e264daf5ba3860defe623a89d202dd87"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["0d4602ca2700dfd2f6159ad1499e5b6d1f3b92a8"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["e98520789adb1d5ad05afb4956eca0944a929688"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["8493985e6883b3fa8231d172694d2aa3a85cb182","5cab9a86bd67202d20b6adc463008c8e982b070a"],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"32e7c2a80dad193a76a03ec46b878969d469ff6c":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}