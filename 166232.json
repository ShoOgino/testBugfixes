{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/SpatialDocMaker#makeSpatialStrategy(Config).mjava","commits":[{"id":"e6eff3a1335608b62ce74c7f052b277baedb721e","date":1382897865,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/SpatialDocMaker#makeSpatialStrategy(Config).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Builds a SpatialStrategy from configuration options.\n   */\n  protected SpatialStrategy makeSpatialStrategy(final Config config) {\n    //A Map view of Config that prefixes keys with \"spatial.\"\n    Map<String, String> configMap = new AbstractMap<String, String>() {\n      @Override\n      public Set<Entry<String, String>> entrySet() {\n        throw new UnsupportedOperationException();\n      }\n\n      @Override\n      public String get(Object key) {\n        return config.get(\"spatial.\" + key, null);\n      }\n    };\n\n    SpatialContext ctx = SpatialContextFactory.makeSpatialContext(configMap, null);\n\n    //Some day the strategy might be initialized with a factory but such a factory\n    // is non-existent.\n    return makeSpatialStrategy(config, configMap, ctx);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11e8ea32003f6ccf3282ad6c05ca47eec277e928","date":1428695518,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/SpatialDocMaker#makeSpatialStrategy(Config).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/SpatialDocMaker#makeSpatialStrategy(Config).mjava","sourceNew":"  /**\n   * Builds a SpatialStrategy from configuration options.\n   */\n  protected SpatialStrategy makeSpatialStrategy(final Config config) {\n    //A Map view of Config that prefixes keys with \"spatial.\"\n    Map<String, String> configMap = new AbstractMap<String, String>() {\n      @Override\n      public Set<Entry<String, String>> entrySet() {\n        throw new UnsupportedOperationException();\n      }\n\n      @Override\n      public String get(Object key) {\n        return config.get(\"spatial.\" + key, null);\n      }\n    };\n\n    SpatialContext ctx = SpatialContextFactory.makeSpatialContext(configMap, null);\n\n    return makeSpatialStrategy(config, configMap, ctx);\n  }\n\n","sourceOld":"  /**\n   * Builds a SpatialStrategy from configuration options.\n   */\n  protected SpatialStrategy makeSpatialStrategy(final Config config) {\n    //A Map view of Config that prefixes keys with \"spatial.\"\n    Map<String, String> configMap = new AbstractMap<String, String>() {\n      @Override\n      public Set<Entry<String, String>> entrySet() {\n        throw new UnsupportedOperationException();\n      }\n\n      @Override\n      public String get(Object key) {\n        return config.get(\"spatial.\" + key, null);\n      }\n    };\n\n    SpatialContext ctx = SpatialContextFactory.makeSpatialContext(configMap, null);\n\n    //Some day the strategy might be initialized with a factory but such a factory\n    // is non-existent.\n    return makeSpatialStrategy(config, configMap, ctx);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e6eff3a1335608b62ce74c7f052b277baedb721e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"11e8ea32003f6ccf3282ad6c05ca47eec277e928":["e6eff3a1335608b62ce74c7f052b277baedb721e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["11e8ea32003f6ccf3282ad6c05ca47eec277e928"]},"commit2Childs":{"e6eff3a1335608b62ce74c7f052b277baedb721e":["11e8ea32003f6ccf3282ad6c05ca47eec277e928"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e6eff3a1335608b62ce74c7f052b277baedb721e"],"11e8ea32003f6ccf3282ad6c05ca47eec277e928":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}