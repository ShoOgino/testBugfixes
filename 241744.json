{"path":"lucene/backwards/src/java/org/apache/lucene/index/LogMergePolicy#setMergeFactor(int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/LogMergePolicy#setMergeFactor(int).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/LogMergePolicy#setMergeFactor(int).mjava","sourceNew":"  /** Determines how often segment indices are merged by\n   * addDocument().  With smaller values, less RAM is used\n   * while indexing, and searches on unoptimized indices are\n   * faster, but indexing speed is slower.  With larger\n   * values, more RAM is used during indexing, and while\n   * searches on unoptimized indices are slower, indexing is\n   * faster.  Thus larger values (> 10) are best for batch\n   * index creation, and smaller values (< 10) for indices\n   * that are interactively maintained. */\n  public void setMergeFactor(int mergeFactor) {\n    if (mergeFactor < 2)\n      throw new IllegalArgumentException(\"mergeFactor cannot be less than 2\");\n    this.mergeFactor = mergeFactor;\n  }\n\n","sourceOld":"  /** Determines how often segment indices are merged by\n   * addDocument().  With smaller values, less RAM is used\n   * while indexing, and searches on unoptimized indices are\n   * faster, but indexing speed is slower.  With larger\n   * values, more RAM is used during indexing, and while\n   * searches on unoptimized indices are slower, indexing is\n   * faster.  Thus larger values (> 10) are best for batch\n   * index creation, and smaller values (< 10) for indices\n   * that are interactively maintained. */\n  public void setMergeFactor(int mergeFactor) {\n    if (mergeFactor < 2)\n      throw new IllegalArgumentException(\"mergeFactor cannot be less than 2\");\n    this.mergeFactor = mergeFactor;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/index/LogMergePolicy#setMergeFactor(int).mjava","sourceNew":null,"sourceOld":"  /** Determines how often segment indices are merged by\n   * addDocument().  With smaller values, less RAM is used\n   * while indexing, and searches on unoptimized indices are\n   * faster, but indexing speed is slower.  With larger\n   * values, more RAM is used during indexing, and while\n   * searches on unoptimized indices are slower, indexing is\n   * faster.  Thus larger values (> 10) are best for batch\n   * index creation, and smaller values (< 10) for indices\n   * that are interactively maintained. */\n  public void setMergeFactor(int mergeFactor) {\n    if (mergeFactor < 2)\n      throw new IllegalArgumentException(\"mergeFactor cannot be less than 2\");\n    this.mergeFactor = mergeFactor;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}