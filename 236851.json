{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimLargeCluster.TestTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","commits":[{"id":"a6a5c1c40529f15b445e6720dfde1967e139bff1","date":1535375643,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimLargeCluster.TestTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestLargeCluster.TestTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","sourceNew":"    @Override\n    public synchronized void onEvent(TriggerEvent event, TriggerEventProcessorStage stage, String actionName,\n                                     ActionContext context, Throwable error, String message) {\n      List<CapturedEvent> lst = listenerEvents.computeIfAbsent(config.name, s -> new ArrayList<>());\n      lst.add(new CapturedEvent(cluster.getTimeSource().getTimeNs(), context, config, stage, actionName, event, message));\n    }\n\n","sourceOld":"    @Override\n    public synchronized void onEvent(TriggerEvent event, TriggerEventProcessorStage stage, String actionName,\n                                     ActionContext context, Throwable error, String message) {\n      List<CapturedEvent> lst = listenerEvents.computeIfAbsent(config.name, s -> new ArrayList<>());\n      lst.add(new CapturedEvent(cluster.getTimeSource().getTimeNs(), context, config, stage, actionName, event, message));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30004ef8212d169b5fc7d098ec7aa299c8b5f060","date":1551998457,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimLargeCluster.TestTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimLargeCluster.TestTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","sourceNew":"    @Override\n    public synchronized void onEvent(TriggerEvent event, TriggerEventProcessorStage stage, String actionName,\n                                     ActionContext context, Throwable error, String message) {\n      CapturedEvent ev = new CapturedEvent(cluster.getTimeSource().getTimeNs(), context, config, stage, actionName, event, message);\n      final CountDownLatch latch = listenerEventLatch;\n      synchronized (latch) {\n        if (0 == latch.getCount()) {\n          log.warn(\"Ignoring captured event since latch is 'full': {}\", ev);\n        } else {\n          List<CapturedEvent> lst = listenerEvents.computeIfAbsent(config.name, s -> new ArrayList<>());\n          lst.add(ev);\n          latch.countDown();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public synchronized void onEvent(TriggerEvent event, TriggerEventProcessorStage stage, String actionName,\n                                     ActionContext context, Throwable error, String message) {\n      List<CapturedEvent> lst = listenerEvents.computeIfAbsent(config.name, s -> new ArrayList<>());\n      lst.add(new CapturedEvent(cluster.getTimeSource().getTimeNs(), context, config, stage, actionName, event, message));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimLargeCluster.TestTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","sourceNew":null,"sourceOld":"    @Override\n    public synchronized void onEvent(TriggerEvent event, TriggerEventProcessorStage stage, String actionName,\n                                     ActionContext context, Throwable error, String message) {\n      CapturedEvent ev = new CapturedEvent(cluster.getTimeSource().getTimeNs(), context, config, stage, actionName, event, message);\n      final CountDownLatch latch = listenerEventLatch;\n      synchronized (latch) {\n        if (0 == latch.getCount()) {\n          log.warn(\"Ignoring captured event since latch is 'full': {}\", ev);\n        } else {\n          List<CapturedEvent> lst = listenerEvents.computeIfAbsent(config.name, s -> new ArrayList<>());\n          lst.add(ev);\n          latch.countDown();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a6a5c1c40529f15b445e6720dfde1967e139bff1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"30004ef8212d169b5fc7d098ec7aa299c8b5f060":["a6a5c1c40529f15b445e6720dfde1967e139bff1"],"3f504512a03d978990cbff30db0522b354e846db":["30004ef8212d169b5fc7d098ec7aa299c8b5f060"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"a6a5c1c40529f15b445e6720dfde1967e139bff1":["30004ef8212d169b5fc7d098ec7aa299c8b5f060"],"30004ef8212d169b5fc7d098ec7aa299c8b5f060":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a6a5c1c40529f15b445e6720dfde1967e139bff1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}