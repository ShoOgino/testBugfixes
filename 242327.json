{"path":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","commits":[{"id":"ea469eab8fd0f3032f4fcde1c644a721e8309d3b","date":1320301582,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyWriter#commit(Map[String,String]).mjava","sourceNew":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws CorruptIndexException, IOException {\n    indexWriter.commit(commitUserData);\n    refreshReader();\n  }\n\n","sourceOld":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link LuceneTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  public synchronized void commit(Map<String,String> commitUserData) throws CorruptIndexException, IOException {\n    indexWriter.commit(commitUserData);\n    refreshReader();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea12b2546032c4f36b75a21b68c0b64334e31e88","date":1321433791,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","sourceNew":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws CorruptIndexException, IOException {\n    ensureOpen();\n    indexWriter.commit(commitUserData);\n    refreshReader();\n  }\n\n","sourceOld":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws CorruptIndexException, IOException {\n    indexWriter.commit(commitUserData);\n    refreshReader();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"233afcf63b8d53faa9a7993e911cc9873b0106d1","date":1321459183,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","sourceNew":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws CorruptIndexException, IOException {\n    ensureOpen();\n    if (taxoIndexCreateTime != null) {\n      indexWriter.commit(combinedCommitData(commitUserData));\n      taxoIndexCreateTime = null;\n    } else {\n      indexWriter.commit(commitUserData);\n    }\n    refreshReader();\n  }\n\n","sourceOld":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws CorruptIndexException, IOException {\n    ensureOpen();\n    indexWriter.commit(commitUserData);\n    refreshReader();\n  }\n\n","bugFix":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"bugIntro":["e26e3b5080bfb6fcabdc46d0072efe441de1a21b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e26e3b5080bfb6fcabdc46d0072efe441de1a21b","date":1329396896,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","sourceNew":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws CorruptIndexException, IOException {\n    ensureOpen();\n    indexWriter.commit(combinedCommitData(commitUserData));\n    refreshReader();\n  }\n\n","sourceOld":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws CorruptIndexException, IOException {\n    ensureOpen();\n    if (taxoIndexCreateTime != null) {\n      indexWriter.commit(combinedCommitData(commitUserData));\n      taxoIndexCreateTime = null;\n    } else {\n      indexWriter.commit(commitUserData);\n    }\n    refreshReader();\n  }\n\n","bugFix":["233afcf63b8d53faa9a7993e911cc9873b0106d1"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#commit(Map[String,String]).mjava","sourceNew":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws CorruptIndexException, IOException {\n    ensureOpen();\n    indexWriter.commit(combinedCommitData(commitUserData));\n    refreshReader();\n  }\n\n","sourceOld":"  /**\n   * Like commit(), but also store properties with the index. These properties\n   * are retrievable by {@link DirectoryTaxonomyReader#getCommitUserData}.\n   * See {@link TaxonomyWriter#commit(Map)}. \n   */\n  @Override\n  public synchronized void commit(Map<String,String> commitUserData) throws CorruptIndexException, IOException {\n    ensureOpen();\n    indexWriter.commit(combinedCommitData(commitUserData));\n    refreshReader();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ea12b2546032c4f36b75a21b68c0b64334e31e88":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e26e3b5080bfb6fcabdc46d0072efe441de1a21b"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e26e3b5080bfb6fcabdc46d0072efe441de1a21b":["233afcf63b8d53faa9a7993e911cc9873b0106d1"],"233afcf63b8d53faa9a7993e911cc9873b0106d1":["ea12b2546032c4f36b75a21b68c0b64334e31e88"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"ea12b2546032c4f36b75a21b68c0b64334e31e88":["233afcf63b8d53faa9a7993e911cc9873b0106d1"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["ea12b2546032c4f36b75a21b68c0b64334e31e88"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"e26e3b5080bfb6fcabdc46d0072efe441de1a21b":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"233afcf63b8d53faa9a7993e911cc9873b0106d1":["e26e3b5080bfb6fcabdc46d0072efe441de1a21b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}