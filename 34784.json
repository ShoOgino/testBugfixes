{"path":"lucene/core/src/java/org/apache/lucene/search/Scorable#setMinCompetitiveScore(float).mjava","commits":[{"id":"285244982ce6aa163d1e60a707f0e6e121736ce5","date":1536055304,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Scorable#setMinCompetitiveScore(float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Scorer#setMinCompetitiveScore(float).mjava","sourceNew":"  /**\n   * Optional method: Tell the scorer that its iterator may safely ignore all\n   * documents whose score is less than the given {@code minScore}. This is a\n   * no-op by default.\n   *\n   * This method may only be called from collectors that use\n   * {@link ScoreMode#TOP_SCORES}, and successive calls may only set increasing\n   * values of {@code minScore}.\n   */\n  public void setMinCompetitiveScore(float minScore) {\n    // no-op by default\n  }\n\n","sourceOld":"  /**\n   * Optional method: Tell the scorer that its iterator may safely ignore all\n   * documents whose score is less than the given {@code minScore}. This is a\n   * no-op by default.\n   *\n   * This method may only be called from collectors that use\n   * {@link ScoreMode#TOP_SCORES}, and successive calls may only set increasing\n   * values of {@code minScore}.\n   */\n  public void setMinCompetitiveScore(float minScore) {\n    // no-op by default\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0dc52d2a83be9420989b1976a8e9d937160e1e5","date":1536062604,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Scorable#setMinCompetitiveScore(float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Scorable#setMinCompetitiveScore(float).mjava","sourceNew":"  /**\n   * Optional method: Tell the scorer that its iterator may safely ignore all\n   * documents whose score is less than the given {@code minScore}. This is a\n   * no-op by default.\n   *\n   * This method may only be called from collectors that use\n   * {@link ScoreMode#TOP_SCORES}, and successive calls may only set increasing\n   * values of {@code minScore}.\n   */\n  public void setMinCompetitiveScore(float minScore) throws IOException {\n    // no-op by default\n  }\n\n","sourceOld":"  /**\n   * Optional method: Tell the scorer that its iterator may safely ignore all\n   * documents whose score is less than the given {@code minScore}. This is a\n   * no-op by default.\n   *\n   * This method may only be called from collectors that use\n   * {@link ScoreMode#TOP_SCORES}, and successive calls may only set increasing\n   * values of {@code minScore}.\n   */\n  public void setMinCompetitiveScore(float minScore) {\n    // no-op by default\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d0dc52d2a83be9420989b1976a8e9d937160e1e5":["285244982ce6aa163d1e60a707f0e6e121736ce5"],"285244982ce6aa163d1e60a707f0e6e121736ce5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0dc52d2a83be9420989b1976a8e9d937160e1e5"]},"commit2Childs":{"d0dc52d2a83be9420989b1976a8e9d937160e1e5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"285244982ce6aa163d1e60a707f0e6e121736ce5":["d0dc52d2a83be9420989b1976a8e9d937160e1e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["285244982ce6aa163d1e60a707f0e6e121736ce5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}