{"path":"solr/core/src/test/org/apache/solr/core/TestDynamicLoadingUrl#testDynamicLoadingUrl().mjava","commits":[{"id":"627e70d5711ab39d080a080f089685268525f54d","date":1560754171,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestDynamicLoadingUrl#testDynamicLoadingUrl().mjava","pathOld":"/dev/null","sourceNew":"  public void testDynamicLoadingUrl() throws Exception {\n    setupRestTestHarnesses();\n    String payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/jarhandler', 'class': \" + JarHandler.class.getName() +\n        \", registerPath: '/solr,/v2' }\\n\" +\n        \"}\";\n\n    RestTestHarness client = randomRestTestHarness();\n    TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n    TestSolrConfigHandler.testForResponseElement(client,\n        null,\n        \"/config/overlay\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/jarhandler\", \"class\"),\n        JarHandler.class.getName(), 10);\n      payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : '\" + client.getBaseURL() + \"/jarhandler?wt=filestream'\" +\n          \"  'sha512':'e01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      client = randomRestTestHarness();\n    TestSolrConfigHandler.runConfigCommandExpectFailure(client, \"/config\", payload, \"Invalid jar\");\n\n\n//    String url = client\n    payload = \"{\\n\" +\n        \"'add-runtimelib' : { 'name' : 'urljar', url : '\" + client.getBaseURL() + \"/jarhandler?wt=filestream'\" +\n        \"  'sha512':'d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n        \"}\";\n    client = randomRestTestHarness();\n    TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n    TestSolrConfigHandler.testForResponseElement(client,\n        null,\n        \"/config/overlay\",\n        null,\n        Arrays.asList(\"overlay\", \"runtimeLib\", \"urljar\", \"sha512\"),\n        \"d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420\", 10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/runtime', 'class': 'org.apache.solr.core.RuntimeLibReqHandler', 'runtimeLib' : true}\" +\n        \"}\";\n    client = randomRestTestHarness();\n    TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(client,\n        null,\n        \"/config/overlay\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/runtime\", \"class\"),\n        \"org.apache.solr.core.RuntimeLibReqHandler\", 10);\n\n    Map result = TestSolrConfigHandler.testForResponseElement(client,\n        null,\n        \"/runtime\",\n        null,\n        Arrays.asList(\"class\"),\n        \"org.apache.solr.core.RuntimeLibReqHandler\", 10);\n    compareValues(result, MemClassLoader.class.getName(), asList(\"loader\"));\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b142cb61741dce35806488349aa87e09f4c93aa5","date":1563241993,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestDynamicLoadingUrl#testDynamicLoadingUrl().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestDynamicLoadingUrl#testDynamicLoadingUrl().mjava","sourceNew":"  public void testDynamicLoadingUrl() throws Exception {\n    setupRestTestHarnesses();\n    Pair<Server, Integer> pair = runHttpServer(ImmutableMap.of(\"/jar1.jar\", getFileContent(\"runtimecode/runtimelibs.jar.bin\")));\n    Integer port = pair.second();\n\n    try {\n      String payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha512':'e01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      RestTestHarness client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommandExpectFailure(client, \"/config\", payload, \"Invalid jar\");\n\n\n      payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha512':'d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"runtimeLib\", \"urljar\", \"sha512\"),\n          \"d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420\", 10);\n\n      payload = \"{\\n\" +\n          \"'create-requesthandler' : { 'name' : '/runtime', 'class': 'org.apache.solr.core.RuntimeLibReqHandler', 'runtimeLib' : true}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"requestHandler\", \"/runtime\", \"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 10);\n\n      Map result = TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/runtime\",\n          null,\n          Arrays.asList(\"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 10);\n      compareValues(result, MemClassLoader.class.getName(), asList(\"loader\"));\n    } finally {\n      pair.first().stop();\n\n    }\n\n\n  }\n\n","sourceOld":"  public void testDynamicLoadingUrl() throws Exception {\n    setupRestTestHarnesses();\n    String payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/jarhandler', 'class': \" + JarHandler.class.getName() +\n        \", registerPath: '/solr,/v2' }\\n\" +\n        \"}\";\n\n    RestTestHarness client = randomRestTestHarness();\n    TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n    TestSolrConfigHandler.testForResponseElement(client,\n        null,\n        \"/config/overlay\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/jarhandler\", \"class\"),\n        JarHandler.class.getName(), 10);\n      payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : '\" + client.getBaseURL() + \"/jarhandler?wt=filestream'\" +\n          \"  'sha512':'e01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      client = randomRestTestHarness();\n    TestSolrConfigHandler.runConfigCommandExpectFailure(client, \"/config\", payload, \"Invalid jar\");\n\n\n//    String url = client\n    payload = \"{\\n\" +\n        \"'add-runtimelib' : { 'name' : 'urljar', url : '\" + client.getBaseURL() + \"/jarhandler?wt=filestream'\" +\n        \"  'sha512':'d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n        \"}\";\n    client = randomRestTestHarness();\n    TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n    TestSolrConfigHandler.testForResponseElement(client,\n        null,\n        \"/config/overlay\",\n        null,\n        Arrays.asList(\"overlay\", \"runtimeLib\", \"urljar\", \"sha512\"),\n        \"d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420\", 10);\n\n    payload = \"{\\n\" +\n        \"'create-requesthandler' : { 'name' : '/runtime', 'class': 'org.apache.solr.core.RuntimeLibReqHandler', 'runtimeLib' : true}\" +\n        \"}\";\n    client = randomRestTestHarness();\n    TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n\n    TestSolrConfigHandler.testForResponseElement(client,\n        null,\n        \"/config/overlay\",\n        null,\n        Arrays.asList(\"overlay\", \"requestHandler\", \"/runtime\", \"class\"),\n        \"org.apache.solr.core.RuntimeLibReqHandler\", 10);\n\n    Map result = TestSolrConfigHandler.testForResponseElement(client,\n        null,\n        \"/runtime\",\n        null,\n        Arrays.asList(\"class\"),\n        \"org.apache.solr.core.RuntimeLibReqHandler\", 10);\n    compareValues(result, MemClassLoader.class.getName(), asList(\"loader\"));\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e61f9dec8f74c7f84ab94e65955a43cebab2663","date":1563312863,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestDynamicLoadingUrl#testDynamicLoadingUrl().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestDynamicLoadingUrl#testDynamicLoadingUrl().mjava","sourceNew":"  public void testDynamicLoadingUrl() throws Exception {\n    setupRestTestHarnesses();\n    Pair<Server, Integer> pair = runHttpServer(ImmutableMap.of(\"/jar1.jar\", getFileContent(\"runtimecode/runtimelibs.jar.bin\")));\n    Integer port = pair.second();\n\n    try {\n      String payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha512':'e01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      RestTestHarness client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommandExpectFailure(client, \"/config\", payload, \"Invalid jar\");\n\n\n      payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha512':'d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"runtimeLib\", \"urljar\", \"sha512\"),\n          \"d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420\", 120);\n\n      payload = \"{\\n\" +\n          \"'create-requesthandler' : { 'name' : '/runtime', 'class': 'org.apache.solr.core.RuntimeLibReqHandler', 'runtimeLib' : true}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"requestHandler\", \"/runtime\", \"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 120);\n\n      Map result = TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/runtime\",\n          null,\n          Arrays.asList(\"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 120);\n      compareValues(result, MemClassLoader.class.getName(), asList(\"loader\"));\n    } finally {\n      pair.first().stop();\n\n    }\n\n\n  }\n\n","sourceOld":"  public void testDynamicLoadingUrl() throws Exception {\n    setupRestTestHarnesses();\n    Pair<Server, Integer> pair = runHttpServer(ImmutableMap.of(\"/jar1.jar\", getFileContent(\"runtimecode/runtimelibs.jar.bin\")));\n    Integer port = pair.second();\n\n    try {\n      String payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha512':'e01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      RestTestHarness client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommandExpectFailure(client, \"/config\", payload, \"Invalid jar\");\n\n\n      payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha512':'d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"runtimeLib\", \"urljar\", \"sha512\"),\n          \"d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420\", 10);\n\n      payload = \"{\\n\" +\n          \"'create-requesthandler' : { 'name' : '/runtime', 'class': 'org.apache.solr.core.RuntimeLibReqHandler', 'runtimeLib' : true}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"requestHandler\", \"/runtime\", \"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 10);\n\n      Map result = TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/runtime\",\n          null,\n          Arrays.asList(\"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 10);\n      compareValues(result, MemClassLoader.class.getName(), asList(\"loader\"));\n    } finally {\n      pair.first().stop();\n\n    }\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99d6782cf9de8c5ffeb8d0b0f103b578205af068","date":1566878682,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestDynamicLoadingUrl#testDynamicLoadingUrl().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestDynamicLoadingUrl#testDynamicLoadingUrl().mjava","sourceNew":"  public void testDynamicLoadingUrl() throws Exception {\n    setupRestTestHarnesses();\n    Pair<Server, Integer> pair = runHttpServer(ImmutableMap.of(\"/jar1.jar\", getFileContent(\"runtimecode/runtimelibs.jar.bin\")));\n    Integer port = pair.second();\n\n    try {\n      String payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha256':'e01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      RestTestHarness client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommandExpectFailure(client, \"/config\", payload, \"Invalid jar\");\n\n\n      payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha256':'e1f9e23988c19619402f1040c9251556dcd6e02b9d3e3b966a129ea1be5c70fc'}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"runtimeLib\", \"urljar\", \"sha256\"),\n          \"e1f9e23988c19619402f1040c9251556dcd6e02b9d3e3b966a129ea1be5c70fc\", 120);\n\n      payload = \"{\\n\" +\n          \"'create-requesthandler' : { 'name' : '/runtime', 'class': 'org.apache.solr.core.RuntimeLibReqHandler', 'runtimeLib' : true}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"requestHandler\", \"/runtime\", \"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 120);\n\n      Map result = TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/runtime\",\n          null,\n          Arrays.asList(\"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 120);\n      compareValues(result, MemClassLoader.class.getName(), asList(\"loader\"));\n    } finally {\n      pair.first().stop();\n\n    }\n\n\n  }\n\n","sourceOld":"  public void testDynamicLoadingUrl() throws Exception {\n    setupRestTestHarnesses();\n    Pair<Server, Integer> pair = runHttpServer(ImmutableMap.of(\"/jar1.jar\", getFileContent(\"runtimecode/runtimelibs.jar.bin\")));\n    Integer port = pair.second();\n\n    try {\n      String payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha512':'e01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      RestTestHarness client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommandExpectFailure(client, \"/config\", payload, \"Invalid jar\");\n\n\n      payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha512':'d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"runtimeLib\", \"urljar\", \"sha512\"),\n          \"d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420\", 120);\n\n      payload = \"{\\n\" +\n          \"'create-requesthandler' : { 'name' : '/runtime', 'class': 'org.apache.solr.core.RuntimeLibReqHandler', 'runtimeLib' : true}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"requestHandler\", \"/runtime\", \"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 120);\n\n      Map result = TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/runtime\",\n          null,\n          Arrays.asList(\"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 120);\n      compareValues(result, MemClassLoader.class.getName(), asList(\"loader\"));\n    } finally {\n      pair.first().stop();\n\n    }\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestDynamicLoadingUrl#testDynamicLoadingUrl().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestDynamicLoadingUrl#testDynamicLoadingUrl().mjava","sourceNew":"  public void testDynamicLoadingUrl() throws Exception {\n    setupRestTestHarnesses();\n    Pair<Server, Integer> pair = runHttpServer(ImmutableMap.of(\"/jar1.jar\", getFileContent(\"runtimecode/runtimelibs.jar.bin\")));\n    Integer port = pair.second();\n\n    try {\n      String payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha512':'e01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      RestTestHarness client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommandExpectFailure(client, \"/config\", payload, \"Invalid jar\");\n\n\n      payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha512':'d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"runtimeLib\", \"urljar\", \"sha512\"),\n          \"d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420\", 120);\n\n      payload = \"{\\n\" +\n          \"'create-requesthandler' : { 'name' : '/runtime', 'class': 'org.apache.solr.core.RuntimeLibReqHandler', 'runtimeLib' : true}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"requestHandler\", \"/runtime\", \"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 120);\n\n      Map result = TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/runtime\",\n          null,\n          Arrays.asList(\"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 120);\n      compareValues(result, MemClassLoader.class.getName(), asList(\"loader\"));\n    } finally {\n      pair.first().stop();\n\n    }\n\n\n  }\n\n","sourceOld":"  public void testDynamicLoadingUrl() throws Exception {\n    setupRestTestHarnesses();\n    Pair<Server, Integer> pair = runHttpServer(ImmutableMap.of(\"/jar1.jar\", getFileContent(\"runtimecode/runtimelibs.jar.bin\")));\n    Integer port = pair.second();\n\n    try {\n      String payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha256':'e01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      RestTestHarness client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommandExpectFailure(client, \"/config\", payload, \"Invalid jar\");\n\n\n      payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha256':'e1f9e23988c19619402f1040c9251556dcd6e02b9d3e3b966a129ea1be5c70fc'}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"runtimeLib\", \"urljar\", \"sha256\"),\n          \"e1f9e23988c19619402f1040c9251556dcd6e02b9d3e3b966a129ea1be5c70fc\", 120);\n\n      payload = \"{\\n\" +\n          \"'create-requesthandler' : { 'name' : '/runtime', 'class': 'org.apache.solr.core.RuntimeLibReqHandler', 'runtimeLib' : true}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"requestHandler\", \"/runtime\", \"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 120);\n\n      Map result = TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/runtime\",\n          null,\n          Arrays.asList(\"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 120);\n      compareValues(result, MemClassLoader.class.getName(), asList(\"loader\"));\n    } finally {\n      pair.first().stop();\n\n    }\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestDynamicLoadingUrl#testDynamicLoadingUrl().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestDynamicLoadingUrl#testDynamicLoadingUrl().mjava","sourceNew":"  public void testDynamicLoadingUrl() throws Exception {\n    setupRestTestHarnesses();\n    Pair<Server, Integer> pair = runHttpServer(ImmutableMap.of(\"/jar1.jar\", getFileContent(\"runtimecode/runtimelibs.jar.bin\")));\n    Integer port = pair.second();\n\n    try {\n      String payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha512':'e01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      RestTestHarness client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommandExpectFailure(client, \"/config\", payload, \"Invalid jar\");\n\n\n      payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha512':'d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"runtimeLib\", \"urljar\", \"sha512\"),\n          \"d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420\", 120);\n\n      payload = \"{\\n\" +\n          \"'create-requesthandler' : { 'name' : '/runtime', 'class': 'org.apache.solr.core.RuntimeLibReqHandler', 'runtimeLib' : true}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"requestHandler\", \"/runtime\", \"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 120);\n\n      Map result = TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/runtime\",\n          null,\n          Arrays.asList(\"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 120);\n      compareValues(result, MemClassLoader.class.getName(), asList(\"loader\"));\n    } finally {\n      pair.first().stop();\n\n    }\n\n\n  }\n\n","sourceOld":"  public void testDynamicLoadingUrl() throws Exception {\n    setupRestTestHarnesses();\n    Pair<Server, Integer> pair = runHttpServer(ImmutableMap.of(\"/jar1.jar\", getFileContent(\"runtimecode/runtimelibs.jar.bin\")));\n    Integer port = pair.second();\n\n    try {\n      String payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha256':'e01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      RestTestHarness client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommandExpectFailure(client, \"/config\", payload, \"Invalid jar\");\n\n\n      payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha256':'e1f9e23988c19619402f1040c9251556dcd6e02b9d3e3b966a129ea1be5c70fc'}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"runtimeLib\", \"urljar\", \"sha256\"),\n          \"e1f9e23988c19619402f1040c9251556dcd6e02b9d3e3b966a129ea1be5c70fc\", 120);\n\n      payload = \"{\\n\" +\n          \"'create-requesthandler' : { 'name' : '/runtime', 'class': 'org.apache.solr.core.RuntimeLibReqHandler', 'runtimeLib' : true}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"requestHandler\", \"/runtime\", \"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 120);\n\n      Map result = TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/runtime\",\n          null,\n          Arrays.asList(\"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 120);\n      compareValues(result, MemClassLoader.class.getName(), asList(\"loader\"));\n    } finally {\n      pair.first().stop();\n\n    }\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestDynamicLoadingUrl#testDynamicLoadingUrl().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestDynamicLoadingUrl#testDynamicLoadingUrl().mjava","sourceNew":"  public void testDynamicLoadingUrl() throws Exception {\n    setupRestTestHarnesses();\n    Pair<Server, Integer> pair = runHttpServer(ImmutableMap.of(\"/jar1.jar\", getFileContent(\"runtimecode/runtimelibs.jar.bin\")));\n    Integer port = pair.second();\n\n    try {\n      String payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha512':'e01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      RestTestHarness client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommandExpectFailure(client, \"/config\", payload, \"Invalid jar\");\n\n\n      payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha512':'d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"runtimeLib\", \"urljar\", \"sha512\"),\n          \"d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420\", 120);\n\n      payload = \"{\\n\" +\n          \"'create-requesthandler' : { 'name' : '/runtime', 'class': 'org.apache.solr.core.RuntimeLibReqHandler', 'runtimeLib' : true}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"requestHandler\", \"/runtime\", \"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 120);\n\n      @SuppressWarnings({\"rawtypes\"})\n      Map result = TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/runtime\",\n          null,\n          Arrays.asList(\"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 120);\n      compareValues(result, MemClassLoader.class.getName(), asList(\"loader\"));\n    } finally {\n      pair.first().stop();\n\n    }\n\n\n  }\n\n","sourceOld":"  public void testDynamicLoadingUrl() throws Exception {\n    setupRestTestHarnesses();\n    Pair<Server, Integer> pair = runHttpServer(ImmutableMap.of(\"/jar1.jar\", getFileContent(\"runtimecode/runtimelibs.jar.bin\")));\n    Integer port = pair.second();\n\n    try {\n      String payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha512':'e01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      RestTestHarness client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommandExpectFailure(client, \"/config\", payload, \"Invalid jar\");\n\n\n      payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha512':'d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"runtimeLib\", \"urljar\", \"sha512\"),\n          \"d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420\", 120);\n\n      payload = \"{\\n\" +\n          \"'create-requesthandler' : { 'name' : '/runtime', 'class': 'org.apache.solr.core.RuntimeLibReqHandler', 'runtimeLib' : true}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"requestHandler\", \"/runtime\", \"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 120);\n\n      Map result = TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/runtime\",\n          null,\n          Arrays.asList(\"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 120);\n      compareValues(result, MemClassLoader.class.getName(), asList(\"loader\"));\n    } finally {\n      pair.first().stop();\n\n    }\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d16198391f70a4ee52a8c8792c91eb87a30f1d6","date":1596695552,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/TestDynamicLoadingUrl#testDynamicLoadingUrl().mjava","sourceNew":null,"sourceOld":"  public void testDynamicLoadingUrl() throws Exception {\n    setupRestTestHarnesses();\n    Pair<Server, Integer> pair = runHttpServer(ImmutableMap.of(\"/jar1.jar\", getFileContent(\"runtimecode/runtimelibs.jar.bin\")));\n    Integer port = pair.second();\n\n    try {\n      String payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha512':'e01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      RestTestHarness client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommandExpectFailure(client, \"/config\", payload, \"Invalid jar\");\n\n\n      payload = \"{\\n\" +\n          \"'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:\" + port + \"/jar1.jar'\" +\n          \"  'sha512':'d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"runtimeLib\", \"urljar\", \"sha512\"),\n          \"d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420\", 120);\n\n      payload = \"{\\n\" +\n          \"'create-requesthandler' : { 'name' : '/runtime', 'class': 'org.apache.solr.core.RuntimeLibReqHandler', 'runtimeLib' : true}\" +\n          \"}\";\n      client = randomRestTestHarness();\n      TestSolrConfigHandler.runConfigCommand(client, \"/config\", payload);\n\n      TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/config/overlay\",\n          null,\n          Arrays.asList(\"overlay\", \"requestHandler\", \"/runtime\", \"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 120);\n\n      @SuppressWarnings({\"rawtypes\"})\n      Map result = TestSolrConfigHandler.testForResponseElement(client,\n          null,\n          \"/runtime\",\n          null,\n          Arrays.asList(\"class\"),\n          \"org.apache.solr.core.RuntimeLibReqHandler\", 120);\n      compareValues(result, MemClassLoader.class.getName(), asList(\"loader\"));\n    } finally {\n      pair.first().stop();\n\n    }\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b142cb61741dce35806488349aa87e09f4c93aa5":["627e70d5711ab39d080a080f089685268525f54d"],"627e70d5711ab39d080a080f089685268525f54d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2e61f9dec8f74c7f84ab94e65955a43cebab2663":["b142cb61741dce35806488349aa87e09f4c93aa5"],"99d6782cf9de8c5ffeb8d0b0f103b578205af068":["2e61f9dec8f74c7f84ab94e65955a43cebab2663"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0d16198391f70a4ee52a8c8792c91eb87a30f1d6":["e98520789adb1d5ad05afb4956eca0944a929688"],"c44cc06c26e456fe9c215072b79fce30babe3975":["99d6782cf9de8c5ffeb8d0b0f103b578205af068"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d16198391f70a4ee52a8c8792c91eb87a30f1d6"],"e98520789adb1d5ad05afb4956eca0944a929688":["c44cc06c26e456fe9c215072b79fce30babe3975"],"b0b597c65628ca9e73913a07e81691f8229bae35":["99d6782cf9de8c5ffeb8d0b0f103b578205af068","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"b142cb61741dce35806488349aa87e09f4c93aa5":["2e61f9dec8f74c7f84ab94e65955a43cebab2663"],"627e70d5711ab39d080a080f089685268525f54d":["b142cb61741dce35806488349aa87e09f4c93aa5"],"2e61f9dec8f74c7f84ab94e65955a43cebab2663":["99d6782cf9de8c5ffeb8d0b0f103b578205af068"],"99d6782cf9de8c5ffeb8d0b0f103b578205af068":["c44cc06c26e456fe9c215072b79fce30babe3975","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["627e70d5711ab39d080a080f089685268525f54d"],"0d16198391f70a4ee52a8c8792c91eb87a30f1d6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c44cc06c26e456fe9c215072b79fce30babe3975":["e98520789adb1d5ad05afb4956eca0944a929688","b0b597c65628ca9e73913a07e81691f8229bae35"],"e98520789adb1d5ad05afb4956eca0944a929688":["0d16198391f70a4ee52a8c8792c91eb87a30f1d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}