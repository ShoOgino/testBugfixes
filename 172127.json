{"path":"lucene/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","commits":[{"id":"8be6e1e4fbbc94d90b78f175c03ff389b6949373","date":1306674752,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readNextArc(Arc[T]).mjava","sourceNew":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == -1) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        // This arc went to virtual final node, ie has no outgoing arcs\n        return null;\n      }\n      return readFirstRealArc(arc.nextArc, arc);\n    } else {\n      return readNextRealArc(arc);\n    }\n  }\n\n","sourceOld":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == -1) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        // This arc went to virtual final node, ie has no outgoing arcs\n        return null;\n      }\n      return readFirstRealArc(arc.nextArc, arc);\n    } else {\n      return readNextRealArc(arc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readNextArc(Arc[T]).mjava","sourceNew":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == -1) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        // This arc went to virtual final node, ie has no outgoing arcs\n        return null;\n      }\n      return readFirstRealArc(arc.nextArc, arc);\n    } else {\n      return readNextRealArc(arc);\n    }\n  }\n\n","sourceOld":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == -1) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        // This arc went to virtual final node, ie has no outgoing arcs\n        return null;\n      }\n      return readFirstRealArc(arc.nextArc, arc);\n    } else {\n      return readNextRealArc(arc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readNextArc(Arc[T]).mjava","sourceNew":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == -1) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        // This arc went to virtual final node, ie has no outgoing arcs\n        return null;\n      }\n      return readFirstRealArc(arc.nextArc, arc);\n    } else {\n      return readNextRealArc(arc);\n    }\n  }\n\n","sourceOld":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == -1) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        // This arc went to virtual final node, ie has no outgoing arcs\n        return null;\n      }\n      return readFirstRealArc(arc.nextArc, arc);\n    } else {\n      return readNextRealArc(arc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96a3f60d2a9bff2d01191d39dc80eed582514e12","date":1308050007,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","sourceNew":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == END_LABEL) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        // This arc went to virtual final node, ie has no outgoing arcs\n        return null;\n      }\n      return readFirstRealArc(arc.nextArc, arc);\n    } else {\n      return readNextRealArc(arc);\n    }\n  }\n\n","sourceOld":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == -1) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        // This arc went to virtual final node, ie has no outgoing arcs\n        return null;\n      }\n      return readFirstRealArc(arc.nextArc, arc);\n    } else {\n      return readNextRealArc(arc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ed208afa1e7aa98899ddb1dedfddedddf898253","date":1308079587,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","sourceNew":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == END_LABEL) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        // This arc went to virtual final node, ie has no outgoing arcs\n        return null;\n      }\n      return readFirstRealArc(arc.nextArc, arc);\n    } else {\n      return readNextRealArc(arc);\n    }\n  }\n\n","sourceOld":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == -1) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        // This arc went to virtual final node, ie has no outgoing arcs\n        return null;\n      }\n      return readFirstRealArc(arc.nextArc, arc);\n    } else {\n      return readNextRealArc(arc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c","date":1310389132,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","sourceNew":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == END_LABEL) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        // This arc went to virtual final node, ie has no outgoing arcs\n        return null;\n      }\n      return readFirstRealArc(arc.nextArc, arc);\n    } else {\n      return readNextRealArc(arc, getBytesReader(0));\n    }\n  }\n\n","sourceOld":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == END_LABEL) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        // This arc went to virtual final node, ie has no outgoing arcs\n        return null;\n      }\n      return readFirstRealArc(arc.nextArc, arc);\n    } else {\n      return readNextRealArc(arc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4708e7bf7695781d702d204d178627b4faddc03f","date":1326982060,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","sourceNew":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == END_LABEL) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        // This arc went to virtual final node, ie has no outgoing arcs\n        return null;\n      }\n      return readFirstRealArc(arc.nextArc, arc, getBytesReader(0));\n    } else {\n      return readNextRealArc(arc, getBytesReader(0));\n    }\n  }\n\n","sourceOld":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == END_LABEL) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        // This arc went to virtual final node, ie has no outgoing arcs\n        return null;\n      }\n      return readFirstRealArc(arc.nextArc, arc);\n    } else {\n      return readNextRealArc(arc, getBytesReader(0));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3be20ca1091c0b7cdb2308b9023606a5e451cec","date":1327877325,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","sourceNew":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == END_LABEL) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        throw new IllegalArgumentException(\"cannot readNextArc when arc.isLast()=true\");\n      }\n      return readFirstRealTargetArc(arc.nextArc, arc, getBytesReader(0));\n    } else {\n      return readNextRealArc(arc, getBytesReader(0));\n    }\n  }\n\n","sourceOld":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == END_LABEL) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        // This arc went to virtual final node, ie has no outgoing arcs\n        return null;\n      }\n      return readFirstRealArc(arc.nextArc, arc, getBytesReader(0));\n    } else {\n      return readNextRealArc(arc, getBytesReader(0));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","sourceNew":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == END_LABEL) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        throw new IllegalArgumentException(\"cannot readNextArc when arc.isLast()=true\");\n      }\n      return readFirstRealTargetArc(arc.nextArc, arc, getBytesReader(0));\n    } else {\n      return readNextRealArc(arc, getBytesReader(0));\n    }\n  }\n\n","sourceOld":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == END_LABEL) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        // This arc went to virtual final node, ie has no outgoing arcs\n        return null;\n      }\n      return readFirstRealArc(arc.nextArc, arc, getBytesReader(0));\n    } else {\n      return readNextRealArc(arc, getBytesReader(0));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","sourceNew":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == END_LABEL) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        throw new IllegalArgumentException(\"cannot readNextArc when arc.isLast()=true\");\n      }\n      return readFirstRealTargetArc(arc.nextArc, arc, getBytesReader(0));\n    } else {\n      return readNextRealArc(arc, getBytesReader(0));\n    }\n  }\n\n","sourceOld":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == END_LABEL) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        // This arc went to virtual final node, ie has no outgoing arcs\n        return null;\n      }\n      return readFirstRealArc(arc.nextArc, arc, getBytesReader(0));\n    } else {\n      return readNextRealArc(arc, getBytesReader(0));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/fst/FST#readNextArc(Arc[T]).mjava","sourceNew":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == END_LABEL) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        throw new IllegalArgumentException(\"cannot readNextArc when arc.isLast()=true\");\n      }\n      return readFirstRealTargetArc(arc.nextArc, arc, getBytesReader(0));\n    } else {\n      return readNextRealArc(arc, getBytesReader(0));\n    }\n  }\n\n","sourceOld":"  /** In-place read; returns the arc. */\n  public Arc<T> readNextArc(Arc<T> arc) throws IOException {\n    if (arc.label == END_LABEL) {\n      // This was a fake inserted \"final\" arc\n      if (arc.nextArc <= 0) {\n        throw new IllegalArgumentException(\"cannot readNextArc when arc.isLast()=true\");\n      }\n      return readFirstRealTargetArc(arc.nextArc, arc, getBytesReader(0));\n    } else {\n      return readNextRealArc(arc, getBytesReader(0));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"9ed208afa1e7aa98899ddb1dedfddedddf898253":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","96a3f60d2a9bff2d01191d39dc80eed582514e12"],"4708e7bf7695781d702d204d178627b4faddc03f":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"b3be20ca1091c0b7cdb2308b9023606a5e451cec":["4708e7bf7695781d702d204d178627b4faddc03f"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":["4708e7bf7695781d702d204d178627b4faddc03f","b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6fdfce35d0adb18836cf8711abe487a934df33":["4708e7bf7695781d702d204d178627b4faddc03f","b3be20ca1091c0b7cdb2308b9023606a5e451cec"],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["96a3f60d2a9bff2d01191d39dc80eed582514e12"],"96a3f60d2a9bff2d01191d39dc80eed582514e12":["8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8be6e1e4fbbc94d90b78f175c03ff389b6949373"]},"commit2Childs":{"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","96a3f60d2a9bff2d01191d39dc80eed582514e12","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9ed208afa1e7aa98899ddb1dedfddedddf898253":[],"4708e7bf7695781d702d204d178627b4faddc03f":["b3be20ca1091c0b7cdb2308b9023606a5e451cec","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"b3be20ca1091c0b7cdb2308b9023606a5e451cec":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["9ed208afa1e7aa98899ddb1dedfddedddf898253"],"817882884229bace7dc5d1b75f6b0e4aa1e47122":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8be6e1e4fbbc94d90b78f175c03ff389b6949373","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"96a3f60d2a9bff2d01191d39dc80eed582514e12":["9ed208afa1e7aa98899ddb1dedfddedddf898253","44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["4708e7bf7695781d702d204d178627b4faddc03f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["9ed208afa1e7aa98899ddb1dedfddedddf898253","817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}