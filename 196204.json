{"path":"solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory#inform(SolrCore).mjava","commits":[{"id":"9e2656623e57ced6c16aae473bab02019c951802","date":1342126181,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory#inform(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    resourceLoader = core.getResourceLoader();\n\n    // test that our engines & scripts are valid\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n    try {\n      initEngines(req, rsp);\n    } catch (Exception e) {\n      String msg = \"Unable to initialize scripts: \" + e.getMessage();\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      req.close();\n    }\n\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory#inform(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    resourceLoader = core.getResourceLoader();\n\n    // test that our engines & scripts are valid\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n    try {\n      initEngines(req, rsp);\n    } catch (Exception e) {\n      String msg = \"Unable to initialize scripts: \" + e.getMessage();\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      req.close();\n    }\n\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory#inform(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    resourceLoader = core.getResourceLoader();\n\n    // test that our engines & scripts are valid\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n    try {\n      initEngines(req, rsp);\n    } catch (Exception e) {\n      String msg = \"Unable to initialize scripts: \" + e.getMessage();\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      req.close();\n    }\n\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"917e62f3497c83634a13edd833e8e21dd6cc6496","date":1490728467,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    if (!core.getCoreDescriptor().isConfigSetTrusted()) {\n      throw new SolrException(ErrorCode.UNAUTHORIZED, \"The configset for this collection was uploaded without any authentication in place,\"\n          + \" and this operation is not available for collections with untrusted configsets. To use this component, re-upload the configset\"\n          + \" after enabling authentication and authorization.\");\n    }\n    resourceLoader = core.getResourceLoader();\n\n    // test that our engines & scripts are valid\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n    try {\n      initEngines(req, rsp);\n    } catch (Exception e) {\n      String msg = \"Unable to initialize scripts: \" + e.getMessage();\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      req.close();\n    }\n\n    \n  }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    resourceLoader = core.getResourceLoader();\n\n    // test that our engines & scripts are valid\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n    try {\n      initEngines(req, rsp);\n    } catch (Exception e) {\n      String msg = \"Unable to initialize scripts: \" + e.getMessage();\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      req.close();\n    }\n\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3732e34f27916e98704736cc6924a34fffca249a","date":1490873946,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory#inform(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactory#inform(SolrCore).mjava","sourceNew":"  @Override\n  public void inform(SolrCore core) {\n    if (!core.getCoreDescriptor().isConfigSetTrusted()) {\n      throw new SolrException(ErrorCode.UNAUTHORIZED, \"The configset for this collection was uploaded without any authentication in place,\"\n          + \" and this operation is not available for collections with untrusted configsets. To use this component, re-upload the configset\"\n          + \" after enabling authentication and authorization.\");\n    }\n    resourceLoader = core.getResourceLoader();\n\n    // test that our engines & scripts are valid\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n    try {\n      initEngines(req, rsp);\n    } catch (Exception e) {\n      String msg = \"Unable to initialize scripts: \" + e.getMessage();\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      req.close();\n    }\n\n    \n  }\n\n","sourceOld":"  @Override\n  public void inform(SolrCore core) {\n    resourceLoader = core.getResourceLoader();\n\n    // test that our engines & scripts are valid\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n    try {\n      initEngines(req, rsp);\n    } catch (Exception e) {\n      String msg = \"Unable to initialize scripts: \" + e.getMessage();\n      log.error(msg, e);\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg, e);\n    } finally {\n      req.close();\n    }\n\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"917e62f3497c83634a13edd833e8e21dd6cc6496":["9e2656623e57ced6c16aae473bab02019c951802"],"9e2656623e57ced6c16aae473bab02019c951802":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9e2656623e57ced6c16aae473bab02019c951802"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9e2656623e57ced6c16aae473bab02019c951802"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3732e34f27916e98704736cc6924a34fffca249a":["9e2656623e57ced6c16aae473bab02019c951802"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["917e62f3497c83634a13edd833e8e21dd6cc6496"]},"commit2Childs":{"917e62f3497c83634a13edd833e8e21dd6cc6496":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9e2656623e57ced6c16aae473bab02019c951802":["917e62f3497c83634a13edd833e8e21dd6cc6496","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","3732e34f27916e98704736cc6924a34fffca249a"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9e2656623e57ced6c16aae473bab02019c951802","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"3732e34f27916e98704736cc6924a34fffca249a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","3732e34f27916e98704736cc6924a34fffca249a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}