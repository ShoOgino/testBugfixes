{"path":"solr/core/src/test/org/apache/solr/analysis/TestJapaneseTokenizerFactory#testPreservePunctuation().mjava","commits":[{"id":"3a39b75721995ff0b560f0e1cfc08ab55c70ac41","date":1342084742,"type":0,"author":"Christian Moen","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestJapaneseTokenizerFactory#testPreservePunctuation().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test preserving punctuation\n   */\n  public void testPreservePunctuation() throws IOException {\n    JapaneseTokenizerFactory factory = new JapaneseTokenizerFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"discardPunctuation\", \"false\");\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(null, null));\n    TokenStream ts = factory.create(\n        new StringReader(\"今ノルウェーにいますが、来週の頭日本に戻ります。楽しみにしています！お寿司が食べたいな。。。\")\n    );\n    System.out.println(ts.toString());\n    assertTokenStreamContents(ts,\n        new String[] { \"今\", \"ノルウェー\", \"に\", \"い\", \"ます\", \"が\", \"、\",\n            \"来週\", \"の\", \"頭\", \"日本\", \"に\", \"戻り\", \"ます\", \"。\",\n            \"楽しみ\", \"に\", \"し\", \"て\", \"い\", \"ます\", \"！\",\n            \"お\", \"寿司\", \"が\", \"食べ\", \"たい\", \"な\", \"。\", \"。\", \"。\"}\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestJapaneseTokenizerFactory#testPreservePunctuation().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test preserving punctuation\n   */\n  public void testPreservePunctuation() throws IOException {\n    JapaneseTokenizerFactory factory = new JapaneseTokenizerFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"discardPunctuation\", \"false\");\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(null, null));\n    TokenStream ts = factory.create(\n        new StringReader(\"今ノルウェーにいますが、来週の頭日本に戻ります。楽しみにしています！お寿司が食べたいな。。。\")\n    );\n    System.out.println(ts.toString());\n    assertTokenStreamContents(ts,\n        new String[] { \"今\", \"ノルウェー\", \"に\", \"い\", \"ます\", \"が\", \"、\",\n            \"来週\", \"の\", \"頭\", \"日本\", \"に\", \"戻り\", \"ます\", \"。\",\n            \"楽しみ\", \"に\", \"し\", \"て\", \"い\", \"ます\", \"！\",\n            \"お\", \"寿司\", \"が\", \"食べ\", \"たい\", \"な\", \"。\", \"。\", \"。\"}\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3241e06e642196396b80bb293acd9c0814d079e0","date":1343094999,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizerFactory#testPreservePunctuation().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestJapaneseTokenizerFactory#testPreservePunctuation().mjava","sourceNew":"  /**\n   * Test preserving punctuation\n   */\n  public void testPreservePunctuation() throws IOException {\n    JapaneseTokenizerFactory factory = new JapaneseTokenizerFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"discardPunctuation\", \"false\");\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(null, null));\n    TokenStream ts = factory.create(\n        new StringReader(\"今ノルウェーにいますが、来週の頭日本に戻ります。楽しみにしています！お寿司が食べたいな。。。\")\n    );\n    System.out.println(ts.toString());\n    assertTokenStreamContents(ts,\n        new String[] { \"今\", \"ノルウェー\", \"に\", \"い\", \"ます\", \"が\", \"、\",\n            \"来週\", \"の\", \"頭\", \"日本\", \"に\", \"戻り\", \"ます\", \"。\",\n            \"楽しみ\", \"に\", \"し\", \"て\", \"い\", \"ます\", \"！\",\n            \"お\", \"寿司\", \"が\", \"食べ\", \"たい\", \"な\", \"。\", \"。\", \"。\"}\n    );\n  }\n\n","sourceOld":"  /**\n   * Test preserving punctuation\n   */\n  public void testPreservePunctuation() throws IOException {\n    JapaneseTokenizerFactory factory = new JapaneseTokenizerFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"discardPunctuation\", \"false\");\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(null, null));\n    TokenStream ts = factory.create(\n        new StringReader(\"今ノルウェーにいますが、来週の頭日本に戻ります。楽しみにしています！お寿司が食べたいな。。。\")\n    );\n    System.out.println(ts.toString());\n    assertTokenStreamContents(ts,\n        new String[] { \"今\", \"ノルウェー\", \"に\", \"い\", \"ます\", \"が\", \"、\",\n            \"来週\", \"の\", \"頭\", \"日本\", \"に\", \"戻り\", \"ます\", \"。\",\n            \"楽しみ\", \"に\", \"し\", \"て\", \"い\", \"ます\", \"！\",\n            \"お\", \"寿司\", \"が\", \"食べ\", \"たい\", \"な\", \"。\", \"。\", \"。\"}\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizerFactory#testPreservePunctuation().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestJapaneseTokenizerFactory#testPreservePunctuation().mjava","sourceNew":"  /**\n   * Test preserving punctuation\n   */\n  public void testPreservePunctuation() throws IOException {\n    JapaneseTokenizerFactory factory = new JapaneseTokenizerFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"discardPunctuation\", \"false\");\n    factory.init(args);\n    factory.inform(new StringMockResourceLoader(\"\"));\n    TokenStream ts = factory.create(\n        new StringReader(\"今ノルウェーにいますが、来週の頭日本に戻ります。楽しみにしています！お寿司が食べたいな。。。\")\n    );\n    System.out.println(ts.toString());\n    assertTokenStreamContents(ts,\n        new String[] { \"今\", \"ノルウェー\", \"に\", \"い\", \"ます\", \"が\", \"、\",\n            \"来週\", \"の\", \"頭\", \"日本\", \"に\", \"戻り\", \"ます\", \"。\",\n            \"楽しみ\", \"に\", \"し\", \"て\", \"い\", \"ます\", \"！\",\n            \"お\", \"寿司\", \"が\", \"食べ\", \"たい\", \"な\", \"。\", \"。\", \"。\"}\n    );\n  }\n\n","sourceOld":"  /**\n   * Test preserving punctuation\n   */\n  public void testPreservePunctuation() throws IOException {\n    JapaneseTokenizerFactory factory = new JapaneseTokenizerFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"discardPunctuation\", \"false\");\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(null, null));\n    TokenStream ts = factory.create(\n        new StringReader(\"今ノルウェーにいますが、来週の頭日本に戻ります。楽しみにしています！お寿司が食べたいな。。。\")\n    );\n    System.out.println(ts.toString());\n    assertTokenStreamContents(ts,\n        new String[] { \"今\", \"ノルウェー\", \"に\", \"い\", \"ます\", \"が\", \"、\",\n            \"来週\", \"の\", \"頭\", \"日本\", \"に\", \"戻り\", \"ます\", \"。\",\n            \"楽しみ\", \"に\", \"し\", \"て\", \"い\", \"ます\", \"！\",\n            \"お\", \"寿司\", \"が\", \"食べ\", \"たい\", \"な\", \"。\", \"。\", \"。\"}\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestJapaneseTokenizerFactory#testPreservePunctuation().mjava","sourceNew":null,"sourceOld":"  /**\n   * Test preserving punctuation\n   */\n  public void testPreservePunctuation() throws IOException {\n    JapaneseTokenizerFactory factory = new JapaneseTokenizerFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"discardPunctuation\", \"false\");\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(null, null));\n    TokenStream ts = factory.create(\n        new StringReader(\"今ノルウェーにいますが、来週の頭日本に戻ります。楽しみにしています！お寿司が食べたいな。。。\")\n    );\n    System.out.println(ts.toString());\n    assertTokenStreamContents(ts,\n        new String[] { \"今\", \"ノルウェー\", \"に\", \"い\", \"ます\", \"が\", \"、\",\n            \"来週\", \"の\", \"頭\", \"日本\", \"に\", \"戻り\", \"ます\", \"。\",\n            \"楽しみ\", \"に\", \"し\", \"て\", \"い\", \"ます\", \"！\",\n            \"お\", \"寿司\", \"が\", \"食べ\", \"たい\", \"な\", \"。\", \"。\", \"。\"}\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3a39b75721995ff0b560f0e1cfc08ab55c70ac41"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["fe33227f6805edab2036cbb80645cc4e2d1fa424","5a1a22b1ad88b436661458df567f3fdb446392a4"],"3a39b75721995ff0b560f0e1cfc08ab55c70ac41":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["3a39b75721995ff0b560f0e1cfc08ab55c70ac41","3241e06e642196396b80bb293acd9c0814d079e0"],"3241e06e642196396b80bb293acd9c0814d079e0":["3a39b75721995ff0b560f0e1cfc08ab55c70ac41"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a1a22b1ad88b436661458df567f3fdb446392a4"]},"commit2Childs":{"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fe33227f6805edab2036cbb80645cc4e2d1fa424","3a39b75721995ff0b560f0e1cfc08ab55c70ac41"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"3a39b75721995ff0b560f0e1cfc08ab55c70ac41":["fe33227f6805edab2036cbb80645cc4e2d1fa424","5a1a22b1ad88b436661458df567f3fdb446392a4","3241e06e642196396b80bb293acd9c0814d079e0"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3241e06e642196396b80bb293acd9c0814d079e0":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}