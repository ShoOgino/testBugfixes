{"path":"contrib/memory/src/test/org/apache/lucene/index/memory/PatternAnalyzerTest#check(PatternAnalyzer,String,String[]).mjava","commits":[{"id":"30efa0465403f867cd67289e0668f667ac2d42e9","date":1255523608,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/memory/src/test/org/apache/lucene/index/memory/PatternAnalyzerTest#check(PatternAnalyzer,String,String[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Verify the analyzer analyzes to the expected contents. For PatternAnalyzer,\n   * several methods are verified:\n   * <ul>\n   * <li>Analysis with a normal Reader\n   * <li>Analysis with a FastStringReader\n   * <li>Analysis with a String\n   * </ul>\n   */\n  private void check(PatternAnalyzer analyzer, String document,\n      String expected[]) throws IOException {\n    // ordinary analysis of a Reader\n    assertAnalyzesTo(analyzer, document, expected);\n\n    // analysis with a \"FastStringReader\"\n    TokenStream ts = analyzer.tokenStream(\"dummy\",\n        new PatternAnalyzer.FastStringReader(document));\n    assertTokenStreamContents(ts, expected);\n\n    // analysis of a String, uses PatternAnalyzer.tokenStream(String, String)\n    TokenStream ts2 = analyzer.tokenStream(\"dummy\", document);\n    assertTokenStreamContents(ts2, expected);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d8c222875ac4ef7e08f3e25d40508b821d711ff","date":1257374221,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#check(PatternAnalyzer,String,String[]).mjava","pathOld":"contrib/memory/src/test/org/apache/lucene/index/memory/PatternAnalyzerTest#check(PatternAnalyzer,String,String[]).mjava","sourceNew":"  /**\n   * Verify the analyzer analyzes to the expected contents. For PatternAnalyzer,\n   * several methods are verified:\n   * <ul>\n   * <li>Analysis with a normal Reader\n   * <li>Analysis with a FastStringReader\n   * <li>Analysis with a String\n   * </ul>\n   */\n  private void check(PatternAnalyzer analyzer, String document,\n      String expected[]) throws IOException {\n    // ordinary analysis of a Reader\n    assertAnalyzesTo(analyzer, document, expected);\n\n    // analysis with a \"FastStringReader\"\n    TokenStream ts = analyzer.tokenStream(\"dummy\",\n        new PatternAnalyzer.FastStringReader(document));\n    assertTokenStreamContents(ts, expected);\n\n    // analysis of a String, uses PatternAnalyzer.tokenStream(String, String)\n    TokenStream ts2 = analyzer.tokenStream(\"dummy\", document);\n    assertTokenStreamContents(ts2, expected);\n  }\n\n","sourceOld":"  /**\n   * Verify the analyzer analyzes to the expected contents. For PatternAnalyzer,\n   * several methods are verified:\n   * <ul>\n   * <li>Analysis with a normal Reader\n   * <li>Analysis with a FastStringReader\n   * <li>Analysis with a String\n   * </ul>\n   */\n  private void check(PatternAnalyzer analyzer, String document,\n      String expected[]) throws IOException {\n    // ordinary analysis of a Reader\n    assertAnalyzesTo(analyzer, document, expected);\n\n    // analysis with a \"FastStringReader\"\n    TokenStream ts = analyzer.tokenStream(\"dummy\",\n        new PatternAnalyzer.FastStringReader(document));\n    assertTokenStreamContents(ts, expected);\n\n    // analysis of a String, uses PatternAnalyzer.tokenStream(String, String)\n    TokenStream ts2 = analyzer.tokenStream(\"dummy\", document);\n    assertTokenStreamContents(ts2, expected);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"30efa0465403f867cd67289e0668f667ac2d42e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0d8c222875ac4ef7e08f3e25d40508b821d711ff":["30efa0465403f867cd67289e0668f667ac2d42e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d8c222875ac4ef7e08f3e25d40508b821d711ff"]},"commit2Childs":{"30efa0465403f867cd67289e0668f667ac2d42e9":["0d8c222875ac4ef7e08f3e25d40508b821d711ff"],"0d8c222875ac4ef7e08f3e25d40508b821d711ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30efa0465403f867cd67289e0668f667ac2d42e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}