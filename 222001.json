{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/results/FacetResultNode#toString(String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/results/FacetResultNode#toString(String).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/search/results/FacetResultNode#toString(String).mjava","sourceNew":"  /**\n   * String representation of this facet result node.\n   * Use with caution: might return a very long string.\n   * @param prefix prefix for each result line\n   */\n  public String toString(String prefix);\n\n","sourceOld":"  /**\n   * String representation of this facet result node.\n   * Use with caution: might return a very long string.\n   * @param prefix prefix for each result line\n   */\n  public String toString(String prefix);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"811cdb4a80352766eb0c762e48972707a924e5cd","date":1358767313,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/results/FacetResultNode#toString(String).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/results/FacetResultNode#toString(String).mjava","sourceNew":"  /** Returns a String representation of this facet result node. */\n  public String toString(String prefix) {\n    StringBuilder sb = new StringBuilder(prefix);\n    if (label == null) {\n      sb.append(\"not labeled (ordinal=\").append(ordinal).append(\")\");\n    } else {\n      sb.append(label.toString());\n    }\n    sb.append(\" (\").append(Double.toString(value)).append(\")\");\n    if (residue > 0) {\n      sb.append(\" (residue=\").append(residue).append(\")\");\n    }\n    for (FacetResultNode sub : subResults) {\n      sb.append(\"\\n\").append(prefix).append(sub.toString(prefix + \"  \"));\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  /**\n   * String representation of this facet result node.\n   * Use with caution: might return a very long string.\n   * @param prefix prefix for each result line\n   */\n  public String toString(String prefix);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/results/FacetResultNode#toString(String).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/results/FacetResultNode#toString(String).mjava","sourceNew":"  /** Returns a String representation of this facet result node. */\n  public String toString(String prefix) {\n    StringBuilder sb = new StringBuilder(prefix);\n    if (label == null) {\n      sb.append(\"not labeled (ordinal=\").append(ordinal).append(\")\");\n    } else {\n      sb.append(label.toString());\n    }\n    sb.append(\" (\").append(Double.toString(value)).append(\")\");\n    if (residue > 0) {\n      sb.append(\" (residue=\").append(residue).append(\")\");\n    }\n    for (FacetResultNode sub : subResults) {\n      sb.append(\"\\n\").append(prefix).append(sub.toString(prefix + \"  \"));\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  /**\n   * String representation of this facet result node.\n   * Use with caution: might return a very long string.\n   * @param prefix prefix for each result line\n   */\n  public String toString(String prefix);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dae862628c7a5275e1ff00ff3bc9803dedf124a9","date":1358939646,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/results/FacetResultNode#toString(String).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/results/FacetResultNode#toString(String).mjava","sourceNew":"  /** Returns a String representation of this facet result node. */\n  public String toString(String prefix) {\n    StringBuilder sb = new StringBuilder(prefix);\n    if (label == null) {\n      sb.append(\"not labeled (ordinal=\").append(ordinal).append(\")\");\n    } else {\n      sb.append(label.toString());\n    }\n    sb.append(\" (\").append(Double.toString(value)).append(\")\");\n    for (FacetResultNode sub : subResults) {\n      sb.append(\"\\n\").append(prefix).append(sub.toString(prefix + \"  \"));\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  /** Returns a String representation of this facet result node. */\n  public String toString(String prefix) {\n    StringBuilder sb = new StringBuilder(prefix);\n    if (label == null) {\n      sb.append(\"not labeled (ordinal=\").append(ordinal).append(\")\");\n    } else {\n      sb.append(label.toString());\n    }\n    sb.append(\" (\").append(Double.toString(value)).append(\")\");\n    if (residue > 0) {\n      sb.append(\" (residue=\").append(residue).append(\")\");\n    }\n    for (FacetResultNode sub : subResults) {\n      sb.append(\"\\n\").append(prefix).append(sub.toString(prefix + \"  \"));\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b2d5244a676b83c2d551c3746e8181588ba619e1","date":1359031414,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/results/FacetResultNode#toString(String).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/results/FacetResultNode#toString(String).mjava","sourceNew":"  /** Returns a String representation of this facet result node. */\n  public String toString(String prefix) {\n    StringBuilder sb = new StringBuilder(prefix);\n    if (label == null) {\n      sb.append(\"not labeled (ordinal=\").append(ordinal).append(\")\");\n    } else {\n      sb.append(label.toString());\n    }\n    sb.append(\" (\").append(Double.toString(value)).append(\")\");\n    for (FacetResultNode sub : subResults) {\n      sb.append(\"\\n\").append(prefix).append(sub.toString(prefix + \"  \"));\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  /** Returns a String representation of this facet result node. */\n  public String toString(String prefix) {\n    StringBuilder sb = new StringBuilder(prefix);\n    if (label == null) {\n      sb.append(\"not labeled (ordinal=\").append(ordinal).append(\")\");\n    } else {\n      sb.append(label.toString());\n    }\n    sb.append(\" (\").append(Double.toString(value)).append(\")\");\n    if (residue > 0) {\n      sb.append(\" (residue=\").append(residue).append(\")\");\n    }\n    for (FacetResultNode sub : subResults) {\n      sb.append(\"\\n\").append(prefix).append(sub.toString(prefix + \"  \"));\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetResultNode#toString(String).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/results/FacetResultNode#toString(String).mjava","sourceNew":"  /** Returns a String representation of this facet result node. */\n  public String toString(String prefix) {\n    StringBuilder sb = new StringBuilder(prefix);\n    if (label == null) {\n      sb.append(\"not labeled (ordinal=\").append(ordinal).append(\")\");\n    } else {\n      sb.append(label.toString());\n    }\n    sb.append(\" (\").append(Double.toString(value)).append(\")\");\n    for (FacetResultNode sub : subResults) {\n      sb.append(\"\\n\").append(prefix).append(sub.toString(prefix + \"  \"));\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  /** Returns a String representation of this facet result node. */\n  public String toString(String prefix) {\n    StringBuilder sb = new StringBuilder(prefix);\n    if (label == null) {\n      sb.append(\"not labeled (ordinal=\").append(ordinal).append(\")\");\n    } else {\n      sb.append(label.toString());\n    }\n    sb.append(\" (\").append(Double.toString(value)).append(\")\");\n    for (FacetResultNode sub : subResults) {\n      sb.append(\"\\n\").append(prefix).append(sub.toString(prefix + \"  \"));\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"607428da722dcb3e86bbd11c63de8986e6275c36":["dae862628c7a5275e1ff00ff3bc9803dedf124a9"],"dae862628c7a5275e1ff00ff3bc9803dedf124a9":["811cdb4a80352766eb0c762e48972707a924e5cd"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"07155cdd910937cdf6877e48884d5782845c8b8b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","811cdb4a80352766eb0c762e48972707a924e5cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["607428da722dcb3e86bbd11c63de8986e6275c36"],"811cdb4a80352766eb0c762e48972707a924e5cd":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b2d5244a676b83c2d551c3746e8181588ba619e1":["07155cdd910937cdf6877e48884d5782845c8b8b","dae862628c7a5275e1ff00ff3bc9803dedf124a9"]},"commit2Childs":{"607428da722dcb3e86bbd11c63de8986e6275c36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"dae862628c7a5275e1ff00ff3bc9803dedf124a9":["607428da722dcb3e86bbd11c63de8986e6275c36","b2d5244a676b83c2d551c3746e8181588ba619e1"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["07155cdd910937cdf6877e48884d5782845c8b8b","811cdb4a80352766eb0c762e48972707a924e5cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"07155cdd910937cdf6877e48884d5782845c8b8b":["b2d5244a676b83c2d551c3746e8181588ba619e1"],"811cdb4a80352766eb0c762e48972707a924e5cd":["dae862628c7a5275e1ff00ff3bc9803dedf124a9","07155cdd910937cdf6877e48884d5782845c8b8b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b2d5244a676b83c2d551c3746e8181588ba619e1":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b2d5244a676b83c2d551c3746e8181588ba619e1"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}