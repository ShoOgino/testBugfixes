{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","sourceNew":"  private void loadDataConfig(InputSource configFile) {\n\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      \n      // only enable xinclude, if a a SolrCore and SystemId is present (makes no sense otherwise)\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          LOG.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      if (core != null)\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      config = new DataConfig();\n      NodeList elems = document.getElementsByTagName(\"dataConfig\");\n      if(elems == null || elems.getLength() == 0) {\n        throw new DataImportHandlerException(SEVERE, \"the root node '<dataConfig>' is missing\");\n      }\n      config.readFromXml((Element) elems.item(0));\n      LOG.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      SolrConfig.severeErrors.add(e);\n      throw new DataImportHandlerException(SEVERE,\n              \"Exception occurred while initializing context\", e);\n    }\n  }\n\n","sourceOld":"  private void loadDataConfig(InputSource configFile) {\n\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      \n      // only enable xinclude, if a a SolrCore and SystemId is present (makes no sense otherwise)\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          LOG.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      if (core != null)\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      config = new DataConfig();\n      NodeList elems = document.getElementsByTagName(\"dataConfig\");\n      if(elems == null || elems.getLength() == 0) {\n        throw new DataImportHandlerException(SEVERE, \"the root node '<dataConfig>' is missing\");\n      }\n      config.readFromXml((Element) elems.item(0));\n      LOG.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      SolrConfig.severeErrors.add(e);\n      throw new DataImportHandlerException(SEVERE,\n              \"Exception occurred while initializing context\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","sourceNew":"  private void loadDataConfig(InputSource configFile) {\n\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      \n      // only enable xinclude, if a a SolrCore and SystemId is present (makes no sense otherwise)\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          LOG.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      if (core != null)\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      config = new DataConfig();\n      NodeList elems = document.getElementsByTagName(\"dataConfig\");\n      if(elems == null || elems.getLength() == 0) {\n        throw new DataImportHandlerException(SEVERE, \"the root node '<dataConfig>' is missing\");\n      }\n      config.readFromXml((Element) elems.item(0));\n      LOG.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      SolrConfig.severeErrors.add(e);\n      throw new DataImportHandlerException(SEVERE,\n              \"Exception occurred while initializing context\", e);\n    }\n  }\n\n","sourceOld":"  private void loadDataConfig(InputSource configFile) {\n\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      \n      // only enable xinclude, if a a SolrCore and SystemId is present (makes no sense otherwise)\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          LOG.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      if (core != null)\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      config = new DataConfig();\n      NodeList elems = document.getElementsByTagName(\"dataConfig\");\n      if(elems == null || elems.getLength() == 0) {\n        throw new DataImportHandlerException(SEVERE, \"the root node '<dataConfig>' is missing\");\n      }\n      config.readFromXml((Element) elems.item(0));\n      LOG.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      SolrConfig.severeErrors.add(e);\n      throw new DataImportHandlerException(SEVERE,\n              \"Exception occurred while initializing context\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b1605dda5afabdc06fd136fa0dd14ad326e3001","date":1326751633,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","sourceNew":"  private void loadDataConfig(InputSource configFile) {\n\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      \n      // only enable xinclude, if a a SolrCore and SystemId is present (makes no sense otherwise)\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          LOG.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      if (core != null)\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      config = new DataConfig();\n      NodeList elems = document.getElementsByTagName(\"dataConfig\");\n      if(elems == null || elems.getLength() == 0) {\n        throw new DataImportHandlerException(SEVERE, \"the root node '<dataConfig>' is missing\");\n      }\n      config.readFromXml((Element) elems.item(0));\n      LOG.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      throw new DataImportHandlerException(SEVERE,\n              \"Exception occurred while initializing context\", e);\n    }\n  }\n\n","sourceOld":"  private void loadDataConfig(InputSource configFile) {\n\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      \n      // only enable xinclude, if a a SolrCore and SystemId is present (makes no sense otherwise)\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          LOG.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      if (core != null)\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      config = new DataConfig();\n      NodeList elems = document.getElementsByTagName(\"dataConfig\");\n      if(elems == null || elems.getLength() == 0) {\n        throw new DataImportHandlerException(SEVERE, \"the root node '<dataConfig>' is missing\");\n      }\n      config.readFromXml((Element) elems.item(0));\n      LOG.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      SolrConfig.severeErrors.add(e);\n      throw new DataImportHandlerException(SEVERE,\n              \"Exception occurred while initializing context\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c","date":1335805170,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","sourceNew":"  private void loadDataConfig(InputSource configFile) {\n\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      \n      // only enable xinclude, if a a SolrCore and SystemId is present (makes no sense otherwise)\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          LOG.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      if (core != null)\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      config = readFromXml(document);\n      LOG.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      throw new DataImportHandlerException(SEVERE,\n              \"Exception occurred while initializing context\", e);\n    }\n  }\n\n","sourceOld":"  private void loadDataConfig(InputSource configFile) {\n\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      \n      // only enable xinclude, if a a SolrCore and SystemId is present (makes no sense otherwise)\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          LOG.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      if (core != null)\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      config = new DataConfig();\n      NodeList elems = document.getElementsByTagName(\"dataConfig\");\n      if(elems == null || elems.getLength() == 0) {\n        throw new DataImportHandlerException(SEVERE, \"the root node '<dataConfig>' is missing\");\n      }\n      config.readFromXml((Element) elems.item(0));\n      LOG.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      throw new DataImportHandlerException(SEVERE,\n              \"Exception occurred while initializing context\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5101aff20e65c9a285c274627ec956eb5409d253","date":1344005120,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","sourceNew":"  private void loadDataConfig(InputSource configFile) {\n\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      \n      // only enable xinclude, if a a SolrCore and SystemId is present (makes no sense otherwise)\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          LOG.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      if (core != null)\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      config = readFromXml(document);\n      LOG.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      throw new DataImportHandlerException(SEVERE,\n              \"Data Config problem: \" + e.getMessage(), e);\n    }\n    for (Entity e : config.getEntities()) {\n      if (e.getAllAttributes().containsKey(SqlEntityProcessor.DELTA_QUERY)) {\n        isDeltaImportSupported = true;\n        break;\n      }\n    }\n  }\n\n","sourceOld":"  private void loadDataConfig(InputSource configFile) {\n\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      \n      // only enable xinclude, if a a SolrCore and SystemId is present (makes no sense otherwise)\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          LOG.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      if (core != null)\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      config = readFromXml(document);\n      LOG.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      throw new DataImportHandlerException(SEVERE,\n              \"Exception occurred while initializing context\", e);\n    }\n  }\n\n","bugFix":["b24326411db492f92ea49f6fb947c90bc73cf19e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","sourceNew":"  private void loadDataConfig(InputSource configFile) {\n\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      \n      // only enable xinclude, if a a SolrCore and SystemId is present (makes no sense otherwise)\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          LOG.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      if (core != null)\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      config = readFromXml(document);\n      LOG.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      throw new DataImportHandlerException(SEVERE,\n              \"Data Config problem: \" + e.getMessage(), e);\n    }\n    for (Entity e : config.getEntities()) {\n      if (e.getAllAttributes().containsKey(SqlEntityProcessor.DELTA_QUERY)) {\n        isDeltaImportSupported = true;\n        break;\n      }\n    }\n  }\n\n","sourceOld":"  private void loadDataConfig(InputSource configFile) {\n\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      \n      // only enable xinclude, if a a SolrCore and SystemId is present (makes no sense otherwise)\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          LOG.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      if (core != null)\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      config = readFromXml(document);\n      LOG.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      throw new DataImportHandlerException(SEVERE,\n              \"Exception occurred while initializing context\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","sourceNew":"  private void loadDataConfig(InputSource configFile) {\n\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      \n      // only enable xinclude, if a a SolrCore and SystemId is present (makes no sense otherwise)\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          LOG.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      if (core != null)\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      config = readFromXml(document);\n      LOG.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      throw new DataImportHandlerException(SEVERE,\n              \"Data Config problem: \" + e.getMessage(), e);\n    }\n    for (Entity e : config.getEntities()) {\n      if (e.getAllAttributes().containsKey(SqlEntityProcessor.DELTA_QUERY)) {\n        isDeltaImportSupported = true;\n        break;\n      }\n    }\n  }\n\n","sourceOld":"  private void loadDataConfig(InputSource configFile) {\n\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      \n      // only enable xinclude, if a a SolrCore and SystemId is present (makes no sense otherwise)\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          LOG.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      if (core != null)\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      config = readFromXml(document);\n      LOG.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      throw new DataImportHandlerException(SEVERE,\n              \"Exception occurred while initializing context\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2cec95c8cf8e3ae86eecfa7ff107b950b578dd27","date":1403853996,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","sourceNew":"  public DIHConfiguration loadDataConfig(InputSource configFile) {\n\n    DIHConfiguration dihcfg = null;\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      \n      // only enable xinclude, if a a SolrCore and SystemId is present (makes no sense otherwise)\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          LOG.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      if (core != null)\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      dihcfg = readFromXml(document);\n      LOG.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      throw new DataImportHandlerException(SEVERE,\n              \"Data Config problem: \" + e.getMessage(), e);\n    }\n    for (Entity e : dihcfg.getEntities()) {\n      if (e.getAllAttributes().containsKey(SqlEntityProcessor.DELTA_QUERY)) {\n        isDeltaImportSupported = true;\n        break;\n      }\n    }\n    return dihcfg;\n  }\n\n","sourceOld":"  private void loadDataConfig(InputSource configFile) {\n\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      \n      // only enable xinclude, if a a SolrCore and SystemId is present (makes no sense otherwise)\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          LOG.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      if (core != null)\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      config = readFromXml(document);\n      LOG.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      throw new DataImportHandlerException(SEVERE,\n              \"Data Config problem: \" + e.getMessage(), e);\n    }\n    for (Entity e : config.getEntities()) {\n      if (e.getAllAttributes().containsKey(SqlEntityProcessor.DELTA_QUERY)) {\n        isDeltaImportSupported = true;\n        break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc09e28d0db4f2a2b54d85cc029cc9d7c2d84ff3","date":1518990066,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","sourceNew":"  public DIHConfiguration loadDataConfig(InputSource configFile) {\n\n    DIHConfiguration dihcfg = null;\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      dbf.setValidating(false);\n      \n      // only enable xinclude, if XML is coming from safe source (local file)\n      // and a a SolrCore and SystemId is present (makes no sense otherwise):\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          LOG.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      // only enable xinclude / external entities, if XML is coming from\n      // safe source (local file) and a a SolrCore and SystemId is present:\n      if (core != null && configFile.getSystemId() != null) {\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      } else {\n        // Don't allow external entities without having a system ID:\n        builder.setEntityResolver(EmptyEntityResolver.SAX_INSTANCE);\n      }\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      dihcfg = readFromXml(document);\n      LOG.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      throw new DataImportHandlerException(SEVERE,\n              \"Data Config problem: \" + e.getMessage(), e);\n    }\n    for (Entity e : dihcfg.getEntities()) {\n      if (e.getAllAttributes().containsKey(SqlEntityProcessor.DELTA_QUERY)) {\n        isDeltaImportSupported = true;\n        break;\n      }\n    }\n    return dihcfg;\n  }\n\n","sourceOld":"  public DIHConfiguration loadDataConfig(InputSource configFile) {\n\n    DIHConfiguration dihcfg = null;\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      \n      // only enable xinclude, if a a SolrCore and SystemId is present (makes no sense otherwise)\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          LOG.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      if (core != null)\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      dihcfg = readFromXml(document);\n      LOG.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      throw new DataImportHandlerException(SEVERE,\n              \"Data Config problem: \" + e.getMessage(), e);\n    }\n    for (Entity e : dihcfg.getEntities()) {\n      if (e.getAllAttributes().containsKey(SqlEntityProcessor.DELTA_QUERY)) {\n        isDeltaImportSupported = true;\n        break;\n      }\n    }\n    return dihcfg;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","sourceNew":"  public DIHConfiguration loadDataConfig(InputSource configFile) {\n\n    DIHConfiguration dihcfg = null;\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      dbf.setValidating(false);\n      \n      // only enable xinclude, if XML is coming from safe source (local file)\n      // and a a SolrCore and SystemId is present (makes no sense otherwise):\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          log.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      // only enable xinclude / external entities, if XML is coming from\n      // safe source (local file) and a a SolrCore and SystemId is present:\n      if (core != null && configFile.getSystemId() != null) {\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      } else {\n        // Don't allow external entities without having a system ID:\n        builder.setEntityResolver(EmptyEntityResolver.SAX_INSTANCE);\n      }\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      dihcfg = readFromXml(document);\n      log.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      throw new DataImportHandlerException(SEVERE,\n              \"Data Config problem: \" + e.getMessage(), e);\n    }\n    for (Entity e : dihcfg.getEntities()) {\n      if (e.getAllAttributes().containsKey(SqlEntityProcessor.DELTA_QUERY)) {\n        isDeltaImportSupported = true;\n        break;\n      }\n    }\n    return dihcfg;\n  }\n\n","sourceOld":"  public DIHConfiguration loadDataConfig(InputSource configFile) {\n\n    DIHConfiguration dihcfg = null;\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      dbf.setValidating(false);\n      \n      // only enable xinclude, if XML is coming from safe source (local file)\n      // and a a SolrCore and SystemId is present (makes no sense otherwise):\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          LOG.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      // only enable xinclude / external entities, if XML is coming from\n      // safe source (local file) and a a SolrCore and SystemId is present:\n      if (core != null && configFile.getSystemId() != null) {\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      } else {\n        // Don't allow external entities without having a system ID:\n        builder.setEntityResolver(EmptyEntityResolver.SAX_INSTANCE);\n      }\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      dihcfg = readFromXml(document);\n      LOG.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      throw new DataImportHandlerException(SEVERE,\n              \"Data Config problem: \" + e.getMessage(), e);\n    }\n    for (Entity e : dihcfg.getEntities()) {\n      if (e.getAllAttributes().containsKey(SqlEntityProcessor.DELTA_QUERY)) {\n        isDeltaImportSupported = true;\n        break;\n      }\n    }\n    return dihcfg;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","sourceNew":"  @SuppressWarnings(\"deprecation\")\n  public DIHConfiguration loadDataConfig(InputSource configFile) {\n\n    DIHConfiguration dihcfg = null;\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      dbf.setValidating(false);\n      \n      // only enable xinclude, if XML is coming from safe source (local file)\n      // and a a SolrCore and SystemId is present (makes no sense otherwise):\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          log.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      // only enable xinclude / external entities, if XML is coming from\n      // safe source (local file) and a a SolrCore and SystemId is present:\n      if (core != null && configFile.getSystemId() != null) {\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      } else {\n        // Don't allow external entities without having a system ID:\n        builder.setEntityResolver(EmptyEntityResolver.SAX_INSTANCE);\n      }\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      dihcfg = readFromXml(document);\n      log.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      throw new DataImportHandlerException(SEVERE,\n              \"Data Config problem: \" + e.getMessage(), e);\n    }\n    for (Entity e : dihcfg.getEntities()) {\n      if (e.getAllAttributes().containsKey(SqlEntityProcessor.DELTA_QUERY)) {\n        isDeltaImportSupported = true;\n        break;\n      }\n    }\n    return dihcfg;\n  }\n\n","sourceOld":"  public DIHConfiguration loadDataConfig(InputSource configFile) {\n\n    DIHConfiguration dihcfg = null;\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      dbf.setValidating(false);\n      \n      // only enable xinclude, if XML is coming from safe source (local file)\n      // and a a SolrCore and SystemId is present (makes no sense otherwise):\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          log.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      // only enable xinclude / external entities, if XML is coming from\n      // safe source (local file) and a a SolrCore and SystemId is present:\n      if (core != null && configFile.getSystemId() != null) {\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      } else {\n        // Don't allow external entities without having a system ID:\n        builder.setEntityResolver(EmptyEntityResolver.SAX_INSTANCE);\n      }\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      dihcfg = readFromXml(document);\n      log.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      throw new DataImportHandlerException(SEVERE,\n              \"Data Config problem: \" + e.getMessage(), e);\n    }\n    for (Entity e : dihcfg.getEntities()) {\n      if (e.getAllAttributes().containsKey(SqlEntityProcessor.DELTA_QUERY)) {\n        isDeltaImportSupported = true;\n        break;\n      }\n    }\n    return dihcfg;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","sourceNew":"  public DIHConfiguration loadDataConfig(InputSource configFile) {\n\n    DIHConfiguration dihcfg = null;\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      dbf.setValidating(false);\n      \n      // only enable xinclude, if XML is coming from safe source (local file)\n      // and a a SolrCore and SystemId is present (makes no sense otherwise):\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          log.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      // only enable xinclude / external entities, if XML is coming from\n      // safe source (local file) and a a SolrCore and SystemId is present:\n      if (core != null && configFile.getSystemId() != null) {\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      } else {\n        // Don't allow external entities without having a system ID:\n        builder.setEntityResolver(EmptyEntityResolver.SAX_INSTANCE);\n      }\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      dihcfg = readFromXml(document);\n      log.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      throw new DataImportHandlerException(SEVERE,\n              \"Data Config problem: \" + e.getMessage(), e);\n    }\n    for (Entity e : dihcfg.getEntities()) {\n      if (e.getAllAttributes().containsKey(SqlEntityProcessor.DELTA_QUERY)) {\n        isDeltaImportSupported = true;\n        break;\n      }\n    }\n    return dihcfg;\n  }\n\n","sourceOld":"  @SuppressWarnings(\"deprecation\")\n  public DIHConfiguration loadDataConfig(InputSource configFile) {\n\n    DIHConfiguration dihcfg = null;\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      dbf.setValidating(false);\n      \n      // only enable xinclude, if XML is coming from safe source (local file)\n      // and a a SolrCore and SystemId is present (makes no sense otherwise):\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          log.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      // only enable xinclude / external entities, if XML is coming from\n      // safe source (local file) and a a SolrCore and SystemId is present:\n      if (core != null && configFile.getSystemId() != null) {\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      } else {\n        // Don't allow external entities without having a system ID:\n        builder.setEntityResolver(EmptyEntityResolver.SAX_INSTANCE);\n      }\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      dihcfg = readFromXml(document);\n      log.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      throw new DataImportHandlerException(SEVERE,\n              \"Data Config problem: \" + e.getMessage(), e);\n    }\n    for (Entity e : dihcfg.getEntities()) {\n      if (e.getAllAttributes().containsKey(SqlEntityProcessor.DELTA_QUERY)) {\n        isDeltaImportSupported = true;\n        break;\n      }\n    }\n    return dihcfg;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#loadDataConfig(InputSource).mjava","sourceNew":null,"sourceOld":"  public DIHConfiguration loadDataConfig(InputSource configFile) {\n\n    DIHConfiguration dihcfg = null;\n    try {\n      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      dbf.setValidating(false);\n      \n      // only enable xinclude, if XML is coming from safe source (local file)\n      // and a a SolrCore and SystemId is present (makes no sense otherwise):\n      if (core != null && configFile.getSystemId() != null) {\n        try {\n          dbf.setXIncludeAware(true);\n          dbf.setNamespaceAware(true);\n        } catch( UnsupportedOperationException e ) {\n          log.warn( \"XML parser doesn't support XInclude option\" );\n        }\n      }\n      \n      DocumentBuilder builder = dbf.newDocumentBuilder();\n      // only enable xinclude / external entities, if XML is coming from\n      // safe source (local file) and a a SolrCore and SystemId is present:\n      if (core != null && configFile.getSystemId() != null) {\n        builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));\n      } else {\n        // Don't allow external entities without having a system ID:\n        builder.setEntityResolver(EmptyEntityResolver.SAX_INSTANCE);\n      }\n      builder.setErrorHandler(XMLLOG);\n      Document document;\n      try {\n        document = builder.parse(configFile);\n      } finally {\n        // some XML parsers are broken and don't close the byte stream (but they should according to spec)\n        IOUtils.closeQuietly(configFile.getByteStream());\n      }\n\n      dihcfg = readFromXml(document);\n      log.info(\"Data Configuration loaded successfully\");\n    } catch (Exception e) {\n      throw new DataImportHandlerException(SEVERE,\n              \"Data Config problem: \" + e.getMessage(), e);\n    }\n    for (Entity e : dihcfg.getEntities()) {\n      if (e.getAllAttributes().containsKey(SqlEntityProcessor.DELTA_QUERY)) {\n        isDeltaImportSupported = true;\n        break;\n      }\n    }\n    return dihcfg;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c":["7b1605dda5afabdc06fd136fa0dd14ad326e3001"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"bc09e28d0db4f2a2b54d85cc029cc9d7c2d84ff3":["2cec95c8cf8e3ae86eecfa7ff107b950b578dd27"],"2cec95c8cf8e3ae86eecfa7ff107b950b578dd27":["5101aff20e65c9a285c274627ec956eb5409d253"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c","5101aff20e65c9a285c274627ec956eb5409d253"],"5101aff20e65c9a285c274627ec956eb5409d253":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c","5101aff20e65c9a285c274627ec956eb5409d253"],"7b1605dda5afabdc06fd136fa0dd14ad326e3001":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["bc09e28d0db4f2a2b54d85cc029cc9d7c2d84ff3"]},"commit2Childs":{"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c":["8fd5be977c105554c6a7b68afcdbc511439723ab","5101aff20e65c9a285c274627ec956eb5409d253","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"c26f00b574427b55127e869b935845554afde1fa":["7b1605dda5afabdc06fd136fa0dd14ad326e3001"],"bc09e28d0db4f2a2b54d85cc029cc9d7c2d84ff3":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"2cec95c8cf8e3ae86eecfa7ff107b950b578dd27":["bc09e28d0db4f2a2b54d85cc029cc9d7c2d84ff3"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"5101aff20e65c9a285c274627ec956eb5409d253":["2cec95c8cf8e3ae86eecfa7ff107b950b578dd27","8fd5be977c105554c6a7b68afcdbc511439723ab","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"7b1605dda5afabdc06fd136fa0dd14ad326e3001":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8fd5be977c105554c6a7b68afcdbc511439723ab","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}