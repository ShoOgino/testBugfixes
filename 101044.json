{"path":"solr/core/src/java/org/apache/solr/handler/SnapShooter#initialize(BackupRepository,SolrCore,URI,String,String).mjava","commits":[{"id":"af3193c66df8e8324d4bce9f66df967af9e8c602","date":1472772499,"type":1,"author":"Hrishikesh Gadre","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#initialize(BackupRepository,SolrCore,URI,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#initialize(BackupRepository,SolrCore,String,String,String).mjava","sourceNew":"  private void initialize(BackupRepository backupRepo, SolrCore core, URI location, String snapshotName, String commitName) {\n    this.solrCore = Preconditions.checkNotNull(core);\n    this.backupRepo = Preconditions.checkNotNull(backupRepo);\n    this.baseSnapDirPath = location;\n    this.snapshotName = snapshotName;\n    if (snapshotName != null) {\n      directoryName = \"snapshot.\" + snapshotName;\n    } else {\n      SimpleDateFormat fmt = new SimpleDateFormat(DATE_FMT, Locale.ROOT);\n      directoryName = \"snapshot.\" + fmt.format(new Date());\n    }\n    this.snapshotDirPath = backupRepo.resolve(location, directoryName);\n    this.commitName = commitName;\n  }\n\n","sourceOld":"  private void initialize(BackupRepository backupRepo, SolrCore core, String location, String snapshotName, String commitName) {\n    this.solrCore = Preconditions.checkNotNull(core);\n    this.backupRepo = Preconditions.checkNotNull(backupRepo);\n    this.baseSnapDirPath = backupRepo.createURI(Preconditions.checkNotNull(location)).normalize();\n    this.snapshotName = snapshotName;\n    if (snapshotName != null) {\n      directoryName = \"snapshot.\" + snapshotName;\n    } else {\n      SimpleDateFormat fmt = new SimpleDateFormat(DATE_FMT, Locale.ROOT);\n      directoryName = \"snapshot.\" + fmt.format(new Date());\n    }\n    this.snapshotDirPath = backupRepo.createURI(location, directoryName);\n    this.commitName = commitName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da02fc41cfc83eaee66abb7c926f2c909bda6d26","date":1472818509,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#initialize(BackupRepository,SolrCore,URI,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#initialize(BackupRepository,SolrCore,String,String,String).mjava","sourceNew":"  private void initialize(BackupRepository backupRepo, SolrCore core, URI location, String snapshotName, String commitName) {\n    this.solrCore = Preconditions.checkNotNull(core);\n    this.backupRepo = Preconditions.checkNotNull(backupRepo);\n    this.baseSnapDirPath = location;\n    this.snapshotName = snapshotName;\n    if (snapshotName != null) {\n      directoryName = \"snapshot.\" + snapshotName;\n    } else {\n      SimpleDateFormat fmt = new SimpleDateFormat(DATE_FMT, Locale.ROOT);\n      directoryName = \"snapshot.\" + fmt.format(new Date());\n    }\n    this.snapshotDirPath = backupRepo.resolve(location, directoryName);\n    this.commitName = commitName;\n  }\n\n","sourceOld":"  private void initialize(BackupRepository backupRepo, SolrCore core, String location, String snapshotName, String commitName) {\n    this.solrCore = Preconditions.checkNotNull(core);\n    this.backupRepo = Preconditions.checkNotNull(backupRepo);\n    this.baseSnapDirPath = backupRepo.createURI(Preconditions.checkNotNull(location)).normalize();\n    this.snapshotName = snapshotName;\n    if (snapshotName != null) {\n      directoryName = \"snapshot.\" + snapshotName;\n    } else {\n      SimpleDateFormat fmt = new SimpleDateFormat(DATE_FMT, Locale.ROOT);\n      directoryName = \"snapshot.\" + fmt.format(new Date());\n    }\n    this.snapshotDirPath = backupRepo.createURI(location, directoryName);\n    this.commitName = commitName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc8f206328a706450934717bec7ccc22ad166fc0","date":1473142172,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#initialize(BackupRepository,SolrCore,URI,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#initialize(BackupRepository,SolrCore,String,String,String).mjava","sourceNew":"  private void initialize(BackupRepository backupRepo, SolrCore core, URI location, String snapshotName, String commitName) {\n    this.solrCore = Preconditions.checkNotNull(core);\n    this.backupRepo = Preconditions.checkNotNull(backupRepo);\n    this.baseSnapDirPath = location;\n    this.snapshotName = snapshotName;\n    if (snapshotName != null) {\n      directoryName = \"snapshot.\" + snapshotName;\n    } else {\n      SimpleDateFormat fmt = new SimpleDateFormat(DATE_FMT, Locale.ROOT);\n      directoryName = \"snapshot.\" + fmt.format(new Date());\n    }\n    this.snapshotDirPath = backupRepo.resolve(location, directoryName);\n    this.commitName = commitName;\n  }\n\n","sourceOld":"  private void initialize(BackupRepository backupRepo, SolrCore core, String location, String snapshotName, String commitName) {\n    this.solrCore = Preconditions.checkNotNull(core);\n    this.backupRepo = Preconditions.checkNotNull(backupRepo);\n    this.baseSnapDirPath = backupRepo.createURI(Preconditions.checkNotNull(location)).normalize();\n    this.snapshotName = snapshotName;\n    if (snapshotName != null) {\n      directoryName = \"snapshot.\" + snapshotName;\n    } else {\n      SimpleDateFormat fmt = new SimpleDateFormat(DATE_FMT, Locale.ROOT);\n      directoryName = \"snapshot.\" + fmt.format(new Date());\n    }\n    this.snapshotDirPath = backupRepo.createURI(location, directoryName);\n    this.commitName = commitName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#initialize(BackupRepository,SolrCore,URI,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void initialize(BackupRepository backupRepo, SolrCore core, URI location, String snapshotName, String commitName) {\n    this.solrCore = Preconditions.checkNotNull(core);\n    this.backupRepo = Preconditions.checkNotNull(backupRepo);\n    this.baseSnapDirPath = location;\n    this.snapshotName = snapshotName;\n    if (snapshotName != null) {\n      directoryName = \"snapshot.\" + snapshotName;\n    } else {\n      SimpleDateFormat fmt = new SimpleDateFormat(DATE_FMT, Locale.ROOT);\n      directoryName = \"snapshot.\" + fmt.format(new Date());\n    }\n    this.snapshotDirPath = backupRepo.resolve(location, directoryName);\n    this.commitName = commitName;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#initialize(BackupRepository,SolrCore,URI,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void initialize(BackupRepository backupRepo, SolrCore core, URI location, String snapshotName, String commitName) {\n    this.solrCore = Preconditions.checkNotNull(core);\n    this.backupRepo = Preconditions.checkNotNull(backupRepo);\n    this.baseSnapDirPath = location;\n    this.snapshotName = snapshotName;\n    if (snapshotName != null) {\n      directoryName = \"snapshot.\" + snapshotName;\n    } else {\n      SimpleDateFormat fmt = new SimpleDateFormat(DATE_FMT, Locale.ROOT);\n      directoryName = \"snapshot.\" + fmt.format(new Date());\n    }\n    this.snapshotDirPath = backupRepo.resolve(location, directoryName);\n    this.commitName = commitName;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c609c76a49c17e5c1c8a5d5cd2d685be9f306a47","date":1477689538,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#initialize(BackupRepository,SolrCore,URI,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#initialize(BackupRepository,SolrCore,URI,String,String).mjava","sourceNew":"  private void initialize(BackupRepository backupRepo, SolrCore core, URI location, String snapshotName, String commitName) {\n    this.solrCore = Objects.requireNonNull(core);\n    this.backupRepo = Objects.requireNonNull(backupRepo);\n    this.baseSnapDirPath = location;\n    this.snapshotName = snapshotName;\n    if (snapshotName != null) {\n      directoryName = \"snapshot.\" + snapshotName;\n    } else {\n      SimpleDateFormat fmt = new SimpleDateFormat(DATE_FMT, Locale.ROOT);\n      directoryName = \"snapshot.\" + fmt.format(new Date());\n    }\n    this.snapshotDirPath = backupRepo.resolve(location, directoryName);\n    this.commitName = commitName;\n  }\n\n","sourceOld":"  private void initialize(BackupRepository backupRepo, SolrCore core, URI location, String snapshotName, String commitName) {\n    this.solrCore = Preconditions.checkNotNull(core);\n    this.backupRepo = Preconditions.checkNotNull(backupRepo);\n    this.baseSnapDirPath = location;\n    this.snapshotName = snapshotName;\n    if (snapshotName != null) {\n      directoryName = \"snapshot.\" + snapshotName;\n    } else {\n      SimpleDateFormat fmt = new SimpleDateFormat(DATE_FMT, Locale.ROOT);\n      directoryName = \"snapshot.\" + fmt.format(new Date());\n    }\n    this.snapshotDirPath = backupRepo.resolve(location, directoryName);\n    this.commitName = commitName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"320888923ec13b91f53082558f01f4c9960dd226","date":1477926871,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#initialize(BackupRepository,SolrCore,URI,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#initialize(BackupRepository,SolrCore,URI,String,String).mjava","sourceNew":"  private void initialize(BackupRepository backupRepo, SolrCore core, URI location, String snapshotName, String commitName) {\n    this.solrCore = Objects.requireNonNull(core);\n    this.backupRepo = Objects.requireNonNull(backupRepo);\n    this.baseSnapDirPath = location;\n    this.snapshotName = snapshotName;\n    if (snapshotName != null) {\n      directoryName = \"snapshot.\" + snapshotName;\n    } else {\n      SimpleDateFormat fmt = new SimpleDateFormat(DATE_FMT, Locale.ROOT);\n      directoryName = \"snapshot.\" + fmt.format(new Date());\n    }\n    this.snapshotDirPath = backupRepo.resolve(location, directoryName);\n    this.commitName = commitName;\n  }\n\n","sourceOld":"  private void initialize(BackupRepository backupRepo, SolrCore core, URI location, String snapshotName, String commitName) {\n    this.solrCore = Preconditions.checkNotNull(core);\n    this.backupRepo = Preconditions.checkNotNull(backupRepo);\n    this.baseSnapDirPath = location;\n    this.snapshotName = snapshotName;\n    if (snapshotName != null) {\n      directoryName = \"snapshot.\" + snapshotName;\n    } else {\n      SimpleDateFormat fmt = new SimpleDateFormat(DATE_FMT, Locale.ROOT);\n      directoryName = \"snapshot.\" + fmt.format(new Date());\n    }\n    this.snapshotDirPath = backupRepo.resolve(location, directoryName);\n    this.commitName = commitName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6b17e67903ace8abb1d4d602bfc40d1994692ff","date":1593429504,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#initialize(BackupRepository,SolrCore,URI,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#initialize(BackupRepository,SolrCore,URI,String,String).mjava","sourceNew":"  private void initialize(BackupRepository backupRepo, SolrCore core, URI location, String snapshotName, String commitName) {\n    this.solrCore = Objects.requireNonNull(core);\n    this.backupRepo = Objects.requireNonNull(backupRepo);\n    this.baseSnapDirPath = location;\n    this.snapshotName = snapshotName;\n    if (\"file\".equals(location.getScheme())) {\n      solrCore.getCoreContainer().assertPathAllowed(Paths.get(location));\n    }\n    if (snapshotName != null) {\n      directoryName = \"snapshot.\" + snapshotName;\n    } else {\n      SimpleDateFormat fmt = new SimpleDateFormat(DATE_FMT, Locale.ROOT);\n      directoryName = \"snapshot.\" + fmt.format(new Date());\n    }\n    this.snapshotDirPath = backupRepo.resolve(location, directoryName);\n    this.commitName = commitName;\n  }\n\n","sourceOld":"  private void initialize(BackupRepository backupRepo, SolrCore core, URI location, String snapshotName, String commitName) {\n    this.solrCore = Objects.requireNonNull(core);\n    this.backupRepo = Objects.requireNonNull(backupRepo);\n    this.baseSnapDirPath = location;\n    this.snapshotName = snapshotName;\n    if (snapshotName != null) {\n      directoryName = \"snapshot.\" + snapshotName;\n    } else {\n      SimpleDateFormat fmt = new SimpleDateFormat(DATE_FMT, Locale.ROOT);\n      directoryName = \"snapshot.\" + fmt.format(new Date());\n    }\n    this.snapshotDirPath = backupRepo.resolve(location, directoryName);\n    this.commitName = commitName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a6b17e67903ace8abb1d4d602bfc40d1994692ff":["c609c76a49c17e5c1c8a5d5cd2d685be9f306a47"],"da02fc41cfc83eaee66abb7c926f2c909bda6d26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","af3193c66df8e8324d4bce9f66df967af9e8c602"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","da02fc41cfc83eaee66abb7c926f2c909bda6d26"],"c609c76a49c17e5c1c8a5d5cd2d685be9f306a47":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"af3193c66df8e8324d4bce9f66df967af9e8c602":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bc8f206328a706450934717bec7ccc22ad166fc0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","da02fc41cfc83eaee66abb7c926f2c909bda6d26"],"320888923ec13b91f53082558f01f4c9960dd226":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","c609c76a49c17e5c1c8a5d5cd2d685be9f306a47"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a6b17e67903ace8abb1d4d602bfc40d1994692ff"]},"commit2Childs":{"a6b17e67903ace8abb1d4d602bfc40d1994692ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"da02fc41cfc83eaee66abb7c926f2c909bda6d26":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","bc8f206328a706450934717bec7ccc22ad166fc0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["da02fc41cfc83eaee66abb7c926f2c909bda6d26","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","af3193c66df8e8324d4bce9f66df967af9e8c602","bc8f206328a706450934717bec7ccc22ad166fc0","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["c609c76a49c17e5c1c8a5d5cd2d685be9f306a47","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"c609c76a49c17e5c1c8a5d5cd2d685be9f306a47":["a6b17e67903ace8abb1d4d602bfc40d1994692ff","320888923ec13b91f53082558f01f4c9960dd226"],"af3193c66df8e8324d4bce9f66df967af9e8c602":["da02fc41cfc83eaee66abb7c926f2c909bda6d26"],"bc8f206328a706450934717bec7ccc22ad166fc0":[],"320888923ec13b91f53082558f01f4c9960dd226":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["320888923ec13b91f53082558f01f4c9960dd226"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["bc8f206328a706450934717bec7ccc22ad166fc0","320888923ec13b91f53082558f01f4c9960dd226","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}