{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random,boolean).mjava","commits":[{"id":"25308800fd7565ab31e6353077a56bba68fb0668","date":1355337658,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a random {@link CompressingCodec} that is using a segment suffix\n   */\n  public static CompressingCodec randomInstance(Random random, boolean withSegmentSuffix) {\n    return randomInstance(random, RandomInts.randomIntBetween(random, 1, 500), withSegmentSuffix);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["699a2199028b8eadcc558eebcf669e5fc708524a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a random {@link CompressingCodec} that is using a segment suffix\n   */\n  public static CompressingCodec randomInstance(Random random, boolean withSegmentSuffix) {\n    return randomInstance(random, RandomInts.randomIntBetween(random, 1, 500), withSegmentSuffix);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"699a2199028b8eadcc558eebcf669e5fc708524a","date":1417544403,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random,boolean).mjava","sourceNew":"  /**\n   * Creates a random {@link CompressingCodec} that is using a segment suffix\n   */\n  public static CompressingCodec randomInstance(Random random, boolean withSegmentSuffix) {\n    return randomInstance(random, RandomInts.randomIntBetween(random, 1, 1 << 15), RandomInts.randomIntBetween(random, 64, 1024), withSegmentSuffix);\n  }\n\n","sourceOld":"  /**\n   * Creates a random {@link CompressingCodec} that is using a segment suffix\n   */\n  public static CompressingCodec randomInstance(Random random, boolean withSegmentSuffix) {\n    return randomInstance(random, RandomInts.randomIntBetween(random, 1, 500), withSegmentSuffix);\n  }\n\n","bugFix":["25308800fd7565ab31e6353077a56bba68fb0668"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59d4661023aa9541b0a759e4d2e11dcf83b923a0","date":1420124226,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random,boolean).mjava","sourceNew":"  /**\n   * Creates a random {@link CompressingCodec} that is using a segment suffix\n   */\n  public static CompressingCodec randomInstance(Random random, boolean withSegmentSuffix) {\n    return randomInstance(random, \n                          RandomInts.randomIntBetween(random, 1, 1 << 15), \n                          RandomInts.randomIntBetween(random, 64, 1024), \n                          withSegmentSuffix,\n                          RandomInts.randomIntBetween(random, 1, 1024));\n  }\n\n","sourceOld":"  /**\n   * Creates a random {@link CompressingCodec} that is using a segment suffix\n   */\n  public static CompressingCodec randomInstance(Random random, boolean withSegmentSuffix) {\n    return randomInstance(random, RandomInts.randomIntBetween(random, 1, 1 << 15), RandomInts.randomIntBetween(random, 64, 1024), withSegmentSuffix);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6448f67be45147de82a85cd903fec34e8930da75","date":1477041277,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random,boolean).mjava","sourceNew":"  /**\n   * Creates a random {@link CompressingCodec} that is using a segment suffix\n   */\n  public static CompressingCodec randomInstance(Random random, boolean withSegmentSuffix) {\n    return randomInstance(random, \n                          RandomNumbers.randomIntBetween(random, 1, 1 << 15), \n                          RandomNumbers.randomIntBetween(random, 64, 1024), \n                          withSegmentSuffix,\n                          RandomNumbers.randomIntBetween(random, 1, 1024));\n  }\n\n","sourceOld":"  /**\n   * Creates a random {@link CompressingCodec} that is using a segment suffix\n   */\n  public static CompressingCodec randomInstance(Random random, boolean withSegmentSuffix) {\n    return randomInstance(random, \n                          RandomInts.randomIntBetween(random, 1, 1 << 15), \n                          RandomInts.randomIntBetween(random, 64, 1024), \n                          withSegmentSuffix,\n                          RandomInts.randomIntBetween(random, 1, 1024));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random,boolean).mjava","sourceNew":"  /**\n   * Creates a random {@link CompressingCodec} that is using a segment suffix\n   */\n  public static CompressingCodec randomInstance(Random random, boolean withSegmentSuffix) {\n    return randomInstance(random, \n                          RandomNumbers.randomIntBetween(random, 1, 1 << 15), \n                          RandomNumbers.randomIntBetween(random, 64, 1024), \n                          withSegmentSuffix,\n                          RandomNumbers.randomIntBetween(random, 1, 1024));\n  }\n\n","sourceOld":"  /**\n   * Creates a random {@link CompressingCodec} that is using a segment suffix\n   */\n  public static CompressingCodec randomInstance(Random random, boolean withSegmentSuffix) {\n    return randomInstance(random, \n                          RandomInts.randomIntBetween(random, 1, 1 << 15), \n                          RandomInts.randomIntBetween(random, 64, 1024), \n                          withSegmentSuffix,\n                          RandomInts.randomIntBetween(random, 1, 1024));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","25308800fd7565ab31e6353077a56bba68fb0668"],"25308800fd7565ab31e6353077a56bba68fb0668":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6448f67be45147de82a85cd903fec34e8930da75":["59d4661023aa9541b0a759e4d2e11dcf83b923a0"],"59d4661023aa9541b0a759e4d2e11dcf83b923a0":["699a2199028b8eadcc558eebcf669e5fc708524a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["59d4661023aa9541b0a759e4d2e11dcf83b923a0","6448f67be45147de82a85cd903fec34e8930da75"],"699a2199028b8eadcc558eebcf669e5fc708524a":["25308800fd7565ab31e6353077a56bba68fb0668"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6448f67be45147de82a85cd903fec34e8930da75"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"25308800fd7565ab31e6353077a56bba68fb0668":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","699a2199028b8eadcc558eebcf669e5fc708524a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","25308800fd7565ab31e6353077a56bba68fb0668"],"6448f67be45147de82a85cd903fec34e8930da75":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"59d4661023aa9541b0a759e4d2e11dcf83b923a0":["6448f67be45147de82a85cd903fec34e8930da75","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"699a2199028b8eadcc558eebcf669e5fc708524a":["59d4661023aa9541b0a759e4d2e11dcf83b923a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}