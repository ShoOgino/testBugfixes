{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","commits":[{"id":"d334938e866757266d62025305edd378ac505a06","date":1355368871,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","pathOld":"/dev/null","sourceNew":"  protected CloudSolrServer createCloudClient(String defaultCollection)\n      throws MalformedURLException {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.SO_TIMEOUT, 20000);\n    return server;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a69439d0df009e0bb0038d1e427159f449dd670d","date":1355704683,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","sourceNew":"  protected CloudSolrServer createCloudClient(String defaultCollection)\n      throws MalformedURLException {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.SO_TIMEOUT, 30000);\n    return server;\n  }\n\n","sourceOld":"  protected CloudSolrServer createCloudClient(String defaultCollection)\n      throws MalformedURLException {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.SO_TIMEOUT, 20000);\n    return server;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","pathOld":"/dev/null","sourceNew":"  protected CloudSolrServer createCloudClient(String defaultCollection)\n      throws MalformedURLException {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.SO_TIMEOUT, 30000);\n    return server;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9","date":1371479482,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","sourceNew":"  protected CloudSolrServer createCloudClient(String defaultCollection)\n      throws MalformedURLException {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress(), random().nextBoolean());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.SO_TIMEOUT, 30000);\n    return server;\n  }\n\n","sourceOld":"  protected CloudSolrServer createCloudClient(String defaultCollection)\n      throws MalformedURLException {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.SO_TIMEOUT, 30000);\n    return server;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","sourceNew":"  protected CloudSolrServer createCloudClient(String defaultCollection)\n      throws MalformedURLException {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress(), random().nextBoolean());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.SO_TIMEOUT, 30000);\n    return server;\n  }\n\n","sourceOld":"  protected CloudSolrServer createCloudClient(String defaultCollection)\n      throws MalformedURLException {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.SO_TIMEOUT, 30000);\n    return server;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1","date":1378862385,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","sourceNew":"  protected CloudSolrServer createCloudClient(String defaultCollection)\n      throws MalformedURLException {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress(), random().nextBoolean());\n    server.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.SO_TIMEOUT, 30000);\n    return server;\n  }\n\n","sourceOld":"  protected CloudSolrServer createCloudClient(String defaultCollection)\n      throws MalformedURLException {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress(), random().nextBoolean());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.SO_TIMEOUT, 30000);\n    return server;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38699e2d7f7814e97a0d58ea4bcaec2bd742007e","date":1384622728,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","sourceNew":"  protected CloudSolrServer createCloudClient(String defaultCollection)\n      throws MalformedURLException {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress(), random().nextBoolean());\n    server.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.SO_TIMEOUT, 60000);\n    return server;\n  }\n\n","sourceOld":"  protected CloudSolrServer createCloudClient(String defaultCollection)\n      throws MalformedURLException {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress(), random().nextBoolean());\n    server.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.SO_TIMEOUT, 30000);\n    return server;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb0589b372a0c7a7b9c3e79410ddd79d7832f2c5","date":1384698010,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","sourceNew":"  protected CloudSolrServer createCloudClient(String defaultCollection)\n      throws MalformedURLException {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress(), random().nextBoolean());\n    server.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 15000);\n    return server;\n  }\n\n","sourceOld":"  protected CloudSolrServer createCloudClient(String defaultCollection)\n      throws MalformedURLException {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress(), random().nextBoolean());\n    server.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.SO_TIMEOUT, 60000);\n    return server;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","sourceNew":"  protected CloudSolrServer createCloudClient(String defaultCollection)\n      throws MalformedURLException {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress(), random().nextBoolean());\n    server.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 15000);\n    return server;\n  }\n\n","sourceOld":"  protected CloudSolrServer createCloudClient(String defaultCollection)\n      throws MalformedURLException {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress(), random().nextBoolean());\n    server.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 5000);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.SO_TIMEOUT, 30000);\n    return server;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22b8610de63c5cb93233ad3cff65a77f27c4b8eb","date":1388344390,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","sourceNew":"  protected CloudSolrServer createCloudClient(String defaultCollection)\n      throws MalformedURLException {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress(), random().nextBoolean());\n    server.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 30000);\n    return server;\n  }\n\n","sourceOld":"  protected CloudSolrServer createCloudClient(String defaultCollection)\n      throws MalformedURLException {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress(), random().nextBoolean());\n    server.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 15000);\n    return server;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52209f74dc33b64e2e3576fe15b8c2d312809d7","date":1408896505,"type":3,"author":"Shawn Heisey","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","sourceNew":"  protected CloudSolrServer createCloudClient(String defaultCollection) {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress(), random().nextBoolean());\n    server.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 30000);\n    return server;\n  }\n\n","sourceOld":"  protected CloudSolrServer createCloudClient(String defaultCollection)\n      throws MalformedURLException {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress(), random().nextBoolean());\n    server.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 30000);\n    return server;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","sourceNew":"  protected CloudSolrClient createCloudClient(String defaultCollection) {\n    CloudSolrClient client = new CloudSolrClient(zkServer.getZkAddress(), random().nextBoolean());\n    client.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) client.setDefaultCollection(defaultCollection);\n    client.getLbClient().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 30000);\n    return client;\n  }\n\n","sourceOld":"  protected CloudSolrServer createCloudClient(String defaultCollection) {\n    CloudSolrServer server = new CloudSolrServer(zkServer.getZkAddress(), random().nextBoolean());\n    server.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) server.setDefaultCollection(defaultCollection);\n    server.getLbServer().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 30000);\n    return server;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6784d0cc613dc1ee97030eaaa5e0754edc22d164","date":1420824784,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","sourceNew":"  protected CloudSolrClient createCloudClient(String defaultCollection) {\n    CloudSolrClient client = new CloudSolrClient(zkServer.getZkAddress(), random().nextBoolean());\n    client.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) client.setDefaultCollection(defaultCollection);\n    client.getLbClient().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 30000);\n    client.getLbClient().getHttpClient().getParams()\n    .setParameter(CoreConnectionPNames.SO_TIMEOUT, 60000);\n    return client;\n  }\n\n","sourceOld":"  protected CloudSolrClient createCloudClient(String defaultCollection) {\n    CloudSolrClient client = new CloudSolrClient(zkServer.getZkAddress(), random().nextBoolean());\n    client.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) client.setDefaultCollection(defaultCollection);\n    client.getLbClient().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 30000);\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"234afba21d42e6c527535c6aa11baba09a4771f3","date":1432825127,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","sourceNew":"  protected CloudSolrClient createCloudClient(String defaultCollection) {\n    CloudSolrClient client = new CloudSolrClient(zkServer.getZkAddress(), random().nextBoolean());\n    client.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) client.setDefaultCollection(defaultCollection);\n    client.getLbClient().setConnectionTimeout(30000);\n    client.getLbClient().setSoTimeout(60000);\n    return client;\n  }\n\n","sourceOld":"  protected CloudSolrClient createCloudClient(String defaultCollection) {\n    CloudSolrClient client = new CloudSolrClient(zkServer.getZkAddress(), random().nextBoolean());\n    client.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) client.setDefaultCollection(defaultCollection);\n    client.getLbClient().getHttpClient().getParams()\n        .setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, 30000);\n    client.getLbClient().getHttpClient().getParams()\n    .setParameter(CoreConnectionPNames.SO_TIMEOUT, 60000);\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","sourceNew":"  protected CloudSolrClient createCloudClient(String defaultCollection) {\n    CloudSolrClient client = getCloudSolrClient(zkServer.getZkAddress(), random().nextBoolean());\n    client.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) client.setDefaultCollection(defaultCollection);\n    client.getLbClient().setConnectionTimeout(30000);\n    client.getLbClient().setSoTimeout(60000);\n    return client;\n  }\n\n","sourceOld":"  protected CloudSolrClient createCloudClient(String defaultCollection) {\n    CloudSolrClient client = new CloudSolrClient(zkServer.getZkAddress(), random().nextBoolean());\n    client.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) client.setDefaultCollection(defaultCollection);\n    client.getLbClient().setConnectionTimeout(30000);\n    client.getLbClient().setSoTimeout(60000);\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","sourceNew":"  protected CloudSolrClient createCloudClient(String defaultCollection) {\n    CloudSolrClient client = getCloudSolrClient(zkServer.getZkAddress(), random().nextBoolean());\n    client.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) client.setDefaultCollection(defaultCollection);\n    client.getLbClient().setConnectionTimeout(30000);\n    client.getLbClient().setSoTimeout(60000);\n    return client;\n  }\n\n","sourceOld":"  protected CloudSolrClient createCloudClient(String defaultCollection) {\n    CloudSolrClient client = new CloudSolrClient(zkServer.getZkAddress(), random().nextBoolean());\n    client.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) client.setDefaultCollection(defaultCollection);\n    client.getLbClient().setConnectionTimeout(30000);\n    client.getLbClient().setSoTimeout(60000);\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43d1e498704edd2bba13548a189eed4dfccff11b","date":1499143458,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","sourceNew":"  protected CloudSolrClient createCloudClient(String defaultCollection) {\n    CloudSolrClient client = getCloudSolrClient(zkServer.getZkAddress(), random().nextBoolean(), 30000, 60000);\n    client.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) client.setDefaultCollection(defaultCollection);\n    return client;\n  }\n\n","sourceOld":"  protected CloudSolrClient createCloudClient(String defaultCollection) {\n    CloudSolrClient client = getCloudSolrClient(zkServer.getZkAddress(), random().nextBoolean());\n    client.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) client.setDefaultCollection(defaultCollection);\n    client.getLbClient().setConnectionTimeout(30000);\n    client.getLbClient().setSoTimeout(60000);\n    return client;\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2ea161f828a3a7a6eb9410a431aecda6d7ab1065","date":1499213384,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","sourceNew":"  protected CloudSolrClient createCloudClient(String defaultCollection) {\n    CloudSolrClient client = getCloudSolrClient(zkServer.getZkAddress(), random().nextBoolean(), 30000, 60000);\n    client.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) client.setDefaultCollection(defaultCollection);\n    return client;\n  }\n\n","sourceOld":"  protected CloudSolrClient createCloudClient(String defaultCollection) {\n    CloudSolrClient client = getCloudSolrClient(zkServer.getZkAddress(), random().nextBoolean());\n    client.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) client.setDefaultCollection(defaultCollection);\n    client.getLbClient().setConnectionTimeout(30000);\n    client.getLbClient().setSoTimeout(60000);\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15ac2153c8e082a2a01cfc713bfa7cb1cf9d709c","date":1510261138,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","sourceNew":"  protected CloudSolrClient createCloudClient(String defaultCollection) {\n    CloudSolrClient client = getCloudSolrClient(zkServer.getZkAddress(), random().nextBoolean(), 30000, 60000);\n    if (defaultCollection != null) client.setDefaultCollection(defaultCollection);\n    return client;\n  }\n\n","sourceOld":"  protected CloudSolrClient createCloudClient(String defaultCollection) {\n    CloudSolrClient client = getCloudSolrClient(zkServer.getZkAddress(), random().nextBoolean(), 30000, 60000);\n    client.setParallelUpdates(random().nextBoolean());\n    if (defaultCollection != null) client.setDefaultCollection(defaultCollection);\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#createCloudClient(String).mjava","sourceNew":"  protected CloudSolrClient createCloudClient(String defaultCollection) {\n    CloudSolrClient client = getCloudSolrClient(zkServer.getZkAddress(), random().nextBoolean(), 30000, 120000);\n    if (defaultCollection != null) client.setDefaultCollection(defaultCollection);\n    return client;\n  }\n\n","sourceOld":"  protected CloudSolrClient createCloudClient(String defaultCollection) {\n    CloudSolrClient client = getCloudSolrClient(zkServer.getZkAddress(), random().nextBoolean(), 30000, 60000);\n    if (defaultCollection != null) client.setDefaultCollection(defaultCollection);\n    return client;\n  }\n\n","bugFix":["43d1e498704edd2bba13548a189eed4dfccff11b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"15ac2153c8e082a2a01cfc713bfa7cb1cf9d709c":["43d1e498704edd2bba13548a189eed4dfccff11b"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a69439d0df009e0bb0038d1e427159f449dd670d"],"22b8610de63c5cb93233ad3cff65a77f27c4b8eb":["bb0589b372a0c7a7b9c3e79410ddd79d7832f2c5"],"bb0589b372a0c7a7b9c3e79410ddd79d7832f2c5":["38699e2d7f7814e97a0d58ea4bcaec2bd742007e"],"2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9":["a69439d0df009e0bb0038d1e427159f449dd670d"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a69439d0df009e0bb0038d1e427159f449dd670d","2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["15ac2153c8e082a2a01cfc713bfa7cb1cf9d709c"],"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1":["2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["234afba21d42e6c527535c6aa11baba09a4771f3"],"a69439d0df009e0bb0038d1e427159f449dd670d":["d334938e866757266d62025305edd378ac505a06"],"bafca15d8e408346a67f4282ad1143b88023893b":["e52209f74dc33b64e2e3576fe15b8c2d312809d7"],"e52209f74dc33b64e2e3576fe15b8c2d312809d7":["22b8610de63c5cb93233ad3cff65a77f27c4b8eb"],"38699e2d7f7814e97a0d58ea4bcaec2bd742007e":["d5fc588fc7c6e55c0d778665292d023bf8d5f3b1"],"43d1e498704edd2bba13548a189eed4dfccff11b":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"d334938e866757266d62025305edd378ac505a06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2ea161f828a3a7a6eb9410a431aecda6d7ab1065":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","43d1e498704edd2bba13548a189eed4dfccff11b"],"234afba21d42e6c527535c6aa11baba09a4771f3":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["234afba21d42e6c527535c6aa11baba09a4771f3","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["d5fc588fc7c6e55c0d778665292d023bf8d5f3b1","bb0589b372a0c7a7b9c3e79410ddd79d7832f2c5"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"]},"commit2Childs":{"15ac2153c8e082a2a01cfc713bfa7cb1cf9d709c":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"22b8610de63c5cb93233ad3cff65a77f27c4b8eb":["e52209f74dc33b64e2e3576fe15b8c2d312809d7"],"bb0589b372a0c7a7b9c3e79410ddd79d7832f2c5":["22b8610de63c5cb93233ad3cff65a77f27c4b8eb","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d5fc588fc7c6e55c0d778665292d023bf8d5f3b1"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d5fc588fc7c6e55c0d778665292d023bf8d5f3b1":["38699e2d7f7814e97a0d58ea4bcaec2bd742007e","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a69439d0df009e0bb0038d1e427159f449dd670d":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"bafca15d8e408346a67f4282ad1143b88023893b":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"e52209f74dc33b64e2e3576fe15b8c2d312809d7":["bafca15d8e408346a67f4282ad1143b88023893b"],"38699e2d7f7814e97a0d58ea4bcaec2bd742007e":["bb0589b372a0c7a7b9c3e79410ddd79d7832f2c5"],"43d1e498704edd2bba13548a189eed4dfccff11b":["15ac2153c8e082a2a01cfc713bfa7cb1cf9d709c","2ea161f828a3a7a6eb9410a431aecda6d7ab1065"],"d334938e866757266d62025305edd378ac505a06":["a69439d0df009e0bb0038d1e427159f449dd670d"],"2ea161f828a3a7a6eb9410a431aecda6d7ab1065":[],"234afba21d42e6c527535c6aa11baba09a4771f3":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d334938e866757266d62025305edd378ac505a06"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["43d1e498704edd2bba13548a189eed4dfccff11b","2ea161f828a3a7a6eb9410a431aecda6d7ab1065"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["234afba21d42e6c527535c6aa11baba09a4771f3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","37a0f60745e53927c4c876cfe5b5a58170f0646c","2ea161f828a3a7a6eb9410a431aecda6d7ab1065","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}