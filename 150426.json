{"path":"modules/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#build(TermFreqIterator).mjava","commits":[{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#build(TermFreqIterator).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/jaspell/JaspellLookup#build(TermFreqIterator).mjava","sourceNew":"  @Override\n  public void build(TermFreqIterator tfit) throws IOException {\n    if (tfit instanceof SortedIterator) {\n      // make sure it's unsorted\n      tfit = new UnsortedTermFreqIteratorWrapper(tfit);\n    }\n    trie = new JaspellTernarySearchTrie();\n    trie.setMatchAlmostDiff(editDistance);\n    while (tfit.hasNext()) {\n      String key = tfit.next();\n      float freq = tfit.freq();\n      if (key.length() == 0) {\n        continue;\n      }\n      trie.put(key, new Float(freq));\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(TermFreqIterator tfit) throws IOException {\n    if (tfit instanceof SortedIterator) {\n      // make sure it's unsorted\n      tfit = new UnsortedTermFreqIteratorWrapper(tfit);\n    }\n    trie = new JaspellTernarySearchTrie();\n    trie.setMatchAlmostDiff(editDistance);\n    while (tfit.hasNext()) {\n      String key = tfit.next();\n      float freq = tfit.freq();\n      if (key.length() == 0) {\n        continue;\n      }\n      trie.put(key, new Float(freq));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#build(TermFreqIterator).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/jaspell/JaspellLookup#build(TermFreqIterator).mjava","sourceNew":"  @Override\n  public void build(TermFreqIterator tfit) throws IOException {\n    if (tfit instanceof SortedIterator) {\n      // make sure it's unsorted\n      tfit = new UnsortedTermFreqIteratorWrapper(tfit);\n    }\n    trie = new JaspellTernarySearchTrie();\n    trie.setMatchAlmostDiff(editDistance);\n    while (tfit.hasNext()) {\n      String key = tfit.next();\n      float freq = tfit.freq();\n      if (key.length() == 0) {\n        continue;\n      }\n      trie.put(key, new Float(freq));\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(TermFreqIterator tfit) throws IOException {\n    if (tfit instanceof SortedIterator) {\n      // make sure it's unsorted\n      tfit = new UnsortedTermFreqIteratorWrapper(tfit);\n    }\n    trie = new JaspellTernarySearchTrie();\n    trie.setMatchAlmostDiff(editDistance);\n    while (tfit.hasNext()) {\n      String key = tfit.next();\n      float freq = tfit.freq();\n      if (key.length() == 0) {\n        continue;\n      }\n      trie.put(key, new Float(freq));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#build(TermFreqIterator).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/jaspell/JaspellLookup#build(TermFreqIterator).mjava","sourceNew":"  @Override\n  public void build(TermFreqIterator tfit) throws IOException {\n    if (tfit instanceof SortedIterator) {\n      // make sure it's unsorted\n      tfit = new UnsortedTermFreqIteratorWrapper(tfit);\n    }\n    trie = new JaspellTernarySearchTrie();\n    trie.setMatchAlmostDiff(editDistance);\n    while (tfit.hasNext()) {\n      String key = tfit.next();\n      float freq = tfit.freq();\n      if (key.length() == 0) {\n        continue;\n      }\n      trie.put(key, new Float(freq));\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(TermFreqIterator tfit) throws IOException {\n    if (tfit instanceof SortedIterator) {\n      // make sure it's unsorted\n      tfit = new UnsortedTermFreqIteratorWrapper(tfit);\n    }\n    trie = new JaspellTernarySearchTrie();\n    trie.setMatchAlmostDiff(editDistance);\n    while (tfit.hasNext()) {\n      String key = tfit.next();\n      float freq = tfit.freq();\n      if (key.length() == 0) {\n        continue;\n      }\n      trie.put(key, new Float(freq));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d334a3e8e6b94298d8cf2802a403a096c06f0b92","date":1329766559,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#build(TermFreqIterator).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#build(TermFreqIterator).mjava","sourceNew":"  @Override\n  public void build(TermFreqIterator tfit) throws IOException {\n    if (tfit instanceof SortedIterator) {\n      // make sure it's unsorted\n      // WTF - this could result in yet another sorted iteration....\n      tfit = new UnsortedTermFreqIteratorWrapper(tfit);\n    }\n    trie = new JaspellTernarySearchTrie();\n    trie.setMatchAlmostDiff(editDistance);\n    BytesRef spare;\n    final CharsRef charsSpare = new CharsRef();\n\n    while ((spare = tfit.next()) != null) {\n      float freq = tfit.freq();\n      if (spare.length == 0) {\n        continue;\n      }\n      charsSpare.grow(spare.length);\n      UnicodeUtil.UTF8toUTF16(spare.bytes, spare.offset, spare.length, charsSpare);\n      trie.put(charsSpare.toString(), new Float(freq));\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(TermFreqIterator tfit) throws IOException {\n    if (tfit instanceof SortedIterator) {\n      // make sure it's unsorted\n      tfit = new UnsortedTermFreqIteratorWrapper(tfit);\n    }\n    trie = new JaspellTernarySearchTrie();\n    trie.setMatchAlmostDiff(editDistance);\n    while (tfit.hasNext()) {\n      String key = tfit.next();\n      float freq = tfit.freq();\n      if (key.length() == 0) {\n        continue;\n      }\n      trie.put(key, new Float(freq));\n    }\n  }\n\n","bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6ecc52400551de6a7d8daf646be839487911627c","date":1330076979,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#build(TermFreqIterator).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#build(TermFreqIterator).mjava","sourceNew":"  @Override\n  public void build(TermFreqIterator tfit) throws IOException {\n    if (tfit.getComparator() != null) {\n      // make sure it's unsorted\n      // WTF - this could result in yet another sorted iteration....\n      tfit = new UnsortedTermFreqIteratorWrapper(tfit);\n    }\n    trie = new JaspellTernarySearchTrie();\n    trie.setMatchAlmostDiff(editDistance);\n    BytesRef spare;\n    final CharsRef charsSpare = new CharsRef();\n\n    while ((spare = tfit.next()) != null) {\n      float freq = tfit.weight();\n      if (spare.length == 0) {\n        continue;\n      }\n      charsSpare.grow(spare.length);\n      UnicodeUtil.UTF8toUTF16(spare.bytes, spare.offset, spare.length, charsSpare);\n      trie.put(charsSpare.toString(), new Float(freq));\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(TermFreqIterator tfit) throws IOException {\n    if (tfit instanceof SortedIterator) {\n      // make sure it's unsorted\n      // WTF - this could result in yet another sorted iteration....\n      tfit = new UnsortedTermFreqIteratorWrapper(tfit);\n    }\n    trie = new JaspellTernarySearchTrie();\n    trie.setMatchAlmostDiff(editDistance);\n    BytesRef spare;\n    final CharsRef charsSpare = new CharsRef();\n\n    while ((spare = tfit.next()) != null) {\n      float freq = tfit.freq();\n      if (spare.length == 0) {\n        continue;\n      }\n      charsSpare.grow(spare.length);\n      UnicodeUtil.UTF8toUTF16(spare.bytes, spare.offset, spare.length, charsSpare);\n      trie.put(charsSpare.toString(), new Float(freq));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dc3c850c5222a1ce7d619563f67bf047a11b32b6","date":1330703995,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#build(TermFreqIterator).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#build(TermFreqIterator).mjava","sourceNew":"  @Override\n  public void build(TermFreqIterator tfit) throws IOException {\n    if (tfit.getComparator() != null) {\n      // make sure it's unsorted\n      // WTF - this could result in yet another sorted iteration....\n      tfit = new UnsortedTermFreqIteratorWrapper(tfit);\n    }\n    trie = new JaspellTernarySearchTrie();\n    trie.setMatchAlmostDiff(editDistance);\n    BytesRef spare;\n    final CharsRef charsSpare = new CharsRef();\n\n    while ((spare = tfit.next()) != null) {\n      final long weight = tfit.weight();\n      if (spare.length == 0) {\n        continue;\n      }\n      charsSpare.grow(spare.length);\n      UnicodeUtil.UTF8toUTF16(spare.bytes, spare.offset, spare.length, charsSpare);\n      trie.put(charsSpare.toString(), Long.valueOf(weight));\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(TermFreqIterator tfit) throws IOException {\n    if (tfit.getComparator() != null) {\n      // make sure it's unsorted\n      // WTF - this could result in yet another sorted iteration....\n      tfit = new UnsortedTermFreqIteratorWrapper(tfit);\n    }\n    trie = new JaspellTernarySearchTrie();\n    trie.setMatchAlmostDiff(editDistance);\n    BytesRef spare;\n    final CharsRef charsSpare = new CharsRef();\n\n    while ((spare = tfit.next()) != null) {\n      float freq = tfit.weight();\n      if (spare.length == 0) {\n        continue;\n      }\n      charsSpare.grow(spare.length);\n      UnicodeUtil.UTF8toUTF16(spare.bytes, spare.offset, spare.length, charsSpare);\n      trie.put(charsSpare.toString(), new Float(freq));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#build(TermFreqIterator).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#build(TermFreqIterator).mjava","sourceNew":"  @Override\n  public void build(TermFreqIterator tfit) throws IOException {\n    if (tfit.getComparator() != null) {\n      // make sure it's unsorted\n      // WTF - this could result in yet another sorted iteration....\n      tfit = new UnsortedTermFreqIteratorWrapper(tfit);\n    }\n    trie = new JaspellTernarySearchTrie();\n    trie.setMatchAlmostDiff(editDistance);\n    BytesRef spare;\n    final CharsRef charsSpare = new CharsRef();\n\n    while ((spare = tfit.next()) != null) {\n      final long weight = tfit.weight();\n      if (spare.length == 0) {\n        continue;\n      }\n      charsSpare.grow(spare.length);\n      UnicodeUtil.UTF8toUTF16(spare.bytes, spare.offset, spare.length, charsSpare);\n      trie.put(charsSpare.toString(), Long.valueOf(weight));\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(TermFreqIterator tfit) throws IOException {\n    if (tfit instanceof SortedIterator) {\n      // make sure it's unsorted\n      tfit = new UnsortedTermFreqIteratorWrapper(tfit);\n    }\n    trie = new JaspellTernarySearchTrie();\n    trie.setMatchAlmostDiff(editDistance);\n    while (tfit.hasNext()) {\n      String key = tfit.next();\n      float freq = tfit.freq();\n      if (key.length() == 0) {\n        continue;\n      }\n      trie.put(key, new Float(freq));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#build(TermFreqIterator).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#build(TermFreqIterator).mjava","sourceNew":"  @Override\n  public void build(TermFreqIterator tfit) throws IOException {\n    if (tfit.getComparator() != null) {\n      // make sure it's unsorted\n      // WTF - this could result in yet another sorted iteration....\n      tfit = new UnsortedTermFreqIteratorWrapper(tfit);\n    }\n    trie = new JaspellTernarySearchTrie();\n    trie.setMatchAlmostDiff(editDistance);\n    BytesRef spare;\n    final CharsRef charsSpare = new CharsRef();\n\n    while ((spare = tfit.next()) != null) {\n      final long weight = tfit.weight();\n      if (spare.length == 0) {\n        continue;\n      }\n      charsSpare.grow(spare.length);\n      UnicodeUtil.UTF8toUTF16(spare.bytes, spare.offset, spare.length, charsSpare);\n      trie.put(charsSpare.toString(), Long.valueOf(weight));\n    }\n  }\n\n","sourceOld":"  @Override\n  public void build(TermFreqIterator tfit) throws IOException {\n    if (tfit.getComparator() != null) {\n      // make sure it's unsorted\n      // WTF - this could result in yet another sorted iteration....\n      tfit = new UnsortedTermFreqIteratorWrapper(tfit);\n    }\n    trie = new JaspellTernarySearchTrie();\n    trie.setMatchAlmostDiff(editDistance);\n    BytesRef spare;\n    final CharsRef charsSpare = new CharsRef();\n\n    while ((spare = tfit.next()) != null) {\n      final long weight = tfit.weight();\n      if (spare.length == 0) {\n        continue;\n      }\n      charsSpare.grow(spare.length);\n      UnicodeUtil.UTF8toUTF16(spare.bytes, spare.offset, spare.length, charsSpare);\n      trie.put(charsSpare.toString(), Long.valueOf(weight));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["dc3c850c5222a1ce7d619563f67bf047a11b32b6"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["e230a61047bc041516c811baa08a7174d6f8322a","dc3c850c5222a1ce7d619563f67bf047a11b32b6"],"e230a61047bc041516c811baa08a7174d6f8322a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e230a61047bc041516c811baa08a7174d6f8322a"],"d334a3e8e6b94298d8cf2802a403a096c06f0b92":["e230a61047bc041516c811baa08a7174d6f8322a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6ecc52400551de6a7d8daf646be839487911627c":["d334a3e8e6b94298d8cf2802a403a096c06f0b92"],"dc3c850c5222a1ce7d619563f67bf047a11b32b6":["6ecc52400551de6a7d8daf646be839487911627c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e230a61047bc041516c811baa08a7174d6f8322a"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"e230a61047bc041516c811baa08a7174d6f8322a":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","d334a3e8e6b94298d8cf2802a403a096c06f0b92","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e230a61047bc041516c811baa08a7174d6f8322a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"d334a3e8e6b94298d8cf2802a403a096c06f0b92":["6ecc52400551de6a7d8daf646be839487911627c"],"6ecc52400551de6a7d8daf646be839487911627c":["dc3c850c5222a1ce7d619563f67bf047a11b32b6"],"dc3c850c5222a1ce7d619563f67bf047a11b32b6":["b89678825b68eccaf09e6ab71675fc0b0af1e099","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}