{"path":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheMBean#assertEntryListIncluded(boolean).mjava","commits":[{"id":"2b0bba9e104010e438d33cdb0c21121f83a8cc49","date":1459882900,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheMBean#assertEntryListIncluded(boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheMBean mbean = new SolrFieldCacheMBean();\n    NamedList stats = checkJmx ? mbean.getStatisticsForJmx() : mbean.getStatistics();\n    assert(new Integer(stats.get(\"entries_count\").toString()) > 0);\n    assertNotNull(stats.get(\"entry#0\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6284684320a9808c41a5e43de958b2da22f89bd","date":1459977490,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheMBean#assertEntryListIncluded(boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheMBean mbean = new SolrFieldCacheMBean();\n    NamedList stats = checkJmx ? mbean.getStatisticsForJmx() : mbean.getStatistics();\n    assert(new Integer(stats.get(\"entries_count\").toString()) > 0);\n    assertNotNull(stats.get(\"entry#0\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00b13034beb84b82cc24c8a8d0bbaf2a90e1ab0c","date":1481741546,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheMBean#assertEntryListIncluded(boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheMBean#assertEntryListIncluded(boolean).mjava","sourceNew":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheMBean mbean = new SolrFieldCacheMBean();\n    NamedList stats = checkJmx ? mbean.getStatisticsForJmx() : mbean.getStatistics();\n    assert(new Integer(stats.get(\"entries_count\").toString()) > 0);\n    assertNotNull(stats.get(\"total_size\"));\n    assertNotNull(stats.get(\"entry#0\"));\n  }\n\n","sourceOld":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheMBean mbean = new SolrFieldCacheMBean();\n    NamedList stats = checkJmx ? mbean.getStatisticsForJmx() : mbean.getStatistics();\n    assert(new Integer(stats.get(\"entries_count\").toString()) > 0);\n    assertNotNull(stats.get(\"entry#0\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheMBean#assertEntryListIncluded(boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheMBean#assertEntryListIncluded(boolean).mjava","sourceNew":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheMBean mbean = new SolrFieldCacheMBean();\n    NamedList stats = checkJmx ? mbean.getStatisticsForJmx() : mbean.getStatistics();\n    assert(new Integer(stats.get(\"entries_count\").toString()) > 0);\n    assertNotNull(stats.get(\"total_size\"));\n    assertNotNull(stats.get(\"entry#0\"));\n  }\n\n","sourceOld":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheMBean mbean = new SolrFieldCacheMBean();\n    NamedList stats = checkJmx ? mbean.getStatisticsForJmx() : mbean.getStatistics();\n    assert(new Integer(stats.get(\"entries_count\").toString()) > 0);\n    assertNotNull(stats.get(\"entry#0\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","date":1489572490,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheMBean#assertEntryListIncluded(boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheMBean#assertEntryListIncluded(boolean).mjava","sourceNew":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheMBean mbean = new SolrFieldCacheMBean();\n    NamedList stats = checkJmx ? mbean.getStatisticsForJmx() : mbean.getStatistics();\n    assert(Integer.parseInt(stats.get(\"entries_count\").toString()) > 0);\n    assertNotNull(stats.get(\"total_size\"));\n    assertNotNull(stats.get(\"entry#0\"));\n  }\n\n","sourceOld":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheMBean mbean = new SolrFieldCacheMBean();\n    NamedList stats = checkJmx ? mbean.getStatisticsForJmx() : mbean.getStatistics();\n    assert(new Integer(stats.get(\"entries_count\").toString()) > 0);\n    assertNotNull(stats.get(\"total_size\"));\n    assertNotNull(stats.get(\"entry#0\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55e0b3830b94d1abce4e32e98cfc875d5b14e76f","date":1489651910,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheMBean#assertEntryListIncluded(boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheMBean#assertEntryListIncluded(boolean).mjava","sourceNew":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheMBean mbean = new SolrFieldCacheMBean();\n    NamedList stats = checkJmx ? mbean.getStatisticsForJmx() : mbean.getStatistics();\n    assert(Integer.parseInt(stats.get(\"entries_count\").toString()) > 0);\n    assertNotNull(stats.get(\"total_size\"));\n    assertNotNull(stats.get(\"entry#0\"));\n  }\n\n","sourceOld":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheMBean mbean = new SolrFieldCacheMBean();\n    NamedList stats = checkJmx ? mbean.getStatisticsForJmx() : mbean.getStatistics();\n    assert(new Integer(stats.get(\"entries_count\").toString()) > 0);\n    assertNotNull(stats.get(\"total_size\"));\n    assertNotNull(stats.get(\"entry#0\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheMBean#assertEntryListIncluded(boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheMBean#assertEntryListIncluded(boolean).mjava","sourceNew":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheMBean mbean = new SolrFieldCacheMBean();\n    NamedList stats = checkJmx ? mbean.getStatisticsForJmx() : mbean.getStatistics();\n    assert(Integer.parseInt(stats.get(\"entries_count\").toString()) > 0);\n    assertNotNull(stats.get(\"total_size\"));\n    assertNotNull(stats.get(\"entry#0\"));\n  }\n\n","sourceOld":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheMBean mbean = new SolrFieldCacheMBean();\n    NamedList stats = checkJmx ? mbean.getStatisticsForJmx() : mbean.getStatistics();\n    assert(new Integer(stats.get(\"entries_count\").toString()) > 0);\n    assertNotNull(stats.get(\"total_size\"));\n    assertNotNull(stats.get(\"entry#0\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheMBean#assertEntryListIncluded(boolean).mjava","sourceNew":null,"sourceOld":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheMBean mbean = new SolrFieldCacheMBean();\n    NamedList stats = checkJmx ? mbean.getStatisticsForJmx() : mbean.getStatistics();\n    assert(Integer.parseInt(stats.get(\"entries_count\").toString()) > 0);\n    assertNotNull(stats.get(\"total_size\"));\n    assertNotNull(stats.get(\"entry#0\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrFieldCacheMBean#assertEntryListIncluded(boolean).mjava","sourceNew":null,"sourceOld":"  private void assertEntryListIncluded(boolean checkJmx) {\n    SolrFieldCacheMBean mbean = new SolrFieldCacheMBean();\n    NamedList stats = checkJmx ? mbean.getStatisticsForJmx() : mbean.getStatistics();\n    assert(Integer.parseInt(stats.get(\"entries_count\").toString()) > 0);\n    assertNotNull(stats.get(\"total_size\"));\n    assertNotNull(stats.get(\"entry#0\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["ab68488225b6a6c357dda72ed11dedca9914a192"],"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["00b13034beb84b82cc24c8a8d0bbaf2a90e1ab0c"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["00b13034beb84b82cc24c8a8d0bbaf2a90e1ab0c"],"b6284684320a9808c41a5e43de958b2da22f89bd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2b0bba9e104010e438d33cdb0c21121f83a8cc49"],"00b13034beb84b82cc24c8a8d0bbaf2a90e1ab0c":["b6284684320a9808c41a5e43de958b2da22f89bd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2b0bba9e104010e438d33cdb0c21121f83a8cc49":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9856095f7afb5a607bf5e65077615ed91273508c":["b6284684320a9808c41a5e43de958b2da22f89bd","00b13034beb84b82cc24c8a8d0bbaf2a90e1ab0c"],"ab68488225b6a6c357dda72ed11dedca9914a192":["00b13034beb84b82cc24c8a8d0bbaf2a90e1ab0c","55e0b3830b94d1abce4e32e98cfc875d5b14e76f"],"816521ebaad5add9cb96bb88c577394e2938c40b":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["816521ebaad5add9cb96bb88c577394e2938c40b"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"6c72a3aa9309c1f5ade9265cf083e565ae8d35b8":["816521ebaad5add9cb96bb88c577394e2938c40b"],"55e0b3830b94d1abce4e32e98cfc875d5b14e76f":["ab68488225b6a6c357dda72ed11dedca9914a192"],"b6284684320a9808c41a5e43de958b2da22f89bd":["00b13034beb84b82cc24c8a8d0bbaf2a90e1ab0c","9856095f7afb5a607bf5e65077615ed91273508c"],"00b13034beb84b82cc24c8a8d0bbaf2a90e1ab0c":["6c72a3aa9309c1f5ade9265cf083e565ae8d35b8","55e0b3830b94d1abce4e32e98cfc875d5b14e76f","9856095f7afb5a607bf5e65077615ed91273508c","ab68488225b6a6c357dda72ed11dedca9914a192"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b6284684320a9808c41a5e43de958b2da22f89bd","2b0bba9e104010e438d33cdb0c21121f83a8cc49"],"2b0bba9e104010e438d33cdb0c21121f83a8cc49":["b6284684320a9808c41a5e43de958b2da22f89bd"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"ab68488225b6a6c357dda72ed11dedca9914a192":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb"],"816521ebaad5add9cb96bb88c577394e2938c40b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}