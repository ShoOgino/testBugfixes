{"path":"src/java/org/apache/lucene/search/BooleanQuery#setMaxClauseCount(int).mjava","commits":[{"id":"e5d6060b779d74dbe5580c5bee8ed06ee001078c","date":1054245135,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery#setMaxClauseCount(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Set the maximum number of clauses permitted. */\n  public static void setMaxClauseCount(int maxClauseCount) {\n    BooleanQuery.maxClauseCount = maxClauseCount;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac9ff0e27894e752f7340817700f7c58aa5d5358","date":1121461413,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery#setMaxClauseCount(int).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery#setMaxClauseCount(int).mjava","sourceNew":"  /** Set the maximum number of clauses permitted per BooleanQuery.\n   * Default value is 1024.\n   * <p>TermQuery clauses are generated from for example prefix queries and\n   * fuzzy queries. Each TermQuery needs some buffer space during search,\n   * so this parameter indirectly controls the maximum buffer requirements for\n   * query search.\n   * <p>When this parameter becomes a bottleneck for a Query one can use a\n   * Filter. For example instead of a {@link RangeQuery} one can use a\n   * {@link RangeFilter}.\n   * <p>Normally the buffers are allocated by the JVM. When using for example\n   * {@link org.apache.lucene.store.MMapDirectory} the buffering is left to\n   * the operating system.\n   */\n  public static void setMaxClauseCount(int maxClauseCount) {\n    BooleanQuery.maxClauseCount = maxClauseCount;\n  }\n\n","sourceOld":"  /** Set the maximum number of clauses permitted. */\n  public static void setMaxClauseCount(int maxClauseCount) {\n    BooleanQuery.maxClauseCount = maxClauseCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34797524e51e99463cb8cd24d05224fd9a3f14d6","date":1131796655,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery#setMaxClauseCount(int).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery#setMaxClauseCount(int).mjava","sourceNew":"  /** Set the maximum number of clauses permitted per BooleanQuery.\n   * Default value is 1024.\n   * <p>TermQuery clauses are generated from for example prefix queries and\n   * fuzzy queries. Each TermQuery needs some buffer space during search,\n   * so this parameter indirectly controls the maximum buffer requirements for\n   * query search.\n   * <p>When this parameter becomes a bottleneck for a Query one can use a\n   * Filter. For example instead of a {@link RangeQuery} one can use a\n   * {@link RangeFilter}.\n   * <p>Normally the buffers are allocated by the JVM. When using for example\n   * {@link org.apache.lucene.store.MMapDirectory} the buffering is left to\n   * the operating system.\n   */\n  public static void setMaxClauseCount(int maxClauseCount) {\n    if (maxClauseCount < 1)\n      throw new IllegalArgumentException(\"maxClauseCount must be >= 1\");\n    BooleanQuery.maxClauseCount = maxClauseCount;\n  }\n\n","sourceOld":"  /** Set the maximum number of clauses permitted per BooleanQuery.\n   * Default value is 1024.\n   * <p>TermQuery clauses are generated from for example prefix queries and\n   * fuzzy queries. Each TermQuery needs some buffer space during search,\n   * so this parameter indirectly controls the maximum buffer requirements for\n   * query search.\n   * <p>When this parameter becomes a bottleneck for a Query one can use a\n   * Filter. For example instead of a {@link RangeQuery} one can use a\n   * {@link RangeFilter}.\n   * <p>Normally the buffers are allocated by the JVM. When using for example\n   * {@link org.apache.lucene.store.MMapDirectory} the buffering is left to\n   * the operating system.\n   */\n  public static void setMaxClauseCount(int maxClauseCount) {\n    BooleanQuery.maxClauseCount = maxClauseCount;\n  }\n\n","bugFix":null,"bugIntro":["ad158e4c28c7c33b7d3fd5c187a183d014d1f6ea"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0f612096ab5275c4821d05f126bf45a89f4782b8","date":1246738452,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery#setMaxClauseCount(int).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery#setMaxClauseCount(int).mjava","sourceNew":"  /** Set the maximum number of clauses permitted per BooleanQuery.\n   * Default value is 1024.\n   * <p>TermQuery clauses are generated from for example prefix queries and\n   * fuzzy queries. Each TermQuery needs some buffer space during search,\n   * so this parameter indirectly controls the maximum buffer requirements for\n   * query search.\n   * <p>When this parameter becomes a bottleneck for a Query one can use a\n   * Filter. For example instead of a {@link TermRangeQuery} one can use a\n   * {@link TermRangeFilter}.\n   * <p>Normally the buffers are allocated by the JVM. When using for example\n   * {@link org.apache.lucene.store.MMapDirectory} the buffering is left to\n   * the operating system.\n   */\n  public static void setMaxClauseCount(int maxClauseCount) {\n    if (maxClauseCount < 1)\n      throw new IllegalArgumentException(\"maxClauseCount must be >= 1\");\n    BooleanQuery.maxClauseCount = maxClauseCount;\n  }\n\n","sourceOld":"  /** Set the maximum number of clauses permitted per BooleanQuery.\n   * Default value is 1024.\n   * <p>TermQuery clauses are generated from for example prefix queries and\n   * fuzzy queries. Each TermQuery needs some buffer space during search,\n   * so this parameter indirectly controls the maximum buffer requirements for\n   * query search.\n   * <p>When this parameter becomes a bottleneck for a Query one can use a\n   * Filter. For example instead of a {@link RangeQuery} one can use a\n   * {@link RangeFilter}.\n   * <p>Normally the buffers are allocated by the JVM. When using for example\n   * {@link org.apache.lucene.store.MMapDirectory} the buffering is left to\n   * the operating system.\n   */\n  public static void setMaxClauseCount(int maxClauseCount) {\n    if (maxClauseCount < 1)\n      throw new IllegalArgumentException(\"maxClauseCount must be >= 1\");\n    BooleanQuery.maxClauseCount = maxClauseCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0ffa3c438f12f88babc940a1519f457ef5cc9805","date":1251336735,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanQuery#setMaxClauseCount(int).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery#setMaxClauseCount(int).mjava","sourceNew":"  /** \n   * Set the maximum number of clauses permitted per BooleanQuery.\n   * Default value is 1024.\n   */\n  public static void setMaxClauseCount(int maxClauseCount) {\n    if (maxClauseCount < 1)\n      throw new IllegalArgumentException(\"maxClauseCount must be >= 1\");\n    BooleanQuery.maxClauseCount = maxClauseCount;\n  }\n\n","sourceOld":"  /** Set the maximum number of clauses permitted per BooleanQuery.\n   * Default value is 1024.\n   * <p>TermQuery clauses are generated from for example prefix queries and\n   * fuzzy queries. Each TermQuery needs some buffer space during search,\n   * so this parameter indirectly controls the maximum buffer requirements for\n   * query search.\n   * <p>When this parameter becomes a bottleneck for a Query one can use a\n   * Filter. For example instead of a {@link TermRangeQuery} one can use a\n   * {@link TermRangeFilter}.\n   * <p>Normally the buffers are allocated by the JVM. When using for example\n   * {@link org.apache.lucene.store.MMapDirectory} the buffering is left to\n   * the operating system.\n   */\n  public static void setMaxClauseCount(int maxClauseCount) {\n    if (maxClauseCount < 1)\n      throw new IllegalArgumentException(\"maxClauseCount must be >= 1\");\n    BooleanQuery.maxClauseCount = maxClauseCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanQuery#setMaxClauseCount(int).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanQuery#setMaxClauseCount(int).mjava","sourceNew":"  /** \n   * Set the maximum number of clauses permitted per BooleanQuery.\n   * Default value is 1024.\n   */\n  public static void setMaxClauseCount(int maxClauseCount) {\n    if (maxClauseCount < 1)\n      throw new IllegalArgumentException(\"maxClauseCount must be >= 1\");\n    BooleanQuery.maxClauseCount = maxClauseCount;\n  }\n\n","sourceOld":"  /** \n   * Set the maximum number of clauses permitted per BooleanQuery.\n   * Default value is 1024.\n   */\n  public static void setMaxClauseCount(int maxClauseCount) {\n    if (maxClauseCount < 1)\n      throw new IllegalArgumentException(\"maxClauseCount must be >= 1\");\n    BooleanQuery.maxClauseCount = maxClauseCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ac9ff0e27894e752f7340817700f7c58aa5d5358":["e5d6060b779d74dbe5580c5bee8ed06ee001078c"],"0f612096ab5275c4821d05f126bf45a89f4782b8":["34797524e51e99463cb8cd24d05224fd9a3f14d6"],"0ffa3c438f12f88babc940a1519f457ef5cc9805":["0f612096ab5275c4821d05f126bf45a89f4782b8"],"e5d6060b779d74dbe5580c5bee8ed06ee001078c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0ffa3c438f12f88babc940a1519f457ef5cc9805"],"34797524e51e99463cb8cd24d05224fd9a3f14d6":["ac9ff0e27894e752f7340817700f7c58aa5d5358"]},"commit2Childs":{"ac9ff0e27894e752f7340817700f7c58aa5d5358":["34797524e51e99463cb8cd24d05224fd9a3f14d6"],"0f612096ab5275c4821d05f126bf45a89f4782b8":["0ffa3c438f12f88babc940a1519f457ef5cc9805"],"e5d6060b779d74dbe5580c5bee8ed06ee001078c":["ac9ff0e27894e752f7340817700f7c58aa5d5358"],"0ffa3c438f12f88babc940a1519f457ef5cc9805":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e5d6060b779d74dbe5580c5bee8ed06ee001078c"],"34797524e51e99463cb8cd24d05224fd9a3f14d6":["0f612096ab5275c4821d05f126bf45a89f4782b8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}