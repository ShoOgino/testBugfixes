{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#testOffsetChange2().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#testOffsetChange2().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#testOffsetChange2().mjava","sourceNew":"  @Test\n  public void testOffsetChange2() throws Exception\n  {\n    WordDelimiterFilter wdf = new WordDelimiterFilter(\n      new SingleTokenTokenStream(new Token(\"(übelkeit\", 7, 17)),\n      1,1,0,0,1,1,0\n    );\n    \n    assertTokenStreamContents(wdf,\n        new String[] { \"übelkeit\" },\n        new int[] { 8 },\n        new int[] { 17 });\n  }\n\n","sourceOld":"  @Test\n  public void testOffsetChange2() throws Exception\n  {\n    WordDelimiterFilter wdf = new WordDelimiterFilter(\n      new SingleTokenTokenStream(new Token(\"(übelkeit\", 7, 17)),\n      1,1,0,0,1,1,0\n    );\n    \n    assertTokenStreamContents(wdf,\n        new String[] { \"übelkeit\" },\n        new int[] { 8 },\n        new int[] { 17 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#testOffsetChange2().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#testOffsetChange2().mjava","sourceNew":"  @Test\n  public void testOffsetChange2() throws Exception\n  {\n    WordDelimiterFilter wdf = new WordDelimiterFilter(new SingleTokenTokenStream(new Token(\"(übelkeit\", 7, 17)), WordDelimiterIterator.DEFAULT_WORD_DELIM_TABLE, 1, 1, 0, 0, 1, 1, 0, 1, 1, null);\n    \n    assertTokenStreamContents(wdf,\n        new String[] { \"übelkeit\" },\n        new int[] { 8 },\n        new int[] { 17 });\n  }\n\n","sourceOld":"  @Test\n  public void testOffsetChange2() throws Exception\n  {\n    WordDelimiterFilter wdf = new WordDelimiterFilter(\n      new SingleTokenTokenStream(new Token(\"(übelkeit\", 7, 17)),\n      1,1,0,0,1,1,0\n    );\n    \n    assertTokenStreamContents(wdf,\n        new String[] { \"übelkeit\" },\n        new int[] { 8 },\n        new int[] { 17 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#testOffsetChange2().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#testOffsetChange2().mjava","sourceNew":"  @Test\n  public void testOffsetChange2() throws Exception\n  {\n    WordDelimiterFilter wdf = new WordDelimiterFilter(new SingleTokenTokenStream(new Token(\"(übelkeit\", 7, 17)), WordDelimiterIterator.DEFAULT_WORD_DELIM_TABLE, 1, 1, 0, 0, 1, 1, 0, 1, 1, null);\n    \n    assertTokenStreamContents(wdf,\n        new String[] { \"übelkeit\" },\n        new int[] { 8 },\n        new int[] { 17 });\n  }\n\n","sourceOld":"  @Test\n  public void testOffsetChange2() throws Exception\n  {\n    WordDelimiterFilter wdf = new WordDelimiterFilter(\n      new SingleTokenTokenStream(new Token(\"(übelkeit\", 7, 17)),\n      1,1,0,0,1,1,0\n    );\n    \n    assertTokenStreamContents(wdf,\n        new String[] { \"übelkeit\" },\n        new int[] { 8 },\n        new int[] { 17 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#testOffsetChange2().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#testOffsetChange2().mjava","sourceNew":"  @Test\n  public void testOffsetChange2() throws Exception\n  {\n    WordDelimiterFilter wdf = new WordDelimiterFilter(new SingleTokenTokenStream(new Token(\"(übelkeit\", 7, 17)), WordDelimiterIterator.DEFAULT_WORD_DELIM_TABLE, 1, 1, 0, 0, 1, 1, 0, 1, 1, null);\n    \n    assertTokenStreamContents(wdf,\n        new String[] { \"übelkeit\" },\n        new int[] { 8 },\n        new int[] { 17 });\n  }\n\n","sourceOld":"  @Test\n  public void testOffsetChange2() throws Exception\n  {\n    WordDelimiterFilter wdf = new WordDelimiterFilter(\n      new SingleTokenTokenStream(new Token(\"(übelkeit\", 7, 17)),\n      1,1,0,0,1,1,0\n    );\n    \n    assertTokenStreamContents(wdf,\n        new String[] { \"übelkeit\" },\n        new int[] { 8 },\n        new int[] { 17 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec1acb945fb5751735f5c9482576c8760d97b6ab","date":1315370590,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#testOffsetChange2().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#testOffsetChange2().mjava","sourceNew":"  @Test\n  public void testOffsetChange2() throws Exception {\n    int flags = GENERATE_WORD_PARTS | GENERATE_NUMBER_PARTS | CATENATE_ALL | SPLIT_ON_CASE_CHANGE | SPLIT_ON_NUMERICS | STEM_ENGLISH_POSSESSIVE;\n    WordDelimiterFilter wdf = new WordDelimiterFilter(new SingleTokenTokenStream(new Token(\"(übelkeit\", 7, 17)), DEFAULT_WORD_DELIM_TABLE, flags, null);\n    \n    assertTokenStreamContents(wdf,\n        new String[] { \"übelkeit\" },\n        new int[] { 8 },\n        new int[] { 17 });\n  }\n\n","sourceOld":"  @Test\n  public void testOffsetChange2() throws Exception\n  {\n    WordDelimiterFilter wdf = new WordDelimiterFilter(new SingleTokenTokenStream(new Token(\"(übelkeit\", 7, 17)), WordDelimiterIterator.DEFAULT_WORD_DELIM_TABLE, 1, 1, 0, 0, 1, 1, 0, 1, 1, null);\n    \n    assertTokenStreamContents(wdf,\n        new String[] { \"übelkeit\" },\n        new int[] { 8 },\n        new int[] { 17 });\n  }\n\n","bugFix":null,"bugIntro":["c85fa43e6918808743daa7847ba0264373af687f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#testOffsetChange2().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#testOffsetChange2().mjava","sourceNew":"  @Test\n  public void testOffsetChange2() throws Exception {\n    int flags = GENERATE_WORD_PARTS | GENERATE_NUMBER_PARTS | CATENATE_ALL | SPLIT_ON_CASE_CHANGE | SPLIT_ON_NUMERICS | STEM_ENGLISH_POSSESSIVE;\n    WordDelimiterFilter wdf = new WordDelimiterFilter(new SingleTokenTokenStream(new Token(\"(übelkeit\", 7, 17)), DEFAULT_WORD_DELIM_TABLE, flags, null);\n    \n    assertTokenStreamContents(wdf,\n        new String[] { \"übelkeit\" },\n        new int[] { 8 },\n        new int[] { 17 });\n  }\n\n","sourceOld":"  @Test\n  public void testOffsetChange2() throws Exception {\n    int flags = GENERATE_WORD_PARTS | GENERATE_NUMBER_PARTS | CATENATE_ALL | SPLIT_ON_CASE_CHANGE | SPLIT_ON_NUMERICS | STEM_ENGLISH_POSSESSIVE;\n    WordDelimiterFilter wdf = new WordDelimiterFilter(new SingleTokenTokenStream(new Token(\"(übelkeit\", 7, 17)), DEFAULT_WORD_DELIM_TABLE, flags, null);\n    \n    assertTokenStreamContents(wdf,\n        new String[] { \"übelkeit\" },\n        new int[] { 8 },\n        new int[] { 17 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ec1acb945fb5751735f5c9482576c8760d97b6ab"],"ec1acb945fb5751735f5c9482576c8760d97b6ab":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["0f080986da691a3bba7b757f43ab72cdc82b57ce","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"3bb13258feba31ab676502787ab2e1779f129b7a":["0f080986da691a3bba7b757f43ab72cdc82b57ce","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["0f080986da691a3bba7b757f43ab72cdc82b57ce"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ec1acb945fb5751735f5c9482576c8760d97b6ab":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["ec1acb945fb5751735f5c9482576c8760d97b6ab","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}