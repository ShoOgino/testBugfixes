{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#validateMergeReader(CodecReader).mjava","commits":[{"id":"31741cf1390044e38a2ec3127cf302ba841bfd75","date":1491292636,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#validateMergeReader(CodecReader).mjava","pathOld":"/dev/null","sourceNew":"  private void validateMergeReader(CodecReader leaf) {\n    LeafMetaData segmentMeta = leaf.getMetaData();\n    if (segmentInfos.getIndexCreatedVersionMajor() != segmentMeta.getCreatedVersionMajor()) {\n      throw new IllegalArgumentException(\"Cannot merge a segment that has been created with major version \"\n          + segmentMeta.getCreatedVersionMajor() + \" into this index which has been created by major version \"\n          + segmentInfos.getIndexCreatedVersionMajor());\n    }\n\n    if (segmentInfos.getIndexCreatedVersionMajor() >= 7 && segmentMeta.getMinVersion() == null) {\n      throw new IllegalStateException(\"Indexes created on or after Lucene 7 must record the created version major, but \" + leaf + \" hides it\");\n    }\n\n    Sort leafIndexSort = segmentMeta.getSort();\n    if (config.getIndexSort() != null && leafIndexSort != null\n        && config.getIndexSort().equals(leafIndexSort) == false) {\n      throw new IllegalArgumentException(\"cannot change index sort from \" + leafIndexSort + \" to \" + config.getIndexSort());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92212fd254551a0b1156aafc3a1a6ed1a43932ad","date":1491296431,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#validateMergeReader(CodecReader).mjava","pathOld":"/dev/null","sourceNew":"  private void validateMergeReader(CodecReader leaf) {\n    LeafMetaData segmentMeta = leaf.getMetaData();\n    if (segmentInfos.getIndexCreatedVersionMajor() != segmentMeta.getCreatedVersionMajor()) {\n      throw new IllegalArgumentException(\"Cannot merge a segment that has been created with major version \"\n          + segmentMeta.getCreatedVersionMajor() + \" into this index which has been created by major version \"\n          + segmentInfos.getIndexCreatedVersionMajor());\n    }\n\n    if (segmentInfos.getIndexCreatedVersionMajor() >= 7 && segmentMeta.getMinVersion() == null) {\n      throw new IllegalStateException(\"Indexes created on or after Lucene 7 must record the created version major, but \" + leaf + \" hides it\");\n    }\n\n    Sort leafIndexSort = segmentMeta.getSort();\n    if (config.getIndexSort() != null && leafIndexSort != null\n        && config.getIndexSort().equals(leafIndexSort) == false) {\n      throw new IllegalArgumentException(\"cannot change index sort from \" + leafIndexSort + \" to \" + config.getIndexSort());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e22133c22c69a013e8c3c14bb986e7848c7296e","date":1537859647,"type":3,"author":"Jim Ferenczi","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#validateMergeReader(CodecReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#validateMergeReader(CodecReader).mjava","sourceNew":"  private void validateMergeReader(CodecReader leaf) {\n    LeafMetaData segmentMeta = leaf.getMetaData();\n    if (segmentInfos.getIndexCreatedVersionMajor() != segmentMeta.getCreatedVersionMajor()) {\n      throw new IllegalArgumentException(\"Cannot merge a segment that has been created with major version \"\n          + segmentMeta.getCreatedVersionMajor() + \" into this index which has been created by major version \"\n          + segmentInfos.getIndexCreatedVersionMajor());\n    }\n\n    if (segmentInfos.getIndexCreatedVersionMajor() >= 7 && segmentMeta.getMinVersion() == null) {\n      throw new IllegalStateException(\"Indexes created on or after Lucene 7 must record the created version major, but \" + leaf + \" hides it\");\n    }\n\n    Sort leafIndexSort = segmentMeta.getSort();\n    if (config.getIndexSort() != null &&\n          (leafIndexSort == null || isCongruentSort(config.getIndexSort(), leafIndexSort) == false)) {\n      throw new IllegalArgumentException(\"cannot change index sort from \" + leafIndexSort + \" to \" + config.getIndexSort());\n    }\n  }\n\n","sourceOld":"  private void validateMergeReader(CodecReader leaf) {\n    LeafMetaData segmentMeta = leaf.getMetaData();\n    if (segmentInfos.getIndexCreatedVersionMajor() != segmentMeta.getCreatedVersionMajor()) {\n      throw new IllegalArgumentException(\"Cannot merge a segment that has been created with major version \"\n          + segmentMeta.getCreatedVersionMajor() + \" into this index which has been created by major version \"\n          + segmentInfos.getIndexCreatedVersionMajor());\n    }\n\n    if (segmentInfos.getIndexCreatedVersionMajor() >= 7 && segmentMeta.getMinVersion() == null) {\n      throw new IllegalStateException(\"Indexes created on or after Lucene 7 must record the created version major, but \" + leaf + \" hides it\");\n    }\n\n    Sort leafIndexSort = segmentMeta.getSort();\n    if (config.getIndexSort() != null && leafIndexSort != null\n        && config.getIndexSort().equals(leafIndexSort) == false) {\n      throw new IllegalArgumentException(\"cannot change index sort from \" + leafIndexSort + \" to \" + config.getIndexSort());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6e22133c22c69a013e8c3c14bb986e7848c7296e":["31741cf1390044e38a2ec3127cf302ba841bfd75"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6e22133c22c69a013e8c3c14bb986e7848c7296e"],"31741cf1390044e38a2ec3127cf302ba841bfd75":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6e22133c22c69a013e8c3c14bb986e7848c7296e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["92212fd254551a0b1156aafc3a1a6ed1a43932ad","31741cf1390044e38a2ec3127cf302ba841bfd75"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":[],"31741cf1390044e38a2ec3127cf302ba841bfd75":["6e22133c22c69a013e8c3c14bb986e7848c7296e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["92212fd254551a0b1156aafc3a1a6ed1a43932ad","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}