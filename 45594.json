{"path":"lucene/core/src/test/org/apache/lucene/index/TestMergeRateLimiter#testInitDefaults().mjava","commits":[{"id":"25a4e90766dbbec3fc8ead1763d12a0b7f2f28d2","date":1421139739,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMergeRateLimiter#testInitDefaults().mjava","pathOld":"/dev/null","sourceNew":"  public void testInitDefaults() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.addDocument(new Document());\n    w.close();\n    MergePolicy.OneMerge merge = new MergePolicy.OneMerge(SegmentInfos.readLatestCommit(dir).asList());\n    MergeRateLimiter rateLimiter = new MergeRateLimiter(merge);\n    assertEquals(Double.POSITIVE_INFINITY, rateLimiter.getMBPerSec(), 0.0);\n    assertTrue(rateLimiter.getMinPauseCheckBytes() > 0);\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1ee9437ba5a8297220428d48a6bb823d1fcd57b","date":1489137809,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMergeRateLimiter#testInitDefaults().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestMergeRateLimiter#testInitDefaults().mjava","sourceNew":"  public void testInitDefaults() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.addDocument(new Document());\n    w.close();\n\n    MergeRateLimiter rateLimiter = new MergeRateLimiter(new MergePolicy.OneMergeProgress());\n    assertEquals(Double.POSITIVE_INFINITY, rateLimiter.getMBPerSec(), 0.0);\n    assertTrue(rateLimiter.getMinPauseCheckBytes() > 0);\n    dir.close();\n  }\n\n","sourceOld":"  public void testInitDefaults() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.addDocument(new Document());\n    w.close();\n    MergePolicy.OneMerge merge = new MergePolicy.OneMerge(SegmentInfos.readLatestCommit(dir).asList());\n    MergeRateLimiter rateLimiter = new MergeRateLimiter(merge);\n    assertEquals(Double.POSITIVE_INFINITY, rateLimiter.getMBPerSec(), 0.0);\n    assertTrue(rateLimiter.getMinPauseCheckBytes() > 0);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"25a4e90766dbbec3fc8ead1763d12a0b7f2f28d2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c1ee9437ba5a8297220428d48a6bb823d1fcd57b":["25a4e90766dbbec3fc8ead1763d12a0b7f2f28d2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c1ee9437ba5a8297220428d48a6bb823d1fcd57b"]},"commit2Childs":{"25a4e90766dbbec3fc8ead1763d12a0b7f2f28d2":["c1ee9437ba5a8297220428d48a6bb823d1fcd57b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["25a4e90766dbbec3fc8ead1763d12a0b7f2f28d2"],"c1ee9437ba5a8297220428d48a6bb823d1fcd57b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}