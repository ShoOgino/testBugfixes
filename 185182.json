{"path":"lucene/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","commits":[{"id":"8b241ea5e635d896cc0af83cd96ffd0322e0aba7","date":1294226200,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Searcher#search(Query,Filter,int).mjava","sourceNew":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createWeight(query), filter, n);\n  }\n\n","sourceOld":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createWeight(query), filter, n);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Searcher#search(Query,Filter,int).mjava","sourceNew":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createWeight(query), filter, n);\n  }\n\n","sourceOld":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createWeight(query), filter, n);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Searcher#search(Query,Filter,int).mjava","sourceNew":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createWeight(query), filter, n);\n  }\n\n","sourceOld":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createWeight(query), filter, n);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f7fee42303a18cc146043c96f66491311b345d9","date":1308246904,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","sourceNew":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createNormalizedWeight(query), filter, n);\n  }\n\n","sourceOld":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createWeight(query), filter, n);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","date":1308291005,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","sourceNew":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createNormalizedWeight(query), filter, n);\n  }\n\n","sourceOld":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createWeight(query), filter, n);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c36f7a2dc9a2d9c7cff5a1e07a7e7f5ef93e6d15","date":1316561169,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","sourceNew":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createNormalizedWeight(query), filter, null, n);\n  }\n\n","sourceOld":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createNormalizedWeight(query), filter, n);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6620df8541b174097b1133a4fc370adb2e570524","date":1319544675,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","sourceNew":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createNormalizedWeight(wrapFilter(query, filter)), null, n);\n  }\n\n","sourceOld":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createNormalizedWeight(query), filter, null, n);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#search(Query,Filter,int).mjava","sourceNew":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createNormalizedWeight(wrapFilter(query, filter)), null, n);\n  }\n\n","sourceOld":"  /** Finds the top <code>n</code>\n   * hits for <code>query</code>, applying <code>filter</code> if non-null.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopDocs search(Query query, Filter filter, int n)\n    throws IOException {\n    return search(createNormalizedWeight(wrapFilter(query, filter)), null, n);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c36f7a2dc9a2d9c7cff5a1e07a7e7f5ef93e6d15":["6f7fee42303a18cc146043c96f66491311b345d9"],"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b":["8b241ea5e635d896cc0af83cd96ffd0322e0aba7","6f7fee42303a18cc146043c96f66491311b345d9"],"6f7fee42303a18cc146043c96f66491311b345d9":["8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"6620df8541b174097b1133a4fc370adb2e570524":["c36f7a2dc9a2d9c7cff5a1e07a7e7f5ef93e6d15"],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["6620df8541b174097b1133a4fc370adb2e570524"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"c36f7a2dc9a2d9c7cff5a1e07a7e7f5ef93e6d15":["6620df8541b174097b1133a4fc370adb2e570524"],"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b":[],"6f7fee42303a18cc146043c96f66491311b345d9":["c36f7a2dc9a2d9c7cff5a1e07a7e7f5ef93e6d15","0a2903ea38ae3e636b93a08c52a5e37ae939cf6b"],"70ad682703b8585f5d0a637efec044d57ec05efb":[],"6620df8541b174097b1133a4fc370adb2e570524":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","6f7fee42303a18cc146043c96f66491311b345d9","70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","8b241ea5e635d896cc0af83cd96ffd0322e0aba7","868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}