{"path":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleAliasAction(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleAliasAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleAliasAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handle \"ALIAS\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   */\n  @Deprecated\n  protected boolean handleAliasAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n\n    String name = params.get(CoreAdminParams.OTHER);\n    String cname = params.get(CoreAdminParams.CORE);\n    boolean doPersist = false;\n    if (cname.equals(name)) return doPersist;\n\n    SolrCore core = coreContainer.getCore(cname);\n    if (core != null) {\n      doPersist = coreContainer.isPersistent();\n      coreContainer.register(name, core, false);\n      // no core.close() since each entry in the cores map should increase the ref\n    }\n    return doPersist;\n  }\n\n","sourceOld":"  /**\n   * Handle \"ALIAS\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   */\n  @Deprecated\n  protected boolean handleAliasAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n\n    String name = params.get(CoreAdminParams.OTHER);\n    String cname = params.get(CoreAdminParams.CORE);\n    boolean doPersist = false;\n    if (cname.equals(name)) return doPersist;\n\n    SolrCore core = coreContainer.getCore(cname);\n    if (core != null) {\n      doPersist = coreContainer.isPersistent();\n      coreContainer.register(name, core, false);\n      // no core.close() since each entry in the cores map should increase the ref\n    }\n    return doPersist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleAliasAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleAliasAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handle \"ALIAS\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   */\n  @Deprecated\n  protected boolean handleAliasAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n\n    String name = params.get(CoreAdminParams.OTHER);\n    String cname = params.get(CoreAdminParams.CORE);\n    boolean doPersist = false;\n    if (cname.equals(name)) return doPersist;\n\n    SolrCore core = coreContainer.getCore(cname);\n    if (core != null) {\n      doPersist = coreContainer.isPersistent();\n      coreContainer.register(name, core, false);\n      // no core.close() since each entry in the cores map should increase the ref\n    }\n    return doPersist;\n  }\n\n","sourceOld":"  /**\n   * Handle \"ALIAS\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   */\n  @Deprecated\n  protected boolean handleAliasAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n\n    String name = params.get(CoreAdminParams.OTHER);\n    String cname = params.get(CoreAdminParams.CORE);\n    boolean doPersist = false;\n    if (cname.equals(name)) return doPersist;\n\n    SolrCore core = coreContainer.getCore(cname);\n    if (core != null) {\n      doPersist = coreContainer.isPersistent();\n      coreContainer.register(name, core, false);\n      // no core.close() since each entry in the cores map should increase the ref\n    }\n    return doPersist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleAliasAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleAliasAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handle \"ALIAS\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   */\n  @Deprecated\n  protected boolean handleAliasAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n\n    String name = params.get(CoreAdminParams.OTHER);\n    String cname = params.get(CoreAdminParams.CORE);\n    boolean doPersist = false;\n    if (cname.equals(name)) return doPersist;\n\n    SolrCore core = coreContainer.getCore(cname);\n    if (core != null) {\n      doPersist = coreContainer.isPersistent();\n      coreContainer.register(name, core, false);\n      // no core.close() since each entry in the cores map should increase the ref\n    }\n    return doPersist;\n  }\n\n","sourceOld":"  /**\n   * Handle \"ALIAS\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   */\n  @Deprecated\n  protected boolean handleAliasAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n\n    String name = params.get(CoreAdminParams.OTHER);\n    String cname = params.get(CoreAdminParams.CORE);\n    boolean doPersist = false;\n    if (cname.equals(name)) return doPersist;\n\n    SolrCore core = coreContainer.getCore(cname);\n    if (core != null) {\n      doPersist = coreContainer.isPersistent();\n      coreContainer.register(name, core, false);\n      // no core.close() since each entry in the cores map should increase the ref\n    }\n    return doPersist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleAliasAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleAliasAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handle \"ALIAS\" action\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   */\n  @Deprecated\n  protected boolean handleAliasAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n\n    String name = params.get(CoreAdminParams.OTHER);\n    String cname = params.get(CoreAdminParams.CORE);\n    boolean doPersist = false;\n    if (cname.equals(name)) return doPersist;\n\n    SolrCore core = coreContainer.getCore(cname);\n    if (core != null) {\n      doPersist = coreContainer.isPersistent();\n      coreContainer.register(name, core, false);\n      // no core.close() since each entry in the cores map should increase the ref\n    }\n    return doPersist;\n  }\n\n","sourceOld":"  /**\n   * Handle \"ALIAS\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   */\n  @Deprecated\n  protected boolean handleAliasAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n\n    String name = params.get(CoreAdminParams.OTHER);\n    String cname = params.get(CoreAdminParams.CORE);\n    boolean doPersist = false;\n    if (cname.equals(name)) return doPersist;\n\n    SolrCore core = coreContainer.getCore(cname);\n    if (core != null) {\n      doPersist = coreContainer.isPersistent();\n      coreContainer.register(name, core, false);\n      // no core.close() since each entry in the cores map should increase the ref\n    }\n    return doPersist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleAliasAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleAliasAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handle \"ALIAS\" action\n   */\n  @Deprecated\n  protected void handleAliasAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n\n    String name = params.get(CoreAdminParams.OTHER);\n    String cname = params.get(CoreAdminParams.CORE);\n    boolean doPersist = false;\n    if (cname.equals(name)) return;\n\n    SolrCore core = coreContainer.getCore(cname);\n    if (core != null) {\n      doPersist = coreContainer.isPersistent();\n      coreContainer.register(name, core, false);\n      // no core.close() since each entry in the cores map should increase the ref\n    }\n    return;\n  }\n\n","sourceOld":"  /**\n   * Handle \"ALIAS\" action\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   */\n  @Deprecated\n  protected boolean handleAliasAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n\n    String name = params.get(CoreAdminParams.OTHER);\n    String cname = params.get(CoreAdminParams.CORE);\n    boolean doPersist = false;\n    if (cname.equals(name)) return doPersist;\n\n    SolrCore core = coreContainer.getCore(cname);\n    if (core != null) {\n      doPersist = coreContainer.isPersistent();\n      coreContainer.register(name, core, false);\n      // no core.close() since each entry in the cores map should increase the ref\n    }\n    return doPersist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleAliasAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleAliasAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handle \"ALIAS\" action\n   */\n  @Deprecated\n  protected void handleAliasAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n\n    String name = params.get(CoreAdminParams.OTHER);\n    String cname = params.get(CoreAdminParams.CORE);\n    boolean doPersist = false;\n    if (cname.equals(name)) return;\n\n    SolrCore core = coreContainer.getCore(cname);\n    if (core != null) {\n      doPersist = coreContainer.isPersistent();\n      coreContainer.register(name, core, false);\n      // no core.close() since each entry in the cores map should increase the ref\n    }\n    return;\n  }\n\n","sourceOld":"  /**\n   * Handle \"ALIAS\" action\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   */\n  @Deprecated\n  protected boolean handleAliasAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n\n    String name = params.get(CoreAdminParams.OTHER);\n    String cname = params.get(CoreAdminParams.CORE);\n    boolean doPersist = false;\n    if (cname.equals(name)) return doPersist;\n\n    SolrCore core = coreContainer.getCore(cname);\n    if (core != null) {\n      doPersist = coreContainer.isPersistent();\n      coreContainer.register(name, core, false);\n      // no core.close() since each entry in the cores map should increase the ref\n    }\n    return doPersist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60b3af235eb1c55956ccebd3bd282279702b9c64","date":1402910243,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleAliasAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":null,"sourceOld":"  /**\n   * Handle \"ALIAS\" action\n   */\n  @Deprecated\n  protected void handleAliasAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n\n    String name = params.get(CoreAdminParams.OTHER);\n    String cname = params.get(CoreAdminParams.CORE);\n    boolean doPersist = false;\n    if (cname.equals(name)) return;\n\n    SolrCore core = coreContainer.getCore(cname);\n    if (core != null) {\n      doPersist = coreContainer.isPersistent();\n      coreContainer.register(name, core, false);\n      // no core.close() since each entry in the cores map should increase the ref\n    }\n    return;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleAliasAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":null,"sourceOld":"  /**\n   * Handle \"ALIAS\" action\n   */\n  @Deprecated\n  protected void handleAliasAction(SolrQueryRequest req, SolrQueryResponse rsp) {\n    SolrParams params = req.getParams();\n\n    String name = params.get(CoreAdminParams.OTHER);\n    String cname = params.get(CoreAdminParams.CORE);\n    boolean doPersist = false;\n    if (cname.equals(name)) return;\n\n    SolrCore core = coreContainer.getCore(cname);\n    if (core != null) {\n      doPersist = coreContainer.isPersistent();\n      coreContainer.register(name, core, false);\n      // no core.close() since each entry in the cores map should increase the ref\n    }\n    return;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["c26f00b574427b55127e869b935845554afde1fa"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"60b3af235eb1c55956ccebd3bd282279702b9c64":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["6e764e9a107f93be9fa3c922bc6a197b3eec387e","60b3af235eb1c55956ccebd3bd282279702b9c64"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60b3af235eb1c55956ccebd3bd282279702b9c64"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["37a0f60745e53927c4c876cfe5b5a58170f0646c","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"60b3af235eb1c55956ccebd3bd282279702b9c64":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","60b3af235eb1c55956ccebd3bd282279702b9c64","c6f080a2ab37c464dd98db173f6cbf10dc74f211"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","a258fbb26824fd104ed795e5d9033d2d040049ee","c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}