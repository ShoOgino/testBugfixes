{"path":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#conditional().mjava","commits":[{"id":"f18d4e1cdc7330101ca433af5e8564dfd894f2bf","date":1379041877,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#conditional().mjava","pathOld":"/dev/null","sourceNew":"    // $ANTLR start \"conditional\"\n    // src/java/org/apache/lucene/expressions/js/Javascript.g:254:1: conditional : logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )? ;\n    public final JavascriptParser.conditional_return conditional() throws RecognitionException {\n        JavascriptParser.conditional_return retval = new JavascriptParser.conditional_return();\n        retval.start = input.LT(1);\n\n\n        CommonTree root_0 = null;\n\n        Token AT_COND_QUE4=null;\n        Token AT_COLON6=null;\n        JavascriptParser.logical_or_return logical_or3 =null;\n\n        JavascriptParser.conditional_return conditional5 =null;\n\n        JavascriptParser.conditional_return conditional7 =null;\n\n\n        CommonTree AT_COND_QUE4_tree=null;\n        CommonTree AT_COLON6_tree=null;\n\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:255:5: ( logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )? )\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:255:7: logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )?\n            {\n            root_0 = (CommonTree)adaptor.nil();\n\n\n            pushFollow(FOLLOW_logical_or_in_conditional757);\n            logical_or3=logical_or();\n\n            state._fsp--;\n\n            adaptor.addChild(root_0, logical_or3.getTree());\n\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:255:18: ( AT_COND_QUE ^ conditional AT_COLON ! conditional )?\n            int alt1=2;\n            int LA1_0 = input.LA(1);\n\n            if ( (LA1_0==AT_COND_QUE) ) {\n                alt1=1;\n            }\n            switch (alt1) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:255:19: AT_COND_QUE ^ conditional AT_COLON ! conditional\n                    {\n                    AT_COND_QUE4=(Token)match(input,AT_COND_QUE,FOLLOW_AT_COND_QUE_in_conditional760); \n                    AT_COND_QUE4_tree = \n                    (CommonTree)adaptor.create(AT_COND_QUE4)\n                    ;\n                    root_0 = (CommonTree)adaptor.becomeRoot(AT_COND_QUE4_tree, root_0);\n\n\n                    pushFollow(FOLLOW_conditional_in_conditional763);\n                    conditional5=conditional();\n\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, conditional5.getTree());\n\n                    AT_COLON6=(Token)match(input,AT_COLON,FOLLOW_AT_COLON_in_conditional765); \n\n                    pushFollow(FOLLOW_conditional_in_conditional768);\n                    conditional7=conditional();\n\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, conditional7.getTree());\n\n                    }\n                    break;\n\n            }\n\n\n            }\n\n            retval.stop = input.LT(-1);\n\n\n            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n    \tretval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n\n        }\n\n        finally {\n        \t// do for sure before leaving\n        }\n        return retval;\n    }\n    // $ANTLR end \"conditional\"\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3623d67605fbbdfce2fadea678e2f4bbe2ab2310","date":1379042933,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#conditional().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#conditional().mjava","sourceNew":"    // $ANTLR start \"conditional\"\n    // src/java/org/apache/lucene/expressions/js/Javascript.g:254:1: conditional : logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )? ;\n    public final JavascriptParser.conditional_return conditional() throws RecognitionException {\n        JavascriptParser.conditional_return retval = new JavascriptParser.conditional_return();\n        retval.start = input.LT(1);\n\n\n        CommonTree root_0 = null;\n\n        Token AT_COND_QUE4=null;\n        Token AT_COLON6=null;\n        JavascriptParser.logical_or_return logical_or3 =null;\n\n        JavascriptParser.conditional_return conditional5 =null;\n\n        JavascriptParser.conditional_return conditional7 =null;\n\n\n        CommonTree AT_COND_QUE4_tree=null;\n        CommonTree AT_COLON6_tree=null;\n\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:255:5: ( logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )? )\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:255:7: logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )?\n            {\n            root_0 = (CommonTree)adaptor.nil();\n\n\n            pushFollow(FOLLOW_logical_or_in_conditional757);\n            logical_or3=logical_or();\n\n            state._fsp--;\n\n            adaptor.addChild(root_0, logical_or3.getTree());\n\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:255:18: ( AT_COND_QUE ^ conditional AT_COLON ! conditional )?\n            int alt1=2;\n            int LA1_0 = input.LA(1);\n\n            if ( (LA1_0==AT_COND_QUE) ) {\n                alt1=1;\n            }\n            switch (alt1) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:255:19: AT_COND_QUE ^ conditional AT_COLON ! conditional\n                    {\n                    AT_COND_QUE4=(Token)match(input,AT_COND_QUE,FOLLOW_AT_COND_QUE_in_conditional760); \n                    AT_COND_QUE4_tree = \n                    (CommonTree)adaptor.create(AT_COND_QUE4)\n                    ;\n                    root_0 = (CommonTree)adaptor.becomeRoot(AT_COND_QUE4_tree, root_0);\n\n\n                    pushFollow(FOLLOW_conditional_in_conditional763);\n                    conditional5=conditional();\n\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, conditional5.getTree());\n\n                    AT_COLON6=(Token)match(input,AT_COLON,FOLLOW_AT_COLON_in_conditional765); \n\n                    pushFollow(FOLLOW_conditional_in_conditional768);\n                    conditional7=conditional();\n\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, conditional7.getTree());\n\n                    }\n                    break;\n\n            }\n\n\n            }\n\n            retval.stop = input.LT(-1);\n\n\n            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n\n        }\n\n        finally {\n            // do for sure before leaving\n        }\n        return retval;\n    }\n    // $ANTLR end \"conditional\"\n\n","sourceOld":"    // $ANTLR start \"conditional\"\n    // src/java/org/apache/lucene/expressions/js/Javascript.g:254:1: conditional : logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )? ;\n    public final JavascriptParser.conditional_return conditional() throws RecognitionException {\n        JavascriptParser.conditional_return retval = new JavascriptParser.conditional_return();\n        retval.start = input.LT(1);\n\n\n        CommonTree root_0 = null;\n\n        Token AT_COND_QUE4=null;\n        Token AT_COLON6=null;\n        JavascriptParser.logical_or_return logical_or3 =null;\n\n        JavascriptParser.conditional_return conditional5 =null;\n\n        JavascriptParser.conditional_return conditional7 =null;\n\n\n        CommonTree AT_COND_QUE4_tree=null;\n        CommonTree AT_COLON6_tree=null;\n\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:255:5: ( logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )? )\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:255:7: logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )?\n            {\n            root_0 = (CommonTree)adaptor.nil();\n\n\n            pushFollow(FOLLOW_logical_or_in_conditional757);\n            logical_or3=logical_or();\n\n            state._fsp--;\n\n            adaptor.addChild(root_0, logical_or3.getTree());\n\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:255:18: ( AT_COND_QUE ^ conditional AT_COLON ! conditional )?\n            int alt1=2;\n            int LA1_0 = input.LA(1);\n\n            if ( (LA1_0==AT_COND_QUE) ) {\n                alt1=1;\n            }\n            switch (alt1) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:255:19: AT_COND_QUE ^ conditional AT_COLON ! conditional\n                    {\n                    AT_COND_QUE4=(Token)match(input,AT_COND_QUE,FOLLOW_AT_COND_QUE_in_conditional760); \n                    AT_COND_QUE4_tree = \n                    (CommonTree)adaptor.create(AT_COND_QUE4)\n                    ;\n                    root_0 = (CommonTree)adaptor.becomeRoot(AT_COND_QUE4_tree, root_0);\n\n\n                    pushFollow(FOLLOW_conditional_in_conditional763);\n                    conditional5=conditional();\n\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, conditional5.getTree());\n\n                    AT_COLON6=(Token)match(input,AT_COLON,FOLLOW_AT_COLON_in_conditional765); \n\n                    pushFollow(FOLLOW_conditional_in_conditional768);\n                    conditional7=conditional();\n\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, conditional7.getTree());\n\n                    }\n                    break;\n\n            }\n\n\n            }\n\n            retval.stop = input.LT(-1);\n\n\n            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n    \tretval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n\n        }\n\n        finally {\n        \t// do for sure before leaving\n        }\n        return retval;\n    }\n    // $ANTLR end \"conditional\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2","date":1379096281,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#conditional().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#conditional().mjava","sourceNew":"    // $ANTLR start \"conditional\"\n    // src/java/org/apache/lucene/expressions/js/Javascript.g:254:1: conditional : logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )? ;\n    public final JavascriptParser.conditional_return conditional() throws RecognitionException {\n        JavascriptParser.conditional_return retval = new JavascriptParser.conditional_return();\n        retval.start = input.LT(1);\n\n        CommonTree root_0 = null;\n\n        Token AT_COND_QUE4=null;\n        Token AT_COLON6=null;\n        ParserRuleReturnScope logical_or3 =null;\n        ParserRuleReturnScope conditional5 =null;\n        ParserRuleReturnScope conditional7 =null;\n\n        CommonTree AT_COND_QUE4_tree=null;\n        CommonTree AT_COLON6_tree=null;\n\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:255:5: ( logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )? )\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:255:7: logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )?\n            {\n            root_0 = (CommonTree)adaptor.nil();\n\n\n            pushFollow(FOLLOW_logical_or_in_conditional757);\n            logical_or3=logical_or();\n            state._fsp--;\n\n            adaptor.addChild(root_0, logical_or3.getTree());\n\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:255:18: ( AT_COND_QUE ^ conditional AT_COLON ! conditional )?\n            int alt1=2;\n            int LA1_0 = input.LA(1);\n            if ( (LA1_0==AT_COND_QUE) ) {\n                alt1=1;\n            }\n            switch (alt1) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:255:19: AT_COND_QUE ^ conditional AT_COLON ! conditional\n                    {\n                    AT_COND_QUE4=(Token)match(input,AT_COND_QUE,FOLLOW_AT_COND_QUE_in_conditional760); \n                    AT_COND_QUE4_tree = (CommonTree)adaptor.create(AT_COND_QUE4);\n                    root_0 = (CommonTree)adaptor.becomeRoot(AT_COND_QUE4_tree, root_0);\n\n                    pushFollow(FOLLOW_conditional_in_conditional763);\n                    conditional5=conditional();\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, conditional5.getTree());\n\n                    AT_COLON6=(Token)match(input,AT_COLON,FOLLOW_AT_COLON_in_conditional765); \n                    pushFollow(FOLLOW_conditional_in_conditional768);\n                    conditional7=conditional();\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, conditional7.getTree());\n\n                    }\n                    break;\n\n            }\n\n            }\n\n            retval.stop = input.LT(-1);\n\n            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n            retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n        }\n        finally {\n            // do for sure before leaving\n        }\n        return retval;\n    }\n    // $ANTLR end \"conditional\"\n\n","sourceOld":"    // $ANTLR start \"conditional\"\n    // src/java/org/apache/lucene/expressions/js/Javascript.g:254:1: conditional : logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )? ;\n    public final JavascriptParser.conditional_return conditional() throws RecognitionException {\n        JavascriptParser.conditional_return retval = new JavascriptParser.conditional_return();\n        retval.start = input.LT(1);\n\n\n        CommonTree root_0 = null;\n\n        Token AT_COND_QUE4=null;\n        Token AT_COLON6=null;\n        JavascriptParser.logical_or_return logical_or3 =null;\n\n        JavascriptParser.conditional_return conditional5 =null;\n\n        JavascriptParser.conditional_return conditional7 =null;\n\n\n        CommonTree AT_COND_QUE4_tree=null;\n        CommonTree AT_COLON6_tree=null;\n\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:255:5: ( logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )? )\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:255:7: logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )?\n            {\n            root_0 = (CommonTree)adaptor.nil();\n\n\n            pushFollow(FOLLOW_logical_or_in_conditional757);\n            logical_or3=logical_or();\n\n            state._fsp--;\n\n            adaptor.addChild(root_0, logical_or3.getTree());\n\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:255:18: ( AT_COND_QUE ^ conditional AT_COLON ! conditional )?\n            int alt1=2;\n            int LA1_0 = input.LA(1);\n\n            if ( (LA1_0==AT_COND_QUE) ) {\n                alt1=1;\n            }\n            switch (alt1) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:255:19: AT_COND_QUE ^ conditional AT_COLON ! conditional\n                    {\n                    AT_COND_QUE4=(Token)match(input,AT_COND_QUE,FOLLOW_AT_COND_QUE_in_conditional760); \n                    AT_COND_QUE4_tree = \n                    (CommonTree)adaptor.create(AT_COND_QUE4)\n                    ;\n                    root_0 = (CommonTree)adaptor.becomeRoot(AT_COND_QUE4_tree, root_0);\n\n\n                    pushFollow(FOLLOW_conditional_in_conditional763);\n                    conditional5=conditional();\n\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, conditional5.getTree());\n\n                    AT_COLON6=(Token)match(input,AT_COLON,FOLLOW_AT_COLON_in_conditional765); \n\n                    pushFollow(FOLLOW_conditional_in_conditional768);\n                    conditional7=conditional();\n\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, conditional7.getTree());\n\n                    }\n                    break;\n\n            }\n\n\n            }\n\n            retval.stop = input.LT(-1);\n\n\n            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n        retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n\n        }\n\n        finally {\n            // do for sure before leaving\n        }\n        return retval;\n    }\n    // $ANTLR end \"conditional\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1441eba4282a646ef88d12acb797483db37554e","date":1379096538,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#conditional().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#conditional().mjava","sourceNew":"  // $ANTLR start \"conditional\"\n  // src/java/org/apache/lucene/expressions/js/Javascript.g:254:1: conditional : logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )? ;\n  public final JavascriptParser.conditional_return conditional() throws RecognitionException {\n    JavascriptParser.conditional_return retval = new JavascriptParser.conditional_return();\n    retval.start = input.LT(1);\n\n    CommonTree root_0 = null;\n\n    Token AT_COND_QUE4=null;\n    Token AT_COLON6=null;\n    ParserRuleReturnScope logical_or3 =null;\n    ParserRuleReturnScope conditional5 =null;\n    ParserRuleReturnScope conditional7 =null;\n\n    CommonTree AT_COND_QUE4_tree=null;\n    CommonTree AT_COLON6_tree=null;\n\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:255:5: ( logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )? )\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:255:7: logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )?\n      {\n      root_0 = (CommonTree)adaptor.nil();\n\n\n      pushFollow(FOLLOW_logical_or_in_conditional757);\n      logical_or3=logical_or();\n      state._fsp--;\n\n      adaptor.addChild(root_0, logical_or3.getTree());\n\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:255:18: ( AT_COND_QUE ^ conditional AT_COLON ! conditional )?\n      int alt1=2;\n      int LA1_0 = input.LA(1);\n      if ( (LA1_0==AT_COND_QUE) ) {\n        alt1=1;\n      }\n      switch (alt1) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:255:19: AT_COND_QUE ^ conditional AT_COLON ! conditional\n          {\n          AT_COND_QUE4=(Token)match(input,AT_COND_QUE,FOLLOW_AT_COND_QUE_in_conditional760); \n          AT_COND_QUE4_tree = (CommonTree)adaptor.create(AT_COND_QUE4);\n          root_0 = (CommonTree)adaptor.becomeRoot(AT_COND_QUE4_tree, root_0);\n\n          pushFollow(FOLLOW_conditional_in_conditional763);\n          conditional5=conditional();\n          state._fsp--;\n\n          adaptor.addChild(root_0, conditional5.getTree());\n\n          AT_COLON6=(Token)match(input,AT_COLON,FOLLOW_AT_COLON_in_conditional765); \n          pushFollow(FOLLOW_conditional_in_conditional768);\n          conditional7=conditional();\n          state._fsp--;\n\n          adaptor.addChild(root_0, conditional7.getTree());\n\n          }\n          break;\n\n      }\n\n      }\n\n      retval.stop = input.LT(-1);\n\n      retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n      adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n    }\n    catch (RecognitionException re) {\n      reportError(re);\n      recover(input,re);\n      retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n    }\n    finally {\n      // do for sure before leaving\n    }\n    return retval;\n  }\n  // $ANTLR end \"conditional\"\n\n","sourceOld":"    // $ANTLR start \"conditional\"\n    // src/java/org/apache/lucene/expressions/js/Javascript.g:254:1: conditional : logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )? ;\n    public final JavascriptParser.conditional_return conditional() throws RecognitionException {\n        JavascriptParser.conditional_return retval = new JavascriptParser.conditional_return();\n        retval.start = input.LT(1);\n\n        CommonTree root_0 = null;\n\n        Token AT_COND_QUE4=null;\n        Token AT_COLON6=null;\n        ParserRuleReturnScope logical_or3 =null;\n        ParserRuleReturnScope conditional5 =null;\n        ParserRuleReturnScope conditional7 =null;\n\n        CommonTree AT_COND_QUE4_tree=null;\n        CommonTree AT_COLON6_tree=null;\n\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:255:5: ( logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )? )\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:255:7: logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )?\n            {\n            root_0 = (CommonTree)adaptor.nil();\n\n\n            pushFollow(FOLLOW_logical_or_in_conditional757);\n            logical_or3=logical_or();\n            state._fsp--;\n\n            adaptor.addChild(root_0, logical_or3.getTree());\n\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:255:18: ( AT_COND_QUE ^ conditional AT_COLON ! conditional )?\n            int alt1=2;\n            int LA1_0 = input.LA(1);\n            if ( (LA1_0==AT_COND_QUE) ) {\n                alt1=1;\n            }\n            switch (alt1) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:255:19: AT_COND_QUE ^ conditional AT_COLON ! conditional\n                    {\n                    AT_COND_QUE4=(Token)match(input,AT_COND_QUE,FOLLOW_AT_COND_QUE_in_conditional760); \n                    AT_COND_QUE4_tree = (CommonTree)adaptor.create(AT_COND_QUE4);\n                    root_0 = (CommonTree)adaptor.becomeRoot(AT_COND_QUE4_tree, root_0);\n\n                    pushFollow(FOLLOW_conditional_in_conditional763);\n                    conditional5=conditional();\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, conditional5.getTree());\n\n                    AT_COLON6=(Token)match(input,AT_COLON,FOLLOW_AT_COLON_in_conditional765); \n                    pushFollow(FOLLOW_conditional_in_conditional768);\n                    conditional7=conditional();\n                    state._fsp--;\n\n                    adaptor.addChild(root_0, conditional7.getTree());\n\n                    }\n                    break;\n\n            }\n\n            }\n\n            retval.stop = input.LT(-1);\n\n            retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n        }\n        catch (RecognitionException re) {\n            reportError(re);\n            recover(input,re);\n            retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n        }\n        finally {\n            // do for sure before leaving\n        }\n        return retval;\n    }\n    // $ANTLR end \"conditional\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f0e44787cffbb978aa2182761e3f9b184545a1e","date":1379265303,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#conditional().mjava","pathOld":"/dev/null","sourceNew":"  // $ANTLR start \"conditional\"\n  // src/java/org/apache/lucene/expressions/js/Javascript.g:254:1: conditional : logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )? ;\n  public final JavascriptParser.conditional_return conditional() throws RecognitionException {\n    JavascriptParser.conditional_return retval = new JavascriptParser.conditional_return();\n    retval.start = input.LT(1);\n\n    CommonTree root_0 = null;\n\n    Token AT_COND_QUE4=null;\n    Token AT_COLON6=null;\n    ParserRuleReturnScope logical_or3 =null;\n    ParserRuleReturnScope conditional5 =null;\n    ParserRuleReturnScope conditional7 =null;\n\n    CommonTree AT_COND_QUE4_tree=null;\n    CommonTree AT_COLON6_tree=null;\n\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:255:5: ( logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )? )\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:255:7: logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )?\n      {\n      root_0 = (CommonTree)adaptor.nil();\n\n\n      pushFollow(FOLLOW_logical_or_in_conditional757);\n      logical_or3=logical_or();\n      state._fsp--;\n\n      adaptor.addChild(root_0, logical_or3.getTree());\n\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:255:18: ( AT_COND_QUE ^ conditional AT_COLON ! conditional )?\n      int alt1=2;\n      int LA1_0 = input.LA(1);\n      if ( (LA1_0==AT_COND_QUE) ) {\n        alt1=1;\n      }\n      switch (alt1) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:255:19: AT_COND_QUE ^ conditional AT_COLON ! conditional\n          {\n          AT_COND_QUE4=(Token)match(input,AT_COND_QUE,FOLLOW_AT_COND_QUE_in_conditional760); \n          AT_COND_QUE4_tree = (CommonTree)adaptor.create(AT_COND_QUE4);\n          root_0 = (CommonTree)adaptor.becomeRoot(AT_COND_QUE4_tree, root_0);\n\n          pushFollow(FOLLOW_conditional_in_conditional763);\n          conditional5=conditional();\n          state._fsp--;\n\n          adaptor.addChild(root_0, conditional5.getTree());\n\n          AT_COLON6=(Token)match(input,AT_COLON,FOLLOW_AT_COLON_in_conditional765); \n          pushFollow(FOLLOW_conditional_in_conditional768);\n          conditional7=conditional();\n          state._fsp--;\n\n          adaptor.addChild(root_0, conditional7.getTree());\n\n          }\n          break;\n\n      }\n\n      }\n\n      retval.stop = input.LT(-1);\n\n      retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n      adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n    }\n    catch (RecognitionException re) {\n      reportError(re);\n      recover(input,re);\n      retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n    }\n    finally {\n      // do for sure before leaving\n    }\n    return retval;\n  }\n  // $ANTLR end \"conditional\"\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d23d4828afa583ebf35b4a541763af6206133458","date":1438931440,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptParser#conditional().mjava","sourceNew":null,"sourceOld":"  // $ANTLR start \"conditional\"\n  // src/java/org/apache/lucene/expressions/js/Javascript.g:254:1: conditional : logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )? ;\n  public final JavascriptParser.conditional_return conditional() throws RecognitionException {\n    JavascriptParser.conditional_return retval = new JavascriptParser.conditional_return();\n    retval.start = input.LT(1);\n\n    CommonTree root_0 = null;\n\n    Token AT_COND_QUE4=null;\n    Token AT_COLON6=null;\n    ParserRuleReturnScope logical_or3 =null;\n    ParserRuleReturnScope conditional5 =null;\n    ParserRuleReturnScope conditional7 =null;\n\n    CommonTree AT_COND_QUE4_tree=null;\n    CommonTree AT_COLON6_tree=null;\n\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:255:5: ( logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )? )\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:255:7: logical_or ( AT_COND_QUE ^ conditional AT_COLON ! conditional )?\n      {\n      root_0 = (CommonTree)adaptor.nil();\n\n\n      pushFollow(FOLLOW_logical_or_in_conditional757);\n      logical_or3=logical_or();\n      state._fsp--;\n\n      adaptor.addChild(root_0, logical_or3.getTree());\n\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:255:18: ( AT_COND_QUE ^ conditional AT_COLON ! conditional )?\n      int alt1=2;\n      int LA1_0 = input.LA(1);\n      if ( (LA1_0==AT_COND_QUE) ) {\n        alt1=1;\n      }\n      switch (alt1) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:255:19: AT_COND_QUE ^ conditional AT_COLON ! conditional\n          {\n          AT_COND_QUE4=(Token)match(input,AT_COND_QUE,FOLLOW_AT_COND_QUE_in_conditional760); \n          AT_COND_QUE4_tree = (CommonTree)adaptor.create(AT_COND_QUE4);\n          root_0 = (CommonTree)adaptor.becomeRoot(AT_COND_QUE4_tree, root_0);\n\n          pushFollow(FOLLOW_conditional_in_conditional763);\n          conditional5=conditional();\n          state._fsp--;\n\n          adaptor.addChild(root_0, conditional5.getTree());\n\n          AT_COLON6=(Token)match(input,AT_COLON,FOLLOW_AT_COLON_in_conditional765); \n          pushFollow(FOLLOW_conditional_in_conditional768);\n          conditional7=conditional();\n          state._fsp--;\n\n          adaptor.addChild(root_0, conditional7.getTree());\n\n          }\n          break;\n\n      }\n\n      }\n\n      retval.stop = input.LT(-1);\n\n      retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);\n      adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);\n\n    }\n    catch (RecognitionException re) {\n      reportError(re);\n      recover(input,re);\n      retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);\n    }\n    finally {\n      // do for sure before leaving\n    }\n    return retval;\n  }\n  // $ANTLR end \"conditional\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d23d4828afa583ebf35b4a541763af6206133458":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2":["3623d67605fbbdfce2fadea678e2f4bbe2ab2310"],"f18d4e1cdc7330101ca433af5e8564dfd894f2bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d1441eba4282a646ef88d12acb797483db37554e":["68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3623d67605fbbdfce2fadea678e2f4bbe2ab2310":["f18d4e1cdc7330101ca433af5e8564dfd894f2bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d23d4828afa583ebf35b4a541763af6206133458"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d1441eba4282a646ef88d12acb797483db37554e"]},"commit2Childs":{"d23d4828afa583ebf35b4a541763af6206133458":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2":["d1441eba4282a646ef88d12acb797483db37554e"],"f18d4e1cdc7330101ca433af5e8564dfd894f2bf":["3623d67605fbbdfce2fadea678e2f4bbe2ab2310"],"d1441eba4282a646ef88d12acb797483db37554e":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f18d4e1cdc7330101ca433af5e8564dfd894f2bf","5f0e44787cffbb978aa2182761e3f9b184545a1e"],"3623d67605fbbdfce2fadea678e2f4bbe2ab2310":["68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["d23d4828afa583ebf35b4a541763af6206133458"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}