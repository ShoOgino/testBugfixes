{"path":"modules/queries/src/test/org/apache/lucene/queries/BoostingQueryTest#testBoostingQueryEquals().mjava","commits":[{"id":"1f9f2355d68aab1348539f7a1603279405e566a4","date":1313634992,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/test/org/apache/lucene/queries/BoostingQueryTest#testBoostingQueryEquals().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BoostingQueryTest#testBoostingQueryEquals().mjava","sourceNew":"  public void testBoostingQueryEquals() {\n    TermQuery q1 = new TermQuery(new Term(\"subject:\", \"java\"));\n    TermQuery q2 = new TermQuery(new Term(\"subject:\", \"java\"));\n    assertEquals(\"Two TermQueries with same attributes should be equal\", q1, q2);\n    BoostingQuery bq1 = new BoostingQuery(q1, q2, 0.1f);\n    BoostingQuery bq2 = new BoostingQuery(q1, q2, 0.1f);\n    assertEquals(\"BoostingQuery with same attributes is not equal\", bq1, bq2);\n  }\n\n","sourceOld":"  public void testBoostingQueryEquals() {\n    TermQuery q1 = new TermQuery(new Term(\"subject:\", \"java\"));\n    TermQuery q2 = new TermQuery(new Term(\"subject:\", \"java\"));\n    assertEquals(\"Two TermQueries with same attributes should be equal\", q1, q2);\n    BoostingQuery bq1 = new BoostingQuery(q1, q2, 0.1f);\n    BoostingQuery bq2 = new BoostingQuery(q1, q2, 0.1f);\n    assertEquals(\"BoostingQuery with same attributes is not equal\", bq1, bq2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/BoostingQueryTest#testBoostingQueryEquals().mjava","pathOld":"modules/queries/src/test/org/apache/lucene/queries/BoostingQueryTest#testBoostingQueryEquals().mjava","sourceNew":"  public void testBoostingQueryEquals() {\n    TermQuery q1 = new TermQuery(new Term(\"subject:\", \"java\"));\n    TermQuery q2 = new TermQuery(new Term(\"subject:\", \"java\"));\n    assertEquals(\"Two TermQueries with same attributes should be equal\", q1, q2);\n    BoostingQuery bq1 = new BoostingQuery(q1, q2, 0.1f);\n    BoostingQuery bq2 = new BoostingQuery(q1, q2, 0.1f);\n    assertEquals(\"BoostingQuery with same attributes is not equal\", bq1, bq2);\n  }\n\n","sourceOld":"  public void testBoostingQueryEquals() {\n    TermQuery q1 = new TermQuery(new Term(\"subject:\", \"java\"));\n    TermQuery q2 = new TermQuery(new Term(\"subject:\", \"java\"));\n    assertEquals(\"Two TermQueries with same attributes should be equal\", q1, q2);\n    BoostingQuery bq1 = new BoostingQuery(q1, q2, 0.1f);\n    BoostingQuery bq2 = new BoostingQuery(q1, q2, 0.1f);\n    assertEquals(\"BoostingQuery with same attributes is not equal\", bq1, bq2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["1f9f2355d68aab1348539f7a1603279405e566a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"1f9f2355d68aab1348539f7a1603279405e566a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f9f2355d68aab1348539f7a1603279405e566a4"],"1f9f2355d68aab1348539f7a1603279405e566a4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}