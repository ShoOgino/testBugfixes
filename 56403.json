{"path":"solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders#addToSuccesses(Slice,Replica).mjava","commits":[{"id":"73fd358e8ec697393d56617f4d9cedaca74dca14","date":1547954439,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders#addToSuccesses(Slice,Replica).mjava","pathOld":"/dev/null","sourceNew":"  // If we actually changed the leader, we should send that fact back in the response.\n  private void addToSuccesses(Slice slice, Replica replica) {\n    NamedList<Object> successes = (NamedList<Object>) results.get(\"successes\");\n    if (successes == null) {\n      successes = new NamedList<>();\n      results.add(\"successes\", successes);\n    }\n    log.info(\"Successfully changed leader of shard {} to replica {}\", slice.getName(), replica.getName());\n    NamedList<Object> res = new NamedList<>();\n    res.add(\"status\", \"success\");\n    res.add(\"msg\", \"Successfully changed leader of slice \" + slice.getName() + \" to \" + replica.getName());\n    successes.add(slice.getName(), res);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b5bc595f1199d40cd6ef2c886e48d10a41bf7e1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c89f1ef80a9432f4eabaeda9a1e135cd72e60836","date":1547972642,"type":0,"author":"Tommaso Teofili","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders#addToSuccesses(Slice,Replica).mjava","pathOld":"/dev/null","sourceNew":"  // If we actually changed the leader, we should send that fact back in the response.\n  private void addToSuccesses(Slice slice, Replica replica) {\n    NamedList<Object> successes = (NamedList<Object>) results.get(\"successes\");\n    if (successes == null) {\n      successes = new NamedList<>();\n      results.add(\"successes\", successes);\n    }\n    log.info(\"Successfully changed leader of shard {} to replica {}\", slice.getName(), replica.getName());\n    NamedList<Object> res = new NamedList<>();\n    res.add(\"status\", \"success\");\n    res.add(\"msg\", \"Successfully changed leader of slice \" + slice.getName() + \" to \" + replica.getName());\n    successes.add(slice.getName(), res);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b5bc595f1199d40cd6ef2c886e48d10a41bf7e1f","date":1548047599,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders#addToSuccesses(Slice,Replica).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders#addToSuccesses(Slice,Replica).mjava","sourceNew":"  // If we actually changed the leader, we should send that fact back in the response.\n  private void addToSuccesses(Slice slice, Replica replica) {\n    SimpleOrderedMap successes = (SimpleOrderedMap) results.get(\"successes\");\n    if (successes == null) {\n      successes = new SimpleOrderedMap();\n      results.add(\"successes\", successes);\n    }\n    log.info(\"Successfully changed leader of shard {} to replica {}\", slice.getName(), replica.getName());\n    SimpleOrderedMap res = new SimpleOrderedMap();\n    res.add(\"status\", \"success\");\n    res.add(\"msg\", \"Successfully changed leader of slice \" + slice.getName() + \" to \" + replica.getName());\n    successes.add(slice.getName(), res);\n  }\n\n","sourceOld":"  // If we actually changed the leader, we should send that fact back in the response.\n  private void addToSuccesses(Slice slice, Replica replica) {\n    NamedList<Object> successes = (NamedList<Object>) results.get(\"successes\");\n    if (successes == null) {\n      successes = new NamedList<>();\n      results.add(\"successes\", successes);\n    }\n    log.info(\"Successfully changed leader of shard {} to replica {}\", slice.getName(), replica.getName());\n    NamedList<Object> res = new NamedList<>();\n    res.add(\"status\", \"success\");\n    res.add(\"msg\", \"Successfully changed leader of slice \" + slice.getName() + \" to \" + replica.getName());\n    successes.add(slice.getName(), res);\n  }\n\n","bugFix":["73fd358e8ec697393d56617f4d9cedaca74dca14"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2682a1cd25864ccdc1b44bf047bd08700f28ba06","date":1548321910,"type":3,"author":"Tommaso Teofili","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders#addToSuccesses(Slice,Replica).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders#addToSuccesses(Slice,Replica).mjava","sourceNew":"  // If we actually changed the leader, we should send that fact back in the response.\n  private void addToSuccesses(Slice slice, Replica replica) {\n    SimpleOrderedMap successes = (SimpleOrderedMap) results.get(\"successes\");\n    if (successes == null) {\n      successes = new SimpleOrderedMap();\n      results.add(\"successes\", successes);\n    }\n    log.info(\"Successfully changed leader of shard {} to replica {}\", slice.getName(), replica.getName());\n    SimpleOrderedMap res = new SimpleOrderedMap();\n    res.add(\"status\", \"success\");\n    res.add(\"msg\", \"Successfully changed leader of slice \" + slice.getName() + \" to \" + replica.getName());\n    successes.add(slice.getName(), res);\n  }\n\n","sourceOld":"  // If we actually changed the leader, we should send that fact back in the response.\n  private void addToSuccesses(Slice slice, Replica replica) {\n    NamedList<Object> successes = (NamedList<Object>) results.get(\"successes\");\n    if (successes == null) {\n      successes = new NamedList<>();\n      results.add(\"successes\", successes);\n    }\n    log.info(\"Successfully changed leader of shard {} to replica {}\", slice.getName(), replica.getName());\n    NamedList<Object> res = new NamedList<>();\n    res.add(\"status\", \"success\");\n    res.add(\"msg\", \"Successfully changed leader of slice \" + slice.getName() + \" to \" + replica.getName());\n    successes.add(slice.getName(), res);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"575e66bd4b2349209027f6801184da7fc3cba13f","date":1587609169,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders#addToSuccesses(Slice,Replica).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders#addToSuccesses(Slice,Replica).mjava","sourceNew":"  // If we actually changed the leader, we should send that fact back in the response.\n  private void addToSuccesses(Slice slice, Replica replica) {\n    SimpleOrderedMap successes = (SimpleOrderedMap) results.get(\"successes\");\n    if (successes == null) {\n      successes = new SimpleOrderedMap();\n      results.add(\"successes\", successes);\n    }\n    if (log.isInfoEnabled()) {\n      log.info(\"Successfully changed leader of shard {} to replica {}\", slice.getName(), replica.getName());\n    }\n    SimpleOrderedMap res = new SimpleOrderedMap();\n    res.add(\"status\", \"success\");\n    res.add(\"msg\", \"Successfully changed leader of slice \" + slice.getName() + \" to \" + replica.getName());\n    successes.add(slice.getName(), res);\n  }\n\n","sourceOld":"  // If we actually changed the leader, we should send that fact back in the response.\n  private void addToSuccesses(Slice slice, Replica replica) {\n    SimpleOrderedMap successes = (SimpleOrderedMap) results.get(\"successes\");\n    if (successes == null) {\n      successes = new SimpleOrderedMap();\n      results.add(\"successes\", successes);\n    }\n    log.info(\"Successfully changed leader of shard {} to replica {}\", slice.getName(), replica.getName());\n    SimpleOrderedMap res = new SimpleOrderedMap();\n    res.add(\"status\", \"success\");\n    res.add(\"msg\", \"Successfully changed leader of slice \" + slice.getName() + \" to \" + replica.getName());\n    successes.add(slice.getName(), res);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba055e19afc289adcb5bedaf68513793a7254012","date":1591268575,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders#addToSuccesses(Slice,Replica).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders#addToSuccesses(Slice,Replica).mjava","sourceNew":"  // If we actually changed the leader, we should send that fact back in the response.\n  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  private void addToSuccesses(Slice slice, Replica replica) {\n    SimpleOrderedMap successes = (SimpleOrderedMap) results.get(\"successes\");\n    if (successes == null) {\n      successes = new SimpleOrderedMap();\n      results.add(\"successes\", successes);\n    }\n    if (log.isInfoEnabled()) {\n      log.info(\"Successfully changed leader of shard {} to replica {}\", slice.getName(), replica.getName());\n    }\n    SimpleOrderedMap res = new SimpleOrderedMap();\n    res.add(\"status\", \"success\");\n    res.add(\"msg\", \"Successfully changed leader of slice \" + slice.getName() + \" to \" + replica.getName());\n    successes.add(slice.getName(), res);\n  }\n\n","sourceOld":"  // If we actually changed the leader, we should send that fact back in the response.\n  private void addToSuccesses(Slice slice, Replica replica) {\n    SimpleOrderedMap successes = (SimpleOrderedMap) results.get(\"successes\");\n    if (successes == null) {\n      successes = new SimpleOrderedMap();\n      results.add(\"successes\", successes);\n    }\n    if (log.isInfoEnabled()) {\n      log.info(\"Successfully changed leader of shard {} to replica {}\", slice.getName(), replica.getName());\n    }\n    SimpleOrderedMap res = new SimpleOrderedMap();\n    res.add(\"status\", \"success\");\n    res.add(\"msg\", \"Successfully changed leader of slice \" + slice.getName() + \" to \" + replica.getName());\n    successes.add(slice.getName(), res);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","73fd358e8ec697393d56617f4d9cedaca74dca14"],"ba055e19afc289adcb5bedaf68513793a7254012":["575e66bd4b2349209027f6801184da7fc3cba13f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"575e66bd4b2349209027f6801184da7fc3cba13f":["b5bc595f1199d40cd6ef2c886e48d10a41bf7e1f"],"73fd358e8ec697393d56617f4d9cedaca74dca14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b5bc595f1199d40cd6ef2c886e48d10a41bf7e1f":["73fd358e8ec697393d56617f4d9cedaca74dca14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba055e19afc289adcb5bedaf68513793a7254012"],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","b5bc595f1199d40cd6ef2c886e48d10a41bf7e1f"]},"commit2Childs":{"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":["2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"ba055e19afc289adcb5bedaf68513793a7254012":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","73fd358e8ec697393d56617f4d9cedaca74dca14"],"575e66bd4b2349209027f6801184da7fc3cba13f":["ba055e19afc289adcb5bedaf68513793a7254012"],"73fd358e8ec697393d56617f4d9cedaca74dca14":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","b5bc595f1199d40cd6ef2c886e48d10a41bf7e1f"],"b5bc595f1199d40cd6ef2c886e48d10a41bf7e1f":["575e66bd4b2349209027f6801184da7fc3cba13f","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}