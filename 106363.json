{"path":"solr/core/src/test/org/apache/solr/handler/component/SuggestComponentContextFilterQueryTest#testBuildThrowsIllegalArgumentExceptionWhenContextIsConfiguredButNotImplemented().mjava","commits":[{"id":"de1635ba58109b4c7c7da50f4dad433333258904","date":1444503719,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SuggestComponentContextFilterQueryTest#testBuildThrowsIllegalArgumentExceptionWhenContextIsConfiguredButNotImplemented().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBuildThrowsIllegalArgumentExceptionWhenContextIsConfiguredButNotImplemented() throws Exception {\n    try {\n      assertQ(\n          req(\"qt\", rh,\n              SuggesterParams.SUGGEST_BUILD, \"true\",\n              SuggesterParams.SUGGEST_DICT, \"suggest_context_filtering_not_implemented\",\n              SuggesterParams.SUGGEST_Q, \"examp\")\n          ,\n          \"\"\n      );\n      fail(\"Expecting exception because \");\n    } catch (RuntimeException e) {\n      Throwable cause = e.getCause();\n      assertTrue(cause instanceof IllegalArgumentException);\n      assertThat(cause.getMessage(), is(\"this suggester doesn't support contexts\"));\n    }\n\n    // When not building, no exception is thrown\n    assertQ(req(\"qt\", rh,\n            SuggesterParams.SUGGEST_BUILD, \"false\",\n            SuggesterParams.SUGGEST_DICT, \"suggest_context_filtering_not_implemented\",\n            SuggesterParams.SUGGEST_Q, \"examp\"),\n        \"//lst[@name='suggest']/lst[@name='suggest_context_filtering_not_implemented']/lst[@name='examp']/int[@name='numFound'][.='0']\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SuggestComponentContextFilterQueryTest#testBuildThrowsIllegalArgumentExceptionWhenContextIsConfiguredButNotImplemented().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SuggestComponentContextFilterQueryTest#testBuildThrowsIllegalArgumentExceptionWhenContextIsConfiguredButNotImplemented().mjava","sourceNew":"  @Test\n  public void testBuildThrowsIllegalArgumentExceptionWhenContextIsConfiguredButNotImplemented() throws Exception {\n    IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () -> {\n      h.query(req(\"qt\", rh, SuggesterParams.SUGGEST_BUILD, \"true\",\n          SuggesterParams.SUGGEST_DICT, \"suggest_context_filtering_not_implemented\",\n          SuggesterParams.SUGGEST_Q, \"examp\"));\n    });\n    assertThat(ex.getMessage(), is(\"this suggester doesn't support contexts\"));\n\n    // When not building, no exception is thrown\n    assertQ(req(\"qt\", rh,\n            SuggesterParams.SUGGEST_BUILD, \"false\",\n            SuggesterParams.SUGGEST_DICT, \"suggest_context_filtering_not_implemented\",\n            SuggesterParams.SUGGEST_Q, \"examp\"),\n        \"//lst[@name='suggest']/lst[@name='suggest_context_filtering_not_implemented']/lst[@name='examp']/int[@name='numFound'][.='0']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testBuildThrowsIllegalArgumentExceptionWhenContextIsConfiguredButNotImplemented() throws Exception {\n    try {\n      assertQ(\n          req(\"qt\", rh,\n              SuggesterParams.SUGGEST_BUILD, \"true\",\n              SuggesterParams.SUGGEST_DICT, \"suggest_context_filtering_not_implemented\",\n              SuggesterParams.SUGGEST_Q, \"examp\")\n          ,\n          \"\"\n      );\n      fail(\"Expecting exception because \");\n    } catch (RuntimeException e) {\n      Throwable cause = e.getCause();\n      assertTrue(cause instanceof IllegalArgumentException);\n      assertThat(cause.getMessage(), is(\"this suggester doesn't support contexts\"));\n    }\n\n    // When not building, no exception is thrown\n    assertQ(req(\"qt\", rh,\n            SuggesterParams.SUGGEST_BUILD, \"false\",\n            SuggesterParams.SUGGEST_DICT, \"suggest_context_filtering_not_implemented\",\n            SuggesterParams.SUGGEST_Q, \"examp\"),\n        \"//lst[@name='suggest']/lst[@name='suggest_context_filtering_not_implemented']/lst[@name='examp']/int[@name='numFound'][.='0']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SuggestComponentContextFilterQueryTest#testBuildThrowsIllegalArgumentExceptionWhenContextIsConfiguredButNotImplemented().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SuggestComponentContextFilterQueryTest#testBuildThrowsIllegalArgumentExceptionWhenContextIsConfiguredButNotImplemented().mjava","sourceNew":"  @Test\n  public void testBuildThrowsIllegalArgumentExceptionWhenContextIsConfiguredButNotImplemented() throws Exception {\n    IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () -> {\n      h.query(req(\"qt\", rh, SuggesterParams.SUGGEST_BUILD, \"true\",\n          SuggesterParams.SUGGEST_DICT, \"suggest_context_filtering_not_implemented\",\n          SuggesterParams.SUGGEST_Q, \"examp\"));\n    });\n    assertThat(ex.getMessage(), is(\"this suggester doesn't support contexts\"));\n\n    // When not building, no exception is thrown\n    assertQ(req(\"qt\", rh,\n            SuggesterParams.SUGGEST_BUILD, \"false\",\n            SuggesterParams.SUGGEST_DICT, \"suggest_context_filtering_not_implemented\",\n            SuggesterParams.SUGGEST_Q, \"examp\"),\n        \"//lst[@name='suggest']/lst[@name='suggest_context_filtering_not_implemented']/lst[@name='examp']/int[@name='numFound'][.='0']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testBuildThrowsIllegalArgumentExceptionWhenContextIsConfiguredButNotImplemented() throws Exception {\n    try {\n      assertQ(\n          req(\"qt\", rh,\n              SuggesterParams.SUGGEST_BUILD, \"true\",\n              SuggesterParams.SUGGEST_DICT, \"suggest_context_filtering_not_implemented\",\n              SuggesterParams.SUGGEST_Q, \"examp\")\n          ,\n          \"\"\n      );\n      fail(\"Expecting exception because \");\n    } catch (RuntimeException e) {\n      Throwable cause = e.getCause();\n      assertTrue(cause instanceof IllegalArgumentException);\n      assertThat(cause.getMessage(), is(\"this suggester doesn't support contexts\"));\n    }\n\n    // When not building, no exception is thrown\n    assertQ(req(\"qt\", rh,\n            SuggesterParams.SUGGEST_BUILD, \"false\",\n            SuggesterParams.SUGGEST_DICT, \"suggest_context_filtering_not_implemented\",\n            SuggesterParams.SUGGEST_Q, \"examp\"),\n        \"//lst[@name='suggest']/lst[@name='suggest_context_filtering_not_implemented']/lst[@name='examp']/int[@name='numFound'][.='0']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan Høydahl","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SuggestComponentContextFilterQueryTest#testBuildThrowsIllegalArgumentExceptionWhenContextIsConfiguredButNotImplemented().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SuggestComponentContextFilterQueryTest#testBuildThrowsIllegalArgumentExceptionWhenContextIsConfiguredButNotImplemented().mjava","sourceNew":"  @Test\n  public void testBuildThrowsIllegalArgumentExceptionWhenContextIsConfiguredButNotImplemented() throws Exception {\n    IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () -> {\n      h.query(req(\"qt\", rh, SuggesterParams.SUGGEST_BUILD, \"true\",\n          SuggesterParams.SUGGEST_DICT, \"suggest_context_filtering_not_implemented\",\n          SuggesterParams.SUGGEST_Q, \"examp\"));\n    });\n    assertThat(ex.getMessage(), is(\"this suggester doesn't support contexts\"));\n\n    // When not building, no exception is thrown\n    assertQ(req(\"qt\", rh,\n            SuggesterParams.SUGGEST_BUILD, \"false\",\n            SuggesterParams.SUGGEST_DICT, \"suggest_context_filtering_not_implemented\",\n            SuggesterParams.SUGGEST_Q, \"examp\"),\n        \"//lst[@name='suggest']/lst[@name='suggest_context_filtering_not_implemented']/lst[@name='examp']/int[@name='numFound'][.='0']\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testBuildThrowsIllegalArgumentExceptionWhenContextIsConfiguredButNotImplemented() throws Exception {\n    try {\n      assertQ(\n          req(\"qt\", rh,\n              SuggesterParams.SUGGEST_BUILD, \"true\",\n              SuggesterParams.SUGGEST_DICT, \"suggest_context_filtering_not_implemented\",\n              SuggesterParams.SUGGEST_Q, \"examp\")\n          ,\n          \"\"\n      );\n      fail(\"Expecting exception because \");\n    } catch (RuntimeException e) {\n      Throwable cause = e.getCause();\n      assertTrue(cause instanceof IllegalArgumentException);\n      assertThat(cause.getMessage(), is(\"this suggester doesn't support contexts\"));\n    }\n\n    // When not building, no exception is thrown\n    assertQ(req(\"qt\", rh,\n            SuggesterParams.SUGGEST_BUILD, \"false\",\n            SuggesterParams.SUGGEST_DICT, \"suggest_context_filtering_not_implemented\",\n            SuggesterParams.SUGGEST_Q, \"examp\"),\n        \"//lst[@name='suggest']/lst[@name='suggest_context_filtering_not_implemented']/lst[@name='examp']/int[@name='numFound'][.='0']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"de1635ba58109b4c7c7da50f4dad433333258904":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["de1635ba58109b4c7c7da50f4dad433333258904"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["de1635ba58109b4c7c7da50f4dad433333258904","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["de1635ba58109b4c7c7da50f4dad433333258904","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1a307447328c95a00248512b40d7a5ff12ecd6a"]},"commit2Childs":{"de1635ba58109b4c7c7da50f4dad433333258904":["d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["de1635ba58109b4c7c7da50f4dad433333258904"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}