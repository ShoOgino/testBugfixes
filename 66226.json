{"path":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.shutdown();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(\n        Version.LUCENE_CURRENT, null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.shutdown();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":["e7bbe2c8b74e0e1582b3bb4518332fef84dcd8cb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(Paths.get(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(Paths.get(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(new File(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(new File(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":["e7bbe2c8b74e0e1582b3bb4518332fef84dcd8cb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d7fdc63b467a1f8d68d35c0f1b4bb61d1fc64ef5","date":1464252091,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(Paths.get(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      // try to use hardlinks if possible\n      indexes[i  - 1] = new HardlinkCopyDirectoryWrapper(FSDirectory.open(Paths.get(args[i])));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(Paths.get(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(Paths.get(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":["e7bbe2c8b74e0e1582b3bb4518332fef84dcd8cb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"83870855d82aba6819217abeff5a40779dbb28b4","date":1464291012,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(Paths.get(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      // try to use hardlinks if possible\n      indexes[i  - 1] = new HardlinkCopyDirectoryWrapper(FSDirectory.open(Paths.get(args[i])));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(Paths.get(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(Paths.get(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(Paths.get(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      // try to use hardlinks if possible\n      indexes[i  - 1] = new HardlinkCopyDirectoryWrapper(FSDirectory.open(Paths.get(args[i])));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(Paths.get(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(Paths.get(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bbe2c8b74e0e1582b3bb4518332fef84dcd8cb","date":1496903718,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n\n    // Try to use hardlinks to source segments, if possible.\n    Directory mergedIndex = new HardlinkCopyDirectoryWrapper(FSDirectory.open(Paths.get(args[0])));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, \n        new IndexWriterConfig(null).setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(Paths.get(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(Paths.get(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      // try to use hardlinks if possible\n      indexes[i  - 1] = new HardlinkCopyDirectoryWrapper(FSDirectory.open(Paths.get(args[i])));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","d0ef034a4f10871667ae75181537775ddcf8ade4","d7fdc63b467a1f8d68d35c0f1b4bb61d1fc64ef5","f4abec28b874149a7223e32cc7a01704c27790de"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n\n    // Try to use hardlinks to source segments, if possible.\n    Directory mergedIndex = new HardlinkCopyDirectoryWrapper(FSDirectory.open(Paths.get(args[0])));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, \n        new IndexWriterConfig(null).setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(Paths.get(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(Paths.get(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      // try to use hardlinks if possible\n      indexes[i  - 1] = new HardlinkCopyDirectoryWrapper(FSDirectory.open(Paths.get(args[i])));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n\n    // Try to use hardlinks to source segments, if possible.\n    Directory mergedIndex = new HardlinkCopyDirectoryWrapper(FSDirectory.open(Paths.get(args[0])));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, \n        new IndexWriterConfig(null).setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(Paths.get(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n    FSDirectory mergedIndex = FSDirectory.open(Paths.get(args[0]));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, new IndexWriterConfig(null)\n        .setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      // try to use hardlinks if possible\n      indexes[i  - 1] = new HardlinkCopyDirectoryWrapper(FSDirectory.open(Paths.get(args[i])));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba0cc621c4f42109fca8c021dee0f2f6b36b9c3e","date":1580938267,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/misc/IndexMergeTool#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws Exception {\n    Options options = null;\n    try {\n      options = Options.parse(args);\n    } catch (IllegalArgumentException e) {\n      System.err.println(e.getMessage());\n      System.exit(2);\n    }\n\n    // Try to use hardlinks to source segments, if possible.\n    Directory mergedIndex = new HardlinkCopyDirectoryWrapper(FSDirectory.open(Paths.get(options.mergedIndexPath)));\n\n    Directory[] indexes = new Directory[options.indexPaths.length];\n    for (int i = 0; i < indexes.length; i++) {\n      indexes[i] = FSDirectory.open(Paths.get(options.indexPaths[i]));\n    }\n\n    IndexWriter writer = new IndexWriter(mergedIndex, options.config);\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    if (options.maxSegments > 0) {\n      System.out.println(\"Force-merging to \" + options.maxSegments + \"...\");\n      writer.forceMerge(options.maxSegments);\n    }\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","sourceOld":"  public static void main(String[] args) throws IOException {\n    if (args.length < 3) {\n      System.err.println(\"Usage: IndexMergeTool <mergedIndex> <index1> <index2> [index3] ...\");\n      System.exit(1);\n    }\n\n    // Try to use hardlinks to source segments, if possible.\n    Directory mergedIndex = new HardlinkCopyDirectoryWrapper(FSDirectory.open(Paths.get(args[0])));\n\n    IndexWriter writer = new IndexWriter(mergedIndex, \n        new IndexWriterConfig(null).setOpenMode(OpenMode.CREATE));\n\n    Directory[] indexes = new Directory[args.length - 1];\n    for (int i = 1; i < args.length; i++) {\n      indexes[i  - 1] = FSDirectory.open(Paths.get(args[i]));\n    }\n\n    System.out.println(\"Merging...\");\n    writer.addIndexes(indexes);\n\n    System.out.println(\"Full merge...\");\n    writer.forceMerge(1);\n    writer.close();\n    System.out.println(\"Done.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d7fdc63b467a1f8d68d35c0f1b4bb61d1fc64ef5":["f4abec28b874149a7223e32cc7a01704c27790de"],"ba0cc621c4f42109fca8c021dee0f2f6b36b9c3e":["28288370235ed02234a64753cdbf0c6ec096304a"],"83870855d82aba6819217abeff5a40779dbb28b4":["f4abec28b874149a7223e32cc7a01704c27790de","d7fdc63b467a1f8d68d35c0f1b4bb61d1fc64ef5"],"f4abec28b874149a7223e32cc7a01704c27790de":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"28288370235ed02234a64753cdbf0c6ec096304a":["d7fdc63b467a1f8d68d35c0f1b4bb61d1fc64ef5","e7bbe2c8b74e0e1582b3bb4518332fef84dcd8cb"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["f4abec28b874149a7223e32cc7a01704c27790de","d7fdc63b467a1f8d68d35c0f1b4bb61d1fc64ef5"],"e7bbe2c8b74e0e1582b3bb4518332fef84dcd8cb":["d7fdc63b467a1f8d68d35c0f1b4bb61d1fc64ef5"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["d7fdc63b467a1f8d68d35c0f1b4bb61d1fc64ef5","e7bbe2c8b74e0e1582b3bb4518332fef84dcd8cb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba0cc621c4f42109fca8c021dee0f2f6b36b9c3e"]},"commit2Childs":{"d7fdc63b467a1f8d68d35c0f1b4bb61d1fc64ef5":["83870855d82aba6819217abeff5a40779dbb28b4","28288370235ed02234a64753cdbf0c6ec096304a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","e7bbe2c8b74e0e1582b3bb4518332fef84dcd8cb","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"ba0cc621c4f42109fca8c021dee0f2f6b36b9c3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"83870855d82aba6819217abeff5a40779dbb28b4":[],"f4abec28b874149a7223e32cc7a01704c27790de":["d7fdc63b467a1f8d68d35c0f1b4bb61d1fc64ef5","83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"28288370235ed02234a64753cdbf0c6ec096304a":["ba0cc621c4f42109fca8c021dee0f2f6b36b9c3e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"e7bbe2c8b74e0e1582b3bb4518332fef84dcd8cb":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["f4abec28b874149a7223e32cc7a01704c27790de"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}