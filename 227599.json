{"path":"solr/core/src/java/org/apache/solr/schema/BoolFieldSource[BoolField]#getValues(Map,LeafReaderContext).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/BoolFieldSource[BoolField]#getValues(Map,LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final SortedDocValues sindex = DocValues.getSorted(readerContext.reader(), field);\n\n    // figure out what ord maps to true\n    int nord = sindex.getValueCount();\n    // if no values in the segment, default trueOrd to something other then -1 (missing)\n    int tord = -2;\n    for (int i=0; i<nord; i++) {\n      final BytesRef br = sindex.lookupOrd(i);\n      if (br.length==1 && br.bytes[br.offset]=='T') {\n        tord = i;\n        break;\n      }\n    }\n\n    final int trueOrd = tord;\n\n    return new BoolDocValues(this) {\n      @Override\n      public boolean boolVal(int doc) {\n        return sindex.getOrd(doc) == trueOrd;\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        return sindex.getOrd(doc) != -1;\n      }\n\n      @Override\n      public ValueFiller getValueFiller() {\n        return new ValueFiller() {\n          private final MutableValueBool mval = new MutableValueBool();\n\n          @Override\n          public MutableValue getValue() {\n            return mval;\n          }\n\n          @Override\n          public void fillValue(int doc) {\n            int ord = sindex.getOrd(doc);\n            mval.value = (ord == trueOrd);\n            mval.exists = (ord != -1);\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/BoolFieldSource[BoolField]#getValues(Map,LeafReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/BoolFieldSource[BoolField]#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final SortedDocValues sindex = DocValues.getSorted(readerContext.reader(), field);\n\n    // figure out what ord maps to true\n    int nord = sindex.getValueCount();\n    // if no values in the segment, default trueOrd to something other then -1 (missing)\n    int tord = -2;\n    for (int i=0; i<nord; i++) {\n      final BytesRef br = sindex.lookupOrd(i);\n      if (br.length==1 && br.bytes[br.offset]=='T') {\n        tord = i;\n        break;\n      }\n    }\n\n    final int trueOrd = tord;\n\n    return new BoolDocValues(this) {\n\n      private int getOrdForDoc(int doc) throws IOException {\n        if (doc > sindex.docID()) {\n          sindex.advance(doc);\n        }\n        if (doc == sindex.docID()) {\n          return sindex.ordValue();\n        } else {\n          return -1;\n        }\n      }\n      @Override\n      \n      public boolean boolVal(int doc) throws IOException {\n        return getOrdForDoc(doc) == trueOrd;\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return getOrdForDoc(doc) != -1;\n      }\n\n      @Override\n      public ValueFiller getValueFiller() {\n        return new ValueFiller() {\n          private final MutableValueBool mval = new MutableValueBool();\n\n          @Override\n          public MutableValue getValue() {\n            return mval;\n          }\n\n          @Override\n          public void fillValue(int doc) throws IOException {\n            int ord = getOrdForDoc(doc);\n            mval.value = (ord == trueOrd);\n            mval.exists = (ord != -1);\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final SortedDocValues sindex = DocValues.getSorted(readerContext.reader(), field);\n\n    // figure out what ord maps to true\n    int nord = sindex.getValueCount();\n    // if no values in the segment, default trueOrd to something other then -1 (missing)\n    int tord = -2;\n    for (int i=0; i<nord; i++) {\n      final BytesRef br = sindex.lookupOrd(i);\n      if (br.length==1 && br.bytes[br.offset]=='T') {\n        tord = i;\n        break;\n      }\n    }\n\n    final int trueOrd = tord;\n\n    return new BoolDocValues(this) {\n      @Override\n      public boolean boolVal(int doc) {\n        return sindex.getOrd(doc) == trueOrd;\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        return sindex.getOrd(doc) != -1;\n      }\n\n      @Override\n      public ValueFiller getValueFiller() {\n        return new ValueFiller() {\n          private final MutableValueBool mval = new MutableValueBool();\n\n          @Override\n          public MutableValue getValue() {\n            return mval;\n          }\n\n          @Override\n          public void fillValue(int doc) {\n            int ord = sindex.getOrd(doc);\n            mval.value = (ord == trueOrd);\n            mval.exists = (ord != -1);\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/BoolFieldSource[BoolField]#getValues(Map,LeafReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/BoolFieldSource[BoolField]#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final SortedDocValues sindex = DocValues.getSorted(readerContext.reader(), field);\n\n    // figure out what ord maps to true\n    int nord = sindex.getValueCount();\n    // if no values in the segment, default trueOrd to something other then -1 (missing)\n    int tord = -2;\n    for (int i=0; i<nord; i++) {\n      final BytesRef br = sindex.lookupOrd(i);\n      if (br.length==1 && br.bytes[br.offset]=='T') {\n        tord = i;\n        break;\n      }\n    }\n\n    final int trueOrd = tord;\n\n    return new BoolDocValues(this) {\n\n      private int getOrdForDoc(int doc) throws IOException {\n        if (doc > sindex.docID()) {\n          sindex.advance(doc);\n        }\n        if (doc == sindex.docID()) {\n          return sindex.ordValue();\n        } else {\n          return -1;\n        }\n      }\n      @Override\n      \n      public boolean boolVal(int doc) throws IOException {\n        return getOrdForDoc(doc) == trueOrd;\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return getOrdForDoc(doc) != -1;\n      }\n\n      @Override\n      public ValueFiller getValueFiller() {\n        return new ValueFiller() {\n          private final MutableValueBool mval = new MutableValueBool();\n\n          @Override\n          public MutableValue getValue() {\n            return mval;\n          }\n\n          @Override\n          public void fillValue(int doc) throws IOException {\n            int ord = getOrdForDoc(doc);\n            mval.value = (ord == trueOrd);\n            mval.exists = (ord != -1);\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final SortedDocValues sindex = DocValues.getSorted(readerContext.reader(), field);\n\n    // figure out what ord maps to true\n    int nord = sindex.getValueCount();\n    // if no values in the segment, default trueOrd to something other then -1 (missing)\n    int tord = -2;\n    for (int i=0; i<nord; i++) {\n      final BytesRef br = sindex.lookupOrd(i);\n      if (br.length==1 && br.bytes[br.offset]=='T') {\n        tord = i;\n        break;\n      }\n    }\n\n    final int trueOrd = tord;\n\n    return new BoolDocValues(this) {\n      @Override\n      public boolean boolVal(int doc) {\n        return sindex.getOrd(doc) == trueOrd;\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        return sindex.getOrd(doc) != -1;\n      }\n\n      @Override\n      public ValueFiller getValueFiller() {\n        return new ValueFiller() {\n          private final MutableValueBool mval = new MutableValueBool();\n\n          @Override\n          public MutableValue getValue() {\n            return mval;\n          }\n\n          @Override\n          public void fillValue(int doc) {\n            int ord = sindex.getOrd(doc);\n            mval.value = (ord == trueOrd);\n            mval.exists = (ord != -1);\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/BoolFieldSource[BoolField]#getValues(Map,LeafReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/BoolFieldSource[BoolField]#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final SortedDocValues sindex = DocValues.getSorted(readerContext.reader(), field);\n\n    // figure out what ord maps to true\n    int nord = sindex.getValueCount();\n    // if no values in the segment, default trueOrd to something other then -1 (missing)\n    int tord = -2;\n    for (int i=0; i<nord; i++) {\n      final BytesRef br = sindex.lookupOrd(i);\n      if (br.length==1 && br.bytes[br.offset]=='T') {\n        tord = i;\n        break;\n      }\n    }\n\n    final int trueOrd = tord;\n\n    return new BoolDocValues(this) {\n\n      private int getOrdForDoc(int doc) throws IOException {\n        if (doc > sindex.docID()) {\n          sindex.advance(doc);\n        }\n        if (doc == sindex.docID()) {\n          return sindex.ordValue();\n        } else {\n          return -1;\n        }\n      }\n      @Override\n      \n      public boolean boolVal(int doc) throws IOException {\n        return getOrdForDoc(doc) == trueOrd;\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return getOrdForDoc(doc) != -1;\n      }\n\n      @Override\n      public ValueFiller getValueFiller() {\n        return new ValueFiller() {\n          private final MutableValueBool mval = new MutableValueBool();\n\n          @Override\n          public MutableValue getValue() {\n            return mval;\n          }\n\n          @Override\n          public void fillValue(int doc) throws IOException {\n            int ord = getOrdForDoc(doc);\n            mval.value = (ord == trueOrd);\n            mval.exists = (ord != -1);\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final SortedDocValues sindex = DocValues.getSorted(readerContext.reader(), field);\n\n    // figure out what ord maps to true\n    int nord = sindex.getValueCount();\n    // if no values in the segment, default trueOrd to something other then -1 (missing)\n    int tord = -2;\n    for (int i=0; i<nord; i++) {\n      final BytesRef br = sindex.lookupOrd(i);\n      if (br.length==1 && br.bytes[br.offset]=='T') {\n        tord = i;\n        break;\n      }\n    }\n\n    final int trueOrd = tord;\n\n    return new BoolDocValues(this) {\n      @Override\n      public boolean boolVal(int doc) {\n        return sindex.getOrd(doc) == trueOrd;\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        return sindex.getOrd(doc) != -1;\n      }\n\n      @Override\n      public ValueFiller getValueFiller() {\n        return new ValueFiller() {\n          private final MutableValueBool mval = new MutableValueBool();\n\n          @Override\n          public MutableValue getValue() {\n            return mval;\n          }\n\n          @Override\n          public void fillValue(int doc) {\n            int ord = sindex.getOrd(doc);\n            mval.value = (ord == trueOrd);\n            mval.exists = (ord != -1);\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"216b828f4f2341ae2e70eb7585059e3576e4cb99","date":1570451249,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/BoolFieldSource[BoolField]#getValues(Map,LeafReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/BoolFieldSource[BoolField]#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final SortedDocValues sindex = DocValues.getSorted(readerContext.reader(), field);\n\n    // figure out what ord maps to true\n    int nord = sindex.getValueCount();\n    // if no values in the segment, default trueOrd to something other then -1 (missing)\n    int tord = -2;\n    for (int i=0; i<nord; i++) {\n      final BytesRef br = sindex.lookupOrd(i);\n      if (br.length==1 && br.bytes[br.offset]=='T') {\n        tord = i;\n        break;\n      }\n    }\n\n    final int trueOrd = tord;\n\n    return new BoolDocValues(this) {\n\n      private int getOrdForDoc(int doc) throws IOException {\n        if (doc > sindex.docID()) {\n          sindex.advance(doc);\n        }\n        if (doc == sindex.docID()) {\n          return sindex.ordValue();\n        } else {\n          return -1;\n        }\n      }\n\n      @Override\n      public boolean boolVal(int doc) throws IOException {\n        return getOrdForDoc(doc) == trueOrd;\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return getOrdForDoc(doc) != -1;\n      }\n\n      @Override\n      public ValueFiller getValueFiller() {\n        return new ValueFiller() {\n          private final MutableValueBool mval = new MutableValueBool();\n\n          @Override\n          public MutableValue getValue() {\n            return mval;\n          }\n\n          @Override\n          public void fillValue(int doc) throws IOException {\n            int ord = getOrdForDoc(doc);\n            mval.value = (ord == trueOrd);\n            mval.exists = (ord != -1);\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final SortedDocValues sindex = DocValues.getSorted(readerContext.reader(), field);\n\n    // figure out what ord maps to true\n    int nord = sindex.getValueCount();\n    // if no values in the segment, default trueOrd to something other then -1 (missing)\n    int tord = -2;\n    for (int i=0; i<nord; i++) {\n      final BytesRef br = sindex.lookupOrd(i);\n      if (br.length==1 && br.bytes[br.offset]=='T') {\n        tord = i;\n        break;\n      }\n    }\n\n    final int trueOrd = tord;\n\n    return new BoolDocValues(this) {\n\n      private int getOrdForDoc(int doc) throws IOException {\n        if (doc > sindex.docID()) {\n          sindex.advance(doc);\n        }\n        if (doc == sindex.docID()) {\n          return sindex.ordValue();\n        } else {\n          return -1;\n        }\n      }\n      @Override\n      \n      public boolean boolVal(int doc) throws IOException {\n        return getOrdForDoc(doc) == trueOrd;\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return getOrdForDoc(doc) != -1;\n      }\n\n      @Override\n      public ValueFiller getValueFiller() {\n        return new ValueFiller() {\n          private final MutableValueBool mval = new MutableValueBool();\n\n          @Override\n          public MutableValue getValue() {\n            return mval;\n          }\n\n          @Override\n          public void fillValue(int doc) throws IOException {\n            int ord = getOrdForDoc(doc);\n            mval.value = (ord == trueOrd);\n            mval.exists = (ord != -1);\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/BoolFieldSource[BoolField]#getValues(Map,LeafReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/BoolFieldSource[BoolField]#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final SortedDocValues sindex = DocValues.getSorted(readerContext.reader(), field);\n\n    // figure out what ord maps to true\n    int nord = sindex.getValueCount();\n    // if no values in the segment, default trueOrd to something other then -1 (missing)\n    int tord = -2;\n    for (int i=0; i<nord; i++) {\n      final BytesRef br = sindex.lookupOrd(i);\n      if (br.length==1 && br.bytes[br.offset]=='T') {\n        tord = i;\n        break;\n      }\n    }\n\n    final int trueOrd = tord;\n\n    return new BoolDocValues(this) {\n\n      private int getOrdForDoc(int doc) throws IOException {\n        if (doc > sindex.docID()) {\n          sindex.advance(doc);\n        }\n        if (doc == sindex.docID()) {\n          return sindex.ordValue();\n        } else {\n          return -1;\n        }\n      }\n\n      @Override\n      public boolean boolVal(int doc) throws IOException {\n        return getOrdForDoc(doc) == trueOrd;\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return getOrdForDoc(doc) != -1;\n      }\n\n      @Override\n      public ValueFiller getValueFiller() {\n        return new ValueFiller() {\n          private final MutableValueBool mval = new MutableValueBool();\n\n          @Override\n          public MutableValue getValue() {\n            return mval;\n          }\n\n          @Override\n          public void fillValue(int doc) throws IOException {\n            int ord = getOrdForDoc(doc);\n            mval.value = (ord == trueOrd);\n            mval.exists = (ord != -1);\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final SortedDocValues sindex = DocValues.getSorted(readerContext.reader(), field);\n\n    // figure out what ord maps to true\n    int nord = sindex.getValueCount();\n    // if no values in the segment, default trueOrd to something other then -1 (missing)\n    int tord = -2;\n    for (int i=0; i<nord; i++) {\n      final BytesRef br = sindex.lookupOrd(i);\n      if (br.length==1 && br.bytes[br.offset]=='T') {\n        tord = i;\n        break;\n      }\n    }\n\n    final int trueOrd = tord;\n\n    return new BoolDocValues(this) {\n\n      private int getOrdForDoc(int doc) throws IOException {\n        if (doc > sindex.docID()) {\n          sindex.advance(doc);\n        }\n        if (doc == sindex.docID()) {\n          return sindex.ordValue();\n        } else {\n          return -1;\n        }\n      }\n      @Override\n      \n      public boolean boolVal(int doc) throws IOException {\n        return getOrdForDoc(doc) == trueOrd;\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return getOrdForDoc(doc) != -1;\n      }\n\n      @Override\n      public ValueFiller getValueFiller() {\n        return new ValueFiller() {\n          private final MutableValueBool mval = new MutableValueBool();\n\n          @Override\n          public MutableValue getValue() {\n            return mval;\n          }\n\n          @Override\n          public void fillValue(int doc) throws IOException {\n            int ord = getOrdForDoc(doc);\n            mval.value = (ord == trueOrd);\n            mval.exists = (ord != -1);\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"248f6ecc900c3a5633fd5ca6f564ea8b717720da","date":1588863846,"type":4,"author":"Mike Drob","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/schema/BoolFieldSource[BoolField]#getValues(Map,LeafReaderContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final SortedDocValues sindex = DocValues.getSorted(readerContext.reader(), field);\n\n    // figure out what ord maps to true\n    int nord = sindex.getValueCount();\n    // if no values in the segment, default trueOrd to something other then -1 (missing)\n    int tord = -2;\n    for (int i=0; i<nord; i++) {\n      final BytesRef br = sindex.lookupOrd(i);\n      if (br.length==1 && br.bytes[br.offset]=='T') {\n        tord = i;\n        break;\n      }\n    }\n\n    final int trueOrd = tord;\n\n    return new BoolDocValues(this) {\n\n      private int getOrdForDoc(int doc) throws IOException {\n        if (doc > sindex.docID()) {\n          sindex.advance(doc);\n        }\n        if (doc == sindex.docID()) {\n          return sindex.ordValue();\n        } else {\n          return -1;\n        }\n      }\n\n      @Override\n      public boolean boolVal(int doc) throws IOException {\n        return getOrdForDoc(doc) == trueOrd;\n      }\n\n      @Override\n      public boolean exists(int doc) throws IOException {\n        return getOrdForDoc(doc) != -1;\n      }\n\n      @Override\n      public ValueFiller getValueFiller() {\n        return new ValueFiller() {\n          private final MutableValueBool mval = new MutableValueBool();\n\n          @Override\n          public MutableValue getValue() {\n            return mval;\n          }\n\n          @Override\n          public void fillValue(int doc) throws IOException {\n            int ord = getOrdForDoc(doc);\n            mval.value = (ord == trueOrd);\n            mval.exists = (ord != -1);\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"216b828f4f2341ae2e70eb7585059e3576e4cb99":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["216b828f4f2341ae2e70eb7585059e3576e4cb99"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["c9fb5f46e264daf5ba3860defe623a89d202dd87","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["c9fb5f46e264daf5ba3860defe623a89d202dd87","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"],"b0b597c65628ca9e73913a07e81691f8229bae35":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","216b828f4f2341ae2e70eb7585059e3576e4cb99"]},"commit2Childs":{"216b828f4f2341ae2e70eb7585059e3576e4cb99":["248f6ecc900c3a5633fd5ca6f564ea8b717720da","b0b597c65628ca9e73913a07e81691f8229bae35"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["216b828f4f2341ae2e70eb7585059e3576e4cb99","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","b0b597c65628ca9e73913a07e81691f8229bae35"],"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}