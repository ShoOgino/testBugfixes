{"path":"solr/core/src/java/org/apache/solr/security/JWTAuthPlugin#authenticationFailure(HttpServletResponse,String,int,BearerWwwAuthErrorCode).mjava","commits":[{"id":"bb3e075eaa5788b2762ec235bf72b069cefe3f50","date":1548244981,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/JWTAuthPlugin#authenticationFailure(HttpServletResponse,String,int,BearerWwwAuthErrorCode).mjava","pathOld":"/dev/null","sourceNew":"  private void authenticationFailure(HttpServletResponse response, String message, int httpCode, BearerWwwAuthErrorCode responseError) throws IOException {\n    List<String> wwwAuthParams = new ArrayList<>();\n    wwwAuthParams.add(\"Bearer realm=\\\"\" + AUTH_REALM + \"\\\"\");\n    if (responseError != null) {\n      wwwAuthParams.add(\"error=\\\"\" + responseError + \"\\\"\");\n      wwwAuthParams.add(\"error_description=\\\"\" + message + \"\\\"\");\n    }\n    response.addHeader(HttpHeaders.WWW_AUTHENTICATE, org.apache.commons.lang.StringUtils.join(wwwAuthParams, \", \"));\n    response.addHeader(AuthenticationPlugin.HTTP_HEADER_X_SOLR_AUTHDATA, generateAuthDataHeader());\n    response.sendError(httpCode, message);\n    log.info(\"JWT Authentication attempt failed: {}\", message);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f4581306d6bfea0c805da045fbab70c7ff759a99"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2682a1cd25864ccdc1b44bf047bd08700f28ba06","date":1548321910,"type":0,"author":"Tommaso Teofili","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/JWTAuthPlugin#authenticationFailure(HttpServletResponse,String,int,BearerWwwAuthErrorCode).mjava","pathOld":"/dev/null","sourceNew":"  private void authenticationFailure(HttpServletResponse response, String message, int httpCode, BearerWwwAuthErrorCode responseError) throws IOException {\n    List<String> wwwAuthParams = new ArrayList<>();\n    wwwAuthParams.add(\"Bearer realm=\\\"\" + AUTH_REALM + \"\\\"\");\n    if (responseError != null) {\n      wwwAuthParams.add(\"error=\\\"\" + responseError + \"\\\"\");\n      wwwAuthParams.add(\"error_description=\\\"\" + message + \"\\\"\");\n    }\n    response.addHeader(HttpHeaders.WWW_AUTHENTICATE, org.apache.commons.lang.StringUtils.join(wwwAuthParams, \", \"));\n    response.addHeader(AuthenticationPlugin.HTTP_HEADER_X_SOLR_AUTHDATA, generateAuthDataHeader());\n    response.sendError(httpCode, message);\n    log.info(\"JWT Authentication attempt failed: {}\", message);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ac6494315d04f68950d2f00f5436b4861bcd467","date":1553125039,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/JWTAuthPlugin#authenticationFailure(HttpServletResponse,String,int,BearerWwwAuthErrorCode).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/JWTAuthPlugin#authenticationFailure(HttpServletResponse,String,int,BearerWwwAuthErrorCode).mjava","sourceNew":"  private void authenticationFailure(HttpServletResponse response, String message, int httpCode, BearerWwwAuthErrorCode responseError) throws IOException {\n    List<String> wwwAuthParams = new ArrayList<>();\n    wwwAuthParams.add(\"Bearer realm=\\\"\" + AUTH_REALM + \"\\\"\");\n    if (responseError != null) {\n      wwwAuthParams.add(\"error=\\\"\" + responseError + \"\\\"\");\n      wwwAuthParams.add(\"error_description=\\\"\" + message + \"\\\"\");\n    }\n    response.addHeader(HttpHeaders.WWW_AUTHENTICATE, String.join(\", \", wwwAuthParams));\n    response.addHeader(AuthenticationPlugin.HTTP_HEADER_X_SOLR_AUTHDATA, generateAuthDataHeader());\n    response.sendError(httpCode, message);\n    log.info(\"JWT Authentication attempt failed: {}\", message);\n  }\n\n","sourceOld":"  private void authenticationFailure(HttpServletResponse response, String message, int httpCode, BearerWwwAuthErrorCode responseError) throws IOException {\n    List<String> wwwAuthParams = new ArrayList<>();\n    wwwAuthParams.add(\"Bearer realm=\\\"\" + AUTH_REALM + \"\\\"\");\n    if (responseError != null) {\n      wwwAuthParams.add(\"error=\\\"\" + responseError + \"\\\"\");\n      wwwAuthParams.add(\"error_description=\\\"\" + message + \"\\\"\");\n    }\n    response.addHeader(HttpHeaders.WWW_AUTHENTICATE, org.apache.commons.lang.StringUtils.join(wwwAuthParams, \", \"));\n    response.addHeader(AuthenticationPlugin.HTTP_HEADER_X_SOLR_AUTHDATA, generateAuthDataHeader());\n    response.sendError(httpCode, message);\n    log.info(\"JWT Authentication attempt failed: {}\", message);\n  }\n\n","bugFix":null,"bugIntro":["f4581306d6bfea0c805da045fbab70c7ff759a99"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1ac780c217504f0ca673ac5dcb98768984267c60","date":1568879420,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/JWTAuthPlugin#authenticationFailure(HttpServletResponse,String,int,BearerWwwAuthErrorCode).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/JWTAuthPlugin#authenticationFailure(HttpServletResponse,String,int,BearerWwwAuthErrorCode).mjava","sourceNew":"  private void authenticationFailure(HttpServletResponse response, String message, int httpCode, BearerWwwAuthErrorCode responseError) throws IOException {\n    List<String> wwwAuthParams = new ArrayList<>();\n    wwwAuthParams.add(\"Bearer realm=\\\"\" + realm + \"\\\"\");\n    if (responseError != null) {\n      wwwAuthParams.add(\"error=\\\"\" + responseError + \"\\\"\");\n      wwwAuthParams.add(\"error_description=\\\"\" + message + \"\\\"\");\n    }\n    response.addHeader(HttpHeaders.WWW_AUTHENTICATE, String.join(\", \", wwwAuthParams));\n    response.addHeader(AuthenticationPlugin.HTTP_HEADER_X_SOLR_AUTHDATA, generateAuthDataHeader());\n    response.sendError(httpCode, message);\n    log.info(\"JWT Authentication attempt failed: {}\", message);\n  }\n\n","sourceOld":"  private void authenticationFailure(HttpServletResponse response, String message, int httpCode, BearerWwwAuthErrorCode responseError) throws IOException {\n    List<String> wwwAuthParams = new ArrayList<>();\n    wwwAuthParams.add(\"Bearer realm=\\\"\" + AUTH_REALM + \"\\\"\");\n    if (responseError != null) {\n      wwwAuthParams.add(\"error=\\\"\" + responseError + \"\\\"\");\n      wwwAuthParams.add(\"error_description=\\\"\" + message + \"\\\"\");\n    }\n    response.addHeader(HttpHeaders.WWW_AUTHENTICATE, String.join(\", \", wwwAuthParams));\n    response.addHeader(AuthenticationPlugin.HTTP_HEADER_X_SOLR_AUTHDATA, generateAuthDataHeader());\n    response.sendError(httpCode, message);\n    log.info(\"JWT Authentication attempt failed: {}\", message);\n  }\n\n","bugFix":null,"bugIntro":["f4581306d6bfea0c805da045fbab70c7ff759a99"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f4581306d6bfea0c805da045fbab70c7ff759a99","date":1579787496,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/JWTAuthPlugin#authenticationFailure(HttpServletResponse,String,int,BearerWwwAuthErrorCode).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/JWTAuthPlugin#authenticationFailure(HttpServletResponse,String,int,BearerWwwAuthErrorCode).mjava","sourceNew":"  private void authenticationFailure(HttpServletResponse response, String message, int httpCode, BearerWwwAuthErrorCode responseError) throws IOException {\n    getPromptHeaders(responseError, message).forEach(response::setHeader);\n    response.sendError(httpCode, message);\n    log.info(\"JWT Authentication attempt failed: {}\", message);\n  }\n\n","sourceOld":"  private void authenticationFailure(HttpServletResponse response, String message, int httpCode, BearerWwwAuthErrorCode responseError) throws IOException {\n    List<String> wwwAuthParams = new ArrayList<>();\n    wwwAuthParams.add(\"Bearer realm=\\\"\" + realm + \"\\\"\");\n    if (responseError != null) {\n      wwwAuthParams.add(\"error=\\\"\" + responseError + \"\\\"\");\n      wwwAuthParams.add(\"error_description=\\\"\" + message + \"\\\"\");\n    }\n    response.addHeader(HttpHeaders.WWW_AUTHENTICATE, String.join(\", \", wwwAuthParams));\n    response.addHeader(AuthenticationPlugin.HTTP_HEADER_X_SOLR_AUTHDATA, generateAuthDataHeader());\n    response.sendError(httpCode, message);\n    log.info(\"JWT Authentication attempt failed: {}\", message);\n  }\n\n","bugFix":["bb3e075eaa5788b2762ec235bf72b069cefe3f50","0ac6494315d04f68950d2f00f5436b4861bcd467","1ac780c217504f0ca673ac5dcb98768984267c60"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0ac6494315d04f68950d2f00f5436b4861bcd467":["bb3e075eaa5788b2762ec235bf72b069cefe3f50"],"1ac780c217504f0ca673ac5dcb98768984267c60":["0ac6494315d04f68950d2f00f5436b4861bcd467"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4581306d6bfea0c805da045fbab70c7ff759a99":["1ac780c217504f0ca673ac5dcb98768984267c60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4581306d6bfea0c805da045fbab70c7ff759a99"],"bb3e075eaa5788b2762ec235bf72b069cefe3f50":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bb3e075eaa5788b2762ec235bf72b069cefe3f50"]},"commit2Childs":{"0ac6494315d04f68950d2f00f5436b4861bcd467":["1ac780c217504f0ca673ac5dcb98768984267c60"],"1ac780c217504f0ca673ac5dcb98768984267c60":["f4581306d6bfea0c805da045fbab70c7ff759a99"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb3e075eaa5788b2762ec235bf72b069cefe3f50","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"f4581306d6bfea0c805da045fbab70c7ff759a99":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bb3e075eaa5788b2762ec235bf72b069cefe3f50":["0ac6494315d04f68950d2f00f5436b4861bcd467","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}