{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNormValues(FieldInfo).mjava","commits":[{"id":"8435160e9702b19398118ddf76b61c846612b6a4","date":1380349140,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNormValues(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNormValues(String).mjava","sourceNew":"  NumericDocValues getNormValues(FieldInfo fi) throws IOException {\n    assert normsProducer != null;\n\n    Map<String,Object> normFields = normsLocal.get();\n\n    NumericDocValues norms = (NumericDocValues) normFields.get(fi.name);\n    if (norms == null) {\n      norms = normsProducer.getNumeric(fi);\n      normFields.put(fi.name, norms);\n    }\n\n    return norms;\n  }\n\n","sourceOld":"  NumericDocValues getNormValues(String field) throws IOException {\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (!fi.hasNorms()) {\n      return null;\n    }\n   \n    assert normsProducer != null;\n\n    Map<String,Object> normFields = normsLocal.get();\n\n    NumericDocValues norms = (NumericDocValues) normFields.get(field);\n    if (norms == null) {\n      norms = normsProducer.getNumeric(fi);\n      normFields.put(field, norms);\n    }\n\n    return norms;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93f724123ee2d5ffea549b41729efe1b2386a815","date":1400842169,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders#getNormValues(FieldInfo).mjava","sourceNew":null,"sourceOld":"  NumericDocValues getNormValues(FieldInfo fi) throws IOException {\n    assert normsProducer != null;\n\n    Map<String,Object> normFields = normsLocal.get();\n\n    NumericDocValues norms = (NumericDocValues) normFields.get(fi.name);\n    if (norms == null) {\n      norms = normsProducer.getNumeric(fi);\n      normFields.put(fi.name, norms);\n    }\n\n    return norms;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"93f724123ee2d5ffea549b41729efe1b2386a815":["8435160e9702b19398118ddf76b61c846612b6a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8435160e9702b19398118ddf76b61c846612b6a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93f724123ee2d5ffea549b41729efe1b2386a815"]},"commit2Childs":{"93f724123ee2d5ffea549b41729efe1b2386a815":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8435160e9702b19398118ddf76b61c846612b6a4"],"8435160e9702b19398118ddf76b61c846612b6a4":["93f724123ee2d5ffea549b41729efe1b2386a815"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}