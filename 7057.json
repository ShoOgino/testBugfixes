{"path":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory.FeatureTransformer#transform(SolrDocument,int,float).mjava","commits":[{"id":"eec520bd69db5e7976780e93a0dfc7c0f0e75c2e","date":1478891880,"type":1,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory.FeatureTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/response/transform/LTRFeatureLoggerTransformerFactory.FeatureTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid, float score)\n        throws IOException {\n      Object fv = featureLogger.getFeatureVector(docid, scoringQuery, searcher);\n      if (fv == null) { // FV for this document was not in the cache\n        fv = featureLogger.makeFeatureVector(\n            LTRRescorer.extractFeaturesInfo(\n                modelWeight,\n                docid,\n                (docsWereNotReranked ? new Float(score) : null),\n                leafContexts));\n      }\n\n      doc.addField(name, fv);\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid, float score)\n        throws IOException {\n      Object fv = featureLogger.getFeatureVector(docid, scoringQuery, searcher);\n      if (fv == null) { // FV for this document was not in the cache\n        fv = featureLogger.makeFeatureVector(\n            LTRRescorer.extractFeaturesInfo(\n                modelWeight,\n                docid,\n                (docsWereNotReranked ? new Float(score) : null),\n                leafContexts));\n      }\n\n      doc.addField(name, fv);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2459db523605752a3affcf444fb717d625904488","date":1478970978,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory.FeatureTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/response/transform/LTRFeatureLoggerTransformerFactory.FeatureTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid, float score)\n        throws IOException {\n      Object fv = featureLogger.getFeatureVector(docid, scoringQuery, searcher);\n      if (fv == null) { // FV for this document was not in the cache\n        fv = featureLogger.makeFeatureVector(\n            LTRRescorer.extractFeaturesInfo(\n                modelWeight,\n                docid,\n                (docsWereNotReranked ? new Float(score) : null),\n                leafContexts));\n      }\n\n      doc.addField(name, fv);\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid, float score)\n        throws IOException {\n      Object fv = featureLogger.getFeatureVector(docid, scoringQuery, searcher);\n      if (fv == null) { // FV for this document was not in the cache\n        fv = featureLogger.makeFeatureVector(\n            LTRRescorer.extractFeaturesInfo(\n                modelWeight,\n                docid,\n                (docsWereNotReranked ? new Float(score) : null),\n                leafContexts));\n      }\n\n      doc.addField(name, fv);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"320eec6599df6f97f2461a5d1ad49cd93b324a14","date":1503502574,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory.FeatureTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory.FeatureTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid, float score)\n        throws IOException {\n      implTransform(doc, docid, new Float(score));\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid, float score)\n        throws IOException {\n      Object fv = featureLogger.getFeatureVector(docid, scoringQuery, searcher);\n      if (fv == null) { // FV for this document was not in the cache\n        fv = featureLogger.makeFeatureVector(\n            LTRRescorer.extractFeaturesInfo(\n                modelWeight,\n                docid,\n                (docsWereNotReranked ? new Float(score) : null),\n                leafContexts));\n      }\n\n      doc.addField(name, fv);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"182384b20c064aa16998ddebe9f36e649279c5a6","date":1503596494,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory.FeatureTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory.FeatureTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid, float score)\n        throws IOException {\n      implTransform(doc, docid, new Float(score));\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid, float score)\n        throws IOException {\n      Object fv = featureLogger.getFeatureVector(docid, scoringQuery, searcher);\n      if (fv == null) { // FV for this document was not in the cache\n        fv = featureLogger.makeFeatureVector(\n            LTRRescorer.extractFeaturesInfo(\n                modelWeight,\n                docid,\n                (docsWereNotReranked ? new Float(score) : null),\n                leafContexts));\n      }\n\n      doc.addField(name, fv);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory.FeatureTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory.FeatureTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid, float score)\n        throws IOException {\n      implTransform(doc, docid, new Float(score));\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid, float score)\n        throws IOException {\n      Object fv = featureLogger.getFeatureVector(docid, scoringQuery, searcher);\n      if (fv == null) { // FV for this document was not in the cache\n        fv = featureLogger.makeFeatureVector(\n            LTRRescorer.extractFeaturesInfo(\n                modelWeight,\n                docid,\n                (docsWereNotReranked ? new Float(score) : null),\n                leafContexts));\n      }\n\n      doc.addField(name, fv);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","date":1528054850,"type":3,"author":"Michael Braun","isMerge":false,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory.FeatureTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory.FeatureTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid, float score)\n        throws IOException {\n      implTransform(doc, docid, score);\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid, float score)\n        throws IOException {\n      implTransform(doc, docid, new Float(score));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"628903f37b6c442da0d390db1c6af9a0e74d41a7","date":1531736685,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory.FeatureTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory.FeatureTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid, float score)\n        throws IOException {\n      implTransform(doc, docid, score);\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid, float score)\n        throws IOException {\n      implTransform(doc, docid, new Float(score));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory.FeatureTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/contrib/ltr/src/java/org/apache/solr/ltr/response/transform/LTRFeatureLoggerTransformerFactory.FeatureTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid, float score)\n        throws IOException {\n      implTransform(doc, docid, score);\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid, float score)\n        throws IOException {\n      implTransform(doc, docid, new Float(score));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["182384b20c064aa16998ddebe9f36e649279c5a6"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["182384b20c064aa16998ddebe9f36e649279c5a6","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["eec520bd69db5e7976780e93a0dfc7c0f0e75c2e","182384b20c064aa16998ddebe9f36e649279c5a6"],"320eec6599df6f97f2461a5d1ad49cd93b324a14":["eec520bd69db5e7976780e93a0dfc7c0f0e75c2e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"182384b20c064aa16998ddebe9f36e649279c5a6":["eec520bd69db5e7976780e93a0dfc7c0f0e75c2e","320eec6599df6f97f2461a5d1ad49cd93b324a14"],"eec520bd69db5e7976780e93a0dfc7c0f0e75c2e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2459db523605752a3affcf444fb717d625904488":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eec520bd69db5e7976780e93a0dfc7c0f0e75c2e"],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["182384b20c064aa16998ddebe9f36e649279c5a6","b6a269c1ddba3f8c9fa9a40572ecc538eddda41a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["628903f37b6c442da0d390db1c6af9a0e74d41a7"]},"commit2Childs":{"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["628903f37b6c442da0d390db1c6af9a0e74d41a7"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"320eec6599df6f97f2461a5d1ad49cd93b324a14":["182384b20c064aa16998ddebe9f36e649279c5a6"],"182384b20c064aa16998ddebe9f36e649279c5a6":["b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","3a7809d1d753b67f48b1a706e17034bf8b624ea3","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eec520bd69db5e7976780e93a0dfc7c0f0e75c2e","2459db523605752a3affcf444fb717d625904488"],"eec520bd69db5e7976780e93a0dfc7c0f0e75c2e":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","320eec6599df6f97f2461a5d1ad49cd93b324a14","182384b20c064aa16998ddebe9f36e649279c5a6","2459db523605752a3affcf444fb717d625904488"],"2459db523605752a3affcf444fb717d625904488":[],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","3a7809d1d753b67f48b1a706e17034bf8b624ea3","2459db523605752a3affcf444fb717d625904488","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}