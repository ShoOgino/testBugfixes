{"path":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpClientBase#throwKnownError(HttpResponse,StatusLine).mjava","commits":[{"id":"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4","date":1368446242,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpClientBase#throwKnownError(HttpResponse,StatusLine).mjava","pathOld":"/dev/null","sourceNew":"  protected void throwKnownError(HttpResponse response, StatusLine statusLine) throws IOException {\n    ObjectInputStream in = null;\n    try {\n      in = new ObjectInputStream(response.getEntity().getContent());\n    } catch (Exception e) {\n      // the response stream is not an exception - could be an error in servlet.init().\n      throw new RuntimeException(\"Uknown error: \" + statusLine);\n    }\n    \n    Throwable t;\n    try {\n      t = (Throwable) in.readObject();\n    } catch (Exception e) { \n      //not likely\n      throw new RuntimeException(\"Failed to read exception object: \" + statusLine, e);\n    } finally {\n      in.close();\n    }\n    if (t instanceof IOException) {\n      throw (IOException) t;\n    }\n    if (t instanceof RuntimeException) {\n      throw (RuntimeException) t;\n    }\n    throw new RuntimeException(\"unknown exception \"+statusLine,t);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f9462128d6aef6f10f721e3635944ede9327665c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpClientBase#throwKnownError(HttpResponse,StatusLine).mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpClientBase#throwKnownError(HttpResponse,StatusLine).mjava","sourceNew":"  protected void throwKnownError(HttpResponse response, StatusLine statusLine) throws IOException {\n    ObjectInputStream in = null;\n    try {\n      in = new ObjectInputStream(response.getEntity().getContent());\n    } catch (Exception e) {\n      // the response stream is not an exception - could be an error in servlet.init().\n      throw new RuntimeException(\"Uknown error: \" + statusLine);\n    }\n    \n    Throwable t;\n    try {\n      t = (Throwable) in.readObject();\n    } catch (Exception e) { \n      //not likely\n      throw new RuntimeException(\"Failed to read exception object: \" + statusLine, e);\n    } finally {\n      in.close();\n    }\n    if (t instanceof IOException) {\n      throw (IOException) t;\n    }\n    if (t instanceof RuntimeException) {\n      throw (RuntimeException) t;\n    }\n    throw new RuntimeException(\"unknown exception \"+statusLine,t);\n  }\n\n","sourceOld":"  protected void throwKnownError(HttpResponse response, StatusLine statusLine) throws IOException {\n    ObjectInputStream in = null;\n    try {\n      in = new ObjectInputStream(response.getEntity().getContent());\n    } catch (Exception e) {\n      // the response stream is not an exception - could be an error in servlet.init().\n      throw new RuntimeException(\"Uknown error: \" + statusLine);\n    }\n    \n    Throwable t;\n    try {\n      t = (Throwable) in.readObject();\n    } catch (Exception e) { \n      //not likely\n      throw new RuntimeException(\"Failed to read exception object: \" + statusLine, e);\n    } finally {\n      in.close();\n    }\n    if (t instanceof IOException) {\n      throw (IOException) t;\n    }\n    if (t instanceof RuntimeException) {\n      throw (RuntimeException) t;\n    }\n    throw new RuntimeException(\"unknown exception \"+statusLine,t);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpClientBase#throwKnownError(HttpResponse,StatusLine).mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpClientBase#throwKnownError(HttpResponse,StatusLine).mjava","sourceNew":"  protected void throwKnownError(HttpResponse response, StatusLine statusLine) throws IOException {\n    ObjectInputStream in = null;\n    try {\n      in = new ObjectInputStream(response.getEntity().getContent());\n    } catch (Exception e) {\n      // the response stream is not an exception - could be an error in servlet.init().\n      throw new RuntimeException(\"Uknown error: \" + statusLine);\n    }\n    \n    Throwable t;\n    try {\n      t = (Throwable) in.readObject();\n    } catch (Exception e) { \n      //not likely\n      throw new RuntimeException(\"Failed to read exception object: \" + statusLine, e);\n    } finally {\n      in.close();\n    }\n    if (t instanceof IOException) {\n      throw (IOException) t;\n    }\n    if (t instanceof RuntimeException) {\n      throw (RuntimeException) t;\n    }\n    throw new RuntimeException(\"unknown exception \"+statusLine,t);\n  }\n\n","sourceOld":"  protected void throwKnownError(HttpResponse response, StatusLine statusLine) throws IOException {\n    ObjectInputStream in = null;\n    try {\n      in = new ObjectInputStream(response.getEntity().getContent());\n    } catch (Exception e) {\n      // the response stream is not an exception - could be an error in servlet.init().\n      throw new RuntimeException(\"Uknown error: \" + statusLine);\n    }\n    \n    Throwable t;\n    try {\n      t = (Throwable) in.readObject();\n    } catch (Exception e) { \n      //not likely\n      throw new RuntimeException(\"Failed to read exception object: \" + statusLine, e);\n    } finally {\n      in.close();\n    }\n    if (t instanceof IOException) {\n      throw (IOException) t;\n    }\n    if (t instanceof RuntimeException) {\n      throw (RuntimeException) t;\n    }\n    throw new RuntimeException(\"unknown exception \"+statusLine,t);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9462128d6aef6f10f721e3635944ede9327665c","date":1397750801,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpClientBase#throwKnownError(HttpResponse,StatusLine).mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpClientBase#throwKnownError(HttpResponse,StatusLine).mjava","sourceNew":"  protected void throwKnownError(HttpResponse response, StatusLine statusLine) throws IOException {\n    ObjectInputStream in = null;\n    try {\n      in = new ObjectInputStream(response.getEntity().getContent());\n    } catch (Throwable t) {\n      // the response stream is not an exception - could be an error in servlet.init().\n      throw new RuntimeException(\"Unknown error: \" + statusLine, t);\n    }\n    \n    Throwable t;\n    try {\n      t = (Throwable) in.readObject();\n    } catch (Throwable th) { \n      throw new RuntimeException(\"Failed to read exception object: \" + statusLine, th);\n    } finally {\n      in.close();\n    }\n    IOUtils.reThrow(t);\n  }\n\n","sourceOld":"  protected void throwKnownError(HttpResponse response, StatusLine statusLine) throws IOException {\n    ObjectInputStream in = null;\n    try {\n      in = new ObjectInputStream(response.getEntity().getContent());\n    } catch (Exception e) {\n      // the response stream is not an exception - could be an error in servlet.init().\n      throw new RuntimeException(\"Uknown error: \" + statusLine);\n    }\n    \n    Throwable t;\n    try {\n      t = (Throwable) in.readObject();\n    } catch (Exception e) { \n      //not likely\n      throw new RuntimeException(\"Failed to read exception object: \" + statusLine, e);\n    } finally {\n      in.close();\n    }\n    if (t instanceof IOException) {\n      throw (IOException) t;\n    }\n    if (t instanceof RuntimeException) {\n      throw (RuntimeException) t;\n    }\n    throw new RuntimeException(\"unknown exception \"+statusLine,t);\n  }\n\n","bugFix":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2","date":1493374641,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpClientBase#throwKnownError(HttpResponse,StatusLine).mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpClientBase#throwKnownError(HttpResponse,StatusLine).mjava","sourceNew":"  protected void throwKnownError(HttpResponse response, StatusLine statusLine) throws IOException {\n    ObjectInputStream in = null;\n    try {\n      in = new ObjectInputStream(response.getEntity().getContent());\n    } catch (Throwable t) {\n      // the response stream is not an exception - could be an error in servlet.init().\n      throw new RuntimeException(\"Unknown error: \" + statusLine, t);\n    }\n    \n    Throwable t;\n    try {\n      t = (Throwable) in.readObject();\n      assert t != null;\n    } catch (Throwable th) { \n      throw new RuntimeException(\"Failed to read exception object: \" + statusLine, th);\n    } finally {\n      in.close();\n    }\n    throw IOUtils.rethrowAlways(t);\n  }\n\n","sourceOld":"  protected void throwKnownError(HttpResponse response, StatusLine statusLine) throws IOException {\n    ObjectInputStream in = null;\n    try {\n      in = new ObjectInputStream(response.getEntity().getContent());\n    } catch (Throwable t) {\n      // the response stream is not an exception - could be an error in servlet.init().\n      throw new RuntimeException(\"Unknown error: \" + statusLine, t);\n    }\n    \n    Throwable t;\n    try {\n      t = (Throwable) in.readObject();\n    } catch (Throwable th) { \n      throw new RuntimeException(\"Failed to read exception object: \" + statusLine, th);\n    } finally {\n      in.close();\n    }\n    IOUtils.reThrow(t);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpClientBase#throwKnownError(HttpResponse,StatusLine).mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpClientBase#throwKnownError(HttpResponse,StatusLine).mjava","sourceNew":"  protected void throwKnownError(HttpResponse response, StatusLine statusLine) throws IOException {\n    ObjectInputStream in = null;\n    try {\n      in = new ObjectInputStream(response.getEntity().getContent());\n    } catch (Throwable t) {\n      // the response stream is not an exception - could be an error in servlet.init().\n      throw new RuntimeException(\"Unknown error: \" + statusLine, t);\n    }\n    \n    Throwable t;\n    try {\n      t = (Throwable) in.readObject();\n      assert t != null;\n    } catch (Throwable th) { \n      throw new RuntimeException(\"Failed to read exception object: \" + statusLine, th);\n    } finally {\n      in.close();\n    }\n    throw IOUtils.rethrowAlways(t);\n  }\n\n","sourceOld":"  protected void throwKnownError(HttpResponse response, StatusLine statusLine) throws IOException {\n    ObjectInputStream in = null;\n    try {\n      in = new ObjectInputStream(response.getEntity().getContent());\n    } catch (Throwable t) {\n      // the response stream is not an exception - could be an error in servlet.init().\n      throw new RuntimeException(\"Unknown error: \" + statusLine, t);\n    }\n    \n    Throwable t;\n    try {\n      t = (Throwable) in.readObject();\n    } catch (Throwable th) { \n      throw new RuntimeException(\"Failed to read exception object: \" + statusLine, th);\n    } finally {\n      in.close();\n    }\n    IOUtils.reThrow(t);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cb5c25025721b90f1f80bf3df99ae2b9a945e6c","date":1576521071,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpClientBase#throwKnownError(HttpResponse,StatusLine).mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpClientBase#throwKnownError(HttpResponse,StatusLine).mjava","sourceNew":"  @SuppressForbidden(reason = \"XXX: security hole\")\n  protected void throwKnownError(HttpResponse response, StatusLine statusLine) throws IOException {\n    ObjectInputStream in = null;\n    try {\n      in = new ObjectInputStream(response.getEntity().getContent());\n    } catch (Throwable t) {\n      // the response stream is not an exception - could be an error in servlet.init().\n      throw new RuntimeException(\"Unknown error: \" + statusLine, t);\n    }\n    \n    Throwable t;\n    try {\n      t = (Throwable) in.readObject();\n      assert t != null;\n    } catch (Throwable th) { \n      throw new RuntimeException(\"Failed to read exception object: \" + statusLine, th);\n    } finally {\n      in.close();\n    }\n    throw IOUtils.rethrowAlways(t);\n  }\n\n","sourceOld":"  protected void throwKnownError(HttpResponse response, StatusLine statusLine) throws IOException {\n    ObjectInputStream in = null;\n    try {\n      in = new ObjectInputStream(response.getEntity().getContent());\n    } catch (Throwable t) {\n      // the response stream is not an exception - could be an error in servlet.init().\n      throw new RuntimeException(\"Unknown error: \" + statusLine, t);\n    }\n    \n    Throwable t;\n    try {\n      t = (Throwable) in.readObject();\n      assert t != null;\n    } catch (Throwable th) { \n      throw new RuntimeException(\"Failed to read exception object: \" + statusLine, th);\n    } finally {\n      in.close();\n    }\n    throw IOUtils.rethrowAlways(t);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b945b8f5bba0303382bc69d60c0c287714f23328","date":1576586294,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpClientBase#throwKnownError(HttpResponse,StatusLine).mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpClientBase#throwKnownError(HttpResponse,StatusLine).mjava","sourceNew":"  @SuppressForbidden(reason = \"XXX: security hole\")\n  protected void throwKnownError(HttpResponse response, StatusLine statusLine) throws IOException {\n    ObjectInputStream in = null;\n    try {\n      in = new ObjectInputStream(response.getEntity().getContent());\n    } catch (Throwable t) {\n      // the response stream is not an exception - could be an error in servlet.init().\n      throw new RuntimeException(\"Unknown error: \" + statusLine, t);\n    }\n    \n    Throwable t;\n    try {\n      t = (Throwable) in.readObject();\n      assert t != null;\n    } catch (Throwable th) { \n      throw new RuntimeException(\"Failed to read exception object: \" + statusLine, th);\n    } finally {\n      in.close();\n    }\n    throw IOUtils.rethrowAlways(t);\n  }\n\n","sourceOld":"  protected void throwKnownError(HttpResponse response, StatusLine statusLine) throws IOException {\n    ObjectInputStream in = null;\n    try {\n      in = new ObjectInputStream(response.getEntity().getContent());\n    } catch (Throwable t) {\n      // the response stream is not an exception - could be an error in servlet.init().\n      throw new RuntimeException(\"Unknown error: \" + statusLine, t);\n    }\n    \n    Throwable t;\n    try {\n      t = (Throwable) in.readObject();\n      assert t != null;\n    } catch (Throwable th) { \n      throw new RuntimeException(\"Failed to read exception object: \" + statusLine, th);\n    } finally {\n      in.close();\n    }\n    throw IOUtils.rethrowAlways(t);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["f9462128d6aef6f10f721e3635944ede9327665c","97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"],"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2":["f9462128d6aef6f10f721e3635944ede9327665c"],"f9462128d6aef6f10f721e3635944ede9327665c":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"4cb5c25025721b90f1f80bf3df99ae2b9a945e6c":["97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"],"b945b8f5bba0303382bc69d60c0c287714f23328":["97fc96e6cc460e0ec1fb904a9c7ecd80680780c2","4cb5c25025721b90f1f80bf3df99ae2b9a945e6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4cb5c25025721b90f1f80bf3df99ae2b9a945e6c"]},"commit2Childs":{"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2":["e9017cf144952056066919f1ebc7897ff9bd71b1","4cb5c25025721b90f1f80bf3df99ae2b9a945e6c","b945b8f5bba0303382bc69d60c0c287714f23328"],"f9462128d6aef6f10f721e3635944ede9327665c":["e9017cf144952056066919f1ebc7897ff9bd71b1","97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["f9462128d6aef6f10f721e3635944ede9327665c"],"4cb5c25025721b90f1f80bf3df99ae2b9a945e6c":["b945b8f5bba0303382bc69d60c0c287714f23328","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b945b8f5bba0303382bc69d60c0c287714f23328":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","b945b8f5bba0303382bc69d60c0c287714f23328","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}