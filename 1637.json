{"path":"lucene/core/src/java/org/apache/lucene/util/SetOnce#SetOnce(T).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SetOnce#SetOnce(T).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/SetOnce#SetOnce(T).mjava","sourceNew":"  /**\n   * Creates a new instance with the internal object set to the given object.\n   * Note that any calls to {@link #set(Object)} afterwards will result in\n   * {@link AlreadySetException}\n   *\n   * @throws AlreadySetException if called more than once\n   * @see #set(Object)\n   */\n  public SetOnce(T obj) {\n    this.obj = obj;\n    set = new AtomicBoolean(true);\n  }\n\n","sourceOld":"  /**\n   * Creates a new instance with the internal object set to the given object.\n   * Note that any calls to {@link #set(Object)} afterwards will result in\n   * {@link AlreadySetException}\n   *\n   * @throws AlreadySetException if called more than once\n   * @see #set(Object)\n   */\n  public SetOnce(T obj) {\n    this.obj = obj;\n    set = new AtomicBoolean(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9aae4dd3e79734cc7f5c9d6a70d7926f155d124","date":1571070826,"type":3,"author":"Przemko Robakowski","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SetOnce#SetOnce(T).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/SetOnce#SetOnce(T).mjava","sourceNew":"  /**\n   * Creates a new instance with the internal object set to the given object.\n   * Note that any calls to {@link #set(Object)} afterwards will result in\n   * {@link AlreadySetException}\n   *\n   * @throws AlreadySetException if called more than once\n   * @see #set(Object)\n   */\n  public SetOnce(T obj) {\n    set = new AtomicReference<>(new Wrapper<>(obj));\n  }\n\n","sourceOld":"  /**\n   * Creates a new instance with the internal object set to the given object.\n   * Note that any calls to {@link #set(Object)} afterwards will result in\n   * {@link AlreadySetException}\n   *\n   * @throws AlreadySetException if called more than once\n   * @see #set(Object)\n   */\n  public SetOnce(T obj) {\n    this.obj = obj;\n    set = new AtomicBoolean(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SetOnce#SetOnce(T).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/SetOnce#SetOnce(T).mjava","sourceNew":"  /**\n   * Creates a new instance with the internal object set to the given object.\n   * Note that any calls to {@link #set(Object)} afterwards will result in\n   * {@link AlreadySetException}\n   *\n   * @throws AlreadySetException if called more than once\n   * @see #set(Object)\n   */\n  public SetOnce(T obj) {\n    set = new AtomicReference<>(new Wrapper<>(obj));\n  }\n\n","sourceOld":"  /**\n   * Creates a new instance with the internal object set to the given object.\n   * Note that any calls to {@link #set(Object)} afterwards will result in\n   * {@link AlreadySetException}\n   *\n   * @throws AlreadySetException if called more than once\n   * @see #set(Object)\n   */\n  public SetOnce(T obj) {\n    this.obj = obj;\n    set = new AtomicBoolean(true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f9aae4dd3e79734cc7f5c9d6a70d7926f155d124":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f9aae4dd3e79734cc7f5c9d6a70d7926f155d124"],"b0b597c65628ca9e73913a07e81691f8229bae35":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","f9aae4dd3e79734cc7f5c9d6a70d7926f155d124"]},"commit2Childs":{"f9aae4dd3e79734cc7f5c9d6a70d7926f155d124":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f9aae4dd3e79734cc7f5c9d6a70d7926f155d124","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}