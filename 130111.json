{"path":"src/java/org/apache/lucene/index/TermInfosReader#readIndex().mjava","commits":[{"id":"e0b950aef8cdf4606d480e28ea17bd870b93c81e","date":1060680143,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermInfosReader#readIndex().mjava","pathOld":"/dev/null","sourceNew":"  private final void readIndex() throws IOException {\n    SegmentTermEnum indexEnum =\n      new SegmentTermEnum(directory.openFile(segment + \".tii\"),\n\t\t\t  fieldInfos, true);\n    try {\n      int indexSize = indexEnum.size;\n\n      indexTerms = new Term[indexSize];\n      indexInfos = new TermInfo[indexSize];\n      indexPointers = new long[indexSize];\n\n      for (int i = 0; indexEnum.next(); i++) {\n\tindexTerms[i] = indexEnum.term();\n\tindexInfos[i] = indexEnum.termInfo();\n\tindexPointers[i] = indexEnum.indexPointer;\n      }\n    } finally {\n      indexEnum.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15c469602973ef1a33c9a07367a380d278ffab20","date":1074206555,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermInfosReader#readIndex().mjava","pathOld":"src/java/org/apache/lucene/index/TermInfosReader#readIndex().mjava","sourceNew":"  private final void readIndex() throws IOException {\n    SegmentTermEnum indexEnum =\n      new SegmentTermEnum(directory.openFile(segment + \".tii\"),\n\t\t\t  fieldInfos, true);\n    try {\n      int indexSize = (int)indexEnum.size;\n\n      indexTerms = new Term[indexSize];\n      indexInfos = new TermInfo[indexSize];\n      indexPointers = new long[indexSize];\n\n      for (int i = 0; indexEnum.next(); i++) {\n\tindexTerms[i] = indexEnum.term();\n\tindexInfos[i] = indexEnum.termInfo();\n\tindexPointers[i] = indexEnum.indexPointer;\n      }\n    } finally {\n      indexEnum.close();\n    }\n  }\n\n","sourceOld":"  private final void readIndex() throws IOException {\n    SegmentTermEnum indexEnum =\n      new SegmentTermEnum(directory.openFile(segment + \".tii\"),\n\t\t\t  fieldInfos, true);\n    try {\n      int indexSize = indexEnum.size;\n\n      indexTerms = new Term[indexSize];\n      indexInfos = new TermInfo[indexSize];\n      indexPointers = new long[indexSize];\n\n      for (int i = 0; indexEnum.next(); i++) {\n\tindexTerms[i] = indexEnum.term();\n\tindexInfos[i] = indexEnum.termInfo();\n\tindexPointers[i] = indexEnum.indexPointer;\n      }\n    } finally {\n      indexEnum.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e03e3f081e8581c90e28db2f37ab70239194e12b","date":1086627352,"type":4,"author":"Doug Cutting","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/TermInfosReader#readIndex().mjava","sourceNew":null,"sourceOld":"  private final void readIndex() throws IOException {\n    SegmentTermEnum indexEnum =\n      new SegmentTermEnum(directory.openFile(segment + \".tii\"),\n\t\t\t  fieldInfos, true);\n    try {\n      int indexSize = (int)indexEnum.size;\n\n      indexTerms = new Term[indexSize];\n      indexInfos = new TermInfo[indexSize];\n      indexPointers = new long[indexSize];\n\n      for (int i = 0; indexEnum.next(); i++) {\n\tindexTerms[i] = indexEnum.term();\n\tindexInfos[i] = indexEnum.termInfo();\n\tindexPointers[i] = indexEnum.indexPointer;\n      }\n    } finally {\n      indexEnum.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eafd816608011f66422f3052c37962973582d12a","date":1087172166,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermInfosReader#readIndex().mjava","pathOld":"/dev/null","sourceNew":"  private final void readIndex() throws IOException {\n    SegmentTermEnum indexEnum =\n      new SegmentTermEnum(directory.openFile(segment + \".tii\"),\n\t\t\t  fieldInfos, true);\n    try {\n      int indexSize = (int)indexEnum.size;\n\n      indexTerms = new Term[indexSize];\n      indexInfos = new TermInfo[indexSize];\n      indexPointers = new long[indexSize];\n\n      for (int i = 0; indexEnum.next(); i++) {\n\tindexTerms[i] = indexEnum.term();\n\tindexInfos[i] = indexEnum.termInfo();\n\tindexPointers[i] = indexEnum.indexPointer;\n      }\n    } finally {\n      indexEnum.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e971ba25509e21a130fef61f0687be0446ca27a0","date":1095369217,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermInfosReader#readIndex().mjava","pathOld":"src/java/org/apache/lucene/index/TermInfosReader#readIndex().mjava","sourceNew":"  private final void readIndex() throws IOException {\n    SegmentTermEnum indexEnum =\n      new SegmentTermEnum(directory.openInput(segment + \".tii\"),\n\t\t\t  fieldInfos, true);\n    try {\n      int indexSize = (int)indexEnum.size;\n\n      indexTerms = new Term[indexSize];\n      indexInfos = new TermInfo[indexSize];\n      indexPointers = new long[indexSize];\n\n      for (int i = 0; indexEnum.next(); i++) {\n\tindexTerms[i] = indexEnum.term();\n\tindexInfos[i] = indexEnum.termInfo();\n\tindexPointers[i] = indexEnum.indexPointer;\n      }\n    } finally {\n      indexEnum.close();\n    }\n  }\n\n","sourceOld":"  private final void readIndex() throws IOException {\n    SegmentTermEnum indexEnum =\n      new SegmentTermEnum(directory.openFile(segment + \".tii\"),\n\t\t\t  fieldInfos, true);\n    try {\n      int indexSize = (int)indexEnum.size;\n\n      indexTerms = new Term[indexSize];\n      indexInfos = new TermInfo[indexSize];\n      indexPointers = new long[indexSize];\n\n      for (int i = 0; indexEnum.next(); i++) {\n\tindexTerms[i] = indexEnum.term();\n\tindexInfos[i] = indexEnum.termInfo();\n\tindexPointers[i] = indexEnum.indexPointer;\n      }\n    } finally {\n      indexEnum.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde86e98c3d4e1e436c54b2303fc946a19efb893","date":1110227284,"type":5,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/TermInfosReader#ensureIndexIsRead().mjava","pathOld":"src/java/org/apache/lucene/index/TermInfosReader#readIndex().mjava","sourceNew":"  private final void ensureIndexIsRead() throws IOException {\n    if (indexTerms != null)                       // index already read\n      return;                                     // do nothing\n    try {\n      int indexSize = (int)indexEnum.size;        // otherwise read index\n\n      indexTerms = new Term[indexSize];\n      indexInfos = new TermInfo[indexSize];\n      indexPointers = new long[indexSize];\n        \n      for (int i = 0; indexEnum.next(); i++) {\n        indexTerms[i] = indexEnum.term();\n        indexInfos[i] = indexEnum.termInfo();\n        indexPointers[i] = indexEnum.indexPointer;\n      }\n    } finally {\n        indexEnum.close();\n        indexEnum = null;\n    }\n  }\n\n","sourceOld":"  private final void readIndex() throws IOException {\n    SegmentTermEnum indexEnum =\n      new SegmentTermEnum(directory.openInput(segment + \".tii\"),\n\t\t\t  fieldInfos, true);\n    try {\n      int indexSize = (int)indexEnum.size;\n\n      indexTerms = new Term[indexSize];\n      indexInfos = new TermInfo[indexSize];\n      indexPointers = new long[indexSize];\n\n      for (int i = 0; indexEnum.next(); i++) {\n\tindexTerms[i] = indexEnum.term();\n\tindexInfos[i] = indexEnum.termInfo();\n\tindexPointers[i] = indexEnum.indexPointer;\n      }\n    } finally {\n      indexEnum.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e0b950aef8cdf4606d480e28ea17bd870b93c81e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bde86e98c3d4e1e436c54b2303fc946a19efb893":["e971ba25509e21a130fef61f0687be0446ca27a0"],"eafd816608011f66422f3052c37962973582d12a":["e03e3f081e8581c90e28db2f37ab70239194e12b"],"e971ba25509e21a130fef61f0687be0446ca27a0":["eafd816608011f66422f3052c37962973582d12a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e03e3f081e8581c90e28db2f37ab70239194e12b":["15c469602973ef1a33c9a07367a380d278ffab20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bde86e98c3d4e1e436c54b2303fc946a19efb893"],"15c469602973ef1a33c9a07367a380d278ffab20":["e0b950aef8cdf4606d480e28ea17bd870b93c81e"]},"commit2Childs":{"e0b950aef8cdf4606d480e28ea17bd870b93c81e":["15c469602973ef1a33c9a07367a380d278ffab20"],"bde86e98c3d4e1e436c54b2303fc946a19efb893":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"eafd816608011f66422f3052c37962973582d12a":["e971ba25509e21a130fef61f0687be0446ca27a0"],"e971ba25509e21a130fef61f0687be0446ca27a0":["bde86e98c3d4e1e436c54b2303fc946a19efb893"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e0b950aef8cdf4606d480e28ea17bd870b93c81e"],"e03e3f081e8581c90e28db2f37ab70239194e12b":["eafd816608011f66422f3052c37962973582d12a"],"15c469602973ef1a33c9a07367a380d278ffab20":["e03e3f081e8581c90e28db2f37ab70239194e12b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}