{"path":"lucene/core/src/test/org/apache/lucene/index/TestCodecUtil#testWriteNonAsciiSuffix().mjava","commits":[{"id":"a78b813d9350cc28625598f6dbbb49b586a40618","date":1412073147,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecUtil#testWriteNonAsciiSuffix().mjava","pathOld":"/dev/null","sourceNew":"  public void testWriteNonAsciiSuffix() throws Exception {\n    RAMFile file = new RAMFile();\n    IndexOutput output = new RAMOutputStream(file, true);\n    try {\n      CodecUtil.writeSegmentHeader(output, \"foobar\", 5, StringHelper.randomId(), \"\\u1234\");\n      fail(\"didn't get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecUtil#testWriteNonAsciiSuffix().mjava","pathOld":"/dev/null","sourceNew":"  public void testWriteNonAsciiSuffix() throws Exception {\n    RAMFile file = new RAMFile();\n    IndexOutput output = new RAMOutputStream(file, true);\n    try {\n      CodecUtil.writeSegmentHeader(output, \"foobar\", 5, StringHelper.randomId(), \"\\u1234\");\n      fail(\"didn't get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3384e6013a93e4d11b7d75388693f8d0388602bf","date":1413951663,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecUtil#testWriteNonAsciiSuffix().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecUtil#testWriteNonAsciiSuffix().mjava","sourceNew":"  public void testWriteNonAsciiSuffix() throws Exception {\n    RAMFile file = new RAMFile();\n    IndexOutput output = new RAMOutputStream(file, true);\n    try {\n      CodecUtil.writeIndexHeader(output, \"foobar\", 5, StringHelper.randomId(), \"\\u1234\");\n      fail(\"didn't get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n  }\n\n","sourceOld":"  public void testWriteNonAsciiSuffix() throws Exception {\n    RAMFile file = new RAMFile();\n    IndexOutput output = new RAMOutputStream(file, true);\n    try {\n      CodecUtil.writeSegmentHeader(output, \"foobar\", 5, StringHelper.randomId(), \"\\u1234\");\n      fail(\"didn't get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecUtil#testWriteNonAsciiSuffix().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecUtil#testWriteNonAsciiSuffix().mjava","sourceNew":"  public void testWriteNonAsciiSuffix() throws Exception {\n    RAMFile file = new RAMFile();\n    IndexOutput output = new RAMOutputStream(file, true);\n    try {\n      CodecUtil.writeIndexHeader(output, \"foobar\", 5, StringHelper.randomId(), \"\\u1234\");\n      fail(\"didn't get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n  }\n\n","sourceOld":"  public void testWriteNonAsciiSuffix() throws Exception {\n    RAMFile file = new RAMFile();\n    IndexOutput output = new RAMOutputStream(file, true);\n    try {\n      CodecUtil.writeSegmentHeader(output, \"foobar\", 5, StringHelper.randomId(), \"\\u1234\");\n      fail(\"didn't get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecUtil#testWriteNonAsciiSuffix().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecUtil#testWriteNonAsciiSuffix().mjava","sourceNew":"  public void testWriteNonAsciiSuffix() throws Exception {\n    RAMFile file = new RAMFile();\n    IndexOutput output = new RAMOutputStream(file, true);\n    expectThrows(IllegalArgumentException.class, () -> {\n      CodecUtil.writeIndexHeader(output, \"foobar\", 5, StringHelper.randomId(), \"\\u1234\");\n    });\n  }\n\n","sourceOld":"  public void testWriteNonAsciiSuffix() throws Exception {\n    RAMFile file = new RAMFile();\n    IndexOutput output = new RAMOutputStream(file, true);\n    try {\n      CodecUtil.writeIndexHeader(output, \"foobar\", 5, StringHelper.randomId(), \"\\u1234\");\n      fail(\"didn't get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      // expected\n    }\n  }\n\n","bugFix":["a78b813d9350cc28625598f6dbbb49b586a40618"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71488d7f5786ae87541276121ecb69705a11a295","date":1465498138,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/TestCodecUtil#testWriteNonAsciiSuffix().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecUtil#testWriteNonAsciiSuffix().mjava","sourceNew":"  public void testWriteNonAsciiSuffix() throws Exception {\n    RAMFile file = new RAMFile();\n    IndexOutput output = new RAMOutputStream(file, true);\n    expectThrows(IllegalArgumentException.class, () -> {\n      CodecUtil.writeIndexHeader(output, \"foobar\", 5, StringHelper.randomId(), \"\\u1234\");\n    });\n  }\n\n","sourceOld":"  public void testWriteNonAsciiSuffix() throws Exception {\n    RAMFile file = new RAMFile();\n    IndexOutput output = new RAMOutputStream(file, true);\n    expectThrows(IllegalArgumentException.class, () -> {\n      CodecUtil.writeIndexHeader(output, \"foobar\", 5, StringHelper.randomId(), \"\\u1234\");\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/TestCodecUtil#testWriteNonAsciiSuffix().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCodecUtil#testWriteNonAsciiSuffix().mjava","sourceNew":"  public void testWriteNonAsciiSuffix() throws Exception {\n    RAMFile file = new RAMFile();\n    IndexOutput output = new RAMOutputStream(file, true);\n    expectThrows(IllegalArgumentException.class, () -> {\n      CodecUtil.writeIndexHeader(output, \"foobar\", 5, StringHelper.randomId(), \"\\u1234\");\n    });\n  }\n\n","sourceOld":"  public void testWriteNonAsciiSuffix() throws Exception {\n    RAMFile file = new RAMFile();\n    IndexOutput output = new RAMOutputStream(file, true);\n    expectThrows(IllegalArgumentException.class, () -> {\n      CodecUtil.writeIndexHeader(output, \"foobar\", 5, StringHelper.randomId(), \"\\u1234\");\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a78b813d9350cc28625598f6dbbb49b586a40618":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a78b813d9350cc28625598f6dbbb49b586a40618"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"71488d7f5786ae87541276121ecb69705a11a295":["05fe562aa248790944d43cdd478f512572835ba0"],"3384e6013a93e4d11b7d75388693f8d0388602bf":["a78b813d9350cc28625598f6dbbb49b586a40618"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["9bb9a29a5e71a90295f175df8919802993142c9a","3384e6013a93e4d11b7d75388693f8d0388602bf"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["05fe562aa248790944d43cdd478f512572835ba0","71488d7f5786ae87541276121ecb69705a11a295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71488d7f5786ae87541276121ecb69705a11a295"]},"commit2Childs":{"a78b813d9350cc28625598f6dbbb49b586a40618":["9bb9a29a5e71a90295f175df8919802993142c9a","3384e6013a93e4d11b7d75388693f8d0388602bf"],"9bb9a29a5e71a90295f175df8919802993142c9a":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a78b813d9350cc28625598f6dbbb49b586a40618","9bb9a29a5e71a90295f175df8919802993142c9a"],"05fe562aa248790944d43cdd478f512572835ba0":["71488d7f5786ae87541276121ecb69705a11a295","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"71488d7f5786ae87541276121ecb69705a11a295":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3384e6013a93e4d11b7d75388693f8d0388602bf":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["05fe562aa248790944d43cdd478f512572835ba0"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}