{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/CompletionFieldsConsumer#write(Fields).mjava","commits":[{"id":"07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a","date":1427495869,"type":0,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/CompletionFieldsConsumer#write(Fields).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void write(Fields fields) throws IOException {\n    delegateFieldsConsumer.write(fields);\n\n    for (String field : fields) {\n      CompletionTermWriter termWriter = new CompletionTermWriter();\n      Terms terms = fields.terms(field);\n      TermsEnum termsEnum = terms.iterator(null);\n\n      // write terms\n      BytesRef term;\n      while ((term = termsEnum.next()) != null) {\n        termWriter.write(term, termsEnum);\n      }\n\n      // store lookup, if needed\n      long filePointer = dictOut.getFilePointer();\n      if (termWriter.finish(dictOut)) {\n        seenFields.put(field, filePointer);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/CompletionFieldsConsumer#write(Fields).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void write(Fields fields) throws IOException {\n    delegateFieldsConsumer.write(fields);\n\n    for (String field : fields) {\n      CompletionTermWriter termWriter = new CompletionTermWriter();\n      Terms terms = fields.terms(field);\n      TermsEnum termsEnum = terms.iterator(null);\n\n      // write terms\n      BytesRef term;\n      while ((term = termsEnum.next()) != null) {\n        termWriter.write(term, termsEnum);\n      }\n\n      // store lookup, if needed\n      long filePointer = dictOut.getFilePointer();\n      if (termWriter.finish(dictOut)) {\n        seenFields.put(field, filePointer);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82","date":1428522487,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/CompletionFieldsConsumer#write(Fields).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/CompletionFieldsConsumer#write(Fields).mjava","sourceNew":"  @Override\n  public void write(Fields fields) throws IOException {\n    delegateFieldsConsumer.write(fields);\n\n    for (String field : fields) {\n      CompletionTermWriter termWriter = new CompletionTermWriter();\n      Terms terms = fields.terms(field);\n      TermsEnum termsEnum = terms.iterator();\n\n      // write terms\n      BytesRef term;\n      while ((term = termsEnum.next()) != null) {\n        termWriter.write(term, termsEnum);\n      }\n\n      // store lookup, if needed\n      long filePointer = dictOut.getFilePointer();\n      if (termWriter.finish(dictOut)) {\n        seenFields.put(field, filePointer);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(Fields fields) throws IOException {\n    delegateFieldsConsumer.write(fields);\n\n    for (String field : fields) {\n      CompletionTermWriter termWriter = new CompletionTermWriter();\n      Terms terms = fields.terms(field);\n      TermsEnum termsEnum = terms.iterator(null);\n\n      // write terms\n      BytesRef term;\n      while ((term = termsEnum.next()) != null) {\n        termWriter.write(term, termsEnum);\n      }\n\n      // store lookup, if needed\n      long filePointer = dictOut.getFilePointer();\n      if (termWriter.finish(dictOut)) {\n        seenFields.put(field, filePointer);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8c33f6677a2078739058f81eca1df69d12cd62b0","date":1432799589,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/CompletionFieldsConsumer#write(Fields).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/CompletionFieldsConsumer#write(Fields).mjava","sourceNew":"  @Override\n  public void write(Fields fields) throws IOException {\n    delegateFieldsConsumer.write(fields);\n\n    for (String field : fields) {\n      CompletionTermWriter termWriter = new CompletionTermWriter();\n      Terms terms = fields.terms(field);\n      TermsEnum termsEnum = terms.iterator();\n\n      // write terms\n      BytesRef term;\n      while ((term = termsEnum.next()) != null) {\n        termWriter.write(term, termsEnum);\n      }\n\n      // store lookup, if needed\n      long filePointer = dictOut.getFilePointer();\n      if (termWriter.finish(dictOut)) {\n        seenFields.put(field, new CompletionMetaData(filePointer,\n            termWriter.minWeight,\n            termWriter.maxWeight,\n            termWriter.type));\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(Fields fields) throws IOException {\n    delegateFieldsConsumer.write(fields);\n\n    for (String field : fields) {\n      CompletionTermWriter termWriter = new CompletionTermWriter();\n      Terms terms = fields.terms(field);\n      TermsEnum termsEnum = terms.iterator();\n\n      // write terms\n      BytesRef term;\n      while ((term = termsEnum.next()) != null) {\n        termWriter.write(term, termsEnum);\n      }\n\n      // store lookup, if needed\n      long filePointer = dictOut.getFilePointer();\n      if (termWriter.finish(dictOut)) {\n        seenFields.put(field, filePointer);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b25391c4edacd53174760022f46a27be00ef52b3","date":1479290030,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/CompletionFieldsConsumer#write(Fields).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/CompletionFieldsConsumer#write(Fields).mjava","sourceNew":"  @Override\n  public void write(Fields fields) throws IOException {\n    delegateFieldsConsumer.write(fields);\n\n    for (String field : fields) {\n      CompletionTermWriter termWriter = new CompletionTermWriter();\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        // this can happen from ghost fields, where the incoming Fields iterator claims a field exists but it does not\n        continue;\n      }\n      TermsEnum termsEnum = terms.iterator();\n\n      // write terms\n      BytesRef term;\n      while ((term = termsEnum.next()) != null) {\n        termWriter.write(term, termsEnum);\n      }\n\n      // store lookup, if needed\n      long filePointer = dictOut.getFilePointer();\n      if (termWriter.finish(dictOut)) {\n        seenFields.put(field, new CompletionMetaData(filePointer,\n            termWriter.minWeight,\n            termWriter.maxWeight,\n            termWriter.type));\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(Fields fields) throws IOException {\n    delegateFieldsConsumer.write(fields);\n\n    for (String field : fields) {\n      CompletionTermWriter termWriter = new CompletionTermWriter();\n      Terms terms = fields.terms(field);\n      TermsEnum termsEnum = terms.iterator();\n\n      // write terms\n      BytesRef term;\n      while ((term = termsEnum.next()) != null) {\n        termWriter.write(term, termsEnum);\n      }\n\n      // store lookup, if needed\n      long filePointer = dictOut.getFilePointer();\n      if (termWriter.finish(dictOut)) {\n        seenFields.put(field, new CompletionMetaData(filePointer,\n            termWriter.minWeight,\n            termWriter.maxWeight,\n            termWriter.type));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e859e664a65796dadf8aaf65db6f66f3a885368","date":1479487334,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/CompletionFieldsConsumer#write(Fields).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/CompletionFieldsConsumer#write(Fields).mjava","sourceNew":"  @Override\n  public void write(Fields fields) throws IOException {\n    delegateFieldsConsumer.write(fields);\n\n    for (String field : fields) {\n      CompletionTermWriter termWriter = new CompletionTermWriter();\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        // this can happen from ghost fields, where the incoming Fields iterator claims a field exists but it does not\n        continue;\n      }\n      TermsEnum termsEnum = terms.iterator();\n\n      // write terms\n      BytesRef term;\n      while ((term = termsEnum.next()) != null) {\n        termWriter.write(term, termsEnum);\n      }\n\n      // store lookup, if needed\n      long filePointer = dictOut.getFilePointer();\n      if (termWriter.finish(dictOut)) {\n        seenFields.put(field, new CompletionMetaData(filePointer,\n            termWriter.minWeight,\n            termWriter.maxWeight,\n            termWriter.type));\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(Fields fields) throws IOException {\n    delegateFieldsConsumer.write(fields);\n\n    for (String field : fields) {\n      CompletionTermWriter termWriter = new CompletionTermWriter();\n      Terms terms = fields.terms(field);\n      TermsEnum termsEnum = terms.iterator();\n\n      // write terms\n      BytesRef term;\n      while ((term = termsEnum.next()) != null) {\n        termWriter.write(term, termsEnum);\n      }\n\n      // store lookup, if needed\n      long filePointer = dictOut.getFilePointer();\n      if (termWriter.finish(dictOut)) {\n        seenFields.put(field, new CompletionMetaData(filePointer,\n            termWriter.minWeight,\n            termWriter.maxWeight,\n            termWriter.type));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"622a708571e534680618b3c5e0c28ac539a47776","date":1517406892,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/CompletionFieldsConsumer#write(Fields,NormsProducer).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/CompletionFieldsConsumer#write(Fields).mjava","sourceNew":"  @Override\n  public void write(Fields fields, NormsProducer norms) throws IOException {\n    delegateFieldsConsumer.write(fields, norms);\n\n    for (String field : fields) {\n      CompletionTermWriter termWriter = new CompletionTermWriter();\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        // this can happen from ghost fields, where the incoming Fields iterator claims a field exists but it does not\n        continue;\n      }\n      TermsEnum termsEnum = terms.iterator();\n\n      // write terms\n      BytesRef term;\n      while ((term = termsEnum.next()) != null) {\n        termWriter.write(term, termsEnum);\n      }\n\n      // store lookup, if needed\n      long filePointer = dictOut.getFilePointer();\n      if (termWriter.finish(dictOut)) {\n        seenFields.put(field, new CompletionMetaData(filePointer,\n            termWriter.minWeight,\n            termWriter.maxWeight,\n            termWriter.type));\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(Fields fields) throws IOException {\n    delegateFieldsConsumer.write(fields);\n\n    for (String field : fields) {\n      CompletionTermWriter termWriter = new CompletionTermWriter();\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        // this can happen from ghost fields, where the incoming Fields iterator claims a field exists but it does not\n        continue;\n      }\n      TermsEnum termsEnum = terms.iterator();\n\n      // write terms\n      BytesRef term;\n      while ((term = termsEnum.next()) != null) {\n        termWriter.write(term, termsEnum);\n      }\n\n      // store lookup, if needed\n      long filePointer = dictOut.getFilePointer();\n      if (termWriter.finish(dictOut)) {\n        seenFields.put(field, new CompletionMetaData(filePointer,\n            termWriter.minWeight,\n            termWriter.maxWeight,\n            termWriter.type));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a"],"07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"622a708571e534680618b3c5e0c28ac539a47776":["b25391c4edacd53174760022f46a27be00ef52b3"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"2e859e664a65796dadf8aaf65db6f66f3a885368":["8c33f6677a2078739058f81eca1df69d12cd62b0","b25391c4edacd53174760022f46a27be00ef52b3"],"b25391c4edacd53174760022f46a27be00ef52b3":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["622a708571e534680618b3c5e0c28ac539a47776"]},"commit2Childs":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a"],"622a708571e534680618b3c5e0c28ac539a47776":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["2e859e664a65796dadf8aaf65db6f66f3a885368","b25391c4edacd53174760022f46a27be00ef52b3"],"2e859e664a65796dadf8aaf65db6f66f3a885368":[],"b25391c4edacd53174760022f46a27be00ef52b3":["622a708571e534680618b3c5e0c28ac539a47776","2e859e664a65796dadf8aaf65db6f66f3a885368"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2e859e664a65796dadf8aaf65db6f66f3a885368","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}