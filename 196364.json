{"path":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGet().mjava","commits":[{"id":"2baf1cdf7061808d4fe0dadc6f327893cf9024e8","date":1388433703,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGet().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGet() throws Exception {\n    String getNode = \"/getNode\";\n    byte [] data = new String(\"getNode-data\").getBytes(\"UTF-8\");\n    this.zkClient.create(getNode, data, CreateMode.PERSISTENT, true);\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"get\", getNode};\n    ZkCLI.main(args);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d3d365762604952e436b51980101dfc84cc1b3e","date":1396298116,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGet().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGet().mjava","sourceNew":"  @Test\n  public void testGet() throws Exception {\n    String getNode = \"/getNode\";\n    byte [] data = new String(\"getNode-data\").getBytes(StandardCharsets.UTF_8);\n    this.zkClient.create(getNode, data, CreateMode.PERSISTENT, true);\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"get\", getNode};\n    ZkCLI.main(args);\n  }\n\n","sourceOld":"  @Test\n  public void testGet() throws Exception {\n    String getNode = \"/getNode\";\n    byte [] data = new String(\"getNode-data\").getBytes(\"UTF-8\");\n    this.zkClient.create(getNode, data, CreateMode.PERSISTENT, true);\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"get\", getNode};\n    ZkCLI.main(args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGet().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGet().mjava","sourceNew":"  @Test\n  public void testGet() throws Exception {\n    String getNode = \"/getNode\";\n    byte [] data = new String(\"getNode-data\").getBytes(StandardCharsets.UTF_8);\n    this.zkClient.create(getNode, data, CreateMode.PERSISTENT, true);\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"get\", getNode};\n    ZkCLI.main(args);\n  }\n\n","sourceOld":"  @Test\n  public void testGet() throws Exception {\n    String getNode = \"/getNode\";\n    byte [] data = new String(\"getNode-data\").getBytes(\"UTF-8\");\n    this.zkClient.create(getNode, data, CreateMode.PERSISTENT, true);\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"get\", getNode};\n    ZkCLI.main(args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d72c1db036e3e6c3a62f3b82bbba46870c7e3c7","date":1490708104,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGet().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGet().mjava","sourceNew":"  @Test\n  public void testGet() throws Exception {\n    String getNode = \"/getNode\";\n    byte [] data = \"getNode-data\".getBytes(StandardCharsets.UTF_8);\n    this.zkClient.create(getNode, data, CreateMode.PERSISTENT, true);\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"get\", getNode};\n    ZkCLI.main(args);\n  }\n\n","sourceOld":"  @Test\n  public void testGet() throws Exception {\n    String getNode = \"/getNode\";\n    byte [] data = new String(\"getNode-data\").getBytes(StandardCharsets.UTF_8);\n    this.zkClient.create(getNode, data, CreateMode.PERSISTENT, true);\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"get\", getNode};\n    ZkCLI.main(args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57df4f31144a04dc0e8382aed10ebfa82ef71a4d","date":1490873945,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGet().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGet().mjava","sourceNew":"  @Test\n  public void testGet() throws Exception {\n    String getNode = \"/getNode\";\n    byte [] data = \"getNode-data\".getBytes(StandardCharsets.UTF_8);\n    this.zkClient.create(getNode, data, CreateMode.PERSISTENT, true);\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"get\", getNode};\n    ZkCLI.main(args);\n  }\n\n","sourceOld":"  @Test\n  public void testGet() throws Exception {\n    String getNode = \"/getNode\";\n    byte [] data = new String(\"getNode-data\").getBytes(StandardCharsets.UTF_8);\n    this.zkClient.create(getNode, data, CreateMode.PERSISTENT, true);\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"get\", getNode};\n    ZkCLI.main(args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["2baf1cdf7061808d4fe0dadc6f327893cf9024e8","9d3d365762604952e436b51980101dfc84cc1b3e"],"9d3d365762604952e436b51980101dfc84cc1b3e":["2baf1cdf7061808d4fe0dadc6f327893cf9024e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57df4f31144a04dc0e8382aed10ebfa82ef71a4d":["9d3d365762604952e436b51980101dfc84cc1b3e"],"2baf1cdf7061808d4fe0dadc6f327893cf9024e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2d72c1db036e3e6c3a62f3b82bbba46870c7e3c7":["9d3d365762604952e436b51980101dfc84cc1b3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2d72c1db036e3e6c3a62f3b82bbba46870c7e3c7"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"9d3d365762604952e436b51980101dfc84cc1b3e":["5eb2511ababf862ea11e10761c70ee560cd84510","57df4f31144a04dc0e8382aed10ebfa82ef71a4d","2d72c1db036e3e6c3a62f3b82bbba46870c7e3c7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2baf1cdf7061808d4fe0dadc6f327893cf9024e8"],"57df4f31144a04dc0e8382aed10ebfa82ef71a4d":[],"2baf1cdf7061808d4fe0dadc6f327893cf9024e8":["5eb2511ababf862ea11e10761c70ee560cd84510","9d3d365762604952e436b51980101dfc84cc1b3e"],"2d72c1db036e3e6c3a62f3b82bbba46870c7e3c7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","57df4f31144a04dc0e8382aed10ebfa82ef71a4d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}