{"path":"lucene/analysis/kuromoji/src/tools/test/org/apache/lucene/analysis/ja/dict/TokenInfoDictionaryTest#testPut().mjava","commits":[{"id":"7923aefdc3cf4457114880722d650b9b1a37ae28","date":1561070324,"type":0,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/tools/test/org/apache/lucene/analysis/ja/dict/TokenInfoDictionaryTest#testPut().mjava","pathOld":"/dev/null","sourceNew":"  public void testPut() throws Exception {\n    TokenInfoDictionary dict = newDictionary(\"名詞,1,1,2,名詞,一般,*,*,*,*,*,*,*\",\n                                               // \"large\" id\n                                               \"一般,5000,5000,3,名詞,一般,*,*,*,*,*,*,*\");\n    IntsRef wordIdRef = new IntsRefBuilder().get();\n\n    dict.lookupWordIds(0, wordIdRef);\n    int wordId = wordIdRef.ints[wordIdRef.offset];\n    assertEquals(5000, dict.getLeftId(wordId));\n    assertEquals(5000, dict.getRightId(wordId));\n    assertEquals(3, dict.getWordCost(wordId));\n\n    dict.lookupWordIds(1, wordIdRef);\n    wordId = wordIdRef.ints[wordIdRef.offset];\n    assertEquals(1, dict.getLeftId(wordId));\n    assertEquals(1, dict.getRightId(wordId));\n    assertEquals(2, dict.getWordCost(wordId));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05feb7eb5e91cb64742ce32b2ca3f02433530446","date":1561602840,"type":5,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/dict/TokenInfoDictionaryTest#testPut().mjava","pathOld":"lucene/analysis/kuromoji/src/tools/test/org/apache/lucene/analysis/ja/dict/TokenInfoDictionaryTest#testPut().mjava","sourceNew":"  public void testPut() throws Exception {\n    TokenInfoDictionary dict = newDictionary(\"名詞,1,1,2,名詞,一般,*,*,*,*,*,*,*\",\n                                               // \"large\" id\n                                               \"一般,5000,5000,3,名詞,一般,*,*,*,*,*,*,*\");\n    IntsRef wordIdRef = new IntsRefBuilder().get();\n\n    dict.lookupWordIds(0, wordIdRef);\n    int wordId = wordIdRef.ints[wordIdRef.offset];\n    assertEquals(5000, dict.getLeftId(wordId));\n    assertEquals(5000, dict.getRightId(wordId));\n    assertEquals(3, dict.getWordCost(wordId));\n\n    dict.lookupWordIds(1, wordIdRef);\n    wordId = wordIdRef.ints[wordIdRef.offset];\n    assertEquals(1, dict.getLeftId(wordId));\n    assertEquals(1, dict.getRightId(wordId));\n    assertEquals(2, dict.getWordCost(wordId));\n  }\n\n","sourceOld":"  public void testPut() throws Exception {\n    TokenInfoDictionary dict = newDictionary(\"名詞,1,1,2,名詞,一般,*,*,*,*,*,*,*\",\n                                               // \"large\" id\n                                               \"一般,5000,5000,3,名詞,一般,*,*,*,*,*,*,*\");\n    IntsRef wordIdRef = new IntsRefBuilder().get();\n\n    dict.lookupWordIds(0, wordIdRef);\n    int wordId = wordIdRef.ints[wordIdRef.offset];\n    assertEquals(5000, dict.getLeftId(wordId));\n    assertEquals(5000, dict.getRightId(wordId));\n    assertEquals(3, dict.getWordCost(wordId));\n\n    dict.lookupWordIds(1, wordIdRef);\n    wordId = wordIdRef.ints[wordIdRef.offset];\n    assertEquals(1, dict.getLeftId(wordId));\n    assertEquals(1, dict.getRightId(wordId));\n    assertEquals(2, dict.getWordCost(wordId));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7923aefdc3cf4457114880722d650b9b1a37ae28":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"05feb7eb5e91cb64742ce32b2ca3f02433530446":["7923aefdc3cf4457114880722d650b9b1a37ae28"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05feb7eb5e91cb64742ce32b2ca3f02433530446"]},"commit2Childs":{"7923aefdc3cf4457114880722d650b9b1a37ae28":["05feb7eb5e91cb64742ce32b2ca3f02433530446"],"05feb7eb5e91cb64742ce32b2ca3f02433530446":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7923aefdc3cf4457114880722d650b9b1a37ae28"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}