{"path":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#createAndWriteFieldInfos(Directory,String).mjava","commits":[{"id":"5c2cf5832e0f01230bc2c4886e16887a0d1f3341","date":1301042882,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#createAndWriteFieldInfos(Directory,String).mjava","pathOld":"/dev/null","sourceNew":"  public FieldInfos createAndWriteFieldInfos(Directory dir, String filename) throws IOException{\n  //Positive test of FieldInfos\n    assertTrue(testDoc != null);\n    FieldInfos fieldInfos = new FieldInfos();\n    _TestUtil.add(testDoc, fieldInfos);\n    //Since the complement is stored as well in the fields map\n    assertTrue(fieldInfos.size() == DocHelper.all.size()); //this is all b/c we are using the no-arg constructor\n    \n    \n    IndexOutput output = dir.createOutput(filename);\n    assertTrue(output != null);\n    //Use a RAMOutputStream\n  \n    fieldInfos.write(output);\n    output.close();\n    return fieldInfos;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#createAndWriteFieldInfos(Directory,String).mjava","pathOld":"/dev/null","sourceNew":"  public FieldInfos createAndWriteFieldInfos(Directory dir, String filename) throws IOException{\n  //Positive test of FieldInfos\n    assertTrue(testDoc != null);\n    FieldInfos fieldInfos = new FieldInfos();\n    _TestUtil.add(testDoc, fieldInfos);\n    //Since the complement is stored as well in the fields map\n    assertTrue(fieldInfos.size() == DocHelper.all.size()); //this is all b/c we are using the no-arg constructor\n    \n    \n    IndexOutput output = dir.createOutput(filename);\n    assertTrue(output != null);\n    //Use a RAMOutputStream\n  \n    fieldInfos.write(output);\n    output.close();\n    return fieldInfos;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#createAndWriteFieldInfos(Directory,String).mjava","pathOld":"/dev/null","sourceNew":"  public FieldInfos createAndWriteFieldInfos(Directory dir, String filename) throws IOException{\n  //Positive test of FieldInfos\n    assertTrue(testDoc != null);\n    FieldInfos fieldInfos = new FieldInfos();\n    _TestUtil.add(testDoc, fieldInfos);\n    //Since the complement is stored as well in the fields map\n    assertTrue(fieldInfos.size() == DocHelper.all.size()); //this is all b/c we are using the no-arg constructor\n    \n    \n    IndexOutput output = dir.createOutput(filename);\n    assertTrue(output != null);\n    //Use a RAMOutputStream\n  \n    fieldInfos.write(output);\n    output.close();\n    return fieldInfos;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#createAndWriteFieldInfos(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#createAndWriteFieldInfos(Directory,String).mjava","sourceNew":"  public FieldInfos createAndWriteFieldInfos(Directory dir, String filename) throws IOException{\n  //Positive test of FieldInfos\n    assertTrue(testDoc != null);\n    FieldInfos fieldInfos = new FieldInfos();\n    _TestUtil.add(testDoc, fieldInfos);\n    //Since the complement is stored as well in the fields map\n    assertTrue(fieldInfos.size() == DocHelper.all.size()); //this is all b/c we are using the no-arg constructor\n    \n    \n    IndexOutput output = dir.createOutput(filename, IOContext.DEFAULT);\n    assertTrue(output != null);\n    //Use a RAMOutputStream\n  \n    fieldInfos.write(output);\n    output.close();\n    return fieldInfos;\n  }\n\n","sourceOld":"  public FieldInfos createAndWriteFieldInfos(Directory dir, String filename) throws IOException{\n  //Positive test of FieldInfos\n    assertTrue(testDoc != null);\n    FieldInfos fieldInfos = new FieldInfos();\n    _TestUtil.add(testDoc, fieldInfos);\n    //Since the complement is stored as well in the fields map\n    assertTrue(fieldInfos.size() == DocHelper.all.size()); //this is all b/c we are using the no-arg constructor\n    \n    \n    IndexOutput output = dir.createOutput(filename);\n    assertTrue(output != null);\n    //Use a RAMOutputStream\n  \n    fieldInfos.write(output);\n    output.close();\n    return fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6f9be74ca7baaef11857ad002cad40419979516","date":1309449808,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#createAndWriteFieldInfos(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#createAndWriteFieldInfos(Directory,String).mjava","sourceNew":"  public FieldInfos createAndWriteFieldInfos(Directory dir, String filename) throws IOException{\n  //Positive test of FieldInfos\n    assertTrue(testDoc != null);\n    FieldInfos fieldInfos = new FieldInfos();\n    _TestUtil.add(testDoc, fieldInfos);\n    //Since the complement is stored as well in the fields map\n    assertTrue(fieldInfos.size() == DocHelper.all.size()); //this is all b/c we are using the no-arg constructor\n    \n    \n    IndexOutput output = dir.createOutput(filename, newIOContext(random));\n    assertTrue(output != null);\n    //Use a RAMOutputStream\n  \n    fieldInfos.write(output);\n    output.close();\n    return fieldInfos;\n  }\n\n","sourceOld":"  public FieldInfos createAndWriteFieldInfos(Directory dir, String filename) throws IOException{\n  //Positive test of FieldInfos\n    assertTrue(testDoc != null);\n    FieldInfos fieldInfos = new FieldInfos();\n    _TestUtil.add(testDoc, fieldInfos);\n    //Since the complement is stored as well in the fields map\n    assertTrue(fieldInfos.size() == DocHelper.all.size()); //this is all b/c we are using the no-arg constructor\n    \n    \n    IndexOutput output = dir.createOutput(filename, IOContext.DEFAULT);\n    assertTrue(output != null);\n    //Use a RAMOutputStream\n  \n    fieldInfos.write(output);\n    output.close();\n    return fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#createAndWriteFieldInfos(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#createAndWriteFieldInfos(Directory,String).mjava","sourceNew":"  public FieldInfos createAndWriteFieldInfos(Directory dir, String filename) throws IOException{\n  //Positive test of FieldInfos\n    assertTrue(testDoc != null);\n    FieldInfos fieldInfos = new FieldInfos();\n    _TestUtil.add(testDoc, fieldInfos);\n    //Since the complement is stored as well in the fields map\n    assertTrue(fieldInfos.size() == DocHelper.all.size()); //this is all b/c we are using the no-arg constructor\n    \n    \n    IndexOutput output = dir.createOutput(filename, newIOContext(random));\n    assertTrue(output != null);\n    //Use a RAMOutputStream\n  \n    fieldInfos.write(output);\n    output.close();\n    return fieldInfos;\n  }\n\n","sourceOld":"  public FieldInfos createAndWriteFieldInfos(Directory dir, String filename) throws IOException{\n  //Positive test of FieldInfos\n    assertTrue(testDoc != null);\n    FieldInfos fieldInfos = new FieldInfos();\n    _TestUtil.add(testDoc, fieldInfos);\n    //Since the complement is stored as well in the fields map\n    assertTrue(fieldInfos.size() == DocHelper.all.size()); //this is all b/c we are using the no-arg constructor\n    \n    \n    IndexOutput output = dir.createOutput(filename);\n    assertTrue(output != null);\n    //Use a RAMOutputStream\n  \n    fieldInfos.write(output);\n    output.close();\n    return fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#createAndWriteFieldInfos(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#createAndWriteFieldInfos(Directory,String).mjava","sourceNew":"  public FieldInfos createAndWriteFieldInfos(Directory dir, String filename) throws IOException{\n  //Positive test of FieldInfos\n    assertTrue(testDoc != null);\n    FieldInfos fieldInfos = new FieldInfos();\n    _TestUtil.add(testDoc, fieldInfos);\n    //Since the complement is stored as well in the fields map\n    assertTrue(fieldInfos.size() == DocHelper.all.size()); //this is all b/c we are using the no-arg constructor\n    \n    \n    IndexOutput output = dir.createOutput(filename, newIOContext(random));\n    assertTrue(output != null);\n    //Use a RAMOutputStream\n  \n    fieldInfos.write(output);\n    output.close();\n    return fieldInfos;\n  }\n\n","sourceOld":"  public FieldInfos createAndWriteFieldInfos(Directory dir, String filename) throws IOException{\n  //Positive test of FieldInfos\n    assertTrue(testDoc != null);\n    FieldInfos fieldInfos = new FieldInfos();\n    _TestUtil.add(testDoc, fieldInfos);\n    //Since the complement is stored as well in the fields map\n    assertTrue(fieldInfos.size() == DocHelper.all.size()); //this is all b/c we are using the no-arg constructor\n    \n    \n    IndexOutput output = dir.createOutput(filename);\n    assertTrue(output != null);\n    //Use a RAMOutputStream\n  \n    fieldInfos.write(output);\n    output.close();\n    return fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#createAndWriteFieldInfos(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#createAndWriteFieldInfos(Directory,String).mjava","sourceNew":"  public FieldInfos createAndWriteFieldInfos(Directory dir, String filename) throws IOException{\n  //Positive test of FieldInfos\n    assertTrue(testDoc != null);\n    FieldInfos fieldInfos = new FieldInfos(new FieldInfos.FieldNumberBiMap());\n    _TestUtil.add(testDoc, fieldInfos);\n    //Since the complement is stored as well in the fields map\n    assertTrue(fieldInfos.size() == DocHelper.all.size()); //this is all b/c we are using the no-arg constructor\n    \n    \n    IndexOutput output = dir.createOutput(filename, newIOContext(random));\n    assertTrue(output != null);\n    //Use a RAMOutputStream\n  \n    FieldInfosWriter writer = Codec.getDefault().fieldInfosFormat().getFieldInfosWriter();\n    writer.write(dir, filename, fieldInfos, IOContext.DEFAULT);\n    output.close();\n    return fieldInfos;\n  }\n\n","sourceOld":"  public FieldInfos createAndWriteFieldInfos(Directory dir, String filename) throws IOException{\n  //Positive test of FieldInfos\n    assertTrue(testDoc != null);\n    FieldInfos fieldInfos = new FieldInfos();\n    _TestUtil.add(testDoc, fieldInfos);\n    //Since the complement is stored as well in the fields map\n    assertTrue(fieldInfos.size() == DocHelper.all.size()); //this is all b/c we are using the no-arg constructor\n    \n    \n    IndexOutput output = dir.createOutput(filename, newIOContext(random));\n    assertTrue(output != null);\n    //Use a RAMOutputStream\n  \n    fieldInfos.write(output);\n    output.close();\n    return fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFieldInfos#createAndWriteFieldInfos(Directory,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldInfos#createAndWriteFieldInfos(Directory,String).mjava","sourceNew":"  public FieldInfos createAndWriteFieldInfos(Directory dir, String filename) throws IOException{\n  //Positive test of FieldInfos\n    assertTrue(testDoc != null);\n    FieldInfos fieldInfos = new FieldInfos(new FieldInfos.FieldNumberBiMap());\n    _TestUtil.add(testDoc, fieldInfos);\n    //Since the complement is stored as well in the fields map\n    assertTrue(fieldInfos.size() == DocHelper.all.size()); //this is all b/c we are using the no-arg constructor\n    \n    \n    IndexOutput output = dir.createOutput(filename, newIOContext(random));\n    assertTrue(output != null);\n    //Use a RAMOutputStream\n  \n    FieldInfosWriter writer = Codec.getDefault().fieldInfosFormat().getFieldInfosWriter();\n    writer.write(dir, filename, fieldInfos, IOContext.DEFAULT);\n    output.close();\n    return fieldInfos;\n  }\n\n","sourceOld":"  public FieldInfos createAndWriteFieldInfos(Directory dir, String filename) throws IOException{\n  //Positive test of FieldInfos\n    assertTrue(testDoc != null);\n    FieldInfos fieldInfos = new FieldInfos(new FieldInfos.FieldNumberBiMap());\n    _TestUtil.add(testDoc, fieldInfos);\n    //Since the complement is stored as well in the fields map\n    assertTrue(fieldInfos.size() == DocHelper.all.size()); //this is all b/c we are using the no-arg constructor\n    \n    \n    IndexOutput output = dir.createOutput(filename, newIOContext(random));\n    assertTrue(output != null);\n    //Use a RAMOutputStream\n  \n    FieldInfosWriter writer = Codec.getDefault().fieldInfosFormat().getFieldInfosWriter();\n    writer.write(dir, filename, fieldInfos, IOContext.DEFAULT);\n    output.close();\n    return fieldInfos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5c2cf5832e0f01230bc2c4886e16887a0d1f3341":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5c2cf5832e0f01230bc2c4886e16887a0d1f3341"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5c2cf5832e0f01230bc2c4886e16887a0d1f3341"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3cc749c053615f5871f3b95715fe292f34e70a53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b6f9be74ca7baaef11857ad002cad40419979516":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"3cc749c053615f5871f3b95715fe292f34e70a53":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["5c2cf5832e0f01230bc2c4886e16887a0d1f3341"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["5c2cf5832e0f01230bc2c4886e16887a0d1f3341","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["5c2cf5832e0f01230bc2c4886e16887a0d1f3341","b6f9be74ca7baaef11857ad002cad40419979516"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"5c2cf5832e0f01230bc2c4886e16887a0d1f3341":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","639c36565ce03aed5b0fce7c9e4448e53a1f7efd","5d004d0e0b3f65bb40da76d476d659d7888270e8","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5c2cf5832e0f01230bc2c4886e16887a0d1f3341","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f"],"b6f9be74ca7baaef11857ad002cad40419979516":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"3cc749c053615f5871f3b95715fe292f34e70a53":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["b6f9be74ca7baaef11857ad002cad40419979516"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["3cc749c053615f5871f3b95715fe292f34e70a53","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}