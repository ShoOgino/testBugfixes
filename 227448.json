{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testCustomQueryParserWildcard().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testCustomQueryParserWildcard().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testCustomQueryParserWildcard().mjava","sourceNew":"  public void testCustomQueryParserWildcard() {\n    try {\n      new QPTestParser(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)).parse(\"a?t\", \"contents\");\n      fail(\"Wildcard queries should not be allowed\");\n    } catch (QueryNodeException expected) {\n      // expected exception\n    }\n  }\n\n","sourceOld":"  public void testCustomQueryParserWildcard() {\n    try {\n      new QPTestParser(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)).parse(\"a?t\", \"contents\");\n      fail(\"Wildcard queries should not be allowed\");\n    } catch (QueryNodeException expected) {\n      // expected exception\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testCustomQueryParserWildcard().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testCustomQueryParserWildcard().mjava","sourceNew":"  // Wildcard queries should not be allowed\n  public void testCustomQueryParserWildcard() {\n    expectThrows(QueryNodeException.class, () -> {\n      new QPTestParser(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)).parse(\"a?t\", \"contents\");\n    });\n  }\n\n","sourceOld":"  public void testCustomQueryParserWildcard() {\n    try {\n      new QPTestParser(new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false)).parse(\"a?t\", \"contents\");\n      fail(\"Wildcard queries should not be allowed\");\n    } catch (QueryNodeException expected) {\n      // expected exception\n    }\n  }\n\n","bugFix":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["05fe562aa248790944d43cdd478f512572835ba0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}