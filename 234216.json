{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterGraphFilter#testRandomPaths().mjava","commits":[{"id":"098528909bb70948871fd7ed865fafb87ed73964","date":1484667487,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterGraphFilter#testRandomPaths().mjava","pathOld":"/dev/null","sourceNew":"  public void testRandomPaths() throws Exception {\n    int iters = atLeast(100);\n    for(int iter=0;iter<iters;iter++) {\n      String text = randomWDFText();\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: text=\" + text + \" len=\" + text.length());\n      }\n\n      int flags = 0;\n      if (random().nextBoolean()) {\n        flags |= GENERATE_WORD_PARTS;\n      }\n      if (random().nextBoolean()) {\n        flags |= GENERATE_NUMBER_PARTS;\n      }\n      if (random().nextBoolean()) {\n        flags |= CATENATE_WORDS;\n      }\n      if (random().nextBoolean()) {\n        flags |= CATENATE_NUMBERS;\n      }\n      if (random().nextBoolean()) {\n        flags |= CATENATE_ALL;\n      }\n      if (random().nextBoolean()) {\n        flags |= PRESERVE_ORIGINAL;\n      }\n      if (random().nextBoolean()) {\n        flags |= SPLIT_ON_CASE_CHANGE;\n      }\n      if (random().nextBoolean()) {\n        flags |= SPLIT_ON_NUMERICS;\n      }\n      if (random().nextBoolean()) {\n        flags |= STEM_ENGLISH_POSSESSIVE;\n      }\n\n      verify(text, flags);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"302d34f2c66e8d489ee13078305c330cbf67b226","date":1484754357,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterGraphFilter#testRandomPaths().mjava","pathOld":"/dev/null","sourceNew":"  public void testRandomPaths() throws Exception {\n    int iters = atLeast(100);\n    for(int iter=0;iter<iters;iter++) {\n      String text = randomWDFText();\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: text=\" + text + \" len=\" + text.length());\n      }\n\n      int flags = 0;\n      if (random().nextBoolean()) {\n        flags |= GENERATE_WORD_PARTS;\n      }\n      if (random().nextBoolean()) {\n        flags |= GENERATE_NUMBER_PARTS;\n      }\n      if (random().nextBoolean()) {\n        flags |= CATENATE_WORDS;\n      }\n      if (random().nextBoolean()) {\n        flags |= CATENATE_NUMBERS;\n      }\n      if (random().nextBoolean()) {\n        flags |= CATENATE_ALL;\n      }\n      if (random().nextBoolean()) {\n        flags |= PRESERVE_ORIGINAL;\n      }\n      if (random().nextBoolean()) {\n        flags |= SPLIT_ON_CASE_CHANGE;\n      }\n      if (random().nextBoolean()) {\n        flags |= SPLIT_ON_NUMERICS;\n      }\n      if (random().nextBoolean()) {\n        flags |= STEM_ENGLISH_POSSESSIVE;\n      }\n\n      verify(text, flags);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57c6c784f777a2cc8fa014507ea129526822714d","date":1579733373,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterGraphFilter#testRandomPaths().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterGraphFilter#testRandomPaths().mjava","sourceNew":"  public void testRandomPaths() throws Exception {\n    int iters = atLeast(10);\n    for(int iter=0;iter<iters;iter++) {\n      String text = randomWDFText();\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: text=\" + text + \" len=\" + text.length());\n      }\n\n      int flags = 0;\n      if (random().nextBoolean()) {\n        flags |= GENERATE_WORD_PARTS;\n      }\n      if (random().nextBoolean()) {\n        flags |= GENERATE_NUMBER_PARTS;\n      }\n      if (random().nextBoolean()) {\n        flags |= CATENATE_WORDS;\n      }\n      if (random().nextBoolean()) {\n        flags |= CATENATE_NUMBERS;\n      }\n      if (random().nextBoolean()) {\n        flags |= CATENATE_ALL;\n      }\n      if (random().nextBoolean()) {\n        flags |= PRESERVE_ORIGINAL;\n      }\n      if (random().nextBoolean()) {\n        flags |= SPLIT_ON_CASE_CHANGE;\n      }\n      if (random().nextBoolean()) {\n        flags |= SPLIT_ON_NUMERICS;\n      }\n      if (random().nextBoolean()) {\n        flags |= STEM_ENGLISH_POSSESSIVE;\n      }\n\n      verify(text, flags);\n    }\n  }\n\n","sourceOld":"  public void testRandomPaths() throws Exception {\n    int iters = atLeast(100);\n    for(int iter=0;iter<iters;iter++) {\n      String text = randomWDFText();\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: text=\" + text + \" len=\" + text.length());\n      }\n\n      int flags = 0;\n      if (random().nextBoolean()) {\n        flags |= GENERATE_WORD_PARTS;\n      }\n      if (random().nextBoolean()) {\n        flags |= GENERATE_NUMBER_PARTS;\n      }\n      if (random().nextBoolean()) {\n        flags |= CATENATE_WORDS;\n      }\n      if (random().nextBoolean()) {\n        flags |= CATENATE_NUMBERS;\n      }\n      if (random().nextBoolean()) {\n        flags |= CATENATE_ALL;\n      }\n      if (random().nextBoolean()) {\n        flags |= PRESERVE_ORIGINAL;\n      }\n      if (random().nextBoolean()) {\n        flags |= SPLIT_ON_CASE_CHANGE;\n      }\n      if (random().nextBoolean()) {\n        flags |= SPLIT_ON_NUMERICS;\n      }\n      if (random().nextBoolean()) {\n        flags |= STEM_ENGLISH_POSSESSIVE;\n      }\n\n      verify(text, flags);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"57c6c784f777a2cc8fa014507ea129526822714d":["098528909bb70948871fd7ed865fafb87ed73964"],"098528909bb70948871fd7ed865fafb87ed73964":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57c6c784f777a2cc8fa014507ea129526822714d"],"302d34f2c66e8d489ee13078305c330cbf67b226":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","098528909bb70948871fd7ed865fafb87ed73964"]},"commit2Childs":{"57c6c784f777a2cc8fa014507ea129526822714d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"098528909bb70948871fd7ed865fafb87ed73964":["57c6c784f777a2cc8fa014507ea129526822714d","302d34f2c66e8d489ee13078305c330cbf67b226"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["098528909bb70948871fd7ed865fafb87ed73964","302d34f2c66e8d489ee13078305c330cbf67b226"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"302d34f2c66e8d489ee13078305c330cbf67b226":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","302d34f2c66e8d489ee13078305c330cbf67b226"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}