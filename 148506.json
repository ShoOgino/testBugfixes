{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/RegExp#toLightAutomaton(LightAutomatonProvider).mjava","commits":[{"id":"ac34f0c5bb9274821fb0cb18075234e02002e9bf","date":1402508126,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/RegExp#toLightAutomaton(LightAutomatonProvider).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/RegExp#toAutomaton(AutomatonProvider).mjava","sourceNew":"  /**\n   * Constructs new <code>LightAutomaton</code> from this <code>RegExp</code>. The\n   * constructed automaton is minimal and deterministic and has no transitions\n   * to dead states.\n   * \n   * @param automaton_provider provider of automata for named identifiers\n   * @exception IllegalArgumentException if this regular expression uses a named\n   *              identifier that is not available from the automaton provider\n   */\n  public LightAutomaton toLightAutomaton(LightAutomatonProvider automaton_provider)\n      throws IllegalArgumentException {\n    return toLightAutomaton(null, automaton_provider);\n  }\n\n","sourceOld":"  /**\n   * Constructs new <code>Automaton</code> from this <code>RegExp</code>. The\n   * constructed automaton is minimal and deterministic and has no transitions\n   * to dead states.\n   * \n   * @param automaton_provider provider of automata for named identifiers\n   * @exception IllegalArgumentException if this regular expression uses a named\n   *              identifier that is not available from the automaton provider\n   */\n  public Automaton toAutomaton(AutomatonProvider automaton_provider)\n      throws IllegalArgumentException {\n    return toAutomatonAllowMutate(null, automaton_provider);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/RegExp#toAutomaton(AutomatonProvider).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/RegExp#toLightAutomaton(LightAutomatonProvider).mjava","sourceNew":"  /**\n   * Constructs new <code>Automaton</code> from this <code>RegExp</code>. The\n   * constructed automaton is minimal and deterministic and has no transitions\n   * to dead states.\n   * \n   * @param automaton_provider provider of automata for named identifiers\n   * @exception IllegalArgumentException if this regular expression uses a named\n   *              identifier that is not available from the automaton provider\n   */\n  public Automaton toAutomaton(AutomatonProvider automaton_provider)\n      throws IllegalArgumentException {\n    return toAutomaton(null, automaton_provider);\n  }\n\n","sourceOld":"  /**\n   * Constructs new <code>LightAutomaton</code> from this <code>RegExp</code>. The\n   * constructed automaton is minimal and deterministic and has no transitions\n   * to dead states.\n   * \n   * @param automaton_provider provider of automata for named identifiers\n   * @exception IllegalArgumentException if this regular expression uses a named\n   *              identifier that is not available from the automaton provider\n   */\n  public LightAutomaton toLightAutomaton(LightAutomatonProvider automaton_provider)\n      throws IllegalArgumentException {\n    return toLightAutomaton(null, automaton_provider);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["ac34f0c5bb9274821fb0cb18075234e02002e9bf"],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ac34f0c5bb9274821fb0cb18075234e02002e9bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":[],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}