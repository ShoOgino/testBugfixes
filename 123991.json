{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyReader#testReaderRefreshResult().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyReader#testReaderRefreshResult().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyReader#testReaderRefreshResult().mjava","sourceNew":"  /**\n   * Test the boolean returned by TR.refresh\n   * @throws Exception\n   */\n  @Test\n  public void testReaderRefreshResult() throws Exception {\n    Directory dir = null;\n    DirectoryTaxonomyWriter ltw = null;\n    DirectoryTaxonomyReader ltr = null;\n    \n    try {\n      dir = newDirectory();\n      ltw = new DirectoryTaxonomyWriter(dir);\n      \n      ltw.addCategory(new CategoryPath(\"a\"));\n      ltw.commit();\n      \n      ltr = new DirectoryTaxonomyReader(dir);\n      assertFalse(\"Nothing has changed\",ltr.refresh());\n      \n      ltw.addCategory(new CategoryPath(\"b\"));\n      ltw.commit();\n      \n      assertTrue(\"changes were committed\",ltr.refresh());\n      assertFalse(\"Nothing has changed\",ltr.refresh());\n    } finally {\n      IOUtils.close(ltw, ltr, dir);\n    }\n  }\n\n","sourceOld":"  /**\n   * Test the boolean returned by TR.refresh\n   * @throws Exception\n   */\n  @Test\n  public void testReaderRefreshResult() throws Exception {\n    Directory dir = null;\n    DirectoryTaxonomyWriter ltw = null;\n    DirectoryTaxonomyReader ltr = null;\n    \n    try {\n      dir = newDirectory();\n      ltw = new DirectoryTaxonomyWriter(dir);\n      \n      ltw.addCategory(new CategoryPath(\"a\"));\n      ltw.commit();\n      \n      ltr = new DirectoryTaxonomyReader(dir);\n      assertFalse(\"Nothing has changed\",ltr.refresh());\n      \n      ltw.addCategory(new CategoryPath(\"b\"));\n      ltw.commit();\n      \n      assertTrue(\"changes were committed\",ltr.refresh());\n      assertFalse(\"Nothing has changed\",ltr.refresh());\n    } finally {\n      IOUtils.close(ltw, ltr, dir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyReader#testReaderRefreshResult().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyReader#testReaderRefreshResult().mjava","sourceNew":"  /**\n   * Test the boolean returned by TR.refresh\n   */\n  @Test\n  public void testReaderRefreshResult() throws Exception {\n    Directory dir = null;\n    DirectoryTaxonomyWriter ltw = null;\n    DirectoryTaxonomyReader ltr = null;\n    \n    try {\n      dir = newDirectory();\n      ltw = new DirectoryTaxonomyWriter(dir);\n      \n      ltw.addCategory(new CategoryPath(\"a\"));\n      ltw.commit();\n      \n      ltr = new DirectoryTaxonomyReader(dir);\n      assertFalse(\"Nothing has changed\",ltr.refresh());\n      \n      ltw.addCategory(new CategoryPath(\"b\"));\n      ltw.commit();\n      \n      assertTrue(\"changes were committed\",ltr.refresh());\n      assertFalse(\"Nothing has changed\",ltr.refresh());\n    } finally {\n      IOUtils.close(ltw, ltr, dir);\n    }\n  }\n\n","sourceOld":"  /**\n   * Test the boolean returned by TR.refresh\n   * @throws Exception\n   */\n  @Test\n  public void testReaderRefreshResult() throws Exception {\n    Directory dir = null;\n    DirectoryTaxonomyWriter ltw = null;\n    DirectoryTaxonomyReader ltr = null;\n    \n    try {\n      dir = newDirectory();\n      ltw = new DirectoryTaxonomyWriter(dir);\n      \n      ltw.addCategory(new CategoryPath(\"a\"));\n      ltw.commit();\n      \n      ltr = new DirectoryTaxonomyReader(dir);\n      assertFalse(\"Nothing has changed\",ltr.refresh());\n      \n      ltw.addCategory(new CategoryPath(\"b\"));\n      ltw.commit();\n      \n      assertTrue(\"changes were committed\",ltr.refresh());\n      assertFalse(\"Nothing has changed\",ltr.refresh());\n    } finally {\n      IOUtils.close(ltw, ltr, dir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1","date":1353511594,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyReader#testOpenIfChangedResult().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyReader#testReaderRefreshResult().mjava","sourceNew":"  @Test\n  public void testOpenIfChangedResult() throws Exception {\n    Directory dir = null;\n    DirectoryTaxonomyWriter ltw = null;\n    DirectoryTaxonomyReader ltr = null;\n    \n    try {\n      dir = newDirectory();\n      ltw = new DirectoryTaxonomyWriter(dir);\n      \n      ltw.addCategory(new CategoryPath(\"a\"));\n      ltw.commit();\n      \n      ltr = new DirectoryTaxonomyReader(dir);\n      assertNull(\"Nothing has changed\", TaxonomyReader.openIfChanged(ltr));\n      \n      ltw.addCategory(new CategoryPath(\"b\"));\n      ltw.commit();\n      \n      DirectoryTaxonomyReader newtr = TaxonomyReader.openIfChanged(ltr);\n      assertNotNull(\"changes were committed\", newtr);\n      assertNull(\"Nothing has changed\", TaxonomyReader.openIfChanged(newtr));\n      newtr.close();\n    } finally {\n      IOUtils.close(ltw, ltr, dir);\n    }\n  }\n\n","sourceOld":"  /**\n   * Test the boolean returned by TR.refresh\n   */\n  @Test\n  public void testReaderRefreshResult() throws Exception {\n    Directory dir = null;\n    DirectoryTaxonomyWriter ltw = null;\n    DirectoryTaxonomyReader ltr = null;\n    \n    try {\n      dir = newDirectory();\n      ltw = new DirectoryTaxonomyWriter(dir);\n      \n      ltw.addCategory(new CategoryPath(\"a\"));\n      ltw.commit();\n      \n      ltr = new DirectoryTaxonomyReader(dir);\n      assertFalse(\"Nothing has changed\",ltr.refresh());\n      \n      ltw.addCategory(new CategoryPath(\"b\"));\n      ltw.commit();\n      \n      assertTrue(\"changes were committed\",ltr.refresh());\n      assertFalse(\"Nothing has changed\",ltr.refresh());\n    } finally {\n      IOUtils.close(ltw, ltr, dir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyReader#testReaderRefreshResult().mjava","sourceNew":null,"sourceOld":"  /**\n   * Test the boolean returned by TR.refresh\n   */\n  @Test\n  public void testReaderRefreshResult() throws Exception {\n    Directory dir = null;\n    DirectoryTaxonomyWriter ltw = null;\n    DirectoryTaxonomyReader ltr = null;\n    \n    try {\n      dir = newDirectory();\n      ltw = new DirectoryTaxonomyWriter(dir);\n      \n      ltw.addCategory(new CategoryPath(\"a\"));\n      ltw.commit();\n      \n      ltr = new DirectoryTaxonomyReader(dir);\n      assertFalse(\"Nothing has changed\",ltr.refresh());\n      \n      ltw.addCategory(new CategoryPath(\"b\"));\n      ltw.commit();\n      \n      assertTrue(\"changes were committed\",ltr.refresh());\n      assertFalse(\"Nothing has changed\",ltr.refresh());\n    } finally {\n      IOUtils.close(ltw, ltr, dir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["407687e67faf6e1f02a211ca078d8e3eed631027","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}