{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testMultipleSegments().mjava","commits":[{"id":"8c33f6677a2078739058f81eca1df69d12cd62b0","date":1432799589,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testMultipleSegments().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testMultipleSegments().mjava","sourceNew":"  @Test\n  public void testMultipleSegments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    Document document = new Document();\n    List<Entry> entries = new ArrayList<>();\n\n    // ensure at least some segments have no suggest field\n    for (int i = num; i > 0; i--) {\n      if (random().nextInt(4) == 1) {\n        document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n        entries.add(new Entry(\"abc_\" + i, i));\n      }\n      document.add(new IntField(\"weight_fld\", i, Field.Store.YES));\n      iw.addDocument(document);\n      document.clear();\n      if (usually()) {\n        iw.commit();\n      }\n    }\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"));\n    TopSuggestDocs suggest = indexSearcher.suggest(query, (entries.size() == 0) ? 1 : entries.size());\n    assertSuggestions(suggest, entries.toArray(new Entry[entries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testMultipleSegments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    Document document = new Document();\n    List<Entry> entries = new ArrayList<>();\n\n    // ensure at least some segments have no suggest field\n    for (int i = num; i > 0; i--) {\n      if (random().nextInt(4) == 1) {\n        document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, i));\n        entries.add(new Entry(\"abc_\" + i, i));\n      }\n      document.add(new IntField(\"weight_fld\", i, Field.Store.YES));\n      iw.addDocument(document);\n      document.clear();\n      if (usually()) {\n        iw.commit();\n      }\n    }\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", (entries.size() == 0) ? 1 : entries.size());\n    assertSuggestions(suggest, entries.toArray(new Entry[entries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e919be7c57e6b5ae11c5beaa2b528f092f7687c4","date":1432802319,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testMultipleSegments().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testMultipleSegments().mjava","sourceNew":"  @Test\n  public void testMultipleSegments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    List<Entry> entries = new ArrayList<>();\n\n    // ensure at least some segments have no suggest field\n    for (int i = num; i > 0; i--) {\n      Document document = new Document();\n      if (random().nextInt(4) == 1) {\n        document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n        entries.add(new Entry(\"abc_\" + i, i));\n      }\n      document.add(new IntField(\"weight_fld\", i, Field.Store.YES));\n      iw.addDocument(document);\n      if (usually()) {\n        iw.commit();\n      }\n    }\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"));\n    TopSuggestDocs suggest = indexSearcher.suggest(query, (entries.size() == 0) ? 1 : entries.size());\n    assertSuggestions(suggest, entries.toArray(new Entry[entries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testMultipleSegments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    Document document = new Document();\n    List<Entry> entries = new ArrayList<>();\n\n    // ensure at least some segments have no suggest field\n    for (int i = num; i > 0; i--) {\n      if (random().nextInt(4) == 1) {\n        document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n        entries.add(new Entry(\"abc_\" + i, i));\n      }\n      document.add(new IntField(\"weight_fld\", i, Field.Store.YES));\n      iw.addDocument(document);\n      document.clear();\n      if (usually()) {\n        iw.commit();\n      }\n    }\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"));\n    TopSuggestDocs suggest = indexSearcher.suggest(query, (entries.size() == 0) ? 1 : entries.size());\n    assertSuggestions(suggest, entries.toArray(new Entry[entries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testMultipleSegments().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testMultipleSegments().mjava","sourceNew":"  @Test\n  public void testMultipleSegments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    List<Entry> entries = new ArrayList<>();\n\n    // ensure at least some segments have no suggest field\n    for (int i = num; i > 0; i--) {\n      Document document = new Document();\n      if (random().nextInt(4) == 1) {\n        document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n        entries.add(new Entry(\"abc_\" + i, i));\n      }\n      document.add(new StoredField(\"weight_fld\", i));\n      iw.addDocument(document);\n      if (usually()) {\n        iw.commit();\n      }\n    }\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"));\n    TopSuggestDocs suggest = indexSearcher.suggest(query, (entries.size() == 0) ? 1 : entries.size());\n    assertSuggestions(suggest, entries.toArray(new Entry[entries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testMultipleSegments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    List<Entry> entries = new ArrayList<>();\n\n    // ensure at least some segments have no suggest field\n    for (int i = num; i > 0; i--) {\n      Document document = new Document();\n      if (random().nextInt(4) == 1) {\n        document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n        entries.add(new Entry(\"abc_\" + i, i));\n      }\n      document.add(new IntField(\"weight_fld\", i, Field.Store.YES));\n      iw.addDocument(document);\n      if (usually()) {\n        iw.commit();\n      }\n    }\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"));\n    TopSuggestDocs suggest = indexSearcher.suggest(query, (entries.size() == 0) ? 1 : entries.size());\n    assertSuggestions(suggest, entries.toArray(new Entry[entries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"902a92b60648a8925bfd9bb53a78669cd2ea98fd","date":1487797466,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testMultipleSegments().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testMultipleSegments().mjava","sourceNew":"  @Test\n  public void testMultipleSegments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    List<Entry> entries = new ArrayList<>();\n\n    // ensure at least some segments have no suggest field\n    for (int i = num; i > 0; i--) {\n      Document document = new Document();\n      if (random().nextInt(4) == 1) {\n        document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n        entries.add(new Entry(\"abc_\" + i, i));\n      }\n      document.add(new StoredField(\"weight_fld\", i));\n      iw.addDocument(document);\n      if (usually()) {\n        iw.commit();\n      }\n    }\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"));\n    TopSuggestDocs suggest = indexSearcher.suggest(query, (entries.size() == 0) ? 1 : entries.size(), false);\n    assertSuggestions(suggest, entries.toArray(new Entry[entries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testMultipleSegments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    List<Entry> entries = new ArrayList<>();\n\n    // ensure at least some segments have no suggest field\n    for (int i = num; i > 0; i--) {\n      Document document = new Document();\n      if (random().nextInt(4) == 1) {\n        document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n        entries.add(new Entry(\"abc_\" + i, i));\n      }\n      document.add(new StoredField(\"weight_fld\", i));\n      iw.addDocument(document);\n      if (usually()) {\n        iw.commit();\n      }\n    }\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"));\n    TopSuggestDocs suggest = indexSearcher.suggest(query, (entries.size() == 0) ? 1 : entries.size());\n    assertSuggestions(suggest, entries.toArray(new Entry[entries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e919be7c57e6b5ae11c5beaa2b528f092f7687c4":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"902a92b60648a8925bfd9bb53a78669cd2ea98fd":["770342641f7b505eaa8dccdc666158bff2419109"],"770342641f7b505eaa8dccdc666158bff2419109":["e919be7c57e6b5ae11c5beaa2b528f092f7687c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["902a92b60648a8925bfd9bb53a78669cd2ea98fd"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"e919be7c57e6b5ae11c5beaa2b528f092f7687c4":["770342641f7b505eaa8dccdc666158bff2419109"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["e919be7c57e6b5ae11c5beaa2b528f092f7687c4"],"902a92b60648a8925bfd9bb53a78669cd2ea98fd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"770342641f7b505eaa8dccdc666158bff2419109":["902a92b60648a8925bfd9bb53a78669cd2ea98fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}