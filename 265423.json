{"path":"lucene/core/src/java/org/apache/lucene/document/RangeFieldQuery#checkFieldInfo(FieldInfo).mjava","commits":[{"id":"4a52b01a73cacbd2d360240e72d64c0ba353618f","date":1489389749,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/RangeFieldQuery#checkFieldInfo(FieldInfo).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/RangeFieldQuery#checkFieldInfo(FieldInfo).mjava","sourceNew":"  /** Check indexed field info against the provided query data. */\n  private void checkFieldInfo(FieldInfo fieldInfo) {\n    if (fieldInfo.getPointDimensionCount()/2 != numDims) {\n      throw new IllegalArgumentException(\"field=\\\"\" + field + \"\\\" was indexed with numDims=\"\n          + fieldInfo.getPointDimensionCount()/2 + \" but this query has numDims=\" + numDims);\n    }\n  }\n\n","sourceOld":"  /** Check indexed field info against the provided query data. */\n  private void checkFieldInfo(FieldInfo fieldInfo) {\n    if (fieldInfo.getPointDimensionCount()/2 != numDims) {\n      throw new IllegalArgumentException(\"field=\\\"\" + field + \"\\\" was indexed with numDims=\"\n          + fieldInfo.getPointDimensionCount()/2 + \" but this query has numDims=\" + numDims);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6652c943595e92c187ee904c382863013eae28f","date":1539042663,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/RangeFieldQuery#checkFieldInfo(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/RangeFieldQuery#checkFieldInfo(FieldInfo).mjava","sourceNew":"  /** Check indexed field info against the provided query data. */\n  private void checkFieldInfo(FieldInfo fieldInfo) {\n    if (fieldInfo.getPointDataDimensionCount()/2 != numDims) {\n      throw new IllegalArgumentException(\"field=\\\"\" + field + \"\\\" was indexed with numDims=\"\n          + fieldInfo.getPointDataDimensionCount()/2 + \" but this query has numDims=\" + numDims);\n    }\n  }\n\n","sourceOld":"  /** Check indexed field info against the provided query data. */\n  private void checkFieldInfo(FieldInfo fieldInfo) {\n    if (fieldInfo.getPointDimensionCount()/2 != numDims) {\n      throw new IllegalArgumentException(\"field=\\\"\" + field + \"\\\" was indexed with numDims=\"\n          + fieldInfo.getPointDimensionCount()/2 + \" but this query has numDims=\" + numDims);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59ed8c026ba85e3c42fb89605b2032dc6f9cc241","date":1581113294,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/RangeFieldQuery#checkFieldInfo(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/RangeFieldQuery#checkFieldInfo(FieldInfo).mjava","sourceNew":"  /** Check indexed field info against the provided query data. */\n  private void checkFieldInfo(FieldInfo fieldInfo) {\n    if (fieldInfo.getPointDimensionCount()/2 != numDims) {\n      throw new IllegalArgumentException(\"field=\\\"\" + field + \"\\\" was indexed with numDims=\"\n          + fieldInfo.getPointDimensionCount()/2 + \" but this query has numDims=\" + numDims);\n    }\n  }\n\n","sourceOld":"  /** Check indexed field info against the provided query data. */\n  private void checkFieldInfo(FieldInfo fieldInfo) {\n    if (fieldInfo.getPointDataDimensionCount()/2 != numDims) {\n      throw new IllegalArgumentException(\"field=\\\"\" + field + \"\\\" was indexed with numDims=\"\n          + fieldInfo.getPointDataDimensionCount()/2 + \" but this query has numDims=\" + numDims);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["f6652c943595e92c187ee904c382863013eae28f"],"f6652c943595e92c187ee904c382863013eae28f":["4a52b01a73cacbd2d360240e72d64c0ba353618f"],"4a52b01a73cacbd2d360240e72d64c0ba353618f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"]},"commit2Childs":{"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f6652c943595e92c187ee904c382863013eae28f":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"],"4a52b01a73cacbd2d360240e72d64c0ba353618f":["f6652c943595e92c187ee904c382863013eae28f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4a52b01a73cacbd2d360240e72d64c0ba353618f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}