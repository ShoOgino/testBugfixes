{"path":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PostingsAndFreq#PostingsAndFreq(DocsAndPositionsEnum,int,int,Term...).mjava","commits":[{"id":"2eaa5d4d2618a012373ae4574ebb6563933aa9f6","date":1331337973,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PostingsAndFreq#PostingsAndFreq(DocsAndPositionsEnum,int,int,Term...).mjava","pathOld":"/dev/null","sourceNew":"    public PostingsAndFreq(DocsAndPositionsEnum postings, int docFreq, int position, Term... terms) {\n      this.postings = postings;\n      this.docFreq = docFreq;\n      this.position = position;\n      nTerms = terms==null ? 0 : terms.length;\n      if (nTerms>0) {\n        if (terms.length==1) {\n          this.terms = terms;\n        } else {\n          Term[] terms2 = new Term[terms.length];\n          System.arraycopy(terms, 0, terms2, 0, terms.length);\n          Arrays.sort(terms2);\n          this.terms = terms2;\n        }\n      } else {\n        this.terms = null;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PostingsAndFreq#PostingsAndFreq(DocsAndPositionsEnum,int,int,Term...).mjava","pathOld":"/dev/null","sourceNew":"    public PostingsAndFreq(DocsAndPositionsEnum postings, int docFreq, int position, Term... terms) {\n      this.postings = postings;\n      this.docFreq = docFreq;\n      this.position = position;\n      nTerms = terms==null ? 0 : terms.length;\n      if (nTerms>0) {\n        if (terms.length==1) {\n          this.terms = terms;\n        } else {\n          Term[] terms2 = new Term[terms.length];\n          System.arraycopy(terms, 0, terms2, 0, terms.length);\n          Arrays.sort(terms2);\n          this.terms = terms2;\n        }\n      } else {\n        this.terms = null;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PostingsAndFreq#PostingsAndFreq(PostingsEnum,int,int,Term...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery.PostingsAndFreq#PostingsAndFreq(DocsAndPositionsEnum,int,int,Term...).mjava","sourceNew":"    public PostingsAndFreq(PostingsEnum postings, int docFreq, int position, Term... terms) {\n      this.postings = postings;\n      this.docFreq = docFreq;\n      this.position = position;\n      nTerms = terms==null ? 0 : terms.length;\n      if (nTerms>0) {\n        if (terms.length==1) {\n          this.terms = terms;\n        } else {\n          Term[] terms2 = new Term[terms.length];\n          System.arraycopy(terms, 0, terms2, 0, terms.length);\n          Arrays.sort(terms2);\n          this.terms = terms2;\n        }\n      } else {\n        this.terms = null;\n      }\n    }\n\n","sourceOld":"    public PostingsAndFreq(DocsAndPositionsEnum postings, int docFreq, int position, Term... terms) {\n      this.postings = postings;\n      this.docFreq = docFreq;\n      this.position = position;\n      nTerms = terms==null ? 0 : terms.length;\n      if (nTerms>0) {\n        if (terms.length==1) {\n          this.terms = terms;\n        } else {\n          Term[] terms2 = new Term[terms.length];\n          System.arraycopy(terms, 0, terms2, 0, terms.length);\n          Arrays.sort(terms2);\n          this.terms = terms2;\n        }\n      } else {\n        this.terms = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2eaa5d4d2618a012373ae4574ebb6563933aa9f6"],"2eaa5d4d2618a012373ae4574ebb6563933aa9f6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"51f5280f31484820499077f41fcdfe92d527d9dc":["2eaa5d4d2618a012373ae4574ebb6563933aa9f6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["51f5280f31484820499077f41fcdfe92d527d9dc"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"2eaa5d4d2618a012373ae4574ebb6563933aa9f6":["38e3b736c7ca086d61b7dbb841c905ee115490da","51f5280f31484820499077f41fcdfe92d527d9dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38e3b736c7ca086d61b7dbb841c905ee115490da","2eaa5d4d2618a012373ae4574ebb6563933aa9f6"],"51f5280f31484820499077f41fcdfe92d527d9dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}