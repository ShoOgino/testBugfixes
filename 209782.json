{"path":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#testGetConfusionMatrixWithSNB().mjava","commits":[{"id":"5a07459b30549ba2b7b6ff6ab0a28200e60b0294","date":1431450341,"type":0,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#testGetConfusionMatrixWithSNB().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGetConfusionMatrixWithSNB() throws Exception {\n    LeafReader reader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      reader = populateSampleIndex(analyzer);\n      Classifier<BytesRef> classifier = new SimpleNaiveBayesClassifier(reader, analyzer, null, categoryFieldName, textFieldName);\n      ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix = ConfusionMatrixGenerator.getConfusionMatrix(reader, classifier, categoryFieldName, textFieldName);\n      assertNotNull(confusionMatrix);\n      assertNotNull(confusionMatrix.getLinearizedMatrix());\n    } finally {\n      if (reader != null) {\n        reader.close();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba9b7b122d927a15ff4837e3d72876c609fef1b","date":1441232513,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#testGetConfusionMatrixWithSNB().mjava","pathOld":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#testGetConfusionMatrixWithSNB().mjava","sourceNew":"  @Test\n  public void testGetConfusionMatrixWithSNB() throws Exception {\n    LeafReader reader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      reader = getSampleIndex(analyzer);\n      Classifier<BytesRef> classifier = new SimpleNaiveBayesClassifier(reader, analyzer, null, categoryFieldName, textFieldName);\n      ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix = ConfusionMatrixGenerator.getConfusionMatrix(reader, classifier, categoryFieldName, textFieldName);\n      assertNotNull(confusionMatrix);\n      assertNotNull(confusionMatrix.getLinearizedMatrix());\n      assertEquals(7, confusionMatrix.getNumberOfEvaluatedDocs());\n      assertTrue(confusionMatrix.getAvgClassificationTime() > 0d);\n    } finally {\n      if (reader != null) {\n        reader.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetConfusionMatrixWithSNB() throws Exception {\n    LeafReader reader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      reader = populateSampleIndex(analyzer);\n      Classifier<BytesRef> classifier = new SimpleNaiveBayesClassifier(reader, analyzer, null, categoryFieldName, textFieldName);\n      ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix = ConfusionMatrixGenerator.getConfusionMatrix(reader, classifier, categoryFieldName, textFieldName);\n      assertNotNull(confusionMatrix);\n      assertNotNull(confusionMatrix.getLinearizedMatrix());\n    } finally {\n      if (reader != null) {\n        reader.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c707e50d5d9db6929b753b3c0b0254186ee0986","date":1445602910,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#testGetConfusionMatrixWithSNB().mjava","pathOld":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#testGetConfusionMatrixWithSNB().mjava","sourceNew":"  @Test\n  public void testGetConfusionMatrixWithSNB() throws Exception {\n    LeafReader reader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      reader = getSampleIndex(analyzer);\n      Classifier<BytesRef> classifier = new SimpleNaiveBayesClassifier(reader, analyzer, null, categoryFieldName, textFieldName);\n      ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix = ConfusionMatrixGenerator.getConfusionMatrix(reader, classifier, categoryFieldName, textFieldName);\n      assertNotNull(confusionMatrix);\n      assertNotNull(confusionMatrix.getLinearizedMatrix());\n      assertEquals(7, confusionMatrix.getNumberOfEvaluatedDocs());\n      assertTrue(confusionMatrix.getAvgClassificationTime() > 0d);\n      assertTrue(confusionMatrix.getAccuracy() > 0d);\n    } finally {\n      if (reader != null) {\n        reader.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetConfusionMatrixWithSNB() throws Exception {\n    LeafReader reader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      reader = getSampleIndex(analyzer);\n      Classifier<BytesRef> classifier = new SimpleNaiveBayesClassifier(reader, analyzer, null, categoryFieldName, textFieldName);\n      ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix = ConfusionMatrixGenerator.getConfusionMatrix(reader, classifier, categoryFieldName, textFieldName);\n      assertNotNull(confusionMatrix);\n      assertNotNull(confusionMatrix.getLinearizedMatrix());\n      assertEquals(7, confusionMatrix.getNumberOfEvaluatedDocs());\n      assertTrue(confusionMatrix.getAvgClassificationTime() > 0d);\n    } finally {\n      if (reader != null) {\n        reader.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"572306117bc719f253d957bbaaa58ee0f8e482f8","date":1452262992,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#testGetConfusionMatrixWithSNB().mjava","pathOld":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#testGetConfusionMatrixWithSNB().mjava","sourceNew":"  @Test\n  public void testGetConfusionMatrixWithSNB() throws Exception {\n    LeafReader reader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      reader = getSampleIndex(analyzer);\n      Classifier<BytesRef> classifier = new SimpleNaiveBayesClassifier(reader, analyzer, null, categoryFieldName, textFieldName);\n      ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix = ConfusionMatrixGenerator.getConfusionMatrix(reader, classifier, categoryFieldName, textFieldName);\n      assertNotNull(confusionMatrix);\n      assertNotNull(confusionMatrix.getLinearizedMatrix());\n      assertEquals(7, confusionMatrix.getNumberOfEvaluatedDocs());\n      assertTrue(confusionMatrix.getAvgClassificationTime() >= 0d);\n      assertTrue(confusionMatrix.getAccuracy() >= 0d);\n      assertTrue(confusionMatrix.getAccuracy() <= 1d);\n      assertTrue(confusionMatrix.getPrecision() >= 0d);\n      assertTrue(confusionMatrix.getPrecision() <= 1d);\n      assertTrue(confusionMatrix.getRecall() >= 0d);\n      assertTrue(confusionMatrix.getRecall() <= 1d);\n    } finally {\n      if (reader != null) {\n        reader.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetConfusionMatrixWithSNB() throws Exception {\n    LeafReader reader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      reader = getSampleIndex(analyzer);\n      Classifier<BytesRef> classifier = new SimpleNaiveBayesClassifier(reader, analyzer, null, categoryFieldName, textFieldName);\n      ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix = ConfusionMatrixGenerator.getConfusionMatrix(reader, classifier, categoryFieldName, textFieldName);\n      assertNotNull(confusionMatrix);\n      assertNotNull(confusionMatrix.getLinearizedMatrix());\n      assertEquals(7, confusionMatrix.getNumberOfEvaluatedDocs());\n      assertTrue(confusionMatrix.getAvgClassificationTime() > 0d);\n      assertTrue(confusionMatrix.getAccuracy() > 0d);\n    } finally {\n      if (reader != null) {\n        reader.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["cbc45ebd0910e885a4f2680ecb1875d36ca3d0e2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cbc45ebd0910e885a4f2680ecb1875d36ca3d0e2","date":1459428331,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#testGetConfusionMatrixWithSNB().mjava","pathOld":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#testGetConfusionMatrixWithSNB().mjava","sourceNew":"  @Test\n  public void testGetConfusionMatrixWithSNB() throws Exception {\n    LeafReader reader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      reader = getSampleIndex(analyzer);\n      Classifier<BytesRef> classifier = new SimpleNaiveBayesClassifier(reader, analyzer, null, categoryFieldName, textFieldName);\n      ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix = ConfusionMatrixGenerator.getConfusionMatrix(reader, classifier, categoryFieldName, textFieldName);\n      assertNotNull(confusionMatrix);\n      assertNotNull(confusionMatrix.getLinearizedMatrix());\n      assertEquals(7, confusionMatrix.getNumberOfEvaluatedDocs());\n      assertTrue(confusionMatrix.getAvgClassificationTime() >= 0d);\n      double accuracy = confusionMatrix.getAccuracy();\n      assertTrue(accuracy >= 0d);\n      assertTrue(accuracy <= 1d);\n      double precision = confusionMatrix.getPrecision();\n      assertTrue(precision >= 0d);\n      assertTrue(precision <= 1d);\n      double recall = confusionMatrix.getRecall();\n      assertTrue(recall >= 0d);\n      assertTrue(recall <= 1d);\n    } finally {\n      if (reader != null) {\n        reader.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetConfusionMatrixWithSNB() throws Exception {\n    LeafReader reader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      reader = getSampleIndex(analyzer);\n      Classifier<BytesRef> classifier = new SimpleNaiveBayesClassifier(reader, analyzer, null, categoryFieldName, textFieldName);\n      ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix = ConfusionMatrixGenerator.getConfusionMatrix(reader, classifier, categoryFieldName, textFieldName);\n      assertNotNull(confusionMatrix);\n      assertNotNull(confusionMatrix.getLinearizedMatrix());\n      assertEquals(7, confusionMatrix.getNumberOfEvaluatedDocs());\n      assertTrue(confusionMatrix.getAvgClassificationTime() >= 0d);\n      assertTrue(confusionMatrix.getAccuracy() >= 0d);\n      assertTrue(confusionMatrix.getAccuracy() <= 1d);\n      assertTrue(confusionMatrix.getPrecision() >= 0d);\n      assertTrue(confusionMatrix.getPrecision() <= 1d);\n      assertTrue(confusionMatrix.getRecall() >= 0d);\n      assertTrue(confusionMatrix.getRecall() <= 1d);\n    } finally {\n      if (reader != null) {\n        reader.close();\n      }\n    }\n  }\n\n","bugFix":["572306117bc719f253d957bbaaa58ee0f8e482f8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eff5db4d2f0dea2783c3351ff4b5b9e63e0b5299","date":1460106403,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#testGetConfusionMatrixWithSNB().mjava","pathOld":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#testGetConfusionMatrixWithSNB().mjava","sourceNew":"  @Test\n  public void testGetConfusionMatrixWithSNB() throws Exception {\n    LeafReader reader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      reader = getSampleIndex(analyzer);\n      Classifier<BytesRef> classifier = new SimpleNaiveBayesClassifier(reader, analyzer, null, categoryFieldName, textFieldName);\n      ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix = ConfusionMatrixGenerator.getConfusionMatrix(reader,\n          classifier, categoryFieldName, textFieldName, -1);\n      assertNotNull(confusionMatrix);\n      assertNotNull(confusionMatrix.getLinearizedMatrix());\n      assertEquals(7, confusionMatrix.getNumberOfEvaluatedDocs());\n      assertTrue(confusionMatrix.getAvgClassificationTime() >= 0d);\n      double accuracy = confusionMatrix.getAccuracy();\n      assertTrue(accuracy >= 0d);\n      assertTrue(accuracy <= 1d);\n      double precision = confusionMatrix.getPrecision();\n      assertTrue(precision >= 0d);\n      assertTrue(precision <= 1d);\n      double recall = confusionMatrix.getRecall();\n      assertTrue(recall >= 0d);\n      assertTrue(recall <= 1d);\n      double f1Measure = confusionMatrix.getF1Measure();\n      assertTrue(f1Measure >= 0d);\n      assertTrue(f1Measure <= 1d);\n    } finally {\n      if (reader != null) {\n        reader.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetConfusionMatrixWithSNB() throws Exception {\n    LeafReader reader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      reader = getSampleIndex(analyzer);\n      Classifier<BytesRef> classifier = new SimpleNaiveBayesClassifier(reader, analyzer, null, categoryFieldName, textFieldName);\n      ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix = ConfusionMatrixGenerator.getConfusionMatrix(reader, classifier, categoryFieldName, textFieldName);\n      assertNotNull(confusionMatrix);\n      assertNotNull(confusionMatrix.getLinearizedMatrix());\n      assertEquals(7, confusionMatrix.getNumberOfEvaluatedDocs());\n      assertTrue(confusionMatrix.getAvgClassificationTime() >= 0d);\n      double accuracy = confusionMatrix.getAccuracy();\n      assertTrue(accuracy >= 0d);\n      assertTrue(accuracy <= 1d);\n      double precision = confusionMatrix.getPrecision();\n      assertTrue(precision >= 0d);\n      assertTrue(precision <= 1d);\n      double recall = confusionMatrix.getRecall();\n      assertTrue(recall >= 0d);\n      assertTrue(recall <= 1d);\n    } finally {\n      if (reader != null) {\n        reader.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#testGetConfusionMatrixWithSNB().mjava","pathOld":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#testGetConfusionMatrixWithSNB().mjava","sourceNew":"  @Test\n  public void testGetConfusionMatrixWithSNB() throws Exception {\n    LeafReader reader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      reader = getSampleIndex(analyzer);\n      Classifier<BytesRef> classifier = new SimpleNaiveBayesClassifier(reader, analyzer, null, categoryFieldName, textFieldName);\n      ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix = ConfusionMatrixGenerator.getConfusionMatrix(reader,\n          classifier, categoryFieldName, textFieldName, -1);\n      assertNotNull(confusionMatrix);\n      assertNotNull(confusionMatrix.getLinearizedMatrix());\n      assertEquals(7, confusionMatrix.getNumberOfEvaluatedDocs());\n      assertTrue(confusionMatrix.getAvgClassificationTime() >= 0d);\n      double accuracy = confusionMatrix.getAccuracy();\n      assertTrue(accuracy >= 0d);\n      assertTrue(accuracy <= 1d);\n      double precision = confusionMatrix.getPrecision();\n      assertTrue(precision >= 0d);\n      assertTrue(precision <= 1d);\n      double recall = confusionMatrix.getRecall();\n      assertTrue(recall >= 0d);\n      assertTrue(recall <= 1d);\n      double f1Measure = confusionMatrix.getF1Measure();\n      assertTrue(f1Measure >= 0d);\n      assertTrue(f1Measure <= 1d);\n    } finally {\n      if (reader != null) {\n        reader.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetConfusionMatrixWithSNB() throws Exception {\n    LeafReader reader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      reader = getSampleIndex(analyzer);\n      Classifier<BytesRef> classifier = new SimpleNaiveBayesClassifier(reader, analyzer, null, categoryFieldName, textFieldName);\n      ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix = ConfusionMatrixGenerator.getConfusionMatrix(reader, classifier, categoryFieldName, textFieldName);\n      assertNotNull(confusionMatrix);\n      assertNotNull(confusionMatrix.getLinearizedMatrix());\n      assertEquals(7, confusionMatrix.getNumberOfEvaluatedDocs());\n      assertTrue(confusionMatrix.getAvgClassificationTime() >= 0d);\n      double accuracy = confusionMatrix.getAccuracy();\n      assertTrue(accuracy >= 0d);\n      assertTrue(accuracy <= 1d);\n      double precision = confusionMatrix.getPrecision();\n      assertTrue(precision >= 0d);\n      assertTrue(precision <= 1d);\n      double recall = confusionMatrix.getRecall();\n      assertTrue(recall >= 0d);\n      assertTrue(recall <= 1d);\n    } finally {\n      if (reader != null) {\n        reader.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e71b30ca45cace3116f6ee06a0bbcb578707fa52","date":1495110978,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#testGetConfusionMatrixWithSNB().mjava","pathOld":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#testGetConfusionMatrixWithSNB().mjava","sourceNew":"  @Test\n  public void testGetConfusionMatrixWithSNB() throws Exception {\n    LeafReader reader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      reader = getSampleIndex(analyzer);\n      Classifier<BytesRef> classifier = new SimpleNaiveBayesClassifier(reader, analyzer, null, categoryFieldName, textFieldName);\n      ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix = ConfusionMatrixGenerator.getConfusionMatrix(reader,\n          classifier, categoryFieldName, textFieldName, -1);\n      checkCM(confusionMatrix);\n    } finally {\n      if (reader != null) {\n        reader.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetConfusionMatrixWithSNB() throws Exception {\n    LeafReader reader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      reader = getSampleIndex(analyzer);\n      Classifier<BytesRef> classifier = new SimpleNaiveBayesClassifier(reader, analyzer, null, categoryFieldName, textFieldName);\n      ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix = ConfusionMatrixGenerator.getConfusionMatrix(reader,\n          classifier, categoryFieldName, textFieldName, -1);\n      assertNotNull(confusionMatrix);\n      assertNotNull(confusionMatrix.getLinearizedMatrix());\n      assertEquals(7, confusionMatrix.getNumberOfEvaluatedDocs());\n      assertTrue(confusionMatrix.getAvgClassificationTime() >= 0d);\n      double accuracy = confusionMatrix.getAccuracy();\n      assertTrue(accuracy >= 0d);\n      assertTrue(accuracy <= 1d);\n      double precision = confusionMatrix.getPrecision();\n      assertTrue(precision >= 0d);\n      assertTrue(precision <= 1d);\n      double recall = confusionMatrix.getRecall();\n      assertTrue(recall >= 0d);\n      assertTrue(recall <= 1d);\n      double f1Measure = confusionMatrix.getF1Measure();\n      assertTrue(f1Measure >= 0d);\n      assertTrue(f1Measure <= 1d);\n    } finally {\n      if (reader != null) {\n        reader.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#testGetConfusionMatrixWithSNB().mjava","pathOld":"lucene/classification/src/test/org/apache/lucene/classification/utils/ConfusionMatrixGeneratorTest#testGetConfusionMatrixWithSNB().mjava","sourceNew":"  @Test\n  public void testGetConfusionMatrixWithSNB() throws Exception {\n    LeafReader reader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      reader = getSampleIndex(analyzer);\n      Classifier<BytesRef> classifier = new SimpleNaiveBayesClassifier(reader, analyzer, null, categoryFieldName, textFieldName);\n      ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix = ConfusionMatrixGenerator.getConfusionMatrix(reader,\n          classifier, categoryFieldName, textFieldName, -1);\n      checkCM(confusionMatrix);\n    } finally {\n      if (reader != null) {\n        reader.close();\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetConfusionMatrixWithSNB() throws Exception {\n    LeafReader reader = null;\n    try {\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      reader = getSampleIndex(analyzer);\n      Classifier<BytesRef> classifier = new SimpleNaiveBayesClassifier(reader, analyzer, null, categoryFieldName, textFieldName);\n      ConfusionMatrixGenerator.ConfusionMatrix confusionMatrix = ConfusionMatrixGenerator.getConfusionMatrix(reader,\n          classifier, categoryFieldName, textFieldName, -1);\n      assertNotNull(confusionMatrix);\n      assertNotNull(confusionMatrix.getLinearizedMatrix());\n      assertEquals(7, confusionMatrix.getNumberOfEvaluatedDocs());\n      assertTrue(confusionMatrix.getAvgClassificationTime() >= 0d);\n      double accuracy = confusionMatrix.getAccuracy();\n      assertTrue(accuracy >= 0d);\n      assertTrue(accuracy <= 1d);\n      double precision = confusionMatrix.getPrecision();\n      assertTrue(precision >= 0d);\n      assertTrue(precision <= 1d);\n      double recall = confusionMatrix.getRecall();\n      assertTrue(recall >= 0d);\n      assertTrue(recall <= 1d);\n      double f1Measure = confusionMatrix.getF1Measure();\n      assertTrue(f1Measure >= 0d);\n      assertTrue(f1Measure <= 1d);\n    } finally {\n      if (reader != null) {\n        reader.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e71b30ca45cace3116f6ee06a0bbcb578707fa52":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"cbc45ebd0910e885a4f2680ecb1875d36ca3d0e2":["572306117bc719f253d957bbaaa58ee0f8e482f8"],"9ba9b7b122d927a15ff4837e3d72876c609fef1b":["5a07459b30549ba2b7b6ff6ab0a28200e60b0294"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","e71b30ca45cace3116f6ee06a0bbcb578707fa52"],"5a07459b30549ba2b7b6ff6ab0a28200e60b0294":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"eff5db4d2f0dea2783c3351ff4b5b9e63e0b5299":["cbc45ebd0910e885a4f2680ecb1875d36ca3d0e2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["cbc45ebd0910e885a4f2680ecb1875d36ca3d0e2","eff5db4d2f0dea2783c3351ff4b5b9e63e0b5299"],"2c707e50d5d9db6929b753b3c0b0254186ee0986":["9ba9b7b122d927a15ff4837e3d72876c609fef1b"],"572306117bc719f253d957bbaaa58ee0f8e482f8":["2c707e50d5d9db6929b753b3c0b0254186ee0986"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e71b30ca45cace3116f6ee06a0bbcb578707fa52"]},"commit2Childs":{"e71b30ca45cace3116f6ee06a0bbcb578707fa52":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cbc45ebd0910e885a4f2680ecb1875d36ca3d0e2":["eff5db4d2f0dea2783c3351ff4b5b9e63e0b5299","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"9ba9b7b122d927a15ff4837e3d72876c609fef1b":["2c707e50d5d9db6929b753b3c0b0254186ee0986"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"5a07459b30549ba2b7b6ff6ab0a28200e60b0294":["9ba9b7b122d927a15ff4837e3d72876c609fef1b"],"eff5db4d2f0dea2783c3351ff4b5b9e63e0b5299":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a07459b30549ba2b7b6ff6ab0a28200e60b0294"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["e71b30ca45cace3116f6ee06a0bbcb578707fa52","e9017cf144952056066919f1ebc7897ff9bd71b1"],"2c707e50d5d9db6929b753b3c0b0254186ee0986":["572306117bc719f253d957bbaaa58ee0f8e482f8"],"572306117bc719f253d957bbaaa58ee0f8e482f8":["cbc45ebd0910e885a4f2680ecb1875d36ca3d0e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}