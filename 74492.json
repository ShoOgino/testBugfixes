{"path":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionFunctionValues#advanceExact(int).mjava","commits":[{"id":"7ae1ad302fc92a61505409a38838f2b1a4a2b092","date":1483787106,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionFunctionValues#advanceExact(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean advanceExact(int doc) throws IOException {\n    for (DoubleValues v : functionValues) {\n      v.advanceExact(doc);\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionFunctionValues#advanceExact(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean advanceExact(int doc) throws IOException {\n    for (DoubleValues v : functionValues) {\n      v.advanceExact(doc);\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b9b0e53e02301eb86bb475aee9c79e69fe0ac593","date":1594322334,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionFunctionValues#advanceExact(int).mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionFunctionValues#advanceExact(int).mjava","sourceNew":"  @Override\n  public boolean advanceExact(int doc) throws IOException {\n    if (currentDoc == doc) {\n      return true;\n    }\n    for (DoubleValues v : functionValues) {\n      v.advanceExact(doc);\n    }\n    currentDoc = doc;\n    computed = false;\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean advanceExact(int doc) throws IOException {\n    for (DoubleValues v : functionValues) {\n      v.advanceExact(doc);\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b9b0e53e02301eb86bb475aee9c79e69fe0ac593":["7ae1ad302fc92a61505409a38838f2b1a4a2b092"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7ae1ad302fc92a61505409a38838f2b1a4a2b092":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7ae1ad302fc92a61505409a38838f2b1a4a2b092"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b9b0e53e02301eb86bb475aee9c79e69fe0ac593"]},"commit2Childs":{"b9b0e53e02301eb86bb475aee9c79e69fe0ac593":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7ae1ad302fc92a61505409a38838f2b1a4a2b092","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"7ae1ad302fc92a61505409a38838f2b1a4a2b092":["b9b0e53e02301eb86bb475aee9c79e69fe0ac593","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}