{"path":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    JSONWriter w = new JSONWriter(writer, req, rsp);\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    JSONWriter w = new JSONWriter(writer, req, rsp);\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    JSONWriter w = new JSONWriter(writer, req, rsp);\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    JSONWriter w = new JSONWriter(writer, req, rsp);\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    JSONWriter w = new JSONWriter(writer, req, rsp);\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    JSONWriter w = new JSONWriter(writer, req, rsp);\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    JSONWriter w = new JSONWriter(writer, req, rsp);\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    JSONWriter w = new JSONWriter(writer, req, rsp);\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    JSONWriter w = new JSONWriter(writer, req, rsp);\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    JSONWriter w = new JSONWriter(writer, req, rsp);\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be24bc5afb9111e35bec7963fc84f96ebd98d9ee","date":1477912779,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    final SolrParams params = req.getParams();\n    final String wrapperFunction = params.get(JSONWriter.JSON_WRAPPER_FUNCTION);\n    final String namedListStyle = params.get(JSONWriter.JSON_NL_STYLE, JSONWriter.JSON_NL_FLAT).intern();\n\n    final JSONWriter w;\n    if (namedListStyle.equals(JSONWriter.JSON_NL_ARROFNVP)) {\n      w = new ArrayOfNamedValuePairJSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle);\n    } else {\n      w = new JSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle);\n    }\n\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    JSONWriter w = new JSONWriter(writer, req, rsp);\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"320888923ec13b91f53082558f01f4c9960dd226","date":1477926871,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    final SolrParams params = req.getParams();\n    final String wrapperFunction = params.get(JSONWriter.JSON_WRAPPER_FUNCTION);\n    final String namedListStyle = params.get(JSONWriter.JSON_NL_STYLE, JSONWriter.JSON_NL_FLAT).intern();\n\n    final JSONWriter w;\n    if (namedListStyle.equals(JSONWriter.JSON_NL_ARROFNVP)) {\n      w = new ArrayOfNamedValuePairJSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle);\n    } else {\n      w = new JSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle);\n    }\n\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    JSONWriter w = new JSONWriter(writer, req, rsp);\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87f40a063571d1870bae89b6d191c3cb53b10f5e","date":1482933535,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    final SolrParams params = req.getParams();\n    final String wrapperFunction = params.get(JSONWriter.JSON_WRAPPER_FUNCTION);\n    final String namedListStyle = params.get(JSONWriter.JSON_NL_STYLE, JSONWriter.JSON_NL_FLAT).intern();\n\n    final JSONWriter w;\n    if (namedListStyle.equals(JSONWriter.JSON_NL_ARROFNTV)) {\n      w = new ArrayOfNameTypeValueJSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle, true);\n    } else {\n      w = new JSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle);\n    }\n\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    final SolrParams params = req.getParams();\n    final String wrapperFunction = params.get(JSONWriter.JSON_WRAPPER_FUNCTION);\n    final String namedListStyle = params.get(JSONWriter.JSON_NL_STYLE, JSONWriter.JSON_NL_FLAT).intern();\n\n    final JSONWriter w;\n    if (namedListStyle.equals(JSONWriter.JSON_NL_ARROFNVP)) {\n      w = new ArrayOfNamedValuePairJSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle);\n    } else {\n      w = new JSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle);\n    }\n\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    final SolrParams params = req.getParams();\n    final String wrapperFunction = params.get(JSONWriter.JSON_WRAPPER_FUNCTION);\n    final String namedListStyle = params.get(JSONWriter.JSON_NL_STYLE, JSONWriter.JSON_NL_FLAT).intern();\n\n    final JSONWriter w;\n    if (namedListStyle.equals(JSONWriter.JSON_NL_ARROFNTV)) {\n      w = new ArrayOfNameTypeValueJSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle, true);\n    } else {\n      w = new JSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle);\n    }\n\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    final SolrParams params = req.getParams();\n    final String wrapperFunction = params.get(JSONWriter.JSON_WRAPPER_FUNCTION);\n    final String namedListStyle = params.get(JSONWriter.JSON_NL_STYLE, JSONWriter.JSON_NL_FLAT).intern();\n\n    final JSONWriter w;\n    if (namedListStyle.equals(JSONWriter.JSON_NL_ARROFNVP)) {\n      w = new ArrayOfNamedValuePairJSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle);\n    } else {\n      w = new JSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle);\n    }\n\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"26dad91f15019714a045b4d8c5f40162b2058b54","date":1528551655,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    final SolrParams params = req.getParams();\n    final String wrapperFunction = params.get(JSONWriter.JSON_WRAPPER_FUNCTION);\n    final String namedListStyle = params.get(JsonTextWriter.JSON_NL_STYLE, JsonTextWriter.JSON_NL_FLAT).intern();\n\n    final JSONWriter w;\n    if (namedListStyle.equals(JsonTextWriter.JSON_NL_ARROFNTV)) {\n      w = new ArrayOfNameTypeValueJSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle, true);\n    } else {\n      w = new JSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle);\n    }\n\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    final SolrParams params = req.getParams();\n    final String wrapperFunction = params.get(JSONWriter.JSON_WRAPPER_FUNCTION);\n    final String namedListStyle = params.get(JSONWriter.JSON_NL_STYLE, JSONWriter.JSON_NL_FLAT).intern();\n\n    final JSONWriter w;\n    if (namedListStyle.equals(JSONWriter.JSON_NL_ARROFNTV)) {\n      w = new ArrayOfNameTypeValueJSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle, true);\n    } else {\n      w = new JSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle);\n    }\n\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    final SolrParams params = req.getParams();\n    final String wrapperFunction = params.get(JSONWriter.JSON_WRAPPER_FUNCTION);\n    final String namedListStyle = params.get(JsonTextWriter.JSON_NL_STYLE, JsonTextWriter.JSON_NL_FLAT).intern();\n\n    final JSONWriter w;\n    if (namedListStyle.equals(JsonTextWriter.JSON_NL_ARROFNTV)) {\n      w = new ArrayOfNameTypeValueJSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle, true);\n    } else {\n      w = new JSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle);\n    }\n\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    final SolrParams params = req.getParams();\n    final String wrapperFunction = params.get(JSONWriter.JSON_WRAPPER_FUNCTION);\n    final String namedListStyle = params.get(JSONWriter.JSON_NL_STYLE, JSONWriter.JSON_NL_FLAT).intern();\n\n    final JSONWriter w;\n    if (namedListStyle.equals(JSONWriter.JSON_NL_ARROFNTV)) {\n      w = new ArrayOfNameTypeValueJSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle, true);\n    } else {\n      w = new JSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle);\n    }\n\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/JSONResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    final SolrParams params = req.getParams();\n    final String wrapperFunction = params.get(JSONWriter.JSON_WRAPPER_FUNCTION);\n    final String namedListStyle = params.get(JsonTextWriter.JSON_NL_STYLE, JsonTextWriter.JSON_NL_FLAT).intern();\n\n    final JSONWriter w;\n    if (namedListStyle.equals(JsonTextWriter.JSON_NL_ARROFNTV)) {\n      w = new ArrayOfNameTypeValueJSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle, true);\n    } else {\n      w = new JSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle);\n    }\n\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(Writer writer, SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n    final SolrParams params = req.getParams();\n    final String wrapperFunction = params.get(JSONWriter.JSON_WRAPPER_FUNCTION);\n    final String namedListStyle = params.get(JSONWriter.JSON_NL_STYLE, JSONWriter.JSON_NL_FLAT).intern();\n\n    final JSONWriter w;\n    if (namedListStyle.equals(JSONWriter.JSON_NL_ARROFNTV)) {\n      w = new ArrayOfNameTypeValueJSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle, true);\n    } else {\n      w = new JSONWriter(\n          writer, req, rsp, wrapperFunction, namedListStyle);\n    }\n\n    try {\n      w.writeResponse();\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["c26f00b574427b55127e869b935845554afde1fa","7530de27b87b961b51f01bd1299b7004d46e8823"],"26dad91f15019714a045b4d8c5f40162b2058b54":["87f40a063571d1870bae89b6d191c3cb53b10f5e"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"87f40a063571d1870bae89b6d191c3cb53b10f5e":["be24bc5afb9111e35bec7963fc84f96ebd98d9ee"],"320888923ec13b91f53082558f01f4c9960dd226":["7530de27b87b961b51f01bd1299b7004d46e8823","be24bc5afb9111e35bec7963fc84f96ebd98d9ee"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["320888923ec13b91f53082558f01f4c9960dd226","87f40a063571d1870bae89b6d191c3cb53b10f5e"],"be24bc5afb9111e35bec7963fc84f96ebd98d9ee":["7530de27b87b961b51f01bd1299b7004d46e8823"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["87f40a063571d1870bae89b6d191c3cb53b10f5e","26dad91f15019714a045b4d8c5f40162b2058b54"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7530de27b87b961b51f01bd1299b7004d46e8823":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["26dad91f15019714a045b4d8c5f40162b2058b54"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["87f40a063571d1870bae89b6d191c3cb53b10f5e","26dad91f15019714a045b4d8c5f40162b2058b54"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"26dad91f15019714a045b4d8c5f40162b2058b54":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"c26f00b574427b55127e869b935845554afde1fa":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"87f40a063571d1870bae89b6d191c3cb53b10f5e":["26dad91f15019714a045b4d8c5f40162b2058b54","f03e4bed5023ec3ef93a771b8888cae991cf448d","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"320888923ec13b91f53082558f01f4c9960dd226":["f03e4bed5023ec3ef93a771b8888cae991cf448d"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[],"be24bc5afb9111e35bec7963fc84f96ebd98d9ee":["87f40a063571d1870bae89b6d191c3cb53b10f5e","320888923ec13b91f53082558f01f4c9960dd226"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","320888923ec13b91f53082558f01f4c9960dd226","be24bc5afb9111e35bec7963fc84f96ebd98d9ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","f03e4bed5023ec3ef93a771b8888cae991cf448d","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}