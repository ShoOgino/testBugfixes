{"path":"solr/test-framework/src/java/org/apache/solr/analysis/MockCharFilterFactory#init(Map[String,String]).mjava","commits":[{"id":"a95277e520db8c8310634a988fcf328396a64844","date":1341621148,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/analysis/MockCharFilterFactory#init(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    String sval = args.get(\"remainder\");\n    if (sval == null) {\n      throw new IllegalArgumentException(\"remainder is mandatory\");\n    }\n    remainder = Integer.parseInt(sval);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e7f30683f53928b2fce016e6430c9795caff22","date":1341839598,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/analysis/MockCharFilterFactory#init(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    String sval = args.get(\"remainder\");\n    if (sval == null) {\n      throw new IllegalArgumentException(\"remainder is mandatory\");\n    }\n    remainder = Integer.parseInt(sval);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/analysis/MockCharFilterFactory#init(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    String sval = args.get(\"remainder\");\n    if (sval == null) {\n      throw new IllegalArgumentException(\"remainder is mandatory\");\n    }\n    remainder = Integer.parseInt(sval);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/analysis/MockCharFilterFactory#init(Map[String,String]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    String sval = args.get(\"remainder\");\n    if (sval == null) {\n      throw new IllegalArgumentException(\"remainder is mandatory\");\n    }\n    remainder = Integer.parseInt(sval);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04e7f30683f53928b2fce016e6430c9795caff22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a95277e520db8c8310634a988fcf328396a64844"],"a95277e520db8c8310634a988fcf328396a64844":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a95277e520db8c8310634a988fcf328396a64844"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["a95277e520db8c8310634a988fcf328396a64844"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"]},"commit2Childs":{"04e7f30683f53928b2fce016e6430c9795caff22":[],"a95277e520db8c8310634a988fcf328396a64844":["04e7f30683f53928b2fce016e6430c9795caff22","fe33227f6805edab2036cbb80645cc4e2d1fa424","57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["04e7f30683f53928b2fce016e6430c9795caff22","a95277e520db8c8310634a988fcf328396a64844","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["04e7f30683f53928b2fce016e6430c9795caff22","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}