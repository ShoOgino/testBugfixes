{"path":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#createSearcher(Directory).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#createSearcher(Directory).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#createSearcher(Directory).mjava","sourceNew":"  /**\n   * Creates a new read-only IndexSearcher \n   * @param dir the directory used to open the searcher\n   * @return a new read-only IndexSearcher\n   * @throws IOException f there is a low-level IO error\n   */\n  // for testing purposes\n  IndexSearcher createSearcher(final Directory dir) throws IOException{\n    return new IndexSearcher(IndexReader.open(dir));\n  }\n\n","sourceOld":"  /**\n   * Creates a new read-only IndexSearcher \n   * @param dir the directory used to open the searcher\n   * @return a new read-only IndexSearcher\n   * @throws IOException f there is a low-level IO error\n   */\n  // for testing purposes\n  IndexSearcher createSearcher(final Directory dir) throws IOException{\n    return new IndexSearcher(IndexReader.open(dir));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#createSearcher(Directory).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#createSearcher(Directory).mjava","sourceNew":"  /**\n   * Creates a new read-only IndexSearcher \n   * @param dir the directory used to open the searcher\n   * @return a new read-only IndexSearcher\n   * @throws IOException f there is a low-level IO error\n   */\n  // for testing purposes\n  IndexSearcher createSearcher(final Directory dir) throws IOException{\n    return new IndexSearcher(DirectoryReader.open(dir));\n  }\n\n","sourceOld":"  /**\n   * Creates a new read-only IndexSearcher \n   * @param dir the directory used to open the searcher\n   * @return a new read-only IndexSearcher\n   * @throws IOException f there is a low-level IO error\n   */\n  // for testing purposes\n  IndexSearcher createSearcher(final Directory dir) throws IOException{\n    return new IndexSearcher(IndexReader.open(dir));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#createSearcher(Directory).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#createSearcher(Directory).mjava","sourceNew":"  /**\n   * Creates a new read-only IndexSearcher \n   * @param dir the directory used to open the searcher\n   * @return a new read-only IndexSearcher\n   * @throws IOException f there is a low-level IO error\n   */\n  // for testing purposes\n  IndexSearcher createSearcher(final Directory dir) throws IOException{\n    return new IndexSearcher(DirectoryReader.open(dir));\n  }\n\n","sourceOld":"  /**\n   * Creates a new read-only IndexSearcher \n   * @param dir the directory used to open the searcher\n   * @return a new read-only IndexSearcher\n   * @throws IOException f there is a low-level IO error\n   */\n  // for testing purposes\n  IndexSearcher createSearcher(final Directory dir) throws IOException{\n    return new IndexSearcher(DirectoryReader.open(dir));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#createSearcher(Directory).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#createSearcher(Directory).mjava","sourceNew":"  /**\n   * Creates a new read-only IndexSearcher \n   * @param dir the directory used to open the searcher\n   * @return a new read-only IndexSearcher\n   * @throws IOException f there is a low-level IO error\n   */\n  // for testing purposes\n  IndexSearcher createSearcher(final Directory dir) throws IOException{\n    return new IndexSearcher(DirectoryReader.open(dir));\n  }\n\n","sourceOld":"  /**\n   * Creates a new read-only IndexSearcher \n   * @param dir the directory used to open the searcher\n   * @return a new read-only IndexSearcher\n   * @throws IOException f there is a low-level IO error\n   */\n  // for testing purposes\n  IndexSearcher createSearcher(final Directory dir) throws IOException{\n    return new IndexSearcher(DirectoryReader.open(dir));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19275ba31e621f6da1b83bf13af75233876fd3d4"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}