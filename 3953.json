{"path":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#clear().mjava","commits":[{"id":"ce73f585d17f53055185a19beb46db23d76e0ad9","date":1353077110,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#clear().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefList#clear().mjava","sourceNew":"  /**\n   * Clears this {@link BytesRefArray}\n   */\n  public void clear() {\n    lastElement = 0;\n    currentOffset = 0;\n    Arrays.fill(offsets, 0);\n    pool.reset(false, true); // no need to 0 fill the buffers we control the allocator\n  }\n\n","sourceOld":"  /**\n   * Clears this {@link BytesRefList}\n   */\n  public void clear() {\n    lastElement = 0;\n    currentOffset = 0;\n    Arrays.fill(offsets, 0);\n    pool.reset(false, true); // no need to 0 fill the buffers we control the allocator\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"847d1294c8ff2f0172af20892ef98a1c6a952e09","date":1359503775,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#clear().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#clear().mjava","sourceNew":"  /**\n   * Clears this {@link BytesRefArray}\n   */\n  public void clear() {\n    lastElement = 0;\n    currentOffset = 0;\n    Arrays.fill(offsets, 0);\n    pool.reset(false, true); // no need to 0 fill the buffers we control the allocator\n  }\n\n","sourceOld":"  /**\n   * Clears this {@link BytesRefArray}\n   */\n  public void clear() {\n    lastElement = 0;\n    currentOffset = 0;\n    Arrays.fill(offsets, 0);\n    pool.reset(false, true); // no need to 0 fill the buffers we control the allocator\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36f5a8c57e16c0f801006a52f87c75378427852e","date":1393256707,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#clear().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#clear().mjava","sourceNew":"  /**\n   * Clears this {@link BytesRefArray}\n   */\n  public void clear() {\n    lastElement = 0;\n    currentOffset = 0;\n    Arrays.fill(offsets, 0);\n    pool.reset(false, true); // no need to 0 fill the buffers we control the allocator\n  }\n\n","sourceOld":"  /**\n   * Clears this {@link BytesRefArray}\n   */\n  public void clear() {\n    lastElement = 0;\n    currentOffset = 0;\n    Arrays.fill(offsets, 0);\n    pool.reset(false, true); // no need to 0 fill the buffers we control the allocator\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba791bce8103c79e38f957e9c5a53a75871bd918","date":1393539206,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#clear().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#clear().mjava","sourceNew":"  /**\n   * Clears this {@link BytesRefArray}\n   */\n  public void clear() {\n    lastElement = 0;\n    currentOffset = 0;\n    Arrays.fill(offsets, 0);\n    pool.reset(false, true); // no need to 0 fill the buffers we control the allocator\n  }\n\n","sourceOld":"  /**\n   * Clears this {@link BytesRefArray}\n   */\n  public void clear() {\n    lastElement = 0;\n    currentOffset = 0;\n    Arrays.fill(offsets, 0);\n    pool.reset(false, true); // no need to 0 fill the buffers we control the allocator\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee52259641568741fbc6ecc51284431e2a36475c","date":1459331525,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#clear().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#clear().mjava","sourceNew":"  /**\n   * Clears this {@link BytesRefArray}\n   */\n  @Override\n  public void clear() {\n    lastElement = 0;\n    currentOffset = 0;\n    // TODO: it's trappy that this does not return storage held by int[] offsets array!\n    Arrays.fill(offsets, 0);\n    pool.reset(false, true); // no need to 0 fill the buffers we control the allocator\n  }\n\n","sourceOld":"  /**\n   * Clears this {@link BytesRefArray}\n   */\n  public void clear() {\n    lastElement = 0;\n    currentOffset = 0;\n    Arrays.fill(offsets, 0);\n    pool.reset(false, true); // no need to 0 fill the buffers we control the allocator\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ce73f585d17f53055185a19beb46db23d76e0ad9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba791bce8103c79e38f957e9c5a53a75871bd918":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","36f5a8c57e16c0f801006a52f87c75378427852e"],"36f5a8c57e16c0f801006a52f87c75378427852e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ee52259641568741fbc6ecc51284431e2a36475c":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"847d1294c8ff2f0172af20892ef98a1c6a952e09":["ce73f585d17f53055185a19beb46db23d76e0ad9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee52259641568741fbc6ecc51284431e2a36475c"]},"commit2Childs":{"ce73f585d17f53055185a19beb46db23d76e0ad9":["847d1294c8ff2f0172af20892ef98a1c6a952e09"],"ba791bce8103c79e38f957e9c5a53a75871bd918":["ee52259641568741fbc6ecc51284431e2a36475c"],"36f5a8c57e16c0f801006a52f87c75378427852e":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ce73f585d17f53055185a19beb46db23d76e0ad9","ba791bce8103c79e38f957e9c5a53a75871bd918","36f5a8c57e16c0f801006a52f87c75378427852e"],"ee52259641568741fbc6ecc51284431e2a36475c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"847d1294c8ff2f0172af20892ef98a1c6a952e09":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["847d1294c8ff2f0172af20892ef98a1c6a952e09","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}