{"path":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiTokenizer#testTwoSentences().mjava","commits":[{"id":"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2","date":1326399048,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiTokenizer#testTwoSentences().mjava","pathOld":"/dev/null","sourceNew":"  /** Tests that sentence offset is incorporated into the resulting offsets */\n  public void testTwoSentences() throws Exception {\n    assertAnalyzesTo(analyzer, \"魔女狩大将マシュー・ホプキンス。 魔女狩大将マシュー・ホプキンス。\",\n      new String[] { \"魔女\", \"狩\", \"大将\", \"マシュー\", \"ホプキンス\",  \"魔女\", \"狩\", \"大将\", \"マシュー\",  \"ホプキンス\"  },\n      new int[] { 0, 2, 3, 5, 10, 17, 19, 20, 22, 27 },\n      new int[] { 2, 3, 5, 9, 15, 19, 20, 22, 26, 32 }\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0984ad47974c2d5d354519ddb2aa8358973a6271","date":1330868053,"type":3,"author":"Christian Moen","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiTokenizer#testTwoSentences().mjava","pathOld":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiTokenizer#testTwoSentences().mjava","sourceNew":"  /** Tests that sentence offset is incorporated into the resulting offsets */\n  public void testTwoSentences() throws Exception {\n    /*\n    //TokenStream ts = a.tokenStream(\"foo\", new StringReader(\"妹の咲子です。俺と年子で、今受験生です。\"));\n    TokenStream ts = analyzer.tokenStream(\"foo\", new StringReader(\"&#x250cdf66<!--\\\"<!--#<!--;?><!--#<!--#><!---->?>-->;\"));\n    ts.reset();\n    CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n    while(ts.incrementToken()) {\n      System.out.println(\"  \" + termAtt.toString());\n    }\n    System.out.println(\"DONE PARSE\\n\\n\");\n    */\n\n    assertAnalyzesTo(analyzerNoPunct, \"魔女狩大将マシュー・ホプキンス。 魔女狩大将マシュー・ホプキンス。\",\n      new String[] { \"魔女\", \"狩\", \"大将\", \"マシュー\", \"ホプキンス\",  \"魔女\", \"狩\", \"大将\", \"マシュー\",  \"ホプキンス\"  },\n      new int[] { 0, 2, 3, 5, 10, 17, 19, 20, 22, 27 },\n      new int[] { 2, 3, 5, 9, 15, 19, 20, 22, 26, 32 }\n    );\n  }\n\n","sourceOld":"  /** Tests that sentence offset is incorporated into the resulting offsets */\n  public void testTwoSentences() throws Exception {\n    assertAnalyzesTo(analyzer, \"魔女狩大将マシュー・ホプキンス。 魔女狩大将マシュー・ホプキンス。\",\n      new String[] { \"魔女\", \"狩\", \"大将\", \"マシュー\", \"ホプキンス\",  \"魔女\", \"狩\", \"大将\", \"マシュー\",  \"ホプキンス\"  },\n      new int[] { 0, 2, 3, 5, 10, 17, 19, 20, 22, 27 },\n      new int[] { 2, 3, 5, 9, 15, 19, 20, 22, 26, 32 }\n    );\n  }\n\n","bugFix":null,"bugIntro":["c83d6c4335f31cae14f625a222bc842f20073dcd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiTokenizer#testTwoSentences().mjava","pathOld":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiTokenizer#testTwoSentences().mjava","sourceNew":"  /** Tests that sentence offset is incorporated into the resulting offsets */\n  public void testTwoSentences() throws Exception {\n    /*\n    //TokenStream ts = a.tokenStream(\"foo\", new StringReader(\"妹の咲子です。俺と年子で、今受験生です。\"));\n    TokenStream ts = analyzer.tokenStream(\"foo\", new StringReader(\"&#x250cdf66<!--\\\"<!--#<!--;?><!--#<!--#><!---->?>-->;\"));\n    ts.reset();\n    CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n    while(ts.incrementToken()) {\n      System.out.println(\"  \" + termAtt.toString());\n    }\n    System.out.println(\"DONE PARSE\\n\\n\");\n    */\n\n    assertAnalyzesTo(analyzerNoPunct, \"魔女狩大将マシュー・ホプキンス。 魔女狩大将マシュー・ホプキンス。\",\n      new String[] { \"魔女\", \"狩\", \"大将\", \"マシュー\", \"ホプキンス\",  \"魔女\", \"狩\", \"大将\", \"マシュー\",  \"ホプキンス\"  },\n      new int[] { 0, 2, 3, 5, 10, 17, 19, 20, 22, 27 },\n      new int[] { 2, 3, 5, 9, 15, 19, 20, 22, 26, 32 }\n    );\n  }\n\n","sourceOld":"  /** Tests that sentence offset is incorporated into the resulting offsets */\n  public void testTwoSentences() throws Exception {\n    assertAnalyzesTo(analyzer, \"魔女狩大将マシュー・ホプキンス。 魔女狩大将マシュー・ホプキンス。\",\n      new String[] { \"魔女\", \"狩\", \"大将\", \"マシュー\", \"ホプキンス\",  \"魔女\", \"狩\", \"大将\", \"マシュー\",  \"ホプキンス\"  },\n      new int[] { 0, 2, 3, 5, 10, 17, 19, 20, 22, 27 },\n      new int[] { 2, 3, 5, 9, 15, 19, 20, 22, 26, 32 }\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98d45c1ff2c99694b6de2201175f9b8b8b27b597","date":1332757908,"type":5,"author":"Christian Moen","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#testTwoSentences().mjava","pathOld":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiTokenizer#testTwoSentences().mjava","sourceNew":"  /** Tests that sentence offset is incorporated into the resulting offsets */\n  public void testTwoSentences() throws Exception {\n    /*\n    //TokenStream ts = a.tokenStream(\"foo\", new StringReader(\"妹の咲子です。俺と年子で、今受験生です。\"));\n    TokenStream ts = analyzer.tokenStream(\"foo\", new StringReader(\"&#x250cdf66<!--\\\"<!--#<!--;?><!--#<!--#><!---->?>-->;\"));\n    ts.reset();\n    CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n    while(ts.incrementToken()) {\n      System.out.println(\"  \" + termAtt.toString());\n    }\n    System.out.println(\"DONE PARSE\\n\\n\");\n    */\n\n    assertAnalyzesTo(analyzerNoPunct, \"魔女狩大将マシュー・ホプキンス。 魔女狩大将マシュー・ホプキンス。\",\n      new String[] { \"魔女\", \"狩\", \"大将\", \"マシュー\", \"ホプキンス\",  \"魔女\", \"狩\", \"大将\", \"マシュー\",  \"ホプキンス\"  },\n      new int[] { 0, 2, 3, 5, 10, 17, 19, 20, 22, 27 },\n      new int[] { 2, 3, 5, 9, 15, 19, 20, 22, 26, 32 }\n    );\n  }\n\n","sourceOld":"  /** Tests that sentence offset is incorporated into the resulting offsets */\n  public void testTwoSentences() throws Exception {\n    /*\n    //TokenStream ts = a.tokenStream(\"foo\", new StringReader(\"妹の咲子です。俺と年子で、今受験生です。\"));\n    TokenStream ts = analyzer.tokenStream(\"foo\", new StringReader(\"&#x250cdf66<!--\\\"<!--#<!--;?><!--#<!--#><!---->?>-->;\"));\n    ts.reset();\n    CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n    while(ts.incrementToken()) {\n      System.out.println(\"  \" + termAtt.toString());\n    }\n    System.out.println(\"DONE PARSE\\n\\n\");\n    */\n\n    assertAnalyzesTo(analyzerNoPunct, \"魔女狩大将マシュー・ホプキンス。 魔女狩大将マシュー・ホプキンス。\",\n      new String[] { \"魔女\", \"狩\", \"大将\", \"マシュー\", \"ホプキンス\",  \"魔女\", \"狩\", \"大将\", \"マシュー\",  \"ホプキンス\"  },\n      new int[] { 0, 2, 3, 5, 10, 17, 19, 20, 22, 27 },\n      new int[] { 2, 3, 5, 9, 15, 19, 20, 22, 26, 32 }\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2","0984ad47974c2d5d354519ddb2aa8358973a6271"],"0984ad47974c2d5d354519ddb2aa8358973a6271":["6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"98d45c1ff2c99694b6de2201175f9b8b8b27b597":["0984ad47974c2d5d354519ddb2aa8358973a6271"],"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["98d45c1ff2c99694b6de2201175f9b8b8b27b597"]},"commit2Childs":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"0984ad47974c2d5d354519ddb2aa8358973a6271":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","98d45c1ff2c99694b6de2201175f9b8b8b27b597"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2"],"98d45c1ff2c99694b6de2201175f9b8b8b27b597":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","0984ad47974c2d5d354519ddb2aa8358973a6271"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}