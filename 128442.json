{"path":"solr/core/src/java/org/apache/solr/search/QueryParsing#parseLocalParams(String,int,Map[String,String],SolrParams).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/QueryParsing#parseLocalParams(String,int,Map[String,String],SolrParams).mjava","pathOld":"solr/src/java/org/apache/solr/search/QueryParsing#parseLocalParams(String,int,Map[String,String],SolrParams).mjava","sourceNew":"  // note to self: something needs to detect infinite recursion when parsing queries\n  public static int parseLocalParams(String txt, int start, Map<String, String> target, SolrParams params) throws ParseException {\n    return parseLocalParams(txt, start, target, params, LOCALPARAM_START, LOCALPARAM_END);\n  }\n\n","sourceOld":"  // note to self: something needs to detect infinite recursion when parsing queries\n  public static int parseLocalParams(String txt, int start, Map<String, String> target, SolrParams params) throws ParseException {\n    return parseLocalParams(txt, start, target, params, LOCALPARAM_START, LOCALPARAM_END);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/QueryParsing#parseLocalParams(String,int,Map[String,String],SolrParams).mjava","pathOld":"solr/src/java/org/apache/solr/search/QueryParsing#parseLocalParams(String,int,Map[String,String],SolrParams).mjava","sourceNew":"  // note to self: something needs to detect infinite recursion when parsing queries\n  public static int parseLocalParams(String txt, int start, Map<String, String> target, SolrParams params) throws ParseException {\n    return parseLocalParams(txt, start, target, params, LOCALPARAM_START, LOCALPARAM_END);\n  }\n\n","sourceOld":"  // note to self: something needs to detect infinite recursion when parsing queries\n  public static int parseLocalParams(String txt, int start, Map<String, String> target, SolrParams params) throws ParseException {\n    return parseLocalParams(txt, start, target, params, LOCALPARAM_START, LOCALPARAM_END);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/QueryParsing#parseLocalParams(String,int,Map[String,String],SolrParams).mjava","pathOld":"solr/src/java/org/apache/solr/search/QueryParsing#parseLocalParams(String,int,Map[String,String],SolrParams).mjava","sourceNew":"  // note to self: something needs to detect infinite recursion when parsing queries\n  public static int parseLocalParams(String txt, int start, Map<String, String> target, SolrParams params) throws ParseException {\n    return parseLocalParams(txt, start, target, params, LOCALPARAM_START, LOCALPARAM_END);\n  }\n\n","sourceOld":"  // note to self: something needs to detect infinite recursion when parsing queries\n  public static int parseLocalParams(String txt, int start, Map<String, String> target, SolrParams params) throws ParseException {\n    return parseLocalParams(txt, start, target, params, LOCALPARAM_START, LOCALPARAM_END);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/QueryParsing#parseLocalParams(String,int,Map[String,String],SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/QueryParsing#parseLocalParams(String,int,Map[String,String],SolrParams).mjava","sourceNew":"  // note to self: something needs to detect infinite recursion when parsing queries\n  public static int parseLocalParams(String txt, int start, Map<String, String> target, SolrParams params) throws SyntaxError {\n    return parseLocalParams(txt, start, target, params, LOCALPARAM_START, LOCALPARAM_END);\n  }\n\n","sourceOld":"  // note to self: something needs to detect infinite recursion when parsing queries\n  public static int parseLocalParams(String txt, int start, Map<String, String> target, SolrParams params) throws ParseException {\n    return parseLocalParams(txt, start, target, params, LOCALPARAM_START, LOCALPARAM_END);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/QueryParsing#parseLocalParams(String,int,Map[String,String],SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/QueryParsing#parseLocalParams(String,int,Map[String,String],SolrParams).mjava","sourceNew":"  // note to self: something needs to detect infinite recursion when parsing queries\n  public static int parseLocalParams(String txt, int start, Map<String, String> target, SolrParams params) throws SyntaxError {\n    return parseLocalParams(txt, start, target, params, LOCALPARAM_START, LOCALPARAM_END);\n  }\n\n","sourceOld":"  // note to self: something needs to detect infinite recursion when parsing queries\n  public static int parseLocalParams(String txt, int start, Map<String, String> target, SolrParams params) throws ParseException {\n    return parseLocalParams(txt, start, target, params, LOCALPARAM_START, LOCALPARAM_END);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a2e3a7d2549a34fb7ec9be55424e41388025336","date":1452801298,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/QueryParsing#parseLocalParams(String,int,Map[String,String],SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/QueryParsing#parseLocalParams(String,int,Map[String,String],SolrParams).mjava","sourceNew":"  /**\n   * @param txt Text to parse\n   * @param start Index into text for start of parsing\n   * @param target Object to inject with parsed settings\n   * @param params Additional existing parameters\n   * @deprecated use {@link #parseLocalParams(String, int, ModifiableSolrParams, SolrParams)} instead\n   */\n  @Deprecated\n  public static int parseLocalParams(String txt, int start, Map<String, String> target, SolrParams params) throws SyntaxError {\n    return parseLocalParams(txt, start, target, params, LOCALPARAM_START, LOCALPARAM_END);\n  }\n\n","sourceOld":"  // note to self: something needs to detect infinite recursion when parsing queries\n  public static int parseLocalParams(String txt, int start, Map<String, String> target, SolrParams params) throws SyntaxError {\n    return parseLocalParams(txt, start, target, params, LOCALPARAM_START, LOCALPARAM_END);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d1a3515aa6f0c540f59b0db4c55059553443e2c","date":1452807112,"type":4,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/QueryParsing#parseLocalParams(String,int,Map[String,String],SolrParams).mjava","sourceNew":null,"sourceOld":"  /**\n   * @param txt Text to parse\n   * @param start Index into text for start of parsing\n   * @param target Object to inject with parsed settings\n   * @param params Additional existing parameters\n   * @deprecated use {@link #parseLocalParams(String, int, ModifiableSolrParams, SolrParams)} instead\n   */\n  @Deprecated\n  public static int parseLocalParams(String txt, int start, Map<String, String> target, SolrParams params) throws SyntaxError {\n    return parseLocalParams(txt, start, target, params, LOCALPARAM_START, LOCALPARAM_END);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7d1a3515aa6f0c540f59b0db4c55059553443e2c":["3a2e3a7d2549a34fb7ec9be55424e41388025336"],"3a2e3a7d2549a34fb7ec9be55424e41388025336":["3cdb67100dc016748799a77218aa409478372d79"],"3cdb67100dc016748799a77218aa409478372d79":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["c26f00b574427b55127e869b935845554afde1fa","3cdb67100dc016748799a77218aa409478372d79"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7d1a3515aa6f0c540f59b0db4c55059553443e2c"]},"commit2Childs":{"7d1a3515aa6f0c540f59b0db4c55059553443e2c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a2e3a7d2549a34fb7ec9be55424e41388025336":["7d1a3515aa6f0c540f59b0db4c55059553443e2c"],"3cdb67100dc016748799a77218aa409478372d79":["3a2e3a7d2549a34fb7ec9be55424e41388025336","407687e67faf6e1f02a211ca078d8e3eed631027"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}