{"path":"solr/core/src/java/org/apache/solr/handler/CatStream#advanceToNextFileWithData().mjava","commits":[{"id":"fa57c615885d274eb8087f89b6a9e1f84e655a74","date":1565267901,"type":1,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CatStream#advanceToNextFileWithData().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/FilesStream#advanceToNextFileWithData().mjava","sourceNew":"  private boolean advanceToNextFileWithData() throws IOException {\n    while (allFilesToCrawl.hasNext()) {\n      if (currentFileLines != null) {\n        currentFileLines.close();\n      }\n      currentFilePath = allFilesToCrawl.next();\n      currentFileLines = FileUtils.lineIterator(new File(currentFilePath.absolutePath), \"UTF-8\");\n      if (currentFileLines.hasNext()) return true;\n    }\n\n    return false;\n  }\n\n","sourceOld":"  private boolean advanceToNextFileWithData() throws IOException {\n    while (allFilesToCrawl.hasNext()) {\n      if (currentFileLines != null) {\n        currentFileLines.close();\n      }\n      currentFilePath = allFilesToCrawl.next();\n      currentFileLines = FileUtils.lineIterator(new File(currentFilePath.absolutePath), \"UTF-8\");\n      if (currentFileLines.hasNext()) return true;\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0a64689513b45b25612694fffa76be8d4a9a3ad","date":1568507952,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CatStream#advanceToNextFileWithData().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/CatStream#advanceToNextFileWithData().mjava","sourceNew":"  private boolean advanceToNextFileWithData() throws IOException {\n    while (allFilesToCrawl.hasNext()) {\n      closeCurrentFileIfSet();\n      currentFilePath = allFilesToCrawl.next();\n      currentFileLines = FileUtils.lineIterator(new File(currentFilePath.absolutePath), \"UTF-8\");\n      if (currentFileLines.hasNext()) return true;\n    }\n\n    return false;\n  }\n\n","sourceOld":"  private boolean advanceToNextFileWithData() throws IOException {\n    while (allFilesToCrawl.hasNext()) {\n      if (currentFileLines != null) {\n        currentFileLines.close();\n      }\n      currentFilePath = allFilesToCrawl.next();\n      currentFileLines = FileUtils.lineIterator(new File(currentFilePath.absolutePath), \"UTF-8\");\n      if (currentFileLines.hasNext()) return true;\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8c36bc16f489634a3fcf14294704824192273df","date":1593058738,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CatStream#advanceToNextFileWithData().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/CatStream#advanceToNextFileWithData().mjava","sourceNew":"  private boolean advanceToNextFileWithData() throws IOException {\n    while (allFilesToCrawl.hasNext()) {\n      closeCurrentFileIfSet();\n      currentFilePath = allFilesToCrawl.next();\n      currentFileLines = FileUtils.lineIterator(currentFilePath.absolutePath.toFile(), \"UTF-8\");\n      if (currentFileLines.hasNext()) return true;\n    }\n\n    return false;\n  }\n\n","sourceOld":"  private boolean advanceToNextFileWithData() throws IOException {\n    while (allFilesToCrawl.hasNext()) {\n      closeCurrentFileIfSet();\n      currentFilePath = allFilesToCrawl.next();\n      currentFileLines = FileUtils.lineIterator(new File(currentFilePath.absolutePath), \"UTF-8\");\n      if (currentFileLines.hasNext()) return true;\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e8c36bc16f489634a3fcf14294704824192273df":["a0a64689513b45b25612694fffa76be8d4a9a3ad"],"fa57c615885d274eb8087f89b6a9e1f84e655a74":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0a64689513b45b25612694fffa76be8d4a9a3ad":["fa57c615885d274eb8087f89b6a9e1f84e655a74"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e8c36bc16f489634a3fcf14294704824192273df"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fa57c615885d274eb8087f89b6a9e1f84e655a74"],"e8c36bc16f489634a3fcf14294704824192273df":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fa57c615885d274eb8087f89b6a9e1f84e655a74":["a0a64689513b45b25612694fffa76be8d4a9a3ad"],"a0a64689513b45b25612694fffa76be8d4a9a3ad":["e8c36bc16f489634a3fcf14294704824192273df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}