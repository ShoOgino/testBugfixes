{"path":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doOpenFromWriter(IndexCommit).mjava","commits":[{"id":"326990249d982376dfa2e6fd97c28f4580df4e7c","date":1323042771,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doOpenFromWriter(IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doOpenFromWriter(boolean,IndexCommit).mjava","sourceNew":"  private final IndexReader doOpenFromWriter(IndexCommit commit) throws CorruptIndexException, IOException {\n    if (commit != null) {\n      throw new IllegalArgumentException(\"a reader obtained from IndexWriter.getReader() cannot currently accept a commit\");\n    }\n\n    if (writer.nrtIsCurrent(segmentInfos)) {\n      return null;\n    }\n\n    IndexReader reader = writer.getReader(applyAllDeletes);\n\n    // If in fact no changes took place, return null:\n    if (reader.getVersion() == segmentInfos.getVersion()) {\n      reader.decRef();\n      return null;\n    }\n\n    reader.readerFinishedListeners = readerFinishedListeners;\n    return reader;\n  }\n\n","sourceOld":"  private final IndexReader doOpenFromWriter(boolean openReadOnly, IndexCommit commit) throws CorruptIndexException, IOException {\n    assert openReadOnly;\n\n    if (commit != null) {\n      throw new IllegalArgumentException(\"a reader obtained from IndexWriter.getReader() cannot currently accept a commit\");\n    }\n\n    if (writer.nrtIsCurrent(segmentInfos)) {\n      return null;\n    }\n\n    IndexReader reader = writer.getReader(applyAllDeletes);\n\n    // If in fact no changes took place, return null:\n    if (reader.getVersion() == segmentInfos.getVersion()) {\n      reader.decRef();\n      return null;\n    }\n\n    reader.readerFinishedListeners = readerFinishedListeners;\n    return reader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doOpenFromWriter(IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doOpenFromWriter(boolean,IndexCommit).mjava","sourceNew":"  private final IndexReader doOpenFromWriter(IndexCommit commit) throws CorruptIndexException, IOException {\n    if (commit != null) {\n      throw new IllegalArgumentException(\"a reader obtained from IndexWriter.getReader() cannot currently accept a commit\");\n    }\n\n    if (writer.nrtIsCurrent(segmentInfos)) {\n      return null;\n    }\n\n    IndexReader reader = writer.getReader(applyAllDeletes);\n\n    // If in fact no changes took place, return null:\n    if (reader.getVersion() == segmentInfos.getVersion()) {\n      reader.decRef();\n      return null;\n    }\n\n    reader.readerFinishedListeners = readerFinishedListeners;\n    return reader;\n  }\n\n","sourceOld":"  private final IndexReader doOpenFromWriter(boolean openReadOnly, IndexCommit commit) throws CorruptIndexException, IOException {\n    assert readOnly;\n\n    if (!openReadOnly) {\n      throw new IllegalArgumentException(\"a reader obtained from IndexWriter.getReader() can only be reopened with openReadOnly=true (got false)\");\n    }\n\n    if (commit != null) {\n      throw new IllegalArgumentException(\"a reader obtained from IndexWriter.getReader() cannot currently accept a commit\");\n    }\n\n    if (writer.nrtIsCurrent(segmentInfos)) {\n      return null;\n    }\n\n    IndexReader reader = writer.getReader(applyAllDeletes);\n\n    // If in fact no changes took place, return null:\n    if (reader.getVersion() == segmentInfos.getVersion()) {\n      reader.decRef();\n      return null;\n    }\n\n    reader.readerFinishedListeners = readerFinishedListeners;\n    return reader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doOpenFromWriter(IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doOpenFromWriter(boolean,IndexCommit).mjava","sourceNew":"  private final IndexReader doOpenFromWriter(IndexCommit commit) throws CorruptIndexException, IOException {\n    if (commit != null) {\n      throw new IllegalArgumentException(\"a reader obtained from IndexWriter.getReader() cannot currently accept a commit\");\n    }\n\n    if (writer.nrtIsCurrent(segmentInfos)) {\n      return null;\n    }\n\n    IndexReader reader = writer.getReader(applyAllDeletes);\n\n    // If in fact no changes took place, return null:\n    if (reader.getVersion() == segmentInfos.getVersion()) {\n      reader.decRef();\n      return null;\n    }\n\n    reader.readerFinishedListeners = readerFinishedListeners;\n    return reader;\n  }\n\n","sourceOld":"  private final IndexReader doOpenFromWriter(boolean openReadOnly, IndexCommit commit) throws CorruptIndexException, IOException {\n    assert readOnly;\n\n    if (!openReadOnly) {\n      throw new IllegalArgumentException(\"a reader obtained from IndexWriter.getReader() can only be reopened with openReadOnly=true (got false)\");\n    }\n\n    if (commit != null) {\n      throw new IllegalArgumentException(\"a reader obtained from IndexWriter.getReader() cannot currently accept a commit\");\n    }\n\n    if (writer.nrtIsCurrent(segmentInfos)) {\n      return null;\n    }\n\n    IndexReader reader = writer.getReader(applyAllDeletes);\n\n    // If in fact no changes took place, return null:\n    if (reader.getVersion() == segmentInfos.getVersion()) {\n      reader.decRef();\n      return null;\n    }\n\n    reader.readerFinishedListeners = readerFinishedListeners;\n    return reader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eeb24fe119d55091148e2a3d94e80c9e349d886c","date":1323807643,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doOpenFromWriter(IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doOpenFromWriter(IndexCommit).mjava","sourceNew":"  private final IndexReader doOpenFromWriter(IndexCommit commit) throws CorruptIndexException, IOException {\n    if (commit != null) {\n      throw new IllegalArgumentException(\"a reader obtained from IndexWriter.getReader() cannot currently accept a commit\");\n    }\n\n    if (writer.nrtIsCurrent(segmentInfos)) {\n      return null;\n    }\n\n    IndexReader reader = writer.getReader(applyAllDeletes);\n\n    // If in fact no changes took place, return null:\n    if (reader.getVersion() == segmentInfos.getVersion()) {\n      reader.decRef();\n      return null;\n    }\n\n    return reader;\n  }\n\n","sourceOld":"  private final IndexReader doOpenFromWriter(IndexCommit commit) throws CorruptIndexException, IOException {\n    if (commit != null) {\n      throw new IllegalArgumentException(\"a reader obtained from IndexWriter.getReader() cannot currently accept a commit\");\n    }\n\n    if (writer.nrtIsCurrent(segmentInfos)) {\n      return null;\n    }\n\n    IndexReader reader = writer.getReader(applyAllDeletes);\n\n    // If in fact no changes took place, return null:\n    if (reader.getVersion() == segmentInfos.getVersion()) {\n      reader.decRef();\n      return null;\n    }\n\n    reader.readerFinishedListeners = readerFinishedListeners;\n    return reader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doOpenFromWriter(IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doOpenFromWriter(IndexCommit).mjava","sourceNew":"  private final CompositeIndexReader doOpenFromWriter(IndexCommit commit) throws CorruptIndexException, IOException {\n    if (commit != null) {\n      throw new IllegalArgumentException(\"a reader obtained from IndexWriter.getReader() cannot currently accept a commit\");\n    }\n\n    if (writer.nrtIsCurrent(segmentInfos)) {\n      return null;\n    }\n\n    CompositeIndexReader reader = writer.getReader(applyAllDeletes);\n\n    // If in fact no changes took place, return null:\n    if (reader.getVersion() == segmentInfos.getVersion()) {\n      reader.decRef();\n      return null;\n    }\n\n    return reader;\n  }\n\n","sourceOld":"  private final IndexReader doOpenFromWriter(IndexCommit commit) throws CorruptIndexException, IOException {\n    if (commit != null) {\n      throw new IllegalArgumentException(\"a reader obtained from IndexWriter.getReader() cannot currently accept a commit\");\n    }\n\n    if (writer.nrtIsCurrent(segmentInfos)) {\n      return null;\n    }\n\n    IndexReader reader = writer.getReader(applyAllDeletes);\n\n    // If in fact no changes took place, return null:\n    if (reader.getVersion() == segmentInfos.getVersion()) {\n      reader.decRef();\n      return null;\n    }\n\n    return reader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"893d07555f01912f57b453a320e4d46363a31b50","date":1327312526,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doOpenFromWriter(IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doOpenFromWriter(IndexCommit).mjava","sourceNew":"  private final DirectoryReader doOpenFromWriter(IndexCommit commit) throws CorruptIndexException, IOException {\n    if (commit != null) {\n      throw new IllegalArgumentException(\"a reader obtained from IndexWriter.getReader() cannot currently accept a commit\");\n    }\n\n    if (writer.nrtIsCurrent(segmentInfos)) {\n      return null;\n    }\n\n    DirectoryReader reader = writer.getReader(applyAllDeletes);\n\n    // If in fact no changes took place, return null:\n    if (reader.getVersion() == segmentInfos.getVersion()) {\n      reader.decRef();\n      return null;\n    }\n\n    return reader;\n  }\n\n","sourceOld":"  private final CompositeIndexReader doOpenFromWriter(IndexCommit commit) throws CorruptIndexException, IOException {\n    if (commit != null) {\n      throw new IllegalArgumentException(\"a reader obtained from IndexWriter.getReader() cannot currently accept a commit\");\n    }\n\n    if (writer.nrtIsCurrent(segmentInfos)) {\n      return null;\n    }\n\n    CompositeIndexReader reader = writer.getReader(applyAllDeletes);\n\n    // If in fact no changes took place, return null:\n    if (reader.getVersion() == segmentInfos.getVersion()) {\n      reader.decRef();\n      return null;\n    }\n\n    return reader;\n  }\n\n","bugFix":null,"bugIntro":["ae695f21c50b03702b5d0fa2543d5af844bb7cd3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doOpenFromWriter(IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doOpenFromWriter(IndexCommit).mjava","sourceNew":"  private final DirectoryReader doOpenFromWriter(IndexCommit commit) throws CorruptIndexException, IOException {\n    if (commit != null) {\n      throw new IllegalArgumentException(\"a reader obtained from IndexWriter.getReader() cannot currently accept a commit\");\n    }\n\n    if (writer.nrtIsCurrent(segmentInfos)) {\n      return null;\n    }\n\n    DirectoryReader reader = writer.getReader(applyAllDeletes);\n\n    // If in fact no changes took place, return null:\n    if (reader.getVersion() == segmentInfos.getVersion()) {\n      reader.decRef();\n      return null;\n    }\n\n    return reader;\n  }\n\n","sourceOld":"  private final IndexReader doOpenFromWriter(IndexCommit commit) throws CorruptIndexException, IOException {\n    if (commit != null) {\n      throw new IllegalArgumentException(\"a reader obtained from IndexWriter.getReader() cannot currently accept a commit\");\n    }\n\n    if (writer.nrtIsCurrent(segmentInfos)) {\n      return null;\n    }\n\n    IndexReader reader = writer.getReader(applyAllDeletes);\n\n    // If in fact no changes took place, return null:\n    if (reader.getVersion() == segmentInfos.getVersion()) {\n      reader.decRef();\n      return null;\n    }\n\n    return reader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3","date":1328092914,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/StandardDirectoryReader#doOpenFromWriter(IndexCommit).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#doOpenFromWriter(IndexCommit).mjava","sourceNew":"  private final DirectoryReader doOpenFromWriter(IndexCommit commit) throws CorruptIndexException, IOException {\n    if (commit != null) {\n      throw new IllegalArgumentException(\"a reader obtained from IndexWriter.getReader() cannot currently accept a commit\");\n    }\n\n    if (writer.nrtIsCurrent(segmentInfos)) {\n      return null;\n    }\n\n    DirectoryReader reader = writer.getReader(applyAllDeletes);\n\n    // If in fact no changes took place, return null:\n    if (reader.getVersion() == segmentInfos.getVersion()) {\n      reader.decRef();\n      return null;\n    }\n\n    return reader;\n  }\n\n","sourceOld":"  private final DirectoryReader doOpenFromWriter(IndexCommit commit) throws CorruptIndexException, IOException {\n    if (commit != null) {\n      throw new IllegalArgumentException(\"a reader obtained from IndexWriter.getReader() cannot currently accept a commit\");\n    }\n\n    if (writer.nrtIsCurrent(segmentInfos)) {\n      return null;\n    }\n\n    DirectoryReader reader = writer.getReader(applyAllDeletes);\n\n    // If in fact no changes took place, return null:\n    if (reader.getVersion() == segmentInfos.getVersion()) {\n      reader.decRef();\n      return null;\n    }\n\n    return reader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"eeb24fe119d55091148e2a3d94e80c9e349d886c":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"893d07555f01912f57b453a320e4d46363a31b50":["2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","326990249d982376dfa2e6fd97c28f4580df4e7c"],"326990249d982376dfa2e6fd97c28f4580df4e7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["eeb24fe119d55091148e2a3d94e80c9e349d886c","893d07555f01912f57b453a320e4d46363a31b50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d7bbf8cffd2321f26cf9f6487f1571d325f20bc3"],"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["eeb24fe119d55091148e2a3d94e80c9e349d886c"]},"commit2Childs":{"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60","326990249d982376dfa2e6fd97c28f4580df4e7c"],"eeb24fe119d55091148e2a3d94e80c9e349d886c":["5cab9a86bd67202d20b6adc463008c8e982b070a","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"893d07555f01912f57b453a320e4d46363a31b50":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","eeb24fe119d55091148e2a3d94e80c9e349d886c"],"326990249d982376dfa2e6fd97c28f4580df4e7c":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["d7bbf8cffd2321f26cf9f6487f1571d325f20bc3"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["893d07555f01912f57b453a320e4d46363a31b50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}