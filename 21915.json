{"path":"lucene/src/java/org/apache/lucene/search/Collector#setNextReader(IndexReader,int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/Collector#setNextReader(IndexReader,int).mjava","pathOld":"src/java/org/apache/lucene/search/Collector#setNextReader(IndexReader,int).mjava","sourceNew":"  /**\n   * Called before collecting from each IndexReader. All doc ids in\n   * {@link #collect(int)} will correspond to reader.\n   * \n   * Add docBase to the current IndexReaders internal document id to re-base ids\n   * in {@link #collect(int)}.\n   * \n   * @param reader\n   *          next IndexReader\n   * @param docBase\n   */\n  public abstract void setNextReader(IndexReader reader, int docBase) throws IOException;\n\n","sourceOld":"  /**\n   * Called before collecting from each IndexReader. All doc ids in\n   * {@link #collect(int)} will correspond to reader.\n   * \n   * Add docBase to the current IndexReaders internal document id to re-base ids\n   * in {@link #collect(int)}.\n   * \n   * @param reader\n   *          next IndexReader\n   * @param docBase\n   */\n  public abstract void setNextReader(IndexReader reader, int docBase) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"323f871ffe96b871d8c534a614be60751bb023c2","date":1294820532,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/Collector#setNextReader(IndexReader,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Called before collecting from each IndexReader. All doc ids in\n   * {@link #collect(int)} will correspond to reader.\n   * \n   * Add docBase to the current IndexReaders internal document id to re-base ids\n   * in {@link #collect(int)}.\n   * \n   * @param reader\n   *          next IndexReader\n   * @param docBase\n   */\n  public abstract void setNextReader(IndexReader reader, int docBase) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/Collector#setNextReader(IndexReader,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Called before collecting from each IndexReader. All doc ids in\n   * {@link #collect(int)} will correspond to reader.\n   * \n   * Add docBase to the current IndexReaders internal document id to re-base ids\n   * in {@link #collect(int)}.\n   * \n   * @param reader\n   *          next IndexReader\n   * @param docBase\n   */\n  public abstract void setNextReader(IndexReader reader, int docBase) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/Collector#setNextReader(IndexReader,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Called before collecting from each IndexReader. All doc ids in\n   * {@link #collect(int)} will correspond to reader.\n   * \n   * Add docBase to the current IndexReaders internal document id to re-base ids\n   * in {@link #collect(int)}.\n   * \n   * @param reader\n   *          next IndexReader\n   * @param docBase\n   */\n  public abstract void setNextReader(IndexReader reader, int docBase) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"323f871ffe96b871d8c534a614be60751bb023c2":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["9454a6510e2db155fb01faa5c049b06ece95fab9","323f871ffe96b871d8c534a614be60751bb023c2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["9454a6510e2db155fb01faa5c049b06ece95fab9","323f871ffe96b871d8c534a614be60751bb023c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["323f871ffe96b871d8c534a614be60751bb023c2"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"323f871ffe96b871d8c534a614be60751bb023c2":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["323f871ffe96b871d8c534a614be60751bb023c2","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}