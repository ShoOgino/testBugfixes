{"path":"lucene/suggest/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setMinQueryLength(int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setMinQueryLength(int).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setMinQueryLength(int).mjava","sourceNew":"  /** \n   * Set the minimum length of a query term (default: 4) needed to return suggestions. \n   * <p>\n   * Very short query terms will often cause only bad suggestions with any distance\n   * metric.\n   */\n  public void setMinQueryLength(int minQueryLength) {\n    this.minQueryLength = minQueryLength;\n  }\n\n","sourceOld":"  /** \n   * Set the minimum length of a query term (default: 4) needed to return suggestions. \n   * <p>\n   * Very short query terms will often cause only bad suggestions with any distance\n   * metric.\n   */\n  public void setMinQueryLength(int minQueryLength) {\n    this.minQueryLength = minQueryLength;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e253750c2f7c232c8e818a2803aa8e42bc4684a","date":1577097716,"type":3,"author":"Andy Webb","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setMinQueryLength(int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setMinQueryLength(int).mjava","sourceNew":"  /** \n   * Set the minimum length of a query term (default: 4) needed to return suggestions. \n   * <p>\n   * Very short query terms will often cause only bad suggestions with any distance\n   * metric.\n   */\n  public void setMinQueryLength(int minQueryLength) {\n    if (minQueryLength > this.maxQueryLength)\n      throw new IllegalArgumentException(\"minQueryLength must not be greater than maxQueryLength\");\n    this.minQueryLength = minQueryLength;\n  }\n\n","sourceOld":"  /** \n   * Set the minimum length of a query term (default: 4) needed to return suggestions. \n   * <p>\n   * Very short query terms will often cause only bad suggestions with any distance\n   * metric.\n   */\n  public void setMinQueryLength(int minQueryLength) {\n    this.minQueryLength = minQueryLength;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","date":1577276097,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setMinQueryLength(int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setMinQueryLength(int).mjava","sourceNew":"  /** \n   * Set the minimum length of a query term (default: 4) needed to return suggestions. \n   * <p>\n   * Very short query terms will often cause only bad suggestions with any distance\n   * metric.\n   */\n  public void setMinQueryLength(int minQueryLength) {\n    if (minQueryLength > this.maxQueryLength)\n      throw new IllegalArgumentException(\"minQueryLength must not be greater than maxQueryLength\");\n    this.minQueryLength = minQueryLength;\n  }\n\n","sourceOld":"  /** \n   * Set the minimum length of a query term (default: 4) needed to return suggestions. \n   * <p>\n   * Very short query terms will often cause only bad suggestions with any distance\n   * metric.\n   */\n  public void setMinQueryLength(int minQueryLength) {\n    this.minQueryLength = minQueryLength;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2e253750c2f7c232c8e818a2803aa8e42bc4684a"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2e253750c2f7c232c8e818a2803aa8e42bc4684a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2e253750c2f7c232c8e818a2803aa8e42bc4684a"]},"commit2Childs":{"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","2e253750c2f7c232c8e818a2803aa8e42bc4684a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2e253750c2f7c232c8e818a2803aa8e42bc4684a":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}