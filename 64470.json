{"path":"lucene/core/src/java/org/apache/lucene/index/DocValuesFieldUpdates.Container#newUpdates(String,DocValuesType,int).mjava","commits":[{"id":"2bb2842e561df4e8e9ad89010605fc86ac265465","date":1414768208,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValuesFieldUpdates.Container#newUpdates(String,DocValuesType,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValuesFieldUpdates.Container#newUpdates(String,FieldInfo.DocValuesType,int).mjava","sourceNew":"    DocValuesFieldUpdates newUpdates(String field, DocValuesType type, int maxDoc) {\n      switch (type) {\n        case NUMERIC:\n          assert numericDVUpdates.get(field) == null;\n          NumericDocValuesFieldUpdates numericUpdates = new NumericDocValuesFieldUpdates(field, maxDoc);\n          numericDVUpdates.put(field, numericUpdates);\n          return numericUpdates;\n        case BINARY:\n          assert binaryDVUpdates.get(field) == null;\n          BinaryDocValuesFieldUpdates binaryUpdates = new BinaryDocValuesFieldUpdates(field, maxDoc);\n          binaryDVUpdates.put(field, binaryUpdates);\n          return binaryUpdates;\n        default:\n          throw new IllegalArgumentException(\"unsupported type: \" + type);\n      }\n    }\n\n","sourceOld":"    DocValuesFieldUpdates newUpdates(String field, FieldInfo.DocValuesType type, int maxDoc) {\n      switch (type) {\n        case NUMERIC:\n          assert numericDVUpdates.get(field) == null;\n          NumericDocValuesFieldUpdates numericUpdates = new NumericDocValuesFieldUpdates(field, maxDoc);\n          numericDVUpdates.put(field, numericUpdates);\n          return numericUpdates;\n        case BINARY:\n          assert binaryDVUpdates.get(field) == null;\n          BinaryDocValuesFieldUpdates binaryUpdates = new BinaryDocValuesFieldUpdates(field, maxDoc);\n          binaryDVUpdates.put(field, binaryUpdates);\n          return binaryUpdates;\n        default:\n          throw new IllegalArgumentException(\"unsupported type: \" + type);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValuesFieldUpdates.Container#newUpdates(String,DocValuesType,int).mjava","sourceNew":null,"sourceOld":"    DocValuesFieldUpdates newUpdates(String field, DocValuesType type, int maxDoc) {\n      switch (type) {\n        case NUMERIC:\n          assert numericDVUpdates.get(field) == null;\n          NumericDocValuesFieldUpdates numericUpdates = new NumericDocValuesFieldUpdates(field, maxDoc);\n          numericDVUpdates.put(field, numericUpdates);\n          return numericUpdates;\n        case BINARY:\n          assert binaryDVUpdates.get(field) == null;\n          BinaryDocValuesFieldUpdates binaryUpdates = new BinaryDocValuesFieldUpdates(field, maxDoc);\n          binaryDVUpdates.put(field, binaryUpdates);\n          return binaryUpdates;\n        default:\n          throw new IllegalArgumentException(\"unsupported type: \" + type);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValuesFieldUpdates.Container#newUpdates(String,DocValuesType,int).mjava","sourceNew":null,"sourceOld":"    DocValuesFieldUpdates newUpdates(String field, DocValuesType type, int maxDoc) {\n      switch (type) {\n        case NUMERIC:\n          assert numericDVUpdates.get(field) == null;\n          NumericDocValuesFieldUpdates numericUpdates = new NumericDocValuesFieldUpdates(field, maxDoc);\n          numericDVUpdates.put(field, numericUpdates);\n          return numericUpdates;\n        case BINARY:\n          assert binaryDVUpdates.get(field) == null;\n          BinaryDocValuesFieldUpdates binaryUpdates = new BinaryDocValuesFieldUpdates(field, maxDoc);\n          binaryDVUpdates.put(field, binaryUpdates);\n          return binaryUpdates;\n        default:\n          throw new IllegalArgumentException(\"unsupported type: \" + type);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValuesFieldUpdates.Container#newUpdates(String,DocValuesType,int).mjava","sourceNew":null,"sourceOld":"    DocValuesFieldUpdates newUpdates(String field, DocValuesType type, int maxDoc) {\n      switch (type) {\n        case NUMERIC:\n          assert numericDVUpdates.get(field) == null;\n          NumericDocValuesFieldUpdates numericUpdates = new NumericDocValuesFieldUpdates(field, maxDoc);\n          numericDVUpdates.put(field, numericUpdates);\n          return numericUpdates;\n        case BINARY:\n          assert binaryDVUpdates.get(field) == null;\n          BinaryDocValuesFieldUpdates binaryUpdates = new BinaryDocValuesFieldUpdates(field, maxDoc);\n          binaryDVUpdates.put(field, binaryUpdates);\n          return binaryUpdates;\n        default:\n          throw new IllegalArgumentException(\"unsupported type: \" + type);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["2bb2842e561df4e8e9ad89010605fc86ac265465"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2bb2842e561df4e8e9ad89010605fc86ac265465":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["2bb2842e561df4e8e9ad89010605fc86ac265465","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["2bb2842e561df4e8e9ad89010605fc86ac265465","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2bb2842e561df4e8e9ad89010605fc86ac265465"],"2bb2842e561df4e8e9ad89010605fc86ac265465":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}