{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTree#getCell(byte[],int,int).mjava","commits":[{"id":"8259c159da2de2e8528524fb76b244b46cbded59","date":1364478249,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTree#getCell(byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  public abstract Cell getCell(byte[] bytes, int offset, int len);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4de14be4bd1b857ba37ca138b61c4661c6d1bed3","date":1396628861,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTree#getCell(byte[],int,int).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTree#getCell(byte[],int,int).mjava","sourceNew":"  /**\n   * The cell for the specified token. The empty string should be equal to {@link #getWorldCell()}.\n   * Precondition: Never called when token length > maxLevel.\n   */\n  public abstract Cell getCell(byte[] bytes, int offset, int len);\n\n","sourceOld":"  public abstract Cell getCell(byte[] bytes, int offset, int len);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTree#getCell(byte[],int,int).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTree#getCell(byte[],int,int).mjava","sourceNew":"  /**\n   * The cell for the specified token. The empty string should be equal to {@link #getWorldCell()}.\n   * Precondition: Never called when token length > maxLevel.\n   */\n  public abstract Cell getCell(byte[] bytes, int offset, int len);\n\n","sourceOld":"  public abstract Cell getCell(byte[] bytes, int offset, int len);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6","date":1397789149,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTree#getCell(byte[],int,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * The cell for the specified token. The empty string should be equal to {@link #getWorldCell()}.\n   * Precondition: Never called when token length > maxLevel.\n   */\n  public abstract Cell getCell(byte[] bytes, int offset, int len);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["8259c159da2de2e8528524fb76b244b46cbded59","4de14be4bd1b857ba37ca138b61c4661c6d1bed3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4de14be4bd1b857ba37ca138b61c4661c6d1bed3":["8259c159da2de2e8528524fb76b244b46cbded59"],"8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6":["4de14be4bd1b857ba37ca138b61c4661c6d1bed3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6"],"8259c159da2de2e8528524fb76b244b46cbded59":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8259c159da2de2e8528524fb76b244b46cbded59"],"4de14be4bd1b857ba37ca138b61c4661c6d1bed3":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6"],"8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8259c159da2de2e8528524fb76b244b46cbded59":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","4de14be4bd1b857ba37ca138b61c4661c6d1bed3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}