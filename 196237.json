{"path":"lucene/core/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#loadNextSkip(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#loadNextSkip(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#loadNextSkip(int).mjava","sourceNew":"  private boolean loadNextSkip(int level) throws IOException {\n    // we have to skip, the target document is greater than the current\n    // skip list entry        \n    setLastSkipData(level);\n      \n    numSkipped[level] += skipInterval[level];\n      \n    if (numSkipped[level] > docCount) {\n      // this skip list is exhausted\n      skipDoc[level] = Integer.MAX_VALUE;\n      if (numberOfSkipLevels > level) numberOfSkipLevels = level; \n      return false;\n    }\n\n    // read next skip entry\n    skipDoc[level] += readSkipData(level, skipStream[level]);\n    \n    if (level != 0) {\n      // read the child pointer if we are not on the leaf level\n      childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n    \n    return true;\n\n  }\n\n","sourceOld":"  private boolean loadNextSkip(int level) throws IOException {\n    // we have to skip, the target document is greater than the current\n    // skip list entry        \n    setLastSkipData(level);\n      \n    numSkipped[level] += skipInterval[level];\n      \n    if (numSkipped[level] > docCount) {\n      // this skip list is exhausted\n      skipDoc[level] = Integer.MAX_VALUE;\n      if (numberOfSkipLevels > level) numberOfSkipLevels = level; \n      return false;\n    }\n\n    // read next skip entry\n    skipDoc[level] += readSkipData(level, skipStream[level]);\n    \n    if (level != 0) {\n      // read the child pointer if we are not on the leaf level\n      childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n    \n    return true;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af012165196cf308c4c905cbe866039b6fcd2233","date":1473537504,"type":3,"author":"yonik","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#loadNextSkip(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#loadNextSkip(int).mjava","sourceNew":"  private boolean loadNextSkip(int level) throws IOException {\n    // we have to skip, the target document is greater than the current\n    // skip list entry        \n    setLastSkipData(level);\n      \n    numSkipped[level] += skipInterval[level];\n\n    // numSkipped may overflow a signed int, so compare as unsigned.\n    if (Integer.compareUnsigned(numSkipped[level], docCount) > 0) {\n      // this skip list is exhausted\n      skipDoc[level] = Integer.MAX_VALUE;\n      if (numberOfSkipLevels > level) numberOfSkipLevels = level; \n      return false;\n    }\n\n    // read next skip entry\n    skipDoc[level] += readSkipData(level, skipStream[level]);\n    \n    if (level != 0) {\n      // read the child pointer if we are not on the leaf level\n      childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n    \n    return true;\n\n  }\n\n","sourceOld":"  private boolean loadNextSkip(int level) throws IOException {\n    // we have to skip, the target document is greater than the current\n    // skip list entry        \n    setLastSkipData(level);\n      \n    numSkipped[level] += skipInterval[level];\n      \n    if (numSkipped[level] > docCount) {\n      // this skip list is exhausted\n      skipDoc[level] = Integer.MAX_VALUE;\n      if (numberOfSkipLevels > level) numberOfSkipLevels = level; \n      return false;\n    }\n\n    // read next skip entry\n    skipDoc[level] += readSkipData(level, skipStream[level]);\n    \n    if (level != 0) {\n      // read the child pointer if we are not on the leaf level\n      childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n    \n    return true;\n\n  }\n\n","bugFix":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89424def13674ea17829b41c5883c54ecc31a132","date":1473767373,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#loadNextSkip(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#loadNextSkip(int).mjava","sourceNew":"  private boolean loadNextSkip(int level) throws IOException {\n    // we have to skip, the target document is greater than the current\n    // skip list entry        \n    setLastSkipData(level);\n      \n    numSkipped[level] += skipInterval[level];\n\n    // numSkipped may overflow a signed int, so compare as unsigned.\n    if (Integer.compareUnsigned(numSkipped[level], docCount) > 0) {\n      // this skip list is exhausted\n      skipDoc[level] = Integer.MAX_VALUE;\n      if (numberOfSkipLevels > level) numberOfSkipLevels = level; \n      return false;\n    }\n\n    // read next skip entry\n    skipDoc[level] += readSkipData(level, skipStream[level]);\n    \n    if (level != 0) {\n      // read the child pointer if we are not on the leaf level\n      childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n    \n    return true;\n\n  }\n\n","sourceOld":"  private boolean loadNextSkip(int level) throws IOException {\n    // we have to skip, the target document is greater than the current\n    // skip list entry        \n    setLastSkipData(level);\n      \n    numSkipped[level] += skipInterval[level];\n      \n    if (numSkipped[level] > docCount) {\n      // this skip list is exhausted\n      skipDoc[level] = Integer.MAX_VALUE;\n      if (numberOfSkipLevels > level) numberOfSkipLevels = level; \n      return false;\n    }\n\n    // read next skip entry\n    skipDoc[level] += readSkipData(level, skipStream[level]);\n    \n    if (level != 0) {\n      // read the child pointer if we are not on the leaf level\n      childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n    \n    return true;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#loadNextSkip(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#loadNextSkip(int).mjava","sourceNew":"  private boolean loadNextSkip(int level) throws IOException {\n    // we have to skip, the target document is greater than the current\n    // skip list entry        \n    setLastSkipData(level);\n      \n    numSkipped[level] += skipInterval[level];\n\n    // numSkipped may overflow a signed int, so compare as unsigned.\n    if (Integer.compareUnsigned(numSkipped[level], docCount) > 0) {\n      // this skip list is exhausted\n      skipDoc[level] = Integer.MAX_VALUE;\n      if (numberOfSkipLevels > level) numberOfSkipLevels = level; \n      return false;\n    }\n\n    // read next skip entry\n    skipDoc[level] += readSkipData(level, skipStream[level]);\n    \n    if (level != 0) {\n      // read the child pointer if we are not on the leaf level\n      childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n    \n    return true;\n\n  }\n\n","sourceOld":"  private boolean loadNextSkip(int level) throws IOException {\n    // we have to skip, the target document is greater than the current\n    // skip list entry        \n    setLastSkipData(level);\n      \n    numSkipped[level] += skipInterval[level];\n      \n    if (numSkipped[level] > docCount) {\n      // this skip list is exhausted\n      skipDoc[level] = Integer.MAX_VALUE;\n      if (numberOfSkipLevels > level) numberOfSkipLevels = level; \n      return false;\n    }\n\n    // read next skip entry\n    skipDoc[level] += readSkipData(level, skipStream[level]);\n    \n    if (level != 0) {\n      // read the child pointer if we are not on the leaf level\n      childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n    \n    return true;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#loadNextSkip(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#loadNextSkip(int).mjava","sourceNew":"  private boolean loadNextSkip(int level) throws IOException {\n    // we have to skip, the target document is greater than the current\n    // skip list entry        \n    setLastSkipData(level);\n      \n    numSkipped[level] += skipInterval[level];\n\n    // numSkipped may overflow a signed int, so compare as unsigned.\n    if (Integer.compareUnsigned(numSkipped[level], docCount) > 0) {\n      // this skip list is exhausted\n      skipDoc[level] = Integer.MAX_VALUE;\n      if (numberOfSkipLevels > level) numberOfSkipLevels = level; \n      return false;\n    }\n\n    // read next skip entry\n    skipDoc[level] += readSkipData(level, skipStream[level]);\n    \n    if (level != 0) {\n      // read the child pointer if we are not on the leaf level\n      childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n    \n    return true;\n\n  }\n\n","sourceOld":"  private boolean loadNextSkip(int level) throws IOException {\n    // we have to skip, the target document is greater than the current\n    // skip list entry        \n    setLastSkipData(level);\n      \n    numSkipped[level] += skipInterval[level];\n      \n    if (numSkipped[level] > docCount) {\n      // this skip list is exhausted\n      skipDoc[level] = Integer.MAX_VALUE;\n      if (numberOfSkipLevels > level) numberOfSkipLevels = level; \n      return false;\n    }\n\n    // read next skip entry\n    skipDoc[level] += readSkipData(level, skipStream[level]);\n    \n    if (level != 0) {\n      // read the child pointer if we are not on the leaf level\n      childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n    \n    return true;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","89424def13674ea17829b41c5883c54ecc31a132"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"89424def13674ea17829b41c5883c54ecc31a132":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","af012165196cf308c4c905cbe866039b6fcd2233"],"af012165196cf308c4c905cbe866039b6fcd2233":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","89424def13674ea17829b41c5883c54ecc31a132","af012165196cf308c4c905cbe866039b6fcd2233"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"89424def13674ea17829b41c5883c54ecc31a132":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"af012165196cf308c4c905cbe866039b6fcd2233":["89424def13674ea17829b41c5883c54ecc31a132"]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}