{"path":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#verbose().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#verbose().mjava","pathOld":"src/java/org/apache/lucene/index/ConcurrentMergeScheduler#verbose().mjava","sourceNew":"  private boolean verbose() {\n    return writer != null && writer.verbose();\n  }\n\n","sourceOld":"  private boolean verbose() {\n    return writer != null && writer.verbose();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abba363b04df5f50b5ec36177b5cd17c3fe73d6b","date":1295268568,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#verbose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#verbose().mjava","sourceNew":"  /**\n   * Returns true if verbosing is enabled. This method is usually used in\n   * conjunction with {@link #message(String)}, like that:\n   * \n   * <pre>\n   * if (verbose()) {\n   *   message(&quot;your message&quot;);\n   * }\n   * </pre>\n   */\n  protected boolean verbose() {\n    return writer != null && writer.verbose();\n  }\n\n","sourceOld":"  private boolean verbose() {\n    return writer != null && writer.verbose();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#verbose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#verbose().mjava","sourceNew":"  /**\n   * Returns true if verbosing is enabled. This method is usually used in\n   * conjunction with {@link #message(String)}, like that:\n   * \n   * <pre>\n   * if (verbose()) {\n   *   message(&quot;your message&quot;);\n   * }\n   * </pre>\n   */\n  protected boolean verbose() {\n    return writer != null && writer.verbose();\n  }\n\n","sourceOld":"  private boolean verbose() {\n    return writer != null && writer.verbose();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#verbose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#verbose().mjava","sourceNew":"  /**\n   * Returns true if verbosing is enabled. This method is usually used in\n   * conjunction with {@link #message(String)}, like that:\n   * \n   * <pre>\n   * if (verbose()) {\n   *   message(&quot;your message&quot;);\n   * }\n   * </pre>\n   */\n  protected boolean verbose() {\n    return writer != null && writer.verbose();\n  }\n\n","sourceOld":"  private boolean verbose() {\n    return writer != null && writer.verbose();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58c6bbc222f074c844e736e6fb23647e3db9cfe3","date":1322743940,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#verbose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#verbose().mjava","sourceNew":"  /**\n   * Returns true if verbosing is enabled. This method is usually used in\n   * conjunction with {@link #message(String)}, like that:\n   * \n   * <pre>\n   * if (verbose()) {\n   *   message(&quot;your message&quot;);\n   * }\n   * </pre>\n   */\n  protected boolean verbose() {\n    return writer != null && writer.infoStream.isEnabled(\"CMS\");\n  }\n\n","sourceOld":"  /**\n   * Returns true if verbosing is enabled. This method is usually used in\n   * conjunction with {@link #message(String)}, like that:\n   * \n   * <pre>\n   * if (verbose()) {\n   *   message(&quot;your message&quot;);\n   * }\n   * </pre>\n   */\n  protected boolean verbose() {\n    return writer != null && writer.verbose();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#verbose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#verbose().mjava","sourceNew":"  /**\n   * Returns true if verbosing is enabled. This method is usually used in\n   * conjunction with {@link #message(String)}, like that:\n   * \n   * <pre>\n   * if (verbose()) {\n   *   message(&quot;your message&quot;);\n   * }\n   * </pre>\n   */\n  protected boolean verbose() {\n    return writer != null && writer.infoStream.isEnabled(\"CMS\");\n  }\n\n","sourceOld":"  /**\n   * Returns true if verbosing is enabled. This method is usually used in\n   * conjunction with {@link #message(String)}, like that:\n   * \n   * <pre>\n   * if (verbose()) {\n   *   message(&quot;your message&quot;);\n   * }\n   * </pre>\n   */\n  protected boolean verbose() {\n    return writer != null && writer.infoStream.isEnabled(\"CMS\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58c6bbc222f074c844e736e6fb23647e3db9cfe3":["abba363b04df5f50b5ec36177b5cd17c3fe73d6b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["58c6bbc222f074c844e736e6fb23647e3db9cfe3"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["9454a6510e2db155fb01faa5c049b06ece95fab9","abba363b04df5f50b5ec36177b5cd17c3fe73d6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"abba363b04df5f50b5ec36177b5cd17c3fe73d6b":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["9454a6510e2db155fb01faa5c049b06ece95fab9","abba363b04df5f50b5ec36177b5cd17c3fe73d6b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"58c6bbc222f074c844e736e6fb23647e3db9cfe3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"abba363b04df5f50b5ec36177b5cd17c3fe73d6b":["58c6bbc222f074c844e736e6fb23647e3db9cfe3","29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["29ef99d61cda9641b6250bf9567329a6e65f901d","abba363b04df5f50b5ec36177b5cd17c3fe73d6b","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}