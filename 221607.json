{"path":"lucene/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader.SimpleTextDocsAndPositionsEnum#nextDoc().mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader.SimpleTextDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/simpletext/SimpleTextFieldsReader.SimpleTextDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      boolean first = true;\n      in.seek(nextDocStart);\n      long posStart = 0;\n      while(true) {\n        final long lineStart = in.getFilePointer();\n        SimpleTextUtil.readLine(in, scratch);\n        if (StringHelper.startsWith(scratch, DOC)) {\n          if (!first && (liveDocs == null || liveDocs.get(docID))) {\n            nextDocStart = lineStart;\n            in.seek(posStart);\n            return docID;\n          }\n          UnicodeUtil.UTF8toUTF16(scratch.bytes, scratch.offset+DOC.length, scratch.length-DOC.length, scratchUTF16);\n          docID = ArrayUtil.parseInt(scratchUTF16.chars, 0, scratchUTF16.length);\n          tf = 0;\n          first = false;\n        } else if (StringHelper.startsWith(scratch, FREQ)) {\n          UnicodeUtil.UTF8toUTF16(scratch.bytes, scratch.offset+FREQ.length, scratch.length-FREQ.length, scratchUTF16);\n          tf = ArrayUtil.parseInt(scratchUTF16.chars, 0, scratchUTF16.length);\n          posStart = in.getFilePointer();\n        } else if (StringHelper.startsWith(scratch, POS)) {\n          // skip\n        } else if (StringHelper.startsWith(scratch, PAYLOAD)) {\n          // skip\n        } else {\n          assert StringHelper.startsWith(scratch, TERM) || StringHelper.startsWith(scratch, FIELD) || StringHelper.startsWith(scratch, END);\n          if (!first && (liveDocs == null || liveDocs.get(docID))) {\n            nextDocStart = lineStart;\n            in.seek(posStart);\n            return docID;\n          }\n          return docID = NO_MORE_DOCS;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      boolean first = true;\n      in.seek(nextDocStart);\n      long posStart = 0;\n      while(true) {\n        final long lineStart = in.getFilePointer();\n        SimpleTextUtil.readLine(in, scratch);\n        if (StringHelper.startsWith(scratch, DOC)) {\n          if (!first && (liveDocs == null || liveDocs.get(docID))) {\n            nextDocStart = lineStart;\n            in.seek(posStart);\n            return docID;\n          }\n          UnicodeUtil.UTF8toUTF16(scratch.bytes, scratch.offset+DOC.length, scratch.length-DOC.length, scratchUTF16);\n          docID = ArrayUtil.parseInt(scratchUTF16.chars, 0, scratchUTF16.length);\n          tf = 0;\n          first = false;\n        } else if (StringHelper.startsWith(scratch, FREQ)) {\n          UnicodeUtil.UTF8toUTF16(scratch.bytes, scratch.offset+FREQ.length, scratch.length-FREQ.length, scratchUTF16);\n          tf = ArrayUtil.parseInt(scratchUTF16.chars, 0, scratchUTF16.length);\n          posStart = in.getFilePointer();\n        } else if (StringHelper.startsWith(scratch, POS)) {\n          // skip\n        } else if (StringHelper.startsWith(scratch, PAYLOAD)) {\n          // skip\n        } else {\n          assert StringHelper.startsWith(scratch, TERM) || StringHelper.startsWith(scratch, FIELD) || StringHelper.startsWith(scratch, END);\n          if (!first && (liveDocs == null || liveDocs.get(docID))) {\n            nextDocStart = lineStart;\n            in.seek(posStart);\n            return docID;\n          }\n          return docID = NO_MORE_DOCS;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31f025ae60076ae95274433f3fe8e6ace2857a87","date":1326669465,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader.SimpleTextDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader.SimpleTextDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      boolean first = true;\n      in.seek(nextDocStart);\n      long posStart = 0;\n      while(true) {\n        final long lineStart = in.getFilePointer();\n        SimpleTextUtil.readLine(in, scratch);\n        //System.out.println(\"NEXT DOC: \" + scratch.utf8ToString());\n        if (StringHelper.startsWith(scratch, DOC)) {\n          if (!first && (liveDocs == null || liveDocs.get(docID))) {\n            nextDocStart = lineStart;\n            in.seek(posStart);\n            return docID;\n          }\n          UnicodeUtil.UTF8toUTF16(scratch.bytes, scratch.offset+DOC.length, scratch.length-DOC.length, scratchUTF16);\n          docID = ArrayUtil.parseInt(scratchUTF16.chars, 0, scratchUTF16.length);\n          tf = 0;\n          first = false;\n        } else if (StringHelper.startsWith(scratch, FREQ)) {\n          UnicodeUtil.UTF8toUTF16(scratch.bytes, scratch.offset+FREQ.length, scratch.length-FREQ.length, scratchUTF16);\n          tf = ArrayUtil.parseInt(scratchUTF16.chars, 0, scratchUTF16.length);\n          posStart = in.getFilePointer();\n        } else if (StringHelper.startsWith(scratch, POS)) {\n          // skip\n        } else if (StringHelper.startsWith(scratch, START_OFFSET)) {\n          // skip\n        } else if (StringHelper.startsWith(scratch, END_OFFSET)) {\n          // skip\n        } else if (StringHelper.startsWith(scratch, PAYLOAD)) {\n          // skip\n        } else {\n          assert StringHelper.startsWith(scratch, TERM) || StringHelper.startsWith(scratch, FIELD) || StringHelper.startsWith(scratch, END);\n          if (!first && (liveDocs == null || liveDocs.get(docID))) {\n            nextDocStart = lineStart;\n            in.seek(posStart);\n            return docID;\n          }\n          return docID = NO_MORE_DOCS;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      boolean first = true;\n      in.seek(nextDocStart);\n      long posStart = 0;\n      while(true) {\n        final long lineStart = in.getFilePointer();\n        SimpleTextUtil.readLine(in, scratch);\n        if (StringHelper.startsWith(scratch, DOC)) {\n          if (!first && (liveDocs == null || liveDocs.get(docID))) {\n            nextDocStart = lineStart;\n            in.seek(posStart);\n            return docID;\n          }\n          UnicodeUtil.UTF8toUTF16(scratch.bytes, scratch.offset+DOC.length, scratch.length-DOC.length, scratchUTF16);\n          docID = ArrayUtil.parseInt(scratchUTF16.chars, 0, scratchUTF16.length);\n          tf = 0;\n          first = false;\n        } else if (StringHelper.startsWith(scratch, FREQ)) {\n          UnicodeUtil.UTF8toUTF16(scratch.bytes, scratch.offset+FREQ.length, scratch.length-FREQ.length, scratchUTF16);\n          tf = ArrayUtil.parseInt(scratchUTF16.chars, 0, scratchUTF16.length);\n          posStart = in.getFilePointer();\n        } else if (StringHelper.startsWith(scratch, POS)) {\n          // skip\n        } else if (StringHelper.startsWith(scratch, PAYLOAD)) {\n          // skip\n        } else {\n          assert StringHelper.startsWith(scratch, TERM) || StringHelper.startsWith(scratch, FIELD) || StringHelper.startsWith(scratch, END);\n          if (!first && (liveDocs == null || liveDocs.get(docID))) {\n            nextDocStart = lineStart;\n            in.seek(posStart);\n            return docID;\n          }\n          return docID = NO_MORE_DOCS;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader.SimpleTextDocsAndPositionsEnum#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader.SimpleTextDocsAndPositionsEnum#nextDoc().mjava","sourceNew":"    @Override\n    public int nextDoc() throws IOException {\n      boolean first = true;\n      in.seek(nextDocStart);\n      long posStart = 0;\n      while(true) {\n        final long lineStart = in.getFilePointer();\n        SimpleTextUtil.readLine(in, scratch);\n        //System.out.println(\"NEXT DOC: \" + scratch.utf8ToString());\n        if (StringHelper.startsWith(scratch, DOC)) {\n          if (!first && (liveDocs == null || liveDocs.get(docID))) {\n            nextDocStart = lineStart;\n            in.seek(posStart);\n            return docID;\n          }\n          UnicodeUtil.UTF8toUTF16(scratch.bytes, scratch.offset+DOC.length, scratch.length-DOC.length, scratchUTF16);\n          docID = ArrayUtil.parseInt(scratchUTF16.chars, 0, scratchUTF16.length);\n          tf = 0;\n          first = false;\n        } else if (StringHelper.startsWith(scratch, FREQ)) {\n          UnicodeUtil.UTF8toUTF16(scratch.bytes, scratch.offset+FREQ.length, scratch.length-FREQ.length, scratchUTF16);\n          tf = ArrayUtil.parseInt(scratchUTF16.chars, 0, scratchUTF16.length);\n          posStart = in.getFilePointer();\n        } else if (StringHelper.startsWith(scratch, POS)) {\n          // skip\n        } else if (StringHelper.startsWith(scratch, START_OFFSET)) {\n          // skip\n        } else if (StringHelper.startsWith(scratch, END_OFFSET)) {\n          // skip\n        } else if (StringHelper.startsWith(scratch, PAYLOAD)) {\n          // skip\n        } else {\n          assert StringHelper.startsWith(scratch, TERM) || StringHelper.startsWith(scratch, FIELD) || StringHelper.startsWith(scratch, END);\n          if (!first && (liveDocs == null || liveDocs.get(docID))) {\n            nextDocStart = lineStart;\n            in.seek(posStart);\n            return docID;\n          }\n          return docID = NO_MORE_DOCS;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextDoc() throws IOException {\n      boolean first = true;\n      in.seek(nextDocStart);\n      long posStart = 0;\n      while(true) {\n        final long lineStart = in.getFilePointer();\n        SimpleTextUtil.readLine(in, scratch);\n        //System.out.println(\"NEXT DOC: \" + scratch.utf8ToString());\n        if (StringHelper.startsWith(scratch, DOC)) {\n          if (!first && (liveDocs == null || liveDocs.get(docID))) {\n            nextDocStart = lineStart;\n            in.seek(posStart);\n            return docID;\n          }\n          UnicodeUtil.UTF8toUTF16(scratch.bytes, scratch.offset+DOC.length, scratch.length-DOC.length, scratchUTF16);\n          docID = ArrayUtil.parseInt(scratchUTF16.chars, 0, scratchUTF16.length);\n          tf = 0;\n          first = false;\n        } else if (StringHelper.startsWith(scratch, FREQ)) {\n          UnicodeUtil.UTF8toUTF16(scratch.bytes, scratch.offset+FREQ.length, scratch.length-FREQ.length, scratchUTF16);\n          tf = ArrayUtil.parseInt(scratchUTF16.chars, 0, scratchUTF16.length);\n          posStart = in.getFilePointer();\n        } else if (StringHelper.startsWith(scratch, POS)) {\n          // skip\n        } else if (StringHelper.startsWith(scratch, START_OFFSET)) {\n          // skip\n        } else if (StringHelper.startsWith(scratch, END_OFFSET)) {\n          // skip\n        } else if (StringHelper.startsWith(scratch, PAYLOAD)) {\n          // skip\n        } else {\n          assert StringHelper.startsWith(scratch, TERM) || StringHelper.startsWith(scratch, FIELD) || StringHelper.startsWith(scratch, END);\n          if (!first && (liveDocs == null || liveDocs.get(docID))) {\n            nextDocStart = lineStart;\n            in.seek(posStart);\n            return docID;\n          }\n          return docID = NO_MORE_DOCS;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}