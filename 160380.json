{"path":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testArabicPDF().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testArabicPDF().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testArabicPDF().mjava","sourceNew":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testArabicPDF().mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testArabicPDF().mjava","sourceNew":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abd55340ba9df8b62edcd692b34e46cf0614a52e","date":1311341057,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testArabicPDF().mjava","pathOld":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testArabicPDF().mjava","sourceNew":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b17c5ac3ba3c23ec6ff14d059f827576c3ed7a9","date":1345254460,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testArabicPDF().mjava","pathOld":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testArabicPDF().mjava","sourceNew":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"uprefix\", \"ignored_\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70fa1c0f4d75735ff2e1485e059d9bc5efa50598","date":1345296911,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testArabicPDF().mjava","pathOld":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testArabicPDF().mjava","sourceNew":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"uprefix\", \"ignored_\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"616c1830142ff5c1ddedec1ed898733b73c8e23b","date":1345368925,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testArabicPDF().mjava","pathOld":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testArabicPDF().mjava","sourceNew":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"uprefix\", \"ignored_\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","sourceOld":"  /** test arabic PDF extraction is functional */\n  @Test\n  public void testArabicPDF() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) \n      h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    loadLocal(\"extraction/arabic.pdf\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n        \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n        \"fmap.Creation-Date\", \"extractedDate\",\n        \"fmap.AAPL:Keywords\", \"ignored_a\",\n        \"fmap.xmpTPg:NPages\", \"ignored_a\",\n        \"fmap.Author\", \"extractedAuthor\",\n        \"fmap.content\", \"wdf_nocase\",\n       \"literal.id\", \"one\",\n        \"fmap.Last-Modified\", \"extractedDate\");\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=0]\");\n    assertU(commit());\n    assertQ(req(\"wdf_nocase:السلم\"), \"//result[@numFound=1]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b17c5ac3ba3c23ec6ff14d059f827576c3ed7a9":["abd55340ba9df8b62edcd692b34e46cf0614a52e"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":["abd55340ba9df8b62edcd692b34e46cf0614a52e","7b17c5ac3ba3c23ec6ff14d059f827576c3ed7a9"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":["abd55340ba9df8b62edcd692b34e46cf0614a52e","7b17c5ac3ba3c23ec6ff14d059f827576c3ed7a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b17c5ac3ba3c23ec6ff14d059f827576c3ed7a9"],"abd55340ba9df8b62edcd692b34e46cf0614a52e":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"7b17c5ac3ba3c23ec6ff14d059f827576c3ed7a9":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":[],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["abd55340ba9df8b62edcd692b34e46cf0614a52e"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"abd55340ba9df8b62edcd692b34e46cf0614a52e":["7b17c5ac3ba3c23ec6ff14d059f827576c3ed7a9","616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}