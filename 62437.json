{"path":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat.FieldsWriter#write(Fields,NormsProducer).mjava","commits":[{"id":"622a708571e534680618b3c5e0c28ac539a47776","date":1517406892,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat.FieldsWriter#write(Fields,NormsProducer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat.FieldsWriter#write(Fields).mjava","sourceNew":"    @Override\n    public void write(Fields fields, NormsProducer norms) throws IOException {\n      Map<PostingsFormat, FieldsGroup> formatToGroups = buildFieldsGroupMapping(fields);\n\n      // Write postings\n      boolean success = false;\n      try {\n        for (Map.Entry<PostingsFormat, FieldsGroup> ent : formatToGroups.entrySet()) {\n          PostingsFormat format = ent.getKey();\n          final FieldsGroup group = ent.getValue();\n\n          // Exposes only the fields from this group:\n          Fields maskedFields = new FilterFields(fields) {\n            @Override\n            public Iterator<String> iterator() {\n              return group.fields.iterator();\n            }\n          };\n\n          FieldsConsumer consumer = format.fieldsConsumer(group.state);\n          toClose.add(consumer);\n          consumer.write(maskedFields, norms);\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(toClose);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void write(Fields fields) throws IOException {\n      Map<PostingsFormat, FieldsGroup> formatToGroups = buildFieldsGroupMapping(fields);\n\n      // Write postings\n      boolean success = false;\n      try {\n        for (Map.Entry<PostingsFormat, FieldsGroup> ent : formatToGroups.entrySet()) {\n          PostingsFormat format = ent.getKey();\n          final FieldsGroup group = ent.getValue();\n\n          // Exposes only the fields from this group:\n          Fields maskedFields = new FilterFields(fields) {\n            @Override\n            public Iterator<String> iterator() {\n              return group.fields.iterator();\n            }\n          };\n\n          FieldsConsumer consumer = format.fieldsConsumer(group.state);\n          toClose.add(consumer);\n          consumer.write(maskedFields);\n        }\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(toClose);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"622a708571e534680618b3c5e0c28ac539a47776":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["622a708571e534680618b3c5e0c28ac539a47776"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["622a708571e534680618b3c5e0c28ac539a47776"],"622a708571e534680618b3c5e0c28ac539a47776":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}