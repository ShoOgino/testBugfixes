{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/response/NoOpResponseParserTest#testQueryParse().mjava","commits":[{"id":"3c35962275b74caeb54617344cc56e1d66ba8b56","date":1391598206,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/response/NoOpResponseParserTest#testQueryParse().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Parse response from query using NoOpResponseParser.\n   * @throws Exception\n   */\n  @Test\n  public void testQueryParse() throws Exception {\n    HttpSolrServer server = (HttpSolrServer) createNewSolrServer();\n    SolrQuery query = new SolrQuery(\"id:1234\");\n    QueryRequest req = new QueryRequest(query);\n    server.setParser(new NoOpResponseParser());\n    NamedList<Object> resp = server.request(req);\n    String responseString = (String) resp.get(\"response\");\n\n    assertResponse(responseString);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9cece00cbf0af9717bc05c48b7a632b81ff7d8fe","date":1391601577,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/response/NoOpResponseParserTest#testQueryParse().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/response/NoOpResponseParserTest#testQueryParse().mjava","sourceNew":"  /**\n   * Parse response from query using NoOpResponseParser.\n   */\n  @Test\n  public void testQueryParse() throws Exception {\n    HttpSolrServer server = (HttpSolrServer) createNewSolrServer();\n    SolrQuery query = new SolrQuery(\"id:1234\");\n    QueryRequest req = new QueryRequest(query);\n    server.setParser(new NoOpResponseParser());\n    NamedList<Object> resp = server.request(req);\n    String responseString = (String) resp.get(\"response\");\n\n    assertResponse(responseString);\n  }\n\n","sourceOld":"  /**\n   * Parse response from query using NoOpResponseParser.\n   * @throws Exception\n   */\n  @Test\n  public void testQueryParse() throws Exception {\n    HttpSolrServer server = (HttpSolrServer) createNewSolrServer();\n    SolrQuery query = new SolrQuery(\"id:1234\");\n    QueryRequest req = new QueryRequest(query);\n    server.setParser(new NoOpResponseParser());\n    NamedList<Object> resp = server.request(req);\n    String responseString = (String) resp.get(\"response\");\n\n    assertResponse(responseString);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c7856260bc28f285ae7bfefa99b28db4dca6daf","date":1395253500,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/response/NoOpResponseParserTest#testQueryParse().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/response/NoOpResponseParserTest#testQueryParse().mjava","sourceNew":"  /**\n   * Parse response from query using NoOpResponseParser.\n   */\n  @Test\n  public void testQueryParse() throws Exception {\n    HttpSolrServer server = (HttpSolrServer) createNewSolrServer();\n    SolrQuery query = new SolrQuery(\"id:1234\");\n    QueryRequest req = new QueryRequest(query);\n    server.setParser(new NoOpResponseParser());\n    NamedList<Object> resp = server.request(req);\n    String responseString = (String) resp.get(\"response\");\n\n    assertResponse(responseString);\n    server.shutdown();\n  }\n\n","sourceOld":"  /**\n   * Parse response from query using NoOpResponseParser.\n   */\n  @Test\n  public void testQueryParse() throws Exception {\n    HttpSolrServer server = (HttpSolrServer) createNewSolrServer();\n    SolrQuery query = new SolrQuery(\"id:1234\");\n    QueryRequest req = new QueryRequest(query);\n    server.setParser(new NoOpResponseParser());\n    NamedList<Object> resp = server.request(req);\n    String responseString = (String) resp.get(\"response\");\n\n    assertResponse(responseString);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/response/NoOpResponseParserTest#testQueryParse().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/response/NoOpResponseParserTest#testQueryParse().mjava","sourceNew":"  /**\n   * Parse response from query using NoOpResponseParser.\n   */\n  @Test\n  public void testQueryParse() throws Exception {\n    HttpSolrClient client = (HttpSolrClient) createNewSolrClient();\n    SolrQuery query = new SolrQuery(\"id:1234\");\n    QueryRequest req = new QueryRequest(query);\n    client.setParser(new NoOpResponseParser());\n    NamedList<Object> resp = client.request(req);\n    String responseString = (String) resp.get(\"response\");\n\n    assertResponse(responseString);\n    client.shutdown();\n  }\n\n","sourceOld":"  /**\n   * Parse response from query using NoOpResponseParser.\n   */\n  @Test\n  public void testQueryParse() throws Exception {\n    HttpSolrServer server = (HttpSolrServer) createNewSolrServer();\n    SolrQuery query = new SolrQuery(\"id:1234\");\n    QueryRequest req = new QueryRequest(query);\n    server.setParser(new NoOpResponseParser());\n    NamedList<Object> resp = server.request(req);\n    String responseString = (String) resp.get(\"response\");\n\n    assertResponse(responseString);\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/response/NoOpResponseParserTest#testQueryParse().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/response/NoOpResponseParserTest#testQueryParse().mjava","sourceNew":"  /**\n   * Parse response from query using NoOpResponseParser.\n   */\n  @Test\n  public void testQueryParse() throws Exception {\n\n    try (HttpSolrClient client = (HttpSolrClient) createNewSolrClient()) {\n      SolrQuery query = new SolrQuery(\"id:1234\");\n      QueryRequest req = new QueryRequest(query);\n      client.setParser(new NoOpResponseParser());\n      NamedList<Object> resp = client.request(req);\n      String responseString = (String) resp.get(\"response\");\n      assertResponse(responseString);\n    }\n\n  }\n\n","sourceOld":"  /**\n   * Parse response from query using NoOpResponseParser.\n   */\n  @Test\n  public void testQueryParse() throws Exception {\n    HttpSolrClient client = (HttpSolrClient) createNewSolrClient();\n    SolrQuery query = new SolrQuery(\"id:1234\");\n    QueryRequest req = new QueryRequest(query);\n    client.setParser(new NoOpResponseParser());\n    NamedList<Object> resp = client.request(req);\n    String responseString = (String) resp.get(\"response\");\n\n    assertResponse(responseString);\n    client.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4c7856260bc28f285ae7bfefa99b28db4dca6daf":["9cece00cbf0af9717bc05c48b7a632b81ff7d8fe"],"9cece00cbf0af9717bc05c48b7a632b81ff7d8fe":["3c35962275b74caeb54617344cc56e1d66ba8b56"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["4c7856260bc28f285ae7bfefa99b28db4dca6daf"],"3c35962275b74caeb54617344cc56e1d66ba8b56":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cc3b13b430571c2e169f98fe38e1e7666f88522d"]},"commit2Childs":{"4c7856260bc28f285ae7bfefa99b28db4dca6daf":["bafca15d8e408346a67f4282ad1143b88023893b"],"9cece00cbf0af9717bc05c48b7a632b81ff7d8fe":["4c7856260bc28f285ae7bfefa99b28db4dca6daf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3c35962275b74caeb54617344cc56e1d66ba8b56"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bafca15d8e408346a67f4282ad1143b88023893b":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"3c35962275b74caeb54617344cc56e1d66ba8b56":["9cece00cbf0af9717bc05c48b7a632b81ff7d8fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}