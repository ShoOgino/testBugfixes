{"path":"solr/core/src/java/org/apache/solr/query/FilterQuery#createWeight(IndexSearcher,boolean).mjava","commits":[{"id":"b8a9551fb5fcfdd678f5a7c22b9b1814529b1a8c","date":1438964081,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/query/FilterQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needScores) throws IOException {\n    // SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n\n    if (!(searcher instanceof SolrIndexSearcher)) {\n      // delete-by-query won't have SolrIndexSearcher\n      ConstantScoreQuery csq = new ConstantScoreQuery(q);\n      csq.setBoost(this.getBoost());\n      return csq.createWeight(searcher, needScores);\n    }\n\n    SolrIndexSearcher solrSearcher = (SolrIndexSearcher)searcher;\n    DocSet docs = solrSearcher.getDocSet(q);\n    // reqInfo.addCloseHook(docs);  // needed for off-heap refcounting\n\n    ConstantScoreQuery csq = new ConstantScoreQuery( docs.getTopFilter() );\n    csq.setBoost( this.getBoost() );\n    return csq.createWeight(searcher, needScores);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ac33eccd3fdbbd60a3f807edd3b40b82232d9b9","date":1439225123,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/query/FilterQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/query/FilterQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needScores) throws IOException {\n    // SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n\n    if (!(searcher instanceof SolrIndexSearcher)) {\n      // delete-by-query won't have SolrIndexSearcher\n      ConstantScoreQuery csq = new ConstantScoreQuery(q);\n      csq.setBoost(this.getBoost());\n      return csq.createWeight(searcher, needScores);\n    }\n\n    SolrIndexSearcher solrSearcher = (SolrIndexSearcher)searcher;\n    DocSet docs = solrSearcher.getDocSet(q);\n    // reqInfo.addCloseHook(docs);  // needed for off-heap refcounting\n\n    SolrConstantScoreQuery csq = new SolrConstantScoreQuery( docs.getTopFilter() );\n    csq.setBoost( this.getBoost() );\n    return csq.createWeight(searcher, needScores);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needScores) throws IOException {\n    // SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n\n    if (!(searcher instanceof SolrIndexSearcher)) {\n      // delete-by-query won't have SolrIndexSearcher\n      ConstantScoreQuery csq = new ConstantScoreQuery(q);\n      csq.setBoost(this.getBoost());\n      return csq.createWeight(searcher, needScores);\n    }\n\n    SolrIndexSearcher solrSearcher = (SolrIndexSearcher)searcher;\n    DocSet docs = solrSearcher.getDocSet(q);\n    // reqInfo.addCloseHook(docs);  // needed for off-heap refcounting\n\n    ConstantScoreQuery csq = new ConstantScoreQuery( docs.getTopFilter() );\n    csq.setBoost( this.getBoost() );\n    return csq.createWeight(searcher, needScores);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/query/FilterQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/query/FilterQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needScores) throws IOException {\n    // SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n\n    if (!(searcher instanceof SolrIndexSearcher)) {\n      // delete-by-query won't have SolrIndexSearcher\n      return new BoostQuery(new ConstantScoreQuery(q), 0).createWeight(searcher, needScores);\n    }\n\n    SolrIndexSearcher solrSearcher = (SolrIndexSearcher)searcher;\n    DocSet docs = solrSearcher.getDocSet(q);\n    // reqInfo.addCloseHook(docs);  // needed for off-heap refcounting\n\n    return new BoostQuery(new SolrConstantScoreQuery(docs.getTopFilter()), 0).createWeight(searcher, needScores);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needScores) throws IOException {\n    // SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n\n    if (!(searcher instanceof SolrIndexSearcher)) {\n      // delete-by-query won't have SolrIndexSearcher\n      ConstantScoreQuery csq = new ConstantScoreQuery(q);\n      csq.setBoost(this.getBoost());\n      return csq.createWeight(searcher, needScores);\n    }\n\n    SolrIndexSearcher solrSearcher = (SolrIndexSearcher)searcher;\n    DocSet docs = solrSearcher.getDocSet(q);\n    // reqInfo.addCloseHook(docs);  // needed for off-heap refcounting\n\n    SolrConstantScoreQuery csq = new SolrConstantScoreQuery( docs.getTopFilter() );\n    csq.setBoost( this.getBoost() );\n    return csq.createWeight(searcher, needScores);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02e175abd2c4c1611c5a9647486ae8ba249a94c1","date":1468327116,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/query/FilterQuery#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/query/FilterQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needScores, float boost) throws IOException {\n    // SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n\n    if (!(searcher instanceof SolrIndexSearcher)) {\n      // delete-by-query won't have SolrIndexSearcher\n      return new BoostQuery(new ConstantScoreQuery(q), 0).createWeight(searcher, needScores, 1f);\n    }\n\n    SolrIndexSearcher solrSearcher = (SolrIndexSearcher)searcher;\n    DocSet docs = solrSearcher.getDocSet(q);\n    // reqInfo.addCloseHook(docs);  // needed for off-heap refcounting\n\n    return new BoostQuery(new SolrConstantScoreQuery(docs.getTopFilter()), 0).createWeight(searcher, needScores, 1f);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needScores) throws IOException {\n    // SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n\n    if (!(searcher instanceof SolrIndexSearcher)) {\n      // delete-by-query won't have SolrIndexSearcher\n      return new BoostQuery(new ConstantScoreQuery(q), 0).createWeight(searcher, needScores);\n    }\n\n    SolrIndexSearcher solrSearcher = (SolrIndexSearcher)searcher;\n    DocSet docs = solrSearcher.getDocSet(q);\n    // reqInfo.addCloseHook(docs);  // needed for off-heap refcounting\n\n    return new BoostQuery(new SolrConstantScoreQuery(docs.getTopFilter()), 0).createWeight(searcher, needScores);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/query/FilterQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needScores) throws IOException {\n    // SolrRequestInfo reqInfo = SolrRequestInfo.getRequestInfo();\n\n    if (!(searcher instanceof SolrIndexSearcher)) {\n      // delete-by-query won't have SolrIndexSearcher\n      return new BoostQuery(new ConstantScoreQuery(q), 0).createWeight(searcher, needScores);\n    }\n\n    SolrIndexSearcher solrSearcher = (SolrIndexSearcher)searcher;\n    DocSet docs = solrSearcher.getDocSet(q);\n    // reqInfo.addCloseHook(docs);  // needed for off-heap refcounting\n\n    return new BoostQuery(new SolrConstantScoreQuery(docs.getTopFilter()), 0).createWeight(searcher, needScores);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b8a9551fb5fcfdd678f5a7c22b9b1814529b1a8c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["5ac33eccd3fdbbd60a3f807edd3b40b82232d9b9"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"5ac33eccd3fdbbd60a3f807edd3b40b82232d9b9":["b8a9551fb5fcfdd678f5a7c22b9b1814529b1a8c"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2dfdf766e55e943d942055d7de53c7ad6bc45283","02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"]},"commit2Childs":{"b8a9551fb5fcfdd678f5a7c22b9b1814529b1a8c":["5ac33eccd3fdbbd60a3f807edd3b40b82232d9b9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b8a9551fb5fcfdd678f5a7c22b9b1814529b1a8c"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["02e175abd2c4c1611c5a9647486ae8ba249a94c1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5ac33eccd3fdbbd60a3f807edd3b40b82232d9b9":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}