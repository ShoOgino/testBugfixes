{"path":"backwards/src/test/org/apache/lucene/document/TestDateTools#testDateAndTimetoString().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/document/TestDateTools#testDateAndTimetoString().mjava","pathOld":"/dev/null","sourceNew":"  public void testDateAndTimetoString() throws ParseException {\n    Calendar cal = new GregorianCalendar();\n    cal.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n    cal.set(2004, 1, 3,   // year=2004, month=february(!), day=3\n        22, 8, 56);       // hour, minute, second\n    cal.set(Calendar.MILLISECOND, 333);\n    \n    String dateString;\n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.YEAR);\n    assertEquals(\"2004\", dateString);\n    assertEquals(\"2004-01-01 00:00:00:000\", isoFormat(DateTools.stringToDate(dateString)));\n    \n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.MONTH);\n    assertEquals(\"200402\", dateString);\n    assertEquals(\"2004-02-01 00:00:00:000\", isoFormat(DateTools.stringToDate(dateString)));\n\n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.DAY);\n    assertEquals(\"20040203\", dateString);\n    assertEquals(\"2004-02-03 00:00:00:000\", isoFormat(DateTools.stringToDate(dateString)));\n    \n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.HOUR);\n    assertEquals(\"2004020322\", dateString);\n    assertEquals(\"2004-02-03 22:00:00:000\", isoFormat(DateTools.stringToDate(dateString)));\n    \n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.MINUTE);\n    assertEquals(\"200402032208\", dateString);\n    assertEquals(\"2004-02-03 22:08:00:000\", isoFormat(DateTools.stringToDate(dateString)));\n    \n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.SECOND);\n    assertEquals(\"20040203220856\", dateString);\n    assertEquals(\"2004-02-03 22:08:56:000\", isoFormat(DateTools.stringToDate(dateString)));\n    \n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.MILLISECOND);\n    assertEquals(\"20040203220856333\", dateString);\n    assertEquals(\"2004-02-03 22:08:56:333\", isoFormat(DateTools.stringToDate(dateString)));\n\n    // date before 1970:\n    cal.set(1961, 2, 5,   // year=1961, month=march(!), day=5\n        23, 9, 51);       // hour, minute, second\n    cal.set(Calendar.MILLISECOND, 444);\n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.MILLISECOND);\n    assertEquals(\"19610305230951444\", dateString);\n    assertEquals(\"1961-03-05 23:09:51:444\", isoFormat(DateTools.stringToDate(dateString)));\n\n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.HOUR);\n    assertEquals(\"1961030523\", dateString);\n    assertEquals(\"1961-03-05 23:00:00:000\", isoFormat(DateTools.stringToDate(dateString)));\n\n    // timeToString:\n    cal.set(1970, 0, 1, // year=1970, month=january, day=1\n        0, 0, 0); // hour, minute, second\n    cal.set(Calendar.MILLISECOND, 0);\n    dateString = DateTools.timeToString(cal.getTime().getTime(),\n        DateTools.Resolution.MILLISECOND);\n    assertEquals(\"19700101000000000\", dateString);\n        \n    cal.set(1970, 0, 1, // year=1970, month=january, day=1\n        1, 2, 3); // hour, minute, second\n    cal.set(Calendar.MILLISECOND, 0);\n    dateString = DateTools.timeToString(cal.getTime().getTime(),\n        DateTools.Resolution.MILLISECOND);\n    assertEquals(\"19700101010203000\", dateString);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/document/TestDateTools#testDateAndTimetoString().mjava","pathOld":"backwards/src/test/org/apache/lucene/document/TestDateTools#testDateAndTimetoString().mjava","sourceNew":"  public void testDateAndTimetoString() throws ParseException {\n    Calendar cal = new GregorianCalendar();\n    cal.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n    cal.set(2004, 1, 3,   // year=2004, month=february(!), day=3\n        22, 8, 56);       // hour, minute, second\n    cal.set(Calendar.MILLISECOND, 333);\n    \n    String dateString;\n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.YEAR);\n    assertEquals(\"2004\", dateString);\n    assertEquals(\"2004-01-01 00:00:00:000\", isoFormat(DateTools.stringToDate(dateString)));\n    \n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.MONTH);\n    assertEquals(\"200402\", dateString);\n    assertEquals(\"2004-02-01 00:00:00:000\", isoFormat(DateTools.stringToDate(dateString)));\n\n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.DAY);\n    assertEquals(\"20040203\", dateString);\n    assertEquals(\"2004-02-03 00:00:00:000\", isoFormat(DateTools.stringToDate(dateString)));\n    \n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.HOUR);\n    assertEquals(\"2004020322\", dateString);\n    assertEquals(\"2004-02-03 22:00:00:000\", isoFormat(DateTools.stringToDate(dateString)));\n    \n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.MINUTE);\n    assertEquals(\"200402032208\", dateString);\n    assertEquals(\"2004-02-03 22:08:00:000\", isoFormat(DateTools.stringToDate(dateString)));\n    \n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.SECOND);\n    assertEquals(\"20040203220856\", dateString);\n    assertEquals(\"2004-02-03 22:08:56:000\", isoFormat(DateTools.stringToDate(dateString)));\n    \n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.MILLISECOND);\n    assertEquals(\"20040203220856333\", dateString);\n    assertEquals(\"2004-02-03 22:08:56:333\", isoFormat(DateTools.stringToDate(dateString)));\n\n    // date before 1970:\n    cal.set(1961, 2, 5,   // year=1961, month=march(!), day=5\n        23, 9, 51);       // hour, minute, second\n    cal.set(Calendar.MILLISECOND, 444);\n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.MILLISECOND);\n    assertEquals(\"19610305230951444\", dateString);\n    assertEquals(\"1961-03-05 23:09:51:444\", isoFormat(DateTools.stringToDate(dateString)));\n\n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.HOUR);\n    assertEquals(\"1961030523\", dateString);\n    assertEquals(\"1961-03-05 23:00:00:000\", isoFormat(DateTools.stringToDate(dateString)));\n\n    // timeToString:\n    cal.set(1970, 0, 1, // year=1970, month=january, day=1\n        0, 0, 0); // hour, minute, second\n    cal.set(Calendar.MILLISECOND, 0);\n    dateString = DateTools.timeToString(cal.getTime().getTime(),\n        DateTools.Resolution.MILLISECOND);\n    assertEquals(\"19700101000000000\", dateString);\n        \n    cal.set(1970, 0, 1, // year=1970, month=january, day=1\n        1, 2, 3); // hour, minute, second\n    cal.set(Calendar.MILLISECOND, 0);\n    dateString = DateTools.timeToString(cal.getTime().getTime(),\n        DateTools.Resolution.MILLISECOND);\n    assertEquals(\"19700101010203000\", dateString);\n  }\n\n","sourceOld":"  public void testDateAndTimetoString() throws ParseException {\n    Calendar cal = new GregorianCalendar();\n    cal.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n    cal.set(2004, 1, 3,   // year=2004, month=february(!), day=3\n        22, 8, 56);       // hour, minute, second\n    cal.set(Calendar.MILLISECOND, 333);\n    \n    String dateString;\n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.YEAR);\n    assertEquals(\"2004\", dateString);\n    assertEquals(\"2004-01-01 00:00:00:000\", isoFormat(DateTools.stringToDate(dateString)));\n    \n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.MONTH);\n    assertEquals(\"200402\", dateString);\n    assertEquals(\"2004-02-01 00:00:00:000\", isoFormat(DateTools.stringToDate(dateString)));\n\n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.DAY);\n    assertEquals(\"20040203\", dateString);\n    assertEquals(\"2004-02-03 00:00:00:000\", isoFormat(DateTools.stringToDate(dateString)));\n    \n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.HOUR);\n    assertEquals(\"2004020322\", dateString);\n    assertEquals(\"2004-02-03 22:00:00:000\", isoFormat(DateTools.stringToDate(dateString)));\n    \n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.MINUTE);\n    assertEquals(\"200402032208\", dateString);\n    assertEquals(\"2004-02-03 22:08:00:000\", isoFormat(DateTools.stringToDate(dateString)));\n    \n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.SECOND);\n    assertEquals(\"20040203220856\", dateString);\n    assertEquals(\"2004-02-03 22:08:56:000\", isoFormat(DateTools.stringToDate(dateString)));\n    \n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.MILLISECOND);\n    assertEquals(\"20040203220856333\", dateString);\n    assertEquals(\"2004-02-03 22:08:56:333\", isoFormat(DateTools.stringToDate(dateString)));\n\n    // date before 1970:\n    cal.set(1961, 2, 5,   // year=1961, month=march(!), day=5\n        23, 9, 51);       // hour, minute, second\n    cal.set(Calendar.MILLISECOND, 444);\n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.MILLISECOND);\n    assertEquals(\"19610305230951444\", dateString);\n    assertEquals(\"1961-03-05 23:09:51:444\", isoFormat(DateTools.stringToDate(dateString)));\n\n    dateString = DateTools.dateToString(cal.getTime(), DateTools.Resolution.HOUR);\n    assertEquals(\"1961030523\", dateString);\n    assertEquals(\"1961-03-05 23:00:00:000\", isoFormat(DateTools.stringToDate(dateString)));\n\n    // timeToString:\n    cal.set(1970, 0, 1, // year=1970, month=january, day=1\n        0, 0, 0); // hour, minute, second\n    cal.set(Calendar.MILLISECOND, 0);\n    dateString = DateTools.timeToString(cal.getTime().getTime(),\n        DateTools.Resolution.MILLISECOND);\n    assertEquals(\"19700101000000000\", dateString);\n        \n    cal.set(1970, 0, 1, // year=1970, month=january, day=1\n        1, 2, 3); // hour, minute, second\n    cal.set(Calendar.MILLISECOND, 0);\n    dateString = DateTools.timeToString(cal.getTime().getTime(),\n        DateTools.Resolution.MILLISECOND);\n    assertEquals(\"19700101010203000\", dateString);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}