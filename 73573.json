{"path":"backwards/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithSetNorm().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithSetNorm().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-1648\n  public void testCloneWithSetNorm() throws Throwable {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    IndexReader orig = IndexReader.open(dir1, false);\n    orig.setNorm(1, \"field1\", 17.0f);\n    final byte encoded = Similarity.encodeNorm(17.0f);\n    assertEquals(encoded, orig.norms(\"field1\")[1]);\n\n    // the cloned segmentreader should have 2 references, 1 to itself, and 1 to\n    // the original segmentreader\n    IndexReader clonedReader = (IndexReader) orig.clone();\n    orig.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertEquals(encoded, r.norms(\"field1\")[1]);\n    r.close();\n    dir1.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithSetNorm().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithSetNorm().mjava","sourceNew":"  // LUCENE-1648\n  public void testCloneWithSetNorm() throws Throwable {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    IndexReader orig = IndexReader.open(dir1, false);\n    orig.setNorm(1, \"field1\", 17.0f);\n    final byte encoded = Similarity.encodeNorm(17.0f);\n    assertEquals(encoded, orig.norms(\"field1\")[1]);\n\n    // the cloned segmentreader should have 2 references, 1 to itself, and 1 to\n    // the original segmentreader\n    IndexReader clonedReader = (IndexReader) orig.clone();\n    orig.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertEquals(encoded, r.norms(\"field1\")[1]);\n    r.close();\n    dir1.close();\n  }\n\n","sourceOld":"  // LUCENE-1648\n  public void testCloneWithSetNorm() throws Throwable {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    IndexReader orig = IndexReader.open(dir1, false);\n    orig.setNorm(1, \"field1\", 17.0f);\n    final byte encoded = Similarity.encodeNorm(17.0f);\n    assertEquals(encoded, orig.norms(\"field1\")[1]);\n\n    // the cloned segmentreader should have 2 references, 1 to itself, and 1 to\n    // the original segmentreader\n    IndexReader clonedReader = (IndexReader) orig.clone();\n    orig.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertEquals(encoded, r.norms(\"field1\")[1]);\n    r.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}