{"path":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/demohtml/TestHtmlParser#testMeta().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/demohtml/TestHtmlParser#testMeta().mjava","pathOld":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/demohtml/TestHtmlParser#testMeta().mjava","sourceNew":"  public void testMeta() throws Exception {\n    String text = \"<html><head>\" +\n    \"<meta name=\\\"a\\\" content=\\\"1\\\" />\" +\n    \"<meta name=\\\"b\\\" content=\\\"2\\\" />\" +\n    \"<meta name=\\\"keywords\\\" content=\\\"this is a test\\\" />\" +\n    \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html;charset=UTF-8\\\" />\" +\n    \"</head><body>foobar</body></html>\";\n    HTMLParser parser = new HTMLParser(new StringReader(text));\n    Properties tags = parser.getMetaTags();\n    assertEquals(4, tags.size());\n    assertEquals(\"1\", tags.get(\"a\"));\n    assertEquals(\"2\", tags.get(\"b\"));\n    assertEquals(\"this is a test\", tags.get(\"keywords\"));\n    assertEquals(\"text/html;charset=utf-8\", tags.get(\"content-type\"));\n  }\n\n","sourceOld":"  public void testMeta() throws Exception {\n    String text = \"<html><head>\" +\n    \"<meta name=\\\"a\\\" content=\\\"1\\\" />\" +\n    \"<meta name=\\\"b\\\" content=\\\"2\\\" />\" +\n    \"<meta name=\\\"keywords\\\" content=\\\"this is a test\\\" />\" +\n    \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html;charset=UTF-8\\\" />\" +\n    \"</head><body>foobar</body></html>\";\n    HTMLParser parser = new HTMLParser(new StringReader(text));\n    Properties tags = parser.getMetaTags();\n    assertEquals(4, tags.size());\n    assertEquals(\"1\", tags.get(\"a\"));\n    assertEquals(\"2\", tags.get(\"b\"));\n    assertEquals(\"this is a test\", tags.get(\"keywords\"));\n    assertEquals(\"text/html;charset=utf-8\", tags.get(\"content-type\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91e8768e9769f9e5175b1d99dcd27600bc9d4374","date":1342373687,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/TestHtmlParser#testMeta().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/demohtml/TestHtmlParser#testMeta().mjava","sourceNew":"  public void testMeta() throws Exception {\n    String text = \"<html><head>\" +\n    \"<meta name=\\\"a\\\" content=\\\"1\\\" />\" +\n    \"<meta name=\\\"b\\\" content=\\\"2\\\" />\" +\n    \"<meta name=\\\"keywords\\\" content=\\\"this is a test\\\" />\" +\n    \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html;charset=UTF-8\\\" />\" +\n    \"</head><body>foobar</body></html>\";\n    Parser parser = new Parser(new StringReader(text));\n    Properties tags = parser.metaTags;\n    assertEquals(4, tags.size());\n    assertEquals(\"1\", tags.get(\"a\"));\n    assertEquals(\"2\", tags.get(\"b\"));\n    assertEquals(\"this is a test\", tags.get(\"keywords\"));\n    assertEquals(\"text/html;charset=UTF-8\", tags.get(\"content-type\"));\n  }\n\n","sourceOld":"  public void testMeta() throws Exception {\n    String text = \"<html><head>\" +\n    \"<meta name=\\\"a\\\" content=\\\"1\\\" />\" +\n    \"<meta name=\\\"b\\\" content=\\\"2\\\" />\" +\n    \"<meta name=\\\"keywords\\\" content=\\\"this is a test\\\" />\" +\n    \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html;charset=UTF-8\\\" />\" +\n    \"</head><body>foobar</body></html>\";\n    HTMLParser parser = new HTMLParser(new StringReader(text));\n    Properties tags = parser.getMetaTags();\n    assertEquals(4, tags.size());\n    assertEquals(\"1\", tags.get(\"a\"));\n    assertEquals(\"2\", tags.get(\"b\"));\n    assertEquals(\"this is a test\", tags.get(\"keywords\"));\n    assertEquals(\"text/html;charset=utf-8\", tags.get(\"content-type\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/demohtml/TestHtmlParser#testMeta().mjava","sourceNew":null,"sourceOld":"  public void testMeta() throws Exception {\n    String text = \"<html><head>\" +\n    \"<meta name=\\\"a\\\" content=\\\"1\\\" />\" +\n    \"<meta name=\\\"b\\\" content=\\\"2\\\" />\" +\n    \"<meta name=\\\"keywords\\\" content=\\\"this is a test\\\" />\" +\n    \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html;charset=UTF-8\\\" />\" +\n    \"</head><body>foobar</body></html>\";\n    HTMLParser parser = new HTMLParser(new StringReader(text));\n    Properties tags = parser.getMetaTags();\n    assertEquals(4, tags.size());\n    assertEquals(\"1\", tags.get(\"a\"));\n    assertEquals(\"2\", tags.get(\"b\"));\n    assertEquals(\"this is a test\", tags.get(\"keywords\"));\n    assertEquals(\"text/html;charset=utf-8\", tags.get(\"content-type\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/demohtml/TestHtmlParser#testMeta().mjava","sourceNew":null,"sourceOld":"  public void testMeta() throws Exception {\n    String text = \"<html><head>\" +\n    \"<meta name=\\\"a\\\" content=\\\"1\\\" />\" +\n    \"<meta name=\\\"b\\\" content=\\\"2\\\" />\" +\n    \"<meta name=\\\"keywords\\\" content=\\\"this is a test\\\" />\" +\n    \"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html;charset=UTF-8\\\" />\" +\n    \"</head><body>foobar</body></html>\";\n    HTMLParser parser = new HTMLParser(new StringReader(text));\n    Properties tags = parser.getMetaTags();\n    assertEquals(4, tags.size());\n    assertEquals(\"1\", tags.get(\"a\"));\n    assertEquals(\"2\", tags.get(\"b\"));\n    assertEquals(\"this is a test\", tags.get(\"keywords\"));\n    assertEquals(\"text/html;charset=utf-8\", tags.get(\"content-type\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["b89678825b68eccaf09e6ab71675fc0b0af1e099","91e8768e9769f9e5175b1d99dcd27600bc9d4374"],"91e8768e9769f9e5175b1d99dcd27600bc9d4374":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","91e8768e9769f9e5175b1d99dcd27600bc9d4374"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91e8768e9769f9e5175b1d99dcd27600bc9d4374"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["aba371508186796cc6151d8223a5b4e16d02e26e","91e8768e9769f9e5175b1d99dcd27600bc9d4374","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"91e8768e9769f9e5175b1d99dcd27600bc9d4374":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}