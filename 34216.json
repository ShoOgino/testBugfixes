{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizerFactory#init(Map[String,String]).mjava","commits":[{"id":"3241e06e642196396b80bb293acd9c0814d079e0","date":1343094999,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizerFactory#init(Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/EdgeNGramTokenizerFactory#init(Map[String,String]).mjava","sourceNew":"    @Override\n    public void init(Map<String, String> args) {\n        super.init(args);\n        String maxArg = args.get(\"maxGramSize\");\n        maxGramSize = (maxArg != null ? Integer.parseInt(maxArg) : EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);\n\n        String minArg = args.get(\"minGramSize\");\n        minGramSize = (minArg != null ? Integer.parseInt(minArg) : EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);\n\n        side = args.get(\"side\");\n        if (side == null) {\n            side = EdgeNGramTokenizer.Side.FRONT.getLabel();\n        }\n    }\n\n","sourceOld":"    @Override\n    public void init(Map<String, String> args) {\n        super.init(args);\n        String maxArg = args.get(\"maxGramSize\");\n        maxGramSize = (maxArg != null ? Integer.parseInt(maxArg) : EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);\n\n        String minArg = args.get(\"minGramSize\");\n        minGramSize = (minArg != null ? Integer.parseInt(minArg) : EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);\n\n        side = args.get(\"side\");\n        if (side == null) {\n            side = EdgeNGramTokenizer.Side.FRONT.getLabel();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"280bf88d9ed3d9923e393961b594d9553970e4fd","date":1343099563,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizerFactory#init(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizerFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    String maxArg = args.get(\"maxGramSize\");\n    maxGramSize = (maxArg != null ? Integer.parseInt(maxArg) : EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);\n    \n    String minArg = args.get(\"minGramSize\");\n    minGramSize = (minArg != null ? Integer.parseInt(minArg) : EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);\n    \n    side = args.get(\"side\");\n    if (side == null) {\n      side = EdgeNGramTokenizer.Side.FRONT.getLabel();\n    }\n  }\n\n","sourceOld":"    @Override\n    public void init(Map<String, String> args) {\n        super.init(args);\n        String maxArg = args.get(\"maxGramSize\");\n        maxGramSize = (maxArg != null ? Integer.parseInt(maxArg) : EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);\n\n        String minArg = args.get(\"minGramSize\");\n        minGramSize = (minArg != null ? Integer.parseInt(minArg) : EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);\n\n        side = args.get(\"side\");\n        if (side == null) {\n            side = EdgeNGramTokenizer.Side.FRONT.getLabel();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizerFactory#init(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    String maxArg = args.get(\"maxGramSize\");\n    maxGramSize = (maxArg != null ? Integer.parseInt(maxArg) : EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);\n    \n    String minArg = args.get(\"minGramSize\");\n    minGramSize = (minArg != null ? Integer.parseInt(minArg) : EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);\n    \n    side = args.get(\"side\");\n    if (side == null) {\n      side = EdgeNGramTokenizer.Side.FRONT.getLabel();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizerFactory#init(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    String maxArg = args.get(\"maxGramSize\");\n    maxGramSize = (maxArg != null ? Integer.parseInt(maxArg) : EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);\n    \n    String minArg = args.get(\"minGramSize\");\n    minGramSize = (minArg != null ? Integer.parseInt(minArg) : EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);\n    \n    side = args.get(\"side\");\n    if (side == null) {\n      side = EdgeNGramTokenizer.Side.FRONT.getLabel();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizerFactory#init(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    String maxArg = args.get(\"maxGramSize\");\n    maxGramSize = (maxArg != null ? Integer.parseInt(maxArg) : EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);\n    \n    String minArg = args.get(\"minGramSize\");\n    minGramSize = (minArg != null ? Integer.parseInt(minArg) : EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);\n    \n    side = args.get(\"side\");\n    if (side == null) {\n      side = EdgeNGramTokenizer.Side.FRONT.getLabel();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizerFactory#init(Map[String,String]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    String maxArg = args.get(\"maxGramSize\");\n    maxGramSize = (maxArg != null ? Integer.parseInt(maxArg) : EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);\n    \n    String minArg = args.get(\"minGramSize\");\n    minGramSize = (minArg != null ? Integer.parseInt(minArg) : EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);\n    \n    side = args.get(\"side\");\n    if (side == null) {\n      side = EdgeNGramTokenizer.Side.FRONT.getLabel();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"280bf88d9ed3d9923e393961b594d9553970e4fd":["3241e06e642196396b80bb293acd9c0814d079e0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","280bf88d9ed3d9923e393961b594d9553970e4fd"],"3241e06e642196396b80bb293acd9c0814d079e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"280bf88d9ed3d9923e393961b594d9553970e4fd":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","5a1a22b1ad88b436661458df567f3fdb446392a4","3241e06e642196396b80bb293acd9c0814d079e0"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"3241e06e642196396b80bb293acd9c0814d079e0":["280bf88d9ed3d9923e393961b594d9553970e4fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}