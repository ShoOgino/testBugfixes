{"path":"solr/contrib/prometheus-exporter/src/test/org/apache/solr/prometheus/exporter/SolrExporterIntegrationTest#jvmMetrics().mjava","commits":[{"id":"4cd8a9425419baa85ef4a56ed411ffb4c57964d3","date":1551677567,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/contrib/prometheus-exporter/src/test/org/apache/solr/prometheus/exporter/SolrExporterIntegrationTest#jvmMetrics().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void jvmMetrics() throws Exception {\n    Map<String, Double> jvmMetrics = metricsWithName(getAllMetrics(), \"solr_metrics_jvm_threads{item=\\\"terminated\\\"\");\n    assertEquals(NUM_NODES, jvmMetrics.size());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cf7019676ae5515f83d525c4babc7ebaf34b1f5","date":1552542049,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/contrib/prometheus-exporter/src/test/org/apache/solr/prometheus/exporter/SolrExporterIntegrationTest#jvmMetrics().mjava","pathOld":"solr/contrib/prometheus-exporter/src/test/org/apache/solr/prometheus/exporter/SolrExporterIntegrationTest#jvmMetrics().mjava","sourceNew":"  @Test\n  public void jvmMetrics() throws Exception {\n    Map<String, Double> jvmMetrics = metricsWithName(\n        getAllMetrics(), \"solr_metrics_jvm_threads\");\n\n    // Include all thread states + plus overall count + number of daemon threads + number of deadlocked threads\n    assertEquals(NUM_NODES * (Thread.State.values().length + 3),\n        jvmMetrics.size());\n  }\n\n","sourceOld":"  @Test\n  public void jvmMetrics() throws Exception {\n    Map<String, Double> jvmMetrics = metricsWithName(getAllMetrics(), \"solr_metrics_jvm_threads{item=\\\"terminated\\\"\");\n    assertEquals(NUM_NODES, jvmMetrics.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc34e0d6778e669b5e9cb435695231936564c30","date":1559242766,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/contrib/prometheus-exporter/src/test/org/apache/solr/prometheus/exporter/SolrExporterIntegrationTest#jvmMetrics().mjava","pathOld":"solr/contrib/prometheus-exporter/src/test/org/apache/solr/prometheus/exporter/SolrExporterIntegrationTest#jvmMetrics().mjava","sourceNew":"  @Test\n  public void jvmMetrics() throws Exception {\n    Map<String, Double> jvmMetrics = metricsWithName(\n        getAllMetrics(), \"solr_metrics_jvm_threads\");\n\n    // exact set of metrics can vary based on JVM impl (ie: windows)\n    // but there should always be at least one per known thread state per node...\n    assertTrue(jvmMetrics.toString(),\n               (NUM_NODES * Thread.State.values().length) < jvmMetrics.size());\n  }\n\n","sourceOld":"  @Test\n  public void jvmMetrics() throws Exception {\n    Map<String, Double> jvmMetrics = metricsWithName(\n        getAllMetrics(), \"solr_metrics_jvm_threads\");\n\n    // Include all thread states + plus overall count + number of daemon threads + number of deadlocked threads\n    assertEquals(NUM_NODES * (Thread.State.values().length + 3),\n        jvmMetrics.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58af973abe9f7c0faa777c1a6285fc7f72c171c5","date":1559329541,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/prometheus-exporter/src/test/org/apache/solr/prometheus/exporter/SolrExporterIntegrationTest#jvmMetrics().mjava","pathOld":"solr/contrib/prometheus-exporter/src/test/org/apache/solr/prometheus/exporter/SolrExporterIntegrationTest#jvmMetrics().mjava","sourceNew":"  @Test\n  public void jvmMetrics() throws Exception {\n    Map<String, Double> jvmMetrics = metricsWithName(\n        getAllMetrics(), \"solr_metrics_jvm_threads\");\n\n    // exact set of metrics can vary based on JVM impl (ie: windows)\n    // but there should always be at least one per known thread state per node...\n    assertTrue(jvmMetrics.toString(),\n               (NUM_NODES * Thread.State.values().length) < jvmMetrics.size());\n  }\n\n","sourceOld":"  @Test\n  public void jvmMetrics() throws Exception {\n    Map<String, Double> jvmMetrics = metricsWithName(\n        getAllMetrics(), \"solr_metrics_jvm_threads\");\n\n    // Include all thread states + plus overall count + number of daemon threads + number of deadlocked threads\n    assertEquals(NUM_NODES * (Thread.State.values().length + 3),\n        jvmMetrics.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5cf7019676ae5515f83d525c4babc7ebaf34b1f5":["4cd8a9425419baa85ef4a56ed411ffb4c57964d3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":["5cf7019676ae5515f83d525c4babc7ebaf34b1f5","afc34e0d6778e669b5e9cb435695231936564c30"],"afc34e0d6778e669b5e9cb435695231936564c30":["5cf7019676ae5515f83d525c4babc7ebaf34b1f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc34e0d6778e669b5e9cb435695231936564c30"],"4cd8a9425419baa85ef4a56ed411ffb4c57964d3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5cf7019676ae5515f83d525c4babc7ebaf34b1f5":["58af973abe9f7c0faa777c1a6285fc7f72c171c5","afc34e0d6778e669b5e9cb435695231936564c30"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cd8a9425419baa85ef4a56ed411ffb4c57964d3"],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":[],"afc34e0d6778e669b5e9cb435695231936564c30":["58af973abe9f7c0faa777c1a6285fc7f72c171c5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cd8a9425419baa85ef4a56ed411ffb4c57964d3":["5cf7019676ae5515f83d525c4babc7ebaf34b1f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["58af973abe9f7c0faa777c1a6285fc7f72c171c5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}