{"path":"src/java/org/apache/lucene/search/TimeLimitedCollector#collect(int,float).mjava","commits":[{"id":"ea73f58403a6c26bcb09b4933832348d80deb45b","date":1202849732,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TimeLimitedCollector#collect(int,float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Calls collect() on the decorated HitCollector.\n   * \n   * @throws TimeExceededException if the time allowed has been exceeded.\n   */\n  public void collect( final int doc, final float score ) {\n    long time = TIMER_THREAD.getMilliseconds();\n    if( timeout < time) {\n      //System.out.println(this+\"  failing on:  \"+doc+\"  \"+(time-t0));\n      throw new TimeExceededException( timeout-t0, time-t0, doc );\n    }\n    //System.out.println(this+\"  collecting: \"+doc+\"  \"+(time-t0));\n    hc.collect( doc, score );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7f18e513f9984ff8d5c94dbdf877c5e21922c92","date":1205874488,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TimeLimitedCollector#collect(int,float).mjava","pathOld":"src/java/org/apache/lucene/search/TimeLimitedCollector#collect(int,float).mjava","sourceNew":"  /**\n   * Calls collect() on the decorated HitCollector.\n   * \n   * @throws TimeExceededException if the time allowed has been exceeded.\n   */\n  public void collect( final int doc, final float score ) {\n    long time = TIMER_THREAD.getMilliseconds();\n    if( timeout < time) {\n      if (greedy) {\n        //System.out.println(this+\"  greedy: before failing, collecting doc: \"+doc+\"  \"+(time-t0));\n        hc.collect( doc, score );\n      }\n      //System.out.println(this+\"  failing on:  \"+doc+\"  \"+(time-t0));\n      throw new TimeExceededException( timeout-t0, time-t0, doc );\n    }\n    //System.out.println(this+\"  collecting: \"+doc+\"  \"+(time-t0));\n    hc.collect( doc, score );\n  }\n\n","sourceOld":"  /**\n   * Calls collect() on the decorated HitCollector.\n   * \n   * @throws TimeExceededException if the time allowed has been exceeded.\n   */\n  public void collect( final int doc, final float score ) {\n    long time = TIMER_THREAD.getMilliseconds();\n    if( timeout < time) {\n      //System.out.println(this+\"  failing on:  \"+doc+\"  \"+(time-t0));\n      throw new TimeExceededException( timeout-t0, time-t0, doc );\n    }\n    //System.out.println(this+\"  collecting: \"+doc+\"  \"+(time-t0));\n    hc.collect( doc, score );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61cbcf396559d597a914594d7e2830c142ecfd91","date":1255444081,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/TimeLimitedCollector#collect(int,float).mjava","sourceNew":null,"sourceOld":"  /**\n   * Calls collect() on the decorated HitCollector.\n   * \n   * @throws TimeExceededException if the time allowed has been exceeded.\n   */\n  public void collect( final int doc, final float score ) {\n    long time = TIMER_THREAD.getMilliseconds();\n    if( timeout < time) {\n      if (greedy) {\n        //System.out.println(this+\"  greedy: before failing, collecting doc: \"+doc+\"  \"+(time-t0));\n        hc.collect( doc, score );\n      }\n      //System.out.println(this+\"  failing on:  \"+doc+\"  \"+(time-t0));\n      throw new TimeExceededException( timeout-t0, time-t0, doc );\n    }\n    //System.out.println(this+\"  collecting: \"+doc+\"  \"+(time-t0));\n    hc.collect( doc, score );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7f18e513f9984ff8d5c94dbdf877c5e21922c92":["ea73f58403a6c26bcb09b4933832348d80deb45b"],"ea73f58403a6c26bcb09b4933832348d80deb45b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"61cbcf396559d597a914594d7e2830c142ecfd91":["e7f18e513f9984ff8d5c94dbdf877c5e21922c92"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["61cbcf396559d597a914594d7e2830c142ecfd91"]},"commit2Childs":{"e7f18e513f9984ff8d5c94dbdf877c5e21922c92":["61cbcf396559d597a914594d7e2830c142ecfd91"],"ea73f58403a6c26bcb09b4933832348d80deb45b":["e7f18e513f9984ff8d5c94dbdf877c5e21922c92"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ea73f58403a6c26bcb09b4933832348d80deb45b"],"61cbcf396559d597a914594d7e2830c142ecfd91":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}