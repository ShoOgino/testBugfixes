{"path":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestDisjunctionRewrites#testNotContainedBy().mjava","commits":[{"id":"4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde","date":1553685823,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestDisjunctionRewrites#testNotContainedBy().mjava","pathOld":"/dev/null","sourceNew":"  public void testNotContainedBy() {\n    // the 'big' interval should not be minimized, the 'small' one should be\n    // NOT_CONTAINED_BY(or(BLOCK(\"a\", \"b\"), \"a\"), or(BLOCK(\"c\", \"d\"), \"d\"))\n    // => or(NOT_CONTAINED_BY(or(BLOCK(\"a\", \"b\"), \"a\"), BLOCK(\"c\", \"d\"))), NOT_CONTAINED_BY(or(BLOCK(\"a\", \"b\"), \"a\"), \"d\"))\n    IntervalsSource actual = notContainedBy(or(phrase(\"a\", \"b\"), term(\"a\")), or(phrase(\"c\", \"d\"), term(\"d\")));\n    IntervalsSource expected = or(\n        notContainedBy(or(phrase(\"a\", \"b\"), term(\"a\")), phrase(\"c\", \"d\")),\n        notContainedBy(or(phrase(\"a\", \"b\"), term(\"a\")), term(\"d\"))\n    );\n    assertEquals(expected, actual);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97ee2282ff806e9bc9d705f389cf40451ab81c3e","date":1561721333,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/intervals/TestDisjunctionRewrites#testNotContainedBy().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestDisjunctionRewrites#testNotContainedBy().mjava","sourceNew":"  public void testNotContainedBy() {\n    // the 'big' interval should not be minimized, the 'small' one should be\n    // NOT_CONTAINED_BY(or(BLOCK(\"a\", \"b\"), \"a\"), or(BLOCK(\"c\", \"d\"), \"d\"))\n    // => or(NOT_CONTAINED_BY(or(BLOCK(\"a\", \"b\"), \"a\"), BLOCK(\"c\", \"d\"))), NOT_CONTAINED_BY(or(BLOCK(\"a\", \"b\"), \"a\"), \"d\"))\n    IntervalsSource actual = notContainedBy(or(phrase(\"a\", \"b\"), term(\"a\")), or(phrase(\"c\", \"d\"), term(\"d\")));\n    IntervalsSource expected = or(\n        notContainedBy(or(phrase(\"a\", \"b\"), term(\"a\")), phrase(\"c\", \"d\")),\n        notContainedBy(or(phrase(\"a\", \"b\"), term(\"a\")), term(\"d\"))\n    );\n    assertEquals(expected, actual);\n  }\n\n","sourceOld":"  public void testNotContainedBy() {\n    // the 'big' interval should not be minimized, the 'small' one should be\n    // NOT_CONTAINED_BY(or(BLOCK(\"a\", \"b\"), \"a\"), or(BLOCK(\"c\", \"d\"), \"d\"))\n    // => or(NOT_CONTAINED_BY(or(BLOCK(\"a\", \"b\"), \"a\"), BLOCK(\"c\", \"d\"))), NOT_CONTAINED_BY(or(BLOCK(\"a\", \"b\"), \"a\"), \"d\"))\n    IntervalsSource actual = notContainedBy(or(phrase(\"a\", \"b\"), term(\"a\")), or(phrase(\"c\", \"d\"), term(\"d\")));\n    IntervalsSource expected = or(\n        notContainedBy(or(phrase(\"a\", \"b\"), term(\"a\")), phrase(\"c\", \"d\")),\n        notContainedBy(or(phrase(\"a\", \"b\"), term(\"a\")), term(\"d\"))\n    );\n    assertEquals(expected, actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde"],"4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"]},"commit2Childs":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}