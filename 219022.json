{"path":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter.ByteSequencesReader#read(BytesRefBuilder).mjava","commits":[{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter.ByteSequencesReader#read(BytesRefBuilder).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter.ByteSequencesReader#read(BytesRef).mjava","sourceNew":"    /**\n     * Reads the next entry into the provided {@link BytesRef}. The internal\n     * storage is resized if needed.\n     * \n     * @return Returns <code>false</code> if EOF occurred when trying to read\n     * the header of the next sequence. Returns <code>true</code> otherwise.\n     * @throws EOFException if the file ends before the full sequence is read.\n     */\n    public boolean read(BytesRefBuilder ref) throws IOException {\n      short length;\n      try {\n        length = is.readShort();\n      } catch (EOFException e) {\n        return false;\n      }\n\n      ref.grow(length);\n      ref.setLength(length);\n      is.readFully(ref.bytes(), 0, length);\n      return true;\n    }\n\n","sourceOld":"    /**\n     * Reads the next entry into the provided {@link BytesRef}. The internal\n     * storage is resized if needed.\n     * \n     * @return Returns <code>false</code> if EOF occurred when trying to read\n     * the header of the next sequence. Returns <code>true</code> otherwise.\n     * @throws EOFException if the file ends before the full sequence is read.\n     */\n    public boolean read(BytesRef ref) throws IOException {\n      short length;\n      try {\n        length = is.readShort();\n      } catch (EOFException e) {\n        return false;\n      }\n\n      ref.grow(length);\n      ref.offset = 0;\n      ref.length = length;\n      is.readFully(ref.bytes, 0, length);\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter.ByteSequencesReader#read(BytesRefBuilder).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter.ByteSequencesReader#read(BytesRefBuilder).mjava","sourceNew":"    /**\n     * Reads the next entry into the provided {@link BytesRef}. The internal\n     * storage is resized if needed.\n     * \n     * @return Returns <code>false</code> if EOF occurred when trying to read\n     * the header of the next sequence. Returns <code>true</code> otherwise.\n     * @throws EOFException if the file ends before the full sequence is read.\n     */\n    public boolean read(BytesRefBuilder ref) throws IOException {\n      short length;\n      try {\n        length = in.readShort();\n      } catch (EOFException e) {\n        return false;\n      }\n\n      ref.grow(length);\n      ref.setLength(length);\n      in.readBytes(ref.bytes(), 0, length);\n      return true;\n    }\n\n","sourceOld":"    /**\n     * Reads the next entry into the provided {@link BytesRef}. The internal\n     * storage is resized if needed.\n     * \n     * @return Returns <code>false</code> if EOF occurred when trying to read\n     * the header of the next sequence. Returns <code>true</code> otherwise.\n     * @throws EOFException if the file ends before the full sequence is read.\n     */\n    public boolean read(BytesRefBuilder ref) throws IOException {\n      short length;\n      try {\n        length = is.readShort();\n      } catch (EOFException e) {\n        return false;\n      }\n\n      ref.grow(length);\n      ref.setLength(length);\n      is.readFully(ref.bytes(), 0, length);\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"950b7a6881d14da782b60444c11295e3ec50d41a","date":1458379095,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter.ByteSequencesReader#read(BytesRefBuilder).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter.ByteSequencesReader#read(BytesRefBuilder).mjava","sourceNew":"    /**\n     * Reads the next entry into the provided {@link BytesRef}. The internal\n     * storage is resized if needed.\n     * \n     * @return Returns <code>false</code> if EOF occurred when trying to read\n     * the header of the next sequence. Returns <code>true</code> otherwise.\n     * @throws EOFException if the file ends before the full sequence is read.\n     */\n    public boolean read(BytesRefBuilder ref) throws IOException {\n      if (in.getFilePointer() >= end) {\n        return false;\n      }\n\n      short length = in.readShort();\n      ref.grow(length);\n      ref.setLength(length);\n      in.readBytes(ref.bytes(), 0, length);\n      return true;\n    }\n\n","sourceOld":"    /**\n     * Reads the next entry into the provided {@link BytesRef}. The internal\n     * storage is resized if needed.\n     * \n     * @return Returns <code>false</code> if EOF occurred when trying to read\n     * the header of the next sequence. Returns <code>true</code> otherwise.\n     * @throws EOFException if the file ends before the full sequence is read.\n     */\n    public boolean read(BytesRefBuilder ref) throws IOException {\n      short length;\n      try {\n        length = in.readShort();\n      } catch (EOFException e) {\n        return false;\n      }\n\n      ref.grow(length);\n      ref.setLength(length);\n      in.readBytes(ref.bytes(), 0, length);\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7849935cc625c020857f3b29be91b5d4323d19aa","date":1458978426,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter.ByteSequencesReader#next().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter.ByteSequencesReader#read(BytesRefBuilder).mjava","sourceNew":"    /**\n     * Reads the next entry into the provided {@link BytesRef}. The internal\n     * storage is resized if needed.\n     * \n     * @return Returns <code>false</code> if EOF occurred when trying to read\n     * the header of the next sequence. Returns <code>true</code> otherwise.\n     * @throws EOFException if the file ends before the full sequence is read.\n     */\n    public BytesRef next() throws IOException {\n      if (in.getFilePointer() >= end) {\n        return null;\n      }\n\n      short length = in.readShort();\n      ref.grow(length);\n      ref.setLength(length);\n      in.readBytes(ref.bytes(), 0, length);\n      return ref.get();\n    }\n\n","sourceOld":"    /**\n     * Reads the next entry into the provided {@link BytesRef}. The internal\n     * storage is resized if needed.\n     * \n     * @return Returns <code>false</code> if EOF occurred when trying to read\n     * the header of the next sequence. Returns <code>true</code> otherwise.\n     * @throws EOFException if the file ends before the full sequence is read.\n     */\n    public boolean read(BytesRefBuilder ref) throws IOException {\n      if (in.getFilePointer() >= end) {\n        return false;\n      }\n\n      short length = in.readShort();\n      ref.grow(length);\n      ref.setLength(length);\n      in.readBytes(ref.bytes(), 0, length);\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7849935cc625c020857f3b29be91b5d4323d19aa":["950b7a6881d14da782b60444c11295e3ec50d41a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"950b7a6881d14da782b60444c11295e3ec50d41a":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7849935cc625c020857f3b29be91b5d4323d19aa"]},"commit2Childs":{"7849935cc625c020857f3b29be91b5d4323d19aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"950b7a6881d14da782b60444c11295e3ec50d41a":["7849935cc625c020857f3b29be91b5d4323d19aa"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["950b7a6881d14da782b60444c11295e3ec50d41a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}