{"path":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingDocsEnum#AssertingDocsEnum(DocsEnum,boolean).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":1,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingDocsEnum#AssertingDocsEnum(DocsEnum,boolean).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingAtomicReader.AssertingDocsEnum#AssertingDocsEnum(DocsEnum,boolean).mjava","sourceNew":"    public AssertingDocsEnum(DocsEnum in, boolean failOnUnsupportedDocID) {\n      super(in);\n      try {\n        int docid = in.docID();\n        assert docid == -1 : in.getClass() + \": invalid initial doc id: \" + docid;\n      } catch (UnsupportedOperationException e) {\n        if (failOnUnsupportedDocID) {\n          throw e;\n        }\n      }\n      doc = -1;\n    }\n\n","sourceOld":"    public AssertingDocsEnum(DocsEnum in, boolean failOnUnsupportedDocID) {\n      super(in);\n      try {\n        int docid = in.docID();\n        assert docid == -1 : in.getClass() + \": invalid initial doc id: \" + docid;\n      } catch (UnsupportedOperationException e) {\n        if (failOnUnsupportedDocID) {\n          throw e;\n        }\n      }\n      doc = -1;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e166cc9c5f45f78a8dd02332b5ac100221063fd8","date":1421678965,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/AssertingLeafReader.AssertingDocsEnum#AssertingDocsEnum(DocsEnum,boolean).mjava","sourceNew":null,"sourceOld":"    public AssertingDocsEnum(DocsEnum in, boolean failOnUnsupportedDocID) {\n      super(in);\n      try {\n        int docid = in.docID();\n        assert docid == -1 : in.getClass() + \": invalid initial doc id: \" + docid;\n      } catch (UnsupportedOperationException e) {\n        if (failOnUnsupportedDocID) {\n          throw e;\n        }\n      }\n      doc = -1;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e166cc9c5f45f78a8dd02332b5ac100221063fd8":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e166cc9c5f45f78a8dd02332b5ac100221063fd8"]},"commit2Childs":{"e166cc9c5f45f78a8dd02332b5ac100221063fd8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["e166cc9c5f45f78a8dd02332b5ac100221063fd8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}