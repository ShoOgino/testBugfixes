{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testLUCENE8133().mjava","commits":[{"id":"be0fb33852f53287662b33038708092b17f3b67b","date":1516710889,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testLUCENE8133().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLUCENE8133() {\n    GeoPoint point1 = new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-23.434456), Geo3DUtil.fromDegrees(14.459204));\n    GeoPoint point2 = new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-23.43394), Geo3DUtil.fromDegrees(14.459206));\n    GeoPoint check =  new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-23.434067), Geo3DUtil.fromDegrees(14.458927));\n    SidedPlane plane = new SidedPlane(check, point1, point2);\n    assertTrue(plane.isWithin(check));\n    assertTrue(plane.isWithin(point1));\n    assertTrue(plane.isWithin(point2));\n    //POLYGON((14.459204 -23.434456, 14.459206 -23.43394,14.458647 -23.434196, 14.458646 -23.434452,14.459204 -23.434456))\n    List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-23.434456), Geo3DUtil.fromDegrees(14.459204)));\n    points.add(new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees( -23.43394), Geo3DUtil.fromDegrees(14.459206)));\n    points.add(new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-23.434196), Geo3DUtil.fromDegrees(14.458647)));\n    points.add(new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-23.434452), Geo3DUtil.fromDegrees(14.458646)));\n    GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["9ebbc012fa3cc9cea1b6563bc2d2c57552fb92ff"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9ebbc012fa3cc9cea1b6563bc2d2c57552fb92ff","date":1516881825,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testLUCENE8133().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testLUCENE8133().mjava","sourceNew":"  @Test\n  public void testLUCENE8133() {\n    GeoPoint point1 = new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-23.434456), Geo3DUtil.fromDegrees(14.459204));\n    GeoPoint point2 = new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-23.43394), Geo3DUtil.fromDegrees(14.459206));\n    GeoPoint check =  new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-23.434067), Geo3DUtil.fromDegrees(14.458927));\n    if (!point1.isIdentical(point2) && !check.isIdentical(point1) && !check.isIdentical(point2)) {\n      SidedPlane plane = new SidedPlane(check, point1, point2);\n      assertTrue(plane.isWithin(check));\n      assertTrue(plane.isWithin(point1));\n      assertTrue(plane.isWithin(point2));\n      //POLYGON((14.459204 -23.434456, 14.459206 -23.43394,14.458647 -23.434196, 14.458646 -23.434452,14.459204 -23.434456))\n      List<GeoPoint> points = new ArrayList<>();\n      points.add(new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-23.434456), Geo3DUtil.fromDegrees(14.459204)));\n      points.add(new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees( -23.43394), Geo3DUtil.fromDegrees(14.459206)));\n      points.add(new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-23.434196), Geo3DUtil.fromDegrees(14.458647)));\n      points.add(new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-23.434452), Geo3DUtil.fromDegrees(14.458646)));\n      GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testLUCENE8133() {\n    GeoPoint point1 = new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-23.434456), Geo3DUtil.fromDegrees(14.459204));\n    GeoPoint point2 = new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-23.43394), Geo3DUtil.fromDegrees(14.459206));\n    GeoPoint check =  new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-23.434067), Geo3DUtil.fromDegrees(14.458927));\n    SidedPlane plane = new SidedPlane(check, point1, point2);\n    assertTrue(plane.isWithin(check));\n    assertTrue(plane.isWithin(point1));\n    assertTrue(plane.isWithin(point2));\n    //POLYGON((14.459204 -23.434456, 14.459206 -23.43394,14.458647 -23.434196, 14.458646 -23.434452,14.459204 -23.434456))\n    List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-23.434456), Geo3DUtil.fromDegrees(14.459204)));\n    points.add(new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees( -23.43394), Geo3DUtil.fromDegrees(14.459206)));\n    points.add(new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-23.434196), Geo3DUtil.fromDegrees(14.458647)));\n    points.add(new GeoPoint(PlanetModel.SPHERE, Geo3DUtil.fromDegrees(-23.434452), Geo3DUtil.fromDegrees(14.458646)));\n    GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n  }\n\n","bugFix":["be0fb33852f53287662b33038708092b17f3b67b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ebbc012fa3cc9cea1b6563bc2d2c57552fb92ff":["be0fb33852f53287662b33038708092b17f3b67b"],"be0fb33852f53287662b33038708092b17f3b67b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ebbc012fa3cc9cea1b6563bc2d2c57552fb92ff"]},"commit2Childs":{"9ebbc012fa3cc9cea1b6563bc2d2c57552fb92ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"be0fb33852f53287662b33038708092b17f3b67b":["9ebbc012fa3cc9cea1b6563bc2d2c57552fb92ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be0fb33852f53287662b33038708092b17f3b67b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}