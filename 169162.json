{"path":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_3().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_3().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_3().mjava","sourceNew":"        private boolean r_Step_3() {\n            int among_var;\n            // (, line 126\n            // [, line 127\n            ket = cursor;\n            // substring, line 127\n            among_var = find_among_b(a_6, 9);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 127\n            bra = cursor;\n            // call R1, line 127\n            if (!r_R1())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 128\n                    // <-, line 128\n                    slice_from(\"tion\");\n                    break;\n                case 2:\n                    // (, line 129\n                    // <-, line 129\n                    slice_from(\"ate\");\n                    break;\n                case 3:\n                    // (, line 130\n                    // <-, line 130\n                    slice_from(\"al\");\n                    break;\n                case 4:\n                    // (, line 132\n                    // <-, line 132\n                    slice_from(\"ic\");\n                    break;\n                case 5:\n                    // (, line 134\n                    // delete, line 134\n                    slice_del();\n                    break;\n                case 6:\n                    // (, line 136\n                    // call R2, line 136\n                    if (!r_R2())\n                    {\n                        return false;\n                    }\n                    // delete, line 136\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_Step_3() {\n            int among_var;\n            // (, line 126\n            // [, line 127\n            ket = cursor;\n            // substring, line 127\n            among_var = find_among_b(a_6, 9);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 127\n            bra = cursor;\n            // call R1, line 127\n            if (!r_R1())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 128\n                    // <-, line 128\n                    slice_from(\"tion\");\n                    break;\n                case 2:\n                    // (, line 129\n                    // <-, line 129\n                    slice_from(\"ate\");\n                    break;\n                case 3:\n                    // (, line 130\n                    // <-, line 130\n                    slice_from(\"al\");\n                    break;\n                case 4:\n                    // (, line 132\n                    // <-, line 132\n                    slice_from(\"ic\");\n                    break;\n                case 5:\n                    // (, line 134\n                    // delete, line 134\n                    slice_del();\n                    break;\n                case 6:\n                    // (, line 136\n                    // call R2, line 136\n                    if (!r_R2())\n                    {\n                        return false;\n                    }\n                    // delete, line 136\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_3().mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_Step_3().mjava","sourceNew":"        private boolean r_Step_3() {\n            int among_var;\n            // (, line 126\n            // [, line 127\n            ket = cursor;\n            // substring, line 127\n            among_var = find_among_b(a_6, 9);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 127\n            bra = cursor;\n            // call R1, line 127\n            if (!r_R1())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 128\n                    // <-, line 128\n                    slice_from(\"tion\");\n                    break;\n                case 2:\n                    // (, line 129\n                    // <-, line 129\n                    slice_from(\"ate\");\n                    break;\n                case 3:\n                    // (, line 130\n                    // <-, line 130\n                    slice_from(\"al\");\n                    break;\n                case 4:\n                    // (, line 132\n                    // <-, line 132\n                    slice_from(\"ic\");\n                    break;\n                case 5:\n                    // (, line 134\n                    // delete, line 134\n                    slice_del();\n                    break;\n                case 6:\n                    // (, line 136\n                    // call R2, line 136\n                    if (!r_R2())\n                    {\n                        return false;\n                    }\n                    // delete, line 136\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_Step_3() {\n            int among_var;\n            // (, line 126\n            // [, line 127\n            ket = cursor;\n            // substring, line 127\n            among_var = find_among_b(a_6, 9);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // ], line 127\n            bra = cursor;\n            // call R1, line 127\n            if (!r_R1())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 128\n                    // <-, line 128\n                    slice_from(\"tion\");\n                    break;\n                case 2:\n                    // (, line 129\n                    // <-, line 129\n                    slice_from(\"ate\");\n                    break;\n                case 3:\n                    // (, line 130\n                    // <-, line 130\n                    slice_from(\"al\");\n                    break;\n                case 4:\n                    // (, line 132\n                    // <-, line 132\n                    slice_from(\"ic\");\n                    break;\n                case 5:\n                    // (, line 134\n                    // delete, line 134\n                    slice_del();\n                    break;\n                case 6:\n                    // (, line 136\n                    // call R2, line 136\n                    if (!r_R2())\n                    {\n                        return false;\n                    }\n                    // delete, line 136\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}