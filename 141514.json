{"path":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPConnection#setCurrentProxy(String,int).mjava","commits":[{"id":"bc6055f4a2e8e9f9caaec2297010c9502480ed69","date":1050060580,"type":0,"author":"cmarschner","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPConnection#setCurrentProxy(String,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Sets the proxy used by this instance. This can be used to override the\n     * proxy setting inherited from the default proxy setting. A null or empty\n     * string <var>host</var> parameter disables the proxy. <P>\n     *\n     * Note that if you set a proxy for the connection using this method, and a\n     * request made over this connection is redirected to a different server,\n     * then the connection used for new server will <em>not</em> pick this proxy\n     * setting, but instead will use the default proxy settings.\n     *\n     * @param host  the host the proxy runs on\n     * @param port  the port the proxy is listening on\n     * @see         #setProxyServer(java.lang.String, int)\n     */\n    public synchronized void setCurrentProxy(String host, int port)\n    {\n        if (host == null || host.trim().length() == 0)\n        {\n            Proxy_Host = null;\n        }\n        else\n        {\n            Proxy_Host = host.trim().toLowerCase();\n            if (port <= 0)\n            {\n                Proxy_Port = 80;\n            }\n            else\n            {\n                Proxy_Port = port;\n            }\n        }\n\n        // the proxy might be talking a different version, so renegotiate\n        switch (Protocol)\n        {\n            case HTTP:\n            case HTTPS:\n                if (force_1_0)\n                {\n                    ServerProtocolVersion = HTTP_1_0;\n                    ServProtVersKnown = true;\n                    RequestProtocolVersion = \"HTTP/1.0\";\n                }\n                else\n                {\n                    ServerProtocolVersion = HTTP_1_1;\n                    ServProtVersKnown = false;\n                    RequestProtocolVersion = \"HTTP/1.1\";\n                }\n                break;\n            case HTTP_NG:\n                ServerProtocolVersion = -1;\n                /*\n                 *  Unknown\n                 */\n                ServProtVersKnown = false;\n                RequestProtocolVersion = \"\";\n                break;\n            case SHTTP:\n                ServerProtocolVersion = -1;\n                /*\n                 *  Unknown\n                 */\n                ServProtVersKnown = false;\n                RequestProtocolVersion = \"Secure-HTTP/1.3\";\n                break;\n            default:\n                throw new Error(\"HTTPClient Internal Error: invalid protocol \" +\n                        Protocol);\n        }\n\n        keepAliveUnknown = true;\n        doesKeepAlive = false;\n\n        input_demux = null;\n        early_stall = null;\n        late_stall = null;\n        prev_resp = null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPConnection#setCurrentProxy(String,int).mjava","sourceNew":null,"sourceOld":"    /**\n     * Sets the proxy used by this instance. This can be used to override the\n     * proxy setting inherited from the default proxy setting. A null or empty\n     * string <var>host</var> parameter disables the proxy. <P>\n     *\n     * Note that if you set a proxy for the connection using this method, and a\n     * request made over this connection is redirected to a different server,\n     * then the connection used for new server will <em>not</em> pick this proxy\n     * setting, but instead will use the default proxy settings.\n     *\n     * @param host  the host the proxy runs on\n     * @param port  the port the proxy is listening on\n     * @see         #setProxyServer(java.lang.String, int)\n     */\n    public synchronized void setCurrentProxy(String host, int port)\n    {\n        if (host == null || host.trim().length() == 0)\n        {\n            Proxy_Host = null;\n        }\n        else\n        {\n            Proxy_Host = host.trim().toLowerCase();\n            if (port <= 0)\n            {\n                Proxy_Port = 80;\n            }\n            else\n            {\n                Proxy_Port = port;\n            }\n        }\n\n        // the proxy might be talking a different version, so renegotiate\n        switch (Protocol)\n        {\n            case HTTP:\n            case HTTPS:\n                if (force_1_0)\n                {\n                    ServerProtocolVersion = HTTP_1_0;\n                    ServProtVersKnown = true;\n                    RequestProtocolVersion = \"HTTP/1.0\";\n                }\n                else\n                {\n                    ServerProtocolVersion = HTTP_1_1;\n                    ServProtVersKnown = false;\n                    RequestProtocolVersion = \"HTTP/1.1\";\n                }\n                break;\n            case HTTP_NG:\n                ServerProtocolVersion = -1;\n                /*\n                 *  Unknown\n                 */\n                ServProtVersKnown = false;\n                RequestProtocolVersion = \"\";\n                break;\n            case SHTTP:\n                ServerProtocolVersion = -1;\n                /*\n                 *  Unknown\n                 */\n                ServProtVersKnown = false;\n                RequestProtocolVersion = \"Secure-HTTP/1.3\";\n                break;\n            default:\n                throw new Error(\"HTTPClient Internal Error: invalid protocol \" +\n                        Protocol);\n        }\n\n        keepAliveUnknown = true;\n        doesKeepAlive = false;\n\n        input_demux = null;\n        early_stall = null;\n        late_stall = null;\n        prev_resp = null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bc6055f4a2e8e9f9caaec2297010c9502480ed69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["bc6055f4a2e8e9f9caaec2297010c9502480ed69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"bc6055f4a2e8e9f9caaec2297010c9502480ed69":["afc16d717d9ed1a8e45371668ca6de674164d624"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bc6055f4a2e8e9f9caaec2297010c9502480ed69"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}