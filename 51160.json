{"path":"src/java/org/apache/lucene/index/IndexReader#listCommits(Directory).mjava","commits":[{"id":"ac785906c92e4048ffc28f7c23a45541d3cca9bf","date":1214322066,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#listCommits(Directory).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns all commit points that exist in the Directory.\n   *  Normally, because the default is {@link\n   *  KeepOnlyLastCommitDeletionPolicy}, there would be only\n   *  one commit point.  But if you're using a custom {@link\n   *  DeletionPolicy} then there could be many commits.\n   *  Once you have a given commit, you can open a reader on\n   *  it by calling {@link IndexReader#open(Directory,\n   *  IndexCommit)}.  There must be at least one commit in\n   *  the Directory, else this method throws {@link\n   *  java.io.IOException}.  Note that if a commit is in\n   *  progress while this method is running, that commit\n   *  may or may not be returned array.  */\n  public static Collection listCommits(Directory dir) throws IOException {\n    return DirectoryIndexReader.listCommits(dir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["69a923a22517eb7ff0bad9c6d1a7d45cc0696bd4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3b73a755aab66be3bcd76c682e558725f44ec162","date":1215686165,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#listCommits(Directory).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#listCommits(Directory).mjava","sourceNew":"  /** Returns all commit points that exist in the Directory.\n   *  Normally, because the default is {@link\n   *  KeepOnlyLastCommitDeletionPolicy}, there would be only\n   *  one commit point.  But if you're using a custom {@link\n   *  IndexDeletionPolicy} then there could be many commits.\n   *  Once you have a given commit, you can open a reader on\n   *  it by calling {@link IndexReader#open(Directory,\n   *  boolean, IndexDeletionPolicy,\n   *  IndexCommit)}.  There must be at least one commit in\n   *  the Directory, else this method throws {@link\n   *  java.io.IOException}.  Note that if a commit is in\n   *  progress while this method is running, that commit\n   *  may or may not be returned array.  */\n  public static Collection listCommits(Directory dir) throws IOException {\n    return DirectoryIndexReader.listCommits(dir);\n  }\n\n","sourceOld":"  /** Returns all commit points that exist in the Directory.\n   *  Normally, because the default is {@link\n   *  KeepOnlyLastCommitDeletionPolicy}, there would be only\n   *  one commit point.  But if you're using a custom {@link\n   *  DeletionPolicy} then there could be many commits.\n   *  Once you have a given commit, you can open a reader on\n   *  it by calling {@link IndexReader#open(Directory,\n   *  IndexCommit)}.  There must be at least one commit in\n   *  the Directory, else this method throws {@link\n   *  java.io.IOException}.  Note that if a commit is in\n   *  progress while this method is running, that commit\n   *  may or may not be returned array.  */\n  public static Collection listCommits(Directory dir) throws IOException {\n    return DirectoryIndexReader.listCommits(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5538df52018f56187d65fc6dbc5e2802dd6cbdae","date":1219150082,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#listCommits(Directory).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#listCommits(Directory).mjava","sourceNew":"  /** Returns all commit points that exist in the Directory.\n   *  Normally, because the default is {@link\n   *  KeepOnlyLastCommitDeletionPolicy}, there would be only\n   *  one commit point.  But if you're using a custom {@link\n   *  IndexDeletionPolicy} then there could be many commits.\n   *  Once you have a given commit, you can open a reader on\n   *  it by calling {@link IndexReader#open(IndexCommit)}\n   *  There must be at least one commit in\n   *  the Directory, else this method throws {@link\n   *  java.io.IOException}.  Note that if a commit is in\n   *  progress while this method is running, that commit\n   *  may or may not be returned array.  */\n  public static Collection listCommits(Directory dir) throws IOException {\n    return DirectoryIndexReader.listCommits(dir);\n  }\n\n","sourceOld":"  /** Returns all commit points that exist in the Directory.\n   *  Normally, because the default is {@link\n   *  KeepOnlyLastCommitDeletionPolicy}, there would be only\n   *  one commit point.  But if you're using a custom {@link\n   *  IndexDeletionPolicy} then there could be many commits.\n   *  Once you have a given commit, you can open a reader on\n   *  it by calling {@link IndexReader#open(Directory,\n   *  boolean, IndexDeletionPolicy,\n   *  IndexCommit)}.  There must be at least one commit in\n   *  the Directory, else this method throws {@link\n   *  java.io.IOException}.  Note that if a commit is in\n   *  progress while this method is running, that commit\n   *  may or may not be returned array.  */\n  public static Collection listCommits(Directory dir) throws IOException {\n    return DirectoryIndexReader.listCommits(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1","date":1244392278,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#listCommits(Directory).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#listCommits(Directory).mjava","sourceNew":"  /** Returns all commit points that exist in the Directory.\n   *  Normally, because the default is {@link\n   *  KeepOnlyLastCommitDeletionPolicy}, there would be only\n   *  one commit point.  But if you're using a custom {@link\n   *  IndexDeletionPolicy} then there could be many commits.\n   *  Once you have a given commit, you can open a reader on\n   *  it by calling {@link IndexReader#open(IndexCommit)}\n   *  There must be at least one commit in\n   *  the Directory, else this method throws {@link\n   *  java.io.IOException}.  Note that if a commit is in\n   *  progress while this method is running, that commit\n   *  may or may not be returned array.  */\n  public static Collection listCommits(Directory dir) throws IOException {\n    return DirectoryReader.listCommits(dir);\n  }\n\n","sourceOld":"  /** Returns all commit points that exist in the Directory.\n   *  Normally, because the default is {@link\n   *  KeepOnlyLastCommitDeletionPolicy}, there would be only\n   *  one commit point.  But if you're using a custom {@link\n   *  IndexDeletionPolicy} then there could be many commits.\n   *  Once you have a given commit, you can open a reader on\n   *  it by calling {@link IndexReader#open(IndexCommit)}\n   *  There must be at least one commit in\n   *  the Directory, else this method throws {@link\n   *  java.io.IOException}.  Note that if a commit is in\n   *  progress while this method is running, that commit\n   *  may or may not be returned array.  */\n  public static Collection listCommits(Directory dir) throws IOException {\n    return DirectoryIndexReader.listCommits(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f011f01db72fa6f556a9a0843944ecee2de4aaa8","date":1255806907,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#listCommits(Directory).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#listCommits(Directory).mjava","sourceNew":"  /** Returns all commit points that exist in the Directory.\n   *  Normally, because the default is {@link\n   *  KeepOnlyLastCommitDeletionPolicy}, there would be only\n   *  one commit point.  But if you're using a custom {@link\n   *  IndexDeletionPolicy} then there could be many commits.\n   *  Once you have a given commit, you can open a reader on\n   *  it by calling {@link IndexReader#open(IndexCommit)}\n   *  There must be at least one commit in\n   *  the Directory, else this method throws {@link\n   *  java.io.IOException}.  Note that if a commit is in\n   *  progress while this method is running, that commit\n   *  may or may not be returned array.  */\n  public static Collection<IndexCommit> listCommits(Directory dir) throws IOException {\n    return DirectoryReader.listCommits(dir);\n  }\n\n","sourceOld":"  /** Returns all commit points that exist in the Directory.\n   *  Normally, because the default is {@link\n   *  KeepOnlyLastCommitDeletionPolicy}, there would be only\n   *  one commit point.  But if you're using a custom {@link\n   *  IndexDeletionPolicy} then there could be many commits.\n   *  Once you have a given commit, you can open a reader on\n   *  it by calling {@link IndexReader#open(IndexCommit)}\n   *  There must be at least one commit in\n   *  the Directory, else this method throws {@link\n   *  java.io.IOException}.  Note that if a commit is in\n   *  progress while this method is running, that commit\n   *  may or may not be returned array.  */\n  public static Collection listCommits(Directory dir) throws IOException {\n    return DirectoryReader.listCommits(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6ae3763b337aadea2838f75b69d6b00c4e6949c7","date":1257894961,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#listCommits(Directory).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#listCommits(Directory).mjava","sourceNew":"  /** Returns all commit points that exist in the Directory.\n   *  Normally, because the default is {@link\n   *  KeepOnlyLastCommitDeletionPolicy}, there would be only\n   *  one commit point.  But if you're using a custom {@link\n   *  IndexDeletionPolicy} then there could be many commits.\n   *  Once you have a given commit, you can open a reader on\n   *  it by calling {@link IndexReader#open(IndexCommit,boolean)}\n   *  There must be at least one commit in\n   *  the Directory, else this method throws {@link\n   *  java.io.IOException}.  Note that if a commit is in\n   *  progress while this method is running, that commit\n   *  may or may not be returned array.  */\n  public static Collection<IndexCommit> listCommits(Directory dir) throws IOException {\n    return DirectoryReader.listCommits(dir);\n  }\n\n","sourceOld":"  /** Returns all commit points that exist in the Directory.\n   *  Normally, because the default is {@link\n   *  KeepOnlyLastCommitDeletionPolicy}, there would be only\n   *  one commit point.  But if you're using a custom {@link\n   *  IndexDeletionPolicy} then there could be many commits.\n   *  Once you have a given commit, you can open a reader on\n   *  it by calling {@link IndexReader#open(IndexCommit)}\n   *  There must be at least one commit in\n   *  the Directory, else this method throws {@link\n   *  java.io.IOException}.  Note that if a commit is in\n   *  progress while this method is running, that commit\n   *  may or may not be returned array.  */\n  public static Collection<IndexCommit> listCommits(Directory dir) throws IOException {\n    return DirectoryReader.listCommits(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#listCommits(Directory).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#listCommits(Directory).mjava","sourceNew":"  /** Returns all commit points that exist in the Directory.\n   *  Normally, because the default is {@link\n   *  KeepOnlyLastCommitDeletionPolicy}, there would be only\n   *  one commit point.  But if you're using a custom {@link\n   *  IndexDeletionPolicy} then there could be many commits.\n   *  Once you have a given commit, you can open a reader on\n   *  it by calling {@link IndexReader#open(IndexCommit,boolean)}\n   *  There must be at least one commit in\n   *  the Directory, else this method throws {@link\n   *  java.io.IOException}.  Note that if a commit is in\n   *  progress while this method is running, that commit\n   *  may or may not be returned array.  */\n  public static Collection<IndexCommit> listCommits(Directory dir) throws IOException {\n    return DirectoryReader.listCommits(dir);\n  }\n\n","sourceOld":"  /** Returns all commit points that exist in the Directory.\n   *  Normally, because the default is {@link\n   *  KeepOnlyLastCommitDeletionPolicy}, there would be only\n   *  one commit point.  But if you're using a custom {@link\n   *  IndexDeletionPolicy} then there could be many commits.\n   *  Once you have a given commit, you can open a reader on\n   *  it by calling {@link IndexReader#open(IndexCommit,boolean)}\n   *  There must be at least one commit in\n   *  the Directory, else this method throws {@link\n   *  java.io.IOException}.  Note that if a commit is in\n   *  progress while this method is running, that commit\n   *  may or may not be returned array.  */\n  public static Collection<IndexCommit> listCommits(Directory dir) throws IOException {\n    return DirectoryReader.listCommits(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"6ae3763b337aadea2838f75b69d6b00c4e6949c7":["f011f01db72fa6f556a9a0843944ecee2de4aaa8"],"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["5538df52018f56187d65fc6dbc5e2802dd6cbdae"],"5538df52018f56187d65fc6dbc5e2802dd6cbdae":["3b73a755aab66be3bcd76c682e558725f44ec162"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f011f01db72fa6f556a9a0843944ecee2de4aaa8":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"3b73a755aab66be3bcd76c682e558725f44ec162":["ac785906c92e4048ffc28f7c23a45541d3cca9bf"],"ac785906c92e4048ffc28f7c23a45541d3cca9bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6ae3763b337aadea2838f75b69d6b00c4e6949c7"]},"commit2Childs":{"6ae3763b337aadea2838f75b69d6b00c4e6949c7":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["f011f01db72fa6f556a9a0843944ecee2de4aaa8"],"5538df52018f56187d65fc6dbc5e2802dd6cbdae":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ac785906c92e4048ffc28f7c23a45541d3cca9bf"],"f011f01db72fa6f556a9a0843944ecee2de4aaa8":["6ae3763b337aadea2838f75b69d6b00c4e6949c7"],"3b73a755aab66be3bcd76c682e558725f44ec162":["5538df52018f56187d65fc6dbc5e2802dd6cbdae"],"ac785906c92e4048ffc28f7c23a45541d3cca9bf":["3b73a755aab66be3bcd76c682e558725f44ec162"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}