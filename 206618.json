{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqIteratorWrapper#encode(ByteSequencesWriter,ByteArrayDataOutput,byte[],BytesRef,long).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqIteratorWrapper#encode(ByteSequencesWriter,ByteArrayDataOutput,byte[],BytesRef,long).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqIteratorWrapper#encode(ByteSequencesWriter,ByteArrayDataOutput,byte[],BytesRef,long).mjava","sourceNew":"  protected void encode(ByteSequencesWriter writer, ByteArrayDataOutput output, byte[] buffer, BytesRef spare, long weight) throws IOException {\n    if (spare.length + 8 >= buffer.length) {\n      buffer = ArrayUtil.grow(buffer, spare.length + 8);\n    }\n    output.reset(buffer);\n    output.writeBytes(spare.bytes, spare.offset, spare.length);\n    output.writeLong(weight);\n    writer.write(buffer, 0, output.getPosition());\n  }\n\n","sourceOld":"  protected void encode(ByteSequencesWriter writer, ByteArrayDataOutput output, byte[] buffer, BytesRef spare, long weight) throws IOException {\n    if (spare.length + 8 >= buffer.length) {\n      buffer = ArrayUtil.grow(buffer, spare.length + 8);\n    }\n    output.reset(buffer);\n    output.writeBytes(spare.bytes, spare.offset, spare.length);\n    output.writeLong(weight);\n    writer.write(buffer, 0, output.getPosition());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cc849e9f232bea7495964477fb7bfd25aeb7173","date":1348236542,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqIteratorWrapper#encode(ByteSequencesWriter,ByteArrayDataOutput,byte[],BytesRef,long).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqIteratorWrapper#encode(ByteSequencesWriter,ByteArrayDataOutput,byte[],BytesRef,long).mjava","sourceNew":"  /** encodes an entry (bytes+weight) to the provided writer */\n  protected void encode(ByteSequencesWriter writer, ByteArrayDataOutput output, byte[] buffer, BytesRef spare, long weight) throws IOException {\n    if (spare.length + 8 >= buffer.length) {\n      buffer = ArrayUtil.grow(buffer, spare.length + 8);\n    }\n    output.reset(buffer);\n    output.writeBytes(spare.bytes, spare.offset, spare.length);\n    output.writeLong(weight);\n    writer.write(buffer, 0, output.getPosition());\n  }\n\n","sourceOld":"  protected void encode(ByteSequencesWriter writer, ByteArrayDataOutput output, byte[] buffer, BytesRef spare, long weight) throws IOException {\n    if (spare.length + 8 >= buffer.length) {\n      buffer = ArrayUtil.grow(buffer, spare.length + 8);\n    }\n    output.reset(buffer);\n    output.writeBytes(spare.bytes, spare.offset, spare.length);\n    output.writeLong(weight);\n    writer.write(buffer, 0, output.getPosition());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ada2f7352a7f964fe49bccd13227c4ec38563d39","date":1381659982,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqPayloadIteratorWrapper#encode(ByteSequencesWriter,ByteArrayDataOutput,byte[],BytesRef,BytesRef,long).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqIteratorWrapper#encode(ByteSequencesWriter,ByteArrayDataOutput,byte[],BytesRef,long).mjava","sourceNew":"  /** encodes an entry (bytes+(payload)+weight) to the provided writer */\n  protected void encode(ByteSequencesWriter writer, ByteArrayDataOutput output, byte[] buffer, BytesRef spare, BytesRef payload, long weight) throws IOException {\n    int requiredLength = spare.length + 8 + ((hasPayloads) ? 2 + payload.length : 0);\n    if (requiredLength >= buffer.length) {\n      buffer = ArrayUtil.grow(buffer, requiredLength);\n    }\n    output.reset(buffer);\n    output.writeBytes(spare.bytes, spare.offset, spare.length);\n    if (hasPayloads) {\n      output.writeBytes(payload.bytes, payload.offset, payload.length);\n      output.writeShort((short) payload.length);\n    }\n    output.writeLong(weight);\n    writer.write(buffer, 0, output.getPosition());\n  }\n\n","sourceOld":"  /** encodes an entry (bytes+weight) to the provided writer */\n  protected void encode(ByteSequencesWriter writer, ByteArrayDataOutput output, byte[] buffer, BytesRef spare, long weight) throws IOException {\n    if (spare.length + 8 >= buffer.length) {\n      buffer = ArrayUtil.grow(buffer, spare.length + 8);\n    }\n    output.reset(buffer);\n    output.writeBytes(spare.bytes, spare.offset, spare.length);\n    output.writeLong(weight);\n    writer.write(buffer, 0, output.getPosition());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1cc849e9f232bea7495964477fb7bfd25aeb7173":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["1cc849e9f232bea7495964477fb7bfd25aeb7173"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["1cc849e9f232bea7495964477fb7bfd25aeb7173"],"1cc849e9f232bea7495964477fb7bfd25aeb7173":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}