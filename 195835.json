{"path":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGetFileNotExists().mjava","commits":[{"id":"2baf1cdf7061808d4fe0dadc6f327893cf9024e8","date":1388433703,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGetFileNotExists().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGetFileNotExists() throws Exception {\n    String getNode = \"/getFileNotExistsNode\";\n\n    File file = new File(TEMP_DIR,\n        \"solrtest-getfilenotexists-\" + this.getClass().getName() + \"-\" + System.currentTimeMillis());\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"getfile\", getNode, file.getAbsolutePath()};\n    try {\n      ZkCLI.main(args);\n      fail(\"Expected NoNodeException\");\n    } catch (KeeperException.NoNodeException ex) {\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGetFileNotExists().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGetFileNotExists().mjava","sourceNew":"  @Test\n  public void testGetFileNotExists() throws Exception {\n    String getNode = \"/getFileNotExistsNode\";\n\n    File file = TestUtil.createTempFile(\"solrtest-getfilenotexists\", \"\");\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"getfile\", getNode, file.getAbsolutePath()};\n    try {\n      ZkCLI.main(args);\n      fail(\"Expected NoNodeException\");\n    } catch (KeeperException.NoNodeException ex) {\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetFileNotExists() throws Exception {\n    String getNode = \"/getFileNotExistsNode\";\n\n    File file = new File(TEMP_DIR,\n        \"solrtest-getfilenotexists-\" + this.getClass().getName() + \"-\" + System.currentTimeMillis());\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"getfile\", getNode, file.getAbsolutePath()};\n    try {\n      ZkCLI.main(args);\n      fail(\"Expected NoNodeException\");\n    } catch (KeeperException.NoNodeException ex) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGetFileNotExists().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGetFileNotExists().mjava","sourceNew":"  @Test\n  public void testGetFileNotExists() throws Exception {\n    String getNode = \"/getFileNotExistsNode\";\n\n    File file = new File(dataDir,\n        \"solrtest-getfilenotexists-\" + this.getClass().getName() + \"-\" + System.currentTimeMillis());\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"getfile\", getNode, file.getAbsolutePath()};\n    try {\n      ZkCLI.main(args);\n      fail(\"Expected NoNodeException\");\n    } catch (KeeperException.NoNodeException ex) {\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetFileNotExists() throws Exception {\n    String getNode = \"/getFileNotExistsNode\";\n\n    File file = new File(TEMP_DIR,\n        \"solrtest-getfilenotexists-\" + this.getClass().getName() + \"-\" + System.currentTimeMillis());\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"getfile\", getNode, file.getAbsolutePath()};\n    try {\n      ZkCLI.main(args);\n      fail(\"Expected NoNodeException\");\n    } catch (KeeperException.NoNodeException ex) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGetFileNotExists().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGetFileNotExists().mjava","sourceNew":"  @Test\n  public void testGetFileNotExists() throws Exception {\n    File tmpDir = createTempDir();\n    String getNode = \"/getFileNotExistsNode\";\n\n    File file = File.createTempFile(\"newfile\", null, tmpDir);\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"getfile\", getNode, file.getAbsolutePath()};\n    try {\n      ZkCLI.main(args);\n      fail(\"Expected NoNodeException\");\n    } catch (KeeperException.NoNodeException ex) {\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetFileNotExists() throws Exception {\n    String getNode = \"/getFileNotExistsNode\";\n\n    File file = TestUtil.createTempFile(\"solrtest-getfilenotexists\", \"\");\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"getfile\", getNode, file.getAbsolutePath()};\n    try {\n      ZkCLI.main(args);\n      fail(\"Expected NoNodeException\");\n    } catch (KeeperException.NoNodeException ex) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGetFileNotExists().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGetFileNotExists().mjava","sourceNew":"  @Test\n  public void testGetFileNotExists() throws Exception {\n    File tmpDir = createTempDir();\n    String getNode = \"/getFileNotExistsNode\";\n\n    File file = File.createTempFile(\"newfile\", null, tmpDir);\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"getfile\", getNode, file.getAbsolutePath()};\n    try {\n      ZkCLI.main(args);\n      fail(\"Expected NoNodeException\");\n    } catch (KeeperException.NoNodeException ex) {\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetFileNotExists() throws Exception {\n    String getNode = \"/getFileNotExistsNode\";\n\n    File file = new File(dataDir,\n        \"solrtest-getfilenotexists-\" + this.getClass().getName() + \"-\" + System.currentTimeMillis());\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"getfile\", getNode, file.getAbsolutePath()};\n    try {\n      ZkCLI.main(args);\n      fail(\"Expected NoNodeException\");\n    } catch (KeeperException.NoNodeException ex) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGetFileNotExists().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGetFileNotExists().mjava","sourceNew":"  @Test\n  public void testGetFileNotExists() throws Exception {\n    File tmpDir = createTempDir().toFile();\n    String getNode = \"/getFileNotExistsNode\";\n\n    File file = File.createTempFile(\"newfile\", null, tmpDir);\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"getfile\", getNode, file.getAbsolutePath()};\n    try {\n      ZkCLI.main(args);\n      fail(\"Expected NoNodeException\");\n    } catch (KeeperException.NoNodeException ex) {\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetFileNotExists() throws Exception {\n    File tmpDir = createTempDir();\n    String getNode = \"/getFileNotExistsNode\";\n\n    File file = File.createTempFile(\"newfile\", null, tmpDir);\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"getfile\", getNode, file.getAbsolutePath()};\n    try {\n      ZkCLI.main(args);\n      fail(\"Expected NoNodeException\");\n    } catch (KeeperException.NoNodeException ex) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13f09deb0488b2b33625cf4f5090f208bdab8858","date":1465289523,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGetFileNotExists().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGetFileNotExists().mjava","sourceNew":"  @Test\n  public void testGetFileNotExists() throws Exception {\n    String getNode = \"/getFileNotExistsNode\";\n\n    File file = createTempFile(\"newfile\", null).toFile();\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"getfile\", getNode, file.getAbsolutePath()};\n    try {\n      ZkCLI.main(args);\n      fail(\"Expected NoNodeException\");\n    } catch (KeeperException.NoNodeException ex) {\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetFileNotExists() throws Exception {\n    File tmpDir = createTempDir().toFile();\n    String getNode = \"/getFileNotExistsNode\";\n\n    File file = File.createTempFile(\"newfile\", null, tmpDir);\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"getfile\", getNode, file.getAbsolutePath()};\n    try {\n      ZkCLI.main(args);\n      fail(\"Expected NoNodeException\");\n    } catch (KeeperException.NoNodeException ex) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"191128ac5b85671b1671e2c857437694283b6ebf","date":1465297861,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGetFileNotExists().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGetFileNotExists().mjava","sourceNew":"  @Test\n  public void testGetFileNotExists() throws Exception {\n    String getNode = \"/getFileNotExistsNode\";\n\n    File file = createTempFile(\"newfile\", null).toFile();\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"getfile\", getNode, file.getAbsolutePath()};\n    try {\n      ZkCLI.main(args);\n      fail(\"Expected NoNodeException\");\n    } catch (KeeperException.NoNodeException ex) {\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetFileNotExists() throws Exception {\n    File tmpDir = createTempDir().toFile();\n    String getNode = \"/getFileNotExistsNode\";\n\n    File file = File.createTempFile(\"newfile\", null, tmpDir);\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"getfile\", getNode, file.getAbsolutePath()};\n    try {\n      ZkCLI.main(args);\n      fail(\"Expected NoNodeException\");\n    } catch (KeeperException.NoNodeException ex) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGetFileNotExists().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGetFileNotExists().mjava","sourceNew":"  @Test\n  public void testGetFileNotExists() throws Exception {\n    String getNode = \"/getFileNotExistsNode\";\n\n    File file = createTempFile(\"newfile\", null).toFile();\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"getfile\", getNode, file.getAbsolutePath()};\n    try {\n      ZkCLI.main(args);\n      fail(\"Expected NoNodeException\");\n    } catch (KeeperException.NoNodeException ex) {\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testGetFileNotExists() throws Exception {\n    File tmpDir = createTempDir().toFile();\n    String getNode = \"/getFileNotExistsNode\";\n\n    File file = File.createTempFile(\"newfile\", null, tmpDir);\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"getfile\", getNode, file.getAbsolutePath()};\n    try {\n      ZkCLI.main(args);\n      fail(\"Expected NoNodeException\");\n    } catch (KeeperException.NoNodeException ex) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92f789dbd1886e4b468e61b0def88b29a3f55228","date":1533844010,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGetFileNotExists().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testGetFileNotExists().mjava","sourceNew":"  @Test\n  public void testGetFileNotExists() throws Exception {\n    String getNode = \"/getFileNotExistsNode\";\n\n    File file = createTempFile(\"newfile\", null).toFile();\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"getfile\", getNode, file.getAbsolutePath()};\n    KeeperException e = expectThrows(KeeperException.class, () -> ZkCLI.main(args));\n    assertEquals(e.code(), KeeperException.Code.NONODE);\n  }\n\n","sourceOld":"  @Test\n  public void testGetFileNotExists() throws Exception {\n    String getNode = \"/getFileNotExistsNode\";\n\n    File file = createTempFile(\"newfile\", null).toFile();\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(), \"-cmd\",\n        \"getfile\", getNode, file.getAbsolutePath()};\n    try {\n      ZkCLI.main(args);\n      fail(\"Expected NoNodeException\");\n    } catch (KeeperException.NoNodeException ex) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["d0d579490a72f2e6297eaa648940611234c57cf1"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["1416f9d09d016a6894cd17e1caac137dad2bba59","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"13f09deb0488b2b33625cf4f5090f208bdab8858":["f4abec28b874149a7223e32cc7a01704c27790de"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2baf1cdf7061808d4fe0dadc6f327893cf9024e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"92f789dbd1886e4b468e61b0def88b29a3f55228":["191128ac5b85671b1671e2c857437694283b6ebf"],"2baf1cdf7061808d4fe0dadc6f327893cf9024e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"191128ac5b85671b1671e2c857437694283b6ebf":["f4abec28b874149a7223e32cc7a01704c27790de","13f09deb0488b2b33625cf4f5090f208bdab8858"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"d0d579490a72f2e6297eaa648940611234c57cf1":["2baf1cdf7061808d4fe0dadc6f327893cf9024e8"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["f4abec28b874149a7223e32cc7a01704c27790de","191128ac5b85671b1671e2c857437694283b6ebf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["92f789dbd1886e4b468e61b0def88b29a3f55228"]},"commit2Childs":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"13f09deb0488b2b33625cf4f5090f208bdab8858":["191128ac5b85671b1671e2c857437694283b6ebf"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2baf1cdf7061808d4fe0dadc6f327893cf9024e8"],"92f789dbd1886e4b468e61b0def88b29a3f55228":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2baf1cdf7061808d4fe0dadc6f327893cf9024e8":["1416f9d09d016a6894cd17e1caac137dad2bba59","d0d579490a72f2e6297eaa648940611234c57cf1"],"191128ac5b85671b1671e2c857437694283b6ebf":["92f789dbd1886e4b468e61b0def88b29a3f55228","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"d0d579490a72f2e6297eaa648940611234c57cf1":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"f4abec28b874149a7223e32cc7a01704c27790de":["13f09deb0488b2b33625cf4f5090f208bdab8858","191128ac5b85671b1671e2c857437694283b6ebf","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}