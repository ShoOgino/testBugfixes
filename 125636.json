{"path":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestNGramDistance#testGetDistance2().mjava","commits":[{"id":"62ef729ef7d982bed7997d2837565d4c63df9c81","date":1242828428,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestNGramDistance#testGetDistance2().mjava","pathOld":"/dev/null","sourceNew":"  public void testGetDistance2() {\n    StringDistance sd = new NGramDistance(2);\n    float d = sd.getDistance(\"al\", \"al\");\n    assertEquals(d,1.0f,0.001);\n    d = sd.getDistance(\"a\", \"a\");\n    assertEquals(d,1.0f,0.001);\n    d = sd.getDistance(\"b\", \"a\");\n    assertEquals(d,0.0f,0.001);\n    d = sd.getDistance(\"a\", \"aa\");\n    assertEquals(d,0.5f,0.001);\n    d = sd.getDistance(\"martha\", \"marhta\");\n    assertEquals(d,0.6666,0.001);\n    d = sd.getDistance(\"jones\", \"johnson\");\n    assertEquals(d,0.4285,0.001);\n    d = sd.getDistance(\"natural\", \"contrary\");\n    assertEquals(d,0.25,0.001);\n    d = sd.getDistance(\"abcvwxyz\", \"cabvwxyz\");\n    assertEquals(d,0.625,0.001);    \n    d = sd.getDistance(\"dwayne\", \"duane\");\n    assertEquals(d,0.5833,0.001);\n    d = sd.getDistance(\"dixon\", \"dicksonx\");\n    assertEquals(d,0.5,0.001);\n    d = sd.getDistance(\"six\", \"ten\");\n    assertEquals(d,0,0.001);\n    float d1 = sd.getDistance(\"zac ephron\", \"zac efron\");\n    float d2 = sd.getDistance(\"zac ephron\", \"kai ephron\");\n    assertTrue(d1 > d2);\n    d1 = sd.getDistance(\"brittney spears\", \"britney spears\");\n    d2 = sd.getDistance(\"brittney spears\", \"brittney startzman\");\n    assertTrue(d1 > d2);\n    d1 = sd.getDistance(\"0012345678\", \"0012890678\");\n    d2 = sd.getDistance(\"0012345678\", \"0072385698\");\n    assertEquals(d1,d2,0.001);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestNGramDistance#testGetDistance2().mjava","pathOld":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestNGramDistance#testGetDistance2().mjava","sourceNew":"  public void testGetDistance2() {\n    StringDistance sd = new NGramDistance(2);\n    float d = sd.getDistance(\"al\", \"al\");\n    assertEquals(d,1.0f,0.001);\n    d = sd.getDistance(\"a\", \"a\");\n    assertEquals(d,1.0f,0.001);\n    d = sd.getDistance(\"b\", \"a\");\n    assertEquals(d,0.0f,0.001);\n    d = sd.getDistance(\"a\", \"aa\");\n    assertEquals(d,0.5f,0.001);\n    d = sd.getDistance(\"martha\", \"marhta\");\n    assertEquals(d,0.6666,0.001);\n    d = sd.getDistance(\"jones\", \"johnson\");\n    assertEquals(d,0.4285,0.001);\n    d = sd.getDistance(\"natural\", \"contrary\");\n    assertEquals(d,0.25,0.001);\n    d = sd.getDistance(\"abcvwxyz\", \"cabvwxyz\");\n    assertEquals(d,0.625,0.001);    \n    d = sd.getDistance(\"dwayne\", \"duane\");\n    assertEquals(d,0.5833,0.001);\n    d = sd.getDistance(\"dixon\", \"dicksonx\");\n    assertEquals(d,0.5,0.001);\n    d = sd.getDistance(\"six\", \"ten\");\n    assertEquals(d,0,0.001);\n    float d1 = sd.getDistance(\"zac ephron\", \"zac efron\");\n    float d2 = sd.getDistance(\"zac ephron\", \"kai ephron\");\n    assertTrue(d1 > d2);\n    d1 = sd.getDistance(\"brittney spears\", \"britney spears\");\n    d2 = sd.getDistance(\"brittney spears\", \"brittney startzman\");\n    assertTrue(d1 > d2);\n    d1 = sd.getDistance(\"0012345678\", \"0012890678\");\n    d2 = sd.getDistance(\"0012345678\", \"0072385698\");\n    assertEquals(d1,d2,0.001);\n  }\n\n","sourceOld":"  public void testGetDistance2() {\n    StringDistance sd = new NGramDistance(2);\n    float d = sd.getDistance(\"al\", \"al\");\n    assertEquals(d,1.0f,0.001);\n    d = sd.getDistance(\"a\", \"a\");\n    assertEquals(d,1.0f,0.001);\n    d = sd.getDistance(\"b\", \"a\");\n    assertEquals(d,0.0f,0.001);\n    d = sd.getDistance(\"a\", \"aa\");\n    assertEquals(d,0.5f,0.001);\n    d = sd.getDistance(\"martha\", \"marhta\");\n    assertEquals(d,0.6666,0.001);\n    d = sd.getDistance(\"jones\", \"johnson\");\n    assertEquals(d,0.4285,0.001);\n    d = sd.getDistance(\"natural\", \"contrary\");\n    assertEquals(d,0.25,0.001);\n    d = sd.getDistance(\"abcvwxyz\", \"cabvwxyz\");\n    assertEquals(d,0.625,0.001);    \n    d = sd.getDistance(\"dwayne\", \"duane\");\n    assertEquals(d,0.5833,0.001);\n    d = sd.getDistance(\"dixon\", \"dicksonx\");\n    assertEquals(d,0.5,0.001);\n    d = sd.getDistance(\"six\", \"ten\");\n    assertEquals(d,0,0.001);\n    float d1 = sd.getDistance(\"zac ephron\", \"zac efron\");\n    float d2 = sd.getDistance(\"zac ephron\", \"kai ephron\");\n    assertTrue(d1 > d2);\n    d1 = sd.getDistance(\"brittney spears\", \"britney spears\");\n    d2 = sd.getDistance(\"brittney spears\", \"brittney startzman\");\n    assertTrue(d1 > d2);\n    d1 = sd.getDistance(\"0012345678\", \"0012890678\");\n    d2 = sd.getDistance(\"0012345678\", \"0072385698\");\n    assertEquals(d1,d2,0.001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"62ef729ef7d982bed7997d2837565d4c63df9c81":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["62ef729ef7d982bed7997d2837565d4c63df9c81"]},"commit2Childs":{"62ef729ef7d982bed7997d2837565d4c63df9c81":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["62ef729ef7d982bed7997d2837565d4c63df9c81"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}