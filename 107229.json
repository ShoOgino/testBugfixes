{"path":"solr/core/src/test/org/apache/solr/cloud/TestBaseStatsCacheCloud#assertResponses(QueryResponse,QueryResponse,boolean).mjava","commits":[{"id":"df72a23fb74bebe914e3f3972063a884327c0436","date":1570470832,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestBaseStatsCacheCloud#assertResponses(QueryResponse,QueryResponse,boolean).mjava","pathOld":"/dev/null","sourceNew":"  protected void assertResponses(QueryResponse controlRsp, QueryResponse cloudRsp, boolean sameScores) throws Exception {\n    Map<String, SolrDocument> cloudDocs = new HashMap<>();\n    Map<String, SolrDocument> controlDocs = new HashMap<>();\n    cloudRsp.getResults().forEach(doc -> cloudDocs.put((String) doc.getFieldValue(\"id\"), doc));\n    controlRsp.getResults().forEach(doc -> controlDocs.put((String) doc.getFieldValue(\"id\"), doc));\n    assertEquals(\"number of docs\", controlDocs.size(), cloudDocs.size());\n    for (Map.Entry<String, SolrDocument> entry : controlDocs.entrySet()) {\n      SolrDocument controlDoc = entry.getValue();\n      SolrDocument cloudDoc = cloudDocs.get(entry.getKey());\n      assertNotNull(\"missing cloud doc \" + controlDoc, cloudDoc);\n      Float controlScore = (Float) controlDoc.getFieldValue(\"score\");\n      Float cloudScore = (Float) cloudDoc.getFieldValue(\"score\");\n      if (sameScores) {\n        assertEquals(\"cloud score differs from control\", controlScore, cloudScore, controlScore * 0.01f);\n      } else {\n        assertFalse(\"cloud score the same as control\", controlScore == cloudScore);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":0,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestBaseStatsCacheCloud#assertResponses(QueryResponse,QueryResponse,boolean).mjava","pathOld":"/dev/null","sourceNew":"  protected void assertResponses(QueryResponse controlRsp, QueryResponse cloudRsp, boolean sameScores) throws Exception {\n    Map<String, SolrDocument> cloudDocs = new HashMap<>();\n    Map<String, SolrDocument> controlDocs = new HashMap<>();\n    cloudRsp.getResults().forEach(doc -> cloudDocs.put((String) doc.getFieldValue(\"id\"), doc));\n    controlRsp.getResults().forEach(doc -> controlDocs.put((String) doc.getFieldValue(\"id\"), doc));\n    assertEquals(\"number of docs\", controlDocs.size(), cloudDocs.size());\n    for (Map.Entry<String, SolrDocument> entry : controlDocs.entrySet()) {\n      SolrDocument controlDoc = entry.getValue();\n      SolrDocument cloudDoc = cloudDocs.get(entry.getKey());\n      assertNotNull(\"missing cloud doc \" + controlDoc, cloudDoc);\n      Float controlScore = (Float) controlDoc.getFieldValue(\"score\");\n      Float cloudScore = (Float) cloudDoc.getFieldValue(\"score\");\n      if (sameScores) {\n        assertEquals(\"cloud score differs from control\", controlScore, cloudScore, controlScore * 0.01f);\n      } else {\n        assertFalse(\"cloud score the same as control\", controlScore == cloudScore);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"df72a23fb74bebe914e3f3972063a884327c0436":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df72a23fb74bebe914e3f3972063a884327c0436"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","df72a23fb74bebe914e3f3972063a884327c0436"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["df72a23fb74bebe914e3f3972063a884327c0436","b0b597c65628ca9e73913a07e81691f8229bae35"],"df72a23fb74bebe914e3f3972063a884327c0436":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}