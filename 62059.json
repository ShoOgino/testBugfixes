{"path":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testPointInSetQueryGetPackedPoints().mjava","commits":[{"id":"ac96418b176c9862b22cd43a6c5b7be58b3b245e","date":1464870809,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testPointInSetQueryGetPackedPoints().mjava","pathOld":"/dev/null","sourceNew":"  public void testPointInSetQueryGetPackedPoints() throws Exception {\n    int numValues = randomIntValue(1, 32);\n    List<byte[]> values = new ArrayList<>(numValues);\n    for (byte i = 0; i < numValues; i++) {\n      values.add(new byte[]{i});\n    }\n\n    PointInSetQuery query = (PointInSetQuery) BinaryPoint.newSetQuery(\"field\", values.toArray(new byte[][]{}));\n    Collection<byte[]> packedPoints = query.getPackedPoints();\n    assertEquals(numValues, packedPoints.size());\n    Iterator<byte[]> iterator = packedPoints.iterator();\n    for (byte[] expectedValue : values) {\n      assertArrayEquals(expectedValue, iterator.next());\n    }\n    expectThrows(NoSuchElementException.class, () -> iterator.next());\n    assertFalse(iterator.hasNext());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testPointInSetQueryGetPackedPoints().mjava","pathOld":"/dev/null","sourceNew":"  public void testPointInSetQueryGetPackedPoints() throws Exception {\n    int numValues = randomIntValue(1, 32);\n    List<byte[]> values = new ArrayList<>(numValues);\n    for (byte i = 0; i < numValues; i++) {\n      values.add(new byte[]{i});\n    }\n\n    PointInSetQuery query = (PointInSetQuery) BinaryPoint.newSetQuery(\"field\", values.toArray(new byte[][]{}));\n    Collection<byte[]> packedPoints = query.getPackedPoints();\n    assertEquals(numValues, packedPoints.size());\n    Iterator<byte[]> iterator = packedPoints.iterator();\n    for (byte[] expectedValue : values) {\n      assertArrayEquals(expectedValue, iterator.next());\n    }\n    expectThrows(NoSuchElementException.class, () -> iterator.next());\n    assertFalse(iterator.hasNext());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ac96418b176c9862b22cd43a6c5b7be58b3b245e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac96418b176c9862b22cd43a6c5b7be58b3b245e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ac96418b176c9862b22cd43a6c5b7be58b3b245e"]},"commit2Childs":{"ac96418b176c9862b22cd43a6c5b7be58b3b245e":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ac96418b176c9862b22cd43a6c5b7be58b3b245e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}