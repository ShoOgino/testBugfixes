{"path":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoConvexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","commits":[{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoConvexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","sourceNew":"  @Override\n  protected double outsideDistance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    double minimumDistance = Double.MAX_VALUE;\n    for (final GeoPoint edgePoint : points) {\n      final double newDist = distanceStyle.computeDistance(edgePoint, x,y,z);\n      if (newDist < minimumDistance) {\n        minimumDistance = newDist;\n      }\n    }\n    for (int edgeIndex = 0; edgeIndex < edges.length; edgeIndex++) {\n      final Plane edgePlane = edges[edgeIndex];\n      final Membership[] membershipBounds = new Membership[edges.length - 1];\n      int count = 0;\n      for (int otherIndex = 0; otherIndex < edges.length; otherIndex++) {\n        if (otherIndex != edgeIndex) {\n          membershipBounds[count++] = edges[otherIndex];\n        }\n      }\n      final double newDist = distanceStyle.computeDistance(planetModel, edgePlane, x, y, z, membershipBounds);\n      if (newDist < minimumDistance) {\n        minimumDistance = newDist;\n      }\n    }\n    return minimumDistance;\n  }\n\n","sourceOld":"  @Override\n  protected double outsideDistance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    double minimumDistance = Double.MAX_VALUE;\n    for (final GeoPoint edgePoint : points) {\n      final double newDist = distanceStyle.computeDistance(edgePoint, x,y,z);\n      if (newDist < minimumDistance) {\n        minimumDistance = newDist;\n      }\n    }\n    for (int edgeIndex = 0; edgeIndex < edges.length; edgeIndex++) {\n      final Plane edgePlane = edges[edgeIndex];\n      final Membership[] membershipBounds = new Membership[edges.length - 1];\n      int count = 0;\n      for (int otherIndex = 0; otherIndex < edges.length; otherIndex++) {\n        if (otherIndex != edgeIndex) {\n          membershipBounds[count++] = edges[otherIndex];\n        }\n      }\n      final double newDist = distanceStyle.computeDistance(planetModel, edgePlane, x, y, z, membershipBounds);\n      if (newDist < minimumDistance) {\n        minimumDistance = newDist;\n      }\n    }\n    return minimumDistance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoConvexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoConvexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","sourceNew":"  @Override\n  protected double outsideDistance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    double minimumDistance = Double.MAX_VALUE;\n    for (final GeoPoint edgePoint : points) {\n      final double newDist = distanceStyle.computeDistance(edgePoint, x,y,z);\n      if (newDist < minimumDistance) {\n        minimumDistance = newDist;\n      }\n    }\n    for (int edgeIndex = 0; edgeIndex < edges.length; edgeIndex++) {\n      final Plane edgePlane = edges[edgeIndex];\n      final Membership[] membershipBounds = new Membership[edges.length - 1];\n      int count = 0;\n      for (int otherIndex = 0; otherIndex < edges.length; otherIndex++) {\n        if (otherIndex != edgeIndex) {\n          membershipBounds[count++] = edges[otherIndex];\n        }\n      }\n      final double newDist = distanceStyle.computeDistance(planetModel, edgePlane, x, y, z, membershipBounds);\n      if (newDist < minimumDistance) {\n        minimumDistance = newDist;\n      }\n    }\n    return minimumDistance;\n  }\n\n","sourceOld":"  @Override\n  protected double outsideDistance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    double minimumDistance = Double.MAX_VALUE;\n    for (final GeoPoint edgePoint : points) {\n      final double newDist = distanceStyle.computeDistance(edgePoint, x,y,z);\n      if (newDist < minimumDistance) {\n        minimumDistance = newDist;\n      }\n    }\n    for (int edgeIndex = 0; edgeIndex < edges.length; edgeIndex++) {\n      final Plane edgePlane = edges[edgeIndex];\n      final Membership[] membershipBounds = new Membership[edges.length - 1];\n      int count = 0;\n      for (int otherIndex = 0; otherIndex < edges.length; otherIndex++) {\n        if (otherIndex != edgeIndex) {\n          membershipBounds[count++] = edges[otherIndex];\n        }\n      }\n      final double newDist = distanceStyle.computeDistance(planetModel, edgePlane, x, y, z, membershipBounds);\n      if (newDist < minimumDistance) {\n        minimumDistance = newDist;\n      }\n    }\n    return minimumDistance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3022be5842502b7c2a57a5124199bbc30236f0a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b4e444678504caf66a8060b1d514383aa4feac0c":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4e444678504caf66a8060b1d514383aa4feac0c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["b4e444678504caf66a8060b1d514383aa4feac0c"],"b4e444678504caf66a8060b1d514383aa4feac0c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}