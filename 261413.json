{"path":"solr/core/src/test/org/apache/solr/update/processor/CloneFieldUpdateProcessorFactoryTest#testMultipleClones().mjava","commits":[{"id":"a82f17a4aec53026c4ca0f2fa62ad8eaed017bb0","date":1446511397,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/CloneFieldUpdateProcessorFactoryTest#testMultipleClones().mjava","pathOld":"/dev/null","sourceNew":"  public void testMultipleClones() throws Exception {\n    SolrInputDocument doc = processAdd(\"multiple-clones\",\n                                       doc(f(\"id\", \"1\"),\n                                           f(\"category\", \"test\"),\n                                           f(\"authors\", \"author1\", \"author2\"),\n                                           f(\"editors\", \"ed1\", \"ed2\"),\n                                           f(\"bfriday_price\", 4.00),\n                                           f(\"sale_price\", 5.00),\n                                           f(\"list_price\", 6.00),\n                                           f(\"features\", \"hill\", \"valley\", \"dune\")));\n                                           \n    // the original values should remain\n    assertEquals(\"category should have a value\", \"test\", doc.getFieldValue(\"category\"));\n\n    Collection<Object> auths = doc.getFieldValues(\"authors\");\n    assertTrue(auths.size() == 2);\n    assertTrue(auths.contains(\"author1\"));\n    assertTrue(auths.contains(\"author2\"));\n    Collection<Object> eds = doc.getFieldValues(\"editors\");\n    assertTrue(eds.size() == 2);\n    assertTrue(eds.contains(\"ed1\"));\n    assertTrue(eds.contains(\"ed2\"));\n\n    assertEquals(\"bfriday_price should have a value\", 4.0, doc.getFieldValue(\"bfriday_price\"));\n    assertEquals(\"sale_price should have a value\", 5.0, doc.getFieldValue(\"sale_price\"));\n    assertEquals(\"list_price should have a value\", 6.0, doc.getFieldValue(\"list_price\"));\n\n    Collection<Object> features = doc.getFieldValues(\"features\");\n    assertTrue(features.size() == 3);\n    assertTrue(features.contains(\"hill\"));\n    assertTrue(features.contains(\"valley\"));\n    assertTrue(features.contains(\"dune\"));\n\n    // and the copied values shoul be added\n    assertEquals(\"category_s should have a value\", \"test\", doc.getFieldValue(\"category_s\"));\n\n    Collection<Object> contribs = doc.getFieldValues(\"contributors\");\n    assertTrue(contribs.size() == 4);\n    assertTrue(contribs.contains(\"author1\"));\n    assertTrue(contribs.contains(\"author2\"));\n    assertTrue(contribs.contains(\"ed1\"));\n    assertTrue(contribs.contains(\"ed2\"));\n\n    Collection<Object> prices = doc.getFieldValues(\"all_prices\");\n    assertTrue(prices.size() == 2);\n    assertTrue(prices.contains(5.0));\n    assertTrue(prices.contains(4.0));\n    assertFalse(prices.contains(6.0));\n\n    // n.b. the field names below imply singularity but that would be achieved with a subsequent \n    // FirstFieldValueUpdateProcessorFactory (or similar custom class), and not in clone field itself\n\n    Collection<Object> keyf = doc.getFieldValues(\"key_feature\");\n    assertTrue(keyf.size() == 3);\n    assertTrue(keyf.contains(\"hill\"));\n    assertTrue(keyf.contains(\"valley\"));\n    assertTrue(keyf.contains(\"dune\"));\n\n    Collection<Object> bestf = doc.getFieldValues(\"best_feature\");\n    assertTrue(bestf.size() == 3);\n    assertTrue(bestf.contains(\"hill\"));\n    assertTrue(bestf.contains(\"valley\"));\n    assertTrue(bestf.contains(\"dune\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a82f17a4aec53026c4ca0f2fa62ad8eaed017bb0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a82f17a4aec53026c4ca0f2fa62ad8eaed017bb0"]},"commit2Childs":{"a82f17a4aec53026c4ca0f2fa62ad8eaed017bb0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a82f17a4aec53026c4ca0f2fa62ad8eaed017bb0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}