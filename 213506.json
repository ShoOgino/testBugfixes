{"path":"lucene/core/src/java/org/apache/lucene/search/FieldValueHitQueue.OneComparatorFieldValueHitQueue#lessThan(Entry,Entry).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldValueHitQueue.OneComparatorFieldValueHitQueue#lessThan(Entry,Entry).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldValueHitQueue.OneComparatorFieldValueHitQueue#lessThan(Entry,Entry).mjava","sourceNew":"    /**\n     * Returns whether <code>a</code> is less relevant than <code>b</code>.\n     * @param a ScoreDoc\n     * @param b ScoreDoc\n     * @return <code>true</code> if document <code>a</code> should be sorted after document <code>b</code>.\n     */\n    @Override\n    protected boolean lessThan(final Entry hitA, final Entry hitB) {\n\n      assert hitA != hitB;\n      assert hitA.slot != hitB.slot;\n\n      final int c = oneReverseMul * firstComparator.compare(hitA.slot, hitB.slot);\n      if (c != 0) {\n        return c > 0;\n      }\n\n      // avoid random sort order that could lead to duplicates (bug #31241):\n      return hitA.doc > hitB.doc;\n    }\n\n","sourceOld":"    /**\n     * Returns whether <code>a</code> is less relevant than <code>b</code>.\n     * @param a ScoreDoc\n     * @param b ScoreDoc\n     * @return <code>true</code> if document <code>a</code> should be sorted after document <code>b</code>.\n     */\n    @Override\n    protected boolean lessThan(final Entry hitA, final Entry hitB) {\n\n      assert hitA != hitB;\n      assert hitA.slot != hitB.slot;\n\n      final int c = oneReverseMul * firstComparator.compare(hitA.slot, hitB.slot);\n      if (c != 0) {\n        return c > 0;\n      }\n\n      // avoid random sort order that could lead to duplicates (bug #31241):\n      return hitA.doc > hitB.doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3a2f7df6ce044e8e7f5fe84cb5b23682fa1b27d","date":1335141740,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldValueHitQueue.OneComparatorFieldValueHitQueue#lessThan(Entry,Entry).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldValueHitQueue.OneComparatorFieldValueHitQueue#lessThan(Entry,Entry).mjava","sourceNew":"    /**\n     * Returns whether <code>hitA</code> is less relevant than <code>hitB</code>.\n     * @param hitA Entry\n     * @param hitB Entry\n     * @return <code>true</code> if document <code>hitA</code> should be sorted after document <code>hitB</code>.\n     */\n    @Override\n    protected boolean lessThan(final Entry hitA, final Entry hitB) {\n\n      assert hitA != hitB;\n      assert hitA.slot != hitB.slot;\n\n      final int c = oneReverseMul * firstComparator.compare(hitA.slot, hitB.slot);\n      if (c != 0) {\n        return c > 0;\n      }\n\n      // avoid random sort order that could lead to duplicates (bug #31241):\n      return hitA.doc > hitB.doc;\n    }\n\n","sourceOld":"    /**\n     * Returns whether <code>a</code> is less relevant than <code>b</code>.\n     * @param a ScoreDoc\n     * @param b ScoreDoc\n     * @return <code>true</code> if document <code>a</code> should be sorted after document <code>b</code>.\n     */\n    @Override\n    protected boolean lessThan(final Entry hitA, final Entry hitB) {\n\n      assert hitA != hitB;\n      assert hitA.slot != hitB.slot;\n\n      final int c = oneReverseMul * firstComparator.compare(hitA.slot, hitB.slot);\n      if (c != 0) {\n        return c > 0;\n      }\n\n      // avoid random sort order that could lead to duplicates (bug #31241):\n      return hitA.doc > hitB.doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"901e951cec2e6af4e503209a6721c8834db23279","date":1420556599,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldValueHitQueue.OneComparatorFieldValueHitQueue#lessThan(Entry,Entry).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldValueHitQueue.OneComparatorFieldValueHitQueue#lessThan(Entry,Entry).mjava","sourceNew":"    /**\n     * Returns whether <code>hitA</code> is less relevant than <code>hitB</code>.\n     * @param hitA Entry\n     * @param hitB Entry\n     * @return <code>true</code> if document <code>hitA</code> should be sorted after document <code>hitB</code>.\n     */\n    @Override\n    protected boolean lessThan(final Entry hitA, final Entry hitB) {\n\n      assert hitA != hitB;\n      assert hitA.slot != hitB.slot;\n\n      final int c = oneReverseMul * oneComparator.compare(hitA.slot, hitB.slot);\n      if (c != 0) {\n        return c > 0;\n      }\n\n      // avoid random sort order that could lead to duplicates (bug #31241):\n      return hitA.doc > hitB.doc;\n    }\n\n","sourceOld":"    /**\n     * Returns whether <code>hitA</code> is less relevant than <code>hitB</code>.\n     * @param hitA Entry\n     * @param hitB Entry\n     * @return <code>true</code> if document <code>hitA</code> should be sorted after document <code>hitB</code>.\n     */\n    @Override\n    protected boolean lessThan(final Entry hitA, final Entry hitB) {\n\n      assert hitA != hitB;\n      assert hitA.slot != hitB.slot;\n\n      final int c = oneReverseMul * firstComparator.compare(hitA.slot, hitB.slot);\n      if (c != 0) {\n        return c > 0;\n      }\n\n      // avoid random sort order that could lead to duplicates (bug #31241):\n      return hitA.doc > hitB.doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"901e951cec2e6af4e503209a6721c8834db23279":["f3a2f7df6ce044e8e7f5fe84cb5b23682fa1b27d"],"f3a2f7df6ce044e8e7f5fe84cb5b23682fa1b27d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["901e951cec2e6af4e503209a6721c8834db23279"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f3a2f7df6ce044e8e7f5fe84cb5b23682fa1b27d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"901e951cec2e6af4e503209a6721c8834db23279":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f3a2f7df6ce044e8e7f5fe84cb5b23682fa1b27d":["901e951cec2e6af4e503209a6721c8834db23279"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}