{"path":"solr/solrj/src/java/org/apache/solr/common/util/Utils.MapWriterJSONWriter#handleUnknownClass(Object).mjava","commits":[{"id":"976feb6756f29529c6ce5b578e7d6fa8b1efcb30","date":1535461878,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils.MapWriterJSONWriter#handleUnknownClass(Object).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void handleUnknownClass(Object o) {\n      if (o instanceof MapWriter) {\n        Map m = ((MapWriter)o).toMap(new LinkedHashMap<>());\n        write(m);\n      } else {\n        super.handleUnknownClass(o);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb50877dc038c021eba3a70999fd1f6ed85001c1","date":1563596432,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils.MapWriterJSONWriter#handleUnknownClass(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils.MapWriterJSONWriter#handleUnknownClass(Object).mjava","sourceNew":"    @Override\n    public void handleUnknownClass(Object o) {\n      if (o instanceof MapWriter) {\n        Map m = ((MapWriter) o).toMap(new LinkedHashMap<>());\n        write(m);\n      } else {\n        super.handleUnknownClass(o);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void handleUnknownClass(Object o) {\n      if (o instanceof MapWriter) {\n        Map m = ((MapWriter)o).toMap(new LinkedHashMap<>());\n        write(m);\n      } else {\n        super.handleUnknownClass(o);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils.MapWriterJSONWriter#handleUnknownClass(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils.MapWriterJSONWriter#handleUnknownClass(Object).mjava","sourceNew":"    @Override\n    public void handleUnknownClass(Object o) {\n      if (o instanceof MapWriter) {\n        Map m = ((MapWriter)o).toMap(new LinkedHashMap<>());\n        write(m);\n      } else {\n        super.handleUnknownClass(o);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void handleUnknownClass(Object o) {\n      if (o instanceof MapWriter) {\n        Map m = ((MapWriter) o).toMap(new LinkedHashMap<>());\n        write(m);\n      } else {\n        super.handleUnknownClass(o);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8476949555f799dff381770c01cfad051a264487","date":1570505073,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils.MapWriterJSONWriter#handleUnknownClass(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils.MapWriterJSONWriter#handleUnknownClass(Object).mjava","sourceNew":"    @Override\n    public void handleUnknownClass(Object o) {\n      if (o instanceof MapWriter) {\n        Map m = ((MapWriter) o).toMap(new LinkedHashMap<>());\n        write(m);\n      } else {\n        super.handleUnknownClass(o);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void handleUnknownClass(Object o) {\n      if (o instanceof MapWriter) {\n        Map m = ((MapWriter)o).toMap(new LinkedHashMap<>());\n        write(m);\n      } else {\n        super.handleUnknownClass(o);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76","date":1591450217,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils.MapWriterJSONWriter#handleUnknownClass(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils.MapWriterJSONWriter#handleUnknownClass(Object).mjava","sourceNew":"    @Override\n    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    public void handleUnknownClass(Object o) {\n      if (o instanceof MapWriter) {\n        Map m = ((MapWriter) o).toMap(new LinkedHashMap<>());\n        write(m);\n      } else {\n        super.handleUnknownClass(o);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void handleUnknownClass(Object o) {\n      if (o instanceof MapWriter) {\n        Map m = ((MapWriter) o).toMap(new LinkedHashMap<>());\n        write(m);\n      } else {\n        super.handleUnknownClass(o);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dfbc0735f81a71377d6600cec08bcce468958595","date":1598969084,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils.MapWriterJSONWriter#handleUnknownClass(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils.MapWriterJSONWriter#handleUnknownClass(Object).mjava","sourceNew":"    @Override\n    @SuppressWarnings({\"rawtypes\"})\n    public void handleUnknownClass(Object o) {\n      if (o instanceof MapWriter) {\n        Map m = ((MapWriter) o).toMap(new LinkedHashMap<>());\n        write(m);\n      } else {\n        super.handleUnknownClass(o);\n      }\n    }\n\n","sourceOld":"    @Override\n    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    public void handleUnknownClass(Object o) {\n      if (o instanceof MapWriter) {\n        Map m = ((MapWriter) o).toMap(new LinkedHashMap<>());\n        write(m);\n      } else {\n        super.handleUnknownClass(o);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"233211c3dbff6f367588be5bbb4ac77f72eae193","date":1602085975,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils.MapWriterJSONWriter#handleUnknownClass(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils.MapWriterJSONWriter#handleUnknownClass(Object).mjava","sourceNew":"    @Override\n    @SuppressWarnings({\"rawtypes\"})\n    public void handleUnknownClass(Object o) {\n      // avoid materializing MapWriter / IteratorWriter to Map / List\n      // instead serialize them directly\n      if (o instanceof MapWriter) {\n        MapWriter mapWriter = (MapWriter) o;\n        startObject();\n        final boolean[] first = new boolean[1];\n        first[0] = true;\n        mapWriter._forEachEntry((k, v) -> {\n          if (first[0]) {\n            first[0] = false;\n          } else {\n            writeValueSeparator();\n          }\n          indent();\n          writeString(k.toString());\n          writeNameSeparator();\n          write(v);\n        });\n        endObject();\n      } else if (o instanceof IteratorWriter) {\n        IteratorWriter iteratorWriter = (IteratorWriter) o;\n        startArray();\n        final boolean[] first = new boolean[1];\n        first[0] = true;\n        try {\n          iteratorWriter.writeIter(new IteratorWriter.ItemWriter() {\n            @Override\n            public IteratorWriter.ItemWriter add(Object o) throws IOException {\n              if (first[0]) {\n                first[0] = false;\n              } else {\n                writeValueSeparator();\n              }\n              indent();\n              write(o);\n              return this;\n            }\n          });\n        } catch (IOException e) {\n          throw new RuntimeException(\"this should never happen\", e);\n        }\n        endArray();\n      } else {\n        super.handleUnknownClass(o);\n      }\n    }\n\n","sourceOld":"    @Override\n    @SuppressWarnings({\"rawtypes\"})\n    public void handleUnknownClass(Object o) {\n      if (o instanceof MapWriter) {\n        Map m = ((MapWriter) o).toMap(new LinkedHashMap<>());\n        write(m);\n      } else {\n        super.handleUnknownClass(o);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3c6e186729ee3923bfb510149cff66fae729d21","date":1602096373,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utils.MapWriterJSONWriter#handleUnknownClass(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utils.MapWriterJSONWriter#handleUnknownClass(Object).mjava","sourceNew":"    @Override\n    @SuppressWarnings({\"rawtypes\"})\n    public void handleUnknownClass(Object o) {\n      // avoid materializing MapWriter / IteratorWriter to Map / List\n      // instead serialize them directly\n      if (o instanceof MapWriter) {\n        MapWriter mapWriter = (MapWriter) o;\n        startObject();\n        final boolean[] first = new boolean[1];\n        first[0] = true;\n        int sz = mapWriter._size();\n        mapWriter._forEachEntry((k, v) -> {\n          if (first[0]) {\n            first[0] = false;\n          } else {\n            writeValueSeparator();\n          }\n          if (sz > 1) indent();\n          writeString(k.toString());\n          writeNameSeparator();\n          write(v);\n        });\n        endObject();\n      } else if (o instanceof IteratorWriter) {\n        IteratorWriter iteratorWriter = (IteratorWriter) o;\n        startArray();\n        final boolean[] first = new boolean[1];\n        first[0] = true;\n        try {\n          iteratorWriter.writeIter(new IteratorWriter.ItemWriter() {\n            @Override\n            public IteratorWriter.ItemWriter add(Object o) throws IOException {\n              if (first[0]) {\n                first[0] = false;\n              } else {\n                writeValueSeparator();\n              }\n              indent();\n              write(o);\n              return this;\n            }\n          });\n        } catch (IOException e) {\n          throw new RuntimeException(\"this should never happen\", e);\n        }\n        endArray();\n      } else {\n        super.handleUnknownClass(o);\n      }\n    }\n\n","sourceOld":"    @Override\n    @SuppressWarnings({\"rawtypes\"})\n    public void handleUnknownClass(Object o) {\n      // avoid materializing MapWriter / IteratorWriter to Map / List\n      // instead serialize them directly\n      if (o instanceof MapWriter) {\n        MapWriter mapWriter = (MapWriter) o;\n        startObject();\n        final boolean[] first = new boolean[1];\n        first[0] = true;\n        mapWriter._forEachEntry((k, v) -> {\n          if (first[0]) {\n            first[0] = false;\n          } else {\n            writeValueSeparator();\n          }\n          indent();\n          writeString(k.toString());\n          writeNameSeparator();\n          write(v);\n        });\n        endObject();\n      } else if (o instanceof IteratorWriter) {\n        IteratorWriter iteratorWriter = (IteratorWriter) o;\n        startArray();\n        final boolean[] first = new boolean[1];\n        first[0] = true;\n        try {\n          iteratorWriter.writeIter(new IteratorWriter.ItemWriter() {\n            @Override\n            public IteratorWriter.ItemWriter add(Object o) throws IOException {\n              if (first[0]) {\n                first[0] = false;\n              } else {\n                writeValueSeparator();\n              }\n              indent();\n              write(o);\n              return this;\n            }\n          });\n        } catch (IOException e) {\n          throw new RuntimeException(\"this should never happen\", e);\n        }\n        endArray();\n      } else {\n        super.handleUnknownClass(o);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76":["8476949555f799dff381770c01cfad051a264487"],"fb50877dc038c021eba3a70999fd1f6ed85001c1":["976feb6756f29529c6ce5b578e7d6fa8b1efcb30"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dfbc0735f81a71377d6600cec08bcce468958595":["8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76"],"b3c6e186729ee3923bfb510149cff66fae729d21":["233211c3dbff6f367588be5bbb4ac77f72eae193"],"233211c3dbff6f367588be5bbb4ac77f72eae193":["dfbc0735f81a71377d6600cec08bcce468958595"],"8476949555f799dff381770c01cfad051a264487":["c44cc06c26e456fe9c215072b79fce30babe3975"],"c44cc06c26e456fe9c215072b79fce30babe3975":["fb50877dc038c021eba3a70999fd1f6ed85001c1"],"976feb6756f29529c6ce5b578e7d6fa8b1efcb30":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b3c6e186729ee3923bfb510149cff66fae729d21"]},"commit2Childs":{"8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76":["dfbc0735f81a71377d6600cec08bcce468958595"],"fb50877dc038c021eba3a70999fd1f6ed85001c1":["c44cc06c26e456fe9c215072b79fce30babe3975"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["976feb6756f29529c6ce5b578e7d6fa8b1efcb30"],"dfbc0735f81a71377d6600cec08bcce468958595":["233211c3dbff6f367588be5bbb4ac77f72eae193"],"8476949555f799dff381770c01cfad051a264487":["8dc9df63ec3bc509a28d29b0ddcf6f14756b3e76"],"976feb6756f29529c6ce5b578e7d6fa8b1efcb30":["fb50877dc038c021eba3a70999fd1f6ed85001c1"],"b3c6e186729ee3923bfb510149cff66fae729d21":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"233211c3dbff6f367588be5bbb4ac77f72eae193":["b3c6e186729ee3923bfb510149cff66fae729d21"],"c44cc06c26e456fe9c215072b79fce30babe3975":["8476949555f799dff381770c01cfad051a264487"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}