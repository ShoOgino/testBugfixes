{"path":"solr/core/src/java/org/apache/solr/spelling/suggest/HighFrequencyDictionaryFactory#create(SolrCore,SolrIndexSearcher).mjava","commits":[{"id":"7f2e96099703c24c0c63d27806ba7020626b649b","date":1385214372,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/HighFrequencyDictionaryFactory#create(SolrCore,SolrIndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Dictionary create(SolrCore core, SolrIndexSearcher searcher) {\n    if(params == null) {\n      // should not happen; implies setParams was not called\n      throw new IllegalStateException(\"Value of params not set\");\n    }\n    String field = (String)params.get(SolrSpellChecker.FIELD);\n    \n    if (field == null) {\n      throw new IllegalArgumentException(SolrSpellChecker.FIELD + \" is a mandatory parameter\");\n    }\n    \n    float threshold = params.get(THRESHOLD_TOKEN_FREQUENCY) == null ? 0.0f\n        : (Float)params.get(THRESHOLD_TOKEN_FREQUENCY);\n    \n    return new HighFrequencyDictionary(searcher.getIndexReader(), field, threshold);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/spelling/suggest/HighFrequencyDictionaryFactory#create(SolrCore,SolrIndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Dictionary create(SolrCore core, SolrIndexSearcher searcher) {\n    if(params == null) {\n      // should not happen; implies setParams was not called\n      throw new IllegalStateException(\"Value of params not set\");\n    }\n    String field = (String)params.get(SolrSpellChecker.FIELD);\n    \n    if (field == null) {\n      throw new IllegalArgumentException(SolrSpellChecker.FIELD + \" is a mandatory parameter\");\n    }\n    \n    float threshold = params.get(THRESHOLD_TOKEN_FREQUENCY) == null ? 0.0f\n        : (Float)params.get(THRESHOLD_TOKEN_FREQUENCY);\n    \n    return new HighFrequencyDictionary(searcher.getIndexReader(), field, threshold);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7f2e96099703c24c0c63d27806ba7020626b649b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7f2e96099703c24c0c63d27806ba7020626b649b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7f2e96099703c24c0c63d27806ba7020626b649b"]},"commit2Childs":{"7f2e96099703c24c0c63d27806ba7020626b649b":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7f2e96099703c24c0c63d27806ba7020626b649b","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}