{"path":"solr/core/src/java/org/apache/solr/search/stats/ExactStatsCache#get(SolrQueryRequest).mjava","commits":[{"id":"a94e45463a0089149b0d148ae5369140e7f54b8c","date":1419231934,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/stats/ExactStatsCache#get(SolrQueryRequest).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public StatsSource get(SolrQueryRequest req) {\n    Map<String,CollectionStats> currentGlobalColStats = (Map<String,CollectionStats>) req.getContext().get(CURRENT_GLOBAL_COL_STATS);\n    Map<String,TermStats> currentGlobalTermStats = (Map<String,TermStats>) req.getContext().get(CURRENT_GLOBAL_TERM_STATS);\n    if (currentGlobalColStats == null) {\n     currentGlobalColStats = Collections.emptyMap(); \n    }\n    if (currentGlobalTermStats == null) {\n      currentGlobalTermStats = Collections.emptyMap();\n    }\n    LOG.debug(\"Returning StatsSource. Collection stats={}, Term stats size= {}\", currentGlobalColStats, currentGlobalTermStats.size());\n    return new ExactStatsSource(currentGlobalTermStats, currentGlobalColStats);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc9c42f0c1f89f2b3964f2d39efe57860e578838","date":1438774812,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/stats/ExactStatsCache#get(SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/stats/ExactStatsCache#get(SolrQueryRequest).mjava","sourceNew":"  @Override\n  public StatsSource get(SolrQueryRequest req) {\n    Map<String,CollectionStats> currentGlobalColStats = (Map<String,CollectionStats>) req.getContext().get(CURRENT_GLOBAL_COL_STATS);\n    Map<String,TermStats> currentGlobalTermStats = (Map<String,TermStats>) req.getContext().get(CURRENT_GLOBAL_TERM_STATS);\n    if (currentGlobalColStats == null) {\n     currentGlobalColStats = Collections.emptyMap();\n    }\n    if (currentGlobalTermStats == null) {\n      currentGlobalTermStats = Collections.emptyMap();\n    }\n    LOG.debug(\"Returning StatsSource. Collection stats={}, Term stats size= {}\", currentGlobalColStats, currentGlobalTermStats.size());\n    return new ExactStatsSource(currentGlobalTermStats, currentGlobalColStats);\n  }\n\n","sourceOld":"  @Override\n  public StatsSource get(SolrQueryRequest req) {\n    Map<String,CollectionStats> currentGlobalColStats = (Map<String,CollectionStats>) req.getContext().get(CURRENT_GLOBAL_COL_STATS);\n    Map<String,TermStats> currentGlobalTermStats = (Map<String,TermStats>) req.getContext().get(CURRENT_GLOBAL_TERM_STATS);\n    if (currentGlobalColStats == null) {\n     currentGlobalColStats = Collections.emptyMap(); \n    }\n    if (currentGlobalTermStats == null) {\n      currentGlobalTermStats = Collections.emptyMap();\n    }\n    LOG.debug(\"Returning StatsSource. Collection stats={}, Term stats size= {}\", currentGlobalColStats, currentGlobalTermStats.size());\n    return new ExactStatsSource(currentGlobalTermStats, currentGlobalColStats);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/stats/ExactStatsCache#get(SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/stats/ExactStatsCache#get(SolrQueryRequest).mjava","sourceNew":"  @Override\n  public StatsSource get(SolrQueryRequest req) {\n    Map<String,CollectionStats> currentGlobalColStats = (Map<String,CollectionStats>) req.getContext().get(CURRENT_GLOBAL_COL_STATS);\n    Map<String,TermStats> currentGlobalTermStats = (Map<String,TermStats>) req.getContext().get(CURRENT_GLOBAL_TERM_STATS);\n    if (currentGlobalColStats == null) {\n     currentGlobalColStats = Collections.emptyMap();\n    }\n    if (currentGlobalTermStats == null) {\n      currentGlobalTermStats = Collections.emptyMap();\n    }\n    log.debug(\"Returning StatsSource. Collection stats={}, Term stats size= {}\", currentGlobalColStats, currentGlobalTermStats.size());\n    return new ExactStatsSource(currentGlobalTermStats, currentGlobalColStats);\n  }\n\n","sourceOld":"  @Override\n  public StatsSource get(SolrQueryRequest req) {\n    Map<String,CollectionStats> currentGlobalColStats = (Map<String,CollectionStats>) req.getContext().get(CURRENT_GLOBAL_COL_STATS);\n    Map<String,TermStats> currentGlobalTermStats = (Map<String,TermStats>) req.getContext().get(CURRENT_GLOBAL_TERM_STATS);\n    if (currentGlobalColStats == null) {\n     currentGlobalColStats = Collections.emptyMap();\n    }\n    if (currentGlobalTermStats == null) {\n      currentGlobalTermStats = Collections.emptyMap();\n    }\n    LOG.debug(\"Returning StatsSource. Collection stats={}, Term stats size= {}\", currentGlobalColStats, currentGlobalTermStats.size());\n    return new ExactStatsSource(currentGlobalTermStats, currentGlobalColStats);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df72a23fb74bebe914e3f3972063a884327c0436","date":1570470832,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/stats/ExactStatsCache#doGet(SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/stats/ExactStatsCache#get(SolrQueryRequest).mjava","sourceNew":"  @Override\n  protected StatsSource doGet(SolrQueryRequest req) {\n    Map<String,CollectionStats> currentGlobalColStats = (Map<String,CollectionStats>) req.getContext().getOrDefault(CURRENT_GLOBAL_COL_STATS, Collections.emptyMap());\n    Map<String,TermStats> currentGlobalTermStats = (Map<String,TermStats>) req.getContext().getOrDefault(CURRENT_GLOBAL_TERM_STATS, Collections.emptyMap());\n    log.debug(\"Returning StatsSource. Collection stats={}, Term stats size= {}\", currentGlobalColStats, currentGlobalTermStats.size());\n    return new ExactStatsSource(statsCacheMetrics, currentGlobalTermStats, currentGlobalColStats);\n  }\n\n","sourceOld":"  @Override\n  public StatsSource get(SolrQueryRequest req) {\n    Map<String,CollectionStats> currentGlobalColStats = (Map<String,CollectionStats>) req.getContext().get(CURRENT_GLOBAL_COL_STATS);\n    Map<String,TermStats> currentGlobalTermStats = (Map<String,TermStats>) req.getContext().get(CURRENT_GLOBAL_TERM_STATS);\n    if (currentGlobalColStats == null) {\n     currentGlobalColStats = Collections.emptyMap();\n    }\n    if (currentGlobalTermStats == null) {\n      currentGlobalTermStats = Collections.emptyMap();\n    }\n    log.debug(\"Returning StatsSource. Collection stats={}, Term stats size= {}\", currentGlobalColStats, currentGlobalTermStats.size());\n    return new ExactStatsSource(currentGlobalTermStats, currentGlobalColStats);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":4,"author":"jimczi","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/stats/ExactStatsCache#get(SolrQueryRequest).mjava","sourceNew":null,"sourceOld":"  @Override\n  public StatsSource get(SolrQueryRequest req) {\n    Map<String,CollectionStats> currentGlobalColStats = (Map<String,CollectionStats>) req.getContext().get(CURRENT_GLOBAL_COL_STATS);\n    Map<String,TermStats> currentGlobalTermStats = (Map<String,TermStats>) req.getContext().get(CURRENT_GLOBAL_TERM_STATS);\n    if (currentGlobalColStats == null) {\n     currentGlobalColStats = Collections.emptyMap();\n    }\n    if (currentGlobalTermStats == null) {\n      currentGlobalTermStats = Collections.emptyMap();\n    }\n    log.debug(\"Returning StatsSource. Collection stats={}, Term stats size= {}\", currentGlobalColStats, currentGlobalTermStats.size());\n    return new ExactStatsSource(currentGlobalTermStats, currentGlobalColStats);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a94e45463a0089149b0d148ae5369140e7f54b8c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"df72a23fb74bebe914e3f3972063a884327c0436":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"cc9c42f0c1f89f2b3964f2d39efe57860e578838":["a94e45463a0089149b0d148ae5369140e7f54b8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df72a23fb74bebe914e3f3972063a884327c0436"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["cc9c42f0c1f89f2b3964f2d39efe57860e578838"],"b0b597c65628ca9e73913a07e81691f8229bae35":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","df72a23fb74bebe914e3f3972063a884327c0436"]},"commit2Childs":{"a94e45463a0089149b0d148ae5369140e7f54b8c":["cc9c42f0c1f89f2b3964f2d39efe57860e578838"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a94e45463a0089149b0d148ae5369140e7f54b8c"],"df72a23fb74bebe914e3f3972063a884327c0436":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"cc9c42f0c1f89f2b3964f2d39efe57860e578838":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["df72a23fb74bebe914e3f3972063a884327c0436","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}