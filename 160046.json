{"path":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkOrOnDisk().mjava","commits":[{"id":"7917a219001fa51c4289d6a8e1a98606995170b7","date":1376673362,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkOrOnDisk().mjava","pathOld":"/dev/null","sourceNew":"  // TODO: Solr 5.0. when we remove the default solr.xml from configSolrXmlOld this should start failing.\n  @Test\n  public void testNotInZkOrOnDisk() throws Exception {\n    try {\n      System.clearProperty(\"solr.solrxml.location\");\n      System.setProperty(\"hostPort\", \"8787\");\n      setUpZkAndDiskXml(false, false); // solr.xml not on disk either\n      assertEquals(\"Should have gotten the default port from the hard-coded default solr.xml file via sys prop.\",\n          cfg.getZkHostPort(), \"8787\");\n    } finally {\n      closeZK();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkOrOnDisk().mjava","pathOld":"/dev/null","sourceNew":"  // TODO: Solr 5.0. when we remove the default solr.xml from configSolrXmlOld this should start failing.\n  @Test\n  public void testNotInZkOrOnDisk() throws Exception {\n    try {\n      System.clearProperty(\"solr.solrxml.location\");\n      System.setProperty(\"hostPort\", \"8787\");\n      setUpZkAndDiskXml(false, false); // solr.xml not on disk either\n      assertEquals(\"Should have gotten the default port from the hard-coded default solr.xml file via sys prop.\",\n          cfg.getZkHostPort(), \"8787\");\n    } finally {\n      closeZK();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d","date":1377475564,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkOrOnDisk().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkOrOnDisk().mjava","sourceNew":"  @Test\n  public void testNotInZkOrOnDisk() throws Exception {\n    try {\n      System.clearProperty(\"solr.solrxml.location\");\n      System.setProperty(\"hostPort\", \"8787\");\n      setUpZkAndDiskXml(false, false); // solr.xml not on disk either\n      fail(\"Should have thrown an exception here\");\n    } catch (InvocationTargetException ite) {\n      assertTrue(\"Should be failing to create default solr.xml in code\",\n          ite.getTargetException().getCause().getMessage().indexOf(\"solr.xml does not exist\") != -1);\n    } finally {\n      closeZK();\n    }\n  }\n\n","sourceOld":"  // TODO: Solr 5.0. when we remove the default solr.xml from configSolrXmlOld this should start failing.\n  @Test\n  public void testNotInZkOrOnDisk() throws Exception {\n    try {\n      System.clearProperty(\"solr.solrxml.location\");\n      System.setProperty(\"hostPort\", \"8787\");\n      setUpZkAndDiskXml(false, false); // solr.xml not on disk either\n      assertEquals(\"Should have gotten the default port from the hard-coded default solr.xml file via sys prop.\",\n          cfg.getZkHostPort(), \"8787\");\n    } finally {\n      closeZK();\n    }\n  }\n\n","bugFix":["7917a219001fa51c4289d6a8e1a98606995170b7"],"bugIntro":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkOrOnDisk().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testNotInZkOrOnDisk() throws Exception {\n    try {\n      System.clearProperty(\"solr.solrxml.location\");\n      System.setProperty(\"hostPort\", \"8787\");\n      setUpZkAndDiskXml(false, false); // solr.xml not on disk either\n      fail(\"Should have thrown an exception here\");\n    } catch (InvocationTargetException ite) {\n      assertTrue(\"Should be failing to create default solr.xml in code\",\n          ite.getTargetException().getCause().getMessage().indexOf(\"solr.xml does not exist\") != -1);\n    } finally {\n      closeZK();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a877077e0a22a42eebce7d1052c58e97d3afb12d","date":1405981118,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkOrOnDisk().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkOrOnDisk().mjava","sourceNew":"  @Test\n  public void testNotInZkOrOnDisk() throws Exception {\n    try {\n      System.clearProperty(\"solr.solrxml.location\");\n      System.setProperty(\"hostPort\", \"8787\");\n      setUpZkAndDiskXml(false, false); // solr.xml not on disk either\n      fail(\"Should have thrown an exception here\");\n    } catch (InvocationTargetException ite) {\n      assertTrue(\"Should be failing to create default solr.xml in code\",\n          ite.getCause().getMessage().contains(\"solr.xml does not exist\"));\n    } finally {\n      closeZK();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testNotInZkOrOnDisk() throws Exception {\n    try {\n      System.clearProperty(\"solr.solrxml.location\");\n      System.setProperty(\"hostPort\", \"8787\");\n      setUpZkAndDiskXml(false, false); // solr.xml not on disk either\n      fail(\"Should have thrown an exception here\");\n    } catch (InvocationTargetException ite) {\n      assertTrue(\"Should be failing to create default solr.xml in code\",\n          ite.getTargetException().getCause().getMessage().indexOf(\"solr.xml does not exist\") != -1);\n    } finally {\n      closeZK();\n    }\n  }\n\n","bugFix":["e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f9bf0405a1117d91d112b095f83c2df500c7b3c","date":1437869727,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkOrOnDisk().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkOrOnDisk().mjava","sourceNew":"  @Test\n  public void testNotInZkOrOnDisk() throws Exception {\n    try {\n      System.setProperty(\"hostPort\", \"8787\");\n      setUpZkAndDiskXml(false, false); // solr.xml not on disk either\n      fail(\"Should have thrown an exception here\");\n    } catch (InvocationTargetException ite) {\n      assertTrue(\"Should be failing to create default solr.xml in code\",\n          ite.getCause().getMessage().contains(\"solr.xml does not exist\"));\n    } finally {\n      closeZK();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testNotInZkOrOnDisk() throws Exception {\n    try {\n      System.clearProperty(\"solr.solrxml.location\");\n      System.setProperty(\"hostPort\", \"8787\");\n      setUpZkAndDiskXml(false, false); // solr.xml not on disk either\n      fail(\"Should have thrown an exception here\");\n    } catch (InvocationTargetException ite) {\n      assertTrue(\"Should be failing to create default solr.xml in code\",\n          ite.getCause().getMessage().contains(\"solr.xml does not exist\"));\n    } finally {\n      closeZK();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4383b91725e5b335d0a9d5f24b122b813dddd0cc","date":1442106431,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkOrOnDisk().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkOrOnDisk().mjava","sourceNew":"  @Test\n  public void testNotInZkOrOnDisk() throws Exception {\n    try {\n      System.setProperty(\"hostPort\", \"8787\");\n      setUpZkAndDiskXml(false, false); // solr.xml not on disk either\n      fail(\"Should have thrown an exception here\");\n    } catch (SolrException solre) {\n      assertTrue(\"Should be failing to create default solr.xml in code\",\n          solre.getMessage().contains(\"solr.xml does not exist\"));\n    } finally {\n      closeZK();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testNotInZkOrOnDisk() throws Exception {\n    try {\n      System.setProperty(\"hostPort\", \"8787\");\n      setUpZkAndDiskXml(false, false); // solr.xml not on disk either\n      fail(\"Should have thrown an exception here\");\n    } catch (InvocationTargetException ite) {\n      assertTrue(\"Should be failing to create default solr.xml in code\",\n          ite.getCause().getMessage().contains(\"solr.xml does not exist\"));\n    } finally {\n      closeZK();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92f789dbd1886e4b468e61b0def88b29a3f55228","date":1533844010,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkOrOnDisk().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkOrOnDisk().mjava","sourceNew":"  @Test\n  public void testNotInZkOrOnDisk() throws Exception {\n    try {\n      SolrException e = expectThrows(SolrException.class, () -> {\n        System.setProperty(\"hostPort\", \"8787\");\n        setUpZkAndDiskXml(false, false); // solr.xml not on disk either\n      });\n      assertTrue(\"Should be failing to create default solr.xml in code\",\n          e.getMessage().contains(\"solr.xml does not exist\"));\n    } finally {\n      closeZK();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testNotInZkOrOnDisk() throws Exception {\n    try {\n      System.setProperty(\"hostPort\", \"8787\");\n      setUpZkAndDiskXml(false, false); // solr.xml not on disk either\n      fail(\"Should have thrown an exception here\");\n    } catch (SolrException solre) {\n      assertTrue(\"Should be failing to create default solr.xml in code\",\n          solre.getMessage().contains(\"solr.xml does not exist\"));\n    } finally {\n      closeZK();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d":["7917a219001fa51c4289d6a8e1a98606995170b7"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"31d4861802ca404d78ca1d15f4550eec415b9199":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7917a219001fa51c4289d6a8e1a98606995170b7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"92f789dbd1886e4b468e61b0def88b29a3f55228":["4383b91725e5b335d0a9d5f24b122b813dddd0cc"],"4383b91725e5b335d0a9d5f24b122b813dddd0cc":["0f9bf0405a1117d91d112b095f83c2df500c7b3c"],"0f9bf0405a1117d91d112b095f83c2df500c7b3c":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"a877077e0a22a42eebce7d1052c58e97d3afb12d":["e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"7917a219001fa51c4289d6a8e1a98606995170b7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["92f789dbd1886e4b468e61b0def88b29a3f55228"]},"commit2Childs":{"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","a877077e0a22a42eebce7d1052c58e97d3afb12d"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","7917a219001fa51c4289d6a8e1a98606995170b7"],"92f789dbd1886e4b468e61b0def88b29a3f55228":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4383b91725e5b335d0a9d5f24b122b813dddd0cc":["92f789dbd1886e4b468e61b0def88b29a3f55228"],"0f9bf0405a1117d91d112b095f83c2df500c7b3c":["4383b91725e5b335d0a9d5f24b122b813dddd0cc"],"a877077e0a22a42eebce7d1052c58e97d3afb12d":["0f9bf0405a1117d91d112b095f83c2df500c7b3c"],"7917a219001fa51c4289d6a8e1a98606995170b7":["e0571cb12a71d379cc6bd0d3b70fe1d8867a109d","31d4861802ca404d78ca1d15f4550eec415b9199"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}