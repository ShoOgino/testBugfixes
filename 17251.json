{"path":"modules/join/src/java/org/apache/lucene/search/join/BlockJoinCollector#enroll(BlockJoinQuery,BlockJoinQuery.BlockJoinScorer).mjava","commits":[{"id":"89c5555e75149b469a7756e82bd740777cfb584a","date":1313615559,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/join/src/java/org/apache/lucene/search/join/BlockJoinCollector#enroll(BlockJoinQuery,BlockJoinQuery.BlockJoinScorer).mjava","pathOld":"/dev/null","sourceNew":"  private void enroll(BlockJoinQuery query, BlockJoinQuery.BlockJoinScorer scorer) {\n    final Integer slot = joinQueryID.get(query);\n    if (slot == null) {\n      joinQueryID.put(query, joinScorers.length);\n      //System.out.println(\"found JQ: \" + query + \" slot=\" + joinScorers.length);\n      final BlockJoinQuery.BlockJoinScorer[] newArray = new BlockJoinQuery.BlockJoinScorer[1+joinScorers.length];\n      System.arraycopy(joinScorers, 0, newArray, 0, joinScorers.length);\n      joinScorers = newArray;\n      joinScorers[joinScorers.length-1] = scorer;\n    } else {\n      joinScorers[slot] = scorer;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bd4a7478aca8c3880512b730b28bf3239340635","date":1326554224,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinCollector#enroll(ToParentBlockJoinQuery,ToParentBlockJoinQuery.BlockJoinScorer).mjava","pathOld":"modules/join/src/java/org/apache/lucene/search/join/BlockJoinCollector#enroll(BlockJoinQuery,BlockJoinQuery.BlockJoinScorer).mjava","sourceNew":"  private void enroll(ToParentBlockJoinQuery query, ToParentBlockJoinQuery.BlockJoinScorer scorer) {\n    final Integer slot = joinQueryID.get(query);\n    if (slot == null) {\n      joinQueryID.put(query, joinScorers.length);\n      //System.out.println(\"found JQ: \" + query + \" slot=\" + joinScorers.length);\n      final ToParentBlockJoinQuery.BlockJoinScorer[] newArray = new ToParentBlockJoinQuery.BlockJoinScorer[1+joinScorers.length];\n      System.arraycopy(joinScorers, 0, newArray, 0, joinScorers.length);\n      joinScorers = newArray;\n      joinScorers[joinScorers.length-1] = scorer;\n    } else {\n      joinScorers[slot] = scorer;\n    }\n  }\n\n","sourceOld":"  private void enroll(BlockJoinQuery query, BlockJoinQuery.BlockJoinScorer scorer) {\n    final Integer slot = joinQueryID.get(query);\n    if (slot == null) {\n      joinQueryID.put(query, joinScorers.length);\n      //System.out.println(\"found JQ: \" + query + \" slot=\" + joinScorers.length);\n      final BlockJoinQuery.BlockJoinScorer[] newArray = new BlockJoinQuery.BlockJoinScorer[1+joinScorers.length];\n      System.arraycopy(joinScorers, 0, newArray, 0, joinScorers.length);\n      joinScorers = newArray;\n      joinScorers[joinScorers.length-1] = scorer;\n    } else {\n      joinScorers[slot] = scorer;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6bd4a7478aca8c3880512b730b28bf3239340635":["89c5555e75149b469a7756e82bd740777cfb584a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"89c5555e75149b469a7756e82bd740777cfb584a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6bd4a7478aca8c3880512b730b28bf3239340635"]},"commit2Childs":{"6bd4a7478aca8c3880512b730b28bf3239340635":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["89c5555e75149b469a7756e82bd740777cfb584a"],"89c5555e75149b469a7756e82bd740777cfb584a":["6bd4a7478aca8c3880512b730b28bf3239340635"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}