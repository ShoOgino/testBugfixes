{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene46/Lucene46FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","commits":[{"id":"8435160e9702b19398118ddf76b61c846612b6a4","date":1380349140,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene46/Lucene46FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","pathOld":"/dev/null","sourceNew":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else if (b == 4) {\n      return DocValuesType.SORTED_SET;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b + \" (resource=\" + input + \")\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["9a70ce9bddc6f985feb8e5e182aebe20872328d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d14ffaac9c4a4a2c750bf0cd956506802561e062","date":1402602036,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene46/Lucene46FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene46/Lucene46FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","sourceNew":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else if (b == 4) {\n      return DocValuesType.SORTED_SET;\n    } else if (b == 5) {\n      return DocValuesType.SORTED_NUMERIC;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b + \" (resource=\" + input + \")\");\n    }\n  }\n\n","sourceOld":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else if (b == 4) {\n      return DocValuesType.SORTED_SET;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b + \" (resource=\" + input + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene46/Lucene46FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene46/Lucene46FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","sourceNew":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else if (b == 4) {\n      return DocValuesType.SORTED_SET;\n    } else if (b == 5) {\n      return DocValuesType.SORTED_NUMERIC;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b + \" (resource=\" + input + \")\");\n    }\n  }\n\n","sourceOld":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else if (b == 4) {\n      return DocValuesType.SORTED_SET;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b + \" (resource=\" + input + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a70ce9bddc6f985feb8e5e182aebe20872328d4","date":1411172748,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene46/Lucene46FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene46/Lucene46FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","sourceNew":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else if (b == 4) {\n      return DocValuesType.SORTED_SET;\n    } else if (b == 5) {\n      return DocValuesType.SORTED_NUMERIC;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b, input);\n    }\n  }\n\n","sourceOld":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else if (b == 4) {\n      return DocValuesType.SORTED_SET;\n    } else if (b == 5) {\n      return DocValuesType.SORTED_NUMERIC;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b + \" (resource=\" + input + \")\");\n    }\n  }\n\n","bugFix":["8435160e9702b19398118ddf76b61c846612b6a4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77d177b70aefca41f3edc910b0a703c76283d8b6","date":1411650976,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene46/Lucene46FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene46/Lucene46FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","sourceNew":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else if (b == 4) {\n      return DocValuesType.SORTED_SET;\n    } else if (b == 5) {\n      return DocValuesType.SORTED_NUMERIC;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b, input);\n    }\n  }\n\n","sourceOld":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else if (b == 4) {\n      return DocValuesType.SORTED_SET;\n    } else if (b == 5) {\n      return DocValuesType.SORTED_NUMERIC;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b, input);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f6bd27530a2846413fe2d00030493c0e2d3a072","date":1411811855,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene46/Lucene46FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene46/Lucene46FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","sourceNew":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else if (b == 4) {\n      return DocValuesType.SORTED_SET;\n    } else if (b == 5) {\n      return DocValuesType.SORTED_NUMERIC;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b, input);\n    }\n  }\n\n","sourceOld":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else if (b == 4) {\n      return DocValuesType.SORTED_SET;\n    } else if (b == 5) {\n      return DocValuesType.SORTED_NUMERIC;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b, input);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9a70ce9bddc6f985feb8e5e182aebe20872328d4":["d14ffaac9c4a4a2c750bf0cd956506802561e062"],"77d177b70aefca41f3edc910b0a703c76283d8b6":["9a70ce9bddc6f985feb8e5e182aebe20872328d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["9a70ce9bddc6f985feb8e5e182aebe20872328d4","77d177b70aefca41f3edc910b0a703c76283d8b6"],"8435160e9702b19398118ddf76b61c846612b6a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["8435160e9702b19398118ddf76b61c846612b6a4","d14ffaac9c4a4a2c750bf0cd956506802561e062"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5f6bd27530a2846413fe2d00030493c0e2d3a072"],"d14ffaac9c4a4a2c750bf0cd956506802561e062":["8435160e9702b19398118ddf76b61c846612b6a4"]},"commit2Childs":{"9a70ce9bddc6f985feb8e5e182aebe20872328d4":["77d177b70aefca41f3edc910b0a703c76283d8b6","5f6bd27530a2846413fe2d00030493c0e2d3a072"],"77d177b70aefca41f3edc910b0a703c76283d8b6":["5f6bd27530a2846413fe2d00030493c0e2d3a072"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8435160e9702b19398118ddf76b61c846612b6a4"],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8435160e9702b19398118ddf76b61c846612b6a4":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","d14ffaac9c4a4a2c750bf0cd956506802561e062"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":[],"d14ffaac9c4a4a2c750bf0cd956506802561e062":["9a70ce9bddc6f985feb8e5e182aebe20872328d4","c6f080a2ab37c464dd98db173f6cbf10dc74f211"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}