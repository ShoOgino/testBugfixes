{"path":"solr/solrj/src/java/org/apache/solr/common/SolrInputField#addValue(Object).mjava","commits":[{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputField#addValue(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrInputField#addValue(Object,float).mjava","sourceNew":"  /**\n   * Add values to a field.  If the added value is a collection, each value\n   * will be added individually.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void addValue(Object v) {\n    if( value == null ) {\n      if ( v instanceof Collection ) {\n        Collection<Object> c = new ArrayList<>( 3 );\n        for ( Object o : (Collection<Object>)v ) {\n          c.add( o );\n        }\n        setValue(c);\n      } else {\n        setValue(v);\n      }\n\n      return;\n    }\n    \n    Collection<Object> vals = null;\n    if( value instanceof Collection ) {\n      vals = (Collection<Object>)value;\n    }\n    else {\n      vals = new ArrayList<>( 3 );\n      vals.add( value );\n      value = vals;\n    }\n    \n    // Add the new values to a collection\n    if( v instanceof Iterable ) {\n      for( Object o : (Iterable<Object>)v ) {\n        vals.add( o );\n      }\n    }\n    else if( v instanceof Object[] ) {\n      for( Object o : (Object[])v ) {\n        vals.add( o );\n      }\n    }\n    else {\n      vals.add( v );\n    }\n  }\n\n","sourceOld":"  /**\n   * Add values to a field.  If the added value is a collection, each value\n   * will be added individually.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void addValue(Object v, float b) {\n    if( value == null ) {\n      if ( v instanceof Collection ) {\n        Collection<Object> c = new ArrayList<>( 3 );\n        for ( Object o : (Collection<Object>)v ) {\n          c.add( o );\n        }\n        setValue(c, b);\n      } else {\n        setValue(v, b);\n      }\n\n      return;\n    }\n    \n    // The lucene API and solr XML field specification make it possible to set boosts\n    // on multi-value fields even though lucene indexing does not support this.\n    // To keep behavior consistent with what happens in the lucene index, we accumulate\n    // the product of all boosts specified for this field.\n    boost *= b;\n    \n    Collection<Object> vals = null;\n    if( value instanceof Collection ) {\n      vals = (Collection<Object>)value;\n    }\n    else {\n      vals = new ArrayList<>( 3 );\n      vals.add( value );\n      value = vals;\n    }\n    \n    // Add the new values to a collection\n    if( v instanceof Iterable ) {\n      for( Object o : (Iterable<Object>)v ) {\n        vals.add( o );\n      }\n    }\n    else if( v instanceof Object[] ) {\n      for( Object o : (Object[])v ) {\n        vals.add( o );\n      }\n    }\n    else {\n      vals.add( v );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9440b5b1eec7788a0edd10385e4d7a614d1024d7","date":1528992889,"type":3,"author":"user","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputField#addValue(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrInputField#addValue(Object).mjava","sourceNew":"  /**\n   * Add values to a field.  If the added value is a collection, each value\n   * will be added individually.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void addValue(Object v) {\n    if( value == null ) {\n      if ( v instanceof Collection ) {\n        Collection<Object> c = new ArrayList<>( 3 );\n        for ( Object o : (Collection<Object>)v ) {\n          c.add( o );\n        }\n        setValue(c);\n      } else {\n        setValue(v);\n      }\n\n      return;\n    }\n    \n    Collection<Object> vals = null;\n    if( value instanceof Collection ) {\n      vals = (Collection<Object>)value;\n    }\n    else {\n      vals = new ArrayList<>( 3 );\n      vals.add( value );\n      value = vals;\n    }\n    \n    // Add the new values to a collection, if childDoc add as is without iteration\n    if( v instanceof Iterable && !(v instanceof SolrDocumentBase)) {\n      for( Object o : (Iterable<Object>)v ) {\n        vals.add( o );\n      }\n    }\n    else if( v instanceof Object[] ) {\n      for( Object o : (Object[])v ) {\n        vals.add( o );\n      }\n    }\n    else {\n      vals.add( v );\n    }\n  }\n\n","sourceOld":"  /**\n   * Add values to a field.  If the added value is a collection, each value\n   * will be added individually.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void addValue(Object v) {\n    if( value == null ) {\n      if ( v instanceof Collection ) {\n        Collection<Object> c = new ArrayList<>( 3 );\n        for ( Object o : (Collection<Object>)v ) {\n          c.add( o );\n        }\n        setValue(c);\n      } else {\n        setValue(v);\n      }\n\n      return;\n    }\n    \n    Collection<Object> vals = null;\n    if( value instanceof Collection ) {\n      vals = (Collection<Object>)value;\n    }\n    else {\n      vals = new ArrayList<>( 3 );\n      vals.add( value );\n      value = vals;\n    }\n    \n    // Add the new values to a collection\n    if( v instanceof Iterable ) {\n      for( Object o : (Iterable<Object>)v ) {\n        vals.add( o );\n      }\n    }\n    else if( v instanceof Object[] ) {\n      for( Object o : (Object[])v ) {\n        vals.add( o );\n      }\n    }\n    else {\n      vals.add( v );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputField#addValue(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrInputField#addValue(Object).mjava","sourceNew":"  /**\n   * Add values to a field.  If the added value is a collection, each value\n   * will be added individually.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void addValue(Object v) {\n    if( value == null ) {\n      if ( v instanceof Collection ) {\n        Collection<Object> c = new ArrayList<>( 3 );\n        for ( Object o : (Collection<Object>)v ) {\n          c.add( o );\n        }\n        setValue(c);\n      } else {\n        setValue(v);\n      }\n\n      return;\n    }\n    \n    Collection<Object> vals = null;\n    if( value instanceof Collection ) {\n      vals = (Collection<Object>)value;\n    }\n    else {\n      vals = new ArrayList<>( 3 );\n      vals.add( value );\n      value = vals;\n    }\n    \n    // Add the new values to a collection, if childDoc add as is without iteration\n    if( v instanceof Iterable && !(v instanceof SolrDocumentBase)) {\n      for( Object o : (Iterable<Object>)v ) {\n        vals.add( o );\n      }\n    }\n    else if( v instanceof Object[] ) {\n      for( Object o : (Object[])v ) {\n        vals.add( o );\n      }\n    }\n    else {\n      vals.add( v );\n    }\n  }\n\n","sourceOld":"  /**\n   * Add values to a field.  If the added value is a collection, each value\n   * will be added individually.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void addValue(Object v) {\n    if( value == null ) {\n      if ( v instanceof Collection ) {\n        Collection<Object> c = new ArrayList<>( 3 );\n        for ( Object o : (Collection<Object>)v ) {\n          c.add( o );\n        }\n        setValue(c);\n      } else {\n        setValue(v);\n      }\n\n      return;\n    }\n    \n    Collection<Object> vals = null;\n    if( value instanceof Collection ) {\n      vals = (Collection<Object>)value;\n    }\n    else {\n      vals = new ArrayList<>( 3 );\n      vals.add( value );\n      value = vals;\n    }\n    \n    // Add the new values to a collection\n    if( v instanceof Iterable ) {\n      for( Object o : (Iterable<Object>)v ) {\n        vals.add( o );\n      }\n    }\n    else if( v instanceof Object[] ) {\n      for( Object o : (Object[])v ) {\n        vals.add( o );\n      }\n    }\n    else {\n      vals.add( v );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputField#addValue(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrInputField#addValue(Object).mjava","sourceNew":"  /**\n   * Add values to a field.  If the added value is a collection, each value\n   * will be added individually.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void addValue(Object v) {\n    if( value == null ) {\n      if ( v instanceof Collection ) {\n        Collection<Object> c = new ArrayList<>( 3 );\n        for ( Object o : (Collection<Object>)v ) {\n          c.add( o );\n        }\n        setValue(c);\n      } else {\n        setValue(v);\n      }\n\n      return;\n    }\n    \n    Collection<Object> vals = null;\n    if( value instanceof Collection ) {\n      vals = (Collection<Object>)value;\n    }\n    else {\n      vals = new ArrayList<>( 3 );\n      vals.add( value );\n      value = vals;\n    }\n    \n    // Add the new values to a collection, if childDoc add as is without iteration\n    if( v instanceof Iterable && !(v instanceof SolrDocumentBase)) {\n      for( Object o : (Iterable<Object>)v ) {\n        vals.add( o );\n      }\n    }\n    else if( v instanceof Object[] ) {\n      for( Object o : (Object[])v ) {\n        vals.add( o );\n      }\n    }\n    else {\n      vals.add( v );\n    }\n  }\n\n","sourceOld":"  /**\n   * Add values to a field.  If the added value is a collection, each value\n   * will be added individually.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void addValue(Object v) {\n    if( value == null ) {\n      if ( v instanceof Collection ) {\n        Collection<Object> c = new ArrayList<>( 3 );\n        for ( Object o : (Collection<Object>)v ) {\n          c.add( o );\n        }\n        setValue(c);\n      } else {\n        setValue(v);\n      }\n\n      return;\n    }\n    \n    Collection<Object> vals = null;\n    if( value instanceof Collection ) {\n      vals = (Collection<Object>)value;\n    }\n    else {\n      vals = new ArrayList<>( 3 );\n      vals.add( value );\n      value = vals;\n    }\n    \n    // Add the new values to a collection\n    if( v instanceof Iterable ) {\n      for( Object o : (Iterable<Object>)v ) {\n        vals.add( o );\n      }\n    }\n    else if( v instanceof Object[] ) {\n      for( Object o : (Object[])v ) {\n        vals.add( o );\n      }\n    }\n    else {\n      vals.add( v );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputField#addValue(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrInputField#addValue(Object).mjava","sourceNew":"  /**\n   * Add values to a field.  If the added value is a collection, each value\n   * will be added individually.\n   */\n  public void addValue(Object v) {\n    if( value == null ) {\n      if ( v instanceof Collection ) {\n        Collection<Object> c = new ArrayList<>( 3 );\n        for ( Object o : (Collection<Object>)v ) {\n          c.add( o );\n        }\n        setValue(c);\n      } else {\n        setValue(v);\n      }\n\n      return;\n    }\n    \n    Collection<Object> vals = null;\n    if( value instanceof Collection ) {\n      vals = (Collection<Object>)value;\n    }\n    else {\n      vals = new ArrayList<>( 3 );\n      vals.add( value );\n      value = vals;\n    }\n    \n    // Add the new values to a collection, if childDoc add as is without iteration\n    if( v instanceof Iterable && !(v instanceof SolrDocumentBase)) {\n      for( Object o : (Iterable<Object>)v ) {\n        vals.add( o );\n      }\n    }\n    else if( v instanceof Object[] ) {\n      for( Object o : (Object[])v ) {\n        vals.add( o );\n      }\n    }\n    else {\n      vals.add( v );\n    }\n  }\n\n","sourceOld":"  /**\n   * Add values to a field.  If the added value is a collection, each value\n   * will be added individually.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void addValue(Object v) {\n    if( value == null ) {\n      if ( v instanceof Collection ) {\n        Collection<Object> c = new ArrayList<>( 3 );\n        for ( Object o : (Collection<Object>)v ) {\n          c.add( o );\n        }\n        setValue(c);\n      } else {\n        setValue(v);\n      }\n\n      return;\n    }\n    \n    Collection<Object> vals = null;\n    if( value instanceof Collection ) {\n      vals = (Collection<Object>)value;\n    }\n    else {\n      vals = new ArrayList<>( 3 );\n      vals.add( value );\n      value = vals;\n    }\n    \n    // Add the new values to a collection, if childDoc add as is without iteration\n    if( v instanceof Iterable && !(v instanceof SolrDocumentBase)) {\n      for( Object o : (Iterable<Object>)v ) {\n        vals.add( o );\n      }\n    }\n    else if( v instanceof Object[] ) {\n      for( Object o : (Object[])v ) {\n        vals.add( o );\n      }\n    }\n    else {\n      vals.add( v );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrInputField#addValue(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrInputField#addValue(Object).mjava","sourceNew":"  /**\n   * Add values to a field.  If the added value is a collection, each value\n   * will be added individually.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void addValue(Object v) {\n    if( value == null ) {\n      if ( v instanceof Collection ) {\n        Collection<Object> c = new ArrayList<>( 3 );\n        for ( Object o : (Collection<Object>)v ) {\n          c.add( o );\n        }\n        setValue(c);\n      } else {\n        setValue(v);\n      }\n\n      return;\n    }\n    \n    Collection<Object> vals = null;\n    if( value instanceof Collection ) {\n      vals = (Collection<Object>)value;\n    }\n    else {\n      vals = new ArrayList<>( 3 );\n      vals.add( value );\n      value = vals;\n    }\n    \n    // Add the new values to a collection, if childDoc add as is without iteration\n    if( v instanceof Iterable && !(v instanceof SolrDocumentBase)) {\n      for( Object o : (Iterable<Object>)v ) {\n        vals.add( o );\n      }\n    }\n    else if( v instanceof Object[] ) {\n      for( Object o : (Object[])v ) {\n        vals.add( o );\n      }\n    }\n    else {\n      vals.add( v );\n    }\n  }\n\n","sourceOld":"  /**\n   * Add values to a field.  If the added value is a collection, each value\n   * will be added individually.\n   */\n  public void addValue(Object v) {\n    if( value == null ) {\n      if ( v instanceof Collection ) {\n        Collection<Object> c = new ArrayList<>( 3 );\n        for ( Object o : (Collection<Object>)v ) {\n          c.add( o );\n        }\n        setValue(c);\n      } else {\n        setValue(v);\n      }\n\n      return;\n    }\n    \n    Collection<Object> vals = null;\n    if( value instanceof Collection ) {\n      vals = (Collection<Object>)value;\n    }\n    else {\n      vals = new ArrayList<>( 3 );\n      vals.add( value );\n      value = vals;\n    }\n    \n    // Add the new values to a collection, if childDoc add as is without iteration\n    if( v instanceof Iterable && !(v instanceof SolrDocumentBase)) {\n      for( Object o : (Iterable<Object>)v ) {\n        vals.add( o );\n      }\n    }\n    else if( v instanceof Object[] ) {\n      for( Object o : (Object[])v ) {\n        vals.add( o );\n      }\n    }\n    else {\n      vals.add( v );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["acd9883560fd89e6448b2b447302fe543040cd4f","9440b5b1eec7788a0edd10385e4d7a614d1024d7"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["9440b5b1eec7788a0edd10385e4d7a614d1024d7"],"9440b5b1eec7788a0edd10385e4d7a614d1024d7":["acd9883560fd89e6448b2b447302fe543040cd4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"acd9883560fd89e6448b2b447302fe543040cd4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["acd9883560fd89e6448b2b447302fe543040cd4f","9440b5b1eec7788a0edd10385e4d7a614d1024d7"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"9440b5b1eec7788a0edd10385e4d7a614d1024d7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["acd9883560fd89e6448b2b447302fe543040cd4f"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"acd9883560fd89e6448b2b447302fe543040cd4f":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","9440b5b1eec7788a0edd10385e4d7a614d1024d7","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}