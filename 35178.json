{"path":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","commits":[{"id":"a4efd3fffdd7acd625bb88e455c8097e17f75735","date":1477647201,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createCmd.setCollectionConfigName(\"conf\");\n\n    try (SolrClient client = cluster.getJettySolrRunner(0).newClient()) {\n      client.request(createCmd);\n    }\n\n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createCmd.setCollectionConfigName(\"conf\");\n\n    try (SolrClient client = cluster.getJettySolrRunner(1).newClient()) {\n      client.request(createCmd);\n    }\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59dce44d6a0b58c171de1d47ad8c0a75831f94fd","date":1477668573,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createCmd.setCollectionConfigName(\"conf\");\n\n    try (SolrClient client = cluster.getJettySolrRunner(0).newClient()) {\n      client.request(createCmd);\n    }\n\n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createCmd.setCollectionConfigName(\"conf\");\n\n    try (SolrClient client = cluster.getJettySolrRunner(1).newClient()) {\n      client.request(createCmd);\n    }\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61c45e99cf6676da48f19d7511c73712ad39402b","date":1495508331,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","sourceNew":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1));\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createCmd.setCollectionConfigName(\"conf\");\n\n    try (SolrClient client = cluster.getJettySolrRunner(0).newClient()) {\n      client.request(createCmd);\n    }\n\n    createCmd = new Create();\n    createCmd.setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1));\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createCmd.setCollectionConfigName(\"conf\");\n\n    try (SolrClient client = cluster.getJettySolrRunner(1).newClient()) {\n      client.request(createCmd);\n    }\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createCmd.setCollectionConfigName(\"conf\");\n\n    try (SolrClient client = cluster.getJettySolrRunner(0).newClient()) {\n      client.request(createCmd);\n    }\n\n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createCmd.setCollectionConfigName(\"conf\");\n\n    try (SolrClient client = cluster.getJettySolrRunner(1).newClient()) {\n      client.request(createCmd);\n    }\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","sourceNew":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1));\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createCmd.setCollectionConfigName(\"conf\");\n\n    try (SolrClient client = cluster.getJettySolrRunner(0).newClient()) {\n      client.request(createCmd);\n    }\n\n    createCmd = new Create();\n    createCmd.setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1));\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createCmd.setCollectionConfigName(\"conf\");\n\n    try (SolrClient client = cluster.getJettySolrRunner(1).newClient()) {\n      client.request(createCmd);\n    }\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createCmd.setCollectionConfigName(\"conf\");\n\n    try (SolrClient client = cluster.getJettySolrRunner(0).newClient()) {\n      client.request(createCmd);\n    }\n\n    createCmd = new Create();\n    createCmd.setCoreName(\"halfcollection_shard1_replica1\");\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createCmd.setCollectionConfigName(\"conf\");\n\n    try (SolrClient client = cluster.getJettySolrRunner(1).newClient()) {\n      client.request(createCmd);\n    }\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9b4296bd51ca61b482138791478afdd0f7d3a3d","date":1498058739,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","sourceNew":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1))\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1))\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1));\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createCmd.setCollectionConfigName(\"conf\");\n\n    try (SolrClient client = cluster.getJettySolrRunner(0).newClient()) {\n      client.request(createCmd);\n    }\n\n    createCmd = new Create();\n    createCmd.setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1));\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createCmd.setCollectionConfigName(\"conf\");\n\n    try (SolrClient client = cluster.getJettySolrRunner(1).newClient()) {\n      client.request(createCmd);\n    }\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","sourceNew":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1))\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1))\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1));\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createCmd.setCollectionConfigName(\"conf\");\n\n    try (SolrClient client = cluster.getJettySolrRunner(0).newClient()) {\n      client.request(createCmd);\n    }\n\n    createCmd = new Create();\n    createCmd.setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1));\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createCmd.setCollectionConfigName(\"conf\");\n\n    try (SolrClient client = cluster.getJettySolrRunner(1).newClient()) {\n      client.request(createCmd);\n    }\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","sourceNew":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1))\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1))\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    \n    // first we make a core with the core name the collections api\n    // will try and use - this will cause our mock fail\n    Create createCmd = new Create();\n    createCmd.setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1));\n    createCmd.setCollection(\"halfcollectionblocker\");\n    String dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createCmd.setCollectionConfigName(\"conf\");\n\n    try (SolrClient client = cluster.getJettySolrRunner(0).newClient()) {\n      client.request(createCmd);\n    }\n\n    createCmd = new Create();\n    createCmd.setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1));\n    createCmd.setCollection(\"halfcollectionblocker2\");\n    dataDir = createTempDir().toFile().getAbsolutePath();\n    createCmd.setDataDir(dataDir);\n    createCmd.setNumShards(1);\n    createCmd.setCollectionConfigName(\"conf\");\n\n    try (SolrClient client = cluster.getJettySolrRunner(1).newClient()) {\n      client.request(createCmd);\n    }\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"651c3ddf5bc1266d9de0a972ec05e59d77099a4c","date":1500969855,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","sourceNew":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1))\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1))\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","sourceNew":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1))\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1))\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a52341299179de5479672f7cf518bf4b173f34b3","date":1501079746,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","sourceNew":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1))\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(Assign.buildCoreName(\"halfcollection\", \"shard1\", Replica.Type.NRT, 1))\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","sourceNew":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#testCreateShouldFailOnExistingCore().mjava","sourceNew":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","sourceOld":"  @Test\n  public void testCreateShouldFailOnExistingCore() throws Exception {\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker\", \"conf\", 1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(0).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    assertEquals(0, CollectionAdminRequest.createCollection(\"halfcollectionblocker2\", \"conf\",1, 1)\n        .setCreateNodeSet(\"\")\n        .process(cluster.getSolrClient()).getStatus());\n    assertTrue(CollectionAdminRequest.addReplicaToShard(\"halfcollectionblocker2\", \"shard1\")\n        .setNode(cluster.getJettySolrRunner(1).getNodeName())\n        .setCoreName(\"halfcollection_shard1_replica_n1\")\n        .process(cluster.getSolrClient()).isSuccess());\n\n    String nn1 = cluster.getJettySolrRunner(0).getNodeName();\n    String nn2 = cluster.getJettySolrRunner(1).getNodeName();\n\n    CollectionAdminResponse resp = CollectionAdminRequest.createCollection(\"halfcollection\", \"conf\", 2, 1)\n        .setCreateNodeSet(nn1 + \",\" + nn2)\n        .process(cluster.getSolrClient());\n    \n    SimpleOrderedMap success = (SimpleOrderedMap) resp.getResponse().get(\"success\");\n    SimpleOrderedMap failure = (SimpleOrderedMap) resp.getResponse().get(\"failure\");\n\n    assertNotNull(resp.toString(), success);\n    assertNotNull(resp.toString(), failure);\n    \n    String val1 = success.getVal(0).toString();\n    String val2 = failure.getVal(0).toString();\n    assertTrue(val1.contains(\"SolrException\") || val2.contains(\"SolrException\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a4efd3fffdd7acd625bb88e455c8097e17f75735":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"651c3ddf5bc1266d9de0a972ec05e59d77099a4c":["28288370235ed02234a64753cdbf0c6ec096304a"],"b94236357aaa22b76c10629851fe4e376e0cea82":["a52341299179de5479672f7cf518bf4b173f34b3","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"59dce44d6a0b58c171de1d47ad8c0a75831f94fd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a4efd3fffdd7acd625bb88e455c8097e17f75735"],"61c45e99cf6676da48f19d7511c73712ad39402b":["a4efd3fffdd7acd625bb88e455c8097e17f75735"],"a9b4296bd51ca61b482138791478afdd0f7d3a3d":["61c45e99cf6676da48f19d7511c73712ad39402b"],"936cdd5882761db3b844afd6f84ab81cbb011a75":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","651c3ddf5bc1266d9de0a972ec05e59d77099a4c"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["a52341299179de5479672f7cf518bf4b173f34b3"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["e9017cf144952056066919f1ebc7897ff9bd71b1","a9b4296bd51ca61b482138791478afdd0f7d3a3d"],"28288370235ed02234a64753cdbf0c6ec096304a":["61c45e99cf6676da48f19d7511c73712ad39402b","a9b4296bd51ca61b482138791478afdd0f7d3a3d"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a4efd3fffdd7acd625bb88e455c8097e17f75735","61c45e99cf6676da48f19d7511c73712ad39402b"],"a52341299179de5479672f7cf518bf4b173f34b3":["28288370235ed02234a64753cdbf0c6ec096304a","651c3ddf5bc1266d9de0a972ec05e59d77099a4c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"a4efd3fffdd7acd625bb88e455c8097e17f75735":["59dce44d6a0b58c171de1d47ad8c0a75831f94fd","61c45e99cf6676da48f19d7511c73712ad39402b","e9017cf144952056066919f1ebc7897ff9bd71b1"],"651c3ddf5bc1266d9de0a972ec05e59d77099a4c":["936cdd5882761db3b844afd6f84ab81cbb011a75","a52341299179de5479672f7cf518bf4b173f34b3"],"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"59dce44d6a0b58c171de1d47ad8c0a75831f94fd":[],"61c45e99cf6676da48f19d7511c73712ad39402b":["a9b4296bd51ca61b482138791478afdd0f7d3a3d","28288370235ed02234a64753cdbf0c6ec096304a","e9017cf144952056066919f1ebc7897ff9bd71b1"],"a9b4296bd51ca61b482138791478afdd0f7d3a3d":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["936cdd5882761db3b844afd6f84ab81cbb011a75"],"28288370235ed02234a64753cdbf0c6ec096304a":["651c3ddf5bc1266d9de0a972ec05e59d77099a4c","a52341299179de5479672f7cf518bf4b173f34b3"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1"],"a52341299179de5479672f7cf518bf4b173f34b3":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a4efd3fffdd7acd625bb88e455c8097e17f75735","59dce44d6a0b58c171de1d47ad8c0a75831f94fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["59dce44d6a0b58c171de1d47ad8c0a75831f94fd","936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}