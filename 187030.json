{"path":"src/test/org/apache/lucene/search/TestDocBoost#test().mjava","commits":[{"id":"14aec0a40da5a9c26f8752701a5aa10f78f5017d","date":1027969875,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestDocBoost#test().mjava","pathOld":"/dev/null","sourceNew":"  public static void test() throws Exception {\n    RAMDirectory store = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(store, new SimpleAnalyzer(), true);\n    \n    Field f1 = Field.Text(\"field\", \"word\");\n    Field f2 = Field.Text(\"field\", \"word\");\n    f2.setBoost(2.0f);\n    \n    Document d1 = new Document();\n    Document d2 = new Document();\n    Document d3 = new Document();\n    Document d4 = new Document();\n    d3.setBoost(3.0f);\n    d4.setBoost(2.0f);\n    \n    d1.add(f1);                                 // boost = 1\n    d2.add(f2);                                 // boost = 2\n    d3.add(f1);                                 // boost = 3\n    d4.add(f2);                                 // boost = 4\n    \n    writer.addDocument(d1);\n    writer.addDocument(d2);\n    writer.addDocument(d3);\n    writer.addDocument(d4);\n    writer.optimize();\n    writer.close();\n\n    final float[] scores = new float[4];\n\n    new IndexSearcher(store).search\n      (new TermQuery(new Term(\"field\", \"word\")),\n       new HitCollector() {\n         public final void collect(int doc, float score) {\n           scores[doc] = score;\n         }\n       });\n    \n    float lastScore = 0.0f;\n\n    for (int i = 0; i < 4; i++) {\n      assertTrue(scores[i] > lastScore);\n      lastScore = scores[i];\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f5efa46fb27648cd98137d9898d819e115911bc","date":1036690287,"type":5,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestDocBoost#testDocBoost().mjava","pathOld":"src/test/org/apache/lucene/search/TestDocBoost#test().mjava","sourceNew":"  public void testDocBoost() throws Exception {\n    RAMDirectory store = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(store, new SimpleAnalyzer(), true);\n    \n    Field f1 = Field.Text(\"field\", \"word\");\n    Field f2 = Field.Text(\"field\", \"word\");\n    f2.setBoost(2.0f);\n    \n    Document d1 = new Document();\n    Document d2 = new Document();\n    Document d3 = new Document();\n    Document d4 = new Document();\n    d3.setBoost(3.0f);\n    d4.setBoost(2.0f);\n    \n    d1.add(f1);                                 // boost = 1\n    d2.add(f2);                                 // boost = 2\n    d3.add(f1);                                 // boost = 3\n    d4.add(f2);                                 // boost = 4\n    \n    writer.addDocument(d1);\n    writer.addDocument(d2);\n    writer.addDocument(d3);\n    writer.addDocument(d4);\n    writer.optimize();\n    writer.close();\n\n    final float[] scores = new float[4];\n\n    new IndexSearcher(store).search\n      (new TermQuery(new Term(\"field\", \"word\")),\n       new HitCollector() {\n         public final void collect(int doc, float score) {\n           scores[doc] = score;\n         }\n       });\n    \n    float lastScore = 0.0f;\n\n    for (int i = 0; i < 4; i++) {\n      assertTrue(scores[i] > lastScore);\n      lastScore = scores[i];\n    }\n  }\n\n","sourceOld":"  public static void test() throws Exception {\n    RAMDirectory store = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(store, new SimpleAnalyzer(), true);\n    \n    Field f1 = Field.Text(\"field\", \"word\");\n    Field f2 = Field.Text(\"field\", \"word\");\n    f2.setBoost(2.0f);\n    \n    Document d1 = new Document();\n    Document d2 = new Document();\n    Document d3 = new Document();\n    Document d4 = new Document();\n    d3.setBoost(3.0f);\n    d4.setBoost(2.0f);\n    \n    d1.add(f1);                                 // boost = 1\n    d2.add(f2);                                 // boost = 2\n    d3.add(f1);                                 // boost = 3\n    d4.add(f2);                                 // boost = 4\n    \n    writer.addDocument(d1);\n    writer.addDocument(d2);\n    writer.addDocument(d3);\n    writer.addDocument(d4);\n    writer.optimize();\n    writer.close();\n\n    final float[] scores = new float[4];\n\n    new IndexSearcher(store).search\n      (new TermQuery(new Term(\"field\", \"word\")),\n       new HitCollector() {\n         public final void collect(int doc, float score) {\n           scores[doc] = score;\n         }\n       });\n    \n    float lastScore = 0.0f;\n\n    for (int i = 0; i < 4; i++) {\n      assertTrue(scores[i] > lastScore);\n      lastScore = scores[i];\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"14aec0a40da5a9c26f8752701a5aa10f78f5017d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6f5efa46fb27648cd98137d9898d819e115911bc":["14aec0a40da5a9c26f8752701a5aa10f78f5017d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6f5efa46fb27648cd98137d9898d819e115911bc"]},"commit2Childs":{"14aec0a40da5a9c26f8752701a5aa10f78f5017d":["6f5efa46fb27648cd98137d9898d819e115911bc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["14aec0a40da5a9c26f8752701a5aa10f78f5017d"],"6f5efa46fb27648cd98137d9898d819e115911bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}