{"path":"lucene/src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","sourceNew":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   */\n  public boolean getUseCompoundFile() throws IOException {\n    if (isCompoundFile == NO) {\n      return false;\n    } else if (isCompoundFile == YES) {\n      return true;\n    } else {\n      return dir.fileExists(IndexFileNames.segmentFileName(name, IndexFileNames.COMPOUND_FILE_EXTENSION));\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   */\n  public boolean getUseCompoundFile() throws IOException {\n    if (isCompoundFile == NO) {\n      return false;\n    } else if (isCompoundFile == YES) {\n      return true;\n    } else {\n      return dir.fileExists(IndexFileNames.segmentFileName(name, IndexFileNames.COMPOUND_FILE_EXTENSION));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb10b6bcde550b87d8f10e5f010bd8f3021023b6","date":1274974592,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","sourceNew":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   */\n  public boolean getUseCompoundFile() throws IOException {\n    if (isCompoundFile == NO) {\n      return false;\n    } else if (isCompoundFile == YES) {\n      return true;\n    } else {\n      return dir.fileExists(IndexFileNames.segmentFileName(name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   */\n  public boolean getUseCompoundFile() throws IOException {\n    if (isCompoundFile == NO) {\n      return false;\n    } else if (isCompoundFile == YES) {\n      return true;\n    } else {\n      return dir.fileExists(IndexFileNames.segmentFileName(name, IndexFileNames.COMPOUND_FILE_EXTENSION));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6267e1ce56c2eec111425690cd04e251b6f14952","date":1275222352,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","sourceNew":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   */\n  public boolean getUseCompoundFile() {\n    return isCompoundFile;\n  }\n\n","sourceOld":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   */\n  public boolean getUseCompoundFile() throws IOException {\n    if (isCompoundFile == NO) {\n      return false;\n    } else if (isCompoundFile == YES) {\n      return true;\n    } else {\n      return dir.fileExists(IndexFileNames.segmentFileName(name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#getUseCompoundFile().mjava","sourceNew":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   */\n  public boolean getUseCompoundFile() {\n    return isCompoundFile;\n  }\n\n","sourceOld":"  /**\n   * Returns true if this segment is stored as a compound\n   * file; else, false.\n   */\n  public boolean getUseCompoundFile() {\n    return isCompoundFile;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6267e1ce56c2eec111425690cd04e251b6f14952":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["6267e1ce56c2eec111425690cd04e251b6f14952"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6267e1ce56c2eec111425690cd04e251b6f14952":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["6267e1ce56c2eec111425690cd04e251b6f14952"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}