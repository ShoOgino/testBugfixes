{"path":"src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndexWithVectors().mjava","commits":[{"id":"910bb2b4a9549c76f89ce57a3cec7563c44aa561","date":1253277231,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndexWithVectors().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * This method creates an empty index (numFields=0, numDocs=0) but is marked\n   * to have TermVectors. Adding this index to another index should not throw\n   * any exception.\n   */\n  public void testEmptyIndexWithVectors() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd1, new SimpleAnalyzer(), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.YES));\n      iw.addDocument(doc);\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.NO));\n      iw.addDocument(doc);\n      iw.close();\n\n      IndexReader ir = IndexReader.open(rd1,false);\n      ir.deleteDocument(0);\n      ir.close();\n\n      iw = new IndexWriter(rd1, new SimpleAnalyzer(), false,\n                           MaxFieldLength.UNLIMITED);\n      iw.optimize();\n      iw.close();\n    }\n\n    RAMDirectory rd2 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd2, new SimpleAnalyzer(), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      iw.addDocument(doc);\n      iw.close();\n    }\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new SimpleAnalyzer(), true,\n                                        MaxFieldLength.UNLIMITED);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\n    // When unpatched, Lucene crashes here with an ArrayIndexOutOfBoundsException (caused by TermVectorsWriter)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\n    // ParallelReader closes any IndexReader you added to it:\n    pr.close();\n\n    rd1.close();\n    rd2.close();\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    \n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndexWithVectors().mjava","pathOld":"src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndexWithVectors().mjava","sourceNew":"  /**\n   * This method creates an empty index (numFields=0, numDocs=0) but is marked\n   * to have TermVectors. Adding this index to another index should not throw\n   * any exception.\n   */\n  public void testEmptyIndexWithVectors() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd1, new SimpleAnalyzer(Version.LUCENE_CURRENT), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.YES));\n      iw.addDocument(doc);\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.NO));\n      iw.addDocument(doc);\n      iw.close();\n\n      IndexReader ir = IndexReader.open(rd1,false);\n      ir.deleteDocument(0);\n      ir.close();\n\n      iw = new IndexWriter(rd1, new SimpleAnalyzer(Version.LUCENE_CURRENT), false,\n                           MaxFieldLength.UNLIMITED);\n      iw.optimize();\n      iw.close();\n    }\n\n    RAMDirectory rd2 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd2, new SimpleAnalyzer(Version.LUCENE_CURRENT), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      iw.addDocument(doc);\n      iw.close();\n    }\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new SimpleAnalyzer(Version.LUCENE_CURRENT), true,\n                                        MaxFieldLength.UNLIMITED);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\n    // When unpatched, Lucene crashes here with an ArrayIndexOutOfBoundsException (caused by TermVectorsWriter)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\n    // ParallelReader closes any IndexReader you added to it:\n    pr.close();\n\n    rd1.close();\n    rd2.close();\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    \n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n  }\n\n","sourceOld":"  /**\n   * This method creates an empty index (numFields=0, numDocs=0) but is marked\n   * to have TermVectors. Adding this index to another index should not throw\n   * any exception.\n   */\n  public void testEmptyIndexWithVectors() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd1, new SimpleAnalyzer(), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.YES));\n      iw.addDocument(doc);\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.NO));\n      iw.addDocument(doc);\n      iw.close();\n\n      IndexReader ir = IndexReader.open(rd1,false);\n      ir.deleteDocument(0);\n      ir.close();\n\n      iw = new IndexWriter(rd1, new SimpleAnalyzer(), false,\n                           MaxFieldLength.UNLIMITED);\n      iw.optimize();\n      iw.close();\n    }\n\n    RAMDirectory rd2 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd2, new SimpleAnalyzer(), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      iw.addDocument(doc);\n      iw.close();\n    }\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new SimpleAnalyzer(), true,\n                                        MaxFieldLength.UNLIMITED);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\n    // When unpatched, Lucene crashes here with an ArrayIndexOutOfBoundsException (caused by TermVectorsWriter)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\n    // ParallelReader closes any IndexReader you added to it:\n    pr.close();\n\n    rd1.close();\n    rd2.close();\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    \n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndexWithVectors().mjava","pathOld":"src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndexWithVectors().mjava","sourceNew":"  /**\n   * This method creates an empty index (numFields=0, numDocs=0) but is marked\n   * to have TermVectors. Adding this index to another index should not throw\n   * any exception.\n   */\n  public void testEmptyIndexWithVectors() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd1, new SimpleAnalyzer(TEST_VERSION_CURRENT), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.YES));\n      iw.addDocument(doc);\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.NO));\n      iw.addDocument(doc);\n      iw.close();\n\n      IndexReader ir = IndexReader.open(rd1,false);\n      ir.deleteDocument(0);\n      ir.close();\n\n      iw = new IndexWriter(rd1, new SimpleAnalyzer(TEST_VERSION_CURRENT), false,\n                           MaxFieldLength.UNLIMITED);\n      iw.optimize();\n      iw.close();\n    }\n\n    RAMDirectory rd2 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd2, new SimpleAnalyzer(TEST_VERSION_CURRENT), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      iw.addDocument(doc);\n      iw.close();\n    }\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new SimpleAnalyzer(TEST_VERSION_CURRENT), true,\n                                        MaxFieldLength.UNLIMITED);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\n    // When unpatched, Lucene crashes here with an ArrayIndexOutOfBoundsException (caused by TermVectorsWriter)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\n    // ParallelReader closes any IndexReader you added to it:\n    pr.close();\n\n    rd1.close();\n    rd2.close();\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    \n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n  }\n\n","sourceOld":"  /**\n   * This method creates an empty index (numFields=0, numDocs=0) but is marked\n   * to have TermVectors. Adding this index to another index should not throw\n   * any exception.\n   */\n  public void testEmptyIndexWithVectors() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd1, new SimpleAnalyzer(Version.LUCENE_CURRENT), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.YES));\n      iw.addDocument(doc);\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.NO));\n      iw.addDocument(doc);\n      iw.close();\n\n      IndexReader ir = IndexReader.open(rd1,false);\n      ir.deleteDocument(0);\n      ir.close();\n\n      iw = new IndexWriter(rd1, new SimpleAnalyzer(Version.LUCENE_CURRENT), false,\n                           MaxFieldLength.UNLIMITED);\n      iw.optimize();\n      iw.close();\n    }\n\n    RAMDirectory rd2 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd2, new SimpleAnalyzer(Version.LUCENE_CURRENT), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      iw.addDocument(doc);\n      iw.close();\n    }\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new SimpleAnalyzer(Version.LUCENE_CURRENT), true,\n                                        MaxFieldLength.UNLIMITED);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\n    // When unpatched, Lucene crashes here with an ArrayIndexOutOfBoundsException (caused by TermVectorsWriter)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\n    // ParallelReader closes any IndexReader you added to it:\n    pr.close();\n\n    rd1.close();\n    rd2.close();\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    \n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndexWithVectors().mjava","pathOld":"src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndexWithVectors().mjava","sourceNew":"  /**\n   * This method creates an empty index (numFields=0, numDocs=0) but is marked\n   * to have TermVectors. Adding this index to another index should not throw\n   * any exception.\n   */\n  public void testEmptyIndexWithVectors() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT));\n      Document doc = new Document();\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.YES));\n      iw.addDocument(doc);\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.NO));\n      iw.addDocument(doc);\n      iw.close();\n\n      IndexReader ir = IndexReader.open(rd1,false);\n      ir.deleteDocument(0);\n      ir.close();\n\n      iw = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT).setOpenMode(OpenMode.APPEND));\n      iw.optimize();\n      iw.close();\n    }\n\n    RAMDirectory rd2 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd2, new IndexWriterConfig(TEST_VERSION_CURRENT));\n      Document doc = new Document();\n      iw.addDocument(doc);\n      iw.close();\n    }\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\n    // When unpatched, Lucene crashes here with an ArrayIndexOutOfBoundsException (caused by TermVectorsWriter)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\n    // ParallelReader closes any IndexReader you added to it:\n    pr.close();\n\n    rd1.close();\n    rd2.close();\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    \n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n  }\n\n","sourceOld":"  /**\n   * This method creates an empty index (numFields=0, numDocs=0) but is marked\n   * to have TermVectors. Adding this index to another index should not throw\n   * any exception.\n   */\n  public void testEmptyIndexWithVectors() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd1, new SimpleAnalyzer(TEST_VERSION_CURRENT), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.YES));\n      iw.addDocument(doc);\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.NO));\n      iw.addDocument(doc);\n      iw.close();\n\n      IndexReader ir = IndexReader.open(rd1,false);\n      ir.deleteDocument(0);\n      ir.close();\n\n      iw = new IndexWriter(rd1, new SimpleAnalyzer(TEST_VERSION_CURRENT), false,\n                           MaxFieldLength.UNLIMITED);\n      iw.optimize();\n      iw.close();\n    }\n\n    RAMDirectory rd2 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd2, new SimpleAnalyzer(TEST_VERSION_CURRENT), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      iw.addDocument(doc);\n      iw.close();\n    }\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new SimpleAnalyzer(TEST_VERSION_CURRENT), true,\n                                        MaxFieldLength.UNLIMITED);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\n    // When unpatched, Lucene crashes here with an ArrayIndexOutOfBoundsException (caused by TermVectorsWriter)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\n    // ParallelReader closes any IndexReader you added to it:\n    pr.close();\n\n    rd1.close();\n    rd2.close();\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    \n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndexWithVectors().mjava","pathOld":"src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndexWithVectors().mjava","sourceNew":"  /**\n   * This method creates an empty index (numFields=0, numDocs=0) but is marked\n   * to have TermVectors. Adding this index to another index should not throw\n   * any exception.\n   */\n  public void testEmptyIndexWithVectors() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd1, new SimpleAnalyzer(TEST_VERSION_CURRENT), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.YES));\n      iw.addDocument(doc);\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.NO));\n      iw.addDocument(doc);\n      iw.close();\n\n      IndexReader ir = IndexReader.open(rd1,false);\n      ir.deleteDocument(0);\n      ir.close();\n\n      iw = new IndexWriter(rd1, new SimpleAnalyzer(TEST_VERSION_CURRENT), false,\n                           MaxFieldLength.UNLIMITED);\n      iw.optimize();\n      iw.close();\n    }\n\n    RAMDirectory rd2 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd2, new SimpleAnalyzer(TEST_VERSION_CURRENT), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      iw.addDocument(doc);\n      iw.close();\n    }\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new SimpleAnalyzer(TEST_VERSION_CURRENT), true,\n                                        MaxFieldLength.UNLIMITED);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\n    // When unpatched, Lucene crashes here with an ArrayIndexOutOfBoundsException (caused by TermVectorsWriter)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\n    // ParallelReader closes any IndexReader you added to it:\n    pr.close();\n\n    rd1.close();\n    rd2.close();\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    \n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n  }\n\n","sourceOld":"  /**\n   * This method creates an empty index (numFields=0, numDocs=0) but is marked\n   * to have TermVectors. Adding this index to another index should not throw\n   * any exception.\n   */\n  public void testEmptyIndexWithVectors() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT));\n      Document doc = new Document();\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.YES));\n      iw.addDocument(doc);\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.NO));\n      iw.addDocument(doc);\n      iw.close();\n\n      IndexReader ir = IndexReader.open(rd1,false);\n      ir.deleteDocument(0);\n      ir.close();\n\n      iw = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT).setOpenMode(OpenMode.APPEND));\n      iw.optimize();\n      iw.close();\n    }\n\n    RAMDirectory rd2 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd2, new IndexWriterConfig(TEST_VERSION_CURRENT));\n      Document doc = new Document();\n      iw.addDocument(doc);\n      iw.close();\n    }\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\n    // When unpatched, Lucene crashes here with an ArrayIndexOutOfBoundsException (caused by TermVectorsWriter)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\n    // ParallelReader closes any IndexReader you added to it:\n    pr.close();\n\n    rd1.close();\n    rd2.close();\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    \n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndexWithVectors().mjava","pathOld":"src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndexWithVectors().mjava","sourceNew":"  /**\n   * This method creates an empty index (numFields=0, numDocs=0) but is marked\n   * to have TermVectors. Adding this index to another index should not throw\n   * any exception.\n   */\n  public void testEmptyIndexWithVectors() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n      Document doc = new Document();\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.YES));\n      iw.addDocument(doc);\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.NO));\n      iw.addDocument(doc);\n      iw.close();\n\n      IndexReader ir = IndexReader.open(rd1,false);\n      ir.deleteDocument(0);\n      ir.close();\n\n      iw = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n      iw.optimize();\n      iw.close();\n    }\n\n    RAMDirectory rd2 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd2, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n      Document doc = new Document();\n      iw.addDocument(doc);\n      iw.close();\n    }\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\n    // When unpatched, Lucene crashes here with an ArrayIndexOutOfBoundsException (caused by TermVectorsWriter)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\n    // ParallelReader closes any IndexReader you added to it:\n    pr.close();\n\n    rd1.close();\n    rd2.close();\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    \n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n  }\n\n","sourceOld":"  /**\n   * This method creates an empty index (numFields=0, numDocs=0) but is marked\n   * to have TermVectors. Adding this index to another index should not throw\n   * any exception.\n   */\n  public void testEmptyIndexWithVectors() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd1, new SimpleAnalyzer(TEST_VERSION_CURRENT), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.YES));\n      iw.addDocument(doc);\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.NO));\n      iw.addDocument(doc);\n      iw.close();\n\n      IndexReader ir = IndexReader.open(rd1,false);\n      ir.deleteDocument(0);\n      ir.close();\n\n      iw = new IndexWriter(rd1, new SimpleAnalyzer(TEST_VERSION_CURRENT), false,\n                           MaxFieldLength.UNLIMITED);\n      iw.optimize();\n      iw.close();\n    }\n\n    RAMDirectory rd2 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd2, new SimpleAnalyzer(TEST_VERSION_CURRENT), true,\n                                       MaxFieldLength.UNLIMITED);\n      Document doc = new Document();\n      iw.addDocument(doc);\n      iw.close();\n    }\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new SimpleAnalyzer(TEST_VERSION_CURRENT), true,\n                                        MaxFieldLength.UNLIMITED);\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\n    // When unpatched, Lucene crashes here with an ArrayIndexOutOfBoundsException (caused by TermVectorsWriter)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\n    // ParallelReader closes any IndexReader you added to it:\n    pr.close();\n\n    rd1.close();\n    rd2.close();\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    \n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndexWithVectors().mjava","pathOld":"src/test/org/apache/lucene/index/TestParallelReaderEmptyIndex#testEmptyIndexWithVectors().mjava","sourceNew":"  /**\n   * This method creates an empty index (numFields=0, numDocs=0) but is marked\n   * to have TermVectors. Adding this index to another index should not throw\n   * any exception.\n   */\n  public void testEmptyIndexWithVectors() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n      Document doc = new Document();\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.YES));\n      iw.addDocument(doc);\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.NO));\n      iw.addDocument(doc);\n      iw.close();\n\n      IndexReader ir = IndexReader.open(rd1,false);\n      ir.deleteDocument(0);\n      ir.close();\n\n      iw = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n      iw.optimize();\n      iw.close();\n    }\n\n    RAMDirectory rd2 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd2, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n      Document doc = new Document();\n      iw.addDocument(doc);\n      iw.close();\n    }\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\n    // When unpatched, Lucene crashes here with an ArrayIndexOutOfBoundsException (caused by TermVectorsWriter)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\n    // ParallelReader closes any IndexReader you added to it:\n    pr.close();\n\n    rd1.close();\n    rd2.close();\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    \n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n  }\n\n","sourceOld":"  /**\n   * This method creates an empty index (numFields=0, numDocs=0) but is marked\n   * to have TermVectors. Adding this index to another index should not throw\n   * any exception.\n   */\n  public void testEmptyIndexWithVectors() throws IOException {\n    RAMDirectory rd1 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n      Document doc = new Document();\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.YES));\n      iw.addDocument(doc);\n      doc.add(new Field(\"test\", \"\", Store.NO, Index.ANALYZED,\n                        TermVector.NO));\n      iw.addDocument(doc);\n      iw.close();\n\n      IndexReader ir = IndexReader.open(rd1,false);\n      ir.deleteDocument(0);\n      ir.close();\n\n      iw = new IndexWriter(rd1, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n      iw.optimize();\n      iw.close();\n    }\n\n    RAMDirectory rd2 = new MockRAMDirectory();\n    {\n      IndexWriter iw = new IndexWriter(rd2, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n      Document doc = new Document();\n      iw.addDocument(doc);\n      iw.close();\n    }\n\n    RAMDirectory rdOut = new MockRAMDirectory();\n\n    IndexWriter iwOut = new IndexWriter(rdOut, new IndexWriterConfig(TEST_VERSION_CURRENT, new SimpleAnalyzer(TEST_VERSION_CURRENT)));\n    ParallelReader pr = new ParallelReader();\n    pr.add(IndexReader.open(rd1,true));\n    pr.add(IndexReader.open(rd2,true));\n\n    // When unpatched, Lucene crashes here with an ArrayIndexOutOfBoundsException (caused by TermVectorsWriter)\n    iwOut.addIndexes(new IndexReader[] { pr });\n\n    // ParallelReader closes any IndexReader you added to it:\n    pr.close();\n\n    rd1.close();\n    rd2.close();\n\t\t\n    iwOut.optimize();\n    iwOut.close();\n    \n    _TestUtil.checkIndex(rdOut);\n    rdOut.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["910bb2b4a9549c76f89ce57a3cec7563c44aa561"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"910bb2b4a9549c76f89ce57a3cec7563c44aa561":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["910bb2b4a9549c76f89ce57a3cec7563c44aa561"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"910bb2b4a9549c76f89ce57a3cec7563c44aa561":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}