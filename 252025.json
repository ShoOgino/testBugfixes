{"path":"solr/core/src/java/org/apache/solr/handler/sql/SolrEnumerator#getRealVal(Object).mjava","commits":[{"id":"fa4a466195c69a11a113b33adc90f9069031e54e","date":1477605536,"type":0,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrEnumerator#getRealVal(Object).mjava","pathOld":"/dev/null","sourceNew":"  private Object getRealVal(Object val) {\n    // Check if Double is really a Long\n    if(val instanceof Double) {\n      Double doubleVal = (double) val;\n      //make sure that double has no decimals and fits within Long\n      if(doubleVal % 1 == 0 && doubleVal >= Long.MIN_VALUE && doubleVal <= Long.MAX_VALUE) {\n        return doubleVal.longValue();\n      }\n      return doubleVal;\n    }\n\n    // Wasn't a double so just return original Object\n    return val;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"116fdd6b9e04e18a6547a5650bc0afd3fda020aa","date":1487184909,"type":0,"author":"Joel Bernstein","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrEnumerator#getRealVal(Object).mjava","pathOld":"/dev/null","sourceNew":"  private Object getRealVal(Object val) {\n    // Check if Double is really a Long\n    if(val instanceof Double) {\n      Double doubleVal = (double) val;\n      //make sure that double has no decimals and fits within Long\n      if(doubleVal % 1 == 0 && doubleVal >= Long.MIN_VALUE && doubleVal <= Long.MAX_VALUE) {\n        return doubleVal.longValue();\n      }\n      return doubleVal;\n    }\n\n    // Wasn't a double so just return original Object\n    return val;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4958642f967bfbd6f083ddf50f141bcde89b9ec1","date":1489572234,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrEnumerator#getRealVal(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrEnumerator#getRealVal(Object).mjava","sourceNew":"  private Object getRealVal(Object val) {\n    // Check if Double is really a Long\n    if(val instanceof Double) {\n      double doubleVal = (double) val;\n      //make sure that double has no decimals and fits within Long\n      if(doubleVal % 1 == 0 && doubleVal >= Long.MIN_VALUE && doubleVal <= Long.MAX_VALUE) {\n        return (long)doubleVal;\n      }\n      return doubleVal;\n    }\n\n    // Wasn't a double so just return original Object\n    return val;\n  }\n\n","sourceOld":"  private Object getRealVal(Object val) {\n    // Check if Double is really a Long\n    if(val instanceof Double) {\n      Double doubleVal = (double) val;\n      //make sure that double has no decimals and fits within Long\n      if(doubleVal % 1 == 0 && doubleVal >= Long.MIN_VALUE && doubleVal <= Long.MAX_VALUE) {\n        return doubleVal.longValue();\n      }\n      return doubleVal;\n    }\n\n    // Wasn't a double so just return original Object\n    return val;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bca83a747f8e297ee4412c0d18bdd3a98c09df3b","date":1489651910,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrEnumerator#getRealVal(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrEnumerator#getRealVal(Object).mjava","sourceNew":"  private Object getRealVal(Object val) {\n    // Check if Double is really a Long\n    if(val instanceof Double) {\n      double doubleVal = (double) val;\n      //make sure that double has no decimals and fits within Long\n      if(doubleVal % 1 == 0 && doubleVal >= Long.MIN_VALUE && doubleVal <= Long.MAX_VALUE) {\n        return (long)doubleVal;\n      }\n      return doubleVal;\n    }\n\n    // Wasn't a double so just return original Object\n    return val;\n  }\n\n","sourceOld":"  private Object getRealVal(Object val) {\n    // Check if Double is really a Long\n    if(val instanceof Double) {\n      Double doubleVal = (double) val;\n      //make sure that double has no decimals and fits within Long\n      if(doubleVal % 1 == 0 && doubleVal >= Long.MIN_VALUE && doubleVal <= Long.MAX_VALUE) {\n        return doubleVal.longValue();\n      }\n      return doubleVal;\n    }\n\n    // Wasn't a double so just return original Object\n    return val;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrEnumerator#getRealVal(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrEnumerator#getRealVal(Object).mjava","sourceNew":"  private Object getRealVal(Object val) {\n    // Check if Double is really a Long\n    if(val instanceof Double) {\n      double doubleVal = (double) val;\n      //make sure that double has no decimals and fits within Long\n      if(doubleVal % 1 == 0 && doubleVal >= Long.MIN_VALUE && doubleVal <= Long.MAX_VALUE) {\n        return (long)doubleVal;\n      }\n      return doubleVal;\n    }\n\n    // Wasn't a double so just return original Object\n    return val;\n  }\n\n","sourceOld":"  private Object getRealVal(Object val) {\n    // Check if Double is really a Long\n    if(val instanceof Double) {\n      Double doubleVal = (double) val;\n      //make sure that double has no decimals and fits within Long\n      if(doubleVal % 1 == 0 && doubleVal >= Long.MIN_VALUE && doubleVal <= Long.MAX_VALUE) {\n        return doubleVal.longValue();\n      }\n      return doubleVal;\n    }\n\n    // Wasn't a double so just return original Object\n    return val;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4958642f967bfbd6f083ddf50f141bcde89b9ec1":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"fa4a466195c69a11a113b33adc90f9069031e54e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fa4a466195c69a11a113b33adc90f9069031e54e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bca83a747f8e297ee4412c0d18bdd3a98c09df3b":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"ab68488225b6a6c357dda72ed11dedca9914a192":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa","bca83a747f8e297ee4412c0d18bdd3a98c09df3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4958642f967bfbd6f083ddf50f141bcde89b9ec1"]},"commit2Childs":{"4958642f967bfbd6f083ddf50f141bcde89b9ec1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fa4a466195c69a11a113b33adc90f9069031e54e":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["4958642f967bfbd6f083ddf50f141bcde89b9ec1","bca83a747f8e297ee4412c0d18bdd3a98c09df3b","ab68488225b6a6c357dda72ed11dedca9914a192"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fa4a466195c69a11a113b33adc90f9069031e54e","116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"bca83a747f8e297ee4412c0d18bdd3a98c09df3b":["ab68488225b6a6c357dda72ed11dedca9914a192"],"ab68488225b6a6c357dda72ed11dedca9914a192":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab68488225b6a6c357dda72ed11dedca9914a192","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}