{"path":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestMorfologikFilterFactory#testCreateDictionary().mjava","commits":[{"id":"998df07b719410f803603b8f2cce9f7430a31612","date":1332920035,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestMorfologikFilterFactory#testCreateDictionary().mjava","pathOld":"/dev/null","sourceNew":"  public void testCreateDictionary() throws Exception {\r\n    StringReader reader = new StringReader(\"rowery bilety\");\r\n    Map<String,String> initParams = new HashMap<String,String>();\r\n    initParams.put(IndexSchema.LUCENE_MATCH_VERSION_PARAM,\r\n        DEFAULT_VERSION.toString());\r\n    initParams.put(MorfologikFilterFactory.DICTIONARY_SCHEMA_ATTRIBUTE,\r\n        \"morfologik\");\r\n    MorfologikFilterFactory factory = new MorfologikFilterFactory();\r\n    factory.init(initParams);\r\n    TokenStream ts = factory.create(new WhitespaceTokenizer(DEFAULT_VERSION,\r\n        reader));\r\n    assertTokenStreamContents(ts, new String[] {\"rower\", \"bilet\"});\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5acb674fb35bd5521916181baaefbc66fd3729d","date":1333414751,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestMorfologikFilterFactory#testCreateDictionary().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestMorfologikFilterFactory#testCreateDictionary().mjava","sourceNew":"  public void testCreateDictionary() throws Exception {\n    StringReader reader = new StringReader(\"rowery bilety\");\n    Map<String,String> initParams = new HashMap<String,String>();\n    initParams.put(IndexSchema.LUCENE_MATCH_VERSION_PARAM,\n        DEFAULT_VERSION.toString());\n    initParams.put(MorfologikFilterFactory.DICTIONARY_SCHEMA_ATTRIBUTE,\n        \"morfologik\");\n    MorfologikFilterFactory factory = new MorfologikFilterFactory();\n    factory.init(initParams);\n    TokenStream ts = factory.create(new WhitespaceTokenizer(DEFAULT_VERSION,\n        reader));\n    assertTokenStreamContents(ts, new String[] {\"rower\", \"bilet\"});\n  }\n\n","sourceOld":"  public void testCreateDictionary() throws Exception {\r\n    StringReader reader = new StringReader(\"rowery bilety\");\r\n    Map<String,String> initParams = new HashMap<String,String>();\r\n    initParams.put(IndexSchema.LUCENE_MATCH_VERSION_PARAM,\r\n        DEFAULT_VERSION.toString());\r\n    initParams.put(MorfologikFilterFactory.DICTIONARY_SCHEMA_ATTRIBUTE,\r\n        \"morfologik\");\r\n    MorfologikFilterFactory factory = new MorfologikFilterFactory();\r\n    factory.init(initParams);\r\n    TokenStream ts = factory.create(new WhitespaceTokenizer(DEFAULT_VERSION,\r\n        reader));\r\n    assertTokenStreamContents(ts, new String[] {\"rower\", \"bilet\"});\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6d3ad4230a9094e97925f9395cf6db4729284d9","date":1335503918,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestMorfologikFilterFactory#testCreateDictionary().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestMorfologikFilterFactory#testCreateDictionary().mjava","sourceNew":"  public void testCreateDictionary() throws Exception {\n    StringReader reader = new StringReader(\"rowery bilety\");\n    Map<String,String> initParams = new HashMap<String,String>();\n    initParams.put(MorfologikFilterFactory.DICTIONARY_SCHEMA_ATTRIBUTE,\n        \"morfologik\");\n    MorfologikFilterFactory factory = new MorfologikFilterFactory();\n    factory.setLuceneMatchVersion(DEFAULT_VERSION);\n    factory.init(initParams);\n    TokenStream ts = factory.create(new WhitespaceTokenizer(DEFAULT_VERSION,\n        reader));\n    assertTokenStreamContents(ts, new String[] {\"rower\", \"bilet\"});\n  }\n\n","sourceOld":"  public void testCreateDictionary() throws Exception {\n    StringReader reader = new StringReader(\"rowery bilety\");\n    Map<String,String> initParams = new HashMap<String,String>();\n    initParams.put(IndexSchema.LUCENE_MATCH_VERSION_PARAM,\n        DEFAULT_VERSION.toString());\n    initParams.put(MorfologikFilterFactory.DICTIONARY_SCHEMA_ATTRIBUTE,\n        \"morfologik\");\n    MorfologikFilterFactory factory = new MorfologikFilterFactory();\n    factory.init(initParams);\n    TokenStream ts = factory.create(new WhitespaceTokenizer(DEFAULT_VERSION,\n        reader));\n    assertTokenStreamContents(ts, new String[] {\"rower\", \"bilet\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92ed69fd02d759d98f62e869eaa64e64e22302bf","date":1336612003,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestMorfologikFilterFactory#testCreateDictionary().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestMorfologikFilterFactory#testCreateDictionary().mjava","sourceNew":"  public void testCreateDictionary() throws Exception {\n    StringReader reader = new StringReader(\"rowery bilety\");\n    Map<String,String> initParams = new HashMap<String,String>();\n    initParams.put(MorfologikFilterFactory.DICTIONARY_SCHEMA_ATTRIBUTE,\n        \"morfologik\");\n    MorfologikFilterFactory factory = new MorfologikFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(initParams);\n    TokenStream ts = factory.create(new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        reader));\n    assertTokenStreamContents(ts, new String[] {\"rower\", \"bilet\"});\n  }\n\n","sourceOld":"  public void testCreateDictionary() throws Exception {\n    StringReader reader = new StringReader(\"rowery bilety\");\n    Map<String,String> initParams = new HashMap<String,String>();\n    initParams.put(MorfologikFilterFactory.DICTIONARY_SCHEMA_ATTRIBUTE,\n        \"morfologik\");\n    MorfologikFilterFactory factory = new MorfologikFilterFactory();\n    factory.setLuceneMatchVersion(DEFAULT_VERSION);\n    factory.init(initParams);\n    TokenStream ts = factory.create(new WhitespaceTokenizer(DEFAULT_VERSION,\n        reader));\n    assertTokenStreamContents(ts, new String[] {\"rower\", \"bilet\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5329de88aa243e3d3a980fb7807e92663b03a4d5","date":1343108485,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikFilterFactory#testCreateDictionary().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestMorfologikFilterFactory#testCreateDictionary().mjava","sourceNew":"  public void testCreateDictionary() throws Exception {\n    StringReader reader = new StringReader(\"rowery bilety\");\n    Map<String,String> initParams = new HashMap<String,String>();\n    initParams.put(MorfologikFilterFactory.DICTIONARY_SCHEMA_ATTRIBUTE,\n        \"morfologik\");\n    MorfologikFilterFactory factory = new MorfologikFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(initParams);\n    TokenStream ts = factory.create(new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        reader));\n    assertTokenStreamContents(ts, new String[] {\"rower\", \"bilet\"});\n  }\n\n","sourceOld":"  public void testCreateDictionary() throws Exception {\n    StringReader reader = new StringReader(\"rowery bilety\");\n    Map<String,String> initParams = new HashMap<String,String>();\n    initParams.put(MorfologikFilterFactory.DICTIONARY_SCHEMA_ATTRIBUTE,\n        \"morfologik\");\n    MorfologikFilterFactory factory = new MorfologikFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(initParams);\n    TokenStream ts = factory.create(new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        reader));\n    assertTokenStreamContents(ts, new String[] {\"rower\", \"bilet\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikFilterFactory#testCreateDictionary().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestMorfologikFilterFactory#testCreateDictionary().mjava","sourceNew":"  public void testCreateDictionary() throws Exception {\n    StringReader reader = new StringReader(\"rowery bilety\");\n    Map<String,String> initParams = new HashMap<String,String>();\n    initParams.put(MorfologikFilterFactory.DICTIONARY_SCHEMA_ATTRIBUTE,\n        \"morfologik\");\n    MorfologikFilterFactory factory = new MorfologikFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(initParams);\n    TokenStream ts = factory.create(new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        reader));\n    assertTokenStreamContents(ts, new String[] {\"rower\", \"bilet\"});\n  }\n\n","sourceOld":"  public void testCreateDictionary() throws Exception {\n    StringReader reader = new StringReader(\"rowery bilety\");\n    Map<String,String> initParams = new HashMap<String,String>();\n    initParams.put(MorfologikFilterFactory.DICTIONARY_SCHEMA_ATTRIBUTE,\n        \"morfologik\");\n    MorfologikFilterFactory factory = new MorfologikFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(initParams);\n    TokenStream ts = factory.create(new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        reader));\n    assertTokenStreamContents(ts, new String[] {\"rower\", \"bilet\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikFilterFactory#testCreateDictionary().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestMorfologikFilterFactory#testCreateDictionary().mjava","sourceNew":"  public void testCreateDictionary() throws Exception {\n    StringReader reader = new StringReader(\"rowery bilety\");\n    Map<String,String> initParams = new HashMap<String,String>();\n    initParams.put(MorfologikFilterFactory.DICTIONARY_SCHEMA_ATTRIBUTE,\n        \"morfologik\");\n    MorfologikFilterFactory factory = new MorfologikFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(initParams);\n    TokenStream ts = factory.create(new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        reader));\n    assertTokenStreamContents(ts, new String[] {\"rower\", \"bilet\"});\n  }\n\n","sourceOld":"  public void testCreateDictionary() throws Exception {\n    StringReader reader = new StringReader(\"rowery bilety\");\n    Map<String,String> initParams = new HashMap<String,String>();\n    initParams.put(MorfologikFilterFactory.DICTIONARY_SCHEMA_ATTRIBUTE,\n        \"morfologik\");\n    MorfologikFilterFactory factory = new MorfologikFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(initParams);\n    TokenStream ts = factory.create(new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        reader));\n    assertTokenStreamContents(ts, new String[] {\"rower\", \"bilet\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/morfologik/src/test/org/apache/lucene/analysis/morfologik/TestMorfologikFilterFactory#testCreateDictionary().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestMorfologikFilterFactory#testCreateDictionary().mjava","sourceNew":"  public void testCreateDictionary() throws Exception {\n    StringReader reader = new StringReader(\"rowery bilety\");\n    Map<String,String> initParams = new HashMap<String,String>();\n    initParams.put(MorfologikFilterFactory.DICTIONARY_SCHEMA_ATTRIBUTE,\n        \"morfologik\");\n    MorfologikFilterFactory factory = new MorfologikFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(initParams);\n    TokenStream ts = factory.create(new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        reader));\n    assertTokenStreamContents(ts, new String[] {\"rower\", \"bilet\"});\n  }\n\n","sourceOld":"  public void testCreateDictionary() throws Exception {\n    StringReader reader = new StringReader(\"rowery bilety\");\n    Map<String,String> initParams = new HashMap<String,String>();\n    initParams.put(MorfologikFilterFactory.DICTIONARY_SCHEMA_ATTRIBUTE,\n        \"morfologik\");\n    MorfologikFilterFactory factory = new MorfologikFilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(initParams);\n    TokenStream ts = factory.create(new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        reader));\n    assertTokenStreamContents(ts, new String[] {\"rower\", \"bilet\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"998df07b719410f803603b8f2cce9f7430a31612":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["92ed69fd02d759d98f62e869eaa64e64e22302bf","5a1a22b1ad88b436661458df567f3fdb446392a4"],"d6d3ad4230a9094e97925f9395cf6db4729284d9":["b5acb674fb35bd5521916181baaefbc66fd3729d"],"92ed69fd02d759d98f62e869eaa64e64e22302bf":["d6d3ad4230a9094e97925f9395cf6db4729284d9"],"5329de88aa243e3d3a980fb7807e92663b03a4d5":["92ed69fd02d759d98f62e869eaa64e64e22302bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["92ed69fd02d759d98f62e869eaa64e64e22302bf","5a1a22b1ad88b436661458df567f3fdb446392a4"],"b5acb674fb35bd5521916181baaefbc66fd3729d":["998df07b719410f803603b8f2cce9f7430a31612"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["92ed69fd02d759d98f62e869eaa64e64e22302bf","5329de88aa243e3d3a980fb7807e92663b03a4d5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a1a22b1ad88b436661458df567f3fdb446392a4"]},"commit2Childs":{"998df07b719410f803603b8f2cce9f7430a31612":["b5acb674fb35bd5521916181baaefbc66fd3729d"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"d6d3ad4230a9094e97925f9395cf6db4729284d9":["92ed69fd02d759d98f62e869eaa64e64e22302bf"],"92ed69fd02d759d98f62e869eaa64e64e22302bf":["aba371508186796cc6151d8223a5b4e16d02e26e","5329de88aa243e3d3a980fb7807e92663b03a4d5","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","5a1a22b1ad88b436661458df567f3fdb446392a4"],"5329de88aa243e3d3a980fb7807e92663b03a4d5":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["998df07b719410f803603b8f2cce9f7430a31612"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"b5acb674fb35bd5521916181baaefbc66fd3729d":["d6d3ad4230a9094e97925f9395cf6db4729284d9"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}