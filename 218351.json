{"path":"src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","commits":[{"id":"ec8b5a20a12931b8d7e616c79c5248ae06cc5568","date":1248471948,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public Iterator/*<AttributeImpl>*/ getAttributeImplsIterator() {\n    return Collections.unmodifiableCollection(attributeImpls.values()).iterator();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0833fee1ce16a2b8e10f21cbccd2e93f3d8ccf31","date":1249940086,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","pathOld":"src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","sourceNew":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public Iterator/*<AttributeImpl>*/ getAttributeImplsIterator() {\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      final State initState = currentState;\n      return new Iterator() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public Object next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.EMPTY_SET.iterator();\n    }\n  }\n\n","sourceOld":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public Iterator/*<AttributeImpl>*/ getAttributeImplsIterator() {\n    return Collections.unmodifiableCollection(attributeImpls.values()).iterator();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8e9bb5eabc9d075f6867b575e11ed8ac0b1d7ff4","date":1250856706,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","pathOld":"src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","sourceNew":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   * <p>Signature for Java 1.5: <code>public Iterator&lt;AttributeImpl&gt; getAttributeImplsIterator()</code>\n   */\n  public Iterator getAttributeImplsIterator() {\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      final State initState = currentState;\n      return new Iterator() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public Object next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.EMPTY_SET.iterator();\n    }\n  }\n\n","sourceOld":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public Iterator/*<AttributeImpl>*/ getAttributeImplsIterator() {\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      final State initState = currentState;\n      return new Iterator() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public Object next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.EMPTY_SET.iterator();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d78f014fded44fbde905f4f84cdc21907b371e8","date":1254383623,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","pathOld":"src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","sourceNew":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public Iterator<AttributeImpl> getAttributeImplsIterator() {\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      final State initState = currentState;\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","sourceOld":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   * <p>Signature for Java 1.5: <code>public Iterator&lt;AttributeImpl&gt; getAttributeImplsIterator()</code>\n   */\n  public Iterator getAttributeImplsIterator() {\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      final State initState = currentState;\n      return new Iterator() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public Object next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.EMPTY_SET.iterator();\n    }\n  }\n\n","bugFix":null,"bugIntro":["1fcb8fbcaef0032d0677e8db53f7255fd6af4367"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","pathOld":"src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","sourceNew":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public Iterator<AttributeImpl> getAttributeImplsIterator() {\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      final State initState = currentState;\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","sourceOld":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public Iterator<AttributeImpl> getAttributeImplsIterator() {\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      final State initState = currentState;\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"8e9bb5eabc9d075f6867b575e11ed8ac0b1d7ff4":["0833fee1ce16a2b8e10f21cbccd2e93f3d8ccf31"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8d78f014fded44fbde905f4f84cdc21907b371e8":["8e9bb5eabc9d075f6867b575e11ed8ac0b1d7ff4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"0833fee1ce16a2b8e10f21cbccd2e93f3d8ccf31":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"8e9bb5eabc9d075f6867b575e11ed8ac0b1d7ff4":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"8d78f014fded44fbde905f4f84cdc21907b371e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0833fee1ce16a2b8e10f21cbccd2e93f3d8ccf31":["8e9bb5eabc9d075f6867b575e11ed8ac0b1d7ff4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["0833fee1ce16a2b8e10f21cbccd2e93f3d8ccf31"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}