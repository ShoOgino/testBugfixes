{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60PointsReader#getBKDReader(String).mjava","commits":[{"id":"4522ffca5a1f420c6a02198c9332d7c596a30ca5","date":1457270822,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60PointsReader#getBKDReader(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60PointReader#getBKDReader(String).mjava","sourceNew":"  private BKDReader getBKDReader(String fieldName) {\n    FieldInfo fieldInfo = readState.fieldInfos.fieldInfo(fieldName);\n    if (fieldInfo == null) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" is unrecognized\");\n    }\n    if (fieldInfo.getPointDimensionCount() == 0) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" did not index point values\");\n    }\n\n    return readers.get(fieldInfo.number);\n  }\n\n","sourceOld":"  private BKDReader getBKDReader(String fieldName) {\n    FieldInfo fieldInfo = readState.fieldInfos.fieldInfo(fieldName);\n    if (fieldInfo == null) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" is unrecognized\");\n    }\n    if (fieldInfo.getPointDimensionCount() == 0) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" did not index point values\");\n    }\n\n    return readers.get(fieldInfo.number);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b01431682e11036a1a7d757a3fa7c1f903fb2c45","date":1460646145,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60PointsReader#getBKDReader(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60PointsReader#getBKDReader(String).mjava","sourceNew":"  /** Returns the underlying {@link BKDReader}.\n   *\n   * @lucene.internal */\n  public BKDReader getBKDReader(String fieldName) {\n    FieldInfo fieldInfo = readState.fieldInfos.fieldInfo(fieldName);\n    if (fieldInfo == null) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" is unrecognized\");\n    }\n    if (fieldInfo.getPointDimensionCount() == 0) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" did not index point values\");\n    }\n\n    return readers.get(fieldInfo.number);\n  }\n\n","sourceOld":"  private BKDReader getBKDReader(String fieldName) {\n    FieldInfo fieldInfo = readState.fieldInfos.fieldInfo(fieldName);\n    if (fieldInfo == null) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" is unrecognized\");\n    }\n    if (fieldInfo.getPointDimensionCount() == 0) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" did not index point values\");\n    }\n\n    return readers.get(fieldInfo.number);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"367f57e2ee85b7f7e28cfe73370a22cf67624f65","date":1476778467,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60PointsReader#getValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60PointsReader#getBKDReader(String).mjava","sourceNew":"  /** Returns the underlying {@link BKDReader}.\n   *\n   * @lucene.internal */\n  @Override\n  public PointValues getValues(String fieldName) {\n    FieldInfo fieldInfo = readState.fieldInfos.fieldInfo(fieldName);\n    if (fieldInfo == null) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" is unrecognized\");\n    }\n    if (fieldInfo.getPointDimensionCount() == 0) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" did not index point values\");\n    }\n\n    return readers.get(fieldInfo.number);\n  }\n\n","sourceOld":"  /** Returns the underlying {@link BKDReader}.\n   *\n   * @lucene.internal */\n  public BKDReader getBKDReader(String fieldName) {\n    FieldInfo fieldInfo = readState.fieldInfos.fieldInfo(fieldName);\n    if (fieldInfo == null) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" is unrecognized\");\n    }\n    if (fieldInfo.getPointDimensionCount() == 0) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" did not index point values\");\n    }\n\n    return readers.get(fieldInfo.number);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60PointsReader#getBKDReader(String).mjava","sourceNew":null,"sourceOld":"  /** Returns the underlying {@link BKDReader}.\n   *\n   * @lucene.internal */\n  public BKDReader getBKDReader(String fieldName) {\n    FieldInfo fieldInfo = readState.fieldInfos.fieldInfo(fieldName);\n    if (fieldInfo == null) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" is unrecognized\");\n    }\n    if (fieldInfo.getPointDimensionCount() == 0) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" did not index point values\");\n    }\n\n    return readers.get(fieldInfo.number);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b01431682e11036a1a7d757a3fa7c1f903fb2c45":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"367f57e2ee85b7f7e28cfe73370a22cf67624f65":["b01431682e11036a1a7d757a3fa7c1f903fb2c45"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["b01431682e11036a1a7d757a3fa7c1f903fb2c45","367f57e2ee85b7f7e28cfe73370a22cf67624f65"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["367f57e2ee85b7f7e28cfe73370a22cf67624f65"]},"commit2Childs":{"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["b01431682e11036a1a7d757a3fa7c1f903fb2c45"],"b01431682e11036a1a7d757a3fa7c1f903fb2c45":["367f57e2ee85b7f7e28cfe73370a22cf67624f65","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"367f57e2ee85b7f7e28cfe73370a22cf67624f65":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}