{"path":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#getNextFacets(CategoryContainer).mjava","commits":[{"id":"b5b25dd09e9e2bbeca84aceaf74e1df8ad1bff80","date":1318183296,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#getNextFacets(CategoryContainer).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public CategoryContainer getNextFacets(CategoryContainer facets) throws NoMoreDataException, IOException {\n    if (facets == null) {\n      facets = new CategoryContainer();\n    } else {\n      facets.clear();\n    }\n    int numFacets = 1 + random.nextInt(maxDocFacets-1); // at least one facet to each doc\n    for (int i=0; i<numFacets; i++) {\n      CategoryPath cp = new CategoryPath();\n      int depth = 1 + random.nextInt(maxFacetDepth-1); // depth 0 is not useful\n      for (int k=0; k<depth; k++) {\n        cp.add(Integer.toString(random.nextInt(maxValue)));\n        addItem();\n      }\n      facets.addCategory(cp);\n      addBytes(cp.toString().length()); // very rough approximation\n    }\n    return facets;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#getNextFacets(CategoryContainer).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#getNextFacets(CategoryContainer).mjava","sourceNew":"  @Override\n  public CategoryContainer getNextFacets(CategoryContainer facets) throws NoMoreDataException, IOException {\n    if (facets == null) {\n      facets = new CategoryContainer();\n    } else {\n      facets.clear();\n    }\n    int numFacets = 1 + random.nextInt(maxDocFacets-1); // at least one facet to each doc\n    for (int i=0; i<numFacets; i++) {\n      CategoryPath cp = new CategoryPath();\n      int depth = 1 + random.nextInt(maxFacetDepth-1); // depth 0 is not useful\n      for (int k=0; k<depth; k++) {\n        cp.add(Integer.toString(random.nextInt(maxValue)));\n        addItem();\n      }\n      facets.addCategory(cp);\n      addBytes(cp.toString().length()); // very rough approximation\n    }\n    return facets;\n  }\n\n","sourceOld":"  @Override\n  public CategoryContainer getNextFacets(CategoryContainer facets) throws NoMoreDataException, IOException {\n    if (facets == null) {\n      facets = new CategoryContainer();\n    } else {\n      facets.clear();\n    }\n    int numFacets = 1 + random.nextInt(maxDocFacets-1); // at least one facet to each doc\n    for (int i=0; i<numFacets; i++) {\n      CategoryPath cp = new CategoryPath();\n      int depth = 1 + random.nextInt(maxFacetDepth-1); // depth 0 is not useful\n      for (int k=0; k<depth; k++) {\n        cp.add(Integer.toString(random.nextInt(maxValue)));\n        addItem();\n      }\n      facets.addCategory(cp);\n      addBytes(cp.toString().length()); // very rough approximation\n    }\n    return facets;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b5b25dd09e9e2bbeca84aceaf74e1df8ad1bff80"],"b5b25dd09e9e2bbeca84aceaf74e1df8ad1bff80":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b5b25dd09e9e2bbeca84aceaf74e1df8ad1bff80":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b5b25dd09e9e2bbeca84aceaf74e1df8ad1bff80"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}