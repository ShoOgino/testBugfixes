{"path":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#ConfigSolrXml(Config,CoreContainer).mjava","commits":[{"id":"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0","date":1366659310,"type":2,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#ConfigSolrXml(Config,CoreContainer).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#ConfigSolrXml(SolrResourceLoader,String,InputStream,String,boolean,CoreContainer).mjava","sourceNew":"  public ConfigSolrXml(Config config, CoreContainer container)\n      throws ParserConfigurationException, IOException, SAXException {\n    super(config);\n    init(container);\n  }\n\n","sourceOld":"  public ConfigSolrXml(SolrResourceLoader loader, String name, InputStream is, String prefix,\n                       boolean subProps, CoreContainer container)\n      throws ParserConfigurationException, IOException, SAXException {\n\n    super(loader, name, new InputSource(is), prefix, subProps);\n    init(container);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b29abed5661c7911e4b45d5a3d79a186268e28c4","date":1366675770,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#ConfigSolrXml(Config,CoreContainer).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#ConfigSolrXml(Config,CoreContainer).mjava","sourceNew":"  public ConfigSolrXml(Config config, CoreContainer container)\n      throws ParserConfigurationException, IOException, SAXException {\n    super(config);\n    checkForIllegalConfig(container);\n    \n    fillPropMap();\n    \n    String coreRoot = get(CfgProp.SOLR_COREROOTDIRECTORY, container.getSolrHome());\n    coreDescriptorMap = solrCoreDiscoverer.discover(container, new File(coreRoot));\n  }\n\n","sourceOld":"  public ConfigSolrXml(Config config, CoreContainer container)\n      throws ParserConfigurationException, IOException, SAXException {\n    super(config);\n    init(container);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aff95548e98887da066e6b1f625edf80658ea345","date":1366679225,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#ConfigSolrXml(Config,CoreContainer).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#ConfigSolrXml(Config,CoreContainer).mjava","sourceNew":"  public ConfigSolrXml(Config config, CoreContainer container)\n      throws ParserConfigurationException, IOException, SAXException {\n    super(config);\n    checkForIllegalConfig(container);\n    \n    fillPropMap();\n    \n    String coreRoot = get(CfgProp.SOLR_COREROOTDIRECTORY, (container == null ? null : container.getSolrHome()));\n    coreDescriptorMap = solrCoreDiscoverer.discover(container, new File(coreRoot));\n  }\n\n","sourceOld":"  public ConfigSolrXml(Config config, CoreContainer container)\n      throws ParserConfigurationException, IOException, SAXException {\n    super(config);\n    checkForIllegalConfig(container);\n    \n    fillPropMap();\n    \n    String coreRoot = get(CfgProp.SOLR_COREROOTDIRECTORY, container.getSolrHome());\n    coreDescriptorMap = solrCoreDiscoverer.discover(container, new File(coreRoot));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9","date":1366986755,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#ConfigSolrXml(Config,CoreContainer).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#ConfigSolrXml(Config,CoreContainer).mjava","sourceNew":"  public ConfigSolrXml(Config config, CoreContainer container)\n      throws ParserConfigurationException, IOException, SAXException {\n    super(config);\n    checkForIllegalConfig();\n    \n    fillPropMap();\n    \n    String coreRoot = get(CfgProp.SOLR_COREROOTDIRECTORY, (container == null ? config.getResourceLoader().getInstanceDir() : container.getSolrHome()));\n    coreDescriptorMap = solrCoreDiscoverer.discover(container, new File(coreRoot));\n  }\n\n","sourceOld":"  public ConfigSolrXml(Config config, CoreContainer container)\n      throws ParserConfigurationException, IOException, SAXException {\n    super(config);\n    checkForIllegalConfig(container);\n    \n    fillPropMap();\n    \n    String coreRoot = get(CfgProp.SOLR_COREROOTDIRECTORY, (container == null ? null : container.getSolrHome()));\n    coreDescriptorMap = solrCoreDiscoverer.discover(container, new File(coreRoot));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d264f386d864b5751209060e8886ca9845f70469","date":1372172126,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#ConfigSolrXml(Config,CoreContainer).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#ConfigSolrXml(Config,CoreContainer).mjava","sourceNew":"  public ConfigSolrXml(Config config, CoreContainer container) {\n    super(config);\n    try {\n      checkForIllegalConfig();\n      fillPropMap();\n      config.substituteProperties();\n      String coreRoot = get(CfgProp.SOLR_COREROOTDIRECTORY, (container == null ? config.getResourceLoader().getInstanceDir() : container.getSolrHome()));\n      coreDescriptorMap = solrCoreDiscoverer.discover(container, new File(coreRoot));\n    }\n    catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public ConfigSolrXml(Config config, CoreContainer container)\n      throws ParserConfigurationException, IOException, SAXException {\n    super(config);\n    checkForIllegalConfig();\n    \n    fillPropMap();\n    \n    String coreRoot = get(CfgProp.SOLR_COREROOTDIRECTORY, (container == null ? config.getResourceLoader().getInstanceDir() : container.getSolrHome()));\n    coreDescriptorMap = solrCoreDiscoverer.discover(container, new File(coreRoot));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"354983dcdf70c800bf2573d10b54a7391b1dc167","date":1372183171,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#ConfigSolrXml(Config,CoreContainer).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#ConfigSolrXml(Config,CoreContainer).mjava","sourceNew":"  public ConfigSolrXml(Config config, CoreContainer container)\n      throws ParserConfigurationException, IOException, SAXException {\n    super(config);\n    checkForIllegalConfig();\n    \n    fillPropMap();\n    \n    String coreRoot = get(CfgProp.SOLR_COREROOTDIRECTORY, (container == null ? config.getResourceLoader().getInstanceDir() : container.getSolrHome()));\n    coreDescriptorMap = solrCoreDiscoverer.discover(container, new File(coreRoot));\n  }\n\n","sourceOld":"  public ConfigSolrXml(Config config, CoreContainer container) {\n    super(config);\n    try {\n      checkForIllegalConfig();\n      fillPropMap();\n      config.substituteProperties();\n      String coreRoot = get(CfgProp.SOLR_COREROOTDIRECTORY, (container == null ? config.getResourceLoader().getInstanceDir() : container.getSolrHome()));\n      coreDescriptorMap = solrCoreDiscoverer.discover(container, new File(coreRoot));\n    }\n    catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7116474e2e390259937401cf928323e0cbc75e60","date":1372780249,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#ConfigSolrXml(Config,CoreContainer).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#ConfigSolrXml(Config,CoreContainer).mjava","sourceNew":"  public ConfigSolrXml(Config config, CoreContainer container) {\n    super(config);\n    try {\n      checkForIllegalConfig();\n      fillPropMap();\n      config.substituteProperties();\n      String coreRoot = get(CfgProp.SOLR_COREROOTDIRECTORY, (container == null ? config.getResourceLoader().getInstanceDir() : container.getSolrHome()));\n      coreDescriptorMap = solrCoreDiscoverer.discover(container, new File(coreRoot));\n    }\n    catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public ConfigSolrXml(Config config, CoreContainer container)\n      throws ParserConfigurationException, IOException, SAXException {\n    super(config);\n    checkForIllegalConfig();\n    \n    fillPropMap();\n    \n    String coreRoot = get(CfgProp.SOLR_COREROOTDIRECTORY, (container == null ? config.getResourceLoader().getInstanceDir() : container.getSolrHome()));\n    coreDescriptorMap = solrCoreDiscoverer.discover(container, new File(coreRoot));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#ConfigSolrXml(Config).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#ConfigSolrXml(Config,CoreContainer).mjava","sourceNew":"  public ConfigSolrXml(Config config) {\n    super(config);\n    try {\n      checkForIllegalConfig();\n      fillPropMap();\n      config.substituteProperties();\n      log.info(\"Config-defined core root directory: {}\", get(CfgProp.SOLR_COREROOTDIRECTORY, \"\"));\n      String coreRoot = get(CfgProp.SOLR_COREROOTDIRECTORY, config.getResourceLoader().getInstanceDir());\n      coresLocator = new CorePropertiesLocator(coreRoot);\n    }\n    catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public ConfigSolrXml(Config config, CoreContainer container) {\n    super(config);\n    try {\n      checkForIllegalConfig();\n      fillPropMap();\n      config.substituteProperties();\n      String coreRoot = get(CfgProp.SOLR_COREROOTDIRECTORY, (container == null ? config.getResourceLoader().getInstanceDir() : container.getSolrHome()));\n      coreDescriptorMap = solrCoreDiscoverer.discover(container, new File(coreRoot));\n    }\n    catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":["77993852b2d2185c378b115f8842c0adaeb8f709","a877077e0a22a42eebce7d1052c58e97d3afb12d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#ConfigSolrXml(Config,CoreContainer).mjava","sourceNew":null,"sourceOld":"  public ConfigSolrXml(Config config, CoreContainer container)\n      throws ParserConfigurationException, IOException, SAXException {\n    super(config);\n    checkForIllegalConfig();\n    \n    fillPropMap();\n    \n    String coreRoot = get(CfgProp.SOLR_COREROOTDIRECTORY, (container == null ? config.getResourceLoader().getInstanceDir() : container.getSolrHome()));\n    coreDescriptorMap = solrCoreDiscoverer.discover(container, new File(coreRoot));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7116474e2e390259937401cf928323e0cbc75e60":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9":["aff95548e98887da066e6b1f625edf80658ea345"],"b29abed5661c7911e4b45d5a3d79a186268e28c4":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"aff95548e98887da066e6b1f625edf80658ea345":["b29abed5661c7911e4b45d5a3d79a186268e28c4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"354983dcdf70c800bf2573d10b54a7391b1dc167":["d264f386d864b5751209060e8886ca9845f70469"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["7116474e2e390259937401cf928323e0cbc75e60"],"d264f386d864b5751209060e8886ca9845f70469":["e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9"],"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"]},"commit2Childs":{"7116474e2e390259937401cf928323e0cbc75e60":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d264f386d864b5751209060e8886ca9845f70469"],"b29abed5661c7911e4b45d5a3d79a186268e28c4":["aff95548e98887da066e6b1f625edf80658ea345"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"aff95548e98887da066e6b1f625edf80658ea345":["e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["7116474e2e390259937401cf928323e0cbc75e60"],"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0":["b29abed5661c7911e4b45d5a3d79a186268e28c4"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d264f386d864b5751209060e8886ca9845f70469":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}