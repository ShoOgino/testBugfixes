{"path":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","commits":[{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCaseJ4#beforeClassLuceneTestCaseJ4().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    codec = installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(seedRnd) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(seedRnd) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    codec = installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(seedRnd) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(seedRnd) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"157e325cec248f59df94ab8a12d22dda083e37aa","date":1285003635,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    codec = installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(seedRnd) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(seedRnd) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    codec = installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(seedRnd) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(seedRnd) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f9dba8ffba48fba97d7a90fd45f6da87ba55736","date":1285244347,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    staticSeed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : UUID.fromString(TEST_SEED).getMostSignificantBits();\n    random.setSeed(staticSeed);\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    codec = installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(random) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    codec = installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(seedRnd) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(seedRnd) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d47f68d60cbff5718136b945ba8c55982342f38","date":1285583375,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    staticSeed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l1;\n    random.setSeed(staticSeed);\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    codec = installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(random) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    staticSeed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : UUID.fromString(TEST_SEED).getMostSignificantBits();\n    random.setSeed(staticSeed);\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    codec = installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(random) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13452165d8bf3d45a72f572aaed3c679735d3af2","date":1290101307,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    staticSeed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l1;\n    random.setSeed(staticSeed);\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    codec = installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(random) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n    randomCodecProvider = new RandomCodecProvider(random);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    staticSeed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l1;\n    random.setSeed(staticSeed);\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    codec = installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(random) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bce89597a7c3a4535b5b7f8100c2078e520f6e57","date":1290106041,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    staticSeed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l1;\n    random.setSeed(staticSeed);\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    codec = installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(random) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    staticSeed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l1;\n    random.setSeed(staticSeed);\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    codec = installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(random) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n    randomCodecProvider = new RandomCodecProvider(random);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"182cfc5b92d5da17fd74fc41c8091ed157d80ff4","date":1290263949,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    staticSeed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l1;\n    random.setSeed(staticSeed);\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    savedCodecProvider = CodecProvider.getDefault();\n    if (\"randomPerField\".equals(TEST_CODEC)) {\n      if (random.nextInt(4) == 0) { // preflex-only setup\n        codec = installTestCodecs(\"PreFlex\", CodecProvider.getDefault());\n      } else { // per-field setup\n        CodecProvider.setDefault(new RandomCodecProvider());\n        codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n      }\n    } else { // ordinary setup\n      codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n    }\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(random) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    staticSeed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l1;\n    random.setSeed(staticSeed);\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    codec = installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(random) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab53d2675ddc15e06676aa22e06ab60d13cfcc03","date":1290945467,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    staticSeed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l1;\n    random.setSeed(staticSeed);\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    savedCodecProvider = CodecProvider.getDefault();\n    if (\"randomPerField\".equals(TEST_CODEC)) {\n      if (random.nextInt(4) == 0) { // preflex-only setup\n        codec = installTestCodecs(\"PreFlex\", CodecProvider.getDefault());\n      } else { // per-field setup\n        CodecProvider.setDefault(new RandomCodecProvider(random));\n        codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n      }\n    } else { // ordinary setup\n      codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n    }\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(random) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    staticSeed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l1;\n    random.setSeed(staticSeed);\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    savedCodecProvider = CodecProvider.getDefault();\n    if (\"randomPerField\".equals(TEST_CODEC)) {\n      if (random.nextInt(4) == 0) { // preflex-only setup\n        codec = installTestCodecs(\"PreFlex\", CodecProvider.getDefault());\n      } else { // per-field setup\n        CodecProvider.setDefault(new RandomCodecProvider());\n        codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n      }\n    } else { // ordinary setup\n      codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n    }\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(random) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    staticSeed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l1;\n    random.setSeed(staticSeed);\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    savedCodecProvider = CodecProvider.getDefault();\n    if (\"randomPerField\".equals(TEST_CODEC)) {\n      if (random.nextInt(4) == 0) { // preflex-only setup\n        codec = installTestCodecs(\"PreFlex\", CodecProvider.getDefault());\n      } else { // per-field setup\n        CodecProvider.setDefault(new RandomCodecProvider(random));\n        codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n      }\n    } else { // ordinary setup\n      codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n    }\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(random) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    staticSeed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l1;\n    random.setSeed(staticSeed);\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    codec = installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(random) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    staticSeed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l1;\n    random.setSeed(staticSeed);\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    savedCodecProvider = CodecProvider.getDefault();\n    if (\"randomPerField\".equals(TEST_CODEC)) {\n      if (random.nextInt(4) == 0) { // preflex-only setup\n        codec = installTestCodecs(\"PreFlex\", CodecProvider.getDefault());\n      } else { // per-field setup\n        CodecProvider.setDefault(new RandomCodecProvider(random));\n        codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n      }\n    } else { // ordinary setup\n      codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n    }\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(random) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    staticSeed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l1;\n    random.setSeed(staticSeed);\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    savedCodecProvider = CodecProvider.getDefault();\n    if (\"randomPerField\".equals(TEST_CODEC)) {\n      if (random.nextInt(4) == 0) { // preflex-only setup\n        codec = installTestCodecs(\"PreFlex\", CodecProvider.getDefault());\n      } else { // per-field setup\n        CodecProvider.setDefault(new RandomCodecProvider(random));\n        codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n      }\n    } else { // ordinary setup\n      codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n    }\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(random) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    staticSeed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l1;\n    random.setSeed(staticSeed);\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    savedCodecProvider = CodecProvider.getDefault();\n    if (\"randomPerField\".equals(TEST_CODEC)) {\n      if (random.nextInt(4) == 0) { // preflex-only setup\n        codec = installTestCodecs(\"PreFlex\", CodecProvider.getDefault());\n      } else { // per-field setup\n        CodecProvider.setDefault(new RandomCodecProvider(random));\n        codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n      }\n    } else { // ordinary setup\n      codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n    }\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(random) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    staticSeed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l1;\n    random.setSeed(staticSeed);\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    savedCodecProvider = CodecProvider.getDefault();\n    if (\"randomPerField\".equals(TEST_CODEC)) {\n      if (random.nextInt(4) == 0) { // preflex-only setup\n        codec = installTestCodecs(\"PreFlex\", CodecProvider.getDefault());\n      } else { // per-field setup\n        CodecProvider.setDefault(new RandomCodecProvider(random));\n        codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n      }\n    } else { // ordinary setup\n      codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n    }\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(random) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    staticSeed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l1;\n    random.setSeed(staticSeed);\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    savedCodecProvider = CodecProvider.getDefault();\n    if (\"randomPerField\".equals(TEST_CODEC)) {\n      if (random.nextInt(4) == 0) { // preflex-only setup\n        codec = installTestCodecs(\"PreFlex\", CodecProvider.getDefault());\n      } else { // per-field setup\n        CodecProvider.setDefault(new RandomCodecProvider(random));\n        codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n      }\n    } else { // ordinary setup\n      codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n    }\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(random) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#beforeClassLuceneTestCaseJ4().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    staticSeed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l1;\n    random.setSeed(staticSeed);\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    savedCodecProvider = CodecProvider.getDefault();\n    if (\"randomPerField\".equals(TEST_CODEC)) {\n      if (random.nextInt(4) == 0) { // preflex-only setup\n        codec = installTestCodecs(\"PreFlex\", CodecProvider.getDefault());\n      } else { // per-field setup\n        CodecProvider.setDefault(new RandomCodecProvider(random));\n        codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n      }\n    } else { // ordinary setup\n      codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n    }\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(random) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassLuceneTestCaseJ4() {\n    staticSeed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l1;\n    random.setSeed(staticSeed);\n    stores = Collections.synchronizedMap(new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>());\n    savedCodecProvider = CodecProvider.getDefault();\n    if (\"randomPerField\".equals(TEST_CODEC)) {\n      if (random.nextInt(4) == 0) { // preflex-only setup\n        codec = installTestCodecs(\"PreFlex\", CodecProvider.getDefault());\n      } else { // per-field setup\n        CodecProvider.setDefault(new RandomCodecProvider(random));\n        codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n      }\n    } else { // ordinary setup\n      codec = installTestCodecs(TEST_CODEC, CodecProvider.getDefault());\n    }\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") ? randomLocale(random) : localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\") ? randomTimeZone(random) : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n    testsFailed = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ab53d2675ddc15e06676aa22e06ab60d13cfcc03":["182cfc5b92d5da17fd74fc41c8091ed157d80ff4"],"182cfc5b92d5da17fd74fc41c8091ed157d80ff4":["bce89597a7c3a4535b5b7f8100c2078e520f6e57"],"8d47f68d60cbff5718136b945ba8c55982342f38":["5f9dba8ffba48fba97d7a90fd45f6da87ba55736"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ab53d2675ddc15e06676aa22e06ab60d13cfcc03"],"5f9dba8ffba48fba97d7a90fd45f6da87ba55736":["157e325cec248f59df94ab8a12d22dda083e37aa"],"43b04c27924fe393e38e9f0986e32c634f261859":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["ab53d2675ddc15e06676aa22e06ab60d13cfcc03"],"bce89597a7c3a4535b5b7f8100c2078e520f6e57":["13452165d8bf3d45a72f572aaed3c679735d3af2"],"13452165d8bf3d45a72f572aaed3c679735d3af2":["8d47f68d60cbff5718136b945ba8c55982342f38"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["3bb13258feba31ab676502787ab2e1779f129b7a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"157e325cec248f59df94ab8a12d22dda083e37aa":["43b04c27924fe393e38e9f0986e32c634f261859"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"3bb13258feba31ab676502787ab2e1779f129b7a":["8d47f68d60cbff5718136b945ba8c55982342f38","ab53d2675ddc15e06676aa22e06ab60d13cfcc03"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"]},"commit2Childs":{"ab53d2675ddc15e06676aa22e06ab60d13cfcc03":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","3bb13258feba31ab676502787ab2e1779f129b7a"],"182cfc5b92d5da17fd74fc41c8091ed157d80ff4":["ab53d2675ddc15e06676aa22e06ab60d13cfcc03"],"8d47f68d60cbff5718136b945ba8c55982342f38":["13452165d8bf3d45a72f572aaed3c679735d3af2","3bb13258feba31ab676502787ab2e1779f129b7a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"5f9dba8ffba48fba97d7a90fd45f6da87ba55736":["8d47f68d60cbff5718136b945ba8c55982342f38"],"43b04c27924fe393e38e9f0986e32c634f261859":["157e325cec248f59df94ab8a12d22dda083e37aa"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bce89597a7c3a4535b5b7f8100c2078e520f6e57":["182cfc5b92d5da17fd74fc41c8091ed157d80ff4"],"13452165d8bf3d45a72f572aaed3c679735d3af2":["bce89597a7c3a4535b5b7f8100c2078e520f6e57"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","43b04c27924fe393e38e9f0986e32c634f261859"],"157e325cec248f59df94ab8a12d22dda083e37aa":["5f9dba8ffba48fba97d7a90fd45f6da87ba55736"],"3bb13258feba31ab676502787ab2e1779f129b7a":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}