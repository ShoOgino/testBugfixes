{"path":"src/java/org/apache/lucene/search/BooleanScorer#explain(int).mjava","commits":[{"id":"27274410c91546fcfc28e692abd2dd77ca99be4b","date":1042501834,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanScorer#explain(int).mjava","pathOld":"/dev/null","sourceNew":"  public Explanation explain(int doc) throws IOException {\n    Explanation sumExpl = new Explanation();\n    sumExpl.setDescription(\"sum of:\");\n    int coord = 0;\n    float sum = 0.0f;\n    for (SubScorer s = scorers; s != null; s = s.next) {\n      Explanation e = s.scorer.explain(doc);\n      if (e.getValue() > 0) {\n        if (!s.prohibited) {\n          sumExpl.addDetail(e);\n          sum += e.getValue();\n          coord++;\n        } else {\n          return new Explanation(0.0f, \"match prohibited\");\n        }\n      } else if (s.required) {\n        return new Explanation(0.0f, \"match required\");\n      }\n    }\n    sumExpl.setValue(sum);\n\n    if (coord == 1)                               // only one clause matched\n      sumExpl = sumExpl.getDetails()[0];          // eliminate wrapper\n\n    float coordFactor = getSimilarity().coord(coord, maxCoord-1);\n    if (coordFactor == 1.0f)                      // coord is no-op\n      return sumExpl;                             // eliminate wrapper\n    else {\n      Explanation result = new Explanation();\n      result.setDescription(\"product of:\");\n      result.addDetail(sumExpl);\n      result.addDetail(new Explanation(coordFactor,\n                                       \"coord(\"+coord+\"/\"+(maxCoord-1)+\")\"));\n      result.setValue(sum*coordFactor);\n      return result;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d26db6980435280d32792a7ddd3e26866ac98ea9","date":1042658704,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanScorer#explain(int).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanScorer#explain(int).mjava","sourceNew":"  public Explanation explain(int doc) throws IOException {\n    throw new UnsupportedOperationException();\n  }\n\n","sourceOld":"  public Explanation explain(int doc) throws IOException {\n    Explanation sumExpl = new Explanation();\n    sumExpl.setDescription(\"sum of:\");\n    int coord = 0;\n    float sum = 0.0f;\n    for (SubScorer s = scorers; s != null; s = s.next) {\n      Explanation e = s.scorer.explain(doc);\n      if (e.getValue() > 0) {\n        if (!s.prohibited) {\n          sumExpl.addDetail(e);\n          sum += e.getValue();\n          coord++;\n        } else {\n          return new Explanation(0.0f, \"match prohibited\");\n        }\n      } else if (s.required) {\n        return new Explanation(0.0f, \"match required\");\n      }\n    }\n    sumExpl.setValue(sum);\n\n    if (coord == 1)                               // only one clause matched\n      sumExpl = sumExpl.getDetails()[0];          // eliminate wrapper\n\n    float coordFactor = getSimilarity().coord(coord, maxCoord-1);\n    if (coordFactor == 1.0f)                      // coord is no-op\n      return sumExpl;                             // eliminate wrapper\n    else {\n      Explanation result = new Explanation();\n      result.setDescription(\"product of:\");\n      result.addDetail(sumExpl);\n      result.addDetail(new Explanation(coordFactor,\n                                       \"coord(\"+coord+\"/\"+(maxCoord-1)+\")\"));\n      result.setValue(sum*coordFactor);\n      return result;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f314029fc991d70f9c6a7fd0b01f36da98c1c32","date":1091823553,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanScorer#explain(int).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanScorer#explain(int).mjava","sourceNew":"  public Explanation explain(int doc) {\n    throw new UnsupportedOperationException();\n  }\n\n","sourceOld":"  public Explanation explain(int doc) throws IOException {\n    throw new UnsupportedOperationException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"486cfd5a3f7481938475c113415d896f7a74a4a9","date":1256682581,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/BooleanScorer#explain(int).mjava","sourceNew":null,"sourceOld":"  public Explanation explain(int doc) {\n    throw new UnsupportedOperationException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"486cfd5a3f7481938475c113415d896f7a74a4a9":["3f314029fc991d70f9c6a7fd0b01f36da98c1c32"],"3f314029fc991d70f9c6a7fd0b01f36da98c1c32":["d26db6980435280d32792a7ddd3e26866ac98ea9"],"27274410c91546fcfc28e692abd2dd77ca99be4b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d26db6980435280d32792a7ddd3e26866ac98ea9":["27274410c91546fcfc28e692abd2dd77ca99be4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["486cfd5a3f7481938475c113415d896f7a74a4a9"]},"commit2Childs":{"486cfd5a3f7481938475c113415d896f7a74a4a9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3f314029fc991d70f9c6a7fd0b01f36da98c1c32":["486cfd5a3f7481938475c113415d896f7a74a4a9"],"27274410c91546fcfc28e692abd2dd77ca99be4b":["d26db6980435280d32792a7ddd3e26866ac98ea9"],"d26db6980435280d32792a7ddd3e26866ac98ea9":["3f314029fc991d70f9c6a7fd0b01f36da98c1c32"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["27274410c91546fcfc28e692abd2dd77ca99be4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}