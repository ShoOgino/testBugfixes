{"path":"backwards/src/java/org/apache/lucene/index/DocumentsWriter#setRAMBufferSizeMB(double).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/index/DocumentsWriter#setRAMBufferSizeMB(double).mjava","pathOld":"/dev/null","sourceNew":"  /** Set how much RAM we can use before flushing. */\n  synchronized void setRAMBufferSizeMB(double mb) {\n    if (mb == IndexWriter.DISABLE_AUTO_FLUSH) {\n      ramBufferSize = IndexWriter.DISABLE_AUTO_FLUSH;\n      waitQueuePauseBytes = 4*1024*1024;\n      waitQueueResumeBytes = 2*1024*1024;\n    } else {\n      ramBufferSize = (long) (mb*1024*1024);\n      waitQueuePauseBytes = (long) (ramBufferSize*0.1);\n      waitQueueResumeBytes = (long) (ramBufferSize*0.05);\n      freeTrigger = (long) (1.05 * ramBufferSize);\n      freeLevel = (long) (0.95 * ramBufferSize);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/DocumentsWriter#setRAMBufferSizeMB(double).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/DocumentsWriter#setRAMBufferSizeMB(double).mjava","sourceNew":"  /** Set how much RAM we can use before flushing. */\n  synchronized void setRAMBufferSizeMB(double mb) {\n    if (mb == IndexWriter.DISABLE_AUTO_FLUSH) {\n      ramBufferSize = IndexWriter.DISABLE_AUTO_FLUSH;\n      waitQueuePauseBytes = 4*1024*1024;\n      waitQueueResumeBytes = 2*1024*1024;\n    } else {\n      ramBufferSize = (long) (mb*1024*1024);\n      waitQueuePauseBytes = (long) (ramBufferSize*0.1);\n      waitQueueResumeBytes = (long) (ramBufferSize*0.05);\n      freeTrigger = (long) (1.05 * ramBufferSize);\n      freeLevel = (long) (0.95 * ramBufferSize);\n    }\n  }\n\n","sourceOld":"  /** Set how much RAM we can use before flushing. */\n  synchronized void setRAMBufferSizeMB(double mb) {\n    if (mb == IndexWriter.DISABLE_AUTO_FLUSH) {\n      ramBufferSize = IndexWriter.DISABLE_AUTO_FLUSH;\n      waitQueuePauseBytes = 4*1024*1024;\n      waitQueueResumeBytes = 2*1024*1024;\n    } else {\n      ramBufferSize = (long) (mb*1024*1024);\n      waitQueuePauseBytes = (long) (ramBufferSize*0.1);\n      waitQueueResumeBytes = (long) (ramBufferSize*0.05);\n      freeTrigger = (long) (1.05 * ramBufferSize);\n      freeLevel = (long) (0.95 * ramBufferSize);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}