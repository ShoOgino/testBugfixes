{"path":"lucene/src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,MergeState.CheckAbort).mjava","commits":[{"id":"e623f9a0e45508ab149c2fb3e0fd0c2503f98186","date":1295889977,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,MergeState.CheckAbort).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,SegmentMerger.CheckAbort).mjava","sourceNew":"    CompoundFileWriter(Directory dir, String name, MergeState.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet<String>();\n        entries = new LinkedList<FileEntry>();\n    }\n\n","sourceOld":"    CompoundFileWriter(Directory dir, String name, SegmentMerger.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet<String>();\n        entries = new LinkedList<FileEntry>();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,MergeState.CheckAbort).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,SegmentMerger.CheckAbort).mjava","sourceNew":"    CompoundFileWriter(Directory dir, String name, MergeState.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet<String>();\n        entries = new LinkedList<FileEntry>();\n    }\n\n","sourceOld":"    CompoundFileWriter(Directory dir, String name, SegmentMerger.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet<String>();\n        entries = new LinkedList<FileEntry>();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,MergeState.CheckAbort).mjava","pathOld":"/dev/null","sourceNew":"    CompoundFileWriter(Directory dir, String name, MergeState.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet<String>();\n        entries = new LinkedList<FileEntry>();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,IOContext,MergeState.CheckAbort).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,MergeState.CheckAbort).mjava","sourceNew":"    CompoundFileWriter(Directory dir, String name, IOContext context, MergeState.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet<String>();\n        entries = new LinkedList<FileEntry>();\n        this.context = context;\n    }\n\n","sourceOld":"    CompoundFileWriter(Directory dir, String name, MergeState.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet<String>();\n        entries = new LinkedList<FileEntry>();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0aab6e810b4b0d3743d6a048be0602801f4b3920","date":1308671625,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,MergeState.CheckAbort).mjava","sourceNew":null,"sourceOld":"    CompoundFileWriter(Directory dir, String name, MergeState.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet<String>();\n        entries = new LinkedList<FileEntry>();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileWriter#CompoundFileWriter(Directory,String,MergeState.CheckAbort).mjava","sourceNew":null,"sourceOld":"    CompoundFileWriter(Directory dir, String name, MergeState.CheckAbort checkAbort) {\n        if (dir == null)\n            throw new NullPointerException(\"directory cannot be null\");\n        if (name == null)\n            throw new NullPointerException(\"name cannot be null\");\n        this.checkAbort = checkAbort;\n        directory = dir;\n        fileName = name;\n        ids = new HashSet<String>();\n        entries = new LinkedList<FileEntry>();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e623f9a0e45508ab149c2fb3e0fd0c2503f98186"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["e623f9a0e45508ab149c2fb3e0fd0c2503f98186"],"e623f9a0e45508ab149c2fb3e0fd0c2503f98186":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["e623f9a0e45508ab149c2fb3e0fd0c2503f98186"],"2553b00f699380c64959ccb27991289aae87be2e":["e623f9a0e45508ab149c2fb3e0fd0c2503f98186","0aab6e810b4b0d3743d6a048be0602801f4b3920"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0aab6e810b4b0d3743d6a048be0602801f4b3920"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e623f9a0e45508ab149c2fb3e0fd0c2503f98186"]},"commit2Childs":{"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","e623f9a0e45508ab149c2fb3e0fd0c2503f98186","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"e623f9a0e45508ab149c2fb3e0fd0c2503f98186":["29ef99d61cda9641b6250bf9567329a6e65f901d","0aab6e810b4b0d3743d6a048be0602801f4b3920","639c36565ce03aed5b0fce7c9e4448e53a1f7efd","2553b00f699380c64959ccb27991289aae87be2e","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["2553b00f699380c64959ccb27991289aae87be2e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":[],"2553b00f699380c64959ccb27991289aae87be2e":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","639c36565ce03aed5b0fce7c9e4448e53a1f7efd","2553b00f699380c64959ccb27991289aae87be2e","cd5edd1f2b162a5cfa08efd17851a07373a96817","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}