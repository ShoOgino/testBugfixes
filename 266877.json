{"path":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#beforeClass().mjava","commits":[{"id":"637a392e2e05d4e1179ac3c532cfeef0cde977ba","date":1376347977,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    String oldCacheNamePropValue = System\n        .getProperty(\"blockJoinParentFilterCache\");\n    System.setProperty(\"blockJoinParentFilterCache\", (cachedMode = random()\n        .nextBoolean()) ? \"blockJoinParentFilterCache\" : \"don't cache\");\n    if (oldCacheNamePropValue != null) {\n      System.setProperty(\"blockJoinParentFilterCache\", oldCacheNamePropValue);\n    }\n    inputFactory = XMLInputFactory.newInstance();\n    \n    exe = // Executors.newSingleThreadExecutor();\n    rarely() ? Executors.newFixedThreadPool(atLeast(2), new DefaultSolrThreadFactory(\"AddBlockUpdateTest\")) : Executors\n        .newCachedThreadPool(new DefaultSolrThreadFactory(\"AddBlockUpdateTest\"));\n\n\n    initCore(\"solrconfig.xml\", \"schema15.xml\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    String oldCacheNamePropValue = System\n        .getProperty(\"blockJoinParentFilterCache\");\n    System.setProperty(\"blockJoinParentFilterCache\", (cachedMode = random()\n        .nextBoolean()) ? \"blockJoinParentFilterCache\" : \"don't cache\");\n    if (oldCacheNamePropValue != null) {\n      System.setProperty(\"blockJoinParentFilterCache\", oldCacheNamePropValue);\n    }\n    inputFactory = XMLInputFactory.newInstance();\n    \n    exe = // Executors.newSingleThreadExecutor();\n    rarely() ? Executors.newFixedThreadPool(atLeast(2), new DefaultSolrThreadFactory(\"AddBlockUpdateTest\")) : Executors\n        .newCachedThreadPool(new DefaultSolrThreadFactory(\"AddBlockUpdateTest\"));\n\n\n    initCore(\"solrconfig.xml\", \"schema15.xml\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb5af3afeddbb803fb785098176e6e177c34261b","date":1428905393,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    String oldCacheNamePropValue = System\n        .getProperty(\"blockJoinParentFilterCache\");\n    System.setProperty(\"blockJoinParentFilterCache\", (cachedMode = random()\n        .nextBoolean()) ? \"blockJoinParentFilterCache\" : \"don't cache\");\n    if (oldCacheNamePropValue != null) {\n      System.setProperty(\"blockJoinParentFilterCache\", oldCacheNamePropValue);\n    }\n    inputFactory = XMLInputFactory.newInstance();\n    \n    exe = // Executors.newSingleThreadExecutor();\n    rarely() ? ExecutorUtil.newMDCAwareFixedThreadPool(atLeast(2), new DefaultSolrThreadFactory(\"AddBlockUpdateTest\")) : ExecutorUtil\n        .newMDCAwareCachedThreadPool(new DefaultSolrThreadFactory(\"AddBlockUpdateTest\"));\n\n\n    initCore(\"solrconfig.xml\", \"schema15.xml\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    String oldCacheNamePropValue = System\n        .getProperty(\"blockJoinParentFilterCache\");\n    System.setProperty(\"blockJoinParentFilterCache\", (cachedMode = random()\n        .nextBoolean()) ? \"blockJoinParentFilterCache\" : \"don't cache\");\n    if (oldCacheNamePropValue != null) {\n      System.setProperty(\"blockJoinParentFilterCache\", oldCacheNamePropValue);\n    }\n    inputFactory = XMLInputFactory.newInstance();\n    \n    exe = // Executors.newSingleThreadExecutor();\n    rarely() ? Executors.newFixedThreadPool(atLeast(2), new DefaultSolrThreadFactory(\"AddBlockUpdateTest\")) : Executors\n        .newCachedThreadPool(new DefaultSolrThreadFactory(\"AddBlockUpdateTest\"));\n\n\n    initCore(\"solrconfig.xml\", \"schema15.xml\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1a5eff758fefcac883606f32579ae501a14119","date":1553516101,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    String oldCacheNamePropValue = System\n        .getProperty(\"blockJoinParentFilterCache\");\n    System.setProperty(\"blockJoinParentFilterCache\", (cachedMode = random()\n        .nextBoolean()) ? \"blockJoinParentFilterCache\" : \"don't cache\");\n    if (oldCacheNamePropValue != null) {\n      System.setProperty(\"blockJoinParentFilterCache\", oldCacheNamePropValue);\n    }\n    inputFactory = XMLInputFactory.newInstance();\n\n    exe = // Executors.newSingleThreadExecutor();\n    rarely() ? ExecutorUtil.newMDCAwareFixedThreadPool(atLeast(2), new DefaultSolrThreadFactory(\"AddBlockUpdateTest\")) : ExecutorUtil\n        .newMDCAwareCachedThreadPool(new DefaultSolrThreadFactory(\"AddBlockUpdateTest\"));\n\n\n    initCore(\"solrconfig.xml\", \"schema15.xml\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    String oldCacheNamePropValue = System\n        .getProperty(\"blockJoinParentFilterCache\");\n    System.setProperty(\"blockJoinParentFilterCache\", (cachedMode = random()\n        .nextBoolean()) ? \"blockJoinParentFilterCache\" : \"don't cache\");\n    if (oldCacheNamePropValue != null) {\n      System.setProperty(\"blockJoinParentFilterCache\", oldCacheNamePropValue);\n    }\n    inputFactory = XMLInputFactory.newInstance();\n    \n    exe = // Executors.newSingleThreadExecutor();\n    rarely() ? ExecutorUtil.newMDCAwareFixedThreadPool(atLeast(2), new DefaultSolrThreadFactory(\"AddBlockUpdateTest\")) : ExecutorUtil\n        .newMDCAwareCachedThreadPool(new DefaultSolrThreadFactory(\"AddBlockUpdateTest\"));\n\n\n    initCore(\"solrconfig.xml\", \"schema15.xml\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad2010e2591e2d11678b59291d2ab31bd30e3ac7","date":1559150835,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    String oldCacheNamePropValue = System\n        .getProperty(\"blockJoinParentFilterCache\");\n    System.setProperty(\"blockJoinParentFilterCache\", (cachedMode = random()\n        .nextBoolean()) ? \"blockJoinParentFilterCache\" : \"don't cache\");\n    if (oldCacheNamePropValue != null) {\n      System.setProperty(\"blockJoinParentFilterCache\", oldCacheNamePropValue);\n    }\n    inputFactory = XMLInputFactory.newInstance();\n\n    exe = // Executors.newSingleThreadExecutor();\n    rarely() ? ExecutorUtil.newMDCAwareFixedThreadPool(atLeast(2), new DefaultSolrThreadFactory(\"AddBlockUpdateTest\")) : ExecutorUtil\n        .newMDCAwareCachedThreadPool(new DefaultSolrThreadFactory(\"AddBlockUpdateTest\"));\n\n    counter.set(0);\n    initCore(\"solrconfig.xml\", \"schema15.xml\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    String oldCacheNamePropValue = System\n        .getProperty(\"blockJoinParentFilterCache\");\n    System.setProperty(\"blockJoinParentFilterCache\", (cachedMode = random()\n        .nextBoolean()) ? \"blockJoinParentFilterCache\" : \"don't cache\");\n    if (oldCacheNamePropValue != null) {\n      System.setProperty(\"blockJoinParentFilterCache\", oldCacheNamePropValue);\n    }\n    inputFactory = XMLInputFactory.newInstance();\n\n    exe = // Executors.newSingleThreadExecutor();\n    rarely() ? ExecutorUtil.newMDCAwareFixedThreadPool(atLeast(2), new DefaultSolrThreadFactory(\"AddBlockUpdateTest\")) : ExecutorUtil\n        .newMDCAwareCachedThreadPool(new DefaultSolrThreadFactory(\"AddBlockUpdateTest\"));\n\n\n    initCore(\"solrconfig.xml\", \"schema15.xml\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58af973abe9f7c0faa777c1a6285fc7f72c171c5","date":1559329541,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    String oldCacheNamePropValue = System\n        .getProperty(\"blockJoinParentFilterCache\");\n    System.setProperty(\"blockJoinParentFilterCache\", (cachedMode = random()\n        .nextBoolean()) ? \"blockJoinParentFilterCache\" : \"don't cache\");\n    if (oldCacheNamePropValue != null) {\n      System.setProperty(\"blockJoinParentFilterCache\", oldCacheNamePropValue);\n    }\n    inputFactory = XMLInputFactory.newInstance();\n\n    exe = // Executors.newSingleThreadExecutor();\n    rarely() ? ExecutorUtil.newMDCAwareFixedThreadPool(atLeast(2), new DefaultSolrThreadFactory(\"AddBlockUpdateTest\")) : ExecutorUtil\n        .newMDCAwareCachedThreadPool(new DefaultSolrThreadFactory(\"AddBlockUpdateTest\"));\n\n    counter.set(0);\n    initCore(\"solrconfig.xml\", \"schema15.xml\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    String oldCacheNamePropValue = System\n        .getProperty(\"blockJoinParentFilterCache\");\n    System.setProperty(\"blockJoinParentFilterCache\", (cachedMode = random()\n        .nextBoolean()) ? \"blockJoinParentFilterCache\" : \"don't cache\");\n    if (oldCacheNamePropValue != null) {\n      System.setProperty(\"blockJoinParentFilterCache\", oldCacheNamePropValue);\n    }\n    inputFactory = XMLInputFactory.newInstance();\n\n    exe = // Executors.newSingleThreadExecutor();\n    rarely() ? ExecutorUtil.newMDCAwareFixedThreadPool(atLeast(2), new DefaultSolrThreadFactory(\"AddBlockUpdateTest\")) : ExecutorUtil\n        .newMDCAwareCachedThreadPool(new DefaultSolrThreadFactory(\"AddBlockUpdateTest\"));\n\n\n    initCore(\"solrconfig.xml\", \"schema15.xml\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb03700c9690d16b15fb4f56f6ec36b128fd894e","date":1586745995,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    String oldCacheNamePropValue = System\n        .getProperty(\"blockJoinParentFilterCache\");\n    System.setProperty(\"blockJoinParentFilterCache\", (cachedMode = random()\n        .nextBoolean()) ? \"blockJoinParentFilterCache\" : \"don't cache\");\n    if (oldCacheNamePropValue != null) {\n      System.setProperty(\"blockJoinParentFilterCache\", oldCacheNamePropValue);\n    }\n    inputFactory = XMLInputFactory.newInstance();\n\n    exe = // Executors.newSingleThreadExecutor();\n    rarely() ? ExecutorUtil.newMDCAwareFixedThreadPool(atLeast(2), new SolrNamedThreadFactory(\"AddBlockUpdateTest\")) : ExecutorUtil\n        .newMDCAwareCachedThreadPool(new SolrNamedThreadFactory(\"AddBlockUpdateTest\"));\n\n    counter.set(0);\n    initCore(\"solrconfig.xml\", \"schema15.xml\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    String oldCacheNamePropValue = System\n        .getProperty(\"blockJoinParentFilterCache\");\n    System.setProperty(\"blockJoinParentFilterCache\", (cachedMode = random()\n        .nextBoolean()) ? \"blockJoinParentFilterCache\" : \"don't cache\");\n    if (oldCacheNamePropValue != null) {\n      System.setProperty(\"blockJoinParentFilterCache\", oldCacheNamePropValue);\n    }\n    inputFactory = XMLInputFactory.newInstance();\n\n    exe = // Executors.newSingleThreadExecutor();\n    rarely() ? ExecutorUtil.newMDCAwareFixedThreadPool(atLeast(2), new DefaultSolrThreadFactory(\"AddBlockUpdateTest\")) : ExecutorUtil\n        .newMDCAwareCachedThreadPool(new DefaultSolrThreadFactory(\"AddBlockUpdateTest\"));\n\n    counter.set(0);\n    initCore(\"solrconfig.xml\", \"schema15.xml\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","637a392e2e05d4e1179ac3c532cfeef0cde977ba"],"637a392e2e05d4e1179ac3c532cfeef0cde977ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb1a5eff758fefcac883606f32579ae501a14119":["cb5af3afeddbb803fb785098176e6e177c34261b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":["bb1a5eff758fefcac883606f32579ae501a14119","ad2010e2591e2d11678b59291d2ab31bd30e3ac7"],"fb03700c9690d16b15fb4f56f6ec36b128fd894e":["ad2010e2591e2d11678b59291d2ab31bd30e3ac7"],"ad2010e2591e2d11678b59291d2ab31bd30e3ac7":["bb1a5eff758fefcac883606f32579ae501a14119"],"cb5af3afeddbb803fb785098176e6e177c34261b":["637a392e2e05d4e1179ac3c532cfeef0cde977ba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb03700c9690d16b15fb4f56f6ec36b128fd894e"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"637a392e2e05d4e1179ac3c532cfeef0cde977ba":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cb5af3afeddbb803fb785098176e6e177c34261b"],"bb1a5eff758fefcac883606f32579ae501a14119":["58af973abe9f7c0faa777c1a6285fc7f72c171c5","ad2010e2591e2d11678b59291d2ab31bd30e3ac7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","637a392e2e05d4e1179ac3c532cfeef0cde977ba"],"58af973abe9f7c0faa777c1a6285fc7f72c171c5":[],"ad2010e2591e2d11678b59291d2ab31bd30e3ac7":["58af973abe9f7c0faa777c1a6285fc7f72c171c5","fb03700c9690d16b15fb4f56f6ec36b128fd894e"],"fb03700c9690d16b15fb4f56f6ec36b128fd894e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cb5af3afeddbb803fb785098176e6e177c34261b":["bb1a5eff758fefcac883606f32579ae501a14119"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","58af973abe9f7c0faa777c1a6285fc7f72c171c5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}