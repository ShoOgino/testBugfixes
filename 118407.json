{"path":"src/demo/org/apache/lucene/demo/html/HTMLParser#jj_add_error_token(int,int).mjava","commits":[{"id":"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef","date":1063245093,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/html/HTMLParser#jj_add_error_token(int,int).mjava","pathOld":"/dev/null","sourceNew":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      boolean exists = false;\n      for (java.util.Enumeration e = jj_expentries.elements(); e.hasMoreElements();) {\n        int[] oldentry = (int[])(e.nextElement());\n        if (oldentry.length == jj_expentry.length) {\n          exists = true;\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              exists = false;\n              break;\n            }\n          }\n          if (exists) break;\n        }\n      }\n      if (!exists) jj_expentries.addElement(jj_expentry);\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b97548d27406e9f33187836e1de98d473a63f5d","date":1196088721,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/html/HTMLParser#jj_add_error_token(int,int).mjava","pathOld":"src/demo/org/apache/lucene/demo/html/HTMLParser#jj_add_error_token(int,int).mjava","sourceNew":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      System.arraycopy(jj_lasttokens, 0, jj_expentry, 0, jj_endpos);\n      boolean exists = false;\n      for (java.util.Enumeration e = jj_expentries.elements(); e.hasMoreElements();) {\n        int[] oldentry = (int[])(e.nextElement());\n        if (oldentry.length == jj_expentry.length) {\n          exists = true;\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              exists = false;\n              break;\n            }\n          }\n          if (exists) break;\n        }\n      }\n      if (!exists) jj_expentries.addElement(jj_expentry);\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","sourceOld":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      boolean exists = false;\n      for (java.util.Enumeration e = jj_expentries.elements(); e.hasMoreElements();) {\n        int[] oldentry = (int[])(e.nextElement());\n        if (oldentry.length == jj_expentry.length) {\n          exists = true;\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              exists = false;\n              break;\n            }\n          }\n          if (exists) break;\n        }\n      }\n      if (!exists) jj_expentries.addElement(jj_expentry);\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2cb543b41c145f33390f460ee743d6693c9c6c","date":1219243087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/html/HTMLParser#jj_add_error_token(int,int).mjava","pathOld":"src/demo/org/apache/lucene/demo/html/HTMLParser#jj_add_error_token(int,int).mjava","sourceNew":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      boolean exists = false;\n      for (java.util.Enumeration e = jj_expentries.elements(); e.hasMoreElements();) {\n        int[] oldentry = (int[])(e.nextElement());\n        if (oldentry.length == jj_expentry.length) {\n          exists = true;\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              exists = false;\n              break;\n            }\n          }\n          if (exists) break;\n        }\n      }\n      if (!exists) jj_expentries.addElement(jj_expentry);\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","sourceOld":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      System.arraycopy(jj_lasttokens, 0, jj_expentry, 0, jj_endpos);\n      boolean exists = false;\n      for (java.util.Enumeration e = jj_expentries.elements(); e.hasMoreElements();) {\n        int[] oldentry = (int[])(e.nextElement());\n        if (oldentry.length == jj_expentry.length) {\n          exists = true;\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              exists = false;\n              break;\n            }\n          }\n          if (exists) break;\n        }\n      }\n      if (!exists) jj_expentries.addElement(jj_expentry);\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c80895407a253178cac9acedf29e0d70c1365b50","date":1255908073,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/html/HTMLParser#jj_add_error_token(int,int).mjava","pathOld":"src/demo/org/apache/lucene/demo/html/HTMLParser#jj_add_error_token(int,int).mjava","sourceNew":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      jj_entries_loop: for (java.util.Iterator it = jj_expentries.iterator(); it.hasNext();) {\n        int[] oldentry = (int[])(it.next());\n        if (oldentry.length == jj_expentry.length) {\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              continue jj_entries_loop;\n            }\n          }\n          jj_expentries.add(jj_expentry);\n          break jj_entries_loop;\n        }\n      }\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","sourceOld":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      boolean exists = false;\n      for (java.util.Enumeration e = jj_expentries.elements(); e.hasMoreElements();) {\n        int[] oldentry = (int[])(e.nextElement());\n        if (oldentry.length == jj_expentry.length) {\n          exists = true;\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              exists = false;\n              break;\n            }\n          }\n          if (exists) break;\n        }\n      }\n      if (!exists) jj_expentries.addElement(jj_expentry);\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/demo/org/apache/lucene/demo/html/HTMLParser#jj_add_error_token(int,int).mjava","pathOld":"src/demo/org/apache/lucene/demo/html/HTMLParser#jj_add_error_token(int,int).mjava","sourceNew":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      jj_entries_loop: for (java.util.Iterator it = jj_expentries.iterator(); it.hasNext();) {\n        int[] oldentry = (int[])(it.next());\n        if (oldentry.length == jj_expentry.length) {\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              continue jj_entries_loop;\n            }\n          }\n          jj_expentries.add(jj_expentry);\n          break jj_entries_loop;\n        }\n      }\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","sourceOld":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      jj_entries_loop: for (java.util.Iterator it = jj_expentries.iterator(); it.hasNext();) {\n        int[] oldentry = (int[])(it.next());\n        if (oldentry.length == jj_expentry.length) {\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              continue jj_entries_loop;\n            }\n          }\n          jj_expentries.add(jj_expentry);\n          break jj_entries_loop;\n        }\n      }\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["8b97548d27406e9f33187836e1de98d473a63f5d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c80895407a253178cac9acedf29e0d70c1365b50":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8b97548d27406e9f33187836e1de98d473a63f5d":["9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c80895407a253178cac9acedf29e0d70c1365b50"]},"commit2Childs":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["c80895407a253178cac9acedf29e0d70c1365b50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"],"c80895407a253178cac9acedf29e0d70c1365b50":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef":["8b97548d27406e9f33187836e1de98d473a63f5d"],"8b97548d27406e9f33187836e1de98d473a63f5d":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}