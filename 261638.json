{"path":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl#setDocsWithField(AtomicReader,String,Bits).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl#setDocsWithField(AtomicReader,String,Bits).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#setDocsWithField(AtomicReader,String,Bits).mjava","sourceNew":"  // null Bits means no docs matched\n  void setDocsWithField(AtomicReader reader, String field, Bits docsWithField) {\n    final int maxDoc = reader.maxDoc();\n    final Bits bits;\n    if (docsWithField == null) {\n      bits = new Bits.MatchNoBits(maxDoc);\n    } else if (docsWithField instanceof FixedBitSet) {\n      final int numSet = ((FixedBitSet) docsWithField).cardinality();\n      if (numSet >= maxDoc) {\n        // The cardinality of the BitSet is maxDoc if all documents have a value.\n        assert numSet == maxDoc;\n        bits = new Bits.MatchAllBits(maxDoc);\n      } else {\n        bits = docsWithField;\n      }\n    } else {\n      bits = docsWithField;\n    }\n    caches.get(DocsWithFieldCache.class).put(reader, new Entry(field, null), bits);\n  }\n\n","sourceOld":"  // null Bits means no docs matched\n  void setDocsWithField(AtomicReader reader, String field, Bits docsWithField) {\n    final int maxDoc = reader.maxDoc();\n    final Bits bits;\n    if (docsWithField == null) {\n      bits = new Bits.MatchNoBits(maxDoc);\n    } else if (docsWithField instanceof FixedBitSet) {\n      final int numSet = ((FixedBitSet) docsWithField).cardinality();\n      if (numSet >= maxDoc) {\n        // The cardinality of the BitSet is maxDoc if all documents have a value.\n        assert numSet == maxDoc;\n        bits = new Bits.MatchAllBits(maxDoc);\n      } else {\n        bits = docsWithField;\n      }\n    } else {\n      bits = docsWithField;\n    }\n    caches.get(DocsWithFieldCache.class).put(reader, new Entry(field, null), bits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4d374b2bebd0d52acaa61038fbf23068620fba7","date":1353240004,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl#setDocsWithField(AtomicReader,String,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl#setDocsWithField(AtomicReader,String,Bits).mjava","sourceNew":"  // null Bits means no docs matched\n  void setDocsWithField(AtomicReader reader, String field, Bits docsWithField) {\n    final int maxDoc = reader.maxDoc();\n    final Bits bits;\n    if (docsWithField == null) {\n      bits = new Bits.MatchNoBits(maxDoc);\n    } else if (docsWithField instanceof FixedBitSet) {\n      final int numSet = ((FixedBitSet) docsWithField).cardinality();\n      if (numSet >= maxDoc) {\n        // The cardinality of the BitSet is maxDoc if all documents have a value.\n        assert numSet == maxDoc;\n        bits = new Bits.MatchAllBits(maxDoc);\n      } else {\n        bits = docsWithField;\n      }\n    } else {\n      bits = docsWithField;\n    }\n    caches.get(DocsWithFieldCache.class).put(reader, new CacheKey(field, null), bits);\n  }\n\n","sourceOld":"  // null Bits means no docs matched\n  void setDocsWithField(AtomicReader reader, String field, Bits docsWithField) {\n    final int maxDoc = reader.maxDoc();\n    final Bits bits;\n    if (docsWithField == null) {\n      bits = new Bits.MatchNoBits(maxDoc);\n    } else if (docsWithField instanceof FixedBitSet) {\n      final int numSet = ((FixedBitSet) docsWithField).cardinality();\n      if (numSet >= maxDoc) {\n        // The cardinality of the BitSet is maxDoc if all documents have a value.\n        assert numSet == maxDoc;\n        bits = new Bits.MatchAllBits(maxDoc);\n      } else {\n        bits = docsWithField;\n      }\n    } else {\n      bits = docsWithField;\n    }\n    caches.get(DocsWithFieldCache.class).put(reader, new Entry(field, null), bits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl#setDocsWithField(AtomicReader,String,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl#setDocsWithField(AtomicReader,String,Bits).mjava","sourceNew":"  // null Bits means no docs matched\n  void setDocsWithField(AtomicReader reader, String field, Bits docsWithField) {\n    final int maxDoc = reader.maxDoc();\n    final Bits bits;\n    if (docsWithField == null) {\n      bits = new Bits.MatchNoBits(maxDoc);\n    } else if (docsWithField instanceof FixedBitSet) {\n      final int numSet = ((FixedBitSet) docsWithField).cardinality();\n      if (numSet >= maxDoc) {\n        // The cardinality of the BitSet is maxDoc if all documents have a value.\n        assert numSet == maxDoc;\n        bits = new Bits.MatchAllBits(maxDoc);\n      } else {\n        bits = docsWithField;\n      }\n    } else {\n      bits = docsWithField;\n    }\n    caches.get(DocsWithFieldCache.class).put(reader, new CacheKey(field, null), bits);\n  }\n\n","sourceOld":"  // null Bits means no docs matched\n  void setDocsWithField(AtomicReader reader, String field, Bits docsWithField) {\n    final int maxDoc = reader.maxDoc();\n    final Bits bits;\n    if (docsWithField == null) {\n      bits = new Bits.MatchNoBits(maxDoc);\n    } else if (docsWithField instanceof FixedBitSet) {\n      final int numSet = ((FixedBitSet) docsWithField).cardinality();\n      if (numSet >= maxDoc) {\n        // The cardinality of the BitSet is maxDoc if all documents have a value.\n        assert numSet == maxDoc;\n        bits = new Bits.MatchAllBits(maxDoc);\n      } else {\n        bits = docsWithField;\n      }\n    } else {\n      bits = docsWithField;\n    }\n    caches.get(DocsWithFieldCache.class).put(reader, new Entry(field, null), bits);\n  }\n\n","bugFix":["382fe3a6ca9745891afebda9b9a57cc158305545"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#setDocsWithField(AtomicReader,String,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl#setDocsWithField(AtomicReader,String,Bits).mjava","sourceNew":"  // null Bits means no docs matched\n  void setDocsWithField(AtomicReader reader, String field, Bits docsWithField) {\n    final int maxDoc = reader.maxDoc();\n    final Bits bits;\n    if (docsWithField == null) {\n      bits = new Bits.MatchNoBits(maxDoc);\n    } else if (docsWithField instanceof FixedBitSet) {\n      final int numSet = ((FixedBitSet) docsWithField).cardinality();\n      if (numSet >= maxDoc) {\n        // The cardinality of the BitSet is maxDoc if all documents have a value.\n        assert numSet == maxDoc;\n        bits = new Bits.MatchAllBits(maxDoc);\n      } else {\n        bits = docsWithField;\n      }\n    } else {\n      bits = docsWithField;\n    }\n    caches.get(DocsWithFieldCache.class).put(reader, new CacheKey(field, null), bits);\n  }\n\n","sourceOld":"  // null Bits means no docs matched\n  void setDocsWithField(AtomicReader reader, String field, Bits docsWithField) {\n    final int maxDoc = reader.maxDoc();\n    final Bits bits;\n    if (docsWithField == null) {\n      bits = new Bits.MatchNoBits(maxDoc);\n    } else if (docsWithField instanceof FixedBitSet) {\n      final int numSet = ((FixedBitSet) docsWithField).cardinality();\n      if (numSet >= maxDoc) {\n        // The cardinality of the BitSet is maxDoc if all documents have a value.\n        assert numSet == maxDoc;\n        bits = new Bits.MatchAllBits(maxDoc);\n      } else {\n        bits = docsWithField;\n      }\n    } else {\n      bits = docsWithField;\n    }\n    caches.get(DocsWithFieldCache.class).put(reader, new CacheKey(field, null), bits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#setDocsWithField(AtomicReader,String,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl#setDocsWithField(AtomicReader,String,Bits).mjava","sourceNew":"  // null Bits means no docs matched\n  void setDocsWithField(AtomicReader reader, String field, Bits docsWithField) {\n    final int maxDoc = reader.maxDoc();\n    final Bits bits;\n    if (docsWithField == null) {\n      bits = new Bits.MatchNoBits(maxDoc);\n    } else if (docsWithField instanceof FixedBitSet) {\n      final int numSet = ((FixedBitSet) docsWithField).cardinality();\n      if (numSet >= maxDoc) {\n        // The cardinality of the BitSet is maxDoc if all documents have a value.\n        assert numSet == maxDoc;\n        bits = new Bits.MatchAllBits(maxDoc);\n      } else {\n        bits = docsWithField;\n      }\n    } else {\n      bits = docsWithField;\n    }\n    caches.get(DocsWithFieldCache.class).put(reader, new CacheKey(field, null), bits);\n  }\n\n","sourceOld":"  // null Bits means no docs matched\n  void setDocsWithField(AtomicReader reader, String field, Bits docsWithField) {\n    final int maxDoc = reader.maxDoc();\n    final Bits bits;\n    if (docsWithField == null) {\n      bits = new Bits.MatchNoBits(maxDoc);\n    } else if (docsWithField instanceof FixedBitSet) {\n      final int numSet = ((FixedBitSet) docsWithField).cardinality();\n      if (numSet >= maxDoc) {\n        // The cardinality of the BitSet is maxDoc if all documents have a value.\n        assert numSet == maxDoc;\n        bits = new Bits.MatchAllBits(maxDoc);\n      } else {\n        bits = docsWithField;\n      }\n    } else {\n      bits = docsWithField;\n    }\n    caches.get(DocsWithFieldCache.class).put(reader, new CacheKey(field, null), bits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#setDocsWithField(AtomicReader,String,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCacheImpl#setDocsWithField(AtomicReader,String,Bits).mjava","sourceNew":"  // null Bits means no docs matched\n  void setDocsWithField(AtomicReader reader, String field, Bits docsWithField) {\n    final int maxDoc = reader.maxDoc();\n    final Bits bits;\n    if (docsWithField == null) {\n      bits = new Bits.MatchNoBits(maxDoc);\n    } else if (docsWithField instanceof FixedBitSet) {\n      final int numSet = ((FixedBitSet) docsWithField).cardinality();\n      if (numSet >= maxDoc) {\n        // The cardinality of the BitSet is maxDoc if all documents have a value.\n        assert numSet == maxDoc;\n        bits = new Bits.MatchAllBits(maxDoc);\n      } else {\n        bits = docsWithField;\n      }\n    } else {\n      bits = docsWithField;\n    }\n    caches.get(DocsWithFieldCache.class).put(reader, new CacheKey(field, null), bits);\n  }\n\n","sourceOld":"  // null Bits means no docs matched\n  void setDocsWithField(AtomicReader reader, String field, Bits docsWithField) {\n    final int maxDoc = reader.maxDoc();\n    final Bits bits;\n    if (docsWithField == null) {\n      bits = new Bits.MatchNoBits(maxDoc);\n    } else if (docsWithField instanceof FixedBitSet) {\n      final int numSet = ((FixedBitSet) docsWithField).cardinality();\n      if (numSet >= maxDoc) {\n        // The cardinality of the BitSet is maxDoc if all documents have a value.\n        assert numSet == maxDoc;\n        bits = new Bits.MatchAllBits(maxDoc);\n      } else {\n        bits = docsWithField;\n      }\n    } else {\n      bits = docsWithField;\n    }\n    caches.get(DocsWithFieldCache.class).put(reader, new CacheKey(field, null), bits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","a4d374b2bebd0d52acaa61038fbf23068620fba7"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["d4d69c535930b5cce125cff868d40f6373dc27d4","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a4d374b2bebd0d52acaa61038fbf23068620fba7":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"56572ec06f1407c066d6b7399413178b33176cd8":["d4d69c535930b5cce125cff868d40f6373dc27d4","93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93dd449115a9247533e44bab47e8429e5dccbc6d"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["93dd449115a9247533e44bab47e8429e5dccbc6d","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d4d69c535930b5cce125cff868d40f6373dc27d4","a4d374b2bebd0d52acaa61038fbf23068620fba7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"a4d374b2bebd0d52acaa61038fbf23068620fba7":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}