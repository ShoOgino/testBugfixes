{"path":"src/test/org/apache/lucene/index/TestTransactions#initIndex(Directory).mjava","commits":[{"id":"455aeff4fef915340c5b19d71d5e147034e83093","date":1210099270,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactions#initIndex(Directory).mjava","pathOld":"/dev/null","sourceNew":"  public void initIndex(Directory dir) throws Throwable {\n    IndexWriter writer = new IndexWriter(dir, false, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    for(int j=0; j<7; j++) {\n      Document d = new Document();\n      int n = RANDOM.nextInt();\n      d.add(new Field(\"contents\", English.intToEnglish(n), Field.Store.NO, Field.Index.TOKENIZED));\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactions#initIndex(Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactions#initIndex(Directory).mjava","sourceNew":"  public void initIndex(Directory dir) throws Throwable {\n    IndexWriter writer = new IndexWriter(dir, false, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    for(int j=0; j<7; j++) {\n      Document d = new Document();\n      int n = RANDOM.nextInt();\n      d.add(new Field(\"contents\", English.intToEnglish(n), Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  public void initIndex(Directory dir) throws Throwable {\n    IndexWriter writer = new IndexWriter(dir, false, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    for(int j=0; j<7; j++) {\n      Document d = new Document();\n      int n = RANDOM.nextInt();\n      d.add(new Field(\"contents\", English.intToEnglish(n), Field.Store.NO, Field.Index.TOKENIZED));\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4ae99f08f69aa3acba7cd75134e8447eb747559","date":1222344278,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactions#initIndex(Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactions#initIndex(Directory).mjava","sourceNew":"  public void initIndex(Directory dir) throws Throwable {\n    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    for(int j=0; j<7; j++) {\n      Document d = new Document();\n      int n = RANDOM.nextInt();\n      d.add(new Field(\"contents\", English.intToEnglish(n), Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  public void initIndex(Directory dir) throws Throwable {\n    IndexWriter writer = new IndexWriter(dir, false, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    for(int j=0; j<7; j++) {\n      Document d = new Document();\n      int n = RANDOM.nextInt();\n      d.add(new Field(\"contents\", English.intToEnglish(n), Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactions#initIndex(Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactions#initIndex(Directory).mjava","sourceNew":"  public void initIndex(Directory dir) throws Throwable {\n    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    for(int j=0; j<7; j++) {\n      Document d = new Document();\n      int n = RANDOM.nextInt();\n      d.add(new Field(\"contents\", English.intToEnglish(n), Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  public void initIndex(Directory dir) throws Throwable {\n    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    for(int j=0; j<7; j++) {\n      Document d = new Document();\n      int n = RANDOM.nextInt();\n      d.add(new Field(\"contents\", English.intToEnglish(n), Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactions#initIndex(Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactions#initIndex(Directory).mjava","sourceNew":"  public void initIndex(Directory dir) throws Throwable {\n    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    for(int j=0; j<7; j++) {\n      Document d = new Document();\n      int n = RANDOM.nextInt();\n      d.add(new Field(\"contents\", English.intToEnglish(n), Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  public void initIndex(Directory dir) throws Throwable {\n    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    for(int j=0; j<7; j++) {\n      Document d = new Document();\n      int n = RANDOM.nextInt();\n      d.add(new Field(\"contents\", English.intToEnglish(n), Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactions#initIndex(Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactions#initIndex(Directory).mjava","sourceNew":"  public void initIndex(Directory dir) throws Throwable {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    for(int j=0; j<7; j++) {\n      Document d = new Document();\n      int n = RANDOM.nextInt();\n      d.add(new Field(\"contents\", English.intToEnglish(n), Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  public void initIndex(Directory dir) throws Throwable {\n    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    for(int j=0; j<7; j++) {\n      Document d = new Document();\n      int n = RANDOM.nextInt();\n      d.add(new Field(\"contents\", English.intToEnglish(n), Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactions#initIndex(Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactions#initIndex(Directory).mjava","sourceNew":"  public void initIndex(Directory dir) throws Throwable {\n    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    for(int j=0; j<7; j++) {\n      Document d = new Document();\n      int n = RANDOM.nextInt();\n      d.add(new Field(\"contents\", English.intToEnglish(n), Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  public void initIndex(Directory dir) throws Throwable {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    for(int j=0; j<7; j++) {\n      Document d = new Document();\n      int n = RANDOM.nextInt();\n      d.add(new Field(\"contents\", English.intToEnglish(n), Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTransactions#initIndex(Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactions#initIndex(Directory).mjava","sourceNew":"  public void initIndex(Directory dir) throws Throwable {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    for(int j=0; j<7; j++) {\n      Document d = new Document();\n      int n = RANDOM.nextInt();\n      d.add(new Field(\"contents\", English.intToEnglish(n), Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  public void initIndex(Directory dir) throws Throwable {\n    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), IndexWriter.MaxFieldLength.LIMITED);\n    for(int j=0; j<7; j++) {\n      Document d = new Document();\n      int n = RANDOM.nextInt();\n      d.add(new Field(\"contents\", English.intToEnglish(n), Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTransactions#initIndex(Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestTransactions#initIndex(Directory).mjava","sourceNew":"  public void initIndex(Directory dir) throws Throwable {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    for(int j=0; j<7; j++) {\n      Document d = new Document();\n      int n = RANDOM.nextInt();\n      d.add(new Field(\"contents\", English.intToEnglish(n), Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","sourceOld":"  public void initIndex(Directory dir) throws Throwable {\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    for(int j=0; j<7; j++) {\n      Document d = new Document();\n      int n = RANDOM.nextInt();\n      d.add(new Field(\"contents\", English.intToEnglish(n), Field.Store.NO, Field.Index.ANALYZED));\n      writer.addDocument(d);\n    }\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"c4ae99f08f69aa3acba7cd75134e8447eb747559":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["c4ae99f08f69aa3acba7cd75134e8447eb747559"],"455aeff4fef915340c5b19d71d5e147034e83093":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["455aeff4fef915340c5b19d71d5e147034e83093"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"c4ae99f08f69aa3acba7cd75134e8447eb747559":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"455aeff4fef915340c5b19d71d5e147034e83093":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["455aeff4fef915340c5b19d71d5e147034e83093"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["c4ae99f08f69aa3acba7cd75134e8447eb747559"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}