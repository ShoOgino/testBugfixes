{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/CompositeIdRouter#getSearchRangeSingle(String,SolrParams,DocCollection).mjava","commits":[{"id":"a05f3f5161c62339ec5560b8f6958f3df8483618","date":1563550501,"type":0,"author":"yonik","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/CompositeIdRouter#getSearchRangeSingle(String,SolrParams,DocCollection).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Range getSearchRangeSingle(String shardKey, SolrParams params, DocCollection collection) {\n    if (shardKey == null) {\n      // search across whole range\n      return fullRange();\n    }\n    String id = shardKey;\n\n    if (shardKey.indexOf(SEPARATOR) < 0) {\n      // shardKey is a simple id, so don't do a range\n      int hash = Hash.murmurhash3_x86_32(id, 0, id.length(), 0);\n      return new Range(hash, hash);\n    }\n\n    return new KeyParser(id).getRange();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36bdabc04743acfe0e82c9cf8208b1111b2b193a","date":1565115020,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/CompositeIdRouter#getSearchRangeSingle(String,SolrParams,DocCollection).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/CompositeIdRouter#getSearchRangeSingle(String,SolrParams,DocCollection).mjava","sourceNew":"  @Override\n  public Range getSearchRangeSingle(String shardKey, SolrParams params, DocCollection collection) {\n    if (shardKey == null) {\n      // search across whole range\n      return fullRange();\n    }\n\n    if (shardKey.indexOf(SEPARATOR) < 0) {\n      // shardKey is a simple id, so don't do a range\n      int hash = Hash.murmurhash3_x86_32(shardKey, 0, shardKey.length(), 0);\n      return new Range(hash, hash);\n    }\n\n    return new KeyParser(shardKey).getRange();\n  }\n\n","sourceOld":"  @Override\n  public Range getSearchRangeSingle(String shardKey, SolrParams params, DocCollection collection) {\n    if (shardKey == null) {\n      // search across whole range\n      return fullRange();\n    }\n    String id = shardKey;\n\n    if (shardKey.indexOf(SEPARATOR) < 0) {\n      // shardKey is a simple id, so don't do a range\n      int hash = Hash.murmurhash3_x86_32(id, 0, id.length(), 0);\n      return new Range(hash, hash);\n    }\n\n    return new KeyParser(id).getRange();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a05f3f5161c62339ec5560b8f6958f3df8483618":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"36bdabc04743acfe0e82c9cf8208b1111b2b193a":["a05f3f5161c62339ec5560b8f6958f3df8483618"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["36bdabc04743acfe0e82c9cf8208b1111b2b193a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a05f3f5161c62339ec5560b8f6958f3df8483618"],"a05f3f5161c62339ec5560b8f6958f3df8483618":["36bdabc04743acfe0e82c9cf8208b1111b2b193a"],"36bdabc04743acfe0e82c9cf8208b1111b2b193a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}