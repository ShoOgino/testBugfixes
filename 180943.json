{"path":"src/java/org/apache/solr/schema/IndexSchema.DynamicReplacement#compareTo(DynamicReplacement).mjava","commits":[{"id":"b451a0c4c12c9a8575a49bafc27463190c8b8833","date":1149619984,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/IndexSchema.DynamicReplacement#compareTo(DynamicReplacement).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Sort order is based on length of regex.  Longest comes first.\n     * @param other The object to compare to.\n     * @return a negative integer, zero, or a positive integer\n     * as this object is less than, equal to, or greater than\n     * the specified object.\n     */\n    public int compareTo(DynamicReplacement other) {\n      return other.regex.length() - regex.length();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/IndexSchema.DynamicReplacement#compareTo(DynamicReplacement).mjava","pathOld":"src/java/org/apache/solr/schema/IndexSchema.DynamicReplacement#compareTo(DynamicReplacement).mjava","sourceNew":"    /**\n     * Sort order is based on length of regex.  Longest comes first.\n     * @param other The object to compare to.\n     * @return a negative integer, zero, or a positive integer\n     * as this object is less than, equal to, or greater than\n     * the specified object.\n     */\n    public int compareTo(DynamicReplacement other) {\n      return other.regex.length() - regex.length();\n    }\n\n","sourceOld":"    /**\n     * Sort order is based on length of regex.  Longest comes first.\n     * @param other The object to compare to.\n     * @return a negative integer, zero, or a positive integer\n     * as this object is less than, equal to, or greater than\n     * the specified object.\n     */\n    public int compareTo(DynamicReplacement other) {\n      return other.regex.length() - regex.length();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["b451a0c4c12c9a8575a49bafc27463190c8b8833"],"b451a0c4c12c9a8575a49bafc27463190c8b8833":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["b451a0c4c12c9a8575a49bafc27463190c8b8833"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"b451a0c4c12c9a8575a49bafc27463190c8b8833":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}