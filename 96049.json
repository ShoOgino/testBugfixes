{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/recover/RecoverReader#recoverEntries(BufferedReader).mjava","commits":[{"id":"89f8b19763ea545f1e428dfa5efb8235beaaa05e","date":1151436680,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/recover/RecoverReader#recoverEntries(BufferedReader).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * @param reader\n     * @return\n     * @throws IOException\n     */\n    public List<StorageEntryWrapper> recoverEntries(final BufferedReader reader) throws IOException{\n        List<StorageEntryWrapper> actionList = new ArrayList<StorageEntryWrapper>();\n        this.strategy = new RecoverStrategy();\n        String input = null;\n        String metaData = null;\n        String entryData = null;\n        while((input=reader.readLine())!= null){\n            if(metaData == null){\n                metaData = input;\n                continue;\n            }\n            if(input.equals(RecoverWriter.STORAGE_OPERATION_SEPARATOR)){\n                try{\n                actionList.add(this.strategy.recover(metaData,entryData));\n                }catch (RecoverException e) {\n                  LOG.error(\"Skipping recover entry for metadata: \"+metaData,e);\n                }\n                this.strategy = new RecoverStrategy();\n                metaData = null;\n                entryData = null;\n             continue;   \n            }\n            if(entryData == null){\n                entryData = input;\n            }\n            \n        }\n        \n        \n        \n        return actionList;\n        \n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/lucenestorage/recover/RecoverReader#recoverEntries(BufferedReader).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/recover/RecoverReader#recoverEntries(BufferedReader).mjava","sourceNew":"    /**\n     * @param reader\n     * @return\n     * @throws IOException\n     */\n    public List<StorageEntryWrapper> recoverEntries(final BufferedReader reader) throws IOException{\n        List<StorageEntryWrapper> actionList = new ArrayList<StorageEntryWrapper>();\n        this.strategy = new RecoverStrategy();\n        String input = null;\n        String metaData = null;\n        String entryData = null;\n        while((input=reader.readLine())!= null){\n            if(metaData == null){\n                metaData = input;\n                continue;\n            }\n            if(input.equals(RecoverWriter.STORAGE_OPERATION_SEPARATOR)){\n                try{\n                actionList.add(this.strategy.recover(metaData,entryData));\n                }catch (RecoverException e) {\n                  LOG.error(\"Skipping recover entry for metadata: \"+metaData,e);\n                }\n                this.strategy = new RecoverStrategy();\n                metaData = null;\n                entryData = null;\n             continue;   \n            }\n            if(entryData == null){\n                entryData = input;\n            }\n            \n        }\n        \n        \n        \n        return actionList;\n        \n    }\n\n","sourceOld":"    /**\n     * @param reader\n     * @return\n     * @throws IOException\n     */\n    public List<StorageEntryWrapper> recoverEntries(final BufferedReader reader) throws IOException{\n        List<StorageEntryWrapper> actionList = new ArrayList<StorageEntryWrapper>();\n        this.strategy = new RecoverStrategy();\n        String input = null;\n        String metaData = null;\n        String entryData = null;\n        while((input=reader.readLine())!= null){\n            if(metaData == null){\n                metaData = input;\n                continue;\n            }\n            if(input.equals(RecoverWriter.STORAGE_OPERATION_SEPARATOR)){\n                try{\n                actionList.add(this.strategy.recover(metaData,entryData));\n                }catch (RecoverException e) {\n                  LOG.error(\"Skipping recover entry for metadata: \"+metaData,e);\n                }\n                this.strategy = new RecoverStrategy();\n                metaData = null;\n                entryData = null;\n             continue;   \n            }\n            if(entryData == null){\n                entryData = input;\n            }\n            \n        }\n        \n        \n        \n        return actionList;\n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"89f8b19763ea545f1e428dfa5efb8235beaaa05e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["89f8b19763ea545f1e428dfa5efb8235beaaa05e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"]},"commit2Childs":{"89f8b19763ea545f1e428dfa5efb8235beaaa05e":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["89f8b19763ea545f1e428dfa5efb8235beaaa05e"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}