{"path":"src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","commits":[{"id":"dba073cad85af8b853f4461a62b0a245480fcd7a","date":1080156191,"type":0,"author":"Tim Jones","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","pathOld":"/dev/null","sourceNew":"\t// test sorts when there's nothing in the index\n\tpublic void testEmptyIndex() throws Exception {\n\t\tSearcher empty = getEmptyIndex();\n\n\t\tsort = new Sort();\n\t\tassertMatches (empty, queryX, sort, \"\");\n\n\t\tsort.setSort(SortField.FIELD_DOC);\n\t\tassertMatches (empty, queryX, sort, \"\");\n\n\t\tsort.setSort (new SortField[] { new SortField (\"int\", SortField.INT), SortField.FIELD_DOC });\n\t\tassertMatches (empty, queryX, sort, \"\");\n\n\t\tsort.setSort (new SortField[] { new SortField (\"string\", SortField.STRING, true), SortField.FIELD_DOC });\n\t\tassertMatches (empty, queryX, sort, \"\");\n\n\t\tsort.setSort (new SortField[] { new SortField (\"float\", SortField.FLOAT), new SortField (\"string\", SortField.STRING) });\n\t\tassertMatches (empty, queryX, sort, \"\");\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63bc3238545c6012bd44f5d294077997f236bc4e","date":1233087321,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","sourceNew":"  // test sorts when there's nothing in the index\n  public void testEmptyIndex() throws Exception {\n    Searcher empty = getEmptyIndex();\n\n    sort = new Sort();\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort(SortField.FIELD_DOC);\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField[] { new SortField (\"int\", SortField.INT), SortField.FIELD_DOC });\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField[] { new SortField (\"string\", SortField.STRING, true), SortField.FIELD_DOC });\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField[] { new SortField (\"float\", SortField.FLOAT), new SortField (\"string\", SortField.STRING) });\n    assertMatches (empty, queryX, sort, \"\");\n  }\n\n","sourceOld":"\t// test sorts when there's nothing in the index\n\tpublic void testEmptyIndex() throws Exception {\n\t\tSearcher empty = getEmptyIndex();\n\n\t\tsort = new Sort();\n\t\tassertMatches (empty, queryX, sort, \"\");\n\n\t\tsort.setSort(SortField.FIELD_DOC);\n\t\tassertMatches (empty, queryX, sort, \"\");\n\n\t\tsort.setSort (new SortField[] { new SortField (\"int\", SortField.INT), SortField.FIELD_DOC });\n\t\tassertMatches (empty, queryX, sort, \"\");\n\n\t\tsort.setSort (new SortField[] { new SortField (\"string\", SortField.STRING, true), SortField.FIELD_DOC });\n\t\tassertMatches (empty, queryX, sort, \"\");\n\n\t\tsort.setSort (new SortField[] { new SortField (\"float\", SortField.FLOAT), new SortField (\"string\", SortField.STRING) });\n\t\tassertMatches (empty, queryX, sort, \"\");\n\t}\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ded38b25fe842ef1efc6715745bb8d8ed8e2fc99","date":1255432705,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","sourceNew":"  // test sorts when there's nothing in the index\n  public void testEmptyIndex() throws Exception {\n    Searcher empty = getEmptyIndex();\n\n    sort = new Sort();\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort(SortField.FIELD_DOC);\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"int\", SortField.INT), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"string\", SortField.STRING, true), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"float\", SortField.FLOAT), new SortField (\"string\", SortField.STRING) );\n    assertMatches (empty, queryX, sort, \"\");\n  }\n\n","sourceOld":"  // test sorts when there's nothing in the index\n  public void testEmptyIndex() throws Exception {\n    Searcher empty = getEmptyIndex();\n\n    sort = new Sort();\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort(SortField.FIELD_DOC);\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField[] { new SortField (\"int\", SortField.INT), SortField.FIELD_DOC });\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField[] { new SortField (\"string\", SortField.STRING, true), SortField.FIELD_DOC });\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField[] { new SortField (\"float\", SortField.FLOAT), new SortField (\"string\", SortField.STRING) });\n    assertMatches (empty, queryX, sort, \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","sourceNew":"  // test sorts when there's nothing in the index\n  public void testEmptyIndex() throws Exception {\n    Searcher empty = getEmptyIndex();\n\n    sort = new Sort();\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort(SortField.FIELD_DOC);\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"int\", SortField.INT), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"string\", SortField.STRING, true), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"float\", SortField.FLOAT), new SortField (\"string\", SortField.STRING) );\n    assertMatches (empty, queryX, sort, \"\");\n  }\n\n","sourceOld":"  // test sorts when there's nothing in the index\n  public void testEmptyIndex() throws Exception {\n    Searcher empty = getEmptyIndex();\n\n    sort = new Sort();\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort(SortField.FIELD_DOC);\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"int\", SortField.INT), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"string\", SortField.STRING, true), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"float\", SortField.FLOAT), new SortField (\"string\", SortField.STRING) );\n    assertMatches (empty, queryX, sort, \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ded38b25fe842ef1efc6715745bb8d8ed8e2fc99":["63bc3238545c6012bd44f5d294077997f236bc4e"],"63bc3238545c6012bd44f5d294077997f236bc4e":["dba073cad85af8b853f4461a62b0a245480fcd7a"],"dba073cad85af8b853f4461a62b0a245480fcd7a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ded38b25fe842ef1efc6715745bb8d8ed8e2fc99"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dba073cad85af8b853f4461a62b0a245480fcd7a"],"ded38b25fe842ef1efc6715745bb8d8ed8e2fc99":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"63bc3238545c6012bd44f5d294077997f236bc4e":["ded38b25fe842ef1efc6715745bb8d8ed8e2fc99"],"dba073cad85af8b853f4461a62b0a245480fcd7a":["63bc3238545c6012bd44f5d294077997f236bc4e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}