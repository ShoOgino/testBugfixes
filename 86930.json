{"path":"lucene/test-framework/src/java/org/apache/lucene/mockfile/ExtrasFS#createDirectory(Path,FileAttribute[#]...).mjava","commits":[{"id":"22989c36ff05c657df26dd3377b37c9ad35859bc","date":1424477375,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/mockfile/ExtrasFS#createDirectory(Path,FileAttribute[#]...).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void createDirectory(Path dir, FileAttribute<?>... attrs) throws IOException {\n    super.createDirectory(dir, attrs);\n    // ok, we created the directory successfully.\n    if (random.nextInt(4) == 0) {\n      // lets add a bogus file... if this fails, we don't care, its best effort.\n      try {\n        Path target = dir.resolve(\"extra\" + counter.incrementAndGet());\n        if (random.nextBoolean()) {\n          super.createDirectory(target);\n        } else {\n          Files.createFile(target);\n        }\n      } catch (Exception ignored) { \n        // best effort\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c86046da605906860560b11bdea527ecd96a42a7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c86046da605906860560b11bdea527ecd96a42a7","date":1429268865,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/mockfile/ExtrasFS#createDirectory(Path,FileAttribute[#]...).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/mockfile/ExtrasFS#createDirectory(Path,FileAttribute[#]...).mjava","sourceNew":"  @Override\n  public void createDirectory(Path dir, FileAttribute<?>... attrs) throws IOException {\n    super.createDirectory(dir, attrs);   \n    // ok, we created the directory successfully.\n    \n    // a little funky: we only look at hashcode (well-defined) of the target class name.\n    // using a generator won't reproduce, because we are a per-class resource.\n    // using hashing on filenames won't reproduce, because many of the names rely on other things\n    // the test class did.\n    // so a test gets terrorized with extras or gets none at all depending on the initial seed.\n    int hash = RandomizedContext.current().getTargetClass().toString().hashCode() ^ seed;\n    if ((hash & 3) == 0) {\n      // lets add a bogus file... if this fails, we don't care, its best effort.\n      try {\n        Path target = dir.resolve(\"extra0\");\n        if (hash < 0) {\n          super.createDirectory(target);\n        } else {\n          Files.createFile(target);\n        }\n      } catch (Exception ignored) { \n        // best effort\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void createDirectory(Path dir, FileAttribute<?>... attrs) throws IOException {\n    super.createDirectory(dir, attrs);\n    // ok, we created the directory successfully.\n    if (random.nextInt(4) == 0) {\n      // lets add a bogus file... if this fails, we don't care, its best effort.\n      try {\n        Path target = dir.resolve(\"extra\" + counter.incrementAndGet());\n        if (random.nextBoolean()) {\n          super.createDirectory(target);\n        } else {\n          Files.createFile(target);\n        }\n      } catch (Exception ignored) { \n        // best effort\n      }\n    }\n  }\n\n","bugFix":["22989c36ff05c657df26dd3377b37c9ad35859bc"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0570a6b8fbda74e4718ba36c70fd1953103a3dcb","date":1429616032,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/mockfile/ExtrasFS#createDirectory(Path,FileAttribute[#]...).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/mockfile/ExtrasFS#createDirectory(Path,FileAttribute[#]...).mjava","sourceNew":"  @Override\n  public void createDirectory(Path dir, FileAttribute<?>... attrs) throws IOException {\n    super.createDirectory(dir, attrs);   \n    // ok, we created the directory successfully.\n    \n    if (active) {\n      // lets add a bogus file... if this fails, we don't care, its best effort.\n      try {\n        Path target = dir.resolve(\"extra0\");\n        if (createDirectory) {\n          super.createDirectory(target);\n        } else {\n          Files.createFile(target);\n        }\n      } catch (Exception ignored) { \n        // best effort\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void createDirectory(Path dir, FileAttribute<?>... attrs) throws IOException {\n    super.createDirectory(dir, attrs);   \n    // ok, we created the directory successfully.\n    \n    // a little funky: we only look at hashcode (well-defined) of the target class name.\n    // using a generator won't reproduce, because we are a per-class resource.\n    // using hashing on filenames won't reproduce, because many of the names rely on other things\n    // the test class did.\n    // so a test gets terrorized with extras or gets none at all depending on the initial seed.\n    int hash = RandomizedContext.current().getTargetClass().toString().hashCode() ^ seed;\n    if ((hash & 3) == 0) {\n      // lets add a bogus file... if this fails, we don't care, its best effort.\n      try {\n        Path target = dir.resolve(\"extra0\");\n        if (hash < 0) {\n          super.createDirectory(target);\n        } else {\n          Files.createFile(target);\n        }\n      } catch (Exception ignored) { \n        // best effort\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3adea0022cffaaa592081efed775a7b8bf86b51","date":1532414870,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/mockfile/ExtrasFS#createDirectory(Path,FileAttribute[#]...).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/mockfile/ExtrasFS#createDirectory(Path,FileAttribute[#]...).mjava","sourceNew":"  @Override\n  public void createDirectory(Path dir, FileAttribute<?>... attrs) throws IOException {\n    super.createDirectory(dir, attrs);   \n    // ok, we created the directory successfully.\n    \n    if (active) {\n      // lets add a bogus file... if this fails, we don't care, its best effort.\n      try {\n        Path target = dir.resolve(EXTRA_FILE_NAME);\n        if (createDirectory) {\n          super.createDirectory(target);\n        } else {\n          Files.createFile(target);\n        }\n      } catch (Exception ignored) { \n        // best effort\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void createDirectory(Path dir, FileAttribute<?>... attrs) throws IOException {\n    super.createDirectory(dir, attrs);   \n    // ok, we created the directory successfully.\n    \n    if (active) {\n      // lets add a bogus file... if this fails, we don't care, its best effort.\n      try {\n        Path target = dir.resolve(\"extra0\");\n        if (createDirectory) {\n          super.createDirectory(target);\n        } else {\n          Files.createFile(target);\n        }\n      } catch (Exception ignored) { \n        // best effort\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0570a6b8fbda74e4718ba36c70fd1953103a3dcb":["c86046da605906860560b11bdea527ecd96a42a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22989c36ff05c657df26dd3377b37c9ad35859bc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c86046da605906860560b11bdea527ecd96a42a7":["22989c36ff05c657df26dd3377b37c9ad35859bc"],"f3adea0022cffaaa592081efed775a7b8bf86b51":["0570a6b8fbda74e4718ba36c70fd1953103a3dcb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f3adea0022cffaaa592081efed775a7b8bf86b51"]},"commit2Childs":{"0570a6b8fbda74e4718ba36c70fd1953103a3dcb":["f3adea0022cffaaa592081efed775a7b8bf86b51"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["22989c36ff05c657df26dd3377b37c9ad35859bc"],"22989c36ff05c657df26dd3377b37c9ad35859bc":["c86046da605906860560b11bdea527ecd96a42a7"],"c86046da605906860560b11bdea527ecd96a42a7":["0570a6b8fbda74e4718ba36c70fd1953103a3dcb"],"f3adea0022cffaaa592081efed775a7b8bf86b51":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}