{"path":"lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","commits":[{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    if (mapping.get(field) == Type.SORTED_SET) {\n      return FieldCache.DEFAULT.getDocTermOrds(in, field);\n    } else {\n      return in.getSortedSetDocValues(field);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36a4a25c2f02edc0c96bc51a298c45b1764e662d","date":1399923529,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = mapping.get(field);\n    if (v != null) {\n      switch (mapping.get(field)) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    if (mapping.get(field) == Type.SORTED_SET) {\n      return FieldCache.DEFAULT.getDocTermOrds(in, field);\n    } else {\n      return in.getSortedSetDocValues(field);\n    }\n  }\n\n","bugFix":null,"bugIntro":["b0b3768e97375c7a745c68f0b54710e8bedccc11"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"63961b0a0b1541623ed4c74d8cb088c35b32470f","date":1399929609,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = mapping.get(field);\n    if (v != null) {\n      switch (mapping.get(field)) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = mapping.get(field);\n    if (v != null) {\n      switch (mapping.get(field)) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"30b6ad849a21206db510322a3f583ca70ae20a2f","date":1399996150,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = mapping.get(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n        default:\n          if (v != Type.SORTED) {\n            throw new IllegalStateException(\"Type mismatch: \" + field + \" was indexed as \" + v);\n          }\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = mapping.get(field);\n    if (v != null) {\n      switch (mapping.get(field)) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","bugFix":null,"bugIntro":["b0b3768e97375c7a745c68f0b54710e8bedccc11"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = mapping.get(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n        default:\n          if (v != Type.SORTED) {\n            throw new IllegalStateException(\"Type mismatch: \" + field + \" was indexed as \" + v);\n          }\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = mapping.get(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n        default:\n          if (v != Type.SORTED) {\n            throw new IllegalStateException(\"Type mismatch: \" + field + \" was indexed as \" + v);\n          }\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b3768e97375c7a745c68f0b54710e8bedccc11","date":1406635606,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = mapping.get(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n        default:\n          if (v != Type.SORTED) {\n            throw new IllegalStateException(\"Type mismatch: \" + field + \" was indexed as \" + v);\n          }\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","bugFix":["36a4a25c2f02edc0c96bc51a298c45b1764e662d","30b6ad849a21206db510322a3f583ca70ae20a2f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a076c3c721f685b7559308fdc2cd72d91bba67e5","date":1464168992,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e121d43b5a10f2df530f406f935102656e9c4e8","date":1464198131,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83870855d82aba6819217abeff5a40779dbb28b4","date":1464291012,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/UninvertingReader#getSortedSetDocValues(String).mjava","sourceNew":null,"sourceOld":"  @Override\n  public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n    Type v = getType(field);\n    if (v != null) {\n      switch (v) {\n        case SORTED_SET_INTEGER:\n        case SORTED_SET_FLOAT: \n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT32_TERM_PREFIX);\n        case SORTED_SET_LONG:\n        case SORTED_SET_DOUBLE:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, FieldCache.INT64_TERM_PREFIX);\n        case SORTED_SET_BINARY:\n          return FieldCache.DEFAULT.getDocTermOrds(in, field, null);\n      }\n    }\n    return in.getSortedSetDocValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["b0b3768e97375c7a745c68f0b54710e8bedccc11"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["b0b3768e97375c7a745c68f0b54710e8bedccc11","a076c3c721f685b7559308fdc2cd72d91bba67e5"],"63961b0a0b1541623ed4c74d8cb088c35b32470f":["36a4a25c2f02edc0c96bc51a298c45b1764e662d"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"83870855d82aba6819217abeff5a40779dbb28b4":["b0b3768e97375c7a745c68f0b54710e8bedccc11","0e121d43b5a10f2df530f406f935102656e9c4e8"],"56572ec06f1407c066d6b7399413178b33176cd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","93dd449115a9247533e44bab47e8429e5dccbc6d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["b0b3768e97375c7a745c68f0b54710e8bedccc11","0e121d43b5a10f2df530f406f935102656e9c4e8"],"36a4a25c2f02edc0c96bc51a298c45b1764e662d":["b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","30b6ad849a21206db510322a3f583ca70ae20a2f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b0b3768e97375c7a745c68f0b54710e8bedccc11":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"30b6ad849a21206db510322a3f583ca70ae20a2f":["63961b0a0b1541623ed4c74d8cb088c35b32470f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e121d43b5a10f2df530f406f935102656e9c4e8"]},"commit2Childs":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"63961b0a0b1541623ed4c74d8cb088c35b32470f":["30b6ad849a21206db510322a3f583ca70ae20a2f"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["36a4a25c2f02edc0c96bc51a298c45b1764e662d"],"83870855d82aba6819217abeff5a40779dbb28b4":[],"56572ec06f1407c066d6b7399413178b33176cd8":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"36a4a25c2f02edc0c96bc51a298c45b1764e662d":["63961b0a0b1541623ed4c74d8cb088c35b32470f"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","b0b3768e97375c7a745c68f0b54710e8bedccc11"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8","93dd449115a9247533e44bab47e8429e5dccbc6d"],"b0b3768e97375c7a745c68f0b54710e8bedccc11":["a076c3c721f685b7559308fdc2cd72d91bba67e5","0e121d43b5a10f2df530f406f935102656e9c4e8","83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"30b6ad849a21206db510322a3f583ca70ae20a2f":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["83870855d82aba6819217abeff5a40779dbb28b4","56572ec06f1407c066d6b7399413178b33176cd8","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}