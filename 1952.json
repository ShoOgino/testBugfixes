{"path":"solr/core/src/test/org/apache/solr/handler/component/FacetPivotSmallTest#testPivotFacetStatsUnsortedTagged().mjava","commits":[{"id":"4c18a95e9168a30be855f5d5e7d61a863186fdc5","date":1415142581,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/FacetPivotSmallTest#testPivotFacetStatsUnsortedTagged().mjava","pathOld":"/dev/null","sourceNew":"  public void testPivotFacetStatsUnsortedTagged() throws Exception {\n    index();\n\n    final ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"facet\", \"true\");\n    params.add(\"facet.pivot\", \"{!stats=s1}place_t,company_t\");\n    params.add(\"stats\", \"true\");\n    params.add(\"stats.field\", \"{!key=avg_price tag=s1 mean=true}price_ti\");\n\n    SolrQueryRequest req = req(params);\n    final String statsPrefix = \"//lst[@name='facet_counts']/lst[@name='facet_pivot']/arr[@name='place_t,company_t']/lst\";\n    String dublinMicrosoftStats = statsPrefix + \"[str[@name='value'][.='dublin']]/arr[@name='pivot']/lst[str[@name='value'][.='microsoft']]/lst[@name='stats']/lst[@name='stats_fields']/lst[@name='avg_price']\";\n    String cardiffPolecatStats = statsPrefix + \"[str[@name='value'][.='cardiff']]/arr[@name='pivot']/lst[str[@name='value'][.='polecat']]/lst[@name='stats']/lst[@name='stats_fields']/lst[@name='avg_price']\";\n    String krakowFujitsuStats = statsPrefix + \"[str[@name='value'][.='krakow']]/arr[@name='pivot']/lst[str[@name='value'][.='fujitsu']]/lst[@name='stats']/lst[@name='stats_fields']/lst[@name='avg_price']\";\n    assertQ(req,\n        dublinMicrosoftStats + \"/double[@name='min'][.=15.0]\",\n        dublinMicrosoftStats + \"/double[@name='max'][.=29.0]\",\n        dublinMicrosoftStats + \"/long[@name='count'][.=3]\",\n        dublinMicrosoftStats + \"/long[@name='missing'][.=1]\",\n        dublinMicrosoftStats + \"/double[@name='sum'][.=63.0]\",\n        dublinMicrosoftStats + \"/double[@name='sumOfSquares'][.=1427.0]\",\n        dublinMicrosoftStats + \"/double[@name='mean'][.=21.0]\",\n        dublinMicrosoftStats + \"/double[@name='stddev'][.=7.211102550927978]\",\n\n        cardiffPolecatStats + \"/double[@name='min'][.=15.0]\",\n        cardiffPolecatStats + \"/double[@name='max'][.=39.0]\",\n        cardiffPolecatStats + \"/long[@name='count'][.=2]\",\n        cardiffPolecatStats + \"/long[@name='missing'][.=1]\",\n        cardiffPolecatStats + \"/double[@name='sum'][.=54.0]\",\n        cardiffPolecatStats + \"/double[@name='sumOfSquares'][.=1746.0]\",\n        cardiffPolecatStats + \"/double[@name='mean'][.=27.0]\",\n        cardiffPolecatStats + \"/double[@name='stddev'][.=16.97056274847714]\",\n\n        krakowFujitsuStats + \"/null[@name='min']\",\n        krakowFujitsuStats + \"/null[@name='max']\",\n        krakowFujitsuStats + \"/long[@name='count'][.=0]\",\n        krakowFujitsuStats + \"/long[@name='missing'][.=1]\",\n        krakowFujitsuStats + \"/double[@name='sum'][.=0.0]\",\n        krakowFujitsuStats + \"/double[@name='sumOfSquares'][.=0.0]\",\n        krakowFujitsuStats + \"/double[@name='mean'][.='NaN']\",\n        krakowFujitsuStats + \"/double[@name='stddev'][.=0.0]\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d12bbc45d641864ffe03291bc30f178eb34e434c","date":1426001646,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/FacetPivotSmallTest#testPivotFacetStatsUnsortedTagged().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/FacetPivotSmallTest#testPivotFacetStatsUnsortedTagged().mjava","sourceNew":"  public void testPivotFacetStatsUnsortedTagged() throws Exception {\n    index();\n\n    final ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"facet\", \"true\");\n    params.add(\"facet.pivot\", \"{!stats=s1}place_t,company_t\");\n    params.add(\"stats\", \"true\");\n    params.add(\"stats.field\", \"{!key=avg_price tag=s1}price_ti\");\n\n    SolrQueryRequest req = req(params);\n    final String statsPrefix = \"//lst[@name='facet_counts']/lst[@name='facet_pivot']/arr[@name='place_t,company_t']/lst\";\n    String dublinMicrosoftStats = statsPrefix + \"[str[@name='value'][.='dublin']]/arr[@name='pivot']/lst[str[@name='value'][.='microsoft']]/lst[@name='stats']/lst[@name='stats_fields']/lst[@name='avg_price']\";\n    String cardiffPolecatStats = statsPrefix + \"[str[@name='value'][.='cardiff']]/arr[@name='pivot']/lst[str[@name='value'][.='polecat']]/lst[@name='stats']/lst[@name='stats_fields']/lst[@name='avg_price']\";\n    String krakowFujitsuStats = statsPrefix + \"[str[@name='value'][.='krakow']]/arr[@name='pivot']/lst[str[@name='value'][.='fujitsu']]/lst[@name='stats']/lst[@name='stats_fields']/lst[@name='avg_price']\";\n    assertQ(req,\n        dublinMicrosoftStats + \"/double[@name='min'][.=15.0]\",\n        dublinMicrosoftStats + \"/double[@name='max'][.=29.0]\",\n        dublinMicrosoftStats + \"/long[@name='count'][.=3]\",\n        dublinMicrosoftStats + \"/long[@name='missing'][.=1]\",\n        dublinMicrosoftStats + \"/double[@name='sum'][.=63.0]\",\n        dublinMicrosoftStats + \"/double[@name='sumOfSquares'][.=1427.0]\",\n        dublinMicrosoftStats + \"/double[@name='mean'][.=21.0]\",\n        dublinMicrosoftStats + \"/double[@name='stddev'][.=7.211102550927978]\",\n        // if new stats are supported, this will break - update test to assert values for each\n        \"count(\" + dublinMicrosoftStats + \"/*)=8\",\n\n        cardiffPolecatStats + \"/double[@name='min'][.=15.0]\",\n        cardiffPolecatStats + \"/double[@name='max'][.=39.0]\",\n        cardiffPolecatStats + \"/long[@name='count'][.=2]\",\n        cardiffPolecatStats + \"/long[@name='missing'][.=1]\",\n        cardiffPolecatStats + \"/double[@name='sum'][.=54.0]\",\n        cardiffPolecatStats + \"/double[@name='sumOfSquares'][.=1746.0]\",\n        cardiffPolecatStats + \"/double[@name='mean'][.=27.0]\",\n        cardiffPolecatStats + \"/double[@name='stddev'][.=16.97056274847714]\",\n        // if new stats are supported, this will break - update test to assert values for each\n        \"count(\" + cardiffPolecatStats + \"/*)=8\",\n\n        krakowFujitsuStats + \"/null[@name='min']\",\n        krakowFujitsuStats + \"/null[@name='max']\",\n        krakowFujitsuStats + \"/long[@name='count'][.=0]\",\n        krakowFujitsuStats + \"/long[@name='missing'][.=1]\",\n        krakowFujitsuStats + \"/double[@name='sum'][.=0.0]\",\n        krakowFujitsuStats + \"/double[@name='sumOfSquares'][.=0.0]\",\n        krakowFujitsuStats + \"/double[@name='mean'][.='NaN']\",\n        krakowFujitsuStats + \"/double[@name='stddev'][.=0.0]\",\n        // if new stats are supported, this will break - update test to assert values for each\n        \"count(\" + krakowFujitsuStats + \"/*)=8\"\n\n    );\n  }\n\n","sourceOld":"  public void testPivotFacetStatsUnsortedTagged() throws Exception {\n    index();\n\n    final ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"facet\", \"true\");\n    params.add(\"facet.pivot\", \"{!stats=s1}place_t,company_t\");\n    params.add(\"stats\", \"true\");\n    params.add(\"stats.field\", \"{!key=avg_price tag=s1 mean=true}price_ti\");\n\n    SolrQueryRequest req = req(params);\n    final String statsPrefix = \"//lst[@name='facet_counts']/lst[@name='facet_pivot']/arr[@name='place_t,company_t']/lst\";\n    String dublinMicrosoftStats = statsPrefix + \"[str[@name='value'][.='dublin']]/arr[@name='pivot']/lst[str[@name='value'][.='microsoft']]/lst[@name='stats']/lst[@name='stats_fields']/lst[@name='avg_price']\";\n    String cardiffPolecatStats = statsPrefix + \"[str[@name='value'][.='cardiff']]/arr[@name='pivot']/lst[str[@name='value'][.='polecat']]/lst[@name='stats']/lst[@name='stats_fields']/lst[@name='avg_price']\";\n    String krakowFujitsuStats = statsPrefix + \"[str[@name='value'][.='krakow']]/arr[@name='pivot']/lst[str[@name='value'][.='fujitsu']]/lst[@name='stats']/lst[@name='stats_fields']/lst[@name='avg_price']\";\n    assertQ(req,\n        dublinMicrosoftStats + \"/double[@name='min'][.=15.0]\",\n        dublinMicrosoftStats + \"/double[@name='max'][.=29.0]\",\n        dublinMicrosoftStats + \"/long[@name='count'][.=3]\",\n        dublinMicrosoftStats + \"/long[@name='missing'][.=1]\",\n        dublinMicrosoftStats + \"/double[@name='sum'][.=63.0]\",\n        dublinMicrosoftStats + \"/double[@name='sumOfSquares'][.=1427.0]\",\n        dublinMicrosoftStats + \"/double[@name='mean'][.=21.0]\",\n        dublinMicrosoftStats + \"/double[@name='stddev'][.=7.211102550927978]\",\n\n        cardiffPolecatStats + \"/double[@name='min'][.=15.0]\",\n        cardiffPolecatStats + \"/double[@name='max'][.=39.0]\",\n        cardiffPolecatStats + \"/long[@name='count'][.=2]\",\n        cardiffPolecatStats + \"/long[@name='missing'][.=1]\",\n        cardiffPolecatStats + \"/double[@name='sum'][.=54.0]\",\n        cardiffPolecatStats + \"/double[@name='sumOfSquares'][.=1746.0]\",\n        cardiffPolecatStats + \"/double[@name='mean'][.=27.0]\",\n        cardiffPolecatStats + \"/double[@name='stddev'][.=16.97056274847714]\",\n\n        krakowFujitsuStats + \"/null[@name='min']\",\n        krakowFujitsuStats + \"/null[@name='max']\",\n        krakowFujitsuStats + \"/long[@name='count'][.=0]\",\n        krakowFujitsuStats + \"/long[@name='missing'][.=1]\",\n        krakowFujitsuStats + \"/double[@name='sum'][.=0.0]\",\n        krakowFujitsuStats + \"/double[@name='sumOfSquares'][.=0.0]\",\n        krakowFujitsuStats + \"/double[@name='mean'][.='NaN']\",\n        krakowFujitsuStats + \"/double[@name='stddev'][.=0.0]\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/FacetPivotSmallTest#testPivotFacetStatsUnsortedTagged().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/FacetPivotSmallTest#testPivotFacetStatsUnsortedTagged().mjava","sourceNew":"  public void testPivotFacetStatsUnsortedTagged() throws Exception {\n    index();\n\n    final ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"facet\", \"true\");\n    params.add(\"facet.pivot\", \"{!stats=s1}place_t,company_t\");\n    params.add(\"stats\", \"true\");\n    params.add(\"stats.field\", \"{!key=avg_price tag=s1}price_ti\");\n\n    SolrQueryRequest req = req(params);\n    final String statsPrefix = \"//lst[@name='facet_counts']/lst[@name='facet_pivot']/arr[@name='place_t,company_t']/lst\";\n    String dublinMicrosoftStats = statsPrefix + \"[str[@name='value'][.='dublin']]/arr[@name='pivot']/lst[str[@name='value'][.='microsoft']]/lst[@name='stats']/lst[@name='stats_fields']/lst[@name='avg_price']\";\n    String cardiffPolecatStats = statsPrefix + \"[str[@name='value'][.='cardiff']]/arr[@name='pivot']/lst[str[@name='value'][.='polecat']]/lst[@name='stats']/lst[@name='stats_fields']/lst[@name='avg_price']\";\n    String krakowFujitsuStats = statsPrefix + \"[str[@name='value'][.='krakow']]/arr[@name='pivot']/lst[str[@name='value'][.='fujitsu']]/lst[@name='stats']/lst[@name='stats_fields']/lst[@name='avg_price']\";\n    assertQ(req,\n        dublinMicrosoftStats + \"/double[@name='min'][.=15.0]\",\n        dublinMicrosoftStats + \"/double[@name='max'][.=29.0]\",\n        dublinMicrosoftStats + \"/long[@name='count'][.=3]\",\n        dublinMicrosoftStats + \"/long[@name='missing'][.=1]\",\n        dublinMicrosoftStats + \"/double[@name='sum'][.=63.0]\",\n        dublinMicrosoftStats + \"/double[@name='sumOfSquares'][.=1427.0]\",\n        dublinMicrosoftStats + \"/double[@name='mean'][.=21.0]\",\n        dublinMicrosoftStats + \"/double[@name='stddev'][.=7.211102550927978]\",\n        // if new stats are supported, this will break - update test to assert values for each\n        \"count(\" + dublinMicrosoftStats + \"/*)=8\",\n\n        cardiffPolecatStats + \"/double[@name='min'][.=15.0]\",\n        cardiffPolecatStats + \"/double[@name='max'][.=39.0]\",\n        cardiffPolecatStats + \"/long[@name='count'][.=2]\",\n        cardiffPolecatStats + \"/long[@name='missing'][.=1]\",\n        cardiffPolecatStats + \"/double[@name='sum'][.=54.0]\",\n        cardiffPolecatStats + \"/double[@name='sumOfSquares'][.=1746.0]\",\n        cardiffPolecatStats + \"/double[@name='mean'][.=27.0]\",\n        cardiffPolecatStats + \"/double[@name='stddev'][.=16.97056274847714]\",\n        // if new stats are supported, this will break - update test to assert values for each\n        \"count(\" + cardiffPolecatStats + \"/*)=8\",\n\n        krakowFujitsuStats + \"/null[@name='min']\",\n        krakowFujitsuStats + \"/null[@name='max']\",\n        krakowFujitsuStats + \"/long[@name='count'][.=0]\",\n        krakowFujitsuStats + \"/long[@name='missing'][.=1]\",\n        krakowFujitsuStats + \"/double[@name='sum'][.=0.0]\",\n        krakowFujitsuStats + \"/double[@name='sumOfSquares'][.=0.0]\",\n        krakowFujitsuStats + \"/double[@name='mean'][.='NaN']\",\n        krakowFujitsuStats + \"/double[@name='stddev'][.=0.0]\",\n        // if new stats are supported, this will break - update test to assert values for each\n        \"count(\" + krakowFujitsuStats + \"/*)=8\"\n\n    );\n  }\n\n","sourceOld":"  public void testPivotFacetStatsUnsortedTagged() throws Exception {\n    index();\n\n    final ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"*:*\");\n    params.add(\"facet\", \"true\");\n    params.add(\"facet.pivot\", \"{!stats=s1}place_t,company_t\");\n    params.add(\"stats\", \"true\");\n    params.add(\"stats.field\", \"{!key=avg_price tag=s1 mean=true}price_ti\");\n\n    SolrQueryRequest req = req(params);\n    final String statsPrefix = \"//lst[@name='facet_counts']/lst[@name='facet_pivot']/arr[@name='place_t,company_t']/lst\";\n    String dublinMicrosoftStats = statsPrefix + \"[str[@name='value'][.='dublin']]/arr[@name='pivot']/lst[str[@name='value'][.='microsoft']]/lst[@name='stats']/lst[@name='stats_fields']/lst[@name='avg_price']\";\n    String cardiffPolecatStats = statsPrefix + \"[str[@name='value'][.='cardiff']]/arr[@name='pivot']/lst[str[@name='value'][.='polecat']]/lst[@name='stats']/lst[@name='stats_fields']/lst[@name='avg_price']\";\n    String krakowFujitsuStats = statsPrefix + \"[str[@name='value'][.='krakow']]/arr[@name='pivot']/lst[str[@name='value'][.='fujitsu']]/lst[@name='stats']/lst[@name='stats_fields']/lst[@name='avg_price']\";\n    assertQ(req,\n        dublinMicrosoftStats + \"/double[@name='min'][.=15.0]\",\n        dublinMicrosoftStats + \"/double[@name='max'][.=29.0]\",\n        dublinMicrosoftStats + \"/long[@name='count'][.=3]\",\n        dublinMicrosoftStats + \"/long[@name='missing'][.=1]\",\n        dublinMicrosoftStats + \"/double[@name='sum'][.=63.0]\",\n        dublinMicrosoftStats + \"/double[@name='sumOfSquares'][.=1427.0]\",\n        dublinMicrosoftStats + \"/double[@name='mean'][.=21.0]\",\n        dublinMicrosoftStats + \"/double[@name='stddev'][.=7.211102550927978]\",\n\n        cardiffPolecatStats + \"/double[@name='min'][.=15.0]\",\n        cardiffPolecatStats + \"/double[@name='max'][.=39.0]\",\n        cardiffPolecatStats + \"/long[@name='count'][.=2]\",\n        cardiffPolecatStats + \"/long[@name='missing'][.=1]\",\n        cardiffPolecatStats + \"/double[@name='sum'][.=54.0]\",\n        cardiffPolecatStats + \"/double[@name='sumOfSquares'][.=1746.0]\",\n        cardiffPolecatStats + \"/double[@name='mean'][.=27.0]\",\n        cardiffPolecatStats + \"/double[@name='stddev'][.=16.97056274847714]\",\n\n        krakowFujitsuStats + \"/null[@name='min']\",\n        krakowFujitsuStats + \"/null[@name='max']\",\n        krakowFujitsuStats + \"/long[@name='count'][.=0]\",\n        krakowFujitsuStats + \"/long[@name='missing'][.=1]\",\n        krakowFujitsuStats + \"/double[@name='sum'][.=0.0]\",\n        krakowFujitsuStats + \"/double[@name='sumOfSquares'][.=0.0]\",\n        krakowFujitsuStats + \"/double[@name='mean'][.='NaN']\",\n        krakowFujitsuStats + \"/double[@name='stddev'][.=0.0]\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["4c18a95e9168a30be855f5d5e7d61a863186fdc5","d12bbc45d641864ffe03291bc30f178eb34e434c"],"4c18a95e9168a30be855f5d5e7d61a863186fdc5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d12bbc45d641864ffe03291bc30f178eb34e434c":["4c18a95e9168a30be855f5d5e7d61a863186fdc5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d12bbc45d641864ffe03291bc30f178eb34e434c"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"4c18a95e9168a30be855f5d5e7d61a863186fdc5":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","d12bbc45d641864ffe03291bc30f178eb34e434c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4c18a95e9168a30be855f5d5e7d61a863186fdc5"],"d12bbc45d641864ffe03291bc30f178eb34e434c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}