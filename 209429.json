{"path":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetSumIntAssociations#sumValues(List[MatchingDocs]).mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetSumIntAssociations#sumValues(List[MatchingDocs]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/TaxonomyFacetSumIntAssociations#sumValues(List[MatchingDocs]).mjava","sourceNew":"  private final void sumValues(List<MatchingDocs> matchingDocs) throws IOException {\n    //System.out.println(\"count matchingDocs=\" + matchingDocs + \" facetsField=\" + facetsFieldName);\n    for(MatchingDocs hits : matchingDocs) {\n      BinaryDocValues dv = hits.context.reader().getBinaryDocValues(indexFieldName);\n      if (dv == null) { // this reader does not have DocValues for the requested category list\n        continue;\n      }\n      FixedBitSet bits = hits.bits;\n    \n      final int length = hits.bits.length();\n      int doc = 0;\n      BytesRef scratch = new BytesRef();\n      //System.out.println(\"count seg=\" + hits.context.reader());\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        //System.out.println(\"  doc=\" + doc);\n        // nocommit use OrdinalsReader?  but, add a\n        // BytesRef getAssociation()?\n        dv.get(doc, scratch);\n        byte[] bytes = scratch.bytes;\n        int end = scratch.offset + scratch.length;\n        int offset = scratch.offset;\n        while (offset < end) {\n          int ord = ((bytes[offset]&0xFF) << 24) |\n            ((bytes[offset+1]&0xFF) << 16) |\n            ((bytes[offset+2]&0xFF) << 8) |\n            (bytes[offset+3]&0xFF);\n          offset += 4;\n          int value = ((bytes[offset]&0xFF) << 24) |\n            ((bytes[offset+1]&0xFF) << 16) |\n            ((bytes[offset+2]&0xFF) << 8) |\n            (bytes[offset+3]&0xFF);\n          offset += 4;\n          values[ord] += value;\n        }\n        ++doc;\n      }\n    }\n  }\n\n","sourceOld":"  private final void sumValues(List<MatchingDocs> matchingDocs) throws IOException {\n    //System.out.println(\"count matchingDocs=\" + matchingDocs + \" facetsField=\" + facetsFieldName);\n    for(MatchingDocs hits : matchingDocs) {\n      BinaryDocValues dv = hits.context.reader().getBinaryDocValues(indexFieldName);\n      if (dv == null) { // this reader does not have DocValues for the requested category list\n        continue;\n      }\n      FixedBitSet bits = hits.bits;\n    \n      final int length = hits.bits.length();\n      int doc = 0;\n      BytesRef scratch = new BytesRef();\n      //System.out.println(\"count seg=\" + hits.context.reader());\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        //System.out.println(\"  doc=\" + doc);\n        // nocommit use OrdinalsReader?  but, add a\n        // BytesRef getAssociation()?\n        dv.get(doc, scratch);\n        byte[] bytes = scratch.bytes;\n        int end = scratch.offset + scratch.length;\n        int offset = scratch.offset;\n        while (offset < end) {\n          int ord = ((bytes[offset]&0xFF) << 24) |\n            ((bytes[offset+1]&0xFF) << 16) |\n            ((bytes[offset+2]&0xFF) << 8) |\n            (bytes[offset+3]&0xFF);\n          offset += 4;\n          int value = ((bytes[offset]&0xFF) << 24) |\n            ((bytes[offset+1]&0xFF) << 16) |\n            ((bytes[offset+2]&0xFF) << 8) |\n            (bytes[offset+3]&0xFF);\n          offset += 4;\n          values[ord] += value;\n        }\n        ++doc;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1536855b62f453c22bb60258029b3b2a07b2532c","date":1385570079,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetSumIntAssociations#sumValues(List[MatchingDocs]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetSumIntAssociations#sumValues(List[MatchingDocs]).mjava","sourceNew":"  private final void sumValues(List<MatchingDocs> matchingDocs) throws IOException {\n    //System.out.println(\"count matchingDocs=\" + matchingDocs + \" facetsField=\" + facetsFieldName);\n    for(MatchingDocs hits : matchingDocs) {\n      BinaryDocValues dv = hits.context.reader().getBinaryDocValues(indexFieldName);\n      if (dv == null) { // this reader does not have DocValues for the requested category list\n        continue;\n      }\n      FixedBitSet bits = hits.bits;\n    \n      final int length = hits.bits.length();\n      int doc = 0;\n      BytesRef scratch = new BytesRef();\n      //System.out.println(\"count seg=\" + hits.context.reader());\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        //System.out.println(\"  doc=\" + doc);\n        // nocommit use OrdinalsReader?  but, add a\n        // BytesRef getAssociation()?\n        dv.get(doc, scratch);\n        byte[] bytes = scratch.bytes;\n        int end = scratch.offset + scratch.length;\n        int offset = scratch.offset;\n        while (offset < end) {\n          int ord = ((bytes[offset]&0xFF) << 24) |\n            ((bytes[offset+1]&0xFF) << 16) |\n            ((bytes[offset+2]&0xFF) << 8) |\n            (bytes[offset+3]&0xFF);\n          offset += 4;\n          int value = ((bytes[offset]&0xFF) << 24) |\n            ((bytes[offset+1]&0xFF) << 16) |\n            ((bytes[offset+2]&0xFF) << 8) |\n            (bytes[offset+3]&0xFF);\n          offset += 4;\n          values[ord] += value;\n        }\n        ++doc;\n      }\n    }\n\n    rollup();\n  }\n\n","sourceOld":"  private final void sumValues(List<MatchingDocs> matchingDocs) throws IOException {\n    //System.out.println(\"count matchingDocs=\" + matchingDocs + \" facetsField=\" + facetsFieldName);\n    for(MatchingDocs hits : matchingDocs) {\n      BinaryDocValues dv = hits.context.reader().getBinaryDocValues(indexFieldName);\n      if (dv == null) { // this reader does not have DocValues for the requested category list\n        continue;\n      }\n      FixedBitSet bits = hits.bits;\n    \n      final int length = hits.bits.length();\n      int doc = 0;\n      BytesRef scratch = new BytesRef();\n      //System.out.println(\"count seg=\" + hits.context.reader());\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        //System.out.println(\"  doc=\" + doc);\n        // nocommit use OrdinalsReader?  but, add a\n        // BytesRef getAssociation()?\n        dv.get(doc, scratch);\n        byte[] bytes = scratch.bytes;\n        int end = scratch.offset + scratch.length;\n        int offset = scratch.offset;\n        while (offset < end) {\n          int ord = ((bytes[offset]&0xFF) << 24) |\n            ((bytes[offset+1]&0xFF) << 16) |\n            ((bytes[offset+2]&0xFF) << 8) |\n            (bytes[offset+3]&0xFF);\n          offset += 4;\n          int value = ((bytes[offset]&0xFF) << 24) |\n            ((bytes[offset+1]&0xFF) << 16) |\n            ((bytes[offset+2]&0xFF) << 8) |\n            (bytes[offset+3]&0xFF);\n          offset += 4;\n          values[ord] += value;\n        }\n        ++doc;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["38d1f7652993e785234ecf3c1fc10c7c46a6129b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8","date":1387415264,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetSumIntAssociations#sumValues(List[MatchingDocs]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetSumIntAssociations#sumValues(List[MatchingDocs]).mjava","sourceNew":"  private final void sumValues(List<MatchingDocs> matchingDocs) throws IOException {\n    //System.out.println(\"count matchingDocs=\" + matchingDocs + \" facetsField=\" + facetsFieldName);\n    for(MatchingDocs hits : matchingDocs) {\n      BinaryDocValues dv = hits.context.reader().getBinaryDocValues(indexFieldName);\n      if (dv == null) { // this reader does not have DocValues for the requested category list\n        continue;\n      }\n      FixedBitSet bits = hits.bits;\n    \n      final int length = hits.bits.length();\n      int doc = 0;\n      BytesRef scratch = new BytesRef();\n      //System.out.println(\"count seg=\" + hits.context.reader());\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        //System.out.println(\"  doc=\" + doc);\n        // TODO: use OrdinalsReader?  we'd need to add a\n        // BytesRef getAssociation()?\n        dv.get(doc, scratch);\n        byte[] bytes = scratch.bytes;\n        int end = scratch.offset + scratch.length;\n        int offset = scratch.offset;\n        while (offset < end) {\n          int ord = ((bytes[offset]&0xFF) << 24) |\n            ((bytes[offset+1]&0xFF) << 16) |\n            ((bytes[offset+2]&0xFF) << 8) |\n            (bytes[offset+3]&0xFF);\n          offset += 4;\n          int value = ((bytes[offset]&0xFF) << 24) |\n            ((bytes[offset+1]&0xFF) << 16) |\n            ((bytes[offset+2]&0xFF) << 8) |\n            (bytes[offset+3]&0xFF);\n          offset += 4;\n          values[ord] += value;\n        }\n        ++doc;\n      }\n    }\n\n    rollup();\n  }\n\n","sourceOld":"  private final void sumValues(List<MatchingDocs> matchingDocs) throws IOException {\n    //System.out.println(\"count matchingDocs=\" + matchingDocs + \" facetsField=\" + facetsFieldName);\n    for(MatchingDocs hits : matchingDocs) {\n      BinaryDocValues dv = hits.context.reader().getBinaryDocValues(indexFieldName);\n      if (dv == null) { // this reader does not have DocValues for the requested category list\n        continue;\n      }\n      FixedBitSet bits = hits.bits;\n    \n      final int length = hits.bits.length();\n      int doc = 0;\n      BytesRef scratch = new BytesRef();\n      //System.out.println(\"count seg=\" + hits.context.reader());\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        //System.out.println(\"  doc=\" + doc);\n        // nocommit use OrdinalsReader?  but, add a\n        // BytesRef getAssociation()?\n        dv.get(doc, scratch);\n        byte[] bytes = scratch.bytes;\n        int end = scratch.offset + scratch.length;\n        int offset = scratch.offset;\n        while (offset < end) {\n          int ord = ((bytes[offset]&0xFF) << 24) |\n            ((bytes[offset+1]&0xFF) << 16) |\n            ((bytes[offset+2]&0xFF) << 8) |\n            (bytes[offset+3]&0xFF);\n          offset += 4;\n          int value = ((bytes[offset]&0xFF) << 24) |\n            ((bytes[offset+1]&0xFF) << 16) |\n            ((bytes[offset+2]&0xFF) << 8) |\n            (bytes[offset+3]&0xFF);\n          offset += 4;\n          values[ord] += value;\n        }\n        ++doc;\n      }\n    }\n\n    rollup();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyFacetSumIntAssociations#sumValues(List[MatchingDocs]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetSumIntAssociations#sumValues(List[MatchingDocs]).mjava","sourceNew":"  private final void sumValues(List<MatchingDocs> matchingDocs) throws IOException {\n    //System.out.println(\"count matchingDocs=\" + matchingDocs + \" facetsField=\" + facetsFieldName);\n    for(MatchingDocs hits : matchingDocs) {\n      BinaryDocValues dv = hits.context.reader().getBinaryDocValues(indexFieldName);\n      if (dv == null) { // this reader does not have DocValues for the requested category list\n        continue;\n      }\n      FixedBitSet bits = hits.bits;\n    \n      final int length = hits.bits.length();\n      int doc = 0;\n      BytesRef scratch = new BytesRef();\n      //System.out.println(\"count seg=\" + hits.context.reader());\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        //System.out.println(\"  doc=\" + doc);\n        // TODO: use OrdinalsReader?  we'd need to add a\n        // BytesRef getAssociation()?\n        dv.get(doc, scratch);\n        byte[] bytes = scratch.bytes;\n        int end = scratch.offset + scratch.length;\n        int offset = scratch.offset;\n        while (offset < end) {\n          int ord = ((bytes[offset]&0xFF) << 24) |\n            ((bytes[offset+1]&0xFF) << 16) |\n            ((bytes[offset+2]&0xFF) << 8) |\n            (bytes[offset+3]&0xFF);\n          offset += 4;\n          int value = ((bytes[offset]&0xFF) << 24) |\n            ((bytes[offset+1]&0xFF) << 16) |\n            ((bytes[offset+2]&0xFF) << 8) |\n            (bytes[offset+3]&0xFF);\n          offset += 4;\n          values[ord] += value;\n        }\n        ++doc;\n      }\n    }\n\n    rollup();\n  }\n\n","sourceOld":"  private final void sumValues(List<MatchingDocs> matchingDocs) throws IOException {\n    //System.out.println(\"count matchingDocs=\" + matchingDocs + \" facetsField=\" + facetsFieldName);\n    for(MatchingDocs hits : matchingDocs) {\n      BinaryDocValues dv = hits.context.reader().getBinaryDocValues(indexFieldName);\n      if (dv == null) { // this reader does not have DocValues for the requested category list\n        continue;\n      }\n      FixedBitSet bits = hits.bits;\n    \n      final int length = hits.bits.length();\n      int doc = 0;\n      BytesRef scratch = new BytesRef();\n      //System.out.println(\"count seg=\" + hits.context.reader());\n      while (doc < length && (doc = bits.nextSetBit(doc)) != -1) {\n        //System.out.println(\"  doc=\" + doc);\n        // TODO: use OrdinalsReader?  we'd need to add a\n        // BytesRef getAssociation()?\n        dv.get(doc, scratch);\n        byte[] bytes = scratch.bytes;\n        int end = scratch.offset + scratch.length;\n        int offset = scratch.offset;\n        while (offset < end) {\n          int ord = ((bytes[offset]&0xFF) << 24) |\n            ((bytes[offset+1]&0xFF) << 16) |\n            ((bytes[offset+2]&0xFF) << 8) |\n            (bytes[offset+3]&0xFF);\n          offset += 4;\n          int value = ((bytes[offset]&0xFF) << 24) |\n            ((bytes[offset+1]&0xFF) << 16) |\n            ((bytes[offset+2]&0xFF) << 8) |\n            (bytes[offset+3]&0xFF);\n          offset += 4;\n          values[ord] += value;\n        }\n        ++doc;\n      }\n    }\n\n    rollup();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8"],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8":["1536855b62f453c22bb60258029b3b2a07b2532c"],"1536855b62f453c22bb60258029b3b2a07b2532c":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4edc984f0f4ac77c37e48ace2932f780f888453c":[],"21d36d0db865f7b84026b447bec653469a6e66df":["1536855b62f453c22bb60258029b3b2a07b2532c"],"51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8":["4edc984f0f4ac77c37e48ace2932f780f888453c"],"1536855b62f453c22bb60258029b3b2a07b2532c":["51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4edc984f0f4ac77c37e48ace2932f780f888453c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}