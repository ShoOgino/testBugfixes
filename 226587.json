{"path":"src/test-deprecated/org/apache/lucene/search/TestTermVectors#testTermVectors().mjava","commits":[{"id":"5b5461affe637a07375542c763a4805300802be8","date":1102270918,"type":0,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/test-deprecated/org/apache/lucene/search/TestTermVectors#testTermVectors().mjava","pathOld":"/dev/null","sourceNew":"  public void testTermVectors() {\n    Query query = new TermQuery(new Term(\"field\", \"seventy\"));\n    try {\n      Hits hits = searcher.search(query);\n      assertEquals(100, hits.length());\n      \n      for (int i = 0; i < hits.length(); i++)\n      {\n        TermFreqVector [] vector = searcher.reader.getTermFreqVectors(hits.id(i));\n        assertTrue(vector != null);\n        assertTrue(vector.length == 1);\n        //assertTrue();\n      }\n      TermFreqVector [] vector = searcher.reader.getTermFreqVectors(hits.id(50));\n      //System.out.println(\"Explain: \" + searcher.explain(query, hits.id(50)));\n      //System.out.println(\"Vector: \" + vector[0].toString());\n    } catch (IOException e) {\n      assertTrue(false);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test-deprecated/org/apache/lucene/search/TestTermVectors#testTermVectors().mjava","sourceNew":null,"sourceOld":"  public void testTermVectors() {\n    Query query = new TermQuery(new Term(\"field\", \"seventy\"));\n    try {\n      Hits hits = searcher.search(query);\n      assertEquals(100, hits.length());\n      \n      for (int i = 0; i < hits.length(); i++)\n      {\n        TermFreqVector [] vector = searcher.reader.getTermFreqVectors(hits.id(i));\n        assertTrue(vector != null);\n        assertTrue(vector.length == 1);\n        //assertTrue();\n      }\n      TermFreqVector [] vector = searcher.reader.getTermFreqVectors(hits.id(50));\n      //System.out.println(\"Explain: \" + searcher.explain(query, hits.id(50)));\n      //System.out.println(\"Vector: \" + vector[0].toString());\n    } catch (IOException e) {\n      assertTrue(false);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5b5461affe637a07375542c763a4805300802be8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["5b5461affe637a07375542c763a4805300802be8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"]},"commit2Childs":{"5b5461affe637a07375542c763a4805300802be8":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b5461affe637a07375542c763a4805300802be8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}