{"path":"solr/core/src/java/org/apache/solr/cloud/ZkController#getSolrCloudManager().mjava","commits":[{"id":"85212dad4ed576c7f7e6c165ee19e597b7b4efc8","date":1507997740,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#getSolrCloudManager().mjava","pathOld":"/dev/null","sourceNew":"  public SolrCloudManager getSolrCloudManager() {\n    if (cloudManager != null) {\n      return cloudManager;\n    }\n    synchronized(this) {\n      if (cloudManager != null) {\n        return cloudManager;\n      }\n      cloudSolrClient = new CloudSolrClient.Builder()\n          .withClusterStateProvider(new ZkClientClusterStateProvider(zkStateReader))\n          .build();\n      cloudManager = new SolrClientCloudManager(new ZkDistributedQueueFactory(zkClient), cloudSolrClient);\n    }\n    return cloudManager;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c7d763eff38c4e1702b60d626f9c8d39f9ad8af8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7d763eff38c4e1702b60d626f9c8d39f9ad8af8","date":1520696743,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#getSolrCloudManager().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#getSolrCloudManager().mjava","sourceNew":"  public SolrCloudManager getSolrCloudManager() {\n    if (cloudManager != null) {\n      return cloudManager;\n    }\n    synchronized(this) {\n      if (cloudManager != null) {\n        return cloudManager;\n      }\n      cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkServerAddress), Optional.empty()).build();\n      cloudManager = new SolrClientCloudManager(new ZkDistributedQueueFactory(zkClient), cloudSolrClient);\n    }\n    return cloudManager;\n  }\n\n","sourceOld":"  public SolrCloudManager getSolrCloudManager() {\n    if (cloudManager != null) {\n      return cloudManager;\n    }\n    synchronized(this) {\n      if (cloudManager != null) {\n        return cloudManager;\n      }\n      cloudSolrClient = new CloudSolrClient.Builder()\n          .withClusterStateProvider(new ZkClientClusterStateProvider(zkStateReader))\n          .build();\n      cloudManager = new SolrClientCloudManager(new ZkDistributedQueueFactory(zkClient), cloudSolrClient);\n    }\n    return cloudManager;\n  }\n\n","bugFix":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"],"bugIntro":["1832cfbe1bb2105fcaa1462951732d4b65444941"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1832cfbe1bb2105fcaa1462951732d4b65444941","date":1538732891,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#getSolrCloudManager().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#getSolrCloudManager().mjava","sourceNew":"  public SolrCloudManager getSolrCloudManager() {\n    if (cloudManager != null) {\n      return cloudManager;\n    }\n    synchronized(this) {\n      if (cloudManager != null) {\n        return cloudManager;\n      }\n      cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkServerAddress), Optional.empty())\n          .withHttpClient(cc.getUpdateShardHandler().getDefaultHttpClient()).build();\n      cloudManager = new SolrClientCloudManager(new ZkDistributedQueueFactory(zkClient), cloudSolrClient);\n    }\n    return cloudManager;\n  }\n\n","sourceOld":"  public SolrCloudManager getSolrCloudManager() {\n    if (cloudManager != null) {\n      return cloudManager;\n    }\n    synchronized(this) {\n      if (cloudManager != null) {\n        return cloudManager;\n      }\n      cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkServerAddress), Optional.empty()).build();\n      cloudManager = new SolrClientCloudManager(new ZkDistributedQueueFactory(zkClient), cloudSolrClient);\n    }\n    return cloudManager;\n  }\n\n","bugFix":["c7d763eff38c4e1702b60d626f9c8d39f9ad8af8"],"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#getSolrCloudManager().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#getSolrCloudManager().mjava","sourceNew":"  public SolrCloudManager getSolrCloudManager() {\n    if (cloudManager != null) {\n      return cloudManager;\n    }\n    synchronized(this) {\n      if (cloudManager != null) {\n        return cloudManager;\n      }\n      cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkServerAddress), Optional.empty()).withSocketTimeout(30000).withConnectionTimeout(15000)\n          .withHttpClient(cc.getUpdateShardHandler().getDefaultHttpClient())\n          .withConnectionTimeout(15000).withSocketTimeout(30000).build();\n      cloudManager = new SolrClientCloudManager(new ZkDistributedQueueFactory(zkClient), cloudSolrClient);\n      cloudManager.getClusterStateProvider().connect();\n    }\n    return cloudManager;\n  }\n\n","sourceOld":"  public SolrCloudManager getSolrCloudManager() {\n    if (cloudManager != null) {\n      return cloudManager;\n    }\n    synchronized(this) {\n      if (cloudManager != null) {\n        return cloudManager;\n      }\n      cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkServerAddress), Optional.empty())\n          .withHttpClient(cc.getUpdateShardHandler().getDefaultHttpClient()).build();\n      cloudManager = new SolrClientCloudManager(new ZkDistributedQueueFactory(zkClient), cloudSolrClient);\n    }\n    return cloudManager;\n  }\n\n","bugFix":["1832cfbe1bb2105fcaa1462951732d4b65444941"],"bugIntro":["1498cb4cd65cf2303ccde0e0d6edf5a5e1e8fd28"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1498cb4cd65cf2303ccde0e0d6edf5a5e1e8fd28","date":1571131262,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#getSolrCloudManager().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#getSolrCloudManager().mjava","sourceNew":"  public SolrCloudManager getSolrCloudManager() {\n    if (cloudManager != null) {\n      return cloudManager;\n    }\n    synchronized(this) {\n      if (cloudManager != null) {\n        return cloudManager;\n      }\n      cloudSolrClient = new CloudSolrClient.Builder(new ZkClientClusterStateProvider(zkStateReader)).withSocketTimeout(30000).withConnectionTimeout(15000)\n          .withHttpClient(cc.getUpdateShardHandler().getDefaultHttpClient())\n          .withConnectionTimeout(15000).withSocketTimeout(30000).build();\n      cloudManager = new SolrClientCloudManager(new ZkDistributedQueueFactory(zkClient), cloudSolrClient);\n      cloudManager.getClusterStateProvider().connect();\n    }\n    return cloudManager;\n  }\n\n","sourceOld":"  public SolrCloudManager getSolrCloudManager() {\n    if (cloudManager != null) {\n      return cloudManager;\n    }\n    synchronized(this) {\n      if (cloudManager != null) {\n        return cloudManager;\n      }\n      cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkServerAddress), Optional.empty()).withSocketTimeout(30000).withConnectionTimeout(15000)\n          .withHttpClient(cc.getUpdateShardHandler().getDefaultHttpClient())\n          .withConnectionTimeout(15000).withSocketTimeout(30000).build();\n      cloudManager = new SolrClientCloudManager(new ZkDistributedQueueFactory(zkClient), cloudSolrClient);\n      cloudManager.getClusterStateProvider().connect();\n    }\n    return cloudManager;\n  }\n\n","bugFix":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#getSolrCloudManager().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#getSolrCloudManager().mjava","sourceNew":"  public SolrCloudManager getSolrCloudManager() {\n    if (cloudManager != null) {\n      return cloudManager;\n    }\n    synchronized(this) {\n      if (cloudManager != null) {\n        return cloudManager;\n      }\n      cloudSolrClient = new CloudSolrClient.Builder(new ZkClientClusterStateProvider(zkStateReader)).withSocketTimeout(30000).withConnectionTimeout(15000)\n          .withHttpClient(cc.getUpdateShardHandler().getDefaultHttpClient())\n          .withConnectionTimeout(15000).withSocketTimeout(30000).build();\n      cloudManager = new SolrClientCloudManager(new ZkDistributedQueueFactory(zkClient), cloudSolrClient);\n      cloudManager.getClusterStateProvider().connect();\n    }\n    return cloudManager;\n  }\n\n","sourceOld":"  public SolrCloudManager getSolrCloudManager() {\n    if (cloudManager != null) {\n      return cloudManager;\n    }\n    synchronized(this) {\n      if (cloudManager != null) {\n        return cloudManager;\n      }\n      cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkServerAddress), Optional.empty()).withSocketTimeout(30000).withConnectionTimeout(15000)\n          .withHttpClient(cc.getUpdateShardHandler().getDefaultHttpClient())\n          .withConnectionTimeout(15000).withSocketTimeout(30000).build();\n      cloudManager = new SolrClientCloudManager(new ZkDistributedQueueFactory(zkClient), cloudSolrClient);\n      cloudManager.getClusterStateProvider().connect();\n    }\n    return cloudManager;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2022c62013ac31ba0bed28b0f0e6faf9af8dd2aa","date":1589312640,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#getSolrCloudManager().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#getSolrCloudManager().mjava","sourceNew":"  public SolrCloudManager getSolrCloudManager() {\n    if (cloudManager != null) {\n      return cloudManager;\n    }\n    synchronized(this) {\n      if (cloudManager != null) {\n        return cloudManager;\n      }\n      cloudSolrClient = new CloudSolrClient.Builder(new ZkClientClusterStateProvider(zkStateReader)).withSocketTimeout(30000).withConnectionTimeout(15000)\n          .withHttpClient(cc.getUpdateShardHandler().getDefaultHttpClient())\n          .withConnectionTimeout(15000).withSocketTimeout(30000).build();\n      cloudManager = new SolrClientCloudManager(\n          new ZkDistributedQueueFactory(zkClient),\n          cloudSolrClient,\n          cc.getObjectCache());\n      cloudManager.getClusterStateProvider().connect();\n    }\n    return cloudManager;\n  }\n\n","sourceOld":"  public SolrCloudManager getSolrCloudManager() {\n    if (cloudManager != null) {\n      return cloudManager;\n    }\n    synchronized(this) {\n      if (cloudManager != null) {\n        return cloudManager;\n      }\n      cloudSolrClient = new CloudSolrClient.Builder(new ZkClientClusterStateProvider(zkStateReader)).withSocketTimeout(30000).withConnectionTimeout(15000)\n          .withHttpClient(cc.getUpdateShardHandler().getDefaultHttpClient())\n          .withConnectionTimeout(15000).withSocketTimeout(30000).build();\n      cloudManager = new SolrClientCloudManager(new ZkDistributedQueueFactory(zkClient), cloudSolrClient);\n      cloudManager.getClusterStateProvider().connect();\n    }\n    return cloudManager;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1498cb4cd65cf2303ccde0e0d6edf5a5e1e8fd28":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"1832cfbe1bb2105fcaa1462951732d4b65444941":["c7d763eff38c4e1702b60d626f9c8d39f9ad8af8"],"2022c62013ac31ba0bed28b0f0e6faf9af8dd2aa":["1498cb4cd65cf2303ccde0e0d6edf5a5e1e8fd28"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["1832cfbe1bb2105fcaa1462951732d4b65444941"],"c7d763eff38c4e1702b60d626f9c8d39f9ad8af8":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2022c62013ac31ba0bed28b0f0e6faf9af8dd2aa"],"b0b597c65628ca9e73913a07e81691f8229bae35":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","1498cb4cd65cf2303ccde0e0d6edf5a5e1e8fd28"]},"commit2Childs":{"1498cb4cd65cf2303ccde0e0d6edf5a5e1e8fd28":["2022c62013ac31ba0bed28b0f0e6faf9af8dd2aa","b0b597c65628ca9e73913a07e81691f8229bae35"],"1832cfbe1bb2105fcaa1462951732d4b65444941":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"2022c62013ac31ba0bed28b0f0e6faf9af8dd2aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["1498cb4cd65cf2303ccde0e0d6edf5a5e1e8fd28","b0b597c65628ca9e73913a07e81691f8229bae35"],"c7d763eff38c4e1702b60d626f9c8d39f9ad8af8":["1832cfbe1bb2105fcaa1462951732d4b65444941"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["c7d763eff38c4e1702b60d626f9c8d39f9ad8af8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}