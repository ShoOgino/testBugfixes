{"path":"src/test/org/apache/lucene/index/TestIndexReader#testFalseDirectoryAlreadyClosed().mjava","commits":[{"id":"6ab6e144b62a8a94bec1f1f7e78795c7a1377aba","date":1225469352,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testFalseDirectoryAlreadyClosed().mjava","pathOld":"/dev/null","sourceNew":"    public void testFalseDirectoryAlreadyClosed() throws Throwable {\n\n      String tempDir = System.getProperty(\"java.io.tmpdir\");\n      if (tempDir == null)\n        throw new RuntimeException(\"java.io.tmpdir undefined\");\n      File indexDir = new File(tempDir, \"lucenetestdiralreadyclosed\");\n\n      try {\n        FSDirectory dir = FSDirectory.getDirectory(indexDir);\n        IndexWriter w = new IndexWriter(indexDir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.setUseCompoundFile(false);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n        assertTrue(new File(indexDir, \"_0.fnm\").delete());\n\n        IndexReader r = null;\n        try {\n          r = IndexReader.open(indexDir);\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          fail(\"should not have hit AlreadyClosedException\");\n        } catch (FileNotFoundException ioe) {\n          // expected\n        }\n\n        // Make sure we really did close the dir inside IndexReader.open\n        dir.close();\n\n        try {\n          dir.fileExists(\"hi\");\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          // expected\n        }\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["64fce9fc6afb6b5650eb2bb2e733eb68bead08be"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"64fce9fc6afb6b5650eb2bb2e733eb68bead08be","date":1226656964,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testFalseDirectoryAlreadyClosed().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testFalseDirectoryAlreadyClosed().mjava","sourceNew":"    public void testFalseDirectoryAlreadyClosed() throws Throwable {\n\n      String tempDir = System.getProperty(\"java.io.tmpdir\");\n      if (tempDir == null)\n        throw new RuntimeException(\"java.io.tmpdir undefined\");\n      File indexDir = new File(tempDir, \"lucenetestdiralreadyclosed\");\n\n      try {\n        FSDirectory dir = FSDirectory.getDirectory(indexDir);\n        IndexWriter w = new IndexWriter(indexDir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.setUseCompoundFile(false);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n        assertTrue(new File(indexDir, \"_0.fnm\").delete());\n\n        try {\n          IndexReader.open(indexDir);\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          fail(\"should not have hit AlreadyClosedException\");\n        } catch (FileNotFoundException ioe) {\n          // expected\n        }\n\n        // Make sure we really did close the dir inside IndexReader.open\n        dir.close();\n\n        try {\n          dir.fileExists(\"hi\");\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          // expected\n        }\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testFalseDirectoryAlreadyClosed() throws Throwable {\n\n      String tempDir = System.getProperty(\"java.io.tmpdir\");\n      if (tempDir == null)\n        throw new RuntimeException(\"java.io.tmpdir undefined\");\n      File indexDir = new File(tempDir, \"lucenetestdiralreadyclosed\");\n\n      try {\n        FSDirectory dir = FSDirectory.getDirectory(indexDir);\n        IndexWriter w = new IndexWriter(indexDir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.setUseCompoundFile(false);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n        assertTrue(new File(indexDir, \"_0.fnm\").delete());\n\n        IndexReader r = null;\n        try {\n          r = IndexReader.open(indexDir);\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          fail(\"should not have hit AlreadyClosedException\");\n        } catch (FileNotFoundException ioe) {\n          // expected\n        }\n\n        // Make sure we really did close the dir inside IndexReader.open\n        dir.close();\n\n        try {\n          dir.fileExists(\"hi\");\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          // expected\n        }\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","bugFix":["6ab6e144b62a8a94bec1f1f7e78795c7a1377aba"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02","date":1243677645,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testFalseDirectoryAlreadyClosed().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testFalseDirectoryAlreadyClosed().mjava","sourceNew":"    public void testFalseDirectoryAlreadyClosed() throws Throwable {\n\n      String tempDir = System.getProperty(\"java.io.tmpdir\");\n      if (tempDir == null)\n        throw new RuntimeException(\"java.io.tmpdir undefined\");\n      File indexDir = new File(tempDir, \"lucenetestdiralreadyclosed\");\n\n      try {\n        FSDirectory dir = FSDirectory.open(indexDir);\n        IndexWriter w = new IndexWriter(indexDir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.setUseCompoundFile(false);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n        assertTrue(new File(indexDir, \"_0.fnm\").delete());\n\n        try {\n          IndexReader.open(indexDir);\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          fail(\"should not have hit AlreadyClosedException\");\n        } catch (FileNotFoundException ioe) {\n          // expected\n        }\n\n        // Make sure we really did close the dir inside IndexReader.open\n        dir.close();\n\n        try {\n          dir.fileExists(\"hi\");\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          // expected\n        }\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testFalseDirectoryAlreadyClosed() throws Throwable {\n\n      String tempDir = System.getProperty(\"java.io.tmpdir\");\n      if (tempDir == null)\n        throw new RuntimeException(\"java.io.tmpdir undefined\");\n      File indexDir = new File(tempDir, \"lucenetestdiralreadyclosed\");\n\n      try {\n        FSDirectory dir = FSDirectory.getDirectory(indexDir);\n        IndexWriter w = new IndexWriter(indexDir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.setUseCompoundFile(false);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n        assertTrue(new File(indexDir, \"_0.fnm\").delete());\n\n        try {\n          IndexReader.open(indexDir);\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          fail(\"should not have hit AlreadyClosedException\");\n        } catch (FileNotFoundException ioe) {\n          // expected\n        }\n\n        // Make sure we really did close the dir inside IndexReader.open\n        dir.close();\n\n        try {\n          dir.fileExists(\"hi\");\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          // expected\n        }\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":["73bc1851682757b5184768cbdf6de3f4f5a5f432"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"73bc1851682757b5184768cbdf6de3f4f5a5f432","date":1244636487,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testFalseDirectoryAlreadyClosed().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testFalseDirectoryAlreadyClosed().mjava","sourceNew":"    public void testFalseDirectoryAlreadyClosed() throws Throwable {\n\n      String tempDir = System.getProperty(\"java.io.tmpdir\");\n      if (tempDir == null)\n        throw new RuntimeException(\"java.io.tmpdir undefined\");\n      File indexDir = new File(tempDir, \"lucenetestdiralreadyclosed\");\n\n      try {\n        FSDirectory dir = FSDirectory.getDirectory(indexDir);\n        IndexWriter w = new IndexWriter(indexDir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.setUseCompoundFile(false);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n        assertTrue(new File(indexDir, \"_0.fnm\").delete());\n\n        try {\n          IndexReader.open(indexDir);\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          fail(\"should not have hit AlreadyClosedException\");\n        } catch (FileNotFoundException ioe) {\n          // expected\n        }\n\n        // Make sure we really did close the dir inside IndexReader.open\n        dir.close();\n\n        try {\n          dir.fileExists(\"hi\");\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          // expected\n        }\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testFalseDirectoryAlreadyClosed() throws Throwable {\n\n      String tempDir = System.getProperty(\"java.io.tmpdir\");\n      if (tempDir == null)\n        throw new RuntimeException(\"java.io.tmpdir undefined\");\n      File indexDir = new File(tempDir, \"lucenetestdiralreadyclosed\");\n\n      try {\n        FSDirectory dir = FSDirectory.open(indexDir);\n        IndexWriter w = new IndexWriter(indexDir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.setUseCompoundFile(false);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n        assertTrue(new File(indexDir, \"_0.fnm\").delete());\n\n        try {\n          IndexReader.open(indexDir);\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          fail(\"should not have hit AlreadyClosedException\");\n        } catch (FileNotFoundException ioe) {\n          // expected\n        }\n\n        // Make sure we really did close the dir inside IndexReader.open\n        dir.close();\n\n        try {\n          dir.fileExists(\"hi\");\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          // expected\n        }\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","bugFix":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f1405cedaef6ce1e1b563d7b35ee26c6518c81e","date":1244664919,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testFalseDirectoryAlreadyClosed().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testFalseDirectoryAlreadyClosed().mjava","sourceNew":"    public void testFalseDirectoryAlreadyClosed() throws Throwable {\n\n      File indexDir = _TestUtil.getTempDir(\"lucenetestdiralreadyclosed\");\n\n      try {\n        FSDirectory dir = FSDirectory.getDirectory(indexDir);\n        IndexWriter w = new IndexWriter(indexDir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.setUseCompoundFile(false);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n        assertTrue(new File(indexDir, \"_0.fnm\").delete());\n\n        try {\n          IndexReader.open(indexDir);\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          fail(\"should not have hit AlreadyClosedException\");\n        } catch (FileNotFoundException ioe) {\n          // expected\n        }\n\n        // Make sure we really did close the dir inside IndexReader.open\n        dir.close();\n\n        try {\n          dir.fileExists(\"hi\");\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          // expected\n        }\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","sourceOld":"    public void testFalseDirectoryAlreadyClosed() throws Throwable {\n\n      String tempDir = System.getProperty(\"java.io.tmpdir\");\n      if (tempDir == null)\n        throw new RuntimeException(\"java.io.tmpdir undefined\");\n      File indexDir = new File(tempDir, \"lucenetestdiralreadyclosed\");\n\n      try {\n        FSDirectory dir = FSDirectory.getDirectory(indexDir);\n        IndexWriter w = new IndexWriter(indexDir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.setUseCompoundFile(false);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n        assertTrue(new File(indexDir, \"_0.fnm\").delete());\n\n        try {\n          IndexReader.open(indexDir);\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          fail(\"should not have hit AlreadyClosedException\");\n        } catch (FileNotFoundException ioe) {\n          // expected\n        }\n\n        // Make sure we really did close the dir inside IndexReader.open\n        dir.close();\n\n        try {\n          dir.fileExists(\"hi\");\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          // expected\n        }\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testFalseDirectoryAlreadyClosed().mjava","sourceNew":null,"sourceOld":"    public void testFalseDirectoryAlreadyClosed() throws Throwable {\n\n      File indexDir = _TestUtil.getTempDir(\"lucenetestdiralreadyclosed\");\n\n      try {\n        FSDirectory dir = FSDirectory.getDirectory(indexDir);\n        IndexWriter w = new IndexWriter(indexDir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.setUseCompoundFile(false);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n        assertTrue(new File(indexDir, \"_0.fnm\").delete());\n\n        try {\n          IndexReader.open(indexDir);\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          fail(\"should not have hit AlreadyClosedException\");\n        } catch (FileNotFoundException ioe) {\n          // expected\n        }\n\n        // Make sure we really did close the dir inside IndexReader.open\n        dir.close();\n\n        try {\n          dir.fileExists(\"hi\");\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          // expected\n        }\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testFalseDirectoryAlreadyClosed().mjava","sourceNew":null,"sourceOld":"    public void testFalseDirectoryAlreadyClosed() throws Throwable {\n\n      File indexDir = _TestUtil.getTempDir(\"lucenetestdiralreadyclosed\");\n\n      try {\n        FSDirectory dir = FSDirectory.getDirectory(indexDir);\n        IndexWriter w = new IndexWriter(indexDir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n        w.setUseCompoundFile(false);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n        assertTrue(new File(indexDir, \"_0.fnm\").delete());\n\n        try {\n          IndexReader.open(indexDir);\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          fail(\"should not have hit AlreadyClosedException\");\n        } catch (FileNotFoundException ioe) {\n          // expected\n        }\n\n        // Make sure we really did close the dir inside IndexReader.open\n        dir.close();\n\n        try {\n          dir.fileExists(\"hi\");\n          fail(\"did not hit expected exception\");\n        } catch (AlreadyClosedException ace) {\n          // expected\n        }\n      } finally {\n        _TestUtil.rmDir(indexDir);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9f1405cedaef6ce1e1b563d7b35ee26c6518c81e":["73bc1851682757b5184768cbdf6de3f4f5a5f432"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["9f1405cedaef6ce1e1b563d7b35ee26c6518c81e"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["64fce9fc6afb6b5650eb2bb2e733eb68bead08be"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a046c0c310bc77931fc8441bd920053b607dd14":["9f1405cedaef6ce1e1b563d7b35ee26c6518c81e","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"64fce9fc6afb6b5650eb2bb2e733eb68bead08be":["6ab6e144b62a8a94bec1f1f7e78795c7a1377aba"],"6ab6e144b62a8a94bec1f1f7e78795c7a1377aba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"73bc1851682757b5184768cbdf6de3f4f5a5f432":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0a046c0c310bc77931fc8441bd920053b607dd14"]},"commit2Childs":{"9f1405cedaef6ce1e1b563d7b35ee26c6518c81e":["e8d1458a2543cbd30cbfe7929be4dcb5c5251659","0a046c0c310bc77931fc8441bd920053b607dd14"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["73bc1851682757b5184768cbdf6de3f4f5a5f432"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6ab6e144b62a8a94bec1f1f7e78795c7a1377aba"],"0a046c0c310bc77931fc8441bd920053b607dd14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"64fce9fc6afb6b5650eb2bb2e733eb68bead08be":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"6ab6e144b62a8a94bec1f1f7e78795c7a1377aba":["64fce9fc6afb6b5650eb2bb2e733eb68bead08be"],"73bc1851682757b5184768cbdf6de3f4f5a5f432":["9f1405cedaef6ce1e1b563d7b35ee26c6518c81e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}