{"path":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testUncommit().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testUncommit().mjava","pathOld":"/dev/null","sourceNew":"  public void testUncommit() throws Exception {\n    addSimpleDoc(\"A\");\n\n    // search - not committed - \"A\" should not be found.\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( h.getCore(), new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" should not be found.\", req\n            ,\"//*[@numFound='0']\"\n            );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testUncommit().mjava","sourceNew":null,"sourceOld":"  public void testUncommit() throws Exception {\n    addSimpleDoc(\"A\");\n\n    // search - not committed - \"A\" should not be found.\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( h.getCore(), new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" should not be found.\", req\n            ,\"//*[@numFound='0']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testUncommit().mjava","pathOld":"src/test/org/apache/solr/update/DirectUpdateHandlerTest#testUncommit().mjava","sourceNew":"  public void testUncommit() throws Exception {\n    addSimpleDoc(\"A\");\n\n    // search - not committed - \"A\" should not be found.\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( h.getCore(), new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" should not be found.\", req\n            ,\"//*[@numFound='0']\"\n            );\n  }\n\n","sourceOld":"  public void testUncommit() throws Exception {\n    addSimpleDoc(\"A\");\n\n    // search - not committed - \"A\" should not be found.\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( h.getCore(), new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" should not be found.\", req\n            ,\"//*[@numFound='0']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testUncommit().mjava","pathOld":"/dev/null","sourceNew":"  public void testUncommit() throws Exception {\n    addSimpleDoc(\"A\");\n\n    // search - not committed - \"A\" should not be found.\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( h.getCore(), new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" should not be found.\", req\n            ,\"//*[@numFound='0']\"\n            );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd0a7f04b5a49a00149b867e7d51f632fb8a4664","date":1279497978,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testUncommit().mjava","pathOld":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testUncommit().mjava","sourceNew":"  @Test\n  public void testUncommit() throws Exception {\n    addSimpleDoc(\"A\");\n\n    // search - not committed - \"A\" should not be found.\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( h.getCore(), new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" should not be found.\", req\n            ,\"//*[@numFound='0']\"\n            );\n  }\n\n","sourceOld":"  public void testUncommit() throws Exception {\n    addSimpleDoc(\"A\");\n\n    // search - not committed - \"A\" should not be found.\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( h.getCore(), new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" should not be found.\", req\n            ,\"//*[@numFound='0']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testUncommit().mjava","pathOld":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testUncommit().mjava","sourceNew":"  @Test\n  public void testUncommit() throws Exception {\n    addSimpleDoc(\"A\");\n\n    // search - not committed - \"A\" should not be found.\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( h.getCore(), new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" should not be found.\", req\n            ,\"//*[@numFound='0']\"\n            );\n  }\n\n","sourceOld":"  public void testUncommit() throws Exception {\n    addSimpleDoc(\"A\");\n\n    // search - not committed - \"A\" should not be found.\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( h.getCore(), new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" should not be found.\", req\n            ,\"//*[@numFound='0']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa","date":1293733647,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testUncommit().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testUncommit() throws Exception {\n    addSimpleDoc(\"A\");\n\n    // search - not committed - \"A\" should not be found.\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( h.getCore(), new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" should not be found.\", req\n            ,\"//*[@numFound='0']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testUncommit().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testUncommit() throws Exception {\n    addSimpleDoc(\"A\");\n\n    // search - not committed - \"A\" should not be found.\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( h.getCore(), new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" should not be found.\", req\n            ,\"//*[@numFound='0']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testUncommit().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testUncommit() throws Exception {\n    addSimpleDoc(\"A\");\n\n    // search - not committed - \"A\" should not be found.\n    Map<String,String> args = new HashMap<String, String>();\n    args.put( CommonParams.Q, \"id:A\" );\n    args.put( \"indent\", \"true\" );\n    SolrQueryRequest req = new LocalSolrQueryRequest( h.getCore(), new MapSolrParams( args) );\n    assertQ(\"\\\"A\\\" should not be found.\", req\n            ,\"//*[@numFound='0']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"70ad682703b8585f5d0a637efec044d57ec05efb":["bd0a7f04b5a49a00149b867e7d51f632fb8a4664","5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["5f4e87790277826a2aea119328600dfb07761f32","5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5f4e87790277826a2aea119328600dfb07761f32":["1da8d55113b689b06716246649de6f62430f15c0","bd0a7f04b5a49a00149b867e7d51f632fb8a4664"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa":["bd0a7f04b5a49a00149b867e7d51f632fb8a4664"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"bd0a7f04b5a49a00149b867e7d51f632fb8a4664":["1da8d55113b689b06716246649de6f62430f15c0"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["5f4e87790277826a2aea119328600dfb07761f32","bd0a7f04b5a49a00149b867e7d51f632fb8a4664"],"70ad682703b8585f5d0a637efec044d57ec05efb":[],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":[],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"5f4e87790277826a2aea119328600dfb07761f32":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bd0a7f04b5a49a00149b867e7d51f632fb8a4664":["70ad682703b8585f5d0a637efec044d57ec05efb","5f4e87790277826a2aea119328600dfb07761f32","5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}