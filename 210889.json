{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#getValueOperand(StreamExpression,int).mjava","commits":[{"id":"f00f1c5fad501b66705121feb623f8cfbb6712f9","date":1431347838,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#getValueOperand(StreamExpression,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Given an expression, will return the value parameter at the given index, or null if doesn't exist */\n  public String getValueOperand(StreamExpression expression, int parameterIndex){\n    StreamExpressionParameter parameter = getOperand(expression, parameterIndex);\n    if(null != parameter){ \n      if(parameter instanceof StreamExpressionValue){\n        return ((StreamExpressionValue)parameter).getValue();\n      }\n    }\n    \n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1af73925f08e2589b3b927ed119846dec892184","date":1483667215,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#getValueOperand(StreamExpression,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#getValueOperand(StreamExpression,int).mjava","sourceNew":"  /** Given an expression, will return the value parameter at the given index, or null if doesn't exist */\n  public String getValueOperand(StreamExpression expression, int parameterIndex){\n    StreamExpressionParameter parameter = getOperand(expression, parameterIndex);\n    if(null != parameter){ \n      if(parameter instanceof StreamExpressionValue){\n        return ((StreamExpressionValue)parameter).getValue();\n      } else if(parameter instanceof StreamExpression) {\n        return parameter.toString();\n      }\n    }\n    \n    return null;\n  }\n\n","sourceOld":"  /** Given an expression, will return the value parameter at the given index, or null if doesn't exist */\n  public String getValueOperand(StreamExpression expression, int parameterIndex){\n    StreamExpressionParameter parameter = getOperand(expression, parameterIndex);\n    if(null != parameter){ \n      if(parameter instanceof StreamExpressionValue){\n        return ((StreamExpressionValue)parameter).getValue();\n      }\n    }\n    \n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"491c9672ec42582fe43960452dbd37f1c80fe0f0","date":1483739222,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#getValueOperand(StreamExpression,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#getValueOperand(StreamExpression,int).mjava","sourceNew":"  /** Given an expression, will return the value parameter at the given index, or null if doesn't exist */\n  public String getValueOperand(StreamExpression expression, int parameterIndex){\n    StreamExpressionParameter parameter = getOperand(expression, parameterIndex);\n    if(null != parameter){ \n      if(parameter instanceof StreamExpressionValue){\n        return ((StreamExpressionValue)parameter).getValue();\n      } else if(parameter instanceof StreamExpression) {\n        return parameter.toString();\n      }\n    }\n    \n    return null;\n  }\n\n","sourceOld":"  /** Given an expression, will return the value parameter at the given index, or null if doesn't exist */\n  public String getValueOperand(StreamExpression expression, int parameterIndex){\n    StreamExpressionParameter parameter = getOperand(expression, parameterIndex);\n    if(null != parameter){ \n      if(parameter instanceof StreamExpressionValue){\n        return ((StreamExpressionValue)parameter).getValue();\n      }\n    }\n    \n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"804a8d5358fe7b7563b85ee7838714d720b89272","date":1591624987,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#getValueOperand(StreamExpression,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#getValueOperand(StreamExpression,int).mjava","sourceNew":"  /** Given an expression, will return the value parameter at the given index, or null if doesn't exist */\n  public String getValueOperand(StreamExpression expression, int parameterIndex) {\n    StreamExpressionParameter parameter = getOperand(expression, parameterIndex);\n    if (null != parameter) {\n      if (parameter instanceof StreamExpressionValue) {\n        return ((StreamExpressionValue)parameter).getValue();\n      } else if (parameter instanceof StreamExpression) {\n        return parameter.toString();\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  /** Given an expression, will return the value parameter at the given index, or null if doesn't exist */\n  public String getValueOperand(StreamExpression expression, int parameterIndex){\n    StreamExpressionParameter parameter = getOperand(expression, parameterIndex);\n    if(null != parameter){ \n      if(parameter instanceof StreamExpressionValue){\n        return ((StreamExpressionValue)parameter).getValue();\n      } else if(parameter instanceof StreamExpression) {\n        return parameter.toString();\n      }\n    }\n    \n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f00f1c5fad501b66705121feb623f8cfbb6712f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c1af73925f08e2589b3b927ed119846dec892184":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"804a8d5358fe7b7563b85ee7838714d720b89272":["c1af73925f08e2589b3b927ed119846dec892184"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["804a8d5358fe7b7563b85ee7838714d720b89272"],"491c9672ec42582fe43960452dbd37f1c80fe0f0":["f00f1c5fad501b66705121feb623f8cfbb6712f9","c1af73925f08e2589b3b927ed119846dec892184"]},"commit2Childs":{"f00f1c5fad501b66705121feb623f8cfbb6712f9":["c1af73925f08e2589b3b927ed119846dec892184","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"c1af73925f08e2589b3b927ed119846dec892184":["804a8d5358fe7b7563b85ee7838714d720b89272","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"804a8d5358fe7b7563b85ee7838714d720b89272":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"491c9672ec42582fe43960452dbd37f1c80fe0f0":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","491c9672ec42582fe43960452dbd37f1c80fe0f0"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}