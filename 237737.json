{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FuzzySuggester#convertAutomaton(Automaton).mjava","commits":[{"id":"2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6","date":1374158194,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FuzzySuggester#convertAutomaton(Automaton).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected Automaton convertAutomaton(Automaton a) {\n    if (unicodeAware) {\n      Automaton utf8automaton = new UTF32ToUTF8().convert(a);\n      BasicOperations.determinize(utf8automaton);\n      return utf8automaton;\n    } else {\n      return a;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FuzzySuggester#convertAutomaton(Automaton).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected Automaton convertAutomaton(Automaton a) {\n    if (unicodeAware) {\n      Automaton utf8automaton = new UTF32ToUTF8().convert(a);\n      BasicOperations.determinize(utf8automaton);\n      return utf8automaton;\n    } else {\n      return a;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75ac8571c2d82c574e446c3729251b994c69a55c","date":1402523781,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FuzzySuggester#convertAutomaton(LightAutomaton).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FuzzySuggester#convertAutomaton(Automaton).mjava","sourceNew":"  @Override\n  protected LightAutomaton convertAutomaton(LightAutomaton a) {\n    if (unicodeAware) {\n      LightAutomaton utf8automaton = new UTF32ToUTF8Light().convert(a);\n      utf8automaton = BasicOperations.determinize(utf8automaton);\n      return utf8automaton;\n    } else {\n      return a;\n    }\n  }\n\n","sourceOld":"  @Override\n  protected Automaton convertAutomaton(Automaton a) {\n    if (unicodeAware) {\n      Automaton utf8automaton = new UTF32ToUTF8().convert(a);\n      BasicOperations.determinize(utf8automaton);\n      return utf8automaton;\n    } else {\n      return a;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FuzzySuggester#convertAutomaton(Automaton).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FuzzySuggester#convertAutomaton(LightAutomaton).mjava","sourceNew":"  @Override\n  protected Automaton convertAutomaton(Automaton a) {\n    if (unicodeAware) {\n      Automaton utf8automaton = new UTF32ToUTF8().convert(a);\n      utf8automaton = Operations.determinize(utf8automaton);\n      return utf8automaton;\n    } else {\n      return a;\n    }\n  }\n\n","sourceOld":"  @Override\n  protected LightAutomaton convertAutomaton(LightAutomaton a) {\n    if (unicodeAware) {\n      LightAutomaton utf8automaton = new UTF32ToUTF8Light().convert(a);\n      utf8automaton = BasicOperations.determinize(utf8automaton);\n      return utf8automaton;\n    } else {\n      return a;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c84485629d80d203608e8975a1139de9933cc38","date":1403166128,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FuzzySuggester#convertAutomaton(Automaton).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FuzzySuggester#convertAutomaton(Automaton).mjava","sourceNew":"  @Override\n  protected Automaton convertAutomaton(Automaton a) {\n    if (unicodeAware) {\n      Automaton utf8automaton = new UTF32ToUTF8().convert(a);\n      utf8automaton = Operations.determinize(utf8automaton);\n      return utf8automaton;\n    } else {\n      return a;\n    }\n  }\n\n","sourceOld":"  @Override\n  protected Automaton convertAutomaton(Automaton a) {\n    if (unicodeAware) {\n      Automaton utf8automaton = new UTF32ToUTF8().convert(a);\n      BasicOperations.determinize(utf8automaton);\n      return utf8automaton;\n    } else {\n      return a;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b316f82baae88f5e279893a9cb7eee51fd8902f","date":1415131390,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FuzzySuggester#convertAutomaton(Automaton).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/FuzzySuggester#convertAutomaton(Automaton).mjava","sourceNew":"  @Override\n  protected Automaton convertAutomaton(Automaton a) {\n    if (unicodeAware) {\n      Automaton utf8automaton = new UTF32ToUTF8().convert(a);\n      utf8automaton = Operations.determinize(utf8automaton, DEFAULT_MAX_DETERMINIZED_STATES);\n      return utf8automaton;\n    } else {\n      return a;\n    }\n  }\n\n","sourceOld":"  @Override\n  protected Automaton convertAutomaton(Automaton a) {\n    if (unicodeAware) {\n      Automaton utf8automaton = new UTF32ToUTF8().convert(a);\n      utf8automaton = Operations.determinize(utf8automaton);\n      return utf8automaton;\n    } else {\n      return a;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"75ac8571c2d82c574e446c3729251b994c69a55c":["2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["75ac8571c2d82c574e446c3729251b994c69a55c"],"2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8b316f82baae88f5e279893a9cb7eee51fd8902f":["5c84485629d80d203608e8975a1139de9933cc38"],"5c84485629d80d203608e8975a1139de9933cc38":["2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6","4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8b316f82baae88f5e279893a9cb7eee51fd8902f"]},"commit2Childs":{"75ac8571c2d82c574e446c3729251b994c69a55c":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["5c84485629d80d203608e8975a1139de9933cc38"],"2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6":["75ac8571c2d82c574e446c3729251b994c69a55c","5c84485629d80d203608e8975a1139de9933cc38"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"8b316f82baae88f5e279893a9cb7eee51fd8902f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5c84485629d80d203608e8975a1139de9933cc38":["8b316f82baae88f5e279893a9cb7eee51fd8902f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}