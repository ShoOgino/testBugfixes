{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseFacetOrStat(String,String,Object).mjava","commits":[{"id":"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","date":1426480823,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseFacetOrStat(String,String,Object).mjava","pathOld":"/dev/null","sourceNew":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    if (\"field\".equals(type) || \"terms\".equals(type)) {\n      return parseFieldFacet(key, args);\n    } else if (\"query\".equals(type)) {\n      return parseQueryFacet(key, args);\n    } else if (\"range\".equals(type)) {\n     return parseRangeFacet(key, args);\n    }\n\n    return parseStat(key, type, args);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseFacetOrStat(String,String,Object).mjava","pathOld":"/dev/null","sourceNew":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    if (\"field\".equals(type) || \"terms\".equals(type)) {\n      return parseFieldFacet(key, args);\n    } else if (\"query\".equals(type)) {\n      return parseQueryFacet(key, args);\n    } else if (\"range\".equals(type)) {\n     return parseRangeFacet(key, args);\n    }\n\n    return parseStat(key, type, args);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e47fba8dd946896c408eb448f6199f5a9f0da2d","date":1434234768,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseFacetOrStat(String,String,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseFacetOrStat(String,String,Object).mjava","sourceNew":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    if (\"field\".equals(type) || \"terms\".equals(type)) {\n      return parseFieldFacet(key, args);\n    } else if (\"query\".equals(type)) {\n      return parseQueryFacet(key, args);\n    } else if (\"range\".equals(type)) {\n      return parseRangeFacet(key, args);\n    }\n\n    return parseStat(key, type, args);\n  }\n\n","sourceOld":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    if (\"field\".equals(type) || \"terms\".equals(type)) {\n      return parseFieldFacet(key, args);\n    } else if (\"query\".equals(type)) {\n      return parseQueryFacet(key, args);\n    } else if (\"range\".equals(type)) {\n     return parseRangeFacet(key, args);\n    }\n\n    return parseStat(key, type, args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5fee3973eb91c4b44e67407077f9279ab8cf8629","date":1453821560,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseFacetOrStat(String,String,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseFacetOrStat(String,String,Object).mjava","sourceNew":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    if (\"field\".equals(type) || \"terms\".equals(type)) {\n      return parseFieldFacet(key, args);\n    } else if (\"query\".equals(type)) {\n      return parseQueryFacet(key, args);\n    } else if (\"range\".equals(type)) {\n      return parseRangeFacet(key, args);\n    }\n\n    AggValueSource stat = parseStat(key, type, args);\n    if (stat == null) {\n      throw err(\"Unknown facet or stat. key=\" + key + \" type=\" + type + \" args=\" + args);\n    }\n    return stat;\n  }\n\n","sourceOld":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    if (\"field\".equals(type) || \"terms\".equals(type)) {\n      return parseFieldFacet(key, args);\n    } else if (\"query\".equals(type)) {\n      return parseQueryFacet(key, args);\n    } else if (\"range\".equals(type)) {\n      return parseRangeFacet(key, args);\n    }\n\n    return parseStat(key, type, args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac88193d9fe80e165a43bb0555c43afa83da8330","date":1453823827,"type":3,"author":"jbernste","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseFacetOrStat(String,String,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseFacetOrStat(String,String,Object).mjava","sourceNew":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    if (\"field\".equals(type) || \"terms\".equals(type)) {\n      return parseFieldFacet(key, args);\n    } else if (\"query\".equals(type)) {\n      return parseQueryFacet(key, args);\n    } else if (\"range\".equals(type)) {\n      return parseRangeFacet(key, args);\n    }\n\n    AggValueSource stat = parseStat(key, type, args);\n    if (stat == null) {\n      throw err(\"Unknown facet or stat. key=\" + key + \" type=\" + type + \" args=\" + args);\n    }\n    return stat;\n  }\n\n","sourceOld":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    if (\"field\".equals(type) || \"terms\".equals(type)) {\n      return parseFieldFacet(key, args);\n    } else if (\"query\".equals(type)) {\n      return parseQueryFacet(key, args);\n    } else if (\"range\".equals(type)) {\n      return parseRangeFacet(key, args);\n    }\n\n    return parseStat(key, type, args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseFacetOrStat(String,String,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseFacetOrStat(String,String,Object).mjava","sourceNew":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    if (\"field\".equals(type) || \"terms\".equals(type)) {\n      return parseFieldFacet(key, args);\n    } else if (\"query\".equals(type)) {\n      return parseQueryFacet(key, args);\n    } else if (\"range\".equals(type)) {\n      return parseRangeFacet(key, args);\n    }\n\n    AggValueSource stat = parseStat(key, type, args);\n    if (stat == null) {\n      throw err(\"Unknown facet or stat. key=\" + key + \" type=\" + type + \" args=\" + args);\n    }\n    return stat;\n  }\n\n","sourceOld":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    if (\"field\".equals(type) || \"terms\".equals(type)) {\n      return parseFieldFacet(key, args);\n    } else if (\"query\".equals(type)) {\n      return parseQueryFacet(key, args);\n    } else if (\"range\".equals(type)) {\n      return parseRangeFacet(key, args);\n    }\n\n    return parseStat(key, type, args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ab027bdfe663227636ccbeda13ae82add302939","date":1529980633,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseFacetOrStat(String,String,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseFacetOrStat(String,String,Object).mjava","sourceNew":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    switch (type) {\n      case \"field\":\n      case \"terms\":\n        return new FacetFieldParser(this, key).parse(args);\n      case \"query\":\n        return new FacetQueryParser(this, key).parse(args);\n      case \"range\":\n        return new FacetRangeParser(this, key).parse(args);\n      case \"heatmap\":\n        return new FacetHeatmap.Parser(this, key).parse(args);\n    }\n\n    AggValueSource stat = parseStat(key, type, args);\n    if (stat == null) {\n      throw err(\"Unknown facet or stat. key=\" + key + \" type=\" + type + \" args=\" + args);\n    }\n    return stat;\n  }\n\n","sourceOld":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    if (\"field\".equals(type) || \"terms\".equals(type)) {\n      return parseFieldFacet(key, args);\n    } else if (\"query\".equals(type)) {\n      return parseQueryFacet(key, args);\n    } else if (\"range\".equals(type)) {\n      return parseRangeFacet(key, args);\n    }\n\n    AggValueSource stat = parseStat(key, type, args);\n    if (stat == null) {\n      throw err(\"Unknown facet or stat. key=\" + key + \" type=\" + type + \" args=\" + args);\n    }\n    return stat;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseFacetOrStat(String,String,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseFacetOrStat(String,String,Object).mjava","sourceNew":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    switch (type) {\n      case \"field\":\n      case \"terms\":\n        return new FacetFieldParser(this, key).parse(args);\n      case \"query\":\n        return new FacetQueryParser(this, key).parse(args);\n      case \"range\":\n        return new FacetRangeParser(this, key).parse(args);\n      case \"heatmap\":\n        return new FacetHeatmap.Parser(this, key).parse(args);\n    }\n\n    AggValueSource stat = parseStat(key, type, args);\n    if (stat == null) {\n      throw err(\"Unknown facet or stat. key=\" + key + \" type=\" + type + \" args=\" + args);\n    }\n    return stat;\n  }\n\n","sourceOld":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    if (\"field\".equals(type) || \"terms\".equals(type)) {\n      return parseFieldFacet(key, args);\n    } else if (\"query\".equals(type)) {\n      return parseQueryFacet(key, args);\n    } else if (\"range\".equals(type)) {\n      return parseRangeFacet(key, args);\n    }\n\n    AggValueSource stat = parseStat(key, type, args);\n    if (stat == null) {\n      throw err(\"Unknown facet or stat. key=\" + key + \" type=\" + type + \" args=\" + args);\n    }\n    return stat;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseFacetOrStat(String,String,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseFacetOrStat(String,String,Object).mjava","sourceNew":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    switch (type) {\n      case \"field\":\n      case \"terms\":\n        return new FacetFieldParser(this, key).parse(args);\n      case \"query\":\n        return new FacetQueryParser(this, key).parse(args);\n      case \"range\":\n        return new FacetRangeParser(this, key).parse(args);\n      case \"heatmap\":\n        return new FacetHeatmap.Parser(this, key).parse(args);\n    }\n\n    AggValueSource stat = parseStat(key, type, args);\n    if (stat == null) {\n      throw err(\"Unknown facet or stat. key=\" + key + \" type=\" + type + \" args=\" + args);\n    }\n    return stat;\n  }\n\n","sourceOld":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    if (\"field\".equals(type) || \"terms\".equals(type)) {\n      return parseFieldFacet(key, args);\n    } else if (\"query\".equals(type)) {\n      return parseQueryFacet(key, args);\n    } else if (\"range\".equals(type)) {\n      return parseRangeFacet(key, args);\n    }\n\n    AggValueSource stat = parseStat(key, type, args);\n    if (stat == null) {\n      throw err(\"Unknown facet or stat. key=\" + key + \" type=\" + type + \" args=\" + args);\n    }\n    return stat;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3baf591292785743bfb1fdd65256a3fe5feab71","date":1532454229,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseFacetOrStat(String,String,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseFacetOrStat(String,String,Object).mjava","sourceNew":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    switch (type) {\n      case \"field\":\n      case \"terms\":\n        return new FacetFieldParser(this, key).parse(args);\n      case \"query\":\n        return new FacetQueryParser(this, key).parse(args);\n      case \"range\":\n        return new FacetRangeParser(this, key).parse(args);\n      case \"heatmap\":\n        return new FacetHeatmap.Parser(this, key).parse(args);\n      case \"func\":\n        return parseStat(key, args);\n    }\n\n    throw err(\"Unknown facet or stat. key=\" + key + \" type=\" + type + \" args=\" + args);\n  }\n\n","sourceOld":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    switch (type) {\n      case \"field\":\n      case \"terms\":\n        return new FacetFieldParser(this, key).parse(args);\n      case \"query\":\n        return new FacetQueryParser(this, key).parse(args);\n      case \"range\":\n        return new FacetRangeParser(this, key).parse(args);\n      case \"heatmap\":\n        return new FacetHeatmap.Parser(this, key).parse(args);\n    }\n\n    AggValueSource stat = parseStat(key, type, args);\n    if (stat == null) {\n      throw err(\"Unknown facet or stat. key=\" + key + \" type=\" + type + \" args=\" + args);\n    }\n    return stat;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"248f6ecc900c3a5633fd5ca6f564ea8b717720da","date":1588863846,"type":4,"author":"Mike Drob","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetParser[FacetRequest]#parseFacetOrStat(String,String,Object).mjava","sourceNew":null,"sourceOld":"  public Object parseFacetOrStat(String key, String type, Object args) throws SyntaxError {\n    // TODO: a place to register all these facet types?\n\n    switch (type) {\n      case \"field\":\n      case \"terms\":\n        return new FacetFieldParser(this, key).parse(args);\n      case \"query\":\n        return new FacetQueryParser(this, key).parse(args);\n      case \"range\":\n        return new FacetRangeParser(this, key).parse(args);\n      case \"heatmap\":\n        return new FacetHeatmap.Parser(this, key).parse(args);\n      case \"func\":\n        return parseStat(key, args);\n    }\n\n    throw err(\"Unknown facet or stat. key=\" + key + \" type=\" + type + \" args=\" + args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2ab027bdfe663227636ccbeda13ae82add302939":["ac88193d9fe80e165a43bb0555c43afa83da8330"],"ac88193d9fe80e165a43bb0555c43afa83da8330":["9e47fba8dd946896c408eb448f6199f5a9f0da2d","5fee3973eb91c4b44e67407077f9279ab8cf8629"],"9e47fba8dd946896c408eb448f6199f5a9f0da2d":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["9e47fba8dd946896c408eb448f6199f5a9f0da2d","ac88193d9fe80e165a43bb0555c43afa83da8330"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["ac88193d9fe80e165a43bb0555c43afa83da8330","2ab027bdfe663227636ccbeda13ae82add302939"],"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["d3baf591292785743bfb1fdd65256a3fe5feab71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d3baf591292785743bfb1fdd65256a3fe5feab71":["2ab027bdfe663227636ccbeda13ae82add302939"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"],"5fee3973eb91c4b44e67407077f9279ab8cf8629":["9e47fba8dd946896c408eb448f6199f5a9f0da2d"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["ac88193d9fe80e165a43bb0555c43afa83da8330","2ab027bdfe663227636ccbeda13ae82add302939"]},"commit2Childs":{"2ab027bdfe663227636ccbeda13ae82add302939":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","d3baf591292785743bfb1fdd65256a3fe5feab71","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"ac88193d9fe80e165a43bb0555c43afa83da8330":["2ab027bdfe663227636ccbeda13ae82add302939","1e6acbaae7af722f17204ceccf0f7db5753eccf3","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"9e47fba8dd946896c408eb448f6199f5a9f0da2d":["ac88193d9fe80e165a43bb0555c43afa83da8330","1e6acbaae7af722f17204ceccf0f7db5753eccf3","5fee3973eb91c4b44e67407077f9279ab8cf8629"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["9e47fba8dd946896c408eb448f6199f5a9f0da2d","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"d3baf591292785743bfb1fdd65256a3fe5feab71":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"],"5fee3973eb91c4b44e67407077f9279ab8cf8629":["ac88193d9fe80e165a43bb0555c43afa83da8330"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}