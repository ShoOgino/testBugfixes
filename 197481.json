{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/AddFacetedDocTask#setup().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/AddFacetedDocTask#setup().mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/AddFacetedDocTask#setup().mjava","sourceNew":"  @Override\n  public void setup() throws Exception {\n    super.setup();\n    // create the facets even if they should not be added - allows to measure the effect of just adding facets \n    facets = getRunData().getFacetSource().getNextFacets(facets);  \n    withFacets = getRunData().getConfig().get(\"with.facets\", true);\n    if (withFacets) {\n      categoryDocBuilder = new CategoryDocumentBuilder(getRunData().getTaxonomyWriter());\n      categoryDocBuilder.setCategories(facets);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setup() throws Exception {\n    super.setup();\n    // create the facets even if they should not be added - allows to measure the effect of just adding facets \n    facets = getRunData().getFacetSource().getNextFacets(facets);  \n    withFacets = getRunData().getConfig().get(\"with.facets\", true);\n    if (withFacets) {\n      categoryDocBuilder = new CategoryDocumentBuilder(getRunData().getTaxonomyWriter());\n      categoryDocBuilder.setCategories(facets);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a1037d9031f9702ee6912f8751ef1d5320da6d9","date":1357217787,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/AddFacetedDocTask#setup().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/AddFacetedDocTask#setup().mjava","sourceNew":"  @Override\n  public void setup() throws Exception {\n    super.setup();\n    // create the facets even if they should not be added - allows to measure the effect of just adding facets \n    facets = getRunData().getFacetSource().getNextFacets(facets);  \n    withFacets = getRunData().getConfig().get(\"with.facets\", true);\n    if (withFacets) {\n      facetFields = new FacetFields(getRunData().getTaxonomyWriter());\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setup() throws Exception {\n    super.setup();\n    // create the facets even if they should not be added - allows to measure the effect of just adding facets \n    facets = getRunData().getFacetSource().getNextFacets(facets);  \n    withFacets = getRunData().getConfig().get(\"with.facets\", true);\n    if (withFacets) {\n      categoryDocBuilder = new CategoryDocumentBuilder(getRunData().getTaxonomyWriter());\n      categoryDocBuilder.setCategories(facets);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/AddFacetedDocTask#setup().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/AddFacetedDocTask#setup().mjava","sourceNew":"  @Override\n  public void setup() throws Exception {\n    super.setup();\n    // create the facets even if they should not be added - allows to measure the effect of just adding facets \n    facets = getRunData().getFacetSource().getNextFacets(facets);  \n    withFacets = getRunData().getConfig().get(\"with.facets\", true);\n    if (withFacets) {\n      facetFields = new FacetFields(getRunData().getTaxonomyWriter());\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setup() throws Exception {\n    super.setup();\n    // create the facets even if they should not be added - allows to measure the effect of just adding facets \n    facets = getRunData().getFacetSource().getNextFacets(facets);  \n    withFacets = getRunData().getConfig().get(\"with.facets\", true);\n    if (withFacets) {\n      categoryDocBuilder = new CategoryDocumentBuilder(getRunData().getTaxonomyWriter());\n      categoryDocBuilder.setCategories(facets);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53442c6c7d342feead7bcbabb097abcfeb06b575","date":1358751520,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/AddFacetedDocTask#setup().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/AddFacetedDocTask#setup().mjava","sourceNew":"  @Override\n  public void setup() throws Exception {\n    super.setup();\n    if (facetFields == null) {\n      boolean withFacets = getRunData().getConfig().get(\"with.facets\", true);\n      if (withFacets) {\n        FacetSource facetsSource = getRunData().getFacetSource();\n        facetFields = withFacets ? new FacetFields(getRunData().getTaxonomyWriter()) : null;\n        facetsSource.getNextFacets(facets);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setup() throws Exception {\n    super.setup();\n    // create the facets even if they should not be added - allows to measure the effect of just adding facets \n    facets = getRunData().getFacetSource().getNextFacets(facets);  \n    withFacets = getRunData().getConfig().get(\"with.facets\", true);\n    if (withFacets) {\n      facetFields = new FacetFields(getRunData().getTaxonomyWriter());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/AddFacetedDocTask#setup().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/AddFacetedDocTask#setup().mjava","sourceNew":"  @Override\n  public void setup() throws Exception {\n    super.setup();\n    if (facetFields == null) {\n      boolean withFacets = getRunData().getConfig().get(\"with.facets\", true);\n      if (withFacets) {\n        FacetSource facetsSource = getRunData().getFacetSource();\n        facetFields = withFacets ? new FacetFields(getRunData().getTaxonomyWriter()) : null;\n        facetsSource.getNextFacets(facets);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setup() throws Exception {\n    super.setup();\n    // create the facets even if they should not be added - allows to measure the effect of just adding facets \n    facets = getRunData().getFacetSource().getNextFacets(facets);  \n    withFacets = getRunData().getConfig().get(\"with.facets\", true);\n    if (withFacets) {\n      facetFields = new FacetFields(getRunData().getTaxonomyWriter());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/AddFacetedDocTask#setup().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/AddFacetedDocTask#setup().mjava","sourceNew":"  @Override\n  public void setup() throws Exception {\n    super.setup();\n    if (config == null) {\n      boolean withFacets = getRunData().getConfig().get(\"with.facets\", true);\n      if (withFacets) {\n        // nocommit is this called once?  are we adding same\n        // facets over and over!?\n        FacetSource facetsSource = getRunData().getFacetSource();\n        config = new FacetsConfig(getRunData().getTaxonomyWriter());\n        facetsSource.getNextFacets(facets);\n        facetsSource.configure(config);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setup() throws Exception {\n    super.setup();\n    if (facetFields == null) {\n      boolean withFacets = getRunData().getConfig().get(\"with.facets\", true);\n      if (withFacets) {\n        FacetSource facetsSource = getRunData().getFacetSource();\n        facetFields = withFacets ? new FacetFields(getRunData().getTaxonomyWriter()) : null;\n        facetsSource.getNextFacets(facets);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd83550e4b0bdd36e7d9dca9273264100782440b","date":1385761753,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/AddFacetedDocTask#setup().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/AddFacetedDocTask#setup().mjava","sourceNew":"  @Override\n  public void setup() throws Exception {\n    super.setup();\n    if (config == null) {\n      boolean withFacets = getRunData().getConfig().get(\"with.facets\", true);\n      if (withFacets) {\n        // nocommit is this called once?  are we adding same\n        // facets over and over!?\n        FacetSource facetsSource = getRunData().getFacetSource();\n        config = new FacetsConfig();\n        facetsSource.getNextFacets(facets);\n        facetsSource.configure(config);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setup() throws Exception {\n    super.setup();\n    if (config == null) {\n      boolean withFacets = getRunData().getConfig().get(\"with.facets\", true);\n      if (withFacets) {\n        // nocommit is this called once?  are we adding same\n        // facets over and over!?\n        FacetSource facetsSource = getRunData().getFacetSource();\n        config = new FacetsConfig(getRunData().getTaxonomyWriter());\n        facetsSource.getNextFacets(facets);\n        facetsSource.configure(config);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8","date":1387415264,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/AddFacetedDocTask#setup().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/AddFacetedDocTask#setup().mjava","sourceNew":"  @Override\n  public void setup() throws Exception {\n    super.setup();\n    if (config == null) {\n      boolean withFacets = getRunData().getConfig().get(\"with.facets\", true);\n      if (withFacets) {\n        FacetSource facetsSource = getRunData().getFacetSource();\n        config = new FacetsConfig();\n        facetsSource.configure(config);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setup() throws Exception {\n    super.setup();\n    if (config == null) {\n      boolean withFacets = getRunData().getConfig().get(\"with.facets\", true);\n      if (withFacets) {\n        // nocommit is this called once?  are we adding same\n        // facets over and over!?\n        FacetSource facetsSource = getRunData().getFacetSource();\n        config = new FacetsConfig();\n        facetsSource.getNextFacets(facets);\n        facetsSource.configure(config);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/AddFacetedDocTask#setup().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/AddFacetedDocTask#setup().mjava","sourceNew":"  @Override\n  public void setup() throws Exception {\n    super.setup();\n    if (config == null) {\n      boolean withFacets = getRunData().getConfig().get(\"with.facets\", true);\n      if (withFacets) {\n        FacetSource facetsSource = getRunData().getFacetSource();\n        config = new FacetsConfig();\n        facetsSource.configure(config);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setup() throws Exception {\n    super.setup();\n    if (facetFields == null) {\n      boolean withFacets = getRunData().getConfig().get(\"with.facets\", true);\n      if (withFacets) {\n        FacetSource facetsSource = getRunData().getFacetSource();\n        facetFields = withFacets ? new FacetFields(getRunData().getTaxonomyWriter()) : null;\n        facetsSource.getNextFacets(facets);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"53442c6c7d342feead7bcbabb097abcfeb06b575":["7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["53442c6c7d342feead7bcbabb097abcfeb06b575"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["21d36d0db865f7b84026b447bec653469a6e66df"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["53442c6c7d342feead7bcbabb097abcfeb06b575","51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8"],"07155cdd910937cdf6877e48884d5782845c8b8b":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","53442c6c7d342feead7bcbabb097abcfeb06b575"],"51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["07155cdd910937cdf6877e48884d5782845c8b8b"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","53442c6c7d342feead7bcbabb097abcfeb06b575"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"53442c6c7d342feead7bcbabb097abcfeb06b575":["21d36d0db865f7b84026b447bec653469a6e66df","3cc728b07df73b197e6d940d27f9b08b63918f13","07155cdd910937cdf6877e48884d5782845c8b8b"],"21d36d0db865f7b84026b447bec653469a6e66df":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"07155cdd910937cdf6877e48884d5782845c8b8b":[],"51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["07155cdd910937cdf6877e48884d5782845c8b8b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}