{"path":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"/dev/null","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext();\n    vs.createWeight(context, sqr.getSearcher());\n    SolrIndexReader sr = sqr.getSearcher().getReader();\n    int idx = SolrIndexReader.readerIndex(doc, sr.getLeafOffsets());\n    int base = sr.getLeafOffsets()[idx];\n    SolrIndexReader sub = sr.getLeafReaders()[idx];\n    DocValues vals = vs.getValues(context, sub);\n    return vals.strVal(doc-base);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":null,"sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext();\n    vs.createWeight(context, sqr.getSearcher());\n    SolrIndexReader sr = sqr.getSearcher().getReader();\n    int idx = SolrIndexReader.readerIndex(doc, sr.getLeafOffsets());\n    int base = sr.getLeafOffsets()[idx];\n    SolrIndexReader sub = sr.getLeafReaders()[idx];\n    DocValues vals = vs.getValues(context, sub);\n    return vals.strVal(doc-base);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext();\n    vs.createWeight(context, sqr.getSearcher());\n    SolrIndexReader sr = sqr.getSearcher().getReader();\n    int idx = SolrIndexReader.readerIndex(doc, sr.getLeafOffsets());\n    int base = sr.getLeafOffsets()[idx];\n    SolrIndexReader sub = sr.getLeafReaders()[idx];\n    DocValues vals = vs.getValues(context, sub);\n    return vals.strVal(doc-base);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext();\n    vs.createWeight(context, sqr.getSearcher());\n    SolrIndexReader sr = sqr.getSearcher().getReader();\n    int idx = SolrIndexReader.readerIndex(doc, sr.getLeafOffsets());\n    int base = sr.getLeafOffsets()[idx];\n    SolrIndexReader sub = sr.getLeafReaders()[idx];\n    DocValues vals = vs.getValues(context, sub);\n    return vals.strVal(doc-base);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"/dev/null","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext();\n    vs.createWeight(context, sqr.getSearcher());\n    SolrIndexReader sr = sqr.getSearcher().getReader();\n    int idx = SolrIndexReader.readerIndex(doc, sr.getLeafOffsets());\n    int base = sr.getLeafOffsets()[idx];\n    SolrIndexReader sub = sr.getLeafReaders()[idx];\n    DocValues vals = vs.getValues(context, sub);\n    return vals.strVal(doc-base);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f891ab635a93d6bff8051a62f03a093ca7ddebe9","date":1294449463,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    SolrIndexReader sr = sqr.getSearcher().getReader();\n    int idx = SolrIndexReader.readerIndex(doc, sr.getLeafOffsets());\n    int base = sr.getLeafOffsets()[idx];\n    SolrIndexReader sub = sr.getLeafReaders()[idx];\n    DocValues vals = vs.getValues(context, sub);\n    return vals.strVal(doc-base);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext();\n    vs.createWeight(context, sqr.getSearcher());\n    SolrIndexReader sr = sqr.getSearcher().getReader();\n    int idx = SolrIndexReader.readerIndex(doc, sr.getLeafOffsets());\n    int base = sr.getLeafOffsets()[idx];\n    SolrIndexReader sub = sr.getLeafReaders()[idx];\n    DocValues vals = vs.getValues(context, sub);\n    return vals.strVal(doc-base);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"323f871ffe96b871d8c534a614be60751bb023c2","date":1294820532,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    DocValues vals = vs.getValues(context, leaf.reader);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    SolrIndexReader sr = sqr.getSearcher().getReader();\n    int idx = SolrIndexReader.readerIndex(doc, sr.getLeafOffsets());\n    int base = sr.getLeafOffsets()[idx];\n    SolrIndexReader sub = sr.getLeafReaders()[idx];\n    DocValues vals = vs.getValues(context, sub);\n    return vals.strVal(doc-base);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c220849f876de24a79f756f65b3eb045db59f63f","date":1294902803,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    DocValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    DocValues vals = vs.getValues(context, leaf.reader);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    DocValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext();\n    vs.createWeight(context, sqr.getSearcher());\n    SolrIndexReader sr = sqr.getSearcher().getReader();\n    int idx = SolrIndexReader.readerIndex(doc, sr.getLeafOffsets());\n    int base = sr.getLeafOffsets()[idx];\n    SolrIndexReader sub = sr.getLeafReaders()[idx];\n    DocValues vals = vs.getValues(context, sub);\n    return vals.strVal(doc-base);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    DocValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext();\n    vs.createWeight(context, sqr.getSearcher());\n    SolrIndexReader sr = sqr.getSearcher().getReader();\n    int idx = SolrIndexReader.readerIndex(doc, sr.getLeafOffsets());\n    int base = sr.getLeafOffsets()[idx];\n    SolrIndexReader sub = sr.getLeafReaders()[idx];\n    DocValues vals = vs.getValues(context, sub);\n    return vals.strVal(doc-base);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    DocValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    DocValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    DocValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    DocValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","pathOld":"solr/src/test/org/apache/solr/search/TestIndexSearcher#getStringVal(SolrQueryRequest,String,int).mjava","sourceNew":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    DocValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","sourceOld":"  private String getStringVal(SolrQueryRequest sqr, String field, int doc) throws IOException {\n    SchemaField sf = sqr.getSchema().getField(field);\n    ValueSource vs = sf.getType().getValueSource(sf, null);\n    Map context = ValueSource.newContext(sqr.getSearcher());\n    vs.createWeight(context, sqr.getSearcher());\n    ReaderContext topReaderContext = sqr.getSearcher().getTopReaderContext();\n    AtomicReaderContext[] leaves = ReaderUtil.leaves(topReaderContext);\n    int idx = ReaderUtil.subIndex(doc, leaves);\n    AtomicReaderContext leaf = leaves[idx];\n    DocValues vals = vs.getValues(context, leaf);\n    return vals.strVal(doc-leaf.docBase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f891ab635a93d6bff8051a62f03a093ca7ddebe9":["1da8d55113b689b06716246649de6f62430f15c0"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"323f871ffe96b871d8c534a614be60751bb023c2":["f891ab635a93d6bff8051a62f03a093ca7ddebe9"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["c220849f876de24a79f756f65b3eb045db59f63f","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c220849f876de24a79f756f65b3eb045db59f63f":["323f871ffe96b871d8c534a614be60751bb023c2"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c220849f876de24a79f756f65b3eb045db59f63f"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["1da8d55113b689b06716246649de6f62430f15c0","c220849f876de24a79f756f65b3eb045db59f63f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["c220849f876de24a79f756f65b3eb045db59f63f"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["1da8d55113b689b06716246649de6f62430f15c0","c220849f876de24a79f756f65b3eb045db59f63f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"f891ab635a93d6bff8051a62f03a093ca7ddebe9":["323f871ffe96b871d8c534a614be60751bb023c2"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"323f871ffe96b871d8c534a614be60751bb023c2":["c220849f876de24a79f756f65b3eb045db59f63f"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"1da8d55113b689b06716246649de6f62430f15c0":["f891ab635a93d6bff8051a62f03a093ca7ddebe9","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"c220849f876de24a79f756f65b3eb045db59f63f":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}