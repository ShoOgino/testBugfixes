{"path":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#testCountValues().mjava","commits":[{"id":"2d772a6f7fe23fbf3491bd616ce7148cacf2fda5","date":1344904555,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#testCountValues().mjava","pathOld":"/dev/null","sourceNew":"  public void testCountValues() throws Exception {\n\n    SolrInputDocument d = null;\n\n    // trivial \n    d = processAdd(\"count\",       \n                   doc(f(\"id\", \"1111\"),\n                       f(\"count_field\", \"aaa\", \"bbb\", \"ccc\")));\n\n    assertNotNull(d);\n    assertEquals(3, d.getFieldValue(\"count_field\"));\n\n    // edge case: no values to count, means no count \n    // (use default if you want one)\n    d = processAdd(\"count\",       \n                   doc(f(\"id\", \"1111\")));\n\n    assertNotNull(d);\n    assertFalse(d.containsKey(\"count_field\"));\n\n    // typical usecase: clone and count \n    d = processAdd(\"clone-then-count\",       \n                   doc(f(\"id\", \"1111\"),\n                       f(\"category\", \"scifi\", \"war\", \"space\"),\n                       f(\"editors\", \"John W. Campbell\"),\n                       f(\"list_price\", 1000)));\n    assertNotNull(d);\n    assertEquals(Arrays.asList(\"scifi\", \"war\", \"space\"),\n                 d.getFieldValues(\"category\"));\n    assertEquals(3,\n                 d.getFieldValue(\"category_count\"));\n    assertEquals(Arrays.asList(\"John W. Campbell\"),\n                 d.getFieldValues(\"editors\"));\n    assertEquals(1000,d.getFieldValue(\"list_price\"));\n\n    // typical usecase: clone and count demonstrating default\n    d = processAdd(\"clone-then-count\",       \n                   doc(f(\"id\", \"1111\"),\n                       f(\"editors\", \"Anonymous\"),\n                       f(\"list_price\", 1000)));\n    assertNotNull(d);\n    assertEquals(0,\n                 d.getFieldValue(\"category_count\"));\n    assertEquals(Arrays.asList(\"Anonymous\"),\n                 d.getFieldValues(\"editors\"));\n    assertEquals(1000,d.getFieldValue(\"list_price\"));\n\n    \n\n\n  } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","date":1345029782,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#testCountValues().mjava","pathOld":"/dev/null","sourceNew":"  public void testCountValues() throws Exception {\n\n    SolrInputDocument d = null;\n\n    // trivial \n    d = processAdd(\"count\",       \n                   doc(f(\"id\", \"1111\"),\n                       f(\"count_field\", \"aaa\", \"bbb\", \"ccc\")));\n\n    assertNotNull(d);\n    assertEquals(3, d.getFieldValue(\"count_field\"));\n\n    // edge case: no values to count, means no count \n    // (use default if you want one)\n    d = processAdd(\"count\",       \n                   doc(f(\"id\", \"1111\")));\n\n    assertNotNull(d);\n    assertFalse(d.containsKey(\"count_field\"));\n\n    // typical usecase: clone and count \n    d = processAdd(\"clone-then-count\",       \n                   doc(f(\"id\", \"1111\"),\n                       f(\"category\", \"scifi\", \"war\", \"space\"),\n                       f(\"editors\", \"John W. Campbell\"),\n                       f(\"list_price\", 1000)));\n    assertNotNull(d);\n    assertEquals(Arrays.asList(\"scifi\", \"war\", \"space\"),\n                 d.getFieldValues(\"category\"));\n    assertEquals(3,\n                 d.getFieldValue(\"category_count\"));\n    assertEquals(Arrays.asList(\"John W. Campbell\"),\n                 d.getFieldValues(\"editors\"));\n    assertEquals(1000,d.getFieldValue(\"list_price\"));\n\n    // typical usecase: clone and count demonstrating default\n    d = processAdd(\"clone-then-count\",       \n                   doc(f(\"id\", \"1111\"),\n                       f(\"editors\", \"Anonymous\"),\n                       f(\"list_price\", 1000)));\n    assertNotNull(d);\n    assertEquals(0,\n                 d.getFieldValue(\"category_count\"));\n    assertEquals(Arrays.asList(\"Anonymous\"),\n                 d.getFieldValues(\"editors\"));\n    assertEquals(1000,d.getFieldValue(\"list_price\"));\n\n    \n\n\n  } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b05c56a41b733e02a189c48895922b5bd8c7f3d1","date":1345033322,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#testCountValues().mjava","pathOld":"/dev/null","sourceNew":"  public void testCountValues() throws Exception {\n\n    SolrInputDocument d = null;\n\n    // trivial \n    d = processAdd(\"count\",       \n                   doc(f(\"id\", \"1111\"),\n                       f(\"count_field\", \"aaa\", \"bbb\", \"ccc\")));\n\n    assertNotNull(d);\n    assertEquals(3, d.getFieldValue(\"count_field\"));\n\n    // edge case: no values to count, means no count \n    // (use default if you want one)\n    d = processAdd(\"count\",       \n                   doc(f(\"id\", \"1111\")));\n\n    assertNotNull(d);\n    assertFalse(d.containsKey(\"count_field\"));\n\n    // typical usecase: clone and count \n    d = processAdd(\"clone-then-count\",       \n                   doc(f(\"id\", \"1111\"),\n                       f(\"category\", \"scifi\", \"war\", \"space\"),\n                       f(\"editors\", \"John W. Campbell\"),\n                       f(\"list_price\", 1000)));\n    assertNotNull(d);\n    assertEquals(Arrays.asList(\"scifi\", \"war\", \"space\"),\n                 d.getFieldValues(\"category\"));\n    assertEquals(3,\n                 d.getFieldValue(\"category_count\"));\n    assertEquals(Arrays.asList(\"John W. Campbell\"),\n                 d.getFieldValues(\"editors\"));\n    assertEquals(1000,d.getFieldValue(\"list_price\"));\n\n    // typical usecase: clone and count demonstrating default\n    d = processAdd(\"clone-then-count\",       \n                   doc(f(\"id\", \"1111\"),\n                       f(\"editors\", \"Anonymous\"),\n                       f(\"list_price\", 1000)));\n    assertNotNull(d);\n    assertEquals(0,\n                 d.getFieldValue(\"category_count\"));\n    assertEquals(Arrays.asList(\"Anonymous\"),\n                 d.getFieldValues(\"editors\"));\n    assertEquals(1000,d.getFieldValue(\"list_price\"));\n\n    \n\n\n  } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b05c56a41b733e02a189c48895922b5bd8c7f3d1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2d772a6f7fe23fbf3491bd616ce7148cacf2fda5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2d772a6f7fe23fbf3491bd616ce7148cacf2fda5"],"2d772a6f7fe23fbf3491bd616ce7148cacf2fda5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2d772a6f7fe23fbf3491bd616ce7148cacf2fda5"]},"commit2Childs":{"b05c56a41b733e02a189c48895922b5bd8c7f3d1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","2d772a6f7fe23fbf3491bd616ce7148cacf2fda5"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":[],"2d772a6f7fe23fbf3491bd616ce7148cacf2fda5":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}