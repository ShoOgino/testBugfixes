{"path":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","commits":[{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Directory).mjava","sourceNew":"  private void createIndex(Random random, Directory dir) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    lmp.setUseCompoundDocStore(true);\n    iw.close();\n  }\n\n","sourceOld":"  private void createIndex(Directory dir) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    lmp.setUseCompoundDocStore(true);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","sourceNew":"  private void createIndex(Random random, Directory dir) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    lmp.setUseCompoundDocStore(true);\n    iw.close();\n  }\n\n","sourceOld":"  private void createIndex(Random random, Directory dir) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    lmp.setUseCompoundDocStore(true);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","date":1292695408,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","sourceNew":"  private void createIndex(Random random, Directory dir) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n  }\n\n","sourceOld":"  private void createIndex(Random random, Directory dir) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    lmp.setUseCompoundDocStore(true);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","sourceNew":"  private void createIndex(Random random, Directory dir) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n  }\n\n","sourceOld":"  private void createIndex(Random random, Directory dir) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    lmp.setUseCompoundDocStore(true);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","pathOld":"/dev/null","sourceNew":"  private void createIndex(Random random, Directory dir) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd9325c7ff9928fabe81c28553b41fc7aa57dfab","date":1295896411,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","sourceNew":"  private void createIndex(Random random, Directory dir) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n        .setMaxBufferedDocs(5).setSimilarityProvider(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n  }\n\n","sourceOld":"  private void createIndex(Random random, Directory dir) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","sourceNew":"  private void createIndex(Random random, Directory dir) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n        .setMaxBufferedDocs(5).setSimilarityProvider(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n  }\n\n","sourceOld":"  private void createIndex(Random random, Directory dir) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c19f985e36a65cc969e8e564fe337a0d41512075","date":1296330536,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","sourceNew":"  private void createIndex(Random random, Directory dir) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n                                     .setMaxBufferedDocs(5).setSimilarityProvider(similarityOne).setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n  }\n\n","sourceOld":"  private void createIndex(Random random, Directory dir) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n        .setMaxBufferedDocs(5).setSimilarityProvider(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","sourceNew":"  private void createIndex(Random random, Directory dir) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n                                     .setMaxBufferedDocs(5).setSimilarityProvider(similarityOne).setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n  }\n\n","sourceOld":"  private void createIndex(Random random, Directory dir) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n        .setMaxBufferedDocs(5).setSimilarity(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08bd82f9f7ac6b7ae532616311b08252338e335d","date":1297527663,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","sourceNew":"  private void createIndex(Random random, Directory dir) throws IOException {\n    if (VERBOSE) {\n      System.out.println(\"TEST: createIndex\");\n    }\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n                                     .setMaxBufferedDocs(5).setSimilarityProvider(similarityOne).setMergePolicy(newLogMergePolicy()));\n\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: done createIndex\");\n    }\n  }\n\n","sourceOld":"  private void createIndex(Random random, Directory dir) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n                                     .setMaxBufferedDocs(5).setSimilarityProvider(similarityOne).setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","sourceNew":"  private void createIndex(Random random, Directory dir) throws IOException {\n    if (VERBOSE) {\n      System.out.println(\"TEST: createIndex\");\n    }\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n                                     .setMaxBufferedDocs(5).setSimilarityProvider(similarityOne).setMergePolicy(newLogMergePolicy()));\n\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: done createIndex\");\n    }\n  }\n\n","sourceOld":"  private void createIndex(Random random, Directory dir) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n                                     .setMaxBufferedDocs(5).setSimilarityProvider(similarityOne).setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","sourceNew":"  private void createIndex(Random random, Directory dir) throws IOException {\n    if (VERBOSE) {\n      System.out.println(\"TEST: createIndex\");\n    }\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n                                     .setMaxBufferedDocs(5).setSimilarityProvider(similarityOne).setMergePolicy(newLogMergePolicy()));\n\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: done createIndex\");\n    }\n  }\n\n","sourceOld":"  private void createIndex(Random random, Directory dir) throws IOException {\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n        .setMaxBufferedDocs(5).setSimilarityProvider(similarityOne));\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"160d004a0e8f5361a446f9d01456aee1c1af20dc","date":1301061642,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","sourceNew":"  private void createIndex(Random random, Directory dir) throws IOException {\n    if (VERBOSE) {\n      System.out.println(\"TEST: createIndex\");\n    }\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n                                     .setMaxBufferedDocs(5).setSimilarityProvider(similarityProviderOne).setMergePolicy(newLogMergePolicy()));\n\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: done createIndex\");\n    }\n  }\n\n","sourceOld":"  private void createIndex(Random random, Directory dir) throws IOException {\n    if (VERBOSE) {\n      System.out.println(\"TEST: createIndex\");\n    }\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n                                     .setMaxBufferedDocs(5).setSimilarityProvider(similarityOne).setMergePolicy(newLogMergePolicy()));\n\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: done createIndex\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","sourceNew":"  private void createIndex(Random random, Directory dir) throws IOException {\n    if (VERBOSE) {\n      System.out.println(\"TEST: createIndex\");\n    }\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n                                     .setMaxBufferedDocs(5).setSimilarityProvider(similarityProviderOne).setMergePolicy(newLogMergePolicy()));\n\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: done createIndex\");\n    }\n  }\n\n","sourceOld":"  private void createIndex(Random random, Directory dir) throws IOException {\n    if (VERBOSE) {\n      System.out.println(\"TEST: createIndex\");\n    }\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n                                     .setMaxBufferedDocs(5).setSimilarityProvider(similarityOne).setMergePolicy(newLogMergePolicy()));\n\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: done createIndex\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","sourceNew":"  private void createIndex(Random random, Directory dir) throws IOException {\n    if (VERBOSE) {\n      System.out.println(\"TEST: createIndex\");\n    }\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n                                     .setMaxBufferedDocs(5).setSimilarityProvider(similarityProviderOne).setMergePolicy(newLogMergePolicy()));\n\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: done createIndex\");\n    }\n  }\n\n","sourceOld":"  private void createIndex(Random random, Directory dir) throws IOException {\n    if (VERBOSE) {\n      System.out.println(\"TEST: createIndex\");\n    }\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n                                     .setMaxBufferedDocs(5).setSimilarityProvider(similarityOne).setMergePolicy(newLogMergePolicy()));\n\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: done createIndex\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4122a26e1fd0457a340616673a3d3aada370f713","date":1322955654,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","sourceNew":null,"sourceOld":"  private void createIndex(Random random, Directory dir) throws IOException {\n    if (VERBOSE) {\n      System.out.println(\"TEST: createIndex\");\n    }\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n                                     .setMaxBufferedDocs(5).setSimilarityProvider(similarityProviderOne).setMergePolicy(newLogMergePolicy()));\n\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: done createIndex\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","sourceNew":null,"sourceOld":"  private void createIndex(Random random, Directory dir) throws IOException {\n    if (VERBOSE) {\n      System.out.println(\"TEST: createIndex\");\n    }\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n                                     .setMaxBufferedDocs(5).setSimilarityProvider(similarityProviderOne).setMergePolicy(newLogMergePolicy()));\n\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: done createIndex\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderCloneNorms#createIndex(Random,Directory).mjava","sourceNew":null,"sourceOld":"  private void createIndex(Random random, Directory dir) throws IOException {\n    if (VERBOSE) {\n      System.out.println(\"TEST: createIndex\");\n    }\n    IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, anlzr).setOpenMode(OpenMode.CREATE)\n                                     .setMaxBufferedDocs(5).setSimilarityProvider(similarityProviderOne).setMergePolicy(newLogMergePolicy()));\n\n    LogMergePolicy lmp = (LogMergePolicy) iw.getConfig().getMergePolicy();\n    lmp.setMergeFactor(3);\n    lmp.setUseCompoundFile(true);\n    iw.close();\n    if (VERBOSE) {\n      System.out.println(\"TEST: done createIndex\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":["29ef99d61cda9641b6250bf9567329a6e65f901d","08bd82f9f7ac6b7ae532616311b08252338e335d"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["160d004a0e8f5361a446f9d01456aee1c1af20dc","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["1f653cfcf159baeaafe5d01682a911e95bba4012","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"c19f985e36a65cc969e8e564fe337a0d41512075":["fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"08bd82f9f7ac6b7ae532616311b08252338e335d":["c19f985e36a65cc969e8e564fe337a0d41512075"],"fd9325c7ff9928fabe81c28553b41fc7aa57dfab":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["bde51b089eb7f86171eb3406e38a274743f9b7ac","160d004a0e8f5361a446f9d01456aee1c1af20dc"],"160d004a0e8f5361a446f9d01456aee1c1af20dc":["08bd82f9f7ac6b7ae532616311b08252338e335d"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["f1bdbf92da222965b46c0a942c3857ba56e5c638","160d004a0e8f5361a446f9d01456aee1c1af20dc"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","c19f985e36a65cc969e8e564fe337a0d41512075"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["160d004a0e8f5361a446f9d01456aee1c1af20dc","4122a26e1fd0457a340616673a3d3aada370f713"],"4122a26e1fd0457a340616673a3d3aada370f713":["160d004a0e8f5361a446f9d01456aee1c1af20dc"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","08bd82f9f7ac6b7ae532616311b08252338e335d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3615ce4a1f785ae1b779244de52c6a7d99227e60"]},"commit2Childs":{"f1bdbf92da222965b46c0a942c3857ba56e5c638":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"c19f985e36a65cc969e8e564fe337a0d41512075":["08bd82f9f7ac6b7ae532616311b08252338e335d","29ef99d61cda9641b6250bf9567329a6e65f901d"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"08bd82f9f7ac6b7ae532616311b08252338e335d":["f1bdbf92da222965b46c0a942c3857ba56e5c638","160d004a0e8f5361a446f9d01456aee1c1af20dc","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"fd9325c7ff9928fabe81c28553b41fc7aa57dfab":["c19f985e36a65cc969e8e564fe337a0d41512075","bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"160d004a0e8f5361a446f9d01456aee1c1af20dc":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","3615ce4a1f785ae1b779244de52c6a7d99227e60","4122a26e1fd0457a340616673a3d3aada370f713"],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4122a26e1fd0457a340616673a3d3aada370f713":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}