{"path":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,String).mjava","commits":[{"id":"f118a5ec962b5e2658d313e6f4e6f28faa3bcb39","date":1161023282,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,String).mjava","pathOld":"/dev/null","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, String indexDirName) throws IOException {\n        FSDirectory fs1 = FSDirectory.getDirectory(indexDirName, true, lockFactory);\n        // fs1.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"284c1d3c8b19931bf6f312fae7470487f5d9e580","date":1163805527,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,String).mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,String).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, String indexDirName) throws IOException {\n        FSDirectory fs1 = FSDirectory.getDirectory(indexDirName, true, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, String indexDirName) throws IOException {\n        FSDirectory fs1 = FSDirectory.getDirectory(indexDirName, true, lockFactory);\n        // fs1.setLockFactory(NoLockFactory.getNoLockFactory());\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66b12ba4967665216eeb706b58d424c51fb3641a","date":1169160423,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,String).mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,String).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, String indexDirName) throws IOException {\n        FSDirectory fs1 = FSDirectory.getDirectory(indexDirName, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, String indexDirName) throws IOException {\n        FSDirectory fs1 = FSDirectory.getDirectory(indexDirName, true, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b583d3621fe173e7296abcf62f82fb707c901234","date":1194717060,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,String).mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,String).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, String indexDirName) throws IOException {\n        FSDirectory fs1 = FSDirectory.getDirectory(indexDirName, lockFactory, false);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, String indexDirName) throws IOException {\n        FSDirectory fs1 = FSDirectory.getDirectory(indexDirName, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a015c55424dd37249054283bedc90388bd45358f","date":1197049353,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,String).mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,String).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, String indexDirName) throws IOException {\n        FSDirectory fs1 = FSDirectory.getDirectory(indexDirName, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, String indexDirName) throws IOException {\n        FSDirectory fs1 = FSDirectory.getDirectory(indexDirName, lockFactory, false);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"235efcba838a273934c5dd0ef66bb07c7fb0d718","date":1201256475,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,String).mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,String).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, String indexDirName) throws IOException {\n        FSDirectory fs1 = FSDirectory.getDirectory(indexDirName, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, String indexDirName) throws IOException {\n        FSDirectory fs1 = FSDirectory.getDirectory(indexDirName, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba7fd1181f778e9954547e8e6a47587ebf08e3fb","date":1238267455,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,String).mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,String).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, String indexDirName) throws Exception {\n        FSDirectory fs1 = FSDirectory.getDirectory(indexDirName, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, String indexDirName) throws IOException {\n        FSDirectory fs1 = FSDirectory.getDirectory(indexDirName, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02","date":1243677645,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,String).mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,String).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, String indexDirName) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(new File(indexDirName), lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, String indexDirName) throws Exception {\n        FSDirectory fs1 = FSDirectory.getDirectory(indexDirName, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f1405cedaef6ce1e1b563d7b35ee26c6518c81e","date":1244664919,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,String).mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,String).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, String indexDirName) throws Exception {\n        File indexDir = _TestUtil.getTempDir(indexDirName);\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, String indexDirName) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(new File(indexDirName), lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        rmDir(indexDirName);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f7faff7550034759516ce7f4898cd16c1816cde","date":1245778901,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,File).mjava","pathOld":"src/test/org/apache/lucene/store/TestLockFactory#_testStressLocks(LockFactory,String).mjava","sourceNew":"    public void _testStressLocks(LockFactory lockFactory, File indexDir) throws Exception {\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","sourceOld":"    public void _testStressLocks(LockFactory lockFactory, String indexDirName) throws Exception {\n        File indexDir = _TestUtil.getTempDir(indexDirName);\n        FSDirectory fs1 = FSDirectory.open(indexDir, lockFactory);\n\n        // First create a 1 doc index:\n        IndexWriter w = new IndexWriter(fs1, new WhitespaceAnalyzer(), true,\n                                        IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(w);\n        w.close();\n\n        WriterThread writer = new WriterThread(100, fs1);\n        SearcherThread searcher = new SearcherThread(100, fs1);\n        writer.start();\n        searcher.start();\n\n        while(writer.isAlive() || searcher.isAlive()) {\n          Thread.sleep(1000);\n        }\n\n        assertTrue(\"IndexWriter hit unexpected exceptions\", !writer.hitException);\n        assertTrue(\"IndexSearcher hit unexpected exceptions\", !searcher.hitException);\n\n        // Cleanup\n        _TestUtil.rmDir(indexDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b583d3621fe173e7296abcf62f82fb707c901234":["66b12ba4967665216eeb706b58d424c51fb3641a"],"9f1405cedaef6ce1e1b563d7b35ee26c6518c81e":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"66b12ba4967665216eeb706b58d424c51fb3641a":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"235efcba838a273934c5dd0ef66bb07c7fb0d718":["a015c55424dd37249054283bedc90388bd45358f"],"284c1d3c8b19931bf6f312fae7470487f5d9e580":["f118a5ec962b5e2658d313e6f4e6f28faa3bcb39"],"a015c55424dd37249054283bedc90388bd45358f":["b583d3621fe173e7296abcf62f82fb707c901234"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["ba7fd1181f778e9954547e8e6a47587ebf08e3fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f118a5ec962b5e2658d313e6f4e6f28faa3bcb39":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8f7faff7550034759516ce7f4898cd16c1816cde":["9f1405cedaef6ce1e1b563d7b35ee26c6518c81e"],"ba7fd1181f778e9954547e8e6a47587ebf08e3fb":["235efcba838a273934c5dd0ef66bb07c7fb0d718"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8f7faff7550034759516ce7f4898cd16c1816cde"]},"commit2Childs":{"b583d3621fe173e7296abcf62f82fb707c901234":["a015c55424dd37249054283bedc90388bd45358f"],"66b12ba4967665216eeb706b58d424c51fb3641a":["b583d3621fe173e7296abcf62f82fb707c901234"],"9f1405cedaef6ce1e1b563d7b35ee26c6518c81e":["8f7faff7550034759516ce7f4898cd16c1816cde"],"284c1d3c8b19931bf6f312fae7470487f5d9e580":["66b12ba4967665216eeb706b58d424c51fb3641a"],"235efcba838a273934c5dd0ef66bb07c7fb0d718":["ba7fd1181f778e9954547e8e6a47587ebf08e3fb"],"a015c55424dd37249054283bedc90388bd45358f":["235efcba838a273934c5dd0ef66bb07c7fb0d718"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["9f1405cedaef6ce1e1b563d7b35ee26c6518c81e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f118a5ec962b5e2658d313e6f4e6f28faa3bcb39"],"f118a5ec962b5e2658d313e6f4e6f28faa3bcb39":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"8f7faff7550034759516ce7f4898cd16c1816cde":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ba7fd1181f778e9954547e8e6a47587ebf08e3fb":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}