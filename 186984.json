{"path":"modules/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","commits":[{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","sourceNew":"  /**\n   * Collect the multilingual input for benchmarks/ tests.\n   */\n  public static List<TermFreq> readTop50KWiki() throws Exception {\n    List<TermFreq> input = new ArrayList<TermFreq>();\n    URL resource = LookupBenchmarkTest.class.getResource(\"Top50KWiki.utf8\");\n    assert resource != null : \"Resource missing: Top50KWiki.utf8\";\n\n    String line = null;\n    BufferedReader br = new BufferedReader(new InputStreamReader(resource.openStream(), UTF_8));\n    while ((line = br.readLine()) != null) {\n      int tab = line.indexOf('|');\n      assertTrue(\"No | separator?: \" + line, tab >= 0);\n      float weight = Float.parseFloat(line.substring(tab + 1));\n      String key = line.substring(0, tab);\n      input.add(new TermFreq(key, weight));\n    }\n    br.close();\n    return input;\n  }\n\n","sourceOld":"  /**\n   * Collect the multilingual input for benchmarks/ tests.\n   */\n  public static List<TermFreq> readTop50KWiki() throws Exception {\n    List<TermFreq> input = Lists.newArrayList();\n    URL resource = Thread.currentThread().getContextClassLoader().getResource(\"Top50KWiki.utf8\");\n    assert resource != null : \"Resource missing: Top50KWiki.utf8\";\n\n    for (String line : Resources.readLines(resource, Charsets.UTF_8)) {\n      int tab = line.indexOf('|');\n      Assert.assertTrue(\"No | separator?: \" + line, tab >= 0);\n      float weight = Float.parseFloat(line.substring(tab + 1));\n      String key = line.substring(0, tab);\n      input.add(new TermFreq(key, weight));\n    }\n    return input;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","sourceNew":"  /**\n   * Collect the multilingual input for benchmarks/ tests.\n   */\n  public static List<TermFreq> readTop50KWiki() throws Exception {\n    List<TermFreq> input = new ArrayList<TermFreq>();\n    URL resource = LookupBenchmarkTest.class.getResource(\"Top50KWiki.utf8\");\n    assert resource != null : \"Resource missing: Top50KWiki.utf8\";\n\n    String line = null;\n    BufferedReader br = new BufferedReader(new InputStreamReader(resource.openStream(), UTF_8));\n    while ((line = br.readLine()) != null) {\n      int tab = line.indexOf('|');\n      assertTrue(\"No | separator?: \" + line, tab >= 0);\n      float weight = Float.parseFloat(line.substring(tab + 1));\n      String key = line.substring(0, tab);\n      input.add(new TermFreq(key, weight));\n    }\n    br.close();\n    return input;\n  }\n\n","sourceOld":"  /**\n   * Collect the multilingual input for benchmarks/ tests.\n   */\n  public static List<TermFreq> readTop50KWiki() throws Exception {\n    List<TermFreq> input = Lists.newArrayList();\n    URL resource = Thread.currentThread().getContextClassLoader().getResource(\"Top50KWiki.utf8\");\n    assert resource != null : \"Resource missing: Top50KWiki.utf8\";\n\n    for (String line : Resources.readLines(resource, Charsets.UTF_8)) {\n      int tab = line.indexOf('|');\n      Assert.assertTrue(\"No | separator?: \" + line, tab >= 0);\n      float weight = Float.parseFloat(line.substring(tab + 1));\n      String key = line.substring(0, tab);\n      input.add(new TermFreq(key, weight));\n    }\n    return input;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","sourceNew":"  /**\n   * Collect the multilingual input for benchmarks/ tests.\n   */\n  public static List<TermFreq> readTop50KWiki() throws Exception {\n    List<TermFreq> input = new ArrayList<TermFreq>();\n    URL resource = LookupBenchmarkTest.class.getResource(\"Top50KWiki.utf8\");\n    assert resource != null : \"Resource missing: Top50KWiki.utf8\";\n\n    String line = null;\n    BufferedReader br = new BufferedReader(new InputStreamReader(resource.openStream(), UTF_8));\n    while ((line = br.readLine()) != null) {\n      int tab = line.indexOf('|');\n      assertTrue(\"No | separator?: \" + line, tab >= 0);\n      float weight = Float.parseFloat(line.substring(tab + 1));\n      String key = line.substring(0, tab);\n      input.add(new TermFreq(key, weight));\n    }\n    br.close();\n    return input;\n  }\n\n","sourceOld":"  /**\n   * Collect the multilingual input for benchmarks/ tests.\n   */\n  public static List<TermFreq> readTop50KWiki() throws Exception {\n    List<TermFreq> input = Lists.newArrayList();\n    URL resource = Thread.currentThread().getContextClassLoader().getResource(\"Top50KWiki.utf8\");\n    assert resource != null : \"Resource missing: Top50KWiki.utf8\";\n\n    for (String line : Resources.readLines(resource, Charsets.UTF_8)) {\n      int tab = line.indexOf('|');\n      Assert.assertTrue(\"No | separator?: \" + line, tab >= 0);\n      float weight = Float.parseFloat(line.substring(tab + 1));\n      String key = line.substring(0, tab);\n      input.add(new TermFreq(key, weight));\n    }\n    return input;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ecc52400551de6a7d8daf646be839487911627c","date":1330076979,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","sourceNew":"  /**\n   * Collect the multilingual input for benchmarks/ tests.\n   */\n  public static List<TermFreq> readTop50KWiki() throws Exception {\n    List<TermFreq> input = new ArrayList<TermFreq>();\n    URL resource = LookupBenchmarkTest.class.getResource(\"Top50KWiki.utf8\");\n    assert resource != null : \"Resource missing: Top50KWiki.utf8\";\n\n    String line = null;\n    BufferedReader br = new BufferedReader(new InputStreamReader(resource.openStream(), UTF_8));\n    while ((line = br.readLine()) != null) {\n      int tab = line.indexOf('|');\n      assertTrue(\"No | separator?: \" + line, tab >= 0);\n      int weight = Integer.parseInt(line.substring(tab + 1));\n      String key = line.substring(0, tab);\n      input.add(new TermFreq(key, weight));\n    }\n    br.close();\n    return input;\n  }\n\n","sourceOld":"  /**\n   * Collect the multilingual input for benchmarks/ tests.\n   */\n  public static List<TermFreq> readTop50KWiki() throws Exception {\n    List<TermFreq> input = new ArrayList<TermFreq>();\n    URL resource = LookupBenchmarkTest.class.getResource(\"Top50KWiki.utf8\");\n    assert resource != null : \"Resource missing: Top50KWiki.utf8\";\n\n    String line = null;\n    BufferedReader br = new BufferedReader(new InputStreamReader(resource.openStream(), UTF_8));\n    while ((line = br.readLine()) != null) {\n      int tab = line.indexOf('|');\n      assertTrue(\"No | separator?: \" + line, tab >= 0);\n      float weight = Float.parseFloat(line.substring(tab + 1));\n      String key = line.substring(0, tab);\n      input.add(new TermFreq(key, weight));\n    }\n    br.close();\n    return input;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","sourceNew":"  /**\n   * Collect the multilingual input for benchmarks/ tests.\n   */\n  public static List<TermFreq> readTop50KWiki() throws Exception {\n    List<TermFreq> input = new ArrayList<TermFreq>();\n    URL resource = LookupBenchmarkTest.class.getResource(\"Top50KWiki.utf8\");\n    assert resource != null : \"Resource missing: Top50KWiki.utf8\";\n\n    String line = null;\n    BufferedReader br = new BufferedReader(new InputStreamReader(resource.openStream(), UTF_8));\n    while ((line = br.readLine()) != null) {\n      int tab = line.indexOf('|');\n      assertTrue(\"No | separator?: \" + line, tab >= 0);\n      int weight = Integer.parseInt(line.substring(tab + 1));\n      String key = line.substring(0, tab);\n      input.add(new TermFreq(key, weight));\n    }\n    br.close();\n    return input;\n  }\n\n","sourceOld":"  /**\n   * Collect the multilingual input for benchmarks/ tests.\n   */\n  public static List<TermFreq> readTop50KWiki() throws Exception {\n    List<TermFreq> input = new ArrayList<TermFreq>();\n    URL resource = LookupBenchmarkTest.class.getResource(\"Top50KWiki.utf8\");\n    assert resource != null : \"Resource missing: Top50KWiki.utf8\";\n\n    String line = null;\n    BufferedReader br = new BufferedReader(new InputStreamReader(resource.openStream(), UTF_8));\n    while ((line = br.readLine()) != null) {\n      int tab = line.indexOf('|');\n      assertTrue(\"No | separator?: \" + line, tab >= 0);\n      float weight = Float.parseFloat(line.substring(tab + 1));\n      String key = line.substring(0, tab);\n      input.add(new TermFreq(key, weight));\n    }\n    br.close();\n    return input;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/suggest/LookupBenchmarkTest#readTop50KWiki().mjava","sourceNew":"  /**\n   * Collect the multilingual input for benchmarks/ tests.\n   */\n  public static List<TermFreq> readTop50KWiki() throws Exception {\n    List<TermFreq> input = new ArrayList<TermFreq>();\n    URL resource = LookupBenchmarkTest.class.getResource(\"Top50KWiki.utf8\");\n    assert resource != null : \"Resource missing: Top50KWiki.utf8\";\n\n    String line = null;\n    BufferedReader br = new BufferedReader(new InputStreamReader(resource.openStream(), UTF_8));\n    while ((line = br.readLine()) != null) {\n      int tab = line.indexOf('|');\n      assertTrue(\"No | separator?: \" + line, tab >= 0);\n      int weight = Integer.parseInt(line.substring(tab + 1));\n      String key = line.substring(0, tab);\n      input.add(new TermFreq(key, weight));\n    }\n    br.close();\n    return input;\n  }\n\n","sourceOld":"  /**\n   * Collect the multilingual input for benchmarks/ tests.\n   */\n  public static List<TermFreq> readTop50KWiki() throws Exception {\n    List<TermFreq> input = new ArrayList<TermFreq>();\n    URL resource = LookupBenchmarkTest.class.getResource(\"Top50KWiki.utf8\");\n    assert resource != null : \"Resource missing: Top50KWiki.utf8\";\n\n    String line = null;\n    BufferedReader br = new BufferedReader(new InputStreamReader(resource.openStream(), UTF_8));\n    while ((line = br.readLine()) != null) {\n      int tab = line.indexOf('|');\n      assertTrue(\"No | separator?: \" + line, tab >= 0);\n      int weight = Integer.parseInt(line.substring(tab + 1));\n      String key = line.substring(0, tab);\n      input.add(new TermFreq(key, weight));\n    }\n    br.close();\n    return input;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["6ecc52400551de6a7d8daf646be839487911627c"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["e230a61047bc041516c811baa08a7174d6f8322a","6ecc52400551de6a7d8daf646be839487911627c"],"e230a61047bc041516c811baa08a7174d6f8322a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e230a61047bc041516c811baa08a7174d6f8322a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6ecc52400551de6a7d8daf646be839487911627c":["e230a61047bc041516c811baa08a7174d6f8322a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e230a61047bc041516c811baa08a7174d6f8322a"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"e230a61047bc041516c811baa08a7174d6f8322a":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","6ecc52400551de6a7d8daf646be839487911627c","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e230a61047bc041516c811baa08a7174d6f8322a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"6ecc52400551de6a7d8daf646be839487911627c":["b89678825b68eccaf09e6ab71675fc0b0af1e099","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}