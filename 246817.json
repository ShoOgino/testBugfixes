{"path":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  /**\n   * Returns a random string up to a certain length.\n   */\n  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    randomFixedLengthUnicodeString(r, buffer, 0, buffer.length);\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  /**\n   * Returns a random string up to a certain length.\n   */\n  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    randomFixedLengthUnicodeString(r, buffer, 0, buffer.length);\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98b3157475550a08a1536940d79af1c32dbd6663","date":1332600844,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  /**\n   * Returns a random string up to a certain length.\n   */\n  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = nextInt(r, 0, maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    randomFixedLengthUnicodeString(r, buffer, 0, buffer.length);\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  /**\n   * Returns a random string up to a certain length.\n   */\n  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    randomFixedLengthUnicodeString(r, buffer, 0, buffer.length);\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":5,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  /**\n   * Returns a random string up to a certain length.\n   */\n  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = nextInt(r, 0, maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    randomFixedLengthUnicodeString(r, buffer, 0, buffer.length);\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  /**\n   * Returns a random string up to a certain length.\n   */\n  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = nextInt(r, 0, maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    randomFixedLengthUnicodeString(r, buffer, 0, buffer.length);\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"98b3157475550a08a1536940d79af1c32dbd6663":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"6613659748fe4411a7dcf85266e55db1f95f7315":["98b3157475550a08a1536940d79af1c32dbd6663"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6613659748fe4411a7dcf85266e55db1f95f7315"]},"commit2Childs":{"98b3157475550a08a1536940d79af1c32dbd6663":["6613659748fe4411a7dcf85266e55db1f95f7315"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["98b3157475550a08a1536940d79af1c32dbd6663"],"6613659748fe4411a7dcf85266e55db1f95f7315":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}