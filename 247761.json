{"path":"solr/core/src/java/org/apache/solr/handler/component/PivotFacetValue#getValuePath().mjava","commits":[{"id":"92751ba9273251eab6a2e379ec42a1697a32ff96","date":1407954233,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/PivotFacetValue#getValuePath().mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * A recursive method that walks up the tree of pivot fields/values to build \n   * a list of the String representations of the values that lead down to this \n   * PivotFacetValue.\n   *\n   * @return a mutable List of the pivot value Strings leading down to and including \n   *      this pivot value, will never be null but may contain nulls\n   * @see PivotFacetField#getValuePath\n   */\n  public List<String> getValuePath() {\n    List<String> out = parentPivot.getValuePath();\n\n    // Note: this code doesn't play nice with custom FieldTypes -- see SOLR-6330\n\n    if (null == value) {\n      out.add(null);\n    } else if (value instanceof Date) {\n      out.add(TrieDateField.formatExternal((Date) value));\n    } else {\n      out.add(value.toString());\n    }\n    return out;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331","date":1437383270,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/PivotFacetValue#getValuePath().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/PivotFacetValue#getValuePath().mjava","sourceNew":"  /** \n   * A recursive method that walks up the tree of pivot fields/values to build \n   * a list of the String representations of the values that lead down to this \n   * PivotFacetValue.\n   *\n   * @return a mutable List of the pivot value Strings leading down to and including \n   *      this pivot value, will never be null but may contain nulls\n   * @see PivotFacetField#getValuePath\n   */\n  public List<String> getValuePath() {\n    List<String> out = parentPivot.getValuePath();\n\n    // Note: this code doesn't play nice with custom FieldTypes -- see SOLR-6330\n\n    if (null == value) {\n      out.add(null);\n    } else if (value instanceof Date) {\n      out.add(DateFormatUtil.formatExternal((Date) value));\n    } else {\n      out.add(value.toString());\n    }\n    return out;\n  }\n\n","sourceOld":"  /** \n   * A recursive method that walks up the tree of pivot fields/values to build \n   * a list of the String representations of the values that lead down to this \n   * PivotFacetValue.\n   *\n   * @return a mutable List of the pivot value Strings leading down to and including \n   *      this pivot value, will never be null but may contain nulls\n   * @see PivotFacetField#getValuePath\n   */\n  public List<String> getValuePath() {\n    List<String> out = parentPivot.getValuePath();\n\n    // Note: this code doesn't play nice with custom FieldTypes -- see SOLR-6330\n\n    if (null == value) {\n      out.add(null);\n    } else if (value instanceof Date) {\n      out.add(TrieDateField.formatExternal((Date) value));\n    } else {\n      out.add(value.toString());\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3f6c7717a0f1decd1668144537943efcc70cd95","date":1459359762,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/PivotFacetValue#getValuePath().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/PivotFacetValue#getValuePath().mjava","sourceNew":"  /** \n   * A recursive method that walks up the tree of pivot fields/values to build \n   * a list of the String representations of the values that lead down to this \n   * PivotFacetValue.\n   *\n   * @return a mutable List of the pivot value Strings leading down to and including \n   *      this pivot value, will never be null but may contain nulls\n   * @see PivotFacetField#getValuePath\n   */\n  public List<String> getValuePath() {\n    List<String> out = parentPivot.getValuePath();\n\n    // Note: this code doesn't play nice with custom FieldTypes -- see SOLR-6330\n\n    if (null == value) {\n      out.add(null);\n    } else if (value instanceof Date) {\n      out.add(((Date) value).toInstant().toString());\n    } else {\n      out.add(value.toString());\n    }\n    return out;\n  }\n\n","sourceOld":"  /** \n   * A recursive method that walks up the tree of pivot fields/values to build \n   * a list of the String representations of the values that lead down to this \n   * PivotFacetValue.\n   *\n   * @return a mutable List of the pivot value Strings leading down to and including \n   *      this pivot value, will never be null but may contain nulls\n   * @see PivotFacetField#getValuePath\n   */\n  public List<String> getValuePath() {\n    List<String> out = parentPivot.getValuePath();\n\n    // Note: this code doesn't play nice with custom FieldTypes -- see SOLR-6330\n\n    if (null == value) {\n      out.add(null);\n    } else if (value instanceof Date) {\n      out.add(DateFormatUtil.formatExternal((Date) value));\n    } else {\n      out.add(value.toString());\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"92751ba9273251eab6a2e379ec42a1697a32ff96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d3f6c7717a0f1decd1668144537943efcc70cd95":["0c38a05f7a7b43c2dabbd25f12f9941c64bb2331"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3f6c7717a0f1decd1668144537943efcc70cd95"],"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331":["92751ba9273251eab6a2e379ec42a1697a32ff96"]},"commit2Childs":{"92751ba9273251eab6a2e379ec42a1697a32ff96":["0c38a05f7a7b43c2dabbd25f12f9941c64bb2331"],"d3f6c7717a0f1decd1668144537943efcc70cd95":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["92751ba9273251eab6a2e379ec42a1697a32ff96"],"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331":["d3f6c7717a0f1decd1668144537943efcc70cd95"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}