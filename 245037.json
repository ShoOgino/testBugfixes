{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new DocMaker();\n    Properties properties = new Properties();\n    properties.setProperty(\"content.source\", \"org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource\");\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","sourceOld":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new DocMaker();\n    Properties properties = new Properties();\n    properties.setProperty(\"content.source\", \"org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource\");\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e76e769a8863037082ce292c260151d588e6724e","date":1337253730,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n    }\n    \n    Properties properties = new Properties();\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    Config config = new Config(properties);\n\n    ContentSource source = new EnwikiContentSource();\n    source.setConfig(config);\n    \n    DocMaker docMaker = new DocMaker();\n    docMaker.setConfig(config, source);\n    docMaker.resetInputs();\n    if (wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","sourceOld":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new DocMaker();\n    Properties properties = new Properties();\n    properties.setProperty(\"content.source\", \"org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource\");\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n    }\n    \n    Properties properties = new Properties();\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    Config config = new Config(properties);\n\n    ContentSource source = new EnwikiContentSource();\n    source.setConfig(config);\n    \n    DocMaker docMaker = new DocMaker();\n    docMaker.setConfig(config, source);\n    docMaker.resetInputs();\n    if (wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","sourceOld":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new DocMaker();\n    Properties properties = new Properties();\n    properties.setProperty(\"content.source\", \"org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource\");\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws Exception {\n\n    Path wikipedia = null;\n    Path outputDir = Paths.get(\"enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = Paths.get(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = Paths.get(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n    }\n    \n    Properties properties = new Properties();\n    properties.setProperty(\"docs.file\", wikipedia.toAbsolutePath().toString());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    Config config = new Config(properties);\n\n    ContentSource source = new EnwikiContentSource();\n    source.setConfig(config);\n    \n    DocMaker docMaker = new DocMaker();\n    docMaker.setConfig(config, source);\n    docMaker.resetInputs();\n    if (Files.exists(wikipedia)) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      Files.createDirectories(outputDir);\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","sourceOld":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n    }\n    \n    Properties properties = new Properties();\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    Config config = new Config(properties);\n\n    ContentSource source = new EnwikiContentSource();\n    source.setConfig(config);\n    \n    DocMaker docMaker = new DocMaker();\n    docMaker.setConfig(config, source);\n    docMaker.resetInputs();\n    if (wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e76e769a8863037082ce292c260151d588e6724e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["e76e769a8863037082ce292c260151d588e6724e"],"ef0d8a69209261514c5739c770bba706c2308450":["b89678825b68eccaf09e6ab71675fc0b0af1e099","e76e769a8863037082ce292c260151d588e6724e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4abec28b874149a7223e32cc7a01704c27790de"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e76e769a8863037082ce292c260151d588e6724e","ef0d8a69209261514c5739c770bba706c2308450"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"e76e769a8863037082ce292c260151d588e6724e":["f4abec28b874149a7223e32cc7a01704c27790de","ef0d8a69209261514c5739c770bba706c2308450"],"f4abec28b874149a7223e32cc7a01704c27790de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ef0d8a69209261514c5739c770bba706c2308450":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}