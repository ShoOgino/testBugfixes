{"path":"lucene/misc/src/test/org/apache/lucene/index/sorter/SortingLeafReaderTest#beforeClassSortingLeafReaderTest().mjava","commits":[{"id":"c9644a32526f2e2ae87543b00e8be543aa25f29c","date":1411548458,"type":1,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/sorter/SortingLeafReaderTest#beforeClassSortingLeafReaderTest().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/sorter/SortingLeafReaderTest#beforeClassSortingAtomicReaderTest().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassSortingLeafReaderTest() throws Exception {\n    \n    // sort the index by id (as integer, in NUMERIC_DV_FIELD)\n    Sort sort = new Sort(new SortField(NUMERIC_DV_FIELD, SortField.Type.INT));\n    final Sorter.DocMap docMap = new Sorter(sort).sort(reader);\n \n    // Sorter.compute also sorts the values\n    NumericDocValues dv = reader.getNumericDocValues(NUMERIC_DV_FIELD);\n    sortedValues = new Integer[reader.maxDoc()];\n    for (int i = 0; i < reader.maxDoc(); ++i) {\n      sortedValues[docMap.oldToNew(i)] = (int)dv.get(i);\n    }\n    if (VERBOSE) {\n      System.out.println(\"docMap: \" + docMap);\n      System.out.println(\"sortedValues: \" + Arrays.toString(sortedValues));\n    }\n    \n    // sort the index by id (as integer, in NUMERIC_DV_FIELD)\n    reader = SortingLeafReader.wrap(reader, sort);\n    \n    if (VERBOSE) {\n      System.out.print(\"mapped-deleted-docs: \");\n      Bits mappedLiveDocs = reader.getLiveDocs();\n      for (int i = 0; i < mappedLiveDocs.length(); i++) {\n        if (!mappedLiveDocs.get(i)) {\n          System.out.print(i + \" \");\n        }\n      }\n      System.out.println();\n    }\n    \n    TestUtil.checkReader(reader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassSortingAtomicReaderTest() throws Exception {\n    \n    // sort the index by id (as integer, in NUMERIC_DV_FIELD)\n    Sort sort = new Sort(new SortField(NUMERIC_DV_FIELD, SortField.Type.INT));\n    final Sorter.DocMap docMap = new Sorter(sort).sort(reader);\n \n    // Sorter.compute also sorts the values\n    NumericDocValues dv = reader.getNumericDocValues(NUMERIC_DV_FIELD);\n    sortedValues = new Integer[reader.maxDoc()];\n    for (int i = 0; i < reader.maxDoc(); ++i) {\n      sortedValues[docMap.oldToNew(i)] = (int)dv.get(i);\n    }\n    if (VERBOSE) {\n      System.out.println(\"docMap: \" + docMap);\n      System.out.println(\"sortedValues: \" + Arrays.toString(sortedValues));\n    }\n    \n    // sort the index by id (as integer, in NUMERIC_DV_FIELD)\n    reader = SortingLeafReader.wrap(reader, sort);\n    \n    if (VERBOSE) {\n      System.out.print(\"mapped-deleted-docs: \");\n      Bits mappedLiveDocs = reader.getLiveDocs();\n      for (int i = 0; i < mappedLiveDocs.length(); i++) {\n        if (!mappedLiveDocs.get(i)) {\n          System.out.print(i + \" \");\n        }\n      }\n      System.out.println();\n    }\n    \n    TestUtil.checkReader(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c17ec76fa103f80e80ed20ee425dbc357fb1356f","date":1414420673,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/sorter/SortingLeafReaderTest#beforeClassSortingLeafReaderTest().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/sorter/SortingLeafReaderTest#beforeClassSortingLeafReaderTest().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassSortingLeafReaderTest() throws Exception {\n    // NOTE: index was created by by super's @BeforeClass\n    \n    // sort the index by id (as integer, in NUMERIC_DV_FIELD)\n    Sort sort = new Sort(new SortField(NUMERIC_DV_FIELD, SortField.Type.INT));\n    final Sorter.DocMap docMap = new Sorter(sort).sort(unsortedReader);\n \n    // Sorter.compute also sorts the values\n    NumericDocValues dv = unsortedReader.getNumericDocValues(NUMERIC_DV_FIELD);\n    sortedValues = new Integer[unsortedReader.maxDoc()];\n    for (int i = 0; i < unsortedReader.maxDoc(); ++i) {\n      sortedValues[docMap.oldToNew(i)] = (int)dv.get(i);\n    }\n    if (VERBOSE) {\n      System.out.println(\"docMap: \" + docMap);\n      System.out.println(\"sortedValues: \" + Arrays.toString(sortedValues));\n    }\n    \n    // sort the index by id (as integer, in NUMERIC_DV_FIELD)\n    sortedReader = SortingLeafReader.wrap(unsortedReader, sort);\n    \n    if (VERBOSE) {\n      System.out.print(\"mapped-deleted-docs: \");\n      Bits mappedLiveDocs = sortedReader.getLiveDocs();\n      for (int i = 0; i < mappedLiveDocs.length(); i++) {\n        if (!mappedLiveDocs.get(i)) {\n          System.out.print(i + \" \");\n        }\n      }\n      System.out.println();\n    }\n    \n    TestUtil.checkReader(sortedReader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassSortingLeafReaderTest() throws Exception {\n    \n    // sort the index by id (as integer, in NUMERIC_DV_FIELD)\n    Sort sort = new Sort(new SortField(NUMERIC_DV_FIELD, SortField.Type.INT));\n    final Sorter.DocMap docMap = new Sorter(sort).sort(reader);\n \n    // Sorter.compute also sorts the values\n    NumericDocValues dv = reader.getNumericDocValues(NUMERIC_DV_FIELD);\n    sortedValues = new Integer[reader.maxDoc()];\n    for (int i = 0; i < reader.maxDoc(); ++i) {\n      sortedValues[docMap.oldToNew(i)] = (int)dv.get(i);\n    }\n    if (VERBOSE) {\n      System.out.println(\"docMap: \" + docMap);\n      System.out.println(\"sortedValues: \" + Arrays.toString(sortedValues));\n    }\n    \n    // sort the index by id (as integer, in NUMERIC_DV_FIELD)\n    reader = SortingLeafReader.wrap(reader, sort);\n    \n    if (VERBOSE) {\n      System.out.print(\"mapped-deleted-docs: \");\n      Bits mappedLiveDocs = reader.getLiveDocs();\n      for (int i = 0; i < mappedLiveDocs.length(); i++) {\n        if (!mappedLiveDocs.get(i)) {\n          System.out.print(i + \" \");\n        }\n      }\n      System.out.println();\n    }\n    \n    TestUtil.checkReader(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e","date":1419346542,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/SortingLeafReaderTest#beforeClassSortingLeafReaderTest().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/sorter/SortingLeafReaderTest#beforeClassSortingLeafReaderTest().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClassSortingLeafReaderTest() throws Exception {\n    // NOTE: index was created by by super's @BeforeClass\n    \n    // sort the index by id (as integer, in NUMERIC_DV_FIELD)\n    Sort sort = new Sort(new SortField(NUMERIC_DV_FIELD, SortField.Type.INT));\n    final Sorter.DocMap docMap = new Sorter(sort).sort(unsortedReader);\n \n    // Sorter.compute also sorts the values\n    NumericDocValues dv = unsortedReader.getNumericDocValues(NUMERIC_DV_FIELD);\n    sortedValues = new Integer[unsortedReader.maxDoc()];\n    for (int i = 0; i < unsortedReader.maxDoc(); ++i) {\n      sortedValues[docMap.oldToNew(i)] = (int)dv.get(i);\n    }\n    if (VERBOSE) {\n      System.out.println(\"docMap: \" + docMap);\n      System.out.println(\"sortedValues: \" + Arrays.toString(sortedValues));\n    }\n    \n    // sort the index by id (as integer, in NUMERIC_DV_FIELD)\n    sortedReader = SortingLeafReader.wrap(unsortedReader, sort);\n    \n    if (VERBOSE) {\n      System.out.print(\"mapped-deleted-docs: \");\n      Bits mappedLiveDocs = sortedReader.getLiveDocs();\n      for (int i = 0; i < mappedLiveDocs.length(); i++) {\n        if (!mappedLiveDocs.get(i)) {\n          System.out.print(i + \" \");\n        }\n      }\n      System.out.println();\n    }\n    \n    TestUtil.checkReader(sortedReader);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClassSortingLeafReaderTest() throws Exception {\n    // NOTE: index was created by by super's @BeforeClass\n    \n    // sort the index by id (as integer, in NUMERIC_DV_FIELD)\n    Sort sort = new Sort(new SortField(NUMERIC_DV_FIELD, SortField.Type.INT));\n    final Sorter.DocMap docMap = new Sorter(sort).sort(unsortedReader);\n \n    // Sorter.compute also sorts the values\n    NumericDocValues dv = unsortedReader.getNumericDocValues(NUMERIC_DV_FIELD);\n    sortedValues = new Integer[unsortedReader.maxDoc()];\n    for (int i = 0; i < unsortedReader.maxDoc(); ++i) {\n      sortedValues[docMap.oldToNew(i)] = (int)dv.get(i);\n    }\n    if (VERBOSE) {\n      System.out.println(\"docMap: \" + docMap);\n      System.out.println(\"sortedValues: \" + Arrays.toString(sortedValues));\n    }\n    \n    // sort the index by id (as integer, in NUMERIC_DV_FIELD)\n    sortedReader = SortingLeafReader.wrap(unsortedReader, sort);\n    \n    if (VERBOSE) {\n      System.out.print(\"mapped-deleted-docs: \");\n      Bits mappedLiveDocs = sortedReader.getLiveDocs();\n      for (int i = 0; i < mappedLiveDocs.length(); i++) {\n        if (!mappedLiveDocs.get(i)) {\n          System.out.print(i + \" \");\n        }\n      }\n      System.out.println();\n    }\n    \n    TestUtil.checkReader(sortedReader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c9644a32526f2e2ae87543b00e8be543aa25f29c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c17ec76fa103f80e80ed20ee425dbc357fb1356f":["c9644a32526f2e2ae87543b00e8be543aa25f29c"],"82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e":["c17ec76fa103f80e80ed20ee425dbc357fb1356f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e"]},"commit2Childs":{"c9644a32526f2e2ae87543b00e8be543aa25f29c":["c17ec76fa103f80e80ed20ee425dbc357fb1356f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9644a32526f2e2ae87543b00e8be543aa25f29c"],"c17ec76fa103f80e80ed20ee425dbc357fb1356f":["82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e"],"82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}