{"path":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState.ShardIndexSearcher#search(Query,int,Sort).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState.ShardIndexSearcher#search(Query,int,Sort).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState.ShardIndexSearcher#search(Query,int,Sort).mjava","sourceNew":"      @Override\n      public TopFieldDocs search(Query query, int numHits, Sort sort) throws IOException {\n        assert sort != null;\n        final TopDocs[] shardHits = new TopDocs[nodeVersions.length];\n        for(int nodeID=0;nodeID<nodeVersions.length;nodeID++) {\n          if (nodeID == myNodeID) {\n            // My node; run using local shard searcher we\n            // already aquired:\n            shardHits[nodeID] = localSearch(query, numHits, sort);\n          } else {\n            shardHits[nodeID] = searchNode(nodeID, nodeVersions, query, sort, numHits, null);\n          }\n        }\n\n        // Merge:\n        return (TopFieldDocs) TopDocs.merge(sort, numHits, shardHits);\n      }\n\n","sourceOld":"      @Override\n      public TopFieldDocs search(Query query, int numHits, Sort sort) throws IOException {\n        assert sort != null;\n        final TopDocs[] shardHits = new TopDocs[nodeVersions.length];\n        for(int nodeID=0;nodeID<nodeVersions.length;nodeID++) {\n          if (nodeID == myNodeID) {\n            // My node; run using local shard searcher we\n            // already aquired:\n            shardHits[nodeID] = localSearch(query, numHits, sort);\n          } else {\n            shardHits[nodeID] = searchNode(nodeID, nodeVersions, query, sort, numHits, null);\n          }\n        }\n\n        // Merge:\n        return (TopFieldDocs) TopDocs.merge(sort, numHits, shardHits);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState.ShardIndexSearcher#search(Query,int,Sort).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState.ShardIndexSearcher#search(Query,int,Sort).mjava","sourceNew":"      @Override\n      public TopFieldDocs search(Query query, int numHits, Sort sort) throws IOException {\n        assert sort != null;\n        final TopFieldDocs[] shardHits = new TopFieldDocs[nodeVersions.length];\n        for(int nodeID=0;nodeID<nodeVersions.length;nodeID++) {\n          if (nodeID == myNodeID) {\n            // My node; run using local shard searcher we\n            // already aquired:\n            shardHits[nodeID] = localSearch(query, numHits, sort);\n          } else {\n            shardHits[nodeID] = (TopFieldDocs) searchNode(nodeID, nodeVersions, query, sort, numHits, null);\n          }\n        }\n\n        // Merge:\n        return (TopFieldDocs) TopDocs.merge(sort, numHits, shardHits);\n      }\n\n","sourceOld":"      @Override\n      public TopFieldDocs search(Query query, int numHits, Sort sort) throws IOException {\n        assert sort != null;\n        final TopDocs[] shardHits = new TopDocs[nodeVersions.length];\n        for(int nodeID=0;nodeID<nodeVersions.length;nodeID++) {\n          if (nodeID == myNodeID) {\n            // My node; run using local shard searcher we\n            // already aquired:\n            shardHits[nodeID] = localSearch(query, numHits, sort);\n          } else {\n            shardHits[nodeID] = searchNode(nodeID, nodeVersions, query, sort, numHits, null);\n          }\n        }\n\n        // Merge:\n        return (TopFieldDocs) TopDocs.merge(sort, numHits, shardHits);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4440700c9558c81d1ac93947ded28513c12cdf4f","date":1423238711,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState.ShardIndexSearcher#search(Query,int,Sort).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState.ShardIndexSearcher#search(Query,int,Sort).mjava","sourceNew":"      @Override\n      public TopFieldDocs search(Query query, int numHits, Sort sort) throws IOException {\n        assert sort != null;\n        final TopFieldDocs[] shardHits = new TopFieldDocs[nodeVersions.length];\n        for(int nodeID=0;nodeID<nodeVersions.length;nodeID++) {\n          if (nodeID == myNodeID) {\n            // My node; run using local shard searcher we\n            // already aquired:\n            shardHits[nodeID] = localSearch(query, numHits, sort);\n          } else {\n            shardHits[nodeID] = (TopFieldDocs) searchNode(nodeID, nodeVersions, query, sort, numHits, null);\n          }\n        }\n\n        // Merge:\n        return TopDocs.merge(sort, numHits, shardHits);\n      }\n\n","sourceOld":"      @Override\n      public TopFieldDocs search(Query query, int numHits, Sort sort) throws IOException {\n        assert sort != null;\n        final TopFieldDocs[] shardHits = new TopFieldDocs[nodeVersions.length];\n        for(int nodeID=0;nodeID<nodeVersions.length;nodeID++) {\n          if (nodeID == myNodeID) {\n            // My node; run using local shard searcher we\n            // already aquired:\n            shardHits[nodeID] = localSearch(query, numHits, sort);\n          } else {\n            shardHits[nodeID] = (TopFieldDocs) searchNode(nodeID, nodeVersions, query, sort, numHits, null);\n          }\n        }\n\n        // Merge:\n        return (TopFieldDocs) TopDocs.merge(sort, numHits, shardHits);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36510a8e3c1ec60d366b45f8f716e9dc47589661","date":1561989412,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState.ShardIndexSearcher#search(Query,int,Sort).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState.ShardIndexSearcher#search(Query,int,Sort).mjava","sourceNew":"      @Override\n      public TopFieldDocs search(Query query, int numHits, Sort sort) throws IOException {\n        assert sort != null;\n        final TopFieldDocs[] shardHits = new TopFieldDocs[nodeVersions.length];\n        for(int nodeID=0;nodeID<nodeVersions.length;nodeID++) {\n          if (nodeID == myNodeID) {\n            // My node; run using local shard searcher we\n            // already aquired:\n            shardHits[nodeID] = localSearch(query, numHits, sort);\n          } else {\n            shardHits[nodeID] = (TopFieldDocs) searchNode(nodeID, nodeVersions, query, sort, numHits, null);\n          }\n\n          for (int i = 0; i < shardHits[nodeID].scoreDocs.length; i++) {\n            shardHits[nodeID].scoreDocs[i].shardIndex = nodeID;\n          }\n        }\n\n        // Merge:\n        return TopDocs.merge(sort, numHits, shardHits);\n      }\n\n","sourceOld":"      @Override\n      public TopFieldDocs search(Query query, int numHits, Sort sort) throws IOException {\n        assert sort != null;\n        final TopFieldDocs[] shardHits = new TopFieldDocs[nodeVersions.length];\n        for(int nodeID=0;nodeID<nodeVersions.length;nodeID++) {\n          if (nodeID == myNodeID) {\n            // My node; run using local shard searcher we\n            // already aquired:\n            shardHits[nodeID] = localSearch(query, numHits, sort);\n          } else {\n            shardHits[nodeID] = (TopFieldDocs) searchNode(nodeID, nodeVersions, query, sort, numHits, null);\n          }\n        }\n\n        // Merge:\n        return TopDocs.merge(sort, numHits, shardHits);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4f6b0fb6f08ac48f438f03002a283a63cb9992","date":1561992803,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState.ShardIndexSearcher#search(Query,int,Sort).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState.ShardIndexSearcher#search(Query,int,Sort).mjava","sourceNew":"      @Override\n      public TopFieldDocs search(Query query, int numHits, Sort sort) throws IOException {\n        assert sort != null;\n        final TopFieldDocs[] shardHits = new TopFieldDocs[nodeVersions.length];\n        for(int nodeID=0;nodeID<nodeVersions.length;nodeID++) {\n          if (nodeID == myNodeID) {\n            // My node; run using local shard searcher we\n            // already aquired:\n            shardHits[nodeID] = localSearch(query, numHits, sort);\n          } else {\n            shardHits[nodeID] = (TopFieldDocs) searchNode(nodeID, nodeVersions, query, sort, numHits, null);\n          }\n        }\n\n        // Merge:\n        return TopDocs.merge(sort, numHits, shardHits);\n      }\n\n","sourceOld":"      @Override\n      public TopFieldDocs search(Query query, int numHits, Sort sort) throws IOException {\n        assert sort != null;\n        final TopFieldDocs[] shardHits = new TopFieldDocs[nodeVersions.length];\n        for(int nodeID=0;nodeID<nodeVersions.length;nodeID++) {\n          if (nodeID == myNodeID) {\n            // My node; run using local shard searcher we\n            // already aquired:\n            shardHits[nodeID] = localSearch(query, numHits, sort);\n          } else {\n            shardHits[nodeID] = (TopFieldDocs) searchNode(nodeID, nodeVersions, query, sort, numHits, null);\n          }\n\n          for (int i = 0; i < shardHits[nodeID].scoreDocs.length; i++) {\n            shardHits[nodeID].scoreDocs[i].shardIndex = nodeID;\n          }\n        }\n\n        // Merge:\n        return TopDocs.merge(sort, numHits, shardHits);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fccd4a691aac1aff06ab8110d8693514a34160c3","date":1562092518,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState.ShardIndexSearcher#search(Query,int,Sort).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState.ShardIndexSearcher#search(Query,int,Sort).mjava","sourceNew":"      @Override\n      public TopFieldDocs search(Query query, int numHits, Sort sort) throws IOException {\n        assert sort != null;\n        final TopFieldDocs[] shardHits = new TopFieldDocs[nodeVersions.length];\n        for(int nodeID=0;nodeID<nodeVersions.length;nodeID++) {\n          if (nodeID == myNodeID) {\n            // My node; run using local shard searcher we\n            // already aquired:\n            shardHits[nodeID] = localSearch(query, numHits, sort);\n          } else {\n            shardHits[nodeID] = (TopFieldDocs) searchNode(nodeID, nodeVersions, query, sort, numHits, null);\n          }\n\n          for (int i = 0; i < shardHits[nodeID].scoreDocs.length; i++) {\n            shardHits[nodeID].scoreDocs[i].shardIndex = nodeID;\n          }\n        }\n\n        // Merge:\n        return TopDocs.merge(sort, numHits, shardHits);\n      }\n\n","sourceOld":"      @Override\n      public TopFieldDocs search(Query query, int numHits, Sort sort) throws IOException {\n        assert sort != null;\n        final TopFieldDocs[] shardHits = new TopFieldDocs[nodeVersions.length];\n        for(int nodeID=0;nodeID<nodeVersions.length;nodeID++) {\n          if (nodeID == myNodeID) {\n            // My node; run using local shard searcher we\n            // already aquired:\n            shardHits[nodeID] = localSearch(query, numHits, sort);\n          } else {\n            shardHits[nodeID] = (TopFieldDocs) searchNode(nodeID, nodeVersions, query, sort, numHits, null);\n          }\n        }\n\n        // Merge:\n        return TopDocs.merge(sort, numHits, shardHits);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"36510a8e3c1ec60d366b45f8f716e9dc47589661":["4440700c9558c81d1ac93947ded28513c12cdf4f"],"fb17639909a369c1e64866842e5c213440acc17e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"fccd4a691aac1aff06ab8110d8693514a34160c3":["5f4f6b0fb6f08ac48f438f03002a283a63cb9992"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4440700c9558c81d1ac93947ded28513c12cdf4f":["fb17639909a369c1e64866842e5c213440acc17e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fccd4a691aac1aff06ab8110d8693514a34160c3"],"5f4f6b0fb6f08ac48f438f03002a283a63cb9992":["36510a8e3c1ec60d366b45f8f716e9dc47589661"]},"commit2Childs":{"36510a8e3c1ec60d366b45f8f716e9dc47589661":["5f4f6b0fb6f08ac48f438f03002a283a63cb9992"],"fb17639909a369c1e64866842e5c213440acc17e":["4440700c9558c81d1ac93947ded28513c12cdf4f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fb17639909a369c1e64866842e5c213440acc17e"],"fccd4a691aac1aff06ab8110d8693514a34160c3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4440700c9558c81d1ac93947ded28513c12cdf4f":["36510a8e3c1ec60d366b45f8f716e9dc47589661"],"5f4f6b0fb6f08ac48f438f03002a283a63cb9992":["fccd4a691aac1aff06ab8110d8693514a34160c3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}