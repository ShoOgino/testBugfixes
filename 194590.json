{"path":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionMatchQuery#testRangeMatching().mjava","commits":[{"id":"c5bceed3ccfd33baff7dde1a56def37b6ccd66f6","date":1484565333,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionMatchQuery#testRangeMatching().mjava","pathOld":"/dev/null","sourceNew":"  public void testRangeMatching() throws IOException {\n    DoubleValuesSource in = DoubleValuesSource.fromFloatField(FLOAT_FIELD);\n    FunctionMatchQuery fmq = new FunctionMatchQuery(in, d -> d >= 2 && d < 4);\n    TopDocs docs = searcher.search(fmq, 10);\n\n    assertEquals(2, docs.totalHits);\n    assertEquals(9, docs.scoreDocs[0].doc);\n    assertEquals(13, docs.scoreDocs[1].doc);\n\n    QueryUtils.check(random(), fmq, searcher, rarely());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"507e7decdf00981d09a74632ea30299a4ce6ba72","date":1484600874,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionMatchQuery#testRangeMatching().mjava","pathOld":"/dev/null","sourceNew":"  public void testRangeMatching() throws IOException {\n    DoubleValuesSource in = DoubleValuesSource.fromFloatField(FLOAT_FIELD);\n    FunctionMatchQuery fmq = new FunctionMatchQuery(in, d -> d >= 2 && d < 4);\n    TopDocs docs = searcher.search(fmq, 10);\n\n    assertEquals(2, docs.totalHits);\n    assertEquals(9, docs.scoreDocs[0].doc);\n    assertEquals(13, docs.scoreDocs[1].doc);\n\n    QueryUtils.check(random(), fmq, searcher, rarely());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionMatchQuery#testRangeMatching().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionMatchQuery#testRangeMatching().mjava","sourceNew":"  public void testRangeMatching() throws IOException {\n    DoubleValuesSource in = DoubleValuesSource.fromFloatField(FLOAT_FIELD);\n    FunctionMatchQuery fmq = new FunctionMatchQuery(in, d -> d >= 2 && d < 4);\n    TopDocs docs = searcher.search(fmq, 10);\n\n    assertEquals(2, docs.totalHits.value);\n    assertEquals(9, docs.scoreDocs[0].doc);\n    assertEquals(13, docs.scoreDocs[1].doc);\n\n    QueryUtils.check(random(), fmq, searcher, rarely());\n\n  }\n\n","sourceOld":"  public void testRangeMatching() throws IOException {\n    DoubleValuesSource in = DoubleValuesSource.fromFloatField(FLOAT_FIELD);\n    FunctionMatchQuery fmq = new FunctionMatchQuery(in, d -> d >= 2 && d < 4);\n    TopDocs docs = searcher.search(fmq, 10);\n\n    assertEquals(2, docs.totalHits);\n    assertEquals(9, docs.scoreDocs[0].doc);\n    assertEquals(13, docs.scoreDocs[1].doc);\n\n    QueryUtils.check(random(), fmq, searcher, rarely());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c07805e651f52dced5adbc59ff3aefeb7d171ca","date":1598242075,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionMatchQuery#testRangeMatching().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionMatchQuery#testRangeMatching().mjava","sourceNew":"  public void testRangeMatching() throws IOException {\n    FunctionMatchQuery fmq = new FunctionMatchQuery(in, d -> d >= 2 && d < 4);\n    TopDocs docs = searcher.search(fmq, 10);\n\n    assertEquals(2, docs.totalHits.value);\n    assertEquals(9, docs.scoreDocs[0].doc);\n    assertEquals(13, docs.scoreDocs[1].doc);\n\n    QueryUtils.check(random(), fmq, searcher, rarely());\n\n  }\n\n","sourceOld":"  public void testRangeMatching() throws IOException {\n    DoubleValuesSource in = DoubleValuesSource.fromFloatField(FLOAT_FIELD);\n    FunctionMatchQuery fmq = new FunctionMatchQuery(in, d -> d >= 2 && d < 4);\n    TopDocs docs = searcher.search(fmq, 10);\n\n    assertEquals(2, docs.totalHits.value);\n    assertEquals(9, docs.scoreDocs[0].doc);\n    assertEquals(13, docs.scoreDocs[1].doc);\n\n    QueryUtils.check(random(), fmq, searcher, rarely());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83788ad129a5154d5c6562c4e8ce3db48793aada":["c5bceed3ccfd33baff7dde1a56def37b6ccd66f6"],"1c07805e651f52dced5adbc59ff3aefeb7d171ca":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"507e7decdf00981d09a74632ea30299a4ce6ba72":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c5bceed3ccfd33baff7dde1a56def37b6ccd66f6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1c07805e651f52dced5adbc59ff3aefeb7d171ca"],"c5bceed3ccfd33baff7dde1a56def37b6ccd66f6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["507e7decdf00981d09a74632ea30299a4ce6ba72","c5bceed3ccfd33baff7dde1a56def37b6ccd66f6"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["1c07805e651f52dced5adbc59ff3aefeb7d171ca"],"1c07805e651f52dced5adbc59ff3aefeb7d171ca":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"507e7decdf00981d09a74632ea30299a4ce6ba72":[],"c5bceed3ccfd33baff7dde1a56def37b6ccd66f6":["83788ad129a5154d5c6562c4e8ce3db48793aada","507e7decdf00981d09a74632ea30299a4ce6ba72"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["507e7decdf00981d09a74632ea30299a4ce6ba72","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}