{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","sourceNew":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"partnum\", \"Q36\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new Field(\"partnum\", \"Q37\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir);\n    DocsEnum td = _TestUtil.docs(random(),\n                                 reader,\n                                 \"partnum\",\n                                 new BytesRef(\"Q36\"),\n                                 MultiFields.getLiveDocs(reader),\n                                 null,\n                                 false);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = _TestUtil.docs(random(),\n                        reader,\n                        \"partnum\",\n                        new BytesRef(\"Q37\"),\n                        MultiFields.getLiveDocs(reader),\n                        null,\n                        false);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","sourceOld":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"partnum\", \"Q36\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new Field(\"partnum\", \"Q37\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir);\n    DocsEnum td = _TestUtil.docs(random(),\n                                 reader,\n                                 \"partnum\",\n                                 new BytesRef(\"Q36\"),\n                                 MultiFields.getLiveDocs(reader),\n                                 null,\n                                 false);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = _TestUtil.docs(random(),\n                        reader,\n                        \"partnum\",\n                        new BytesRef(\"Q37\"),\n                        MultiFields.getLiveDocs(reader),\n                        null,\n                        false);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","sourceNew":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"partnum\", \"Q36\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new Field(\"partnum\", \"Q37\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    DocsEnum td = _TestUtil.docs(random(),\n                                 reader,\n                                 \"partnum\",\n                                 new BytesRef(\"Q36\"),\n                                 MultiFields.getLiveDocs(reader),\n                                 null,\n                                 false);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = _TestUtil.docs(random(),\n                        reader,\n                        \"partnum\",\n                        new BytesRef(\"Q37\"),\n                        MultiFields.getLiveDocs(reader),\n                        null,\n                        false);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","sourceOld":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"partnum\", \"Q36\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new Field(\"partnum\", \"Q37\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir);\n    DocsEnum td = _TestUtil.docs(random(),\n                                 reader,\n                                 \"partnum\",\n                                 new BytesRef(\"Q36\"),\n                                 MultiFields.getLiveDocs(reader),\n                                 null,\n                                 false);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = _TestUtil.docs(random(),\n                        reader,\n                        \"partnum\",\n                        new BytesRef(\"Q37\"),\n                        MultiFields.getLiveDocs(reader),\n                        null,\n                        false);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","sourceNew":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    DocsEnum td = _TestUtil.docs(random(),\n                                 reader,\n                                 \"partnum\",\n                                 new BytesRef(\"Q36\"),\n                                 MultiFields.getLiveDocs(reader),\n                                 null,\n                                 false);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = _TestUtil.docs(random(),\n                        reader,\n                        \"partnum\",\n                        new BytesRef(\"Q37\"),\n                        MultiFields.getLiveDocs(reader),\n                        null,\n                        false);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","sourceOld":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"partnum\", \"Q36\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new Field(\"partnum\", \"Q37\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    DocsEnum td = _TestUtil.docs(random(),\n                                 reader,\n                                 \"partnum\",\n                                 new BytesRef(\"Q36\"),\n                                 MultiFields.getLiveDocs(reader),\n                                 null,\n                                 false);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = _TestUtil.docs(random(),\n                        reader,\n                        \"partnum\",\n                        new BytesRef(\"Q37\"),\n                        MultiFields.getLiveDocs(reader),\n                        null,\n                        false);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","bugFix":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"02331260bb246364779cb6f04919ca47900d01bb","date":1343749884,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","sourceNew":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    DocsEnum td = _TestUtil.docs(random(),\n                                 reader,\n                                 \"partnum\",\n                                 new BytesRef(\"Q36\"),\n                                 MultiFields.getLiveDocs(reader),\n                                 null,\n                                 0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = _TestUtil.docs(random(),\n                        reader,\n                        \"partnum\",\n                        new BytesRef(\"Q37\"),\n                        MultiFields.getLiveDocs(reader),\n                        null,\n                        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","sourceOld":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    DocsEnum td = _TestUtil.docs(random(),\n                                 reader,\n                                 \"partnum\",\n                                 new BytesRef(\"Q36\"),\n                                 MultiFields.getLiveDocs(reader),\n                                 null,\n                                 false);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = _TestUtil.docs(random(),\n                        reader,\n                        \"partnum\",\n                        new BytesRef(\"Q37\"),\n                        MultiFields.getLiveDocs(reader),\n                        null,\n                        false);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","bugFix":["872cff1d3a554e0cd64014cd97f88d3002b0f491"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","sourceNew":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    DocsEnum td = _TestUtil.docs(random(),\n                                 reader,\n                                 \"partnum\",\n                                 new BytesRef(\"Q36\"),\n                                 MultiFields.getLiveDocs(reader),\n                                 null,\n                                 0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = _TestUtil.docs(random(),\n                        reader,\n                        \"partnum\",\n                        new BytesRef(\"Q37\"),\n                        MultiFields.getLiveDocs(reader),\n                        null,\n                        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","sourceOld":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    DocsEnum td = _TestUtil.docs(random(),\n                                 reader,\n                                 \"partnum\",\n                                 new BytesRef(\"Q36\"),\n                                 MultiFields.getLiveDocs(reader),\n                                 null,\n                                 false);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = _TestUtil.docs(random(),\n                        reader,\n                        \"partnum\",\n                        new BytesRef(\"Q37\"),\n                        MultiFields.getLiveDocs(reader),\n                        null,\n                        false);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","sourceNew":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    DocsEnum td = _TestUtil.docs(random(),\n                                 reader,\n                                 \"partnum\",\n                                 new BytesRef(\"Q36\"),\n                                 MultiFields.getLiveDocs(reader),\n                                 null,\n                                 0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = _TestUtil.docs(random(),\n                        reader,\n                        \"partnum\",\n                        new BytesRef(\"Q37\"),\n                        MultiFields.getLiveDocs(reader),\n                        null,\n                        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","sourceOld":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    DocsEnum td = _TestUtil.docs(random(),\n                                 reader,\n                                 \"partnum\",\n                                 new BytesRef(\"Q36\"),\n                                 MultiFields.getLiveDocs(reader),\n                                 null,\n                                 false);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = _TestUtil.docs(random(),\n                        reader,\n                        \"partnum\",\n                        new BytesRef(\"Q37\"),\n                        MultiFields.getLiveDocs(reader),\n                        null,\n                        false);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","sourceNew":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    DocsEnum td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q36\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q37\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","sourceOld":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    DocsEnum td = _TestUtil.docs(random(),\n                                 reader,\n                                 \"partnum\",\n                                 new BytesRef(\"Q36\"),\n                                 MultiFields.getLiveDocs(reader),\n                                 null,\n                                 0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = _TestUtil.docs(random(),\n                        reader,\n                        \"partnum\",\n                        new BytesRef(\"Q37\"),\n                        MultiFields.getLiveDocs(reader),\n                        null,\n                        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","sourceNew":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.shutdown();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    DocsEnum td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q36\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q37\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","sourceOld":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    DocsEnum td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q36\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q37\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","sourceNew":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    DocsEnum td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q36\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q37\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","sourceOld":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.shutdown();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    DocsEnum td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q36\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q37\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","sourceNew":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    PostingsEnum td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q36\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q37\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","sourceOld":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    DocsEnum td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q36\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q37\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","sourceNew":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    Analyzer analyzer = new KeywordAnalyzer();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(analyzer));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    PostingsEnum td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q36\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q37\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    analyzer.close();\n  }\n\n","sourceOld":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    PostingsEnum td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q36\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q37\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","sourceNew":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    Analyzer analyzer = new KeywordAnalyzer();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(analyzer));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    PostingsEnum td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q36\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q37\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    analyzer.close();\n  }\n\n","sourceOld":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(new KeywordAnalyzer()));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    PostingsEnum td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q36\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q37\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","sourceNew":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    Analyzer analyzer = new KeywordAnalyzer();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(analyzer));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    PostingsEnum td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q36\"),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q37\"),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    analyzer.close();\n  }\n\n","sourceOld":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    Analyzer analyzer = new KeywordAnalyzer();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(analyzer));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    PostingsEnum td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q36\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q37\"),\n        MultiFields.getLiveDocs(reader),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    analyzer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestKeywordAnalyzer#testMutipleDocument().mjava","sourceNew":"  public void testMutipleDocument() throws Exception {\n    Directory dir = new ByteBuffersDirectory();\n    Analyzer analyzer = new KeywordAnalyzer();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(analyzer));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    PostingsEnum td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q36\"),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q37\"),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    analyzer.close();\n  }\n\n","sourceOld":"  public void testMutipleDocument() throws Exception {\n    RAMDirectory dir = new RAMDirectory();\n    Analyzer analyzer = new KeywordAnalyzer();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(analyzer));\n    Document doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q36\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new TextField(\"partnum\", \"Q37\", Field.Store.YES));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    PostingsEnum td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q36\"),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    td = TestUtil.docs(random(),\n        reader,\n        \"partnum\",\n        new BytesRef(\"Q37\"),\n        null,\n        0);\n    assertTrue(td.nextDoc() != DocIdSetIterator.NO_MORE_DOCS);\n    analyzer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6613659748fe4411a7dcf85266e55db1f95f7315":["02331260bb246364779cb6f04919ca47900d01bb"],"d77dafd89756a5161d244985903e3487ca109182":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"51f5280f31484820499077f41fcdfe92d527d9dc":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["51f5280f31484820499077f41fcdfe92d527d9dc","a56958d7f71a28824f20031ffbb2e13502a0274e"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["a56958d7f71a28824f20031ffbb2e13502a0274e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["04f07771a2a7dd3a395700665ed839c3dae2def2","02331260bb246364779cb6f04919ca47900d01bb"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["04f07771a2a7dd3a395700665ed839c3dae2def2","02331260bb246364779cb6f04919ca47900d01bb"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["6613659748fe4411a7dcf85266e55db1f95f7315"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["51f5280f31484820499077f41fcdfe92d527d9dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"],"02331260bb246364779cb6f04919ca47900d01bb":["04f07771a2a7dd3a395700665ed839c3dae2def2"]},"commit2Childs":{"6613659748fe4411a7dcf85266e55db1f95f7315":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"51f5280f31484820499077f41fcdfe92d527d9dc":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","02331260bb246364779cb6f04919ca47900d01bb"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"0f4464508ee83288c8c4585b533f9faaa93aa314":["d77dafd89756a5161d244985903e3487ca109182"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["51f5280f31484820499077f41fcdfe92d527d9dc"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0f4464508ee83288c8c4585b533f9faaa93aa314"],"02331260bb246364779cb6f04919ca47900d01bb":["6613659748fe4411a7dcf85266e55db1f95f7315","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}