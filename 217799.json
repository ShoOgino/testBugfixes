{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReportTask#genPartialReport(int,LinkedHashMap[String,TaskStats],int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReportTask#genPartialReport(int,LinkedHashMap[String,TaskStats],int).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReportTask#genPartialReport(int,LinkedHashMap[String,TaskStats],int).mjava","sourceNew":"  protected Report genPartialReport(int reported, LinkedHashMap<String,TaskStats> partOfTasks, int totalSize) {\n    String longetOp = longestOp(partOfTasks.values());\n    boolean first = true;\n    StringBuilder sb = new StringBuilder();\n    sb.append(tableTitle(longetOp));\n    sb.append(newline);\n    int lineNum = 0;\n    for (final TaskStats stat : partOfTasks.values()) {\n      if (!first) {\n        sb.append(newline);\n      }\n      first = false;\n      String line = taskReportLine(longetOp,stat);\n      lineNum++;\n      if (partOfTasks.size()>2 && lineNum%2==0) {\n        line = line.replaceAll(\"   \",\" - \");\n      }\n      sb.append(line);\n      int[] byTime = stat.getCountsByTime();\n      if (byTime != null) {\n        sb.append(newline);\n        int end = -1;\n        for(int i=byTime.length-1;i>=0;i--) {\n          if (byTime[i] != 0) {\n            end = i;\n            break;\n          }\n        }\n        if (end != -1) {\n          sb.append(\"  by time:\");\n          for(int i=0;i<end;i++) {\n            sb.append(' ').append(byTime[i]);\n          }\n        }\n      }\n    }\n    \n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,partOfTasks.size(),reported,totalSize);\n  }\n\n","sourceOld":"  protected Report genPartialReport(int reported, LinkedHashMap<String,TaskStats> partOfTasks, int totalSize) {\n    String longetOp = longestOp(partOfTasks.values());\n    boolean first = true;\n    StringBuilder sb = new StringBuilder();\n    sb.append(tableTitle(longetOp));\n    sb.append(newline);\n    int lineNum = 0;\n    for (final TaskStats stat : partOfTasks.values()) {\n      if (!first) {\n        sb.append(newline);\n      }\n      first = false;\n      String line = taskReportLine(longetOp,stat);\n      lineNum++;\n      if (partOfTasks.size()>2 && lineNum%2==0) {\n        line = line.replaceAll(\"   \",\" - \");\n      }\n      sb.append(line);\n      int[] byTime = stat.getCountsByTime();\n      if (byTime != null) {\n        sb.append(newline);\n        int end = -1;\n        for(int i=byTime.length-1;i>=0;i--) {\n          if (byTime[i] != 0) {\n            end = i;\n            break;\n          }\n        }\n        if (end != -1) {\n          sb.append(\"  by time:\");\n          for(int i=0;i<end;i++) {\n            sb.append(' ').append(byTime[i]);\n          }\n        }\n      }\n    }\n    \n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,partOfTasks.size(),reported,totalSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}