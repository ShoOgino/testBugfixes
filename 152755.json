{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createIndexableFields(Shape).mjava","commits":[{"id":"42ea82a615127d578d4d21a6743834c45fa10468","date":1342101990,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createIndexableFields(Shape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createFields(Shape).mjava","sourceNew":"  @Override\n  public IndexableField[] createIndexableFields(Shape shape) {\n    if( shape instanceof Point ) {\n      Point point = (Point)shape;\n      FieldType doubleFieldType = new FieldType(DoubleField.TYPE_NOT_STORED);\n      doubleFieldType.setNumericPrecisionStep(precisionStep);\n      IndexableField[] f = new IndexableField[2];\n      f[0] = new DoubleField(fieldNameX, point.getX(), doubleFieldType);\n      f[1] = new DoubleField(fieldNameY, point.getY(), doubleFieldType);\n      return f;\n    }\n    if( !ignoreIncompatibleGeometry ) {\n      throw new IllegalArgumentException( \"TwoDoublesStrategy can not index: \"+shape );\n    }\n    return new IndexableField[0]; // nothing (solr does not support null)\n  }\n\n","sourceOld":"  @Override\n  public IndexableField[] createFields(Shape shape) {\n    if( shape instanceof Point ) {\n      Point point = (Point)shape;\n      FieldType doubleFieldType = new FieldType(DoubleField.TYPE_NOT_STORED);\n      doubleFieldType.setNumericPrecisionStep(precisionStep);\n      IndexableField[] f = new IndexableField[2];\n      f[0] = new DoubleField(fieldNameX, point.getX(), doubleFieldType);\n      f[1] = new DoubleField(fieldNameY, point.getY(), doubleFieldType);\n      return f;\n    }\n    if( !ignoreIncompatibleGeometry ) {\n      throw new IllegalArgumentException( \"TwoDoublesStrategy can not index: \"+shape );\n    }\n    return new IndexableField[0]; // nothing (solr does not support null)\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createIndexableFields(Shape).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public IndexableField[] createIndexableFields(Shape shape) {\n    if( shape instanceof Point ) {\n      Point point = (Point)shape;\n      FieldType doubleFieldType = new FieldType(DoubleField.TYPE_NOT_STORED);\n      doubleFieldType.setNumericPrecisionStep(precisionStep);\n      IndexableField[] f = new IndexableField[2];\n      f[0] = new DoubleField(fieldNameX, point.getX(), doubleFieldType);\n      f[1] = new DoubleField(fieldNameY, point.getY(), doubleFieldType);\n      return f;\n    }\n    if( !ignoreIncompatibleGeometry ) {\n      throw new IllegalArgumentException( \"TwoDoublesStrategy can not index: \"+shape );\n    }\n    return new IndexableField[0]; // nothing (solr does not support null)\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createIndexableFields(Shape).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public IndexableField[] createIndexableFields(Shape shape) {\n    if( shape instanceof Point ) {\n      Point point = (Point)shape;\n      FieldType doubleFieldType = new FieldType(DoubleField.TYPE_NOT_STORED);\n      doubleFieldType.setNumericPrecisionStep(precisionStep);\n      IndexableField[] f = new IndexableField[2];\n      f[0] = new DoubleField(fieldNameX, point.getX(), doubleFieldType);\n      f[1] = new DoubleField(fieldNameY, point.getY(), doubleFieldType);\n      return f;\n    }\n    if( !ignoreIncompatibleGeometry ) {\n      throw new IllegalArgumentException( \"TwoDoublesStrategy can not index: \"+shape );\n    }\n    return new IndexableField[0]; // nothing (solr does not support null)\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"409324b31a1419d7c05a38211168cf317e39be77","date":1344866765,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createIndexableFields(Shape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createIndexableFields(Shape).mjava","sourceNew":"  @Override\n  public Field[] createIndexableFields(Shape shape) {\n    if( shape instanceof Point ) {\n      Point point = (Point)shape;\n      FieldType doubleFieldType = new FieldType(DoubleField.TYPE_NOT_STORED);\n      doubleFieldType.setNumericPrecisionStep(precisionStep);\n      Field[] f = new Field[2];\n      f[0] = new DoubleField(fieldNameX, point.getX(), doubleFieldType);\n      f[1] = new DoubleField(fieldNameY, point.getY(), doubleFieldType);\n      return f;\n    }\n    if( !ignoreIncompatibleGeometry ) {\n      throw new IllegalArgumentException( \"TwoDoublesStrategy can not index: \"+shape );\n    }\n    return new Field[0]; // nothing (solr does not support null)\n  }\n\n","sourceOld":"  @Override\n  public IndexableField[] createIndexableFields(Shape shape) {\n    if( shape instanceof Point ) {\n      Point point = (Point)shape;\n      FieldType doubleFieldType = new FieldType(DoubleField.TYPE_NOT_STORED);\n      doubleFieldType.setNumericPrecisionStep(precisionStep);\n      IndexableField[] f = new IndexableField[2];\n      f[0] = new DoubleField(fieldNameX, point.getX(), doubleFieldType);\n      f[1] = new DoubleField(fieldNameY, point.getY(), doubleFieldType);\n      return f;\n    }\n    if( !ignoreIncompatibleGeometry ) {\n      throw new IllegalArgumentException( \"TwoDoublesStrategy can not index: \"+shape );\n    }\n    return new IndexableField[0]; // nothing (solr does not support null)\n  }\n\n","bugFix":null,"bugIntro":["d5e3943824e0add7b904817b2028f6f5d83179ec"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createIndexableFields(Shape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createIndexableFields(Shape).mjava","sourceNew":"  @Override\n  public Field[] createIndexableFields(Shape shape) {\n    if( shape instanceof Point ) {\n      Point point = (Point)shape;\n      FieldType doubleFieldType = new FieldType(DoubleField.TYPE_NOT_STORED);\n      doubleFieldType.setNumericPrecisionStep(precisionStep);\n      Field[] f = new Field[2];\n      f[0] = new DoubleField(fieldNameX, point.getX(), doubleFieldType);\n      f[1] = new DoubleField(fieldNameY, point.getY(), doubleFieldType);\n      return f;\n    }\n    if( !ignoreIncompatibleGeometry ) {\n      throw new IllegalArgumentException( \"TwoDoublesStrategy can not index: \"+shape );\n    }\n    return new Field[0]; // nothing (solr does not support null)\n  }\n\n","sourceOld":"  @Override\n  public IndexableField[] createIndexableFields(Shape shape) {\n    if( shape instanceof Point ) {\n      Point point = (Point)shape;\n      FieldType doubleFieldType = new FieldType(DoubleField.TYPE_NOT_STORED);\n      doubleFieldType.setNumericPrecisionStep(precisionStep);\n      IndexableField[] f = new IndexableField[2];\n      f[0] = new DoubleField(fieldNameX, point.getX(), doubleFieldType);\n      f[1] = new DoubleField(fieldNameY, point.getY(), doubleFieldType);\n      return f;\n    }\n    if( !ignoreIncompatibleGeometry ) {\n      throw new IllegalArgumentException( \"TwoDoublesStrategy can not index: \"+shape );\n    }\n    return new IndexableField[0]; // nothing (solr does not support null)\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d5e3943824e0add7b904817b2028f6f5d83179ec","date":1347467595,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createIndexableFields(Shape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createIndexableFields(Shape).mjava","sourceNew":"  @Override\n  public Field[] createIndexableFields(Shape shape) {\n    if (shape instanceof Point)\n      return createIndexableFields((Point) shape);\n    throw new IllegalArgumentException(\"Can only index Point, not \" + shape);\n  }\n\n","sourceOld":"  @Override\n  public Field[] createIndexableFields(Shape shape) {\n    if( shape instanceof Point ) {\n      Point point = (Point)shape;\n      FieldType doubleFieldType = new FieldType(DoubleField.TYPE_NOT_STORED);\n      doubleFieldType.setNumericPrecisionStep(precisionStep);\n      Field[] f = new Field[2];\n      f[0] = new DoubleField(fieldNameX, point.getX(), doubleFieldType);\n      f[1] = new DoubleField(fieldNameY, point.getY(), doubleFieldType);\n      return f;\n    }\n    if( !ignoreIncompatibleGeometry ) {\n      throw new IllegalArgumentException( \"TwoDoublesStrategy can not index: \"+shape );\n    }\n    return new Field[0]; // nothing (solr does not support null)\n  }\n\n","bugFix":["399d569d88e65d963440cdd3a3e2d5f7cdd1bd42","409324b31a1419d7c05a38211168cf317e39be77"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f65afee0ae7c7a78e3de849a5772a0af60c50ead","date":1348341124,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createIndexableFields(Shape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createIndexableFields(Shape).mjava","sourceNew":"  @Override\n  public Field[] createIndexableFields(Shape shape) {\n    if (shape instanceof Point)\n      return createIndexableFields((Point) shape);\n    throw new UnsupportedOperationException(\"Can only index Point, not \" + shape);\n  }\n\n","sourceOld":"  @Override\n  public Field[] createIndexableFields(Shape shape) {\n    if (shape instanceof Point)\n      return createIndexableFields((Point) shape);\n    throw new IllegalArgumentException(\"Can only index Point, not \" + shape);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bc1e76fdb8a9952244528f098da956d2f52acec","date":1348348531,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/PointVectorStrategy#createIndexableFields(Shape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createIndexableFields(Shape).mjava","sourceNew":"  @Override\n  public Field[] createIndexableFields(Shape shape) {\n    if (shape instanceof Point)\n      return createIndexableFields((Point) shape);\n    throw new UnsupportedOperationException(\"Can only index Point, not \" + shape);\n  }\n\n","sourceOld":"  @Override\n  public Field[] createIndexableFields(Shape shape) {\n    if (shape instanceof Point)\n      return createIndexableFields((Point) shape);\n    throw new UnsupportedOperationException(\"Can only index Point, not \" + shape);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"409324b31a1419d7c05a38211168cf317e39be77":["aba371508186796cc6151d8223a5b4e16d02e26e"],"1d028314cced5858683a1bb4741423d0f934257b":["42ea82a615127d578d4d21a6743834c45fa10468","409324b31a1419d7c05a38211168cf317e39be77"],"6bc1e76fdb8a9952244528f098da956d2f52acec":["f65afee0ae7c7a78e3de849a5772a0af60c50ead"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","42ea82a615127d578d4d21a6743834c45fa10468"],"f65afee0ae7c7a78e3de849a5772a0af60c50ead":["d5e3943824e0add7b904817b2028f6f5d83179ec"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","42ea82a615127d578d4d21a6743834c45fa10468"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d5e3943824e0add7b904817b2028f6f5d83179ec":["1d028314cced5858683a1bb4741423d0f934257b"],"42ea82a615127d578d4d21a6743834c45fa10468":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6bc1e76fdb8a9952244528f098da956d2f52acec"]},"commit2Childs":{"409324b31a1419d7c05a38211168cf317e39be77":["1d028314cced5858683a1bb4741423d0f934257b"],"1d028314cced5858683a1bb4741423d0f934257b":["d5e3943824e0add7b904817b2028f6f5d83179ec"],"aba371508186796cc6151d8223a5b4e16d02e26e":["409324b31a1419d7c05a38211168cf317e39be77"],"6bc1e76fdb8a9952244528f098da956d2f52acec":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f65afee0ae7c7a78e3de849a5772a0af60c50ead":["6bc1e76fdb8a9952244528f098da956d2f52acec"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","42ea82a615127d578d4d21a6743834c45fa10468"],"d5e3943824e0add7b904817b2028f6f5d83179ec":["f65afee0ae7c7a78e3de849a5772a0af60c50ead"],"42ea82a615127d578d4d21a6743834c45fa10468":["1d028314cced5858683a1bb4741423d0f934257b","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}