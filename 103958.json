{"path":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet,boolean,String).mjava","commits":[{"id":"68fa956cfdb1b0e625046dcfa99f545fc8f04997","date":1133475513,"type":1,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet,boolean,String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet,boolean).mjava","sourceNew":"\t//fieldname MUST be interned prior to this call\n\tprivate static final void getTerms(Query query, HashSet terms,boolean prohibited, String fieldName) \n\t{\n\t\tif (query instanceof BooleanQuery)\n\t\t\tgetTermsFromBooleanQuery((BooleanQuery) query, terms, prohibited, fieldName);\n\t\telse\n\t\t\tif (query instanceof PhraseQuery)\n\t\t\t\tgetTermsFromPhraseQuery((PhraseQuery) query, terms, fieldName);\n\t\t\telse\n\t\t\t\tif (query instanceof TermQuery)\n\t\t\t\t\tgetTermsFromTermQuery((TermQuery) query, terms, fieldName);\n\t\t\t\telse\n\t\t        if(query instanceof SpanNearQuery)\n\t\t            getTermsFromSpanNearQuery((SpanNearQuery) query, terms, fieldName);\n\t}\n\n","sourceOld":"\tprivate static final void getTerms(Query query, HashSet terms,boolean prohibited) \n\t{\n\t\tif (query instanceof BooleanQuery)\n\t\t\tgetTermsFromBooleanQuery((BooleanQuery) query, terms, prohibited);\n\t\telse\n\t\t\tif (query instanceof PhraseQuery)\n\t\t\t\tgetTermsFromPhraseQuery((PhraseQuery) query, terms);\n\t\t\telse\n\t\t\t\tif (query instanceof TermQuery)\n\t\t\t\t\tgetTermsFromTermQuery((TermQuery) query, terms);\n\t\t\t\telse\n\t\t        if(query instanceof SpanNearQuery)\n\t\t            getTermsFromSpanNearQuery((SpanNearQuery) query, terms);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ef0bc276292640209b4a2a0cb33ebdab85e1a5b","date":1143666100,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet,boolean,String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet,boolean,String).mjava","sourceNew":"\t//fieldname MUST be interned prior to this call\n\tprivate static final void getTerms(Query query, HashSet terms,boolean prohibited, String fieldName) \n\t{\n       \ttry\n       \t{\n       \t\tHashSet nonWeightedTerms=new HashSet();\n       \t\tquery.extractTerms(nonWeightedTerms);\n       \t\tfor (Iterator iter = nonWeightedTerms.iterator(); iter.hasNext();)\n\t\t\t{\n\t\t\t\tTerm term = (Term) iter.next();\n\t\t\t    if((fieldName==null)||(term.field()==fieldName))\n\t\t\t\t{\n\t\t\t\t\tterms.add(new WeightedTerm(query.getBoost(),term.text()));\n\t\t\t\t}\n\t\t\t}\n\t      }\n\t      catch(UnsupportedOperationException ignore)\n\t      {\n\t    \t  //this is non-fatal for our purposes\n       \t  }\t\t        \t\t\t        \t\n\t}\n\n","sourceOld":"\t//fieldname MUST be interned prior to this call\n\tprivate static final void getTerms(Query query, HashSet terms,boolean prohibited, String fieldName) \n\t{\n\t\tif (query instanceof BooleanQuery)\n\t\t\tgetTermsFromBooleanQuery((BooleanQuery) query, terms, prohibited, fieldName);\n\t\telse\n\t\t\tif (query instanceof PhraseQuery)\n\t\t\t\tgetTermsFromPhraseQuery((PhraseQuery) query, terms, fieldName);\n\t\t\telse\n\t\t\t\tif (query instanceof TermQuery)\n\t\t\t\t\tgetTermsFromTermQuery((TermQuery) query, terms, fieldName);\n\t\t\t\telse\n\t\t        if(query instanceof SpanNearQuery)\n\t\t            getTermsFromSpanNearQuery((SpanNearQuery) query, terms, fieldName);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"deea4039132161cb58d1de4676271401ab57e1ba","date":1148847882,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet,boolean,String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet,boolean,String).mjava","sourceNew":"\t//fieldname MUST be interned prior to this call\n\tprivate static final void getTerms(Query query, HashSet terms,boolean prohibited, String fieldName) \n\t{\n       \ttry\n       \t{\n    \t\tif (query instanceof BooleanQuery)\n    \t\t\tgetTermsFromBooleanQuery((BooleanQuery) query, terms, prohibited, fieldName);\n    \t\telse\n    \t\t\tif(query instanceof FilteredQuery)\n    \t\t\t\tgetTermsFromFilteredQuery((FilteredQuery)query, terms,prohibited, fieldName);\n    \t\t\telse\n    \t\t{\n\t       \t\tHashSet nonWeightedTerms=new HashSet();\n\t       \t\tquery.extractTerms(nonWeightedTerms);\n\t       \t\tfor (Iterator iter = nonWeightedTerms.iterator(); iter.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tTerm term = (Term) iter.next();\n\t\t\t\t    if((fieldName==null)||(term.field()==fieldName))\n\t\t\t\t\t{\n\t\t\t\t\t\tterms.add(new WeightedTerm(query.getBoost(),term.text()));\n\t\t\t\t\t}\n\t\t\t\t}\n    \t\t}\n\t      }\n\t      catch(UnsupportedOperationException ignore)\n\t      {\n\t    \t  //this is non-fatal for our purposes\n       \t  }\t\t        \t\t\t        \t\n\t}\n\n","sourceOld":"\t//fieldname MUST be interned prior to this call\n\tprivate static final void getTerms(Query query, HashSet terms,boolean prohibited, String fieldName) \n\t{\n       \ttry\n       \t{\n       \t\tHashSet nonWeightedTerms=new HashSet();\n       \t\tquery.extractTerms(nonWeightedTerms);\n       \t\tfor (Iterator iter = nonWeightedTerms.iterator(); iter.hasNext();)\n\t\t\t{\n\t\t\t\tTerm term = (Term) iter.next();\n\t\t\t    if((fieldName==null)||(term.field()==fieldName))\n\t\t\t\t{\n\t\t\t\t\tterms.add(new WeightedTerm(query.getBoost(),term.text()));\n\t\t\t\t}\n\t\t\t}\n\t      }\n\t      catch(UnsupportedOperationException ignore)\n\t      {\n\t    \t  //this is non-fatal for our purposes\n       \t  }\t\t        \t\t\t        \t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ffdf794cee8d43eb612df752c592cef2dc3e75ae","date":1256465578,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet[WeightedTerm],boolean,String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryTermExtractor#getTerms(Query,HashSet,boolean,String).mjava","sourceNew":"\t//fieldname MUST be interned prior to this call\n\tprivate static final void getTerms(Query query, HashSet<WeightedTerm> terms,boolean prohibited, String fieldName) \n\t{\n       \ttry\n       \t{\n    \t\tif (query instanceof BooleanQuery)\n    \t\t\tgetTermsFromBooleanQuery((BooleanQuery) query, terms, prohibited, fieldName);\n    \t\telse\n    \t\t\tif(query instanceof FilteredQuery)\n    \t\t\t\tgetTermsFromFilteredQuery((FilteredQuery)query, terms,prohibited, fieldName);\n    \t\t\telse\n    \t\t{\n\t       \t\tHashSet<Term> nonWeightedTerms=new HashSet<Term>();\n\t       \t\tquery.extractTerms(nonWeightedTerms);\n\t       \t\tfor (Iterator<Term> iter = nonWeightedTerms.iterator(); iter.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tTerm term = iter.next();\n\t\t\t\t    if((fieldName==null)||(term.field()==fieldName))\n\t\t\t\t\t{\n\t\t\t\t\t\tterms.add(new WeightedTerm(query.getBoost(),term.text()));\n\t\t\t\t\t}\n\t\t\t\t}\n    \t\t}\n\t      }\n\t      catch(UnsupportedOperationException ignore)\n\t      {\n\t    \t  //this is non-fatal for our purposes\n       \t  }\t\t        \t\t\t        \t\n\t}\n\n","sourceOld":"\t//fieldname MUST be interned prior to this call\n\tprivate static final void getTerms(Query query, HashSet terms,boolean prohibited, String fieldName) \n\t{\n       \ttry\n       \t{\n    \t\tif (query instanceof BooleanQuery)\n    \t\t\tgetTermsFromBooleanQuery((BooleanQuery) query, terms, prohibited, fieldName);\n    \t\telse\n    \t\t\tif(query instanceof FilteredQuery)\n    \t\t\t\tgetTermsFromFilteredQuery((FilteredQuery)query, terms,prohibited, fieldName);\n    \t\t\telse\n    \t\t{\n\t       \t\tHashSet nonWeightedTerms=new HashSet();\n\t       \t\tquery.extractTerms(nonWeightedTerms);\n\t       \t\tfor (Iterator iter = nonWeightedTerms.iterator(); iter.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tTerm term = (Term) iter.next();\n\t\t\t\t    if((fieldName==null)||(term.field()==fieldName))\n\t\t\t\t\t{\n\t\t\t\t\t\tterms.add(new WeightedTerm(query.getBoost(),term.text()));\n\t\t\t\t\t}\n\t\t\t\t}\n    \t\t}\n\t      }\n\t      catch(UnsupportedOperationException ignore)\n\t      {\n\t    \t  //this is non-fatal for our purposes\n       \t  }\t\t        \t\t\t        \t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ffdf794cee8d43eb612df752c592cef2dc3e75ae":["deea4039132161cb58d1de4676271401ab57e1ba"],"68fa956cfdb1b0e625046dcfa99f545fc8f04997":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ef0bc276292640209b4a2a0cb33ebdab85e1a5b":["68fa956cfdb1b0e625046dcfa99f545fc8f04997"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ffdf794cee8d43eb612df752c592cef2dc3e75ae"],"deea4039132161cb58d1de4676271401ab57e1ba":["4ef0bc276292640209b4a2a0cb33ebdab85e1a5b"]},"commit2Childs":{"ffdf794cee8d43eb612df752c592cef2dc3e75ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68fa956cfdb1b0e625046dcfa99f545fc8f04997":["4ef0bc276292640209b4a2a0cb33ebdab85e1a5b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["68fa956cfdb1b0e625046dcfa99f545fc8f04997"],"4ef0bc276292640209b4a2a0cb33ebdab85e1a5b":["deea4039132161cb58d1de4676271401ab57e1ba"],"deea4039132161cb58d1de4676271401ab57e1ba":["ffdf794cee8d43eb612df752c592cef2dc3e75ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}