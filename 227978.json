{"path":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","pathOld":"/dev/null","sourceNew":"    private void runAThread(ThreadedEntityProcessorWrapper epw, EntityRow rows, String currProcess) throws Exception {\n      currentEntityProcWrapper.set(epw);\n      epw.threadedInit(context);\n      initEntity();\n      try {\n        epw.init(rows);\n        DocWrapper docWrapper = this.docWrapper;\n        Context.CURRENT_CONTEXT.set(context);\n        for (; ;) {\n          if(DocBuilder.this.stop.get()) break;\n          try {\n            Map<String, Object> arow = epw.nextRow();\n            if (arow == null) {\n              break;\n            } else {\n              importStatistics.rowsCount.incrementAndGet();\n              if (docWrapper == null && entity.isDocRoot) {\n                docWrapper = new DocWrapper();\n                context.setDoc(docWrapper);\n                DataConfig.Entity e = entity.parentEntity;\n                for (EntityRow row = rows;  row != null&& e !=null; row = row.tail,e=e.parentEntity) {\n                    addFields(e, docWrapper, row.row, epw.resolver);\n                }\n              }\n              if (docWrapper != null) {\n                handleSpecialCommands(arow, docWrapper);\n                addFields(entity, docWrapper, arow, epw.resolver);\n              }\n              if (entity.entities != null) {\n                EntityRow nextRow = new EntityRow(arow, rows, entity.name);\n                for (DataConfig.Entity e : entity.entities) {\n                  epw.children.get(e).run(docWrapper,currProcess,nextRow);\n                }\n              }\n            }\n            if (entity.isDocRoot) {\n              LOG.info(\"a row on docroot\" + docWrapper);\n              if (!docWrapper.isEmpty()) {\n                LOG.info(\"adding a doc \"+docWrapper);\n                boolean result = writer.upload(docWrapper);\n                docWrapper = null;\n                if (result){\n                  importStatistics.docCount.incrementAndGet();\n                } else {\n                  importStatistics.failedDocCount.incrementAndGet();\n                }\n              }\n            }\n          } catch (DataImportHandlerException dihe) {\n            exception = dihe;\n            if(dihe.getErrCode() == SKIP_ROW || dihe.getErrCode() == SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              exception = null;//should not propogate up\n              continue;\n            }\n            if (entity.isDocRoot) {\n              if (dihe.getErrCode() == DataImportHandlerException.SKIP) {\n                importStatistics.skipDocCount.getAndIncrement();\n                exception = null;//should not propogate up\n              } else {\n                LOG.error(\"Exception while processing: \"\n                        + entity.name + \" document : \" + docWrapper, dihe);\n              }\n              if (dihe.getErrCode() == DataImportHandlerException.SEVERE)\n                throw dihe;\n            } else {\n              //if this is not the docRoot then the execution has happened in the same thread. so propogate up,\n              // it will be handled at the docroot\n              entityEnded.set(true); \n              throw dihe;\n            }\n            entityEnded.set(true);\n          }\n        }\n      } finally {\n        epw.destroy();\n        currentEntityProcWrapper.remove();\n        Context.CURRENT_CONTEXT.remove();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","sourceNew":null,"sourceOld":"    private void runAThread(ThreadedEntityProcessorWrapper epw, EntityRow rows, String currProcess) throws Exception {\n      currentEntityProcWrapper.set(epw);\n      epw.threadedInit(context);\n      initEntity();\n      try {\n        epw.init(rows);\n        DocWrapper docWrapper = this.docWrapper;\n        Context.CURRENT_CONTEXT.set(context);\n        for (; ;) {\n          if(DocBuilder.this.stop.get()) break;\n          try {\n            Map<String, Object> arow = epw.nextRow();\n            if (arow == null) {\n              break;\n            } else {\n              importStatistics.rowsCount.incrementAndGet();\n              if (docWrapper == null && entity.isDocRoot) {\n                docWrapper = new DocWrapper();\n                context.setDoc(docWrapper);\n                DataConfig.Entity e = entity.parentEntity;\n                for (EntityRow row = rows;  row != null&& e !=null; row = row.tail,e=e.parentEntity) {\n                    addFields(e, docWrapper, row.row, epw.resolver);\n                }\n              }\n              if (docWrapper != null) {\n                handleSpecialCommands(arow, docWrapper);\n                addFields(entity, docWrapper, arow, epw.resolver);\n              }\n              if (entity.entities != null) {\n                EntityRow nextRow = new EntityRow(arow, rows, entity.name);\n                for (DataConfig.Entity e : entity.entities) {\n                  epw.children.get(e).run(docWrapper,currProcess,nextRow);\n                }\n              }\n            }\n            if (entity.isDocRoot) {\n              LOG.info(\"a row on docroot\" + docWrapper);\n              if (!docWrapper.isEmpty()) {\n                LOG.info(\"adding a doc \"+docWrapper);\n                boolean result = writer.upload(docWrapper);\n                docWrapper = null;\n                if (result){\n                  importStatistics.docCount.incrementAndGet();\n                } else {\n                  importStatistics.failedDocCount.incrementAndGet();\n                }\n              }\n            }\n          } catch (DataImportHandlerException dihe) {\n            exception = dihe;\n            if(dihe.getErrCode() == SKIP_ROW || dihe.getErrCode() == SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              exception = null;//should not propogate up\n              continue;\n            }\n            if (entity.isDocRoot) {\n              if (dihe.getErrCode() == DataImportHandlerException.SKIP) {\n                importStatistics.skipDocCount.getAndIncrement();\n                exception = null;//should not propogate up\n              } else {\n                LOG.error(\"Exception while processing: \"\n                        + entity.name + \" document : \" + docWrapper, dihe);\n              }\n              if (dihe.getErrCode() == DataImportHandlerException.SEVERE)\n                throw dihe;\n            } else {\n              //if this is not the docRoot then the execution has happened in the same thread. so propogate up,\n              // it will be handled at the docroot\n              entityEnded.set(true); \n              throw dihe;\n            }\n            entityEnded.set(true);\n          }\n        }\n      } finally {\n        epw.destroy();\n        currentEntityProcWrapper.remove();\n        Context.CURRENT_CONTEXT.remove();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","sourceNew":"    private void runAThread(ThreadedEntityProcessorWrapper epw, EntityRow rows, String currProcess) throws Exception {\n      currentEntityProcWrapper.set(epw);\n      epw.threadedInit(context);\n      initEntity();\n      try {\n        epw.init(rows);\n        DocWrapper docWrapper = this.docWrapper;\n        Context.CURRENT_CONTEXT.set(context);\n        for (; ;) {\n          if(DocBuilder.this.stop.get()) break;\n          try {\n            Map<String, Object> arow = epw.nextRow();\n            if (arow == null) {\n              break;\n            } else {\n              importStatistics.rowsCount.incrementAndGet();\n              if (docWrapper == null && entity.isDocRoot) {\n                docWrapper = new DocWrapper();\n                context.setDoc(docWrapper);\n                DataConfig.Entity e = entity.parentEntity;\n                for (EntityRow row = rows;  row != null&& e !=null; row = row.tail,e=e.parentEntity) {\n                    addFields(e, docWrapper, row.row, epw.resolver);\n                }\n              }\n              if (docWrapper != null) {\n                handleSpecialCommands(arow, docWrapper);\n                addFields(entity, docWrapper, arow, epw.resolver);\n              }\n              if (entity.entities != null) {\n                EntityRow nextRow = new EntityRow(arow, rows, entity.name);\n                for (DataConfig.Entity e : entity.entities) {\n                  epw.children.get(e).run(docWrapper,currProcess,nextRow);\n                }\n              }\n            }\n            if (entity.isDocRoot) {\n              LOG.info(\"a row on docroot\" + docWrapper);\n              if (!docWrapper.isEmpty()) {\n                LOG.info(\"adding a doc \"+docWrapper);\n                boolean result = writer.upload(docWrapper);\n                docWrapper = null;\n                if (result){\n                  importStatistics.docCount.incrementAndGet();\n                } else {\n                  importStatistics.failedDocCount.incrementAndGet();\n                }\n              }\n            }\n          } catch (DataImportHandlerException dihe) {\n            exception = dihe;\n            if(dihe.getErrCode() == SKIP_ROW || dihe.getErrCode() == SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              exception = null;//should not propogate up\n              continue;\n            }\n            if (entity.isDocRoot) {\n              if (dihe.getErrCode() == DataImportHandlerException.SKIP) {\n                importStatistics.skipDocCount.getAndIncrement();\n                exception = null;//should not propogate up\n              } else {\n                LOG.error(\"Exception while processing: \"\n                        + entity.name + \" document : \" + docWrapper, dihe);\n              }\n              if (dihe.getErrCode() == DataImportHandlerException.SEVERE)\n                throw dihe;\n            } else {\n              //if this is not the docRoot then the execution has happened in the same thread. so propogate up,\n              // it will be handled at the docroot\n              entityEnded.set(true); \n              throw dihe;\n            }\n            entityEnded.set(true);\n          }\n        }\n      } finally {\n        epw.destroy();\n        currentEntityProcWrapper.remove();\n        Context.CURRENT_CONTEXT.remove();\n      }\n    }\n\n","sourceOld":"    private void runAThread(ThreadedEntityProcessorWrapper epw, EntityRow rows, String currProcess) throws Exception {\n      currentEntityProcWrapper.set(epw);\n      epw.threadedInit(context);\n      initEntity();\n      try {\n        epw.init(rows);\n        DocWrapper docWrapper = this.docWrapper;\n        Context.CURRENT_CONTEXT.set(context);\n        for (; ;) {\n          if(DocBuilder.this.stop.get()) break;\n          try {\n            Map<String, Object> arow = epw.nextRow();\n            if (arow == null) {\n              break;\n            } else {\n              importStatistics.rowsCount.incrementAndGet();\n              if (docWrapper == null && entity.isDocRoot) {\n                docWrapper = new DocWrapper();\n                context.setDoc(docWrapper);\n                DataConfig.Entity e = entity.parentEntity;\n                for (EntityRow row = rows;  row != null&& e !=null; row = row.tail,e=e.parentEntity) {\n                    addFields(e, docWrapper, row.row, epw.resolver);\n                }\n              }\n              if (docWrapper != null) {\n                handleSpecialCommands(arow, docWrapper);\n                addFields(entity, docWrapper, arow, epw.resolver);\n              }\n              if (entity.entities != null) {\n                EntityRow nextRow = new EntityRow(arow, rows, entity.name);\n                for (DataConfig.Entity e : entity.entities) {\n                  epw.children.get(e).run(docWrapper,currProcess,nextRow);\n                }\n              }\n            }\n            if (entity.isDocRoot) {\n              LOG.info(\"a row on docroot\" + docWrapper);\n              if (!docWrapper.isEmpty()) {\n                LOG.info(\"adding a doc \"+docWrapper);\n                boolean result = writer.upload(docWrapper);\n                docWrapper = null;\n                if (result){\n                  importStatistics.docCount.incrementAndGet();\n                } else {\n                  importStatistics.failedDocCount.incrementAndGet();\n                }\n              }\n            }\n          } catch (DataImportHandlerException dihe) {\n            exception = dihe;\n            if(dihe.getErrCode() == SKIP_ROW || dihe.getErrCode() == SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              exception = null;//should not propogate up\n              continue;\n            }\n            if (entity.isDocRoot) {\n              if (dihe.getErrCode() == DataImportHandlerException.SKIP) {\n                importStatistics.skipDocCount.getAndIncrement();\n                exception = null;//should not propogate up\n              } else {\n                LOG.error(\"Exception while processing: \"\n                        + entity.name + \" document : \" + docWrapper, dihe);\n              }\n              if (dihe.getErrCode() == DataImportHandlerException.SEVERE)\n                throw dihe;\n            } else {\n              //if this is not the docRoot then the execution has happened in the same thread. so propogate up,\n              // it will be handled at the docroot\n              entityEnded.set(true); \n              throw dihe;\n            }\n            entityEnded.set(true);\n          }\n        }\n      } finally {\n        epw.destroy();\n        currentEntityProcWrapper.remove();\n        Context.CURRENT_CONTEXT.remove();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","pathOld":"/dev/null","sourceNew":"    private void runAThread(ThreadedEntityProcessorWrapper epw, EntityRow rows, String currProcess) throws Exception {\n      currentEntityProcWrapper.set(epw);\n      epw.threadedInit(context);\n      initEntity();\n      try {\n        epw.init(rows);\n        DocWrapper docWrapper = this.docWrapper;\n        Context.CURRENT_CONTEXT.set(context);\n        for (; ;) {\n          if(DocBuilder.this.stop.get()) break;\n          try {\n            Map<String, Object> arow = epw.nextRow();\n            if (arow == null) {\n              break;\n            } else {\n              importStatistics.rowsCount.incrementAndGet();\n              if (docWrapper == null && entity.isDocRoot) {\n                docWrapper = new DocWrapper();\n                context.setDoc(docWrapper);\n                DataConfig.Entity e = entity.parentEntity;\n                for (EntityRow row = rows;  row != null&& e !=null; row = row.tail,e=e.parentEntity) {\n                    addFields(e, docWrapper, row.row, epw.resolver);\n                }\n              }\n              if (docWrapper != null) {\n                handleSpecialCommands(arow, docWrapper);\n                addFields(entity, docWrapper, arow, epw.resolver);\n              }\n              if (entity.entities != null) {\n                EntityRow nextRow = new EntityRow(arow, rows, entity.name);\n                for (DataConfig.Entity e : entity.entities) {\n                  epw.children.get(e).run(docWrapper,currProcess,nextRow);\n                }\n              }\n            }\n            if (entity.isDocRoot) {\n              LOG.info(\"a row on docroot\" + docWrapper);\n              if (!docWrapper.isEmpty()) {\n                LOG.info(\"adding a doc \"+docWrapper);\n                boolean result = writer.upload(docWrapper);\n                docWrapper = null;\n                if (result){\n                  importStatistics.docCount.incrementAndGet();\n                } else {\n                  importStatistics.failedDocCount.incrementAndGet();\n                }\n              }\n            }\n          } catch (DataImportHandlerException dihe) {\n            exception = dihe;\n            if(dihe.getErrCode() == SKIP_ROW || dihe.getErrCode() == SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              exception = null;//should not propogate up\n              continue;\n            }\n            if (entity.isDocRoot) {\n              if (dihe.getErrCode() == DataImportHandlerException.SKIP) {\n                importStatistics.skipDocCount.getAndIncrement();\n                exception = null;//should not propogate up\n              } else {\n                LOG.error(\"Exception while processing: \"\n                        + entity.name + \" document : \" + docWrapper, dihe);\n              }\n              if (dihe.getErrCode() == DataImportHandlerException.SEVERE)\n                throw dihe;\n            } else {\n              //if this is not the docRoot then the execution has happened in the same thread. so propogate up,\n              // it will be handled at the docroot\n              entityEnded.set(true); \n              throw dihe;\n            }\n            entityEnded.set(true);\n          }\n        }\n      } finally {\n        epw.destroy();\n        currentEntityProcWrapper.remove();\n        Context.CURRENT_CONTEXT.remove();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8a95193d2e784a099537d5b5c9936d4e72796a3d","date":1297945571,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","sourceNew":"    private void runAThread(ThreadedEntityProcessorWrapper epw, EntityRow rows, String currProcess) throws Exception {\n      currentEntityProcWrapper.set(epw);\n      epw.threadedInit(context);\n      initEntity();\n      try {\n        epw.init(rows);\n        DocWrapper docWrapper = this.docWrapper;\n        Context.CURRENT_CONTEXT.set(context);\n        for (; ;) {\n          if(DocBuilder.this.stop.get()) break;\n          try {\n            Map<String, Object> arow = epw.nextRow();\n            if (arow == null) {\n              break;\n            } else {\n              importStatistics.rowsCount.incrementAndGet();\n              if (docWrapper == null && entity.isDocRoot) {\n                docWrapper = new DocWrapper();\n                context.setDoc(docWrapper);\n                DataConfig.Entity e = entity.parentEntity;\n                for (EntityRow row = rows;  row != null&& e !=null; row = row.tail,e=e.parentEntity) {\n                    addFields(e, docWrapper, row.row, epw.resolver);\n                }\n              }\n              if (docWrapper != null) {\n                handleSpecialCommands(arow, docWrapper);\n                addFields(entity, docWrapper, arow, epw.resolver);\n              }\n              if (entity.entities != null) {\n                EntityRow nextRow = new EntityRow(arow, rows, entity.name);\n                for (DataConfig.Entity e : entity.entities) {\n                  epw.children.get(e).run(docWrapper,currProcess,nextRow);\n                }\n              }\n            }\n            if (entity.isDocRoot) {\n              LOG.info(\"a row on docroot\" + docWrapper);\n              if (!docWrapper.isEmpty()) {\n                LOG.info(\"adding a doc \"+docWrapper);\n                boolean result = writer.upload(docWrapper);\n                docWrapper = null;\n                if (result){\n                  importStatistics.docCount.incrementAndGet();\n                } else {\n                  importStatistics.failedDocCount.incrementAndGet();\n                }\n              }\n            }\n          } catch (DataImportHandlerException dihe) {\n            exception = dihe;\n            if(dihe.getErrCode() == SKIP_ROW || dihe.getErrCode() == SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              exception = null;//should not propogate up\n              continue;\n            }\n            if (entity.isDocRoot) {\n              if (dihe.getErrCode() == DataImportHandlerException.SKIP) {\n                importStatistics.skipDocCount.getAndIncrement();\n                exception = null;//should not propogate up\n              } else {\n                SolrException.log(LOG, \"Exception while processing: \"\n                        + entity.name + \" document : \" + docWrapper, dihe);\n              }\n              if (dihe.getErrCode() == DataImportHandlerException.SEVERE)\n                throw dihe;\n            } else {\n              //if this is not the docRoot then the execution has happened in the same thread. so propogate up,\n              // it will be handled at the docroot\n              entityEnded.set(true); \n              throw dihe;\n            }\n            entityEnded.set(true);\n          }\n        }\n      } finally {\n        epw.destroy();\n        currentEntityProcWrapper.remove();\n        Context.CURRENT_CONTEXT.remove();\n      }\n    }\n\n","sourceOld":"    private void runAThread(ThreadedEntityProcessorWrapper epw, EntityRow rows, String currProcess) throws Exception {\n      currentEntityProcWrapper.set(epw);\n      epw.threadedInit(context);\n      initEntity();\n      try {\n        epw.init(rows);\n        DocWrapper docWrapper = this.docWrapper;\n        Context.CURRENT_CONTEXT.set(context);\n        for (; ;) {\n          if(DocBuilder.this.stop.get()) break;\n          try {\n            Map<String, Object> arow = epw.nextRow();\n            if (arow == null) {\n              break;\n            } else {\n              importStatistics.rowsCount.incrementAndGet();\n              if (docWrapper == null && entity.isDocRoot) {\n                docWrapper = new DocWrapper();\n                context.setDoc(docWrapper);\n                DataConfig.Entity e = entity.parentEntity;\n                for (EntityRow row = rows;  row != null&& e !=null; row = row.tail,e=e.parentEntity) {\n                    addFields(e, docWrapper, row.row, epw.resolver);\n                }\n              }\n              if (docWrapper != null) {\n                handleSpecialCommands(arow, docWrapper);\n                addFields(entity, docWrapper, arow, epw.resolver);\n              }\n              if (entity.entities != null) {\n                EntityRow nextRow = new EntityRow(arow, rows, entity.name);\n                for (DataConfig.Entity e : entity.entities) {\n                  epw.children.get(e).run(docWrapper,currProcess,nextRow);\n                }\n              }\n            }\n            if (entity.isDocRoot) {\n              LOG.info(\"a row on docroot\" + docWrapper);\n              if (!docWrapper.isEmpty()) {\n                LOG.info(\"adding a doc \"+docWrapper);\n                boolean result = writer.upload(docWrapper);\n                docWrapper = null;\n                if (result){\n                  importStatistics.docCount.incrementAndGet();\n                } else {\n                  importStatistics.failedDocCount.incrementAndGet();\n                }\n              }\n            }\n          } catch (DataImportHandlerException dihe) {\n            exception = dihe;\n            if(dihe.getErrCode() == SKIP_ROW || dihe.getErrCode() == SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              exception = null;//should not propogate up\n              continue;\n            }\n            if (entity.isDocRoot) {\n              if (dihe.getErrCode() == DataImportHandlerException.SKIP) {\n                importStatistics.skipDocCount.getAndIncrement();\n                exception = null;//should not propogate up\n              } else {\n                LOG.error(\"Exception while processing: \"\n                        + entity.name + \" document : \" + docWrapper, dihe);\n              }\n              if (dihe.getErrCode() == DataImportHandlerException.SEVERE)\n                throw dihe;\n            } else {\n              //if this is not the docRoot then the execution has happened in the same thread. so propogate up,\n              // it will be handled at the docroot\n              entityEnded.set(true); \n              throw dihe;\n            }\n            entityEnded.set(true);\n          }\n        }\n      } finally {\n        epw.destroy();\n        currentEntityProcWrapper.remove();\n        Context.CURRENT_CONTEXT.remove();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","sourceNew":"    private void runAThread(ThreadedEntityProcessorWrapper epw, EntityRow rows, String currProcess) throws Exception {\n      currentEntityProcWrapper.set(epw);\n      epw.threadedInit(context);\n      initEntity();\n      try {\n        epw.init(rows);\n        DocWrapper docWrapper = this.docWrapper;\n        Context.CURRENT_CONTEXT.set(context);\n        for (; ;) {\n          if(DocBuilder.this.stop.get()) break;\n          try {\n            Map<String, Object> arow = epw.nextRow();\n            if (arow == null) {\n              break;\n            } else {\n              importStatistics.rowsCount.incrementAndGet();\n              if (docWrapper == null && entity.isDocRoot) {\n                docWrapper = new DocWrapper();\n                context.setDoc(docWrapper);\n                DataConfig.Entity e = entity.parentEntity;\n                for (EntityRow row = rows;  row != null&& e !=null; row = row.tail,e=e.parentEntity) {\n                    addFields(e, docWrapper, row.row, epw.resolver);\n                }\n              }\n              if (docWrapper != null) {\n                handleSpecialCommands(arow, docWrapper);\n                addFields(entity, docWrapper, arow, epw.resolver);\n              }\n              if (entity.entities != null) {\n                EntityRow nextRow = new EntityRow(arow, rows, entity.name);\n                for (DataConfig.Entity e : entity.entities) {\n                  epw.children.get(e).run(docWrapper,currProcess,nextRow);\n                }\n              }\n            }\n            if (entity.isDocRoot) {\n              LOG.info(\"a row on docroot\" + docWrapper);\n              if (!docWrapper.isEmpty()) {\n                LOG.info(\"adding a doc \"+docWrapper);\n                boolean result = writer.upload(docWrapper);\n                docWrapper = null;\n                if (result){\n                  importStatistics.docCount.incrementAndGet();\n                } else {\n                  importStatistics.failedDocCount.incrementAndGet();\n                }\n              }\n            }\n          } catch (DataImportHandlerException dihe) {\n            exception = dihe;\n            if(dihe.getErrCode() == SKIP_ROW || dihe.getErrCode() == SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              exception = null;//should not propogate up\n              continue;\n            }\n            if (entity.isDocRoot) {\n              if (dihe.getErrCode() == DataImportHandlerException.SKIP) {\n                importStatistics.skipDocCount.getAndIncrement();\n                exception = null;//should not propogate up\n              } else {\n                SolrException.log(LOG, \"Exception while processing: \"\n                        + entity.name + \" document : \" + docWrapper, dihe);\n              }\n              if (dihe.getErrCode() == DataImportHandlerException.SEVERE)\n                throw dihe;\n            } else {\n              //if this is not the docRoot then the execution has happened in the same thread. so propogate up,\n              // it will be handled at the docroot\n              entityEnded.set(true); \n              throw dihe;\n            }\n            entityEnded.set(true);\n          }\n        }\n      } finally {\n        epw.destroy();\n        currentEntityProcWrapper.remove();\n        Context.CURRENT_CONTEXT.remove();\n      }\n    }\n\n","sourceOld":"    private void runAThread(ThreadedEntityProcessorWrapper epw, EntityRow rows, String currProcess) throws Exception {\n      currentEntityProcWrapper.set(epw);\n      epw.threadedInit(context);\n      initEntity();\n      try {\n        epw.init(rows);\n        DocWrapper docWrapper = this.docWrapper;\n        Context.CURRENT_CONTEXT.set(context);\n        for (; ;) {\n          if(DocBuilder.this.stop.get()) break;\n          try {\n            Map<String, Object> arow = epw.nextRow();\n            if (arow == null) {\n              break;\n            } else {\n              importStatistics.rowsCount.incrementAndGet();\n              if (docWrapper == null && entity.isDocRoot) {\n                docWrapper = new DocWrapper();\n                context.setDoc(docWrapper);\n                DataConfig.Entity e = entity.parentEntity;\n                for (EntityRow row = rows;  row != null&& e !=null; row = row.tail,e=e.parentEntity) {\n                    addFields(e, docWrapper, row.row, epw.resolver);\n                }\n              }\n              if (docWrapper != null) {\n                handleSpecialCommands(arow, docWrapper);\n                addFields(entity, docWrapper, arow, epw.resolver);\n              }\n              if (entity.entities != null) {\n                EntityRow nextRow = new EntityRow(arow, rows, entity.name);\n                for (DataConfig.Entity e : entity.entities) {\n                  epw.children.get(e).run(docWrapper,currProcess,nextRow);\n                }\n              }\n            }\n            if (entity.isDocRoot) {\n              LOG.info(\"a row on docroot\" + docWrapper);\n              if (!docWrapper.isEmpty()) {\n                LOG.info(\"adding a doc \"+docWrapper);\n                boolean result = writer.upload(docWrapper);\n                docWrapper = null;\n                if (result){\n                  importStatistics.docCount.incrementAndGet();\n                } else {\n                  importStatistics.failedDocCount.incrementAndGet();\n                }\n              }\n            }\n          } catch (DataImportHandlerException dihe) {\n            exception = dihe;\n            if(dihe.getErrCode() == SKIP_ROW || dihe.getErrCode() == SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              exception = null;//should not propogate up\n              continue;\n            }\n            if (entity.isDocRoot) {\n              if (dihe.getErrCode() == DataImportHandlerException.SKIP) {\n                importStatistics.skipDocCount.getAndIncrement();\n                exception = null;//should not propogate up\n              } else {\n                LOG.error(\"Exception while processing: \"\n                        + entity.name + \" document : \" + docWrapper, dihe);\n              }\n              if (dihe.getErrCode() == DataImportHandlerException.SEVERE)\n                throw dihe;\n            } else {\n              //if this is not the docRoot then the execution has happened in the same thread. so propogate up,\n              // it will be handled at the docroot\n              entityEnded.set(true); \n              throw dihe;\n            }\n            entityEnded.set(true);\n          }\n        }\n      } finally {\n        epw.destroy();\n        currentEntityProcWrapper.remove();\n        Context.CURRENT_CONTEXT.remove();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","sourceNew":"    private void runAThread(ThreadedEntityProcessorWrapper epw, EntityRow rows, String currProcess) throws Exception {\n      currentEntityProcWrapper.set(epw);\n      epw.threadedInit(context);\n      initEntity();\n      try {\n        epw.init(rows);\n        DocWrapper docWrapper = this.docWrapper;\n        Context.CURRENT_CONTEXT.set(context);\n        for (; ;) {\n          if(DocBuilder.this.stop.get()) break;\n          try {\n            Map<String, Object> arow = epw.nextRow();\n            if (arow == null) {\n              break;\n            } else {\n              importStatistics.rowsCount.incrementAndGet();\n              if (docWrapper == null && entity.isDocRoot) {\n                docWrapper = new DocWrapper();\n                context.setDoc(docWrapper);\n                DataConfig.Entity e = entity.parentEntity;\n                for (EntityRow row = rows;  row != null&& e !=null; row = row.tail,e=e.parentEntity) {\n                    addFields(e, docWrapper, row.row, epw.resolver);\n                }\n              }\n              if (docWrapper != null) {\n                handleSpecialCommands(arow, docWrapper);\n                addFields(entity, docWrapper, arow, epw.resolver);\n              }\n              if (entity.entities != null) {\n                EntityRow nextRow = new EntityRow(arow, rows, entity.name);\n                for (DataConfig.Entity e : entity.entities) {\n                  epw.children.get(e).run(docWrapper,currProcess,nextRow);\n                }\n              }\n            }\n            if (entity.isDocRoot) {\n              LOG.info(\"a row on docroot\" + docWrapper);\n              if (!docWrapper.isEmpty()) {\n                LOG.info(\"adding a doc \"+docWrapper);\n                boolean result = writer.upload(docWrapper);\n                docWrapper = null;\n                if (result){\n                  importStatistics.docCount.incrementAndGet();\n                } else {\n                  importStatistics.failedDocCount.incrementAndGet();\n                }\n              }\n            }\n          } catch (DataImportHandlerException dihe) {\n            exception = dihe;\n            if(dihe.getErrCode() == SKIP_ROW || dihe.getErrCode() == SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              exception = null;//should not propogate up\n              continue;\n            }\n            if (entity.isDocRoot) {\n              if (dihe.getErrCode() == DataImportHandlerException.SKIP) {\n                importStatistics.skipDocCount.getAndIncrement();\n                exception = null;//should not propogate up\n              } else {\n                SolrException.log(LOG, \"Exception while processing: \"\n                        + entity.name + \" document : \" + docWrapper, dihe);\n              }\n              if (dihe.getErrCode() == DataImportHandlerException.SEVERE)\n                throw dihe;\n            } else {\n              //if this is not the docRoot then the execution has happened in the same thread. so propogate up,\n              // it will be handled at the docroot\n              entityEnded.set(true); \n              throw dihe;\n            }\n            entityEnded.set(true);\n          }\n        }\n      } finally {\n        epw.destroy();\n        currentEntityProcWrapper.remove();\n        Context.CURRENT_CONTEXT.remove();\n      }\n    }\n\n","sourceOld":"    private void runAThread(ThreadedEntityProcessorWrapper epw, EntityRow rows, String currProcess) throws Exception {\n      currentEntityProcWrapper.set(epw);\n      epw.threadedInit(context);\n      initEntity();\n      try {\n        epw.init(rows);\n        DocWrapper docWrapper = this.docWrapper;\n        Context.CURRENT_CONTEXT.set(context);\n        for (; ;) {\n          if(DocBuilder.this.stop.get()) break;\n          try {\n            Map<String, Object> arow = epw.nextRow();\n            if (arow == null) {\n              break;\n            } else {\n              importStatistics.rowsCount.incrementAndGet();\n              if (docWrapper == null && entity.isDocRoot) {\n                docWrapper = new DocWrapper();\n                context.setDoc(docWrapper);\n                DataConfig.Entity e = entity.parentEntity;\n                for (EntityRow row = rows;  row != null&& e !=null; row = row.tail,e=e.parentEntity) {\n                    addFields(e, docWrapper, row.row, epw.resolver);\n                }\n              }\n              if (docWrapper != null) {\n                handleSpecialCommands(arow, docWrapper);\n                addFields(entity, docWrapper, arow, epw.resolver);\n              }\n              if (entity.entities != null) {\n                EntityRow nextRow = new EntityRow(arow, rows, entity.name);\n                for (DataConfig.Entity e : entity.entities) {\n                  epw.children.get(e).run(docWrapper,currProcess,nextRow);\n                }\n              }\n            }\n            if (entity.isDocRoot) {\n              LOG.info(\"a row on docroot\" + docWrapper);\n              if (!docWrapper.isEmpty()) {\n                LOG.info(\"adding a doc \"+docWrapper);\n                boolean result = writer.upload(docWrapper);\n                docWrapper = null;\n                if (result){\n                  importStatistics.docCount.incrementAndGet();\n                } else {\n                  importStatistics.failedDocCount.incrementAndGet();\n                }\n              }\n            }\n          } catch (DataImportHandlerException dihe) {\n            exception = dihe;\n            if(dihe.getErrCode() == SKIP_ROW || dihe.getErrCode() == SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              exception = null;//should not propogate up\n              continue;\n            }\n            if (entity.isDocRoot) {\n              if (dihe.getErrCode() == DataImportHandlerException.SKIP) {\n                importStatistics.skipDocCount.getAndIncrement();\n                exception = null;//should not propogate up\n              } else {\n                LOG.error(\"Exception while processing: \"\n                        + entity.name + \" document : \" + docWrapper, dihe);\n              }\n              if (dihe.getErrCode() == DataImportHandlerException.SEVERE)\n                throw dihe;\n            } else {\n              //if this is not the docRoot then the execution has happened in the same thread. so propogate up,\n              // it will be handled at the docroot\n              entityEnded.set(true); \n              throw dihe;\n            }\n            entityEnded.set(true);\n          }\n        }\n      } finally {\n        epw.destroy();\n        currentEntityProcWrapper.remove();\n        Context.CURRENT_CONTEXT.remove();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","sourceNew":"    private void runAThread(ThreadedEntityProcessorWrapper epw, EntityRow rows, String currProcess) throws Exception {\n      currentEntityProcWrapper.set(epw);\n      epw.threadedInit(context);\n      initEntity();\n      try {\n        epw.init(rows);\n        DocWrapper docWrapper = this.docWrapper;\n        Context.CURRENT_CONTEXT.set(context);\n        for (; ;) {\n          if(DocBuilder.this.stop.get()) break;\n          try {\n            Map<String, Object> arow = epw.nextRow();\n            if (arow == null) {\n              break;\n            } else {\n              importStatistics.rowsCount.incrementAndGet();\n              if (docWrapper == null && entity.isDocRoot) {\n                docWrapper = new DocWrapper();\n                context.setDoc(docWrapper);\n                DataConfig.Entity e = entity.parentEntity;\n                for (EntityRow row = rows;  row != null&& e !=null; row = row.tail,e=e.parentEntity) {\n                    addFields(e, docWrapper, row.row, epw.resolver);\n                }\n              }\n              if (docWrapper != null) {\n                handleSpecialCommands(arow, docWrapper);\n                addFields(entity, docWrapper, arow, epw.resolver);\n              }\n              if (entity.entities != null) {\n                EntityRow nextRow = new EntityRow(arow, rows, entity.name);\n                for (DataConfig.Entity e : entity.entities) {\n                  epw.children.get(e).run(docWrapper,currProcess,nextRow);\n                }\n              }\n            }\n            if (entity.isDocRoot) {\n              LOG.info(\"a row on docroot\" + docWrapper);\n              if (!docWrapper.isEmpty()) {\n                LOG.info(\"adding a doc \"+docWrapper);\n                boolean result = writer.upload(docWrapper);\n                docWrapper = null;\n                if (result){\n                  importStatistics.docCount.incrementAndGet();\n                } else {\n                  importStatistics.failedDocCount.incrementAndGet();\n                }\n              }\n            }\n          } catch (DataImportHandlerException dihe) {\n            exception = dihe;\n            if(dihe.getErrCode() == SKIP_ROW || dihe.getErrCode() == SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              exception = null;//should not propogate up\n              continue;\n            }\n            if (entity.isDocRoot) {\n              if (dihe.getErrCode() == DataImportHandlerException.SKIP) {\n                importStatistics.skipDocCount.getAndIncrement();\n                exception = null;//should not propogate up\n              } else {\n                SolrException.log(LOG, \"Exception while processing: \"\n                        + entity.name + \" document : \" + docWrapper, dihe);\n              }\n              if (dihe.getErrCode() == DataImportHandlerException.SEVERE)\n                throw dihe;\n            } else {\n              //if this is not the docRoot then the execution has happened in the same thread. so propogate up,\n              // it will be handled at the docroot\n              entityEnded.set(true); \n              throw dihe;\n            }\n            entityEnded.set(true);\n          }\n        }\n      } finally {\n        epw.destroy();\n        currentEntityProcWrapper.remove();\n        Context.CURRENT_CONTEXT.remove();\n      }\n    }\n\n","sourceOld":"    private void runAThread(ThreadedEntityProcessorWrapper epw, EntityRow rows, String currProcess) throws Exception {\n      currentEntityProcWrapper.set(epw);\n      epw.threadedInit(context);\n      initEntity();\n      try {\n        epw.init(rows);\n        DocWrapper docWrapper = this.docWrapper;\n        Context.CURRENT_CONTEXT.set(context);\n        for (; ;) {\n          if(DocBuilder.this.stop.get()) break;\n          try {\n            Map<String, Object> arow = epw.nextRow();\n            if (arow == null) {\n              break;\n            } else {\n              importStatistics.rowsCount.incrementAndGet();\n              if (docWrapper == null && entity.isDocRoot) {\n                docWrapper = new DocWrapper();\n                context.setDoc(docWrapper);\n                DataConfig.Entity e = entity.parentEntity;\n                for (EntityRow row = rows;  row != null&& e !=null; row = row.tail,e=e.parentEntity) {\n                    addFields(e, docWrapper, row.row, epw.resolver);\n                }\n              }\n              if (docWrapper != null) {\n                handleSpecialCommands(arow, docWrapper);\n                addFields(entity, docWrapper, arow, epw.resolver);\n              }\n              if (entity.entities != null) {\n                EntityRow nextRow = new EntityRow(arow, rows, entity.name);\n                for (DataConfig.Entity e : entity.entities) {\n                  epw.children.get(e).run(docWrapper,currProcess,nextRow);\n                }\n              }\n            }\n            if (entity.isDocRoot) {\n              LOG.info(\"a row on docroot\" + docWrapper);\n              if (!docWrapper.isEmpty()) {\n                LOG.info(\"adding a doc \"+docWrapper);\n                boolean result = writer.upload(docWrapper);\n                docWrapper = null;\n                if (result){\n                  importStatistics.docCount.incrementAndGet();\n                } else {\n                  importStatistics.failedDocCount.incrementAndGet();\n                }\n              }\n            }\n          } catch (DataImportHandlerException dihe) {\n            exception = dihe;\n            if(dihe.getErrCode() == SKIP_ROW || dihe.getErrCode() == SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              exception = null;//should not propogate up\n              continue;\n            }\n            if (entity.isDocRoot) {\n              if (dihe.getErrCode() == DataImportHandlerException.SKIP) {\n                importStatistics.skipDocCount.getAndIncrement();\n                exception = null;//should not propogate up\n              } else {\n                SolrException.log(LOG, \"Exception while processing: \"\n                        + entity.name + \" document : \" + docWrapper, dihe);\n              }\n              if (dihe.getErrCode() == DataImportHandlerException.SEVERE)\n                throw dihe;\n            } else {\n              //if this is not the docRoot then the execution has happened in the same thread. so propogate up,\n              // it will be handled at the docroot\n              entityEnded.set(true); \n              throw dihe;\n            }\n            entityEnded.set(true);\n          }\n        }\n      } finally {\n        epw.destroy();\n        currentEntityProcWrapper.remove();\n        Context.CURRENT_CONTEXT.remove();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder.EntityRunner#runAThread(ThreadedEntityProcessorWrapper,EntityRow,String).mjava","sourceNew":"    private void runAThread(ThreadedEntityProcessorWrapper epw, EntityRow rows, String currProcess) throws Exception {\n      currentEntityProcWrapper.set(epw);\n      epw.threadedInit(context);\n      initEntity();\n      try {\n        epw.init(rows);\n        DocWrapper docWrapper = this.docWrapper;\n        Context.CURRENT_CONTEXT.set(context);\n        for (; ;) {\n          if(DocBuilder.this.stop.get()) break;\n          try {\n            Map<String, Object> arow = epw.nextRow();\n            if (arow == null) {\n              break;\n            } else {\n              importStatistics.rowsCount.incrementAndGet();\n              if (docWrapper == null && entity.isDocRoot) {\n                docWrapper = new DocWrapper();\n                context.setDoc(docWrapper);\n                DataConfig.Entity e = entity.parentEntity;\n                for (EntityRow row = rows;  row != null&& e !=null; row = row.tail,e=e.parentEntity) {\n                    addFields(e, docWrapper, row.row, epw.resolver);\n                }\n              }\n              if (docWrapper != null) {\n                handleSpecialCommands(arow, docWrapper);\n                addFields(entity, docWrapper, arow, epw.resolver);\n              }\n              if (entity.entities != null) {\n                EntityRow nextRow = new EntityRow(arow, rows, entity.name);\n                for (DataConfig.Entity e : entity.entities) {\n                  epw.children.get(e).run(docWrapper,currProcess,nextRow);\n                }\n              }\n            }\n            if (entity.isDocRoot) {\n              LOG.info(\"a row on docroot\" + docWrapper);\n              if (!docWrapper.isEmpty()) {\n                LOG.info(\"adding a doc \"+docWrapper);\n                boolean result = writer.upload(docWrapper);\n                docWrapper = null;\n                if (result){\n                  importStatistics.docCount.incrementAndGet();\n                } else {\n                  importStatistics.failedDocCount.incrementAndGet();\n                }\n              }\n            }\n          } catch (DataImportHandlerException dihe) {\n            exception = dihe;\n            if(dihe.getErrCode() == SKIP_ROW || dihe.getErrCode() == SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              exception = null;//should not propogate up\n              continue;\n            }\n            if (entity.isDocRoot) {\n              if (dihe.getErrCode() == DataImportHandlerException.SKIP) {\n                importStatistics.skipDocCount.getAndIncrement();\n                exception = null;//should not propogate up\n              } else {\n                SolrException.log(LOG, \"Exception while processing: \"\n                        + entity.name + \" document : \" + docWrapper, dihe);\n              }\n              if (dihe.getErrCode() == DataImportHandlerException.SEVERE)\n                throw dihe;\n            } else {\n              //if this is not the docRoot then the execution has happened in the same thread. so propogate up,\n              // it will be handled at the docroot\n              entityEnded.set(true); \n              throw dihe;\n            }\n            entityEnded.set(true);\n          }\n        }\n      } finally {\n        epw.destroy();\n        currentEntityProcWrapper.remove();\n        Context.CURRENT_CONTEXT.remove();\n      }\n    }\n\n","sourceOld":"    private void runAThread(ThreadedEntityProcessorWrapper epw, EntityRow rows, String currProcess) throws Exception {\n      currentEntityProcWrapper.set(epw);\n      epw.threadedInit(context);\n      initEntity();\n      try {\n        epw.init(rows);\n        DocWrapper docWrapper = this.docWrapper;\n        Context.CURRENT_CONTEXT.set(context);\n        for (; ;) {\n          if(DocBuilder.this.stop.get()) break;\n          try {\n            Map<String, Object> arow = epw.nextRow();\n            if (arow == null) {\n              break;\n            } else {\n              importStatistics.rowsCount.incrementAndGet();\n              if (docWrapper == null && entity.isDocRoot) {\n                docWrapper = new DocWrapper();\n                context.setDoc(docWrapper);\n                DataConfig.Entity e = entity.parentEntity;\n                for (EntityRow row = rows;  row != null&& e !=null; row = row.tail,e=e.parentEntity) {\n                    addFields(e, docWrapper, row.row, epw.resolver);\n                }\n              }\n              if (docWrapper != null) {\n                handleSpecialCommands(arow, docWrapper);\n                addFields(entity, docWrapper, arow, epw.resolver);\n              }\n              if (entity.entities != null) {\n                EntityRow nextRow = new EntityRow(arow, rows, entity.name);\n                for (DataConfig.Entity e : entity.entities) {\n                  epw.children.get(e).run(docWrapper,currProcess,nextRow);\n                }\n              }\n            }\n            if (entity.isDocRoot) {\n              LOG.info(\"a row on docroot\" + docWrapper);\n              if (!docWrapper.isEmpty()) {\n                LOG.info(\"adding a doc \"+docWrapper);\n                boolean result = writer.upload(docWrapper);\n                docWrapper = null;\n                if (result){\n                  importStatistics.docCount.incrementAndGet();\n                } else {\n                  importStatistics.failedDocCount.incrementAndGet();\n                }\n              }\n            }\n          } catch (DataImportHandlerException dihe) {\n            exception = dihe;\n            if(dihe.getErrCode() == SKIP_ROW || dihe.getErrCode() == SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              exception = null;//should not propogate up\n              continue;\n            }\n            if (entity.isDocRoot) {\n              if (dihe.getErrCode() == DataImportHandlerException.SKIP) {\n                importStatistics.skipDocCount.getAndIncrement();\n                exception = null;//should not propogate up\n              } else {\n                SolrException.log(LOG, \"Exception while processing: \"\n                        + entity.name + \" document : \" + docWrapper, dihe);\n              }\n              if (dihe.getErrCode() == DataImportHandlerException.SEVERE)\n                throw dihe;\n            } else {\n              //if this is not the docRoot then the execution has happened in the same thread. so propogate up,\n              // it will be handled at the docroot\n              entityEnded.set(true); \n              throw dihe;\n            }\n            entityEnded.set(true);\n          }\n        }\n      } finally {\n        epw.destroy();\n        currentEntityProcWrapper.remove();\n        Context.CURRENT_CONTEXT.remove();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["1da8d55113b689b06716246649de6f62430f15c0","8a95193d2e784a099537d5b5c9936d4e72796a3d"],"8a95193d2e784a099537d5b5c9936d4e72796a3d":["1da8d55113b689b06716246649de6f62430f15c0"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["8a95193d2e784a099537d5b5c9936d4e72796a3d","8a95193d2e784a099537d5b5c9936d4e72796a3d"],"c26f00b574427b55127e869b935845554afde1fa":["8a95193d2e784a099537d5b5c9936d4e72796a3d","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["1da8d55113b689b06716246649de6f62430f15c0","8a95193d2e784a099537d5b5c9936d4e72796a3d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["f1bdbf92da222965b46c0a942c3857ba56e5c638","8a95193d2e784a099537d5b5c9936d4e72796a3d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"8a95193d2e784a099537d5b5c9936d4e72796a3d":["f1bdbf92da222965b46c0a942c3857ba56e5c638","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}