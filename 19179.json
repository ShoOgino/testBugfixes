{"path":"lucene/backwards/src/java/org/apache/lucene/analysis/Analyzer#getOffsetGap(Fieldable).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/analysis/Analyzer#getOffsetGap(Fieldable).mjava","pathOld":"backwards/src/java/org/apache/lucene/analysis/Analyzer#getOffsetGap(Fieldable).mjava","sourceNew":"  /**\n   * Just like {@link #getPositionIncrementGap}, except for\n   * Token offsets instead.  By default this returns 1 for\n   * tokenized fields and, as if the fields were joined\n   * with an extra space character, and 0 for un-tokenized\n   * fields.  This method is only called if the field\n   * produced at least one token for indexing.\n   *\n   * @param field the field just indexed\n   * @return offset gap, added to the next token emitted from {@link #tokenStream(String,Reader)}\n   */\n  public int getOffsetGap(Fieldable field) {\n    if (field.isTokenized())\n      return 1;\n    else\n      return 0;\n  }\n\n","sourceOld":"  /**\n   * Just like {@link #getPositionIncrementGap}, except for\n   * Token offsets instead.  By default this returns 1 for\n   * tokenized fields and, as if the fields were joined\n   * with an extra space character, and 0 for un-tokenized\n   * fields.  This method is only called if the field\n   * produced at least one token for indexing.\n   *\n   * @param field the field just indexed\n   * @return offset gap, added to the next token emitted from {@link #tokenStream(String,Reader)}\n   */\n  public int getOffsetGap(Fieldable field) {\n    if (field.isTokenized())\n      return 1;\n    else\n      return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/analysis/Analyzer#getOffsetGap(Fieldable).mjava","sourceNew":null,"sourceOld":"  /**\n   * Just like {@link #getPositionIncrementGap}, except for\n   * Token offsets instead.  By default this returns 1 for\n   * tokenized fields and, as if the fields were joined\n   * with an extra space character, and 0 for un-tokenized\n   * fields.  This method is only called if the field\n   * produced at least one token for indexing.\n   *\n   * @param field the field just indexed\n   * @return offset gap, added to the next token emitted from {@link #tokenStream(String,Reader)}\n   */\n  public int getOffsetGap(Fieldable field) {\n    if (field.isTokenized())\n      return 1;\n    else\n      return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}