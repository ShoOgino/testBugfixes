{"path":"src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","commits":[{"id":"d80013b5e260def972025c93a0b08524f9c38f49","date":1170102801,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"/dev/null","sourceNew":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase();\n    if( \"GET\".equals( method ) ) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase() ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( 400, \"Unsuported method: \"+method );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7cdafed722b2359055d5edb6712713962bf6754","date":1178385262,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase();\n    if( \"GET\".equals( method ) ) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase() ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( 400, \"Unsuported method: \"+method );\n  }\n\n","sourceOld":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase();\n    if( \"GET\".equals( method ) ) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase() ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( 400, \"Unsuported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996","date":1180477701,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase();\n    if( \"GET\".equals( method ) ) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase() ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsuported method: \"+method );\n  }\n\n","sourceOld":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase();\n    if( \"GET\".equals( method ) ) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase() ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( 400, \"Unsuported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b920ba0b6285c3aaa7a64d1677f5b4ee58b0779d","date":1203633859,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase();\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase() ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","sourceOld":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase();\n    if( \"GET\".equals( method ) ) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase() ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsuported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/StandardRequestParser[SolrRequestParsers]#parseParamsAndFillStreams(HttpServletRequest,ArrayList[ContentStream]).mjava","sourceNew":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase();\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase() ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","sourceOld":"  public SolrParams parseParamsAndFillStreams( \n      final HttpServletRequest req, ArrayList<ContentStream> streams ) throws Exception\n  {\n    String method = req.getMethod().toUpperCase();\n    if( \"GET\".equals( method ) || \"HEAD\".equals( method )) {\n      return new ServletSolrParams(req);\n    }\n    if( \"POST\".equals( method ) ) {\n      String contentType = req.getContentType();\n      if( contentType != null ) {\n        int idx = contentType.indexOf( ';' );\n        if( idx > 0 ) { // remove the charset definition \"; charset=utf-8\"\n          contentType = contentType.substring( 0, idx );\n        }\n        if( \"application/x-www-form-urlencoded\".equals( contentType.toLowerCase() ) ) {\n          return new ServletSolrParams(req); // just get the params from parameterMap\n        }\n        if( ServletFileUpload.isMultipartContent(req) ) {\n          return multipart.parseParamsAndFillStreams(req, streams);\n        }\n      }\n      return raw.parseParamsAndFillStreams(req, streams);\n    }\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"Unsupported method: \"+method );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"b920ba0b6285c3aaa7a64d1677f5b4ee58b0779d":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"ad94625fb8d088209f46650c8097196fec67f00c":["b920ba0b6285c3aaa7a64d1677f5b4ee58b0779d"],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["a7cdafed722b2359055d5edb6712713962bf6754"],"a7cdafed722b2359055d5edb6712713962bf6754":["d80013b5e260def972025c93a0b08524f9c38f49"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d80013b5e260def972025c93a0b08524f9c38f49":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["d80013b5e260def972025c93a0b08524f9c38f49"],"b920ba0b6285c3aaa7a64d1677f5b4ee58b0779d":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["b920ba0b6285c3aaa7a64d1677f5b4ee58b0779d"],"a7cdafed722b2359055d5edb6712713962bf6754":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"d80013b5e260def972025c93a0b08524f9c38f49":["a7cdafed722b2359055d5edb6712713962bf6754"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}