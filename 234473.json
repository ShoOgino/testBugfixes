{"path":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionFunctionValues#ExpressionFunctionValues(ValueSource,Expression,FunctionValues[]).mjava","commits":[{"id":"a397491f6601f7c45bc425f45e95c41c3a6d1ca3","date":1380651240,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionFunctionValues#ExpressionFunctionValues(ValueSource,Expression,FunctionValues[]).mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionFunctionValues#ExpressionFunctionValues(Expression,FunctionValues[]).mjava","sourceNew":"  ExpressionFunctionValues(ValueSource parent, Expression expression, FunctionValues[] functionValues) {\n    super(parent);\n    if (expression == null) {\n      throw new NullPointerException();\n    }\n    if (functionValues == null) {\n      throw new NullPointerException();\n    }\n    this.expression = expression;\n    this.functionValues = functionValues;\n  }\n\n","sourceOld":"  public ExpressionFunctionValues(Expression expression, FunctionValues[] functionValues) {\n    if (expression == null) {\n      throw new NullPointerException();\n    }\n    if (functionValues == null) {\n      throw new NullPointerException();\n    }\n    this.expression = expression;\n    this.functionValues = functionValues;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ae1ad302fc92a61505409a38838f2b1a4a2b092","date":1483787106,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionFunctionValues#ExpressionFunctionValues(Expression,DoubleValues[]).mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionFunctionValues#ExpressionFunctionValues(ValueSource,Expression,FunctionValues[]).mjava","sourceNew":"  ExpressionFunctionValues(Expression expression, DoubleValues[] functionValues) {\n    if (expression == null) {\n      throw new NullPointerException();\n    }\n    if (functionValues == null) {\n      throw new NullPointerException();\n    }\n    this.expression = expression;\n    this.functionValues = functionValues;\n  }\n\n","sourceOld":"  ExpressionFunctionValues(ValueSource parent, Expression expression, FunctionValues[] functionValues) {\n    super(parent);\n    if (expression == null) {\n      throw new NullPointerException();\n    }\n    if (functionValues == null) {\n      throw new NullPointerException();\n    }\n    this.expression = expression;\n    this.functionValues = functionValues;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionFunctionValues#ExpressionFunctionValues(Expression,DoubleValues[]).mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionFunctionValues#ExpressionFunctionValues(ValueSource,Expression,FunctionValues[]).mjava","sourceNew":"  ExpressionFunctionValues(Expression expression, DoubleValues[] functionValues) {\n    if (expression == null) {\n      throw new NullPointerException();\n    }\n    if (functionValues == null) {\n      throw new NullPointerException();\n    }\n    this.expression = expression;\n    this.functionValues = functionValues;\n  }\n\n","sourceOld":"  ExpressionFunctionValues(ValueSource parent, Expression expression, FunctionValues[] functionValues) {\n    super(parent);\n    if (expression == null) {\n      throw new NullPointerException();\n    }\n    if (functionValues == null) {\n      throw new NullPointerException();\n    }\n    this.expression = expression;\n    this.functionValues = functionValues;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7ae1ad302fc92a61505409a38838f2b1a4a2b092":["a397491f6601f7c45bc425f45e95c41c3a6d1ca3"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["a397491f6601f7c45bc425f45e95c41c3a6d1ca3","7ae1ad302fc92a61505409a38838f2b1a4a2b092"],"a397491f6601f7c45bc425f45e95c41c3a6d1ca3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7ae1ad302fc92a61505409a38838f2b1a4a2b092"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a397491f6601f7c45bc425f45e95c41c3a6d1ca3"],"7ae1ad302fc92a61505409a38838f2b1a4a2b092":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"a397491f6601f7c45bc425f45e95c41c3a6d1ca3":["7ae1ad302fc92a61505409a38838f2b1a4a2b092","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}