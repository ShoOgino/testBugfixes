{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudHttp2SolrClientTest#checkSingleServer(NamedList[Object]).mjava","commits":[{"id":"0544142c22eb88b6d8b3817f2e1190156aa4f9af","date":1551692505,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudHttp2SolrClientTest#checkSingleServer(NamedList[Object]).mjava","pathOld":"/dev/null","sourceNew":"  private static void checkSingleServer(NamedList<Object> response) {\n    final RouteResponse rr = (RouteResponse) response;\n    final Map<String,LBSolrClient.Req> routes = rr.getRoutes();\n    final Iterator<Map.Entry<String,LBSolrClient.Req>> it =\n        routes.entrySet().iterator();\n    while (it.hasNext()) {\n      Map.Entry<String,LBSolrClient.Req> entry = it.next();\n        assertEquals(\"wrong number of servers: \"+entry.getValue().getServers(),\n            1, entry.getValue().getServers().size());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudHttp2SolrClientTest#checkSingleServer(NamedList[Object]).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/CloudHttp2SolrClientTest#checkSingleServer(NamedList[Object]).mjava","sourceNew":"  private static void checkSingleServer(NamedList<Object> response) {\n    @SuppressWarnings({\"rawtypes\"})\n    final RouteResponse rr = (RouteResponse) response;\n    @SuppressWarnings({\"unchecked\"})\n    final Map<String,LBSolrClient.Req> routes = rr.getRoutes();\n    final Iterator<Map.Entry<String,LBSolrClient.Req>> it =\n        routes.entrySet().iterator();\n    while (it.hasNext()) {\n      Map.Entry<String,LBSolrClient.Req> entry = it.next();\n        assertEquals(\"wrong number of servers: \"+entry.getValue().getServers(),\n            1, entry.getValue().getServers().size());\n    }\n  }\n\n","sourceOld":"  private static void checkSingleServer(NamedList<Object> response) {\n    final RouteResponse rr = (RouteResponse) response;\n    final Map<String,LBSolrClient.Req> routes = rr.getRoutes();\n    final Iterator<Map.Entry<String,LBSolrClient.Req>> it =\n        routes.entrySet().iterator();\n    while (it.hasNext()) {\n      Map.Entry<String,LBSolrClient.Req> entry = it.next();\n        assertEquals(\"wrong number of servers: \"+entry.getValue().getServers(),\n            1, entry.getValue().getServers().size());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["0544142c22eb88b6d8b3817f2e1190156aa4f9af"],"0544142c22eb88b6d8b3817f2e1190156aa4f9af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0544142c22eb88b6d8b3817f2e1190156aa4f9af":["9ba1b632c041956c93c41aa1143d16a567014891"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0544142c22eb88b6d8b3817f2e1190156aa4f9af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}