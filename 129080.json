{"path":"lucene/sandbox/src/test/org/apache/lucene/search/TestLongRangeFieldQueries.LongRange#isEqual(Range).mjava","commits":[{"id":"7825da0fed0bd08a466fec72f7c6a18a2abb303d","date":1471466888,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestLongRangeFieldQueries.LongRange#isEqual(Range).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected boolean isEqual(Range other) {\n      LongRange o = (LongRange)other;\n      return Arrays.equals(min, o.min) && Arrays.equals(max, o.max);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestLongRangeFieldQueries.LongRange#isEqual(Range).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected boolean isEqual(Range other) {\n      LongRange o = (LongRange)other;\n      return Arrays.equals(min, o.min) && Arrays.equals(max, o.max);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestLongRangeFieldQueries.LongRange#isEqual(Range).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected boolean isEqual(Range other) {\n      LongRange o = (LongRange)other;\n      return Arrays.equals(min, o.min) && Arrays.equals(max, o.max);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestLongRangeFieldQueries.LongRange#isEqual(Range).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected boolean isEqual(Range other) {\n      LongRange o = (LongRange)other;\n      return Arrays.equals(min, o.min) && Arrays.equals(max, o.max);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a52b01a73cacbd2d360240e72d64c0ba353618f","date":1489389749,"type":6,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestDoubleRangeFieldQueries.DoubleTestRange#isEqual(Range).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestLongRangeFieldQueries.LongRange#isEqual(Range).mjava","sourceNew":"    @Override\n    protected boolean isEqual(Range other) {\n      DoubleTestRange o = (DoubleTestRange)other;\n      return Arrays.equals(min, o.min) && Arrays.equals(max, o.max);\n    }\n\n","sourceOld":"    @Override\n    protected boolean isEqual(Range other) {\n      LongRange o = (LongRange)other;\n      return Arrays.equals(min, o.min) && Arrays.equals(max, o.max);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a52b01a73cacbd2d360240e72d64c0ba353618f","date":1489389749,"type":6,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFloatRangeFieldQueries.FloatTestRange#isEqual(Range).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestLongRangeFieldQueries.LongRange#isEqual(Range).mjava","sourceNew":"    @Override\n    protected boolean isEqual(Range other) {\n      FloatTestRange o = (FloatTestRange)other;\n      return Arrays.equals(min, o.min) && Arrays.equals(max, o.max);\n    }\n\n","sourceOld":"    @Override\n    protected boolean isEqual(Range other) {\n      LongRange o = (LongRange)other;\n      return Arrays.equals(min, o.min) && Arrays.equals(max, o.max);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a52b01a73cacbd2d360240e72d64c0ba353618f","date":1489389749,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestIntRangeFieldQueries.IntTestRange#isEqual(Range).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestLongRangeFieldQueries.LongRange#isEqual(Range).mjava","sourceNew":"    @Override\n    protected boolean isEqual(Range other) {\n      IntTestRange o = (IntTestRange)other;\n      return Arrays.equals(min, o.min) && Arrays.equals(max, o.max);\n    }\n\n","sourceOld":"    @Override\n    protected boolean isEqual(Range other) {\n      LongRange o = (LongRange)other;\n      return Arrays.equals(min, o.min) && Arrays.equals(max, o.max);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a52b01a73cacbd2d360240e72d64c0ba353618f","date":1489389749,"type":6,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestLongRangeFieldQueries.LongTestRange#isEqual(Range).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestLongRangeFieldQueries.LongRange#isEqual(Range).mjava","sourceNew":"    @Override\n    protected boolean isEqual(Range other) {\n      LongTestRange o = (LongTestRange)other;\n      return Arrays.equals(min, o.min) && Arrays.equals(max, o.max);\n    }\n\n","sourceOld":"    @Override\n    protected boolean isEqual(Range other) {\n      LongRange o = (LongRange)other;\n      return Arrays.equals(min, o.min) && Arrays.equals(max, o.max);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"403d05f7f8d69b65659157eff1bc1d2717f04c66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"7825da0fed0bd08a466fec72f7c6a18a2abb303d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4a52b01a73cacbd2d360240e72d64c0ba353618f":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7825da0fed0bd08a466fec72f7c6a18a2abb303d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a52b01a73cacbd2d360240e72d64c0ba353618f"]},"commit2Childs":{"403d05f7f8d69b65659157eff1bc1d2717f04c66":["4a52b01a73cacbd2d360240e72d64c0ba353618f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"7825da0fed0bd08a466fec72f7c6a18a2abb303d":["2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"4a52b01a73cacbd2d360240e72d64c0ba353618f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["403d05f7f8d69b65659157eff1bc1d2717f04c66","7825da0fed0bd08a466fec72f7c6a18a2abb303d","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}