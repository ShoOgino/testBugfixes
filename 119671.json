{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene80/Lucene80DocValuesProducer#getSortedSet(FieldInfo).mjava","commits":[{"id":"03e17b020972a0d6e8d6823f545571a66646a167","date":1547847724,"type":0,"author":"Toke Eskildsen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene80/Lucene80DocValuesProducer#getSortedSet(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSet(FieldInfo field) throws IOException {\n    SortedSetEntry entry = sortedSets.get(field.name);\n    if (entry.singleValueEntry != null) {\n      return DocValues.singleton(getSorted(entry.singleValueEntry));\n    }\n\n    final RandomAccessInput slice = data.randomAccessSlice(entry.ordsOffset, entry.ordsLength);\n    final LongValues ords = DirectReader.getInstance(slice, entry.bitsPerValue);\n\n    final RandomAccessInput addressesInput = data.randomAccessSlice(entry.addressesOffset, entry.addressesLength);\n    final LongValues addresses = DirectMonotonicReader.getInstance(entry.addressesMeta, addressesInput);\n\n    if (entry.docsWithFieldOffset == -1) {\n      // dense\n      return new BaseSortedSetDocValues(entry, data) {\n\n        int doc = -1;\n        long start;\n        long end;\n\n        @Override\n        public int nextDoc() throws IOException {\n          return advance(doc + 1);\n        }\n\n        @Override\n        public int docID() {\n          return doc;\n        }\n\n        @Override\n        public long cost() {\n          return maxDoc;\n        }\n\n        @Override\n        public int advance(int target) throws IOException {\n          if (target >= maxDoc) {\n            return doc = NO_MORE_DOCS;\n          }\n          start = addresses.get(target);\n          end = addresses.get(target + 1L);\n          return doc = target;\n        }\n\n        @Override\n        public boolean advanceExact(int target) throws IOException {\n          start = addresses.get(target);\n          end = addresses.get(target + 1L);\n          doc = target;\n          return true;\n        }\n\n        @Override\n        public long nextOrd() throws IOException {\n          if (start == end) {\n            return NO_MORE_ORDS;\n          }\n          return ords.get(start++);\n        }\n\n      };\n    } else {\n      // sparse\n      final IndexedDISI disi = new IndexedDISI(data, entry.docsWithFieldOffset, entry.docsWithFieldLength,\n          entry.jumpTableEntryCount, entry.denseRankPower, entry.numDocsWithField);\n      return new BaseSortedSetDocValues(entry, data) {\n\n        boolean set;\n        long start;\n        long end = 0;\n\n        @Override\n        public int nextDoc() throws IOException {\n          set = false;\n          return disi.nextDoc();\n        }\n\n        @Override\n        public int docID() {\n          return disi.docID();\n        }\n\n        @Override\n        public long cost() {\n          return disi.cost();\n        }\n\n        @Override\n        public int advance(int target) throws IOException {\n          set = false;\n          return disi.advance(target);\n        }\n\n        @Override\n        public boolean advanceExact(int target) throws IOException {\n          set = false;\n          return disi.advanceExact(target);\n        }\n\n        @Override\n        public long nextOrd() throws IOException {\n          if (set == false) {\n            final int index = disi.index();\n            final long start = addresses.get(index);\n            this.start = start + 1;\n            end = addresses.get(index + 1L);\n            set = true;\n            return ords.get(start);\n          } else if (start == end) {\n            return NO_MORE_ORDS;\n          } else {\n            return ords.get(start++);\n          }\n        }\n\n      };\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c89f1ef80a9432f4eabaeda9a1e135cd72e60836","date":1547972642,"type":0,"author":"Tommaso Teofili","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene80/Lucene80DocValuesProducer#getSortedSet(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SortedSetDocValues getSortedSet(FieldInfo field) throws IOException {\n    SortedSetEntry entry = sortedSets.get(field.name);\n    if (entry.singleValueEntry != null) {\n      return DocValues.singleton(getSorted(entry.singleValueEntry));\n    }\n\n    final RandomAccessInput slice = data.randomAccessSlice(entry.ordsOffset, entry.ordsLength);\n    final LongValues ords = DirectReader.getInstance(slice, entry.bitsPerValue);\n\n    final RandomAccessInput addressesInput = data.randomAccessSlice(entry.addressesOffset, entry.addressesLength);\n    final LongValues addresses = DirectMonotonicReader.getInstance(entry.addressesMeta, addressesInput);\n\n    if (entry.docsWithFieldOffset == -1) {\n      // dense\n      return new BaseSortedSetDocValues(entry, data) {\n\n        int doc = -1;\n        long start;\n        long end;\n\n        @Override\n        public int nextDoc() throws IOException {\n          return advance(doc + 1);\n        }\n\n        @Override\n        public int docID() {\n          return doc;\n        }\n\n        @Override\n        public long cost() {\n          return maxDoc;\n        }\n\n        @Override\n        public int advance(int target) throws IOException {\n          if (target >= maxDoc) {\n            return doc = NO_MORE_DOCS;\n          }\n          start = addresses.get(target);\n          end = addresses.get(target + 1L);\n          return doc = target;\n        }\n\n        @Override\n        public boolean advanceExact(int target) throws IOException {\n          start = addresses.get(target);\n          end = addresses.get(target + 1L);\n          doc = target;\n          return true;\n        }\n\n        @Override\n        public long nextOrd() throws IOException {\n          if (start == end) {\n            return NO_MORE_ORDS;\n          }\n          return ords.get(start++);\n        }\n\n      };\n    } else {\n      // sparse\n      final IndexedDISI disi = new IndexedDISI(data, entry.docsWithFieldOffset, entry.docsWithFieldLength,\n          entry.jumpTableEntryCount, entry.denseRankPower, entry.numDocsWithField);\n      return new BaseSortedSetDocValues(entry, data) {\n\n        boolean set;\n        long start;\n        long end = 0;\n\n        @Override\n        public int nextDoc() throws IOException {\n          set = false;\n          return disi.nextDoc();\n        }\n\n        @Override\n        public int docID() {\n          return disi.docID();\n        }\n\n        @Override\n        public long cost() {\n          return disi.cost();\n        }\n\n        @Override\n        public int advance(int target) throws IOException {\n          set = false;\n          return disi.advance(target);\n        }\n\n        @Override\n        public boolean advanceExact(int target) throws IOException {\n          set = false;\n          return disi.advanceExact(target);\n        }\n\n        @Override\n        public long nextOrd() throws IOException {\n          if (set == false) {\n            final int index = disi.index();\n            final long start = addresses.get(index);\n            this.start = start + 1;\n            end = addresses.get(index + 1L);\n            set = true;\n            return ords.get(start);\n          } else if (start == end) {\n            return NO_MORE_ORDS;\n          } else {\n            return ords.get(start++);\n          }\n        }\n\n      };\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"03e17b020972a0d6e8d6823f545571a66646a167":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","03e17b020972a0d6e8d6823f545571a66646a167"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["03e17b020972a0d6e8d6823f545571a66646a167"]},"commit2Childs":{"03e17b020972a0d6e8d6823f545571a66646a167":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["03e17b020972a0d6e8d6823f545571a66646a167","c89f1ef80a9432f4eabaeda9a1e135cd72e60836"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}