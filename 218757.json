{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/lv/TestLatvianStemmer#testNouns4().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/lv/TestLatvianStemmer#testNouns4().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/lv/TestLatvianStemmer#testNouns4().mjava","sourceNew":"  public void testNouns4() throws IOException {\n    // decl IV\n    checkOneTerm(a, \"lapa\",  \"lap\"); // nom. sing.\n    checkOneTerm(a, \"lapas\", \"lap\"); // nom. pl.\n    checkOneTerm(a, \"lapas\", \"lap\"); // gen. sing.\n    checkOneTerm(a, \"lapu\",  \"lap\"); // gen. pl.\n    checkOneTerm(a, \"lapai\", \"lap\"); // dat. sing.\n    checkOneTerm(a, \"lapām\", \"lap\"); // dat. pl.\n    checkOneTerm(a, \"lapu\",  \"lap\"); // acc. sing.\n    checkOneTerm(a, \"lapas\", \"lap\"); // acc. pl.\n    checkOneTerm(a, \"lapā\",  \"lap\"); // loc. sing.\n    checkOneTerm(a, \"lapās\", \"lap\"); // loc. pl.\n    checkOneTerm(a, \"lapa\",  \"lap\"); // voc. sing.\n    checkOneTerm(a, \"lapas\", \"lap\"); // voc. pl.\n    \n    checkOneTerm(a, \"puika\",  \"puik\"); // nom. sing.\n    checkOneTerm(a, \"puikas\", \"puik\"); // nom. pl.\n    checkOneTerm(a, \"puikas\", \"puik\"); // gen. sing.\n    checkOneTerm(a, \"puiku\",  \"puik\"); // gen. pl.\n    checkOneTerm(a, \"puikam\", \"puik\"); // dat. sing.\n    checkOneTerm(a, \"puikām\", \"puik\"); // dat. pl.\n    checkOneTerm(a, \"puiku\",  \"puik\"); // acc. sing.\n    checkOneTerm(a, \"puikas\", \"puik\"); // acc. pl.\n    checkOneTerm(a, \"puikā\",  \"puik\"); // loc. sing.\n    checkOneTerm(a, \"puikās\", \"puik\"); // loc. pl.\n    checkOneTerm(a, \"puika\",  \"puik\"); // voc. sing.\n    checkOneTerm(a, \"puikas\", \"puik\"); // voc. pl.\n  }\n\n","sourceOld":"  public void testNouns4() throws IOException {\n    // decl IV\n    checkOneTerm(a, \"lapa\",  \"lap\"); // nom. sing.\n    checkOneTerm(a, \"lapas\", \"lap\"); // nom. pl.\n    checkOneTerm(a, \"lapas\", \"lap\"); // gen. sing.\n    checkOneTerm(a, \"lapu\",  \"lap\"); // gen. pl.\n    checkOneTerm(a, \"lapai\", \"lap\"); // dat. sing.\n    checkOneTerm(a, \"lapām\", \"lap\"); // dat. pl.\n    checkOneTerm(a, \"lapu\",  \"lap\"); // acc. sing.\n    checkOneTerm(a, \"lapas\", \"lap\"); // acc. pl.\n    checkOneTerm(a, \"lapā\",  \"lap\"); // loc. sing.\n    checkOneTerm(a, \"lapās\", \"lap\"); // loc. pl.\n    checkOneTerm(a, \"lapa\",  \"lap\"); // voc. sing.\n    checkOneTerm(a, \"lapas\", \"lap\"); // voc. pl.\n    \n    checkOneTerm(a, \"puika\",  \"puik\"); // nom. sing.\n    checkOneTerm(a, \"puikas\", \"puik\"); // nom. pl.\n    checkOneTerm(a, \"puikas\", \"puik\"); // gen. sing.\n    checkOneTerm(a, \"puiku\",  \"puik\"); // gen. pl.\n    checkOneTerm(a, \"puikam\", \"puik\"); // dat. sing.\n    checkOneTerm(a, \"puikām\", \"puik\"); // dat. pl.\n    checkOneTerm(a, \"puiku\",  \"puik\"); // acc. sing.\n    checkOneTerm(a, \"puikas\", \"puik\"); // acc. pl.\n    checkOneTerm(a, \"puikā\",  \"puik\"); // loc. sing.\n    checkOneTerm(a, \"puikās\", \"puik\"); // loc. pl.\n    checkOneTerm(a, \"puika\",  \"puik\"); // voc. sing.\n    checkOneTerm(a, \"puikas\", \"puik\"); // voc. pl.\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}