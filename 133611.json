{"path":"lucene/core/src/java/org/apache/lucene/util/BitUtil#pop(long).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BitUtil#pop(long).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/BitUtil#pop(long).mjava","sourceNew":"  /** Returns the number of bits set in the long */\n  public static int pop(long x) {\n  /* Hacker's Delight 32 bit pop function:\n   * http://www.hackersdelight.org/HDcode/newCode/pop_arrayHS.cc\n   *\n  int pop(unsigned x) {\n     x = x - ((x >> 1) & 0x55555555);\n     x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n     x = (x + (x >> 4)) & 0x0F0F0F0F;\n     x = x + (x >> 8);\n     x = x + (x >> 16);\n     return x & 0x0000003F;\n    }\n  ***/\n\n    // 64 bit java version of the C function from above\n    x = x - ((x >>> 1) & 0x5555555555555555L);\n    x = (x & 0x3333333333333333L) + ((x >>>2 ) & 0x3333333333333333L);\n    x = (x + (x >>> 4)) & 0x0F0F0F0F0F0F0F0FL;\n    x = x + (x >>> 8);\n    x = x + (x >>> 16);\n    x = x + (x >>> 32);\n    return ((int)x) & 0x7F;\n  }\n\n","sourceOld":"  /** Returns the number of bits set in the long */\n  public static int pop(long x) {\n  /* Hacker's Delight 32 bit pop function:\n   * http://www.hackersdelight.org/HDcode/newCode/pop_arrayHS.cc\n   *\n  int pop(unsigned x) {\n     x = x - ((x >> 1) & 0x55555555);\n     x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n     x = (x + (x >> 4)) & 0x0F0F0F0F;\n     x = x + (x >> 8);\n     x = x + (x >> 16);\n     return x & 0x0000003F;\n    }\n  ***/\n\n    // 64 bit java version of the C function from above\n    x = x - ((x >>> 1) & 0x5555555555555555L);\n    x = (x & 0x3333333333333333L) + ((x >>>2 ) & 0x3333333333333333L);\n    x = (x + (x >>> 4)) & 0x0F0F0F0F0F0F0F0FL;\n    x = x + (x >>> 8);\n    x = x + (x >>> 16);\n    x = x + (x >>> 32);\n    return ((int)x) & 0x7F;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95f83654246556082000bded885bde27a521bb31","date":1353427179,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/BitUtil#pop(long).mjava","sourceNew":null,"sourceOld":"  /** Returns the number of bits set in the long */\n  public static int pop(long x) {\n  /* Hacker's Delight 32 bit pop function:\n   * http://www.hackersdelight.org/HDcode/newCode/pop_arrayHS.cc\n   *\n  int pop(unsigned x) {\n     x = x - ((x >> 1) & 0x55555555);\n     x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n     x = (x + (x >> 4)) & 0x0F0F0F0F;\n     x = x + (x >> 8);\n     x = x + (x >> 16);\n     return x & 0x0000003F;\n    }\n  ***/\n\n    // 64 bit java version of the C function from above\n    x = x - ((x >>> 1) & 0x5555555555555555L);\n    x = (x & 0x3333333333333333L) + ((x >>>2 ) & 0x3333333333333333L);\n    x = (x + (x >>> 4)) & 0x0F0F0F0F0F0F0F0FL;\n    x = x + (x >>> 8);\n    x = x + (x >>> 16);\n    x = x + (x >>> 32);\n    return ((int)x) & 0x7F;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/BitUtil#pop(long).mjava","sourceNew":null,"sourceOld":"  /** Returns the number of bits set in the long */\n  public static int pop(long x) {\n  /* Hacker's Delight 32 bit pop function:\n   * http://www.hackersdelight.org/HDcode/newCode/pop_arrayHS.cc\n   *\n  int pop(unsigned x) {\n     x = x - ((x >> 1) & 0x55555555);\n     x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n     x = (x + (x >> 4)) & 0x0F0F0F0F;\n     x = x + (x >> 8);\n     x = x + (x >> 16);\n     return x & 0x0000003F;\n    }\n  ***/\n\n    // 64 bit java version of the C function from above\n    x = x - ((x >>> 1) & 0x5555555555555555L);\n    x = (x & 0x3333333333333333L) + ((x >>>2 ) & 0x3333333333333333L);\n    x = (x + (x >>> 4)) & 0x0F0F0F0F0F0F0F0FL;\n    x = x + (x >>> 8);\n    x = x + (x >>> 16);\n    x = x + (x >>> 32);\n    return ((int)x) & 0x7F;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"95f83654246556082000bded885bde27a521bb31":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","95f83654246556082000bded885bde27a521bb31"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["95f83654246556082000bded885bde27a521bb31"]},"commit2Childs":{"95f83654246556082000bded885bde27a521bb31":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["95f83654246556082000bded885bde27a521bb31","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}