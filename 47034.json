{"path":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest#testCopyFieldFunctionality().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest#testCopyFieldFunctionality().mjava","pathOld":"solr/src/test/org/apache/solr/schema/CopyFieldTest#testCopyFieldFunctionality().mjava","sourceNew":"  @Test\n  public void testCopyFieldFunctionality() \n    {\n      SolrCore core = h.getCore();\n      assertU(adoc(\"id\", \"10\", \"title\", \"test copy field\", \"text_en\", \"this is a simple test of the copy field functionality\"));\n      assertU(commit());\n      \n      Map<String,String> args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"text_en:simple\" );\n      args.put( \"indent\", \"true\" );\n      SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      \n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='10']\"\n              );\n      \n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"highlight:simple\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='10']\"\n              ,\"//result/doc[1]/arr[@name='highlight']/str[.='this is a simple test of ']\"\n              );\n\n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"text_en:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\");\n      \n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"highlight:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='0']\");\n    }\n\n","sourceOld":"  @Test\n  public void testCopyFieldFunctionality() \n    {\n      SolrCore core = h.getCore();\n      assertU(adoc(\"id\", \"10\", \"title\", \"test copy field\", \"text_en\", \"this is a simple test of the copy field functionality\"));\n      assertU(commit());\n      \n      Map<String,String> args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"text_en:simple\" );\n      args.put( \"indent\", \"true\" );\n      SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      \n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='10']\"\n              );\n      \n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"highlight:simple\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='10']\"\n              ,\"//result/doc[1]/arr[@name='highlight']/str[.='this is a simple test of ']\"\n              );\n\n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"text_en:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\");\n      \n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"highlight:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='0']\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest#testCopyFieldFunctionality().mjava","pathOld":"solr/src/test/org/apache/solr/schema/CopyFieldTest#testCopyFieldFunctionality().mjava","sourceNew":"  @Test\n  public void testCopyFieldFunctionality() \n    {\n      SolrCore core = h.getCore();\n      assertU(adoc(\"id\", \"10\", \"title\", \"test copy field\", \"text_en\", \"this is a simple test of the copy field functionality\"));\n      assertU(commit());\n      \n      Map<String,String> args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"text_en:simple\" );\n      args.put( \"indent\", \"true\" );\n      SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      \n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='10']\"\n              );\n      \n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"highlight:simple\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='10']\"\n              ,\"//result/doc[1]/arr[@name='highlight']/str[.='this is a simple test of ']\"\n              );\n\n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"text_en:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\");\n      \n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"highlight:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='0']\");\n    }\n\n","sourceOld":"  @Test\n  public void testCopyFieldFunctionality() \n    {\n      SolrCore core = h.getCore();\n      assertU(adoc(\"id\", \"10\", \"title\", \"test copy field\", \"text_en\", \"this is a simple test of the copy field functionality\"));\n      assertU(commit());\n      \n      Map<String,String> args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"text_en:simple\" );\n      args.put( \"indent\", \"true\" );\n      SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      \n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='10']\"\n              );\n      \n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"highlight:simple\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='10']\"\n              ,\"//result/doc[1]/arr[@name='highlight']/str[.='this is a simple test of ']\"\n              );\n\n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"text_en:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\");\n      \n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"highlight:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='0']\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest#testCopyFieldFunctionality().mjava","pathOld":"solr/src/test/org/apache/solr/schema/CopyFieldTest#testCopyFieldFunctionality().mjava","sourceNew":"  @Test\n  public void testCopyFieldFunctionality() \n    {\n      SolrCore core = h.getCore();\n      assertU(adoc(\"id\", \"10\", \"title\", \"test copy field\", \"text_en\", \"this is a simple test of the copy field functionality\"));\n      assertU(commit());\n      \n      Map<String,String> args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"text_en:simple\" );\n      args.put( \"indent\", \"true\" );\n      SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      \n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='10']\"\n              );\n      \n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"highlight:simple\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='10']\"\n              ,\"//result/doc[1]/arr[@name='highlight']/str[.='this is a simple test of ']\"\n              );\n\n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"text_en:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\");\n      \n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"highlight:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='0']\");\n    }\n\n","sourceOld":"  @Test\n  public void testCopyFieldFunctionality() \n    {\n      SolrCore core = h.getCore();\n      assertU(adoc(\"id\", \"10\", \"title\", \"test copy field\", \"text_en\", \"this is a simple test of the copy field functionality\"));\n      assertU(commit());\n      \n      Map<String,String> args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"text_en:simple\" );\n      args.put( \"indent\", \"true\" );\n      SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      \n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='10']\"\n              );\n      \n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"highlight:simple\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='10']\"\n              ,\"//result/doc[1]/arr[@name='highlight']/str[.='this is a simple test of ']\"\n              );\n\n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"text_en:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\");\n      \n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"highlight:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='0']\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest#testCopyFieldFunctionality().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest#testCopyFieldFunctionality().mjava","sourceNew":"  @Test\n  public void testCopyFieldFunctionality() \n    {\n      SolrCore core = h.getCore();\n      assertU(adoc(\"id\", \"10\", \"title\", \"test copy field\", \"text_en\", \"this is a simple test of the copy field functionality\"));\n      assertU(commit());\n      \n      Map<String,String> args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:simple\" );\n      args.put( \"indent\", \"true\" );\n      SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      \n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='10']\"\n              );\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:simple\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='10']\"\n              ,\"//result/doc[1]/arr[@name='highlight']/str[.='this is a simple test of ']\"\n              );\n\n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\");\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='0']\");\n    }\n\n","sourceOld":"  @Test\n  public void testCopyFieldFunctionality() \n    {\n      SolrCore core = h.getCore();\n      assertU(adoc(\"id\", \"10\", \"title\", \"test copy field\", \"text_en\", \"this is a simple test of the copy field functionality\"));\n      assertU(commit());\n      \n      Map<String,String> args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"text_en:simple\" );\n      args.put( \"indent\", \"true\" );\n      SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      \n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='10']\"\n              );\n      \n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"highlight:simple\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='10']\"\n              ,\"//result/doc[1]/arr[@name='highlight']/str[.='this is a simple test of ']\"\n              );\n\n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"text_en:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\");\n      \n      args = new HashMap<String, String>();\n      args.put( CommonParams.Q, \"highlight:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='0']\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a9573e8f5b6e1ee93e8d2b1b68cd1e97891648c","date":1493154462,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest#testCopyFieldFunctionality().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest#testCopyFieldFunctionality().mjava","sourceNew":"  @Test\n  public void testCopyFieldFunctionality() \n    {\n      SolrCore core = h.getCore();\n      assertU(adoc(\"id\", \"5\", \"title\", \"test copy field\", \"text_en\", \"this is a simple test of the copy field functionality\"));\n      assertU(commit());\n      \n      Map<String,String> args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:simple\" );\n      args.put( \"indent\", \"true\" );\n      SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      \n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='5']\"\n              );\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:simple\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='5']\"\n              ,\"//result/doc[1]/arr[@name='highlight']/str[.='this is a simple test of ']\"\n              );\n\n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\");\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='0']\");\n    }\n\n","sourceOld":"  @Test\n  public void testCopyFieldFunctionality() \n    {\n      SolrCore core = h.getCore();\n      assertU(adoc(\"id\", \"10\", \"title\", \"test copy field\", \"text_en\", \"this is a simple test of the copy field functionality\"));\n      assertU(commit());\n      \n      Map<String,String> args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:simple\" );\n      args.put( \"indent\", \"true\" );\n      SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      \n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='10']\"\n              );\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:simple\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='10']\"\n              ,\"//result/doc[1]/arr[@name='highlight']/str[.='this is a simple test of ']\"\n              );\n\n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\");\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='0']\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest#testCopyFieldFunctionality().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest#testCopyFieldFunctionality().mjava","sourceNew":"  @Test\n  public void testCopyFieldFunctionality() \n    {\n      SolrCore core = h.getCore();\n      assertU(adoc(\"id\", \"5\", \"title\", \"test copy field\", \"text_en\", \"this is a simple test of the copy field functionality\"));\n      assertU(commit());\n      \n      Map<String,String> args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:simple\" );\n      args.put( \"indent\", \"true\" );\n      SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      \n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='5']\"\n              );\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:simple\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='5']\"\n              ,\"//result/doc[1]/arr[@name='highlight']/str[.='this is a simple test of ']\"\n              );\n\n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\");\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='0']\");\n    }\n\n","sourceOld":"  @Test\n  public void testCopyFieldFunctionality() \n    {\n      SolrCore core = h.getCore();\n      assertU(adoc(\"id\", \"10\", \"title\", \"test copy field\", \"text_en\", \"this is a simple test of the copy field functionality\"));\n      assertU(commit());\n      \n      Map<String,String> args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:simple\" );\n      args.put( \"indent\", \"true\" );\n      SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      \n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='10']\"\n              );\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:simple\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='10']\"\n              ,\"//result/doc[1]/arr[@name='highlight']/str[.='this is a simple test of ']\"\n              );\n\n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\");\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='0']\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest#testCopyFieldFunctionality().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest#testCopyFieldFunctionality().mjava","sourceNew":"  @Test\n  public void testCopyFieldFunctionality() \n    {\n      SolrCore core = h.getCore();\n      assertU(adoc(\"id\", \"5\", \"title\", \"test copy field\", \"text_en\", \"this is a simple test of the copy field functionality\"));\n      assertU(commit());\n      \n      Map<String,String> args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:simple\" );\n      args.put( \"indent\", \"true\" );\n      SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      \n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/str[@name='id'][.='5']\"\n              );\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:simple\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/str[@name='id'][.='5']\"\n              ,\"//result/doc[1]/arr[@name='highlight']/str[.='this is a simple test of ']\"\n              );\n\n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\");\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='0']\");\n    }\n\n","sourceOld":"  @Test\n  public void testCopyFieldFunctionality() \n    {\n      SolrCore core = h.getCore();\n      assertU(adoc(\"id\", \"5\", \"title\", \"test copy field\", \"text_en\", \"this is a simple test of the copy field functionality\"));\n      assertU(commit());\n      \n      Map<String,String> args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:simple\" );\n      args.put( \"indent\", \"true\" );\n      SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      \n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='5']\"\n              );\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:simple\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='5']\"\n              ,\"//result/doc[1]/arr[@name='highlight']/str[.='this is a simple test of ']\"\n              );\n\n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\");\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='0']\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest#testCopyFieldFunctionality().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest#testCopyFieldFunctionality().mjava","sourceNew":"  @Test\n  public void testCopyFieldFunctionality() \n    {\n      SolrCore core = h.getCore();\n      assertU(adoc(\"id\", \"5\", \"title\", \"test copy field\", \"text_en\", \"this is a simple test of the copy field functionality\"));\n      assertU(commit());\n      \n      Map<String,String> args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:simple\" );\n      args.put( \"indent\", \"true\" );\n      SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      \n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/str[@name='id'][.='5']\"\n              );\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:simple\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/str[@name='id'][.='5']\"\n              ,\"//result/doc[1]/arr[@name='highlight']/str[.='this is a simple test of ']\"\n              );\n\n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\");\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='0']\");\n    }\n\n","sourceOld":"  @Test\n  public void testCopyFieldFunctionality() \n    {\n      SolrCore core = h.getCore();\n      assertU(adoc(\"id\", \"5\", \"title\", \"test copy field\", \"text_en\", \"this is a simple test of the copy field functionality\"));\n      assertU(commit());\n      \n      Map<String,String> args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:simple\" );\n      args.put( \"indent\", \"true\" );\n      SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      \n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='5']\"\n              );\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:simple\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='5']\"\n              ,\"//result/doc[1]/arr[@name='highlight']/str[.='this is a simple test of ']\"\n              );\n\n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\");\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='0']\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest#testCopyFieldFunctionality().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/CopyFieldTest#testCopyFieldFunctionality().mjava","sourceNew":"  @Test\n  public void testCopyFieldFunctionality() \n    {\n      SolrCore core = h.getCore();\n      assertU(adoc(\"id\", \"5\", \"title\", \"test copy field\", \"text_en\", \"this is a simple test of the copy field functionality\"));\n      assertU(commit());\n      \n      Map<String,String> args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:simple\" );\n      args.put( \"indent\", \"true\" );\n      SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      \n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/str[@name='id'][.='5']\"\n              );\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:simple\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/str[@name='id'][.='5']\"\n              ,\"//result/doc[1]/arr[@name='highlight']/str[.='this is a simple test of ']\"\n              );\n\n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\");\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='0']\");\n    }\n\n","sourceOld":"  @Test\n  public void testCopyFieldFunctionality() \n    {\n      SolrCore core = h.getCore();\n      assertU(adoc(\"id\", \"5\", \"title\", \"test copy field\", \"text_en\", \"this is a simple test of the copy field functionality\"));\n      assertU(commit());\n      \n      Map<String,String> args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:simple\" );\n      args.put( \"indent\", \"true\" );\n      SolrQueryRequest req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      \n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='5']\"\n              );\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:simple\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='1']\"\n              ,\"//result/doc[1]/int[@name='id'][.='5']\"\n              ,\"//result/doc[1]/arr[@name='highlight']/str[.='this is a simple test of ']\"\n              );\n\n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"text_en:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"Make sure they got in\", req\n              ,\"//*[@numFound='1']\");\n      \n      args = new HashMap<>();\n      args.put( CommonParams.Q, \"highlight:functionality\" );\n      args.put( \"indent\", \"true\" );\n      req = new LocalSolrQueryRequest( core, new MapSolrParams( args) );\n      assertQ(\"dynamic source\", req\n              ,\"//*[@numFound='0']\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a9573e8f5b6e1ee93e8d2b1b68cd1e97891648c":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["c26f00b574427b55127e869b935845554afde1fa"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","5a9573e8f5b6e1ee93e8d2b1b68cd1e97891648c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a71f63026529f3c1f03cfdd664910873ab2369ae":["5a9573e8f5b6e1ee93e8d2b1b68cd1e97891648c"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["5a9573e8f5b6e1ee93e8d2b1b68cd1e97891648c","a71f63026529f3c1f03cfdd664910873ab2369ae"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["e9017cf144952056066919f1ebc7897ff9bd71b1","a71f63026529f3c1f03cfdd664910873ab2369ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"5a9573e8f5b6e1ee93e8d2b1b68cd1e97891648c":["e9017cf144952056066919f1ebc7897ff9bd71b1","a71f63026529f3c1f03cfdd664910873ab2369ae","28288370235ed02234a64753cdbf0c6ec096304a"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["5a9573e8f5b6e1ee93e8d2b1b68cd1e97891648c","e9017cf144952056066919f1ebc7897ff9bd71b1"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}