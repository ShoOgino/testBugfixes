{"path":"src/java/org/apache/solr/search/HashDocSet#HashDocSet(int[],int,int,float).mjava","commits":[{"id":"21400778a0bf704d187a4848279049f5d90276c8","date":1149955512,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/HashDocSet#HashDocSet(int[],int,int,float).mjava","pathOld":"/dev/null","sourceNew":"  public HashDocSet(int[] docs, int offset, int len, float inverseLoadFactor) {\n    int tsize = Math.max(BitUtil.nextHighestPowerOfTwo(len), 1);\n    if (tsize < len * inverseLoadFactor) {\n      tsize <<= 1;\n    }\n\n    tablesize = tsize;\n    mask=tablesize-1;\n\n    table = new int[tablesize];\n    for (int i=0; i<tablesize; i++) table[i]=EMPTY;\n\n    for (int i=offset; i<len; i++) {\n      put(docs[i]);\n    }\n\n    size = len;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e97c9c9ecb6ca9b558635bc9787f15f4cf19040","date":1169358391,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/HashDocSet#HashDocSet(int[],int,int,float).mjava","pathOld":"src/java/org/apache/solr/search/HashDocSet#HashDocSet(int[],int,int,float).mjava","sourceNew":"  /** Create a HashDocSet from a list of *unique* ids */  \n  public HashDocSet(int[] docs, int offset, int len, float inverseLoadFactor) {\n    int tsize = Math.max(BitUtil.nextHighestPowerOfTwo(len), 1);\n    if (tsize < len * inverseLoadFactor) {\n      tsize <<= 1;\n    }\n\n    mask=tsize-1;\n\n    table = new int[tsize];\n    for (int i=tsize-1; i>=0; i--) table[i]=EMPTY;\n\n    for (int i=offset; i<len; i++) {\n      put(docs[i]);\n    }\n\n    size = len;\n  }\n\n","sourceOld":"  public HashDocSet(int[] docs, int offset, int len, float inverseLoadFactor) {\n    int tsize = Math.max(BitUtil.nextHighestPowerOfTwo(len), 1);\n    if (tsize < len * inverseLoadFactor) {\n      tsize <<= 1;\n    }\n\n    tablesize = tsize;\n    mask=tablesize-1;\n\n    table = new int[tablesize];\n    for (int i=0; i<tablesize; i++) table[i]=EMPTY;\n\n    for (int i=offset; i<len; i++) {\n      put(docs[i]);\n    }\n\n    size = len;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52e2722febad58ada025b2c3134666dcd284deb4","date":1193345681,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/search/HashDocSet#HashDocSet(int[],int,int,float).mjava","pathOld":"src/java/org/apache/solr/search/HashDocSet#HashDocSet(int[],int,int,float).mjava","sourceNew":"  /** Create a HashDocSet from a list of *unique* ids */  \n  public HashDocSet(int[] docs, int offset, int len, float inverseLoadFactor) {\n    int tsize = Math.max(BitUtil.nextHighestPowerOfTwo(len), 1);\n    if (tsize < len * inverseLoadFactor) {\n      tsize <<= 1;\n    }\n\n    mask=tsize-1;\n\n    table = new int[tsize];\n    // (for now) better then: Arrays.fill(table, EMPTY);\n    // https://issues.apache.org/jira/browse/SOLR-390\n    for (int i=tsize-1; i>=0; i--) table[i]=EMPTY;\n\n    for (int i=offset; i<len; i++) {\n      put(docs[i]);\n    }\n\n    size = len;\n  }\n\n","sourceOld":"  /** Create a HashDocSet from a list of *unique* ids */  \n  public HashDocSet(int[] docs, int offset, int len, float inverseLoadFactor) {\n    int tsize = Math.max(BitUtil.nextHighestPowerOfTwo(len), 1);\n    if (tsize < len * inverseLoadFactor) {\n      tsize <<= 1;\n    }\n\n    mask=tsize-1;\n\n    table = new int[tsize];\n    for (int i=tsize-1; i>=0; i--) table[i]=EMPTY;\n\n    for (int i=offset; i<len; i++) {\n      put(docs[i]);\n    }\n\n    size = len;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a52b36144a82ee78da623c584575fe306342dada","date":1246633761,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/HashDocSet#HashDocSet(int[],int,int,float).mjava","pathOld":"src/java/org/apache/solr/search/HashDocSet#HashDocSet(int[],int,int,float).mjava","sourceNew":"  /** Create a HashDocSet from a list of *unique* ids */  \n  public HashDocSet(int[] docs, int offset, int len, float inverseLoadFactor) {\n    int tsize = Math.max(BitUtil.nextHighestPowerOfTwo(len), 1);\n    if (tsize < len * inverseLoadFactor) {\n      tsize <<= 1;\n    }\n\n    mask=tsize-1;\n\n    table = new int[tsize];\n    // (for now) better then: Arrays.fill(table, EMPTY);\n    // https://issues.apache.org/jira/browse/SOLR-390\n    for (int i=tsize-1; i>=0; i--) table[i]=EMPTY;\n\n    int end = offset + len;\n    for (int i=offset; i<end; i++) {\n      put(docs[i]);\n    }\n\n    size = len;\n  }\n\n","sourceOld":"  /** Create a HashDocSet from a list of *unique* ids */  \n  public HashDocSet(int[] docs, int offset, int len, float inverseLoadFactor) {\n    int tsize = Math.max(BitUtil.nextHighestPowerOfTwo(len), 1);\n    if (tsize < len * inverseLoadFactor) {\n      tsize <<= 1;\n    }\n\n    mask=tsize-1;\n\n    table = new int[tsize];\n    // (for now) better then: Arrays.fill(table, EMPTY);\n    // https://issues.apache.org/jira/browse/SOLR-390\n    for (int i=tsize-1; i>=0; i--) table[i]=EMPTY;\n\n    for (int i=offset; i<len; i++) {\n      put(docs[i]);\n    }\n\n    size = len;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/HashDocSet#HashDocSet(int[],int,int,float).mjava","pathOld":"src/java/org/apache/solr/search/HashDocSet#HashDocSet(int[],int,int,float).mjava","sourceNew":"  /** Create a HashDocSet from a list of *unique* ids */  \n  public HashDocSet(int[] docs, int offset, int len, float inverseLoadFactor) {\n    int tsize = Math.max(BitUtil.nextHighestPowerOfTwo(len), 1);\n    if (tsize < len * inverseLoadFactor) {\n      tsize <<= 1;\n    }\n\n    mask=tsize-1;\n\n    table = new int[tsize];\n    // (for now) better then: Arrays.fill(table, EMPTY);\n    // https://issues.apache.org/jira/browse/SOLR-390\n    for (int i=tsize-1; i>=0; i--) table[i]=EMPTY;\n\n    int end = offset + len;\n    for (int i=offset; i<end; i++) {\n      put(docs[i]);\n    }\n\n    size = len;\n  }\n\n","sourceOld":"  /** Create a HashDocSet from a list of *unique* ids */  \n  public HashDocSet(int[] docs, int offset, int len, float inverseLoadFactor) {\n    int tsize = Math.max(BitUtil.nextHighestPowerOfTwo(len), 1);\n    if (tsize < len * inverseLoadFactor) {\n      tsize <<= 1;\n    }\n\n    mask=tsize-1;\n\n    table = new int[tsize];\n    // (for now) better then: Arrays.fill(table, EMPTY);\n    // https://issues.apache.org/jira/browse/SOLR-390\n    for (int i=tsize-1; i>=0; i--) table[i]=EMPTY;\n\n    int end = offset + len;\n    for (int i=offset; i<end; i++) {\n      put(docs[i]);\n    }\n\n    size = len;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"21400778a0bf704d187a4848279049f5d90276c8":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a52b36144a82ee78da623c584575fe306342dada":["52e2722febad58ada025b2c3134666dcd284deb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"52e2722febad58ada025b2c3134666dcd284deb4":["0e97c9c9ecb6ca9b558635bc9787f15f4cf19040"],"ad94625fb8d088209f46650c8097196fec67f00c":["a52b36144a82ee78da623c584575fe306342dada"],"0e97c9c9ecb6ca9b558635bc9787f15f4cf19040":["21400778a0bf704d187a4848279049f5d90276c8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"21400778a0bf704d187a4848279049f5d90276c8":["0e97c9c9ecb6ca9b558635bc9787f15f4cf19040"],"a52b36144a82ee78da623c584575fe306342dada":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["21400778a0bf704d187a4848279049f5d90276c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"52e2722febad58ada025b2c3134666dcd284deb4":["a52b36144a82ee78da623c584575fe306342dada"],"0e97c9c9ecb6ca9b558635bc9787f15f4cf19040":["52e2722febad58ada025b2c3134666dcd284deb4"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}