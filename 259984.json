{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/IndexSizeTrigger.IndexSizeEvent#IndexSizeEvent(String,long,List[Op],Map[String,List[ReplicaInfo]],Map[String,List[ReplicaInfo]]).mjava","commits":[{"id":"ce71a9836bf1eba34a0ab31884e9eb8ad3f1cef1","date":1523453934,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/IndexSizeTrigger.IndexSizeEvent#IndexSizeEvent(String,long,List[Op],Map[String,List[ReplicaInfo]],Map[String,List[ReplicaInfo]]).mjava","pathOld":"/dev/null","sourceNew":"    public IndexSizeEvent(String source, long eventTime, List<Op> ops, Map<String, List<ReplicaInfo>> aboveSize,\n                          Map<String, List<ReplicaInfo>> belowSize) {\n      super(TriggerEventType.INDEXSIZE, source, eventTime, null);\n      properties.put(TriggerEvent.REQUESTED_OPS, ops);\n      properties.put(ABOVE_SIZE_PROP, aboveSize);\n      properties.put(BELOW_SIZE_PROP, belowSize);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43345f1452f9510f8aaadae6156fe0c834e7d957","date":1523483670,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/IndexSizeTrigger.IndexSizeEvent#IndexSizeEvent(String,long,List[Op],Map[String,List[ReplicaInfo]],Map[String,List[ReplicaInfo]]).mjava","pathOld":"/dev/null","sourceNew":"    public IndexSizeEvent(String source, long eventTime, List<Op> ops, Map<String, List<ReplicaInfo>> aboveSize,\n                          Map<String, List<ReplicaInfo>> belowSize) {\n      super(TriggerEventType.INDEXSIZE, source, eventTime, null);\n      properties.put(TriggerEvent.REQUESTED_OPS, ops);\n      properties.put(ABOVE_SIZE_PROP, aboveSize);\n      properties.put(BELOW_SIZE_PROP, belowSize);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc18bc8ea2e2c1e308757ff50671c774438e9f3e","date":1538052583,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/IndexSizeTrigger.IndexSizeEvent#IndexSizeEvent(String,long,List[Op],Map[String,List[ReplicaInfo]],Map[String,List[ReplicaInfo]]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/IndexSizeTrigger.IndexSizeEvent#IndexSizeEvent(String,long,List[Op],Map[String,List[ReplicaInfo]],Map[String,List[ReplicaInfo]]).mjava","sourceNew":"    public IndexSizeEvent(String source, long eventTime, List<Op> ops, Map<String, List<ReplicaInfo>> aboveSize,\n                          Map<String, List<ReplicaInfo>> belowSize) {\n      super(TriggerEventType.INDEXSIZE, source, eventTime, null);\n      properties.put(TriggerEvent.REQUESTED_OPS, ops);\n      // avoid passing very large amounts of data here - just use replica names\n      TreeMap<String, String> above = new TreeMap<>();\n      aboveSize.forEach((coll, replicas) ->\n          replicas.forEach(r -> above.put(r.getCore(), \"docs=\" + r.getVariable(DOCS_SIZE_PROP) + \", bytes=\" + r.getVariable(BYTES_SIZE_PROP))));\n      properties.put(ABOVE_SIZE_PROP, above);\n      TreeMap<String, String> below = new TreeMap<>();\n      belowSize.forEach((coll, replicas) ->\n          replicas.forEach(r -> below.put(r.getCore(), \"docs=\" + r.getVariable(DOCS_SIZE_PROP) + \", bytes=\" + r.getVariable(BYTES_SIZE_PROP))));\n      properties.put(BELOW_SIZE_PROP, below);\n    }\n\n","sourceOld":"    public IndexSizeEvent(String source, long eventTime, List<Op> ops, Map<String, List<ReplicaInfo>> aboveSize,\n                          Map<String, List<ReplicaInfo>> belowSize) {\n      super(TriggerEventType.INDEXSIZE, source, eventTime, null);\n      properties.put(TriggerEvent.REQUESTED_OPS, ops);\n      properties.put(ABOVE_SIZE_PROP, aboveSize);\n      properties.put(BELOW_SIZE_PROP, belowSize);\n    }\n\n","bugFix":null,"bugIntro":["256b1da668dae74c726d5d71bce6153202d6b001"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"256b1da668dae74c726d5d71bce6153202d6b001","date":1584099017,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/IndexSizeTrigger.IndexSizeEvent#IndexSizeEvent(String,long,List[Op],Map[String,List[ReplicaInfo]],Map[String,List[ReplicaInfo]]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/IndexSizeTrigger.IndexSizeEvent#IndexSizeEvent(String,long,List[Op],Map[String,List[ReplicaInfo]],Map[String,List[ReplicaInfo]]).mjava","sourceNew":"    public IndexSizeEvent(String source, long eventTime, List<Op> ops, Map<String, List<ReplicaInfo>> aboveSize,\n                          Map<String, List<ReplicaInfo>> belowSize) {\n      super(TriggerEventType.INDEXSIZE, source, eventTime, null);\n      properties.put(TriggerEvent.REQUESTED_OPS, ops);\n      // avoid passing very large amounts of data here - just use replica names\n      TreeMap<String, String> above = new TreeMap<>();\n      aboveSize.forEach((coll, replicas) ->\n          replicas.forEach(r -> above.put(r.getCore(), \"docs=\" + r.getVariable(DOCS_SIZE_KEY) + \", bytes=\" + r.getVariable(BYTES_SIZE_KEY))));\n      properties.put(ABOVE_SIZE_KEY, above);\n      TreeMap<String, String> below = new TreeMap<>();\n      belowSize.forEach((coll, replicas) ->\n          replicas.forEach(r -> below.put(r.getCore(), \"docs=\" + r.getVariable(DOCS_SIZE_KEY) + \", bytes=\" + r.getVariable(BYTES_SIZE_KEY))));\n      properties.put(BELOW_SIZE_KEY, below);\n    }\n\n","sourceOld":"    public IndexSizeEvent(String source, long eventTime, List<Op> ops, Map<String, List<ReplicaInfo>> aboveSize,\n                          Map<String, List<ReplicaInfo>> belowSize) {\n      super(TriggerEventType.INDEXSIZE, source, eventTime, null);\n      properties.put(TriggerEvent.REQUESTED_OPS, ops);\n      // avoid passing very large amounts of data here - just use replica names\n      TreeMap<String, String> above = new TreeMap<>();\n      aboveSize.forEach((coll, replicas) ->\n          replicas.forEach(r -> above.put(r.getCore(), \"docs=\" + r.getVariable(DOCS_SIZE_PROP) + \", bytes=\" + r.getVariable(BYTES_SIZE_PROP))));\n      properties.put(ABOVE_SIZE_PROP, above);\n      TreeMap<String, String> below = new TreeMap<>();\n      belowSize.forEach((coll, replicas) ->\n          replicas.forEach(r -> below.put(r.getCore(), \"docs=\" + r.getVariable(DOCS_SIZE_PROP) + \", bytes=\" + r.getVariable(BYTES_SIZE_PROP))));\n      properties.put(BELOW_SIZE_PROP, below);\n    }\n\n","bugFix":["fc18bc8ea2e2c1e308757ff50671c774438e9f3e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd","date":1594731683,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/IndexSizeTrigger.IndexSizeEvent#IndexSizeEvent(String,long,List[Op],Map[String,List[Replica]],Map[String,List[Replica]]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/IndexSizeTrigger.IndexSizeEvent#IndexSizeEvent(String,long,List[Op],Map[String,List[ReplicaInfo]],Map[String,List[ReplicaInfo]]).mjava","sourceNew":"    public IndexSizeEvent(String source, long eventTime, List<Op> ops, Map<String, List<Replica>> aboveSize,\n                          Map<String, List<Replica>> belowSize) {\n      super(TriggerEventType.INDEXSIZE, source, eventTime, null);\n      properties.put(TriggerEvent.REQUESTED_OPS, ops);\n      // avoid passing very large amounts of data here - just use replica names\n      TreeMap<String, String> above = new TreeMap<>();\n      aboveSize.forEach((coll, replicas) ->\n          replicas.forEach(r -> above.put(r.getCoreName(), \"docs=\" + r.get(DOCS_SIZE_KEY) + \", bytes=\" + r.get(BYTES_SIZE_KEY))));\n      properties.put(ABOVE_SIZE_KEY, above);\n      TreeMap<String, String> below = new TreeMap<>();\n      belowSize.forEach((coll, replicas) ->\n          replicas.forEach(r -> below.put(r.getCoreName(), \"docs=\" + r.get(DOCS_SIZE_KEY) + \", bytes=\" + r.get(BYTES_SIZE_KEY))));\n      properties.put(BELOW_SIZE_KEY, below);\n    }\n\n","sourceOld":"    public IndexSizeEvent(String source, long eventTime, List<Op> ops, Map<String, List<ReplicaInfo>> aboveSize,\n                          Map<String, List<ReplicaInfo>> belowSize) {\n      super(TriggerEventType.INDEXSIZE, source, eventTime, null);\n      properties.put(TriggerEvent.REQUESTED_OPS, ops);\n      // avoid passing very large amounts of data here - just use replica names\n      TreeMap<String, String> above = new TreeMap<>();\n      aboveSize.forEach((coll, replicas) ->\n          replicas.forEach(r -> above.put(r.getCore(), \"docs=\" + r.getVariable(DOCS_SIZE_KEY) + \", bytes=\" + r.getVariable(BYTES_SIZE_KEY))));\n      properties.put(ABOVE_SIZE_KEY, above);\n      TreeMap<String, String> below = new TreeMap<>();\n      belowSize.forEach((coll, replicas) ->\n          replicas.forEach(r -> below.put(r.getCore(), \"docs=\" + r.getVariable(DOCS_SIZE_KEY) + \", bytes=\" + r.getVariable(BYTES_SIZE_KEY))));\n      properties.put(BELOW_SIZE_KEY, below);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fc18bc8ea2e2c1e308757ff50671c774438e9f3e":["43345f1452f9510f8aaadae6156fe0c834e7d957"],"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd":["256b1da668dae74c726d5d71bce6153202d6b001"],"ce71a9836bf1eba34a0ab31884e9eb8ad3f1cef1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"256b1da668dae74c726d5d71bce6153202d6b001":["fc18bc8ea2e2c1e308757ff50671c774438e9f3e"],"43345f1452f9510f8aaadae6156fe0c834e7d957":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ce71a9836bf1eba34a0ab31884e9eb8ad3f1cef1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd"]},"commit2Childs":{"fc18bc8ea2e2c1e308757ff50671c774438e9f3e":["256b1da668dae74c726d5d71bce6153202d6b001"],"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ce71a9836bf1eba34a0ab31884e9eb8ad3f1cef1":["43345f1452f9510f8aaadae6156fe0c834e7d957"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ce71a9836bf1eba34a0ab31884e9eb8ad3f1cef1","43345f1452f9510f8aaadae6156fe0c834e7d957"],"43345f1452f9510f8aaadae6156fe0c834e7d957":["fc18bc8ea2e2c1e308757ff50671c774438e9f3e"],"256b1da668dae74c726d5d71bce6153202d6b001":["7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}