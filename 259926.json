{"path":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testEmptyPointInSetQuery().mjava","commits":[{"id":"b9ccce763ea3c7e51eff749e584c061d8744b72d","date":1456395668,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testEmptyPointInSetQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testEmptyPointInSetQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int\", 17));\n    doc.add(new LongPoint(\"long\", 17L));\n    doc.add(new FloatPoint(\"float\", 17.0f));\n    doc.add(new DoublePoint(\"double\", 17.0));\n    doc.add(new BinaryPoint(\"bytes\", new byte[] {0, 17}));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(0, s.count(IntPoint.newSetQuery(\"int\")));\n    assertEquals(0, s.count(LongPoint.newSetQuery(\"long\")));\n    assertEquals(0, s.count(FloatPoint.newSetQuery(\"float\")));\n    assertEquals(0, s.count(DoublePoint.newSetQuery(\"double\")));\n    assertEquals(0, s.count(BinaryPoint.newSetQuery(\"bytes\")));\n\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868f63baffb79407d4b49f3c0be8dc4725ffc6e1","date":1456423715,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testEmptyPointInSetQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testEmptyPointInSetQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int\", 17));\n    doc.add(new LongPoint(\"long\", 17L));\n    doc.add(new FloatPoint(\"float\", 17.0f));\n    doc.add(new DoublePoint(\"double\", 17.0));\n    doc.add(new BinaryPoint(\"bytes\", new byte[] {0, 17}));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(0, s.count(IntPoint.newSetQuery(\"int\")));\n    assertEquals(0, s.count(LongPoint.newSetQuery(\"long\")));\n    assertEquals(0, s.count(FloatPoint.newSetQuery(\"float\")));\n    assertEquals(0, s.count(DoublePoint.newSetQuery(\"double\")));\n    assertEquals(0, s.count(BinaryPoint.newSetQuery(\"bytes\")));\n\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"adc9dc8ef0ce617b940a039fd12f79e8b098cc7f","date":1456936072,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testEmptyPointInSetQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testEmptyPointInSetQuery().mjava","sourceNew":"  public void testEmptyPointInSetQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int\", 17));\n    doc.add(new LongPoint(\"long\", 17L));\n    doc.add(new FloatPoint(\"float\", 17.0f));\n    doc.add(new DoublePoint(\"double\", 17.0));\n    doc.add(new BinaryPoint(\"bytes\", new byte[] {0, 17}));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(0, s.count(IntPoint.newSetQuery(\"int\")));\n    assertEquals(0, s.count(LongPoint.newSetQuery(\"long\")));\n    assertEquals(0, s.count(FloatPoint.newSetQuery(\"float\")));\n    assertEquals(0, s.count(DoublePoint.newSetQuery(\"double\")));\n    assertEquals(0, s.count(BinaryPoint.newSetQuery(\"bytes\")));\n\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyPointInSetQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int\", 17));\n    doc.add(new LongPoint(\"long\", 17L));\n    doc.add(new FloatPoint(\"float\", 17.0f));\n    doc.add(new DoublePoint(\"double\", 17.0));\n    doc.add(new BinaryPoint(\"bytes\", new byte[] {0, 17}));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(0, s.count(IntPoint.newSetQuery(\"int\")));\n    assertEquals(0, s.count(LongPoint.newSetQuery(\"long\")));\n    assertEquals(0, s.count(FloatPoint.newSetQuery(\"float\")));\n    assertEquals(0, s.count(DoublePoint.newSetQuery(\"double\")));\n    assertEquals(0, s.count(BinaryPoint.newSetQuery(\"bytes\")));\n\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testEmptyPointInSetQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testEmptyPointInSetQuery().mjava","sourceNew":"  public void testEmptyPointInSetQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int\", 17));\n    doc.add(new LongPoint(\"long\", 17L));\n    doc.add(new FloatPoint(\"float\", 17.0f));\n    doc.add(new DoublePoint(\"double\", 17.0));\n    doc.add(new BinaryPoint(\"bytes\", new byte[] {0, 17}));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(0, s.count(IntPoint.newSetQuery(\"int\")));\n    assertEquals(0, s.count(LongPoint.newSetQuery(\"long\")));\n    assertEquals(0, s.count(FloatPoint.newSetQuery(\"float\")));\n    assertEquals(0, s.count(DoublePoint.newSetQuery(\"double\")));\n    assertEquals(0, s.count(BinaryPoint.newSetQuery(\"bytes\")));\n\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyPointInSetQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int\", 17));\n    doc.add(new LongPoint(\"long\", 17L));\n    doc.add(new FloatPoint(\"float\", 17.0f));\n    doc.add(new DoublePoint(\"double\", 17.0));\n    doc.add(new BinaryPoint(\"bytes\", new byte[] {0, 17}));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(0, s.count(IntPoint.newSetQuery(\"int\")));\n    assertEquals(0, s.count(LongPoint.newSetQuery(\"long\")));\n    assertEquals(0, s.count(FloatPoint.newSetQuery(\"float\")));\n    assertEquals(0, s.count(DoublePoint.newSetQuery(\"double\")));\n    assertEquals(0, s.count(BinaryPoint.newSetQuery(\"bytes\")));\n\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868f63baffb79407d4b49f3c0be8dc4725ffc6e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b9ccce763ea3c7e51eff749e584c061d8744b72d"],"b9ccce763ea3c7e51eff749e584c061d8744b72d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["868f63baffb79407d4b49f3c0be8dc4725ffc6e1","adc9dc8ef0ce617b940a039fd12f79e8b098cc7f"],"adc9dc8ef0ce617b940a039fd12f79e8b098cc7f":["868f63baffb79407d4b49f3c0be8dc4725ffc6e1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["868f63baffb79407d4b49f3c0be8dc4725ffc6e1","b9ccce763ea3c7e51eff749e584c061d8744b72d"],"868f63baffb79407d4b49f3c0be8dc4725ffc6e1":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","adc9dc8ef0ce617b940a039fd12f79e8b098cc7f"],"b9ccce763ea3c7e51eff749e584c061d8744b72d":["868f63baffb79407d4b49f3c0be8dc4725ffc6e1"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"adc9dc8ef0ce617b940a039fd12f79e8b098cc7f":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}