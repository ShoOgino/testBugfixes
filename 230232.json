{"path":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#getNumBits(int[]).mjava","commits":[{"id":"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","date":1343686506,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#getNumBits(int[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pfor/ForUtil#getNumBits(int[]).mjava","sourceNew":"  /**\n   * Estimate best num of frame bits according to the largest value.\n   */\n  static int getNumBits(final int[] data) {\n    if (isAllEqual(data)) {\n      return 0;\n    }\n    int size=data.length;\n    int optBits=1;\n    for (int i=0; i<size; ++i) {\n      while ((data[i] & ~MASK[optBits]) != 0) {\n        optBits++;\n      }\n    }\n    return optBits;\n  }\n\n","sourceOld":"  /**\n   * Estimate best num of frame bits according to the largest value.\n   */\n  static int getNumBits(final int[] data) {\n    if (isAllEqual(data)) {\n      return 0;\n    }\n    int size=data.length;\n    int optBits=1;\n    for (int i=0; i<size; ++i) {\n      while ((data[i] & ~MASK[optBits]) != 0) {\n        optBits++;\n      }\n    }\n    return optBits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8a5b726b57b22e5a983b2de19b1f1d10edbeaaa","date":1344355287,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#getNumBits(int[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#getNumBits(int[]).mjava","sourceNew":"  /**\n   * Returns number of bits necessary to represent max value.\n   */\n  static int getNumBits(final int[] data) {\n    if (isAllEqual(data)) {\n      return 0;\n    }\n    int size=data.length;\n    int optBits=1;\n    for (int i=0; i<size; ++i) {\n      while ((data[i] & ~MASK[optBits]) != 0) {\n        optBits++;\n      }\n    }\n    assert optBits < 32;\n    return optBits;\n  }\n\n","sourceOld":"  /**\n   * Estimate best num of frame bits according to the largest value.\n   */\n  static int getNumBits(final int[] data) {\n    if (isAllEqual(data)) {\n      return 0;\n    }\n    int size=data.length;\n    int optBits=1;\n    for (int i=0; i<size; ++i) {\n      while ((data[i] & ~MASK[optBits]) != 0) {\n        optBits++;\n      }\n    }\n    return optBits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6b41208259e8566cba0ecac7da6a331ea9732dd","date":1344551376,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#getNumBits(int[]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns number of bits necessary to represent max value.\n   */\n  static int getNumBits(final int[] data) {\n    if (isAllEqual(data)) {\n      return 0;\n    }\n    int size=data.length;\n    int optBits=1;\n    for (int i=0; i<size; ++i) {\n      while ((data[i] & ~MASK[optBits]) != 0) {\n        optBits++;\n      }\n    }\n    assert optBits < 32;\n    return optBits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8a5b726b57b22e5a983b2de19b1f1d10edbeaaa":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e6b41208259e8566cba0ecac7da6a331ea9732dd":["f8a5b726b57b22e5a983b2de19b1f1d10edbeaaa"]},"commit2Childs":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["f8a5b726b57b22e5a983b2de19b1f1d10edbeaaa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f8a5b726b57b22e5a983b2de19b1f1d10edbeaaa":["e6b41208259e8566cba0ecac7da6a331ea9732dd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e6b41208259e8566cba0ecac7da6a331ea9732dd":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","e6b41208259e8566cba0ecac7da6a331ea9732dd"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}