{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#getNextFacets(List[CategoryPath]).mjava","commits":[{"id":"53442c6c7d342feead7bcbabb097abcfeb06b575","date":1358751520,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#getNextFacets(List[CategoryPath]).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#getNextFacets(CategoryAssociationsContainer).mjava","sourceNew":"  @Override\n  public void getNextFacets(List<CategoryPath> facets) throws NoMoreDataException, IOException {\n    facets.clear();\n    int numFacets = 1 + random.nextInt(maxDocFacets); // at least one facet to each doc\n    for (int i = 0; i < numFacets; i++) {\n      int depth = 1 + random.nextInt(maxFacetDepth); // depth 0 is not useful\n      String[] components = new String[depth];\n      for (int k = 0; k < depth; k++) {\n        components[k] = Integer.toString(random.nextInt(maxValue));\n        addItem();\n      }\n      CategoryPath cp = new CategoryPath(components);\n      facets.add(cp);\n      addBytes(cp.toString().length()); // very rough approximation\n    }\n  }\n\n","sourceOld":"  @Override\n  public CategoryAssociationsContainer getNextFacets(CategoryAssociationsContainer facets) \n      throws NoMoreDataException, IOException {\n    if (facets == null) {\n      facets = new CategoryAssociationsContainer();\n    } else {\n      facets.clear();\n    }\n    int numFacets = 1 + random.nextInt(maxDocFacets-1); // at least one facet to each doc\n    for (int i = 0; i < numFacets; i++) {\n      int depth = 1 + random.nextInt(maxFacetDepth - 1); // depth 0 is not useful\n      String[] components = new String[depth];\n      for (int k = 0; k < depth; k++) {\n        components[k] = Integer.toString(random.nextInt(maxValue));\n        addItem();\n      }\n      CategoryPath cp = new CategoryPath(components);\n      facets.setAssociation(cp, null);\n      addBytes(cp.toString().length()); // very rough approximation\n    }\n    return facets;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#getNextFacets(List[CategoryPath]).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#getNextFacets(CategoryAssociationsContainer).mjava","sourceNew":"  @Override\n  public void getNextFacets(List<CategoryPath> facets) throws NoMoreDataException, IOException {\n    facets.clear();\n    int numFacets = 1 + random.nextInt(maxDocFacets); // at least one facet to each doc\n    for (int i = 0; i < numFacets; i++) {\n      int depth = 1 + random.nextInt(maxFacetDepth); // depth 0 is not useful\n      String[] components = new String[depth];\n      for (int k = 0; k < depth; k++) {\n        components[k] = Integer.toString(random.nextInt(maxValue));\n        addItem();\n      }\n      CategoryPath cp = new CategoryPath(components);\n      facets.add(cp);\n      addBytes(cp.toString().length()); // very rough approximation\n    }\n  }\n\n","sourceOld":"  @Override\n  public CategoryAssociationsContainer getNextFacets(CategoryAssociationsContainer facets) \n      throws NoMoreDataException, IOException {\n    if (facets == null) {\n      facets = new CategoryAssociationsContainer();\n    } else {\n      facets.clear();\n    }\n    int numFacets = 1 + random.nextInt(maxDocFacets-1); // at least one facet to each doc\n    for (int i = 0; i < numFacets; i++) {\n      int depth = 1 + random.nextInt(maxFacetDepth - 1); // depth 0 is not useful\n      String[] components = new String[depth];\n      for (int k = 0; k < depth; k++) {\n        components[k] = Integer.toString(random.nextInt(maxValue));\n        addItem();\n      }\n      CategoryPath cp = new CategoryPath(components);\n      facets.setAssociation(cp, null);\n      addBytes(cp.toString().length()); // very rough approximation\n    }\n    return facets;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#getNextFacets(List[FacetLabel]).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#getNextFacets(List[CategoryPath]).mjava","sourceNew":"  @Override\n  public void getNextFacets(List<FacetLabel> facets) throws NoMoreDataException, IOException {\n    facets.clear();\n    int numFacets = 1 + random.nextInt(maxDocFacets); // at least one facet to each doc\n    for (int i = 0; i < numFacets; i++) {\n      int depth = 1 + random.nextInt(maxFacetDepth); // depth 0 is not useful\n      String[] components = new String[depth];\n      for (int k = 0; k < depth; k++) {\n        components[k] = Integer.toString(random.nextInt(maxValue));\n        addItem();\n      }\n      FacetLabel cp = new FacetLabel(components);\n      facets.add(cp);\n      addBytes(cp.toString().length()); // very rough approximation\n    }\n  }\n\n","sourceOld":"  @Override\n  public void getNextFacets(List<CategoryPath> facets) throws NoMoreDataException, IOException {\n    facets.clear();\n    int numFacets = 1 + random.nextInt(maxDocFacets); // at least one facet to each doc\n    for (int i = 0; i < numFacets; i++) {\n      int depth = 1 + random.nextInt(maxFacetDepth); // depth 0 is not useful\n      String[] components = new String[depth];\n      for (int k = 0; k < depth; k++) {\n        components[k] = Integer.toString(random.nextInt(maxValue));\n        addItem();\n      }\n      CategoryPath cp = new CategoryPath(components);\n      facets.add(cp);\n      addBytes(cp.toString().length()); // very rough approximation\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/RandomFacetSource#getNextFacets(List[CategoryPath]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void getNextFacets(List<CategoryPath> facets) throws NoMoreDataException, IOException {\n    facets.clear();\n    int numFacets = 1 + random.nextInt(maxDocFacets); // at least one facet to each doc\n    for (int i = 0; i < numFacets; i++) {\n      int depth = 1 + random.nextInt(maxFacetDepth); // depth 0 is not useful\n      String[] components = new String[depth];\n      for (int k = 0; k < depth; k++) {\n        components[k] = Integer.toString(random.nextInt(maxValue));\n        addItem();\n      }\n      CategoryPath cp = new CategoryPath(components);\n      facets.add(cp);\n      addBytes(cp.toString().length()); // very rough approximation\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"53442c6c7d342feead7bcbabb097abcfeb06b575":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["53442c6c7d342feead7bcbabb097abcfeb06b575","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"07155cdd910937cdf6877e48884d5782845c8b8b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","53442c6c7d342feead7bcbabb097abcfeb06b575"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["53442c6c7d342feead7bcbabb097abcfeb06b575"]},"commit2Childs":{"53442c6c7d342feead7bcbabb097abcfeb06b575":["3cc728b07df73b197e6d940d27f9b08b63918f13","07155cdd910937cdf6877e48884d5782845c8b8b","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["53442c6c7d342feead7bcbabb097abcfeb06b575","07155cdd910937cdf6877e48884d5782845c8b8b"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"07155cdd910937cdf6877e48884d5782845c8b8b":[],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["07155cdd910937cdf6877e48884d5782845c8b8b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}