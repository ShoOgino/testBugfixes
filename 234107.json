{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/DocCollection#equals(Object).mjava","commits":[{"id":"b5a3dacb5a7d745cb12121c3b36d19d28dfd8a2f","date":1467384467,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/DocCollection#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean equals(Object that) {\n    if (that instanceof DocCollection == false)\n      return false;\n    DocCollection other = (DocCollection) that;\n    return super.equals(that) && Objects.equals(this.znode, other.znode) && this.znodeVersion == other.znodeVersion;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/DocCollection#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean equals(Object that) {\n    if (that instanceof DocCollection == false)\n      return false;\n    DocCollection other = (DocCollection) that;\n    return super.equals(that) && Objects.equals(this.znode, other.znode) && this.znodeVersion == other.znodeVersion;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ad9c35f926b4bf8da0336d1300efc709c8d5a56","date":1591729157,"type":3,"author":"murblanc","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/DocCollection#equals(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/DocCollection#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object that) {\n    if (!(that instanceof DocCollection))\n      return false;\n    DocCollection other = (DocCollection) that;\n    return super.equals(that) && Objects.equals(this.name, other.name) && this.znodeVersion == other.znodeVersion;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object that) {\n    if (that instanceof DocCollection == false)\n      return false;\n    DocCollection other = (DocCollection) that;\n    return super.equals(that) && Objects.equals(this.znode, other.znode) && this.znodeVersion == other.znodeVersion;\n  }\n\n","bugFix":["b5a3dacb5a7d745cb12121c3b36d19d28dfd8a2f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["b5a3dacb5a7d745cb12121c3b36d19d28dfd8a2f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b5a3dacb5a7d745cb12121c3b36d19d28dfd8a2f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b5a3dacb5a7d745cb12121c3b36d19d28dfd8a2f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"]},"commit2Childs":{"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b5a3dacb5a7d745cb12121c3b36d19d28dfd8a2f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"b5a3dacb5a7d745cb12121c3b36d19d28dfd8a2f":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}