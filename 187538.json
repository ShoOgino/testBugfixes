{"path":"contrib/extraction/src/main/java/org/apache/solr/handler/ExtractingDocumentLoader#ExtractingDocumentLoader(SolrQueryRequest,UpdateRequestProcessor,TikaConfig,SolrContentHandlerFactory).mjava","commits":[{"id":"868e0ed16bb29556f95c00e989da33ab5c9dfe56","date":1228568666,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/extraction/src/main/java/org/apache/solr/handler/ExtractingDocumentLoader#ExtractingDocumentLoader(SolrQueryRequest,UpdateRequestProcessor,TikaConfig,SolrContentHandlerFactory).mjava","pathOld":"/dev/null","sourceNew":"  ExtractingDocumentLoader(SolrQueryRequest req, UpdateRequestProcessor processor,\n                           TikaConfig config, SolrContentHandlerFactory factory) {\n    this.params = req.getParams();\n    schema = req.getSchema();\n    this.config = config;\n    this.processor = processor;\n\n    templateAdd = new AddUpdateCommand();\n    templateAdd.allowDups = false;\n    templateAdd.overwriteCommitted = true;\n    templateAdd.overwritePending = true;\n\n    if (params.getBool(UpdateParams.OVERWRITE, true)) {\n      templateAdd.allowDups = false;\n      templateAdd.overwriteCommitted = true;\n      templateAdd.overwritePending = true;\n    } else {\n      templateAdd.allowDups = true;\n      templateAdd.overwriteCommitted = false;\n      templateAdd.overwritePending = false;\n    }\n    //this is lightweight\n    autoDetectParser = new AutoDetectParser(config);\n    this.factory = factory;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46dfcd540005e76a7db876d494ac74e82c476523","date":1229095104,"type":5,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/extraction/src/main/java/org/apache/solr/handler/extraction/ExtractingDocumentLoader#ExtractingDocumentLoader(SolrQueryRequest,UpdateRequestProcessor,TikaConfig,SolrContentHandlerFactory).mjava","pathOld":"contrib/extraction/src/main/java/org/apache/solr/handler/ExtractingDocumentLoader#ExtractingDocumentLoader(SolrQueryRequest,UpdateRequestProcessor,TikaConfig,SolrContentHandlerFactory).mjava","sourceNew":"  ExtractingDocumentLoader(SolrQueryRequest req, UpdateRequestProcessor processor,\n                           TikaConfig config, SolrContentHandlerFactory factory) {\n    this.params = req.getParams();\n    schema = req.getSchema();\n    this.config = config;\n    this.processor = processor;\n\n    templateAdd = new AddUpdateCommand();\n    templateAdd.allowDups = false;\n    templateAdd.overwriteCommitted = true;\n    templateAdd.overwritePending = true;\n\n    if (params.getBool(UpdateParams.OVERWRITE, true)) {\n      templateAdd.allowDups = false;\n      templateAdd.overwriteCommitted = true;\n      templateAdd.overwritePending = true;\n    } else {\n      templateAdd.allowDups = true;\n      templateAdd.overwriteCommitted = false;\n      templateAdd.overwritePending = false;\n    }\n    //this is lightweight\n    autoDetectParser = new AutoDetectParser(config);\n    this.factory = factory;\n  }\n\n","sourceOld":"  ExtractingDocumentLoader(SolrQueryRequest req, UpdateRequestProcessor processor,\n                           TikaConfig config, SolrContentHandlerFactory factory) {\n    this.params = req.getParams();\n    schema = req.getSchema();\n    this.config = config;\n    this.processor = processor;\n\n    templateAdd = new AddUpdateCommand();\n    templateAdd.allowDups = false;\n    templateAdd.overwriteCommitted = true;\n    templateAdd.overwritePending = true;\n\n    if (params.getBool(UpdateParams.OVERWRITE, true)) {\n      templateAdd.allowDups = false;\n      templateAdd.overwriteCommitted = true;\n      templateAdd.overwritePending = true;\n    } else {\n      templateAdd.allowDups = true;\n      templateAdd.overwriteCommitted = false;\n      templateAdd.overwritePending = false;\n    }\n    //this is lightweight\n    autoDetectParser = new AutoDetectParser(config);\n    this.factory = factory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"868e0ed16bb29556f95c00e989da33ab5c9dfe56":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"46dfcd540005e76a7db876d494ac74e82c476523":["868e0ed16bb29556f95c00e989da33ab5c9dfe56"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["868e0ed16bb29556f95c00e989da33ab5c9dfe56"],"868e0ed16bb29556f95c00e989da33ab5c9dfe56":["46dfcd540005e76a7db876d494ac74e82c476523"],"46dfcd540005e76a7db876d494ac74e82c476523":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["46dfcd540005e76a7db876d494ac74e82c476523","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}