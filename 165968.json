{"path":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1TermIndex().mjava","commits":[{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1TermIndex().mjava","pathOld":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1TermIndex().mjava","sourceNew":"  public void test1TermIndex() throws Exception {\n    FieldFragList ffl = ffl( \"a\", \"a\" );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    assertEquals( \"<b>a</b>\", sfb.createFragment( reader, 0, F, ffl ) );\n\n    // change tags\n    sfb = new SimpleFragmentsBuilder( new String[]{ \"[\" }, new String[]{ \"]\" } );\n    assertEquals( \"[a]\", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","sourceOld":"  public void test1TermIndex() throws Exception {\n    FieldFragList ffl = ffl( \"a\", \"a\" );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    assertEquals( \"<b>a</b>\", sfb.createFragment( reader, 0, F, ffl ) );\n\n    // change tags\n    sfb = new SimpleFragmentsBuilder( new String[]{ \"[\" }, new String[]{ \"]\" } );\n    assertEquals( \"[a]\", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"765471a9091dc4cb586cf8db5ed0d9c40f534e8e","date":1285603829,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1TermIndex().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1TermIndex().mjava","sourceNew":"  public void test1TermIndex() throws Exception {\n    FieldFragList ffl = ffl( \"a\", \"a\" );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    assertEquals( \"<b>a</b> \", sfb.createFragment( reader, 0, F, ffl ) );\n\n    // change tags\n    sfb = new SimpleFragmentsBuilder( new String[]{ \"[\" }, new String[]{ \"]\" } );\n    assertEquals( \"[a] \", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","sourceOld":"  public void test1TermIndex() throws Exception {\n    FieldFragList ffl = ffl( \"a\", \"a\" );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    assertEquals( \"<b>a</b>\", sfb.createFragment( reader, 0, F, ffl ) );\n\n    // change tags\n    sfb = new SimpleFragmentsBuilder( new String[]{ \"[\" }, new String[]{ \"]\" } );\n    assertEquals( \"[a]\", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1TermIndex().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1TermIndex().mjava","sourceNew":"  public void test1TermIndex() throws Exception {\n    FieldFragList ffl = ffl( \"a\", \"a\" );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    assertEquals( \"<b>a</b> \", sfb.createFragment( reader, 0, F, ffl ) );\n\n    // change tags\n    sfb = new SimpleFragmentsBuilder( new String[]{ \"[\" }, new String[]{ \"]\" } );\n    assertEquals( \"[a] \", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","sourceOld":"  public void test1TermIndex() throws Exception {\n    FieldFragList ffl = ffl( \"a\", \"a\" );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    assertEquals( \"<b>a</b>\", sfb.createFragment( reader, 0, F, ffl ) );\n\n    // change tags\n    sfb = new SimpleFragmentsBuilder( new String[]{ \"[\" }, new String[]{ \"]\" } );\n    assertEquals( \"[a]\", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dfd4d352ddf04b37253ad97ce1aad1448253f0f7","date":1310173878,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1TermIndex().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1TermIndex().mjava","sourceNew":"  public void test1TermIndex() throws Exception {\n    FieldFragList ffl = ffl(new TermQuery(new Term(F, \"a\")), \"a\" );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    assertEquals( \"<b>a</b> \", sfb.createFragment( reader, 0, F, ffl ) );\n\n    // change tags\n    sfb = new SimpleFragmentsBuilder( new String[]{ \"[\" }, new String[]{ \"]\" } );\n    assertEquals( \"[a] \", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","sourceOld":"  public void test1TermIndex() throws Exception {\n    FieldFragList ffl = ffl( \"a\", \"a\" );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    assertEquals( \"<b>a</b> \", sfb.createFragment( reader, 0, F, ffl ) );\n\n    // change tags\n    sfb = new SimpleFragmentsBuilder( new String[]{ \"[\" }, new String[]{ \"]\" } );\n    assertEquals( \"[a] \", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63639dd66fd5bd9b90bc24dd596ae01575f27cc4","date":1310237454,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1TermIndex().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1TermIndex().mjava","sourceNew":"  public void test1TermIndex() throws Exception {\n    FieldFragList ffl = ffl(new TermQuery(new Term(F, \"a\")), \"a\" );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    assertEquals( \"<b>a</b> \", sfb.createFragment( reader, 0, F, ffl ) );\n\n    // change tags\n    sfb = new SimpleFragmentsBuilder( new String[]{ \"[\" }, new String[]{ \"]\" } );\n    assertEquals( \"[a] \", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","sourceOld":"  public void test1TermIndex() throws Exception {\n    FieldFragList ffl = ffl( \"a\", \"a\" );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    assertEquals( \"<b>a</b> \", sfb.createFragment( reader, 0, F, ffl ) );\n\n    // change tags\n    sfb = new SimpleFragmentsBuilder( new String[]{ \"[\" }, new String[]{ \"]\" } );\n    assertEquals( \"[a] \", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac034d22a2af5ab70b9d27bb478acd7810092eb4","date":1326818603,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1TermIndex().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1TermIndex().mjava","sourceNew":"  public void test1TermIndex() throws Exception {\n    FieldFragList ffl = ffl(new TermQuery(new Term(F, \"a\")), \"a\" );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    assertEquals( \"<b>a</b>\", sfb.createFragment( reader, 0, F, ffl ) );\n\n    // change tags\n    sfb = new SimpleFragmentsBuilder( new String[]{ \"[\" }, new String[]{ \"]\" } );\n    assertEquals( \"[a]\", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","sourceOld":"  public void test1TermIndex() throws Exception {\n    FieldFragList ffl = ffl(new TermQuery(new Term(F, \"a\")), \"a\" );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    assertEquals( \"<b>a</b> \", sfb.createFragment( reader, 0, F, ffl ) );\n\n    // change tags\n    sfb = new SimpleFragmentsBuilder( new String[]{ \"[\" }, new String[]{ \"]\" } );\n    assertEquals( \"[a] \", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1TermIndex().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1TermIndex().mjava","sourceNew":"  public void test1TermIndex() throws Exception {\n    FieldFragList ffl = ffl(new TermQuery(new Term(F, \"a\")), \"a\" );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    assertEquals( \"<b>a</b>\", sfb.createFragment( reader, 0, F, ffl ) );\n\n    // change tags\n    sfb = new SimpleFragmentsBuilder( new String[]{ \"[\" }, new String[]{ \"]\" } );\n    assertEquals( \"[a]\", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","sourceOld":"  public void test1TermIndex() throws Exception {\n    FieldFragList ffl = ffl(new TermQuery(new Term(F, \"a\")), \"a\" );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    assertEquals( \"<b>a</b>\", sfb.createFragment( reader, 0, F, ffl ) );\n\n    // change tags\n    sfb = new SimpleFragmentsBuilder( new String[]{ \"[\" }, new String[]{ \"]\" } );\n    assertEquals( \"[a]\", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ac034d22a2af5ab70b9d27bb478acd7810092eb4"],"dfd4d352ddf04b37253ad97ce1aad1448253f0f7":["765471a9091dc4cb586cf8db5ed0d9c40f534e8e"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac034d22a2af5ab70b9d27bb478acd7810092eb4":["dfd4d352ddf04b37253ad97ce1aad1448253f0f7"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af","765471a9091dc4cb586cf8db5ed0d9c40f534e8e"],"63639dd66fd5bd9b90bc24dd596ae01575f27cc4":["765471a9091dc4cb586cf8db5ed0d9c40f534e8e","dfd4d352ddf04b37253ad97ce1aad1448253f0f7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"765471a9091dc4cb586cf8db5ed0d9c40f534e8e":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"dfd4d352ddf04b37253ad97ce1aad1448253f0f7":["ac034d22a2af5ab70b9d27bb478acd7810092eb4","63639dd66fd5bd9b90bc24dd596ae01575f27cc4"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","765471a9091dc4cb586cf8db5ed0d9c40f534e8e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"ac034d22a2af5ab70b9d27bb478acd7810092eb4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"63639dd66fd5bd9b90bc24dd596ae01575f27cc4":[],"765471a9091dc4cb586cf8db5ed0d9c40f534e8e":["dfd4d352ddf04b37253ad97ce1aad1448253f0f7","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","63639dd66fd5bd9b90bc24dd596ae01575f27cc4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","63639dd66fd5bd9b90bc24dd596ae01575f27cc4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}