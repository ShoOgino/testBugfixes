{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWFieldsWriter#PreFlexRWFieldsWriter(SegmentWriteState).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWFieldsWriter#PreFlexRWFieldsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/lucene3x/PreFlexRWFieldsWriter#PreFlexRWFieldsWriter(SegmentWriteState).mjava","sourceNew":"  public PreFlexRWFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    boolean success = false;\n    try {\n      final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", Lucene3xPostingsFormat.FREQ_EXTENSION);\n      freqOut = state.directory.createOutput(freqFile, state.context);\n      totalNumDocs = state.numDocs;\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut);\n      }\n    }\n\n    success = false;\n    try {\n      if (state.fieldInfos.hasProx()) {\n        final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", Lucene3xPostingsFormat.PROX_EXTENSION);\n        proxOut = state.directory.createOutput(proxFile, state.context);\n      } else {\n        proxOut = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut, freqOut);\n      }\n    }\n\n    skipListWriter = new Lucene40SkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":"  public PreFlexRWFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    boolean success = false;\n    try {\n      final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", Lucene3xPostingsFormat.FREQ_EXTENSION);\n      freqOut = state.directory.createOutput(freqFile, state.context);\n      totalNumDocs = state.numDocs;\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut);\n      }\n    }\n\n    success = false;\n    try {\n      if (state.fieldInfos.hasProx()) {\n        final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", Lucene3xPostingsFormat.PROX_EXTENSION);\n        proxOut = state.directory.createOutput(proxFile, state.context);\n      } else {\n        proxOut = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut, freqOut);\n      }\n    }\n\n    skipListWriter = new Lucene40SkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b05bfc12b2525ff33528806e03283a44d6fe7d3","date":1336132926,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWFieldsWriter#PreFlexRWFieldsWriter(SegmentWriteState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWFieldsWriter#PreFlexRWFieldsWriter(SegmentWriteState).mjava","sourceNew":"  public PreFlexRWFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    boolean success = false;\n    try {\n      final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", Lucene3xPostingsFormat.FREQ_EXTENSION);\n      freqOut = state.directory.createOutput(freqFile, state.context);\n      totalNumDocs = state.numDocs;\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut);\n      }\n    }\n\n    success = false;\n    try {\n      if (state.fieldInfos.hasProx()) {\n        final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", Lucene3xPostingsFormat.PROX_EXTENSION);\n        proxOut = state.directory.createOutput(proxFile, state.context);\n      } else {\n        proxOut = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut, freqOut);\n      }\n    }\n\n    skipListWriter = new PreFlexRWSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":"  public PreFlexRWFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    boolean success = false;\n    try {\n      final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", Lucene3xPostingsFormat.FREQ_EXTENSION);\n      freqOut = state.directory.createOutput(freqFile, state.context);\n      totalNumDocs = state.numDocs;\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut);\n      }\n    }\n\n    success = false;\n    try {\n      if (state.fieldInfos.hasProx()) {\n        final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", Lucene3xPostingsFormat.PROX_EXTENSION);\n        proxOut = state.directory.createOutput(proxFile, state.context);\n      } else {\n        proxOut = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut, freqOut);\n      }\n    }\n\n    skipListWriter = new Lucene40SkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","bugFix":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"129c6e8ac0c0d9a110ba29e4b5f1889374f30076","date":1337725510,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWFieldsWriter#PreFlexRWFieldsWriter(SegmentWriteState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWFieldsWriter#PreFlexRWFieldsWriter(SegmentWriteState).mjava","sourceNew":"  public PreFlexRWFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentInfo.name,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    boolean success = false;\n    try {\n      final String freqFile = IndexFileNames.segmentFileName(state.segmentInfo.name, \"\", Lucene3xPostingsFormat.FREQ_EXTENSION);\n      freqOut = state.directory.createOutput(freqFile, state.context);\n      totalNumDocs = state.numDocs;\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut);\n      }\n    }\n\n    success = false;\n    try {\n      if (state.fieldInfos.hasProx()) {\n        final String proxFile = IndexFileNames.segmentFileName(state.segmentInfo.name, \"\", Lucene3xPostingsFormat.PROX_EXTENSION);\n        proxOut = state.directory.createOutput(proxFile, state.context);\n      } else {\n        proxOut = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut, freqOut);\n      }\n    }\n\n    skipListWriter = new PreFlexRWSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":"  public PreFlexRWFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    boolean success = false;\n    try {\n      final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", Lucene3xPostingsFormat.FREQ_EXTENSION);\n      freqOut = state.directory.createOutput(freqFile, state.context);\n      totalNumDocs = state.numDocs;\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut);\n      }\n    }\n\n    success = false;\n    try {\n      if (state.fieldInfos.hasProx()) {\n        final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", Lucene3xPostingsFormat.PROX_EXTENSION);\n        proxOut = state.directory.createOutput(proxFile, state.context);\n      } else {\n        proxOut = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut, freqOut);\n      }\n    }\n\n    skipListWriter = new PreFlexRWSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16cbef32b882ec68df422af3f08845ec82620335","date":1337802266,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWFieldsWriter#PreFlexRWFieldsWriter(SegmentWriteState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWFieldsWriter#PreFlexRWFieldsWriter(SegmentWriteState).mjava","sourceNew":"  public PreFlexRWFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentInfo.name,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    boolean success = false;\n    try {\n      final String freqFile = IndexFileNames.segmentFileName(state.segmentInfo.name, \"\", Lucene3xPostingsFormat.FREQ_EXTENSION);\n      freqOut = state.directory.createOutput(freqFile, state.context);\n      totalNumDocs = state.segmentInfo.getDocCount();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut);\n      }\n    }\n\n    success = false;\n    try {\n      if (state.fieldInfos.hasProx()) {\n        final String proxFile = IndexFileNames.segmentFileName(state.segmentInfo.name, \"\", Lucene3xPostingsFormat.PROX_EXTENSION);\n        proxOut = state.directory.createOutput(proxFile, state.context);\n      } else {\n        proxOut = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut, freqOut);\n      }\n    }\n\n    skipListWriter = new PreFlexRWSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":"  public PreFlexRWFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentInfo.name,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    boolean success = false;\n    try {\n      final String freqFile = IndexFileNames.segmentFileName(state.segmentInfo.name, \"\", Lucene3xPostingsFormat.FREQ_EXTENSION);\n      freqOut = state.directory.createOutput(freqFile, state.context);\n      totalNumDocs = state.numDocs;\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut);\n      }\n    }\n\n    success = false;\n    try {\n      if (state.fieldInfos.hasProx()) {\n        final String proxFile = IndexFileNames.segmentFileName(state.segmentInfo.name, \"\", Lucene3xPostingsFormat.PROX_EXTENSION);\n        proxOut = state.directory.createOutput(proxFile, state.context);\n      } else {\n        proxOut = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut, freqOut);\n      }\n    }\n\n    skipListWriter = new PreFlexRWSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWFieldsWriter#PreFlexRWFieldsWriter(SegmentWriteState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWFieldsWriter#PreFlexRWFieldsWriter(SegmentWriteState).mjava","sourceNew":"  public PreFlexRWFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentInfo.name,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    boolean success = false;\n    try {\n      final String freqFile = IndexFileNames.segmentFileName(state.segmentInfo.name, \"\", Lucene3xPostingsFormat.FREQ_EXTENSION);\n      freqOut = state.directory.createOutput(freqFile, state.context);\n      totalNumDocs = state.segmentInfo.getDocCount();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut);\n      }\n    }\n\n    success = false;\n    try {\n      if (state.fieldInfos.hasProx()) {\n        final String proxFile = IndexFileNames.segmentFileName(state.segmentInfo.name, \"\", Lucene3xPostingsFormat.PROX_EXTENSION);\n        proxOut = state.directory.createOutput(proxFile, state.context);\n      } else {\n        proxOut = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut, freqOut);\n      }\n    }\n\n    skipListWriter = new PreFlexRWSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":"  public PreFlexRWFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    boolean success = false;\n    try {\n      final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", Lucene3xPostingsFormat.FREQ_EXTENSION);\n      freqOut = state.directory.createOutput(freqFile, state.context);\n      totalNumDocs = state.numDocs;\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut);\n      }\n    }\n\n    success = false;\n    try {\n      if (state.fieldInfos.hasProx()) {\n        final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", Lucene3xPostingsFormat.PROX_EXTENSION);\n        proxOut = state.directory.createOutput(proxFile, state.context);\n      } else {\n        proxOut = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut, freqOut);\n      }\n    }\n\n    skipListWriter = new PreFlexRWSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57ae3024996ccdb3c36c42cb890e1efb37df4ce8","date":1338343651,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWFieldsWriter#PreFlexRWFieldsWriter(SegmentWriteState).mjava","sourceNew":null,"sourceOld":"  public PreFlexRWFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentInfo.name,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    boolean success = false;\n    try {\n      final String freqFile = IndexFileNames.segmentFileName(state.segmentInfo.name, \"\", Lucene3xPostingsFormat.FREQ_EXTENSION);\n      freqOut = state.directory.createOutput(freqFile, state.context);\n      totalNumDocs = state.segmentInfo.getDocCount();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut);\n      }\n    }\n\n    success = false;\n    try {\n      if (state.fieldInfos.hasProx()) {\n        final String proxFile = IndexFileNames.segmentFileName(state.segmentInfo.name, \"\", Lucene3xPostingsFormat.PROX_EXTENSION);\n        proxOut = state.directory.createOutput(proxFile, state.context);\n      } else {\n        proxOut = null;\n      }\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(termsOut, freqOut);\n      }\n    }\n\n    skipListWriter = new PreFlexRWSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["9b05bfc12b2525ff33528806e03283a44d6fe7d3","16cbef32b882ec68df422af3f08845ec82620335"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["9b05bfc12b2525ff33528806e03283a44d6fe7d3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"16cbef32b882ec68df422af3f08845ec82620335":["129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"9b05bfc12b2525ff33528806e03283a44d6fe7d3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"]},"commit2Childs":{"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["16cbef32b882ec68df422af3f08845ec82620335"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9b05bfc12b2525ff33528806e03283a44d6fe7d3"],"16cbef32b882ec68df422af3f08845ec82620335":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9b05bfc12b2525ff33528806e03283a44d6fe7d3":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}