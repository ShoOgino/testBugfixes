{"path":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoCircleFactory#makeGeoCircle(PlanetModel,double,double,double).mjava","commits":[{"id":"9891fa1f5a5571b36fbd8a69ccc12f24f5201e48","date":1441921550,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoCircleFactory#makeGeoCircle(PlanetModel,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a GeoCircle of the right kind given the specified bounds.\n   * @param planetModel is the planet model.\n   * @param latitude is the center latitude.\n   * @param longitude is the center longitude.\n   * @param radius is the radius angle.\n   * @return a GeoCircle corresponding to what was specified.\n   */\n  public static GeoCircle makeGeoCircle(final PlanetModel planetModel, final double latitude, final double longitude, final double radius) {\n    // TODO: MHL for degenerate cases\n    return new GeoStandardCircle(planetModel, latitude, longitude, radius);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae6b82f3eeb00bd6696223fc1aaf31128810162a","date":1441977719,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoCircleFactory#makeGeoCircle(PlanetModel,double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoCircleFactory#makeGeoCircle(PlanetModel,double,double,double).mjava","sourceNew":"  /**\n   * Create a GeoCircle of the right kind given the specified bounds.\n   * @param planetModel is the planet model.\n   * @param latitude is the center latitude.\n   * @param longitude is the center longitude.\n   * @param radius is the radius angle.\n   * @return a GeoCircle corresponding to what was specified.\n   */\n  public static GeoCircle makeGeoCircle(final PlanetModel planetModel, final double latitude, final double longitude, final double radius) {\n    if (radius < Vector.MINIMUM_RESOLUTION) {\n      return new GeoDegeneratePoint(planetModel, latitude, longitude);\n    }\n    return new GeoStandardCircle(planetModel, latitude, longitude, radius);\n  }\n\n","sourceOld":"  /**\n   * Create a GeoCircle of the right kind given the specified bounds.\n   * @param planetModel is the planet model.\n   * @param latitude is the center latitude.\n   * @param longitude is the center longitude.\n   * @param radius is the radius angle.\n   * @return a GeoCircle corresponding to what was specified.\n   */\n  public static GeoCircle makeGeoCircle(final PlanetModel planetModel, final double latitude, final double longitude, final double radius) {\n    // TODO: MHL for degenerate cases\n    return new GeoStandardCircle(planetModel, latitude, longitude, radius);\n  }\n\n","bugFix":null,"bugIntro":["098b5036c89446805f69a16e53f6d22f10ae5766"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoCircleFactory#makeGeoCircle(PlanetModel,double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoCircleFactory#makeGeoCircle(PlanetModel,double,double,double).mjava","sourceNew":"  /**\n   * Create a GeoCircle of the right kind given the specified bounds.\n   * @param planetModel is the planet model.\n   * @param latitude is the center latitude.\n   * @param longitude is the center longitude.\n   * @param radius is the radius angle.\n   * @return a GeoCircle corresponding to what was specified.\n   */\n  public static GeoCircle makeGeoCircle(final PlanetModel planetModel, final double latitude, final double longitude, final double radius) {\n    if (radius < Vector.MINIMUM_RESOLUTION) {\n      return new GeoDegeneratePoint(planetModel, latitude, longitude);\n    }\n    return new GeoStandardCircle(planetModel, latitude, longitude, radius);\n  }\n\n","sourceOld":"  /**\n   * Create a GeoCircle of the right kind given the specified bounds.\n   * @param planetModel is the planet model.\n   * @param latitude is the center latitude.\n   * @param longitude is the center longitude.\n   * @param radius is the radius angle.\n   * @return a GeoCircle corresponding to what was specified.\n   */\n  public static GeoCircle makeGeoCircle(final PlanetModel planetModel, final double latitude, final double longitude, final double radius) {\n    if (radius < Vector.MINIMUM_RESOLUTION) {\n      return new GeoDegeneratePoint(planetModel, latitude, longitude);\n    }\n    return new GeoStandardCircle(planetModel, latitude, longitude, radius);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9891fa1f5a5571b36fbd8a69ccc12f24f5201e48":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b4e444678504caf66a8060b1d514383aa4feac0c":["ae6b82f3eeb00bd6696223fc1aaf31128810162a"],"ae6b82f3eeb00bd6696223fc1aaf31128810162a":["9891fa1f5a5571b36fbd8a69ccc12f24f5201e48"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4e444678504caf66a8060b1d514383aa4feac0c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9891fa1f5a5571b36fbd8a69ccc12f24f5201e48"],"9891fa1f5a5571b36fbd8a69ccc12f24f5201e48":["ae6b82f3eeb00bd6696223fc1aaf31128810162a"],"b4e444678504caf66a8060b1d514383aa4feac0c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae6b82f3eeb00bd6696223fc1aaf31128810162a":["b4e444678504caf66a8060b1d514383aa4feac0c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}