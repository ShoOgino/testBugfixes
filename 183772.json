{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase#cacheInit().mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase#cacheInit().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Only used by cache implementations\n   */\n  protected void cacheInit() {\n    if (simpleCache != null || cacheWithWhereClause != null)\n      return;\n    String where = context.getEntityAttribute(\"where\");\n    if (where == null) {\n      simpleCache = new HashMap<String, List<Map<String, Object>>>();\n    } else {\n      String[] splits = where.split(\"=\");\n      cachePk = splits[0];\n      cacheVariableName = splits[1].trim();\n      cacheWithWhereClause = new HashMap<String, Map<Object, List<Map<String, Object>>>>();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a03a1c391a8e16977859a4af2c997bfb4c59b77","date":1238972294,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase#cacheInit().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase#cacheInit().mjava","sourceNew":"  /**\n   * Only used by cache implementations\n   */\n  protected void cacheInit() {\n    if (simpleCache != null || cacheWithWhereClause != null)\n      return;\n    String where = context.getEntityAttribute(\"where\");\n\n    String cacheKey = context.getEntityAttribute(CACHE_KEY);\n    String lookupKey = context.getEntityAttribute(CACHE_LOOKUP);\n    if(cacheKey != null && lookupKey == null){\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'cacheKey' is specified for the entity \"+ entityName+\" but 'cacheLookup' is missing\" );\n\n    }\n    if (where == null && cacheKey == null) {\n      simpleCache = new HashMap<String, List<Map<String, Object>>>();\n    } else {\n      if (where != null) {\n        String[] splits = where.split(\"=\");\n        cachePk = splits[0];\n        cacheVariableName = splits[1].trim();\n      } else {\n        cachePk = cacheKey;\n        cacheVariableName = lookupKey;\n      }\n      cacheWithWhereClause = new HashMap<String, Map<Object, List<Map<String, Object>>>>();\n    }\n  }\n\n","sourceOld":"  /**\n   * Only used by cache implementations\n   */\n  protected void cacheInit() {\n    if (simpleCache != null || cacheWithWhereClause != null)\n      return;\n    String where = context.getEntityAttribute(\"where\");\n    if (where == null) {\n      simpleCache = new HashMap<String, List<Map<String, Object>>>();\n    } else {\n      String[] splits = where.split(\"=\");\n      cachePk = splits[0];\n      cacheVariableName = splits[1].trim();\n      cacheWithWhereClause = new HashMap<String, Map<Object, List<Map<String, Object>>>>();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase#cacheInit().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/EntityProcessorBase#cacheInit().mjava","sourceNew":"  /**\n   * Only used by cache implementations\n   */\n  protected void cacheInit() {\n    if (simpleCache != null || cacheWithWhereClause != null)\n      return;\n    String where = context.getEntityAttribute(\"where\");\n\n    String cacheKey = context.getEntityAttribute(CACHE_KEY);\n    String lookupKey = context.getEntityAttribute(CACHE_LOOKUP);\n    if(cacheKey != null && lookupKey == null){\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'cacheKey' is specified for the entity \"+ entityName+\" but 'cacheLookup' is missing\" );\n\n    }\n    if (where == null && cacheKey == null) {\n      simpleCache = new HashMap<String, List<Map<String, Object>>>();\n    } else {\n      if (where != null) {\n        String[] splits = where.split(\"=\");\n        cachePk = splits[0];\n        cacheVariableName = splits[1].trim();\n      } else {\n        cachePk = cacheKey;\n        cacheVariableName = lookupKey;\n      }\n      cacheWithWhereClause = new HashMap<String, Map<Object, List<Map<String, Object>>>>();\n    }\n  }\n\n","sourceOld":"  /**\n   * Only used by cache implementations\n   */\n  protected void cacheInit() {\n    if (simpleCache != null || cacheWithWhereClause != null)\n      return;\n    String where = context.getEntityAttribute(\"where\");\n\n    String cacheKey = context.getEntityAttribute(CACHE_KEY);\n    String lookupKey = context.getEntityAttribute(CACHE_LOOKUP);\n    if(cacheKey != null && lookupKey == null){\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'cacheKey' is specified for the entity \"+ entityName+\" but 'cacheLookup' is missing\" );\n\n    }\n    if (where == null && cacheKey == null) {\n      simpleCache = new HashMap<String, List<Map<String, Object>>>();\n    } else {\n      if (where != null) {\n        String[] splits = where.split(\"=\");\n        cachePk = splits[0];\n        cacheVariableName = splits[1].trim();\n      } else {\n        cachePk = cacheKey;\n        cacheVariableName = lookupKey;\n      }\n      cacheWithWhereClause = new HashMap<String, Map<Object, List<Map<String, Object>>>>();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"2a03a1c391a8e16977859a4af2c997bfb4c59b77":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"ad94625fb8d088209f46650c8097196fec67f00c":["2a03a1c391a8e16977859a4af2c997bfb4c59b77"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["2a03a1c391a8e16977859a4af2c997bfb4c59b77"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a03a1c391a8e16977859a4af2c997bfb4c59b77":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}