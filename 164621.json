{"path":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2CharFilter#testRandomStrings().mjava","commits":[{"id":"837108f624718d0896bef7acd0150b66ebd816db","date":1395274740,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2CharFilter#testRandomStrings().mjava","pathOld":"/dev/null","sourceNew":"  public void testRandomStrings() throws IOException {\n    // nfkc_cf\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc_cf\", Normalizer2.Mode.COMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 100*RANDOM_MULTIPLIER, 8192);\n\n    // nfkd\n    a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc\", Normalizer2.Mode.DECOMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 100*RANDOM_MULTIPLIER, 8192);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4434126f19baaf18fbed92b111931667ffb8ebbd","date":1418044101,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2CharFilter#testRandomStrings().mjava","pathOld":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2CharFilter#testRandomStrings().mjava","sourceNew":"  public void testRandomStrings() throws IOException {\n    // nfkc_cf\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc_cf\", Normalizer2.Mode.COMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 25*RANDOM_MULTIPLIER, 8192);\n\n    // nfkd\n    a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc\", Normalizer2.Mode.DECOMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 25*RANDOM_MULTIPLIER, 8192);\n  }\n\n","sourceOld":"  public void testRandomStrings() throws IOException {\n    // nfkc_cf\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc_cf\", Normalizer2.Mode.COMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 100*RANDOM_MULTIPLIER, 8192);\n\n    // nfkd\n    a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc\", Normalizer2.Mode.DECOMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 100*RANDOM_MULTIPLIER, 8192);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2CharFilter#testRandomStrings().mjava","pathOld":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2CharFilter#testRandomStrings().mjava","sourceNew":"  public void testRandomStrings() throws IOException {\n    // nfkc_cf\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc_cf\", Normalizer2.Mode.COMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 25*RANDOM_MULTIPLIER, 8192);\n    a.close();\n\n    // nfkd\n    a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc\", Normalizer2.Mode.DECOMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 25*RANDOM_MULTIPLIER, 8192);\n    a.close();\n  }\n\n","sourceOld":"  public void testRandomStrings() throws IOException {\n    // nfkc_cf\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc_cf\", Normalizer2.Mode.COMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 25*RANDOM_MULTIPLIER, 8192);\n\n    // nfkd\n    a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc\", Normalizer2.Mode.DECOMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 25*RANDOM_MULTIPLIER, 8192);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2CharFilter#testRandomStrings().mjava","pathOld":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2CharFilter#testRandomStrings().mjava","sourceNew":"  public void testRandomStrings() throws IOException {\n    // nfkc_cf\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc_cf\", Normalizer2.Mode.COMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 25*RANDOM_MULTIPLIER, 8192);\n    a.close();\n\n    // nfkd\n    a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc\", Normalizer2.Mode.DECOMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 25*RANDOM_MULTIPLIER, 8192);\n    a.close();\n  }\n\n","sourceOld":"  public void testRandomStrings() throws IOException {\n    // nfkc_cf\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc_cf\", Normalizer2.Mode.COMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 25*RANDOM_MULTIPLIER, 8192);\n\n    // nfkd\n    a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc\", Normalizer2.Mode.DECOMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 25*RANDOM_MULTIPLIER, 8192);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e470a35ad6feeb13b243c17ac7ec9b591544800","date":1430220233,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2CharFilter#testRandomStrings().mjava","pathOld":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2CharFilter#testRandomStrings().mjava","sourceNew":"  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-5595\")\n  public void testRandomStrings() throws IOException {\n    // nfkc_cf\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc_cf\", Normalizer2.Mode.COMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 25*RANDOM_MULTIPLIER, 8192);\n    a.close();\n\n    // nfkd\n    a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc\", Normalizer2.Mode.DECOMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 25*RANDOM_MULTIPLIER, 8192);\n    a.close();\n  }\n\n","sourceOld":"  public void testRandomStrings() throws IOException {\n    // nfkc_cf\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc_cf\", Normalizer2.Mode.COMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 25*RANDOM_MULTIPLIER, 8192);\n    a.close();\n\n    // nfkd\n    a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc\", Normalizer2.Mode.DECOMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 25*RANDOM_MULTIPLIER, 8192);\n    a.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57c6c784f777a2cc8fa014507ea129526822714d","date":1579733373,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2CharFilter#testRandomStrings().mjava","pathOld":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2CharFilter#testRandomStrings().mjava","sourceNew":"  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-5595\")\n  public void testRandomStrings() throws IOException {\n    // nfkc_cf\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc_cf\", Normalizer2.Mode.COMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 200 * RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 25*RANDOM_MULTIPLIER, 8192);\n    a.close();\n\n    // nfkd\n    a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc\", Normalizer2.Mode.DECOMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 200 * RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 25*RANDOM_MULTIPLIER, 8192);\n    a.close();\n  }\n\n","sourceOld":"  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-5595\")\n  public void testRandomStrings() throws IOException {\n    // nfkc_cf\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc_cf\", Normalizer2.Mode.COMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 25*RANDOM_MULTIPLIER, 8192);\n    a.close();\n\n    // nfkd\n    a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        return new TokenStreamComponents(new MockTokenizer(MockTokenizer.WHITESPACE, false));\n      }\n\n      @Override\n      protected Reader initReader(String fieldName, Reader reader) {\n        return new ICUNormalizer2CharFilter(reader, Normalizer2.getInstance(null, \"nfkc\", Normalizer2.Mode.DECOMPOSE));\n      }\n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n    // huge strings\n    checkRandomData(random(), a, 25*RANDOM_MULTIPLIER, 8192);\n    a.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"57c6c784f777a2cc8fa014507ea129526822714d":["5e470a35ad6feeb13b243c17ac7ec9b591544800"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["4434126f19baaf18fbed92b111931667ffb8ebbd","a56958d7f71a28824f20031ffbb2e13502a0274e"],"5e470a35ad6feeb13b243c17ac7ec9b591544800":["a56958d7f71a28824f20031ffbb2e13502a0274e"],"837108f624718d0896bef7acd0150b66ebd816db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4434126f19baaf18fbed92b111931667ffb8ebbd":["837108f624718d0896bef7acd0150b66ebd816db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a56958d7f71a28824f20031ffbb2e13502a0274e":["4434126f19baaf18fbed92b111931667ffb8ebbd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57c6c784f777a2cc8fa014507ea129526822714d"]},"commit2Childs":{"57c6c784f777a2cc8fa014507ea129526822714d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"5e470a35ad6feeb13b243c17ac7ec9b591544800":["57c6c784f777a2cc8fa014507ea129526822714d"],"837108f624718d0896bef7acd0150b66ebd816db":["4434126f19baaf18fbed92b111931667ffb8ebbd"],"4434126f19baaf18fbed92b111931667ffb8ebbd":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["837108f624718d0896bef7acd0150b66ebd816db"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","5e470a35ad6feeb13b243c17ac7ec9b591544800"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}