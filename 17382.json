{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestEphemeralCache#assertFullImport(String).mjava","commits":[{"id":"7477cc545b0653fee13cfdaa4848535d107b96a9","date":1329404953,"type":0,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestEphemeralCache#assertFullImport(String).mjava","pathOld":"/dev/null","sourceNew":"  private void assertFullImport(String dataConfig) throws Exception {\n    runFullImport(dataConfig);\n    \n    assertQ(req(\"*:*\"), \"//*[@numFound='5']\");\n    assertQ(req(\"id:1\"), \"//*[@numFound='1']\");\n    assertQ(req(\"id:6\"), \"//*[@numFound='0']\");\n    assertQ(req(\"parent_s:four\"), \"//*[@numFound='1']\");\n    assertQ(req(\"child1a_mult_s:this\\\\ is\\\\ the\\\\ numbe*\"), \"//*[@numFound='2']\");\n    assertQ(req(\"child2a_mult_s:Child\\\\ 2\\\\ say*\"), \"//*[@numFound='4']\");\n    assertQ(req(\"child1b_s:CHILD1B\"), \"//*[@numFound='1']\");\n    assertQ(req(\"child2b_s:CHILD2B\"), \"//*[@numFound='1']\");\n    assertQ(req(\"child1a_mult_s:one\"), \"//*[@numFound='1']\");\n    assertQ(req(\"child1a_mult_s:uno\"), \"//*[@numFound='1']\");\n    assertQ(req(\"child1a_mult_s:(uno OR one)\"), \"//*[@numFound='1']\");\n    \n    assertThat(DestroyCountCache.destroyed.size(), is(3));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestEphemeralCache#assertFullImport(String).mjava","sourceNew":null,"sourceOld":"  private void assertFullImport(String dataConfig) throws Exception {\n    runFullImport(dataConfig);\n    \n    assertQ(req(\"*:*\"), \"//*[@numFound='5']\");\n    assertQ(req(\"id:1\"), \"//*[@numFound='1']\");\n    assertQ(req(\"id:6\"), \"//*[@numFound='0']\");\n    assertQ(req(\"parent_s:four\"), \"//*[@numFound='1']\");\n    assertQ(req(\"child1a_mult_s:this\\\\ is\\\\ the\\\\ numbe*\"), \"//*[@numFound='2']\");\n    assertQ(req(\"child2a_mult_s:Child\\\\ 2\\\\ say*\"), \"//*[@numFound='4']\");\n    assertQ(req(\"child1b_s:CHILD1B\"), \"//*[@numFound='1']\");\n    assertQ(req(\"child2b_s:CHILD2B\"), \"//*[@numFound='1']\");\n    assertQ(req(\"child1a_mult_s:one\"), \"//*[@numFound='1']\");\n    assertQ(req(\"child1a_mult_s:uno\"), \"//*[@numFound='1']\");\n    assertQ(req(\"child1a_mult_s:(uno OR one)\"), \"//*[@numFound='1']\");\n    \n    assertThat(DestroyCountCache.destroyed.size(), is(3));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["7477cc545b0653fee13cfdaa4848535d107b96a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7477cc545b0653fee13cfdaa4848535d107b96a9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7477cc545b0653fee13cfdaa4848535d107b96a9"],"7477cc545b0653fee13cfdaa4848535d107b96a9":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}