{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.AssertTool#assertSolrNotRunningInCloudMode(String).mjava","commits":[{"id":"a171ed3ff25e158a76780310dbb91c67f6801238","date":1519299877,"type":0,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AssertTool#assertSolrNotRunningInCloudMode(String).mjava","pathOld":"/dev/null","sourceNew":"    public static int assertSolrNotRunningInCloudMode(String url) throws Exception {\n      if (! isSolrRunningOn(url)) {\n        return exitOrException(\"Solr is not running on url \" + url + \" after \" + timeoutMs.orElse(1000L) / 1000 + \"s\");\n      }\n\n      if (runningSolrIsCloud(url)) {\n        return exitOrException(\"Solr is not running in standalone mode on \" + url);\n      }\n      return 0;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b79a5db147a1c6f95d1625ddbc3561ef56955225","date":1528848080,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AssertTool#assertSolrNotRunningInCloudMode(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AssertTool#assertSolrNotRunningInCloudMode(String).mjava","sourceNew":"    public static int assertSolrNotRunningInCloudMode(String url) throws Exception {\n      if (! isSolrRunningOn(url)) {\n        return exitOrException(\"Solr is not running on url \" + url + \" after \" + timeoutMs.orElse(1000L) / 1000 + \"s\");\n      }\n\n      if (runningSolrIsCloud(url)) {\n        return exitOrException(\"Solr is not running in standalone mode on \" + url);\n      }\n      return 0;\n    }\n\n","sourceOld":"    public static int assertSolrNotRunningInCloudMode(String url) throws Exception {\n      if (! isSolrRunningOn(url)) {\n        return exitOrException(\"Solr is not running on url \" + url + \" after \" + timeoutMs.orElse(1000L) / 1000 + \"s\");\n      }\n\n      if (runningSolrIsCloud(url)) {\n        return exitOrException(\"Solr is not running in standalone mode on \" + url);\n      }\n      return 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AssertTool#assertSolrNotRunningInCloudMode(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AssertTool#assertSolrNotRunningInCloudMode(String).mjava","sourceNew":"    public static int assertSolrNotRunningInCloudMode(String url) throws Exception {\n      if (! isSolrRunningOn(url)) {\n        return exitOrException(\"Solr is not running on url \" + url + \" after \" + timeoutMs.orElse(1000L) / 1000 + \"s\");\n      }\n\n      if (runningSolrIsCloud(url)) {\n        return exitOrException(\"Solr is not running in standalone mode on \" + url);\n      }\n      return 0;\n    }\n\n","sourceOld":"    public static int assertSolrNotRunningInCloudMode(String url) throws Exception {\n      if (! isSolrRunningOn(url)) {\n        return exitOrException(\"Solr is not running on url \" + url + \" after \" + timeoutMs.orElse(1000L) / 1000 + \"s\");\n      }\n\n      if (runningSolrIsCloud(url)) {\n        return exitOrException(\"Solr is not running in standalone mode on \" + url);\n      }\n      return 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AssertTool#assertSolrNotRunningInCloudMode(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AssertTool#assertSolrNotRunningInCloudMode(String).mjava","sourceNew":"    public static int assertSolrNotRunningInCloudMode(String url) throws Exception {\n      if (! isSolrRunningOn(url)) {\n        return exitOrException(\"Solr is not running on url \" + url + \" after \" + timeoutMs.orElse(1000L) / 1000 + \"s\");\n      }\n\n      if (runningSolrIsCloud(url)) {\n        return exitOrException(\"Solr is not running in standalone mode on \" + url);\n      }\n      return 0;\n    }\n\n","sourceOld":"    public static int assertSolrNotRunningInCloudMode(String url) throws Exception {\n      if (! isSolrRunningOn(url)) {\n        return exitOrException(\"Solr is not running on url \" + url + \" after \" + timeoutMs.orElse(1000L) / 1000 + \"s\");\n      }\n\n      if (runningSolrIsCloud(url)) {\n        return exitOrException(\"Solr is not running in standalone mode on \" + url);\n      }\n      return 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a171ed3ff25e158a76780310dbb91c67f6801238","b79a5db147a1c6f95d1625ddbc3561ef56955225"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a171ed3ff25e158a76780310dbb91c67f6801238":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b79a5db147a1c6f95d1625ddbc3561ef56955225"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["a171ed3ff25e158a76780310dbb91c67f6801238"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a171ed3ff25e158a76780310dbb91c67f6801238","b79a5db147a1c6f95d1625ddbc3561ef56955225"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a171ed3ff25e158a76780310dbb91c67f6801238"],"a171ed3ff25e158a76780310dbb91c67f6801238":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","b79a5db147a1c6f95d1625ddbc3561ef56955225","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}