{"path":"solr/core/src/test/org/apache/solr/search/RankQueryTestPlugin.TestCollector#getLeafCollector(LeafReaderContext).mjava","commits":[{"id":"bd81b9f1e22432a668756e938bfb0835c1abb11b","date":1546254331,"type":1,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/RankQueryTestPlugin.TestCollector#getLeafCollector(LeafReaderContext).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRankQueryPlugin.TestCollector#getLeafCollector(LeafReaderContext).mjava","sourceNew":"    @Override\n    public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n      final int base = context.docBase;\n      final NumericDocValues values = DocValues.getNumeric(context.reader(), \"sort_i\");\n      return new LeafCollector() {\n        \n        @Override\n        public void setScorer(Scorable scorer) throws IOException {}\n        \n        public void collect(int doc) throws IOException {\n          long value;\n          if (values.advanceExact(doc)) {\n            value = values.longValue();\n          } else {\n            value = 0;\n          }\n          list.add(new ScoreDoc(doc+base, (float) value));\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {\n      final int base = context.docBase;\n      final NumericDocValues values = DocValues.getNumeric(context.reader(), \"sort_i\");\n      return new LeafCollector() {\n        \n        @Override\n        public void setScorer(Scorable scorer) throws IOException {}\n        \n        public void collect(int doc) throws IOException {\n          long value;\n          if (values.advanceExact(doc)) {\n            value = values.longValue();\n          } else {\n            value = 0;\n          }\n          list.add(new ScoreDoc(doc+base, (float) value));\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bd81b9f1e22432a668756e938bfb0835c1abb11b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bd81b9f1e22432a668756e938bfb0835c1abb11b"]},"commit2Childs":{"bd81b9f1e22432a668756e938bfb0835c1abb11b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bd81b9f1e22432a668756e938bfb0835c1abb11b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}