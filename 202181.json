{"path":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory,StringDistance).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory,StringDistance).mjava","pathOld":"contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory,StringDistance).mjava","sourceNew":"  /**\n   * Use the given directory as a spell checker index. The directory\n   * is created if it doesn't exist yet.\n   * @param spellIndex the spell index directory\n   * @param sd the {@link StringDistance} measurement to use \n   * @throws IOException if Spellchecker can not open the directory\n   */\n  public SpellChecker(Directory spellIndex, StringDistance sd) throws IOException {\n    setSpellIndex(spellIndex);\n    setStringDistance(sd);\n  }\n\n","sourceOld":"  /**\n   * Use the given directory as a spell checker index. The directory\n   * is created if it doesn't exist yet.\n   * @param spellIndex the spell index directory\n   * @param sd the {@link StringDistance} measurement to use \n   * @throws IOException if Spellchecker can not open the directory\n   */\n  public SpellChecker(Directory spellIndex, StringDistance sd) throws IOException {\n    setSpellIndex(spellIndex);\n    setStringDistance(sd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7006f130a90f88aaa52ca7c0bfe4a204efef6b3","date":1282077658,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory,StringDistance).mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory,StringDistance).mjava","sourceNew":"  /**\n   * Use the given directory as a spell checker index. The directory\n   * is created if it doesn't exist yet.\n   * @param spellIndex the spell index directory\n   * @param sd the {@link StringDistance} measurement to use \n   * @throws IOException if Spellchecker can not open the directory\n   */\n  public SpellChecker(Directory spellIndex, StringDistance sd) throws IOException {\n    this(spellIndex, sd, SuggestWordQueue.DEFAULT_COMPARATOR);\n  }\n\n","sourceOld":"  /**\n   * Use the given directory as a spell checker index. The directory\n   * is created if it doesn't exist yet.\n   * @param spellIndex the spell index directory\n   * @param sd the {@link StringDistance} measurement to use \n   * @throws IOException if Spellchecker can not open the directory\n   */\n  public SpellChecker(Directory spellIndex, StringDistance sd) throws IOException {\n    setSpellIndex(spellIndex);\n    setStringDistance(sd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory,StringDistance).mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory,StringDistance).mjava","sourceNew":"  /**\n   * Use the given directory as a spell checker index. The directory\n   * is created if it doesn't exist yet.\n   * @param spellIndex the spell index directory\n   * @param sd the {@link StringDistance} measurement to use \n   * @throws IOException if Spellchecker can not open the directory\n   */\n  public SpellChecker(Directory spellIndex, StringDistance sd) throws IOException {\n    this(spellIndex, sd, SuggestWordQueue.DEFAULT_COMPARATOR);\n  }\n\n","sourceOld":"  /**\n   * Use the given directory as a spell checker index. The directory\n   * is created if it doesn't exist yet.\n   * @param spellIndex the spell index directory\n   * @param sd the {@link StringDistance} measurement to use \n   * @throws IOException if Spellchecker can not open the directory\n   */\n  public SpellChecker(Directory spellIndex, StringDistance sd) throws IOException {\n    setSpellIndex(spellIndex);\n    setStringDistance(sd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory,StringDistance).mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory,StringDistance).mjava","sourceNew":"  /**\n   * Use the given directory as a spell checker index. The directory\n   * is created if it doesn't exist yet.\n   * @param spellIndex the spell index directory\n   * @param sd the {@link StringDistance} measurement to use \n   * @throws IOException if Spellchecker can not open the directory\n   */\n  public SpellChecker(Directory spellIndex, StringDistance sd) throws IOException {\n    this(spellIndex, sd, SuggestWordQueue.DEFAULT_COMPARATOR);\n  }\n\n","sourceOld":"  /**\n   * Use the given directory as a spell checker index. The directory\n   * is created if it doesn't exist yet.\n   * @param spellIndex the spell index directory\n   * @param sd the {@link StringDistance} measurement to use \n   * @throws IOException if Spellchecker can not open the directory\n   */\n  public SpellChecker(Directory spellIndex, StringDistance sd) throws IOException {\n    this(spellIndex, sd, SuggestWordQueue.DEFAULT_COMPARATOR);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory,StringDistance).mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory,StringDistance).mjava","sourceNew":"  /**\n   * Use the given directory as a spell checker index. The directory\n   * is created if it doesn't exist yet.\n   * @param spellIndex the spell index directory\n   * @param sd the {@link StringDistance} measurement to use \n   * @throws IOException if Spellchecker can not open the directory\n   */\n  public SpellChecker(Directory spellIndex, StringDistance sd) throws IOException {\n    this(spellIndex, sd, SuggestWordQueue.DEFAULT_COMPARATOR);\n  }\n\n","sourceOld":"  /**\n   * Use the given directory as a spell checker index. The directory\n   * is created if it doesn't exist yet.\n   * @param spellIndex the spell index directory\n   * @param sd the {@link StringDistance} measurement to use \n   * @throws IOException if Spellchecker can not open the directory\n   */\n  public SpellChecker(Directory spellIndex, StringDistance sd) throws IOException {\n    this(spellIndex, sd, SuggestWordQueue.DEFAULT_COMPARATOR);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory,StringDistance).mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory,StringDistance).mjava","sourceNew":"  /**\n   * Use the given directory as a spell checker index. The directory\n   * is created if it doesn't exist yet.\n   * @param spellIndex the spell index directory\n   * @param sd the {@link StringDistance} measurement to use \n   * @throws IOException if Spellchecker can not open the directory\n   */\n  public SpellChecker(Directory spellIndex, StringDistance sd) throws IOException {\n    this(spellIndex, sd, SuggestWordQueue.DEFAULT_COMPARATOR);\n  }\n\n","sourceOld":"  /**\n   * Use the given directory as a spell checker index. The directory\n   * is created if it doesn't exist yet.\n   * @param spellIndex the spell index directory\n   * @param sd the {@link StringDistance} measurement to use \n   * @throws IOException if Spellchecker can not open the directory\n   */\n  public SpellChecker(Directory spellIndex, StringDistance sd) throws IOException {\n    this(spellIndex, sd, SuggestWordQueue.DEFAULT_COMPARATOR);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7006f130a90f88aaa52ca7c0bfe4a204efef6b3":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e230a61047bc041516c811baa08a7174d6f8322a":["c7006f130a90f88aaa52ca7c0bfe4a204efef6b3"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c7006f130a90f88aaa52ca7c0bfe4a204efef6b3","e230a61047bc041516c811baa08a7174d6f8322a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","c7006f130a90f88aaa52ca7c0bfe4a204efef6b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e230a61047bc041516c811baa08a7174d6f8322a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["c7006f130a90f88aaa52ca7c0bfe4a204efef6b3","e230a61047bc041516c811baa08a7174d6f8322a"]},"commit2Childs":{"c7006f130a90f88aaa52ca7c0bfe4a204efef6b3":["e230a61047bc041516c811baa08a7174d6f8322a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"e230a61047bc041516c811baa08a7174d6f8322a":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c7006f130a90f88aaa52ca7c0bfe4a204efef6b3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}