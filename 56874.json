{"path":"src/java/org/apache/lucene/search/FieldCacheRangeFilter.RangeMultiFilterDocIdSet#initialize().mjava","commits":[{"id":"ad74a68eca82ce50fc02b618627a1d3cf9d74433","date":1227959428,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldCacheRangeFilter.RangeMultiFilterDocIdSet#initialize().mjava","pathOld":"/dev/null","sourceNew":"    private void initialize() {\n      int lowerPoint = fcsi.binarySearchLookup(lowerVal);\n      if (includeLower && lowerPoint >= 0) {\n        inclusiveLowerPoint = lowerPoint;\n      } else if (lowerPoint >= 0) {\n        inclusiveLowerPoint = lowerPoint+1;\n      } else {\n        inclusiveLowerPoint = -lowerPoint-1;\n      }\n      int upperPoint = fcsi.binarySearchLookup(upperVal);\n      if (includeUpper && upperPoint >= 0) {\n        inclusiveUpperPoint = upperPoint;\n      } else if (upperPoint >= 0) {\n        inclusiveUpperPoint = upperPoint - 1;\n      } else {\n        inclusiveUpperPoint = -upperPoint - 2;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3fd920798ed4dd32cd47f16d414a89df5daf626","date":1228161174,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldCacheRangeFilter.RangeMultiFilterDocIdSet#initialize().mjava","pathOld":"src/java/org/apache/lucene/search/FieldCacheRangeFilter.RangeMultiFilterDocIdSet#initialize().mjava","sourceNew":"    private void initialize() {\n      int lowerPoint = fcsi.binarySearchLookup(lowerVal);\n      int upperPoint = fcsi.binarySearchLookup(upperVal);\n\n      if (lowerPoint == 0 && upperPoint == 0) {\n        throw new IllegalArgumentException(\"At least one value must be non-null\");\n      }\n      \n      if (includeLower && lowerPoint == 0) {\n    \tthrow new IllegalArgumentException(\"The lower bound must be non-null to be inclusive\");\n      } else if (includeLower && lowerPoint > 0) {\n        inclusiveLowerPoint = lowerPoint;\n      } else if (lowerPoint >= 0) {\n        inclusiveLowerPoint = lowerPoint+1;\n      } else {\n        inclusiveLowerPoint = -lowerPoint-1;\n      }\n      \n      if (includeUpper && upperPoint == 0) {\n    \tthrow new IllegalArgumentException(\"The upper bound must be non-null to be inclusive\");\n      } else if (upperPoint == 0) {\n    \tinclusiveUpperPoint = Integer.MAX_VALUE;  \n      } else if (includeUpper && upperPoint > 0) {\n        inclusiveUpperPoint = upperPoint;\n      } else if (upperPoint >= 0) {\n        inclusiveUpperPoint = upperPoint - 1;\n      } else {\n        inclusiveUpperPoint = -upperPoint - 2;\n      }\n    }\n\n","sourceOld":"    private void initialize() {\n      int lowerPoint = fcsi.binarySearchLookup(lowerVal);\n      if (includeLower && lowerPoint >= 0) {\n        inclusiveLowerPoint = lowerPoint;\n      } else if (lowerPoint >= 0) {\n        inclusiveLowerPoint = lowerPoint+1;\n      } else {\n        inclusiveLowerPoint = -lowerPoint-1;\n      }\n      int upperPoint = fcsi.binarySearchLookup(upperVal);\n      if (includeUpper && upperPoint >= 0) {\n        inclusiveUpperPoint = upperPoint;\n      } else if (upperPoint >= 0) {\n        inclusiveUpperPoint = upperPoint - 1;\n      } else {\n        inclusiveUpperPoint = -upperPoint - 2;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f7c8ed26cfbf4007c46fd27a417560e932ab4d8","date":1246360634,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/FieldCacheRangeFilter.RangeMultiFilterDocIdSet#initialize().mjava","sourceNew":null,"sourceOld":"    private void initialize() {\n      int lowerPoint = fcsi.binarySearchLookup(lowerVal);\n      int upperPoint = fcsi.binarySearchLookup(upperVal);\n\n      if (lowerPoint == 0 && upperPoint == 0) {\n        throw new IllegalArgumentException(\"At least one value must be non-null\");\n      }\n      \n      if (includeLower && lowerPoint == 0) {\n    \tthrow new IllegalArgumentException(\"The lower bound must be non-null to be inclusive\");\n      } else if (includeLower && lowerPoint > 0) {\n        inclusiveLowerPoint = lowerPoint;\n      } else if (lowerPoint >= 0) {\n        inclusiveLowerPoint = lowerPoint+1;\n      } else {\n        inclusiveLowerPoint = -lowerPoint-1;\n      }\n      \n      if (includeUpper && upperPoint == 0) {\n    \tthrow new IllegalArgumentException(\"The upper bound must be non-null to be inclusive\");\n      } else if (upperPoint == 0) {\n    \tinclusiveUpperPoint = Integer.MAX_VALUE;  \n      } else if (includeUpper && upperPoint > 0) {\n        inclusiveUpperPoint = upperPoint;\n      } else if (upperPoint >= 0) {\n        inclusiveUpperPoint = upperPoint - 1;\n      } else {\n        inclusiveUpperPoint = -upperPoint - 2;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4f7c8ed26cfbf4007c46fd27a417560e932ab4d8":["e3fd920798ed4dd32cd47f16d414a89df5daf626"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad74a68eca82ce50fc02b618627a1d3cf9d74433":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e3fd920798ed4dd32cd47f16d414a89df5daf626":["ad74a68eca82ce50fc02b618627a1d3cf9d74433"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4f7c8ed26cfbf4007c46fd27a417560e932ab4d8"]},"commit2Childs":{"4f7c8ed26cfbf4007c46fd27a417560e932ab4d8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ad74a68eca82ce50fc02b618627a1d3cf9d74433"],"ad74a68eca82ce50fc02b618627a1d3cf9d74433":["e3fd920798ed4dd32cd47f16d414a89df5daf626"],"e3fd920798ed4dd32cd47f16d414a89df5daf626":["4f7c8ed26cfbf4007c46fd27a417560e932ab4d8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}