{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = DirectoryReader.open(addDir);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"02e8faf10211a6fbcdd8675af75977da20199190","date":1340393829,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n      _TestUtil.reduceOpenFiles(writer);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = DirectoryReader.open(addDir);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = DirectoryReader.open(addDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n      _TestUtil.reduceOpenFiles(writer);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = DirectoryReader.open(addDir);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = DirectoryReader.open(addDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n      TestUtil.reduceOpenFiles(writer);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = DirectoryReader.open(addDir);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n      _TestUtil.reduceOpenFiles(writer);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = DirectoryReader.open(addDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n      TestUtil.reduceOpenFiles(writer);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.shutdown();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = DirectoryReader.open(addDir);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n      TestUtil.reduceOpenFiles(writer);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = DirectoryReader.open(addDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                     .setMaxBufferedDocs(2));\n      TestUtil.reduceOpenFiles(writer);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.shutdown();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = DirectoryReader.open(addDir);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMaxBufferedDocs(2));\n      TestUtil.reduceOpenFiles(writer);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.shutdown();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = DirectoryReader.open(addDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                     .setMaxBufferedDocs(2));\n      TestUtil.reduceOpenFiles(writer);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = DirectoryReader.open(addDir);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                     .setMaxBufferedDocs(2));\n      TestUtil.reduceOpenFiles(writer);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.shutdown();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = DirectoryReader.open(addDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa","date":1420599177,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                     .setMaxBufferedDocs(2));\n      TestUtil.reduceOpenFiles(writer);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new DirectoryReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = DirectoryReader.open(addDir);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                     .setMaxBufferedDocs(2));\n      TestUtil.reduceOpenFiles(writer);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = DirectoryReader.open(addDir);\n    }\n\n","bugFix":["c4ff8864209d2e972cb4393600c26082f9a6533d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f354ba79a5a3e8491ec2953f14f365a02c058ac","date":1598293148,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                     .setMaxFullFlushMergeWaitMillis(0)\n                                                     .setMaxBufferedDocs(2));\n      TestUtil.reduceOpenFiles(writer);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new DirectoryReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = DirectoryReader.open(addDir);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                                     .setMaxBufferedDocs(2));\n      TestUtil.reduceOpenFiles(writer);\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new DirectoryReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = DirectoryReader.open(addDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"6613659748fe4411a7dcf85266e55db1f95f7315":["02e8faf10211a6fbcdd8675af75977da20199190"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"02e8faf10211a6fbcdd8675af75977da20199190":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","02e8faf10211a6fbcdd8675af75977da20199190"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["6613659748fe4411a7dcf85266e55db1f95f7315"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3f354ba79a5a3e8491ec2953f14f365a02c058ac":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f354ba79a5a3e8491ec2953f14f365a02c058ac"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"6613659748fe4411a7dcf85266e55db1f95f7315":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa":["3f354ba79a5a3e8491ec2953f14f365a02c058ac"],"02e8faf10211a6fbcdd8675af75977da20199190":["6613659748fe4411a7dcf85266e55db1f95f7315","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["02e8faf10211a6fbcdd8675af75977da20199190","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"3f354ba79a5a3e8491ec2953f14f365a02c058ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}