{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilterFactory#init(Map[String,String]).mjava","commits":[{"id":"3241e06e642196396b80bb293acd9c0814d079e0","date":1343094999,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilterFactory#init(Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/CJKBigramFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilterFactory#init(Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/CJKBigramFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilterFactory#init(Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/CJKBigramFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilterFactory#init(Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/CJKBigramFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1548959d8ee1230b6fe5bc9da6115d9fc4019bc9","date":1344119834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilterFactory#init(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n    outputUnigrams = getBoolean(\"outputUnigrams\", false);\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilterFactory#init(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n    outputUnigrams = getBoolean(\"outputUnigrams\", false);\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilterFactory#init(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n    outputUnigrams = getBoolean(\"outputUnigrams\", false);\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilterFactory#init(Map[String,String]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    flags = 0;\n    if (getBoolean(\"han\", true)) {\n      flags |= CJKBigramFilter.HAN;\n    }\n    if (getBoolean(\"hiragana\", true)) {\n      flags |= CJKBigramFilter.HIRAGANA;\n    }\n    if (getBoolean(\"katakana\", true)) {\n      flags |= CJKBigramFilter.KATAKANA;\n    }\n    if (getBoolean(\"hangul\", true)) {\n      flags |= CJKBigramFilter.HANGUL;\n    }\n    outputUnigrams = getBoolean(\"outputUnigrams\", false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","1548959d8ee1230b6fe5bc9da6115d9fc4019bc9"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["aba371508186796cc6151d8223a5b4e16d02e26e","1548959d8ee1230b6fe5bc9da6115d9fc4019bc9"],"1548959d8ee1230b6fe5bc9da6115d9fc4019bc9":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["1548959d8ee1230b6fe5bc9da6115d9fc4019bc9"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3241e06e642196396b80bb293acd9c0814d079e0"],"3241e06e642196396b80bb293acd9c0814d079e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"]},"commit2Childs":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"aba371508186796cc6151d8223a5b4e16d02e26e":["d6f074e73200c07d54f242d3880a8da5a35ff97b"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["c7869f64c874ebf7f317d22c00baf2b6857797a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","5a1a22b1ad88b436661458df567f3fdb446392a4","3241e06e642196396b80bb293acd9c0814d079e0"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"1548959d8ee1230b6fe5bc9da6115d9fc4019bc9":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","1548959d8ee1230b6fe5bc9da6115d9fc4019bc9"],"3241e06e642196396b80bb293acd9c0814d079e0":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}