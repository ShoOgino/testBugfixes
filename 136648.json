{"path":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","commits":[{"id":"e0b950aef8cdf4606d480e28ea17bd870b93c81e","date":1060680143,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","pathOld":"/dev/null","sourceNew":"  final synchronized void doDelete(int docNum) throws IOException {\n    if (deletedDocs == null)\n      deletedDocs = new BitVector(maxDoc());\n    deletedDocsDirty = true;\n    deletedDocs.set(docNum);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7fb6d70db034a5456ae560175dd1b821eea9ff4","date":1066759157,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","sourceNew":"  protected final synchronized void doDelete(int docNum) throws IOException {\n    if (deletedDocs == null)\n      deletedDocs = new BitVector(maxDoc());\n    deletedDocsDirty = true;\n    deletedDocs.set(docNum);\n  }\n\n","sourceOld":"  final synchronized void doDelete(int docNum) throws IOException {\n    if (deletedDocs == null)\n      deletedDocs = new BitVector(maxDoc());\n    deletedDocsDirty = true;\n    deletedDocs.set(docNum);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f653aecb322b74d99e6ecdb93765e453a3d7aa71","date":1082107025,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","sourceNew":"  protected final void doDelete(int docNum) throws IOException {\n    if (deletedDocs == null)\n      deletedDocs = new BitVector(maxDoc());\n    deletedDocsDirty = true;\n    undeleteAll = false;\n    deletedDocs.set(docNum);\n  }\n\n","sourceOld":"  protected final synchronized void doDelete(int docNum) throws IOException {\n    if (deletedDocs == null)\n      deletedDocs = new BitVector(maxDoc());\n    deletedDocsDirty = true;\n    deletedDocs.set(docNum);\n  }\n\n","bugFix":null,"bugIntro":["15633975e2cb95a0c6eee9a600583708438ebd76"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3e444951e98c00cc6f00fdbc2e00286be07067f8","date":1091825429,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","sourceNew":"  protected final void doDelete(int docNum) {\n    if (deletedDocs == null)\n      deletedDocs = new BitVector(maxDoc());\n    deletedDocsDirty = true;\n    undeleteAll = false;\n    deletedDocs.set(docNum);\n  }\n\n","sourceOld":"  protected final void doDelete(int docNum) throws IOException {\n    if (deletedDocs == null)\n      deletedDocs = new BitVector(maxDoc());\n    deletedDocsDirty = true;\n    undeleteAll = false;\n    deletedDocs.set(docNum);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6e5d88b55f1b57feab6da94a5c635a224539bd2a","date":1095877947,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","sourceNew":"  protected void doDelete(int docNum) {\n    if (deletedDocs == null)\n      deletedDocs = new BitVector(maxDoc());\n    deletedDocsDirty = true;\n    undeleteAll = false;\n    deletedDocs.set(docNum);\n  }\n\n","sourceOld":"  protected final void doDelete(int docNum) {\n    if (deletedDocs == null)\n      deletedDocs = new BitVector(maxDoc());\n    deletedDocsDirty = true;\n    undeleteAll = false;\n    deletedDocs.set(docNum);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"34e2c71b6406443562df54db233fde0728502f64","date":1209294850,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","sourceNew":"  protected void doDelete(int docNum) {\n    if (deletedDocs == null)\n      deletedDocs = new BitVector(maxDoc());\n    deletedDocsDirty = true;\n    undeleteAll = false;\n    if (!deletedDocs.getAndSet(docNum))\n      pendingDeleteCount++;\n  }\n\n","sourceOld":"  protected void doDelete(int docNum) {\n    if (deletedDocs == null)\n      deletedDocs = new BitVector(maxDoc());\n    deletedDocsDirty = true;\n    undeleteAll = false;\n    deletedDocs.set(docNum);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6db660b56f04fdb2853d25cdee8ee0d36559a521","date":1233313968,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","sourceNew":"  protected void doDelete(int docNum) {\n    if (deletedDocs == null) {\n      deletedDocs = new BitVector(maxDoc());\n      deletedDocsRef = new Ref();\n    }\n    // there is more than 1 SegmentReader with a reference to this\n    // deletedDocs BitVector so decRef the current deletedDocsRef,\n    // clone the BitVector, create a new deletedDocsRef\n    if (deletedDocsRef.refCount() > 1) {\n      synchronized (deletedDocsRef) {\n        Ref oldRef = deletedDocsRef;\n        deletedDocs = cloneDeletedDocs(deletedDocs);\n        deletedDocsRef = new Ref();\n        oldRef.decRef();\n      }\n    }\n    deletedDocsDirty = true;\n    undeleteAll = false;\n    if (!deletedDocs.getAndSet(docNum))\n      pendingDeleteCount++;\n  }\n\n","sourceOld":"  protected void doDelete(int docNum) {\n    if (deletedDocs == null)\n      deletedDocs = new BitVector(maxDoc());\n    deletedDocsDirty = true;\n    undeleteAll = false;\n    if (!deletedDocs.getAndSet(docNum))\n      pendingDeleteCount++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cf5d15fa6a63d9c38ac496f7c37fe5e5723162ab","date":1235909556,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","sourceNew":"  protected void doDelete(int docNum) {\n    if (deletedDocs == null) {\n      deletedDocs = new BitVector(maxDoc());\n      deletedDocsRef = new Ref();\n    }\n    // there is more than 1 SegmentReader with a reference to this\n    // deletedDocs BitVector so decRef the current deletedDocsRef,\n    // clone the BitVector, create a new deletedDocsRef\n    if (deletedDocsRef.refCount() > 1) {\n      Ref oldRef = deletedDocsRef;\n      deletedDocs = cloneDeletedDocs(deletedDocs);\n      deletedDocsRef = new Ref();\n      oldRef.decRef();\n    }\n    deletedDocsDirty = true;\n    undeleteAll = false;\n    if (!deletedDocs.getAndSet(docNum))\n      pendingDeleteCount++;\n  }\n\n","sourceOld":"  protected void doDelete(int docNum) {\n    if (deletedDocs == null) {\n      deletedDocs = new BitVector(maxDoc());\n      deletedDocsRef = new Ref();\n    }\n    // there is more than 1 SegmentReader with a reference to this\n    // deletedDocs BitVector so decRef the current deletedDocsRef,\n    // clone the BitVector, create a new deletedDocsRef\n    if (deletedDocsRef.refCount() > 1) {\n      synchronized (deletedDocsRef) {\n        Ref oldRef = deletedDocsRef;\n        deletedDocs = cloneDeletedDocs(deletedDocs);\n        deletedDocsRef = new Ref();\n        oldRef.decRef();\n      }\n    }\n    deletedDocsDirty = true;\n    undeleteAll = false;\n    if (!deletedDocs.getAndSet(docNum))\n      pendingDeleteCount++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"15633975e2cb95a0c6eee9a600583708438ebd76","date":1243022273,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","sourceNew":"  protected void doDelete(int docNum) {\n    if (deletedDocs == null) {\n      deletedDocs = new BitVector(maxDoc());\n      deletedDocsRef = new Ref();\n    }\n    // there is more than 1 SegmentReader with a reference to this\n    // deletedDocs BitVector so decRef the current deletedDocsRef,\n    // clone the BitVector, create a new deletedDocsRef\n    if (deletedDocsRef.refCount() > 1) {\n      Ref oldRef = deletedDocsRef;\n      deletedDocs = cloneDeletedDocs(deletedDocs);\n      deletedDocsRef = new Ref();\n      oldRef.decRef();\n    }\n    deletedDocsDirty = true;\n    if (!deletedDocs.getAndSet(docNum))\n      pendingDeleteCount++;\n  }\n\n","sourceOld":"  protected void doDelete(int docNum) {\n    if (deletedDocs == null) {\n      deletedDocs = new BitVector(maxDoc());\n      deletedDocsRef = new Ref();\n    }\n    // there is more than 1 SegmentReader with a reference to this\n    // deletedDocs BitVector so decRef the current deletedDocsRef,\n    // clone the BitVector, create a new deletedDocsRef\n    if (deletedDocsRef.refCount() > 1) {\n      Ref oldRef = deletedDocsRef;\n      deletedDocs = cloneDeletedDocs(deletedDocs);\n      deletedDocsRef = new Ref();\n      oldRef.decRef();\n    }\n    deletedDocsDirty = true;\n    undeleteAll = false;\n    if (!deletedDocs.getAndSet(docNum))\n      pendingDeleteCount++;\n  }\n\n","bugFix":["f653aecb322b74d99e6ecdb93765e453a3d7aa71"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","sourceNew":"  @Override\n  protected void doDelete(int docNum) {\n    if (deletedDocs == null) {\n      deletedDocs = new BitVector(maxDoc());\n      deletedDocsRef = new Ref();\n    }\n    // there is more than 1 SegmentReader with a reference to this\n    // deletedDocs BitVector so decRef the current deletedDocsRef,\n    // clone the BitVector, create a new deletedDocsRef\n    if (deletedDocsRef.refCount() > 1) {\n      Ref oldRef = deletedDocsRef;\n      deletedDocs = cloneDeletedDocs(deletedDocs);\n      deletedDocsRef = new Ref();\n      oldRef.decRef();\n    }\n    deletedDocsDirty = true;\n    if (!deletedDocs.getAndSet(docNum))\n      pendingDeleteCount++;\n  }\n\n","sourceOld":"  protected void doDelete(int docNum) {\n    if (deletedDocs == null) {\n      deletedDocs = new BitVector(maxDoc());\n      deletedDocsRef = new Ref();\n    }\n    // there is more than 1 SegmentReader with a reference to this\n    // deletedDocs BitVector so decRef the current deletedDocsRef,\n    // clone the BitVector, create a new deletedDocsRef\n    if (deletedDocsRef.refCount() > 1) {\n      Ref oldRef = deletedDocsRef;\n      deletedDocs = cloneDeletedDocs(deletedDocs);\n      deletedDocsRef = new Ref();\n      oldRef.decRef();\n    }\n    deletedDocsDirty = true;\n    if (!deletedDocs.getAndSet(docNum))\n      pendingDeleteCount++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8514024f885b40613b5ec91876ce5e9d2167d89","date":1260313529,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","sourceNew":"  @Override\n  protected void doDelete(int docNum) {\n    if (deletedDocs == null) {\n      deletedDocs = new BitVector(maxDoc());\n      deletedDocsRef = new AtomicInteger(1);\n    }\n    // there is more than 1 SegmentReader with a reference to this\n    // deletedDocs BitVector so decRef the current deletedDocsRef,\n    // clone the BitVector, create a new deletedDocsRef\n    if (deletedDocsRef.get() > 1) {\n      AtomicInteger oldRef = deletedDocsRef;\n      deletedDocs = cloneDeletedDocs(deletedDocs);\n      deletedDocsRef = new AtomicInteger(1);\n      oldRef.decrementAndGet();\n    }\n    deletedDocsDirty = true;\n    if (!deletedDocs.getAndSet(docNum))\n      pendingDeleteCount++;\n  }\n\n","sourceOld":"  @Override\n  protected void doDelete(int docNum) {\n    if (deletedDocs == null) {\n      deletedDocs = new BitVector(maxDoc());\n      deletedDocsRef = new Ref();\n    }\n    // there is more than 1 SegmentReader with a reference to this\n    // deletedDocs BitVector so decRef the current deletedDocsRef,\n    // clone the BitVector, create a new deletedDocsRef\n    if (deletedDocsRef.refCount() > 1) {\n      Ref oldRef = deletedDocsRef;\n      deletedDocs = cloneDeletedDocs(deletedDocs);\n      deletedDocsRef = new Ref();\n      oldRef.decRef();\n    }\n    deletedDocsDirty = true;\n    if (!deletedDocs.getAndSet(docNum))\n      pendingDeleteCount++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#doDelete(int).mjava","sourceNew":"  @Override\n  protected void doDelete(int docNum) {\n    if (deletedDocs == null) {\n      deletedDocs = new BitVector(maxDoc());\n      deletedDocsRef = new AtomicInteger(1);\n    }\n    // there is more than 1 SegmentReader with a reference to this\n    // deletedDocs BitVector so decRef the current deletedDocsRef,\n    // clone the BitVector, create a new deletedDocsRef\n    if (deletedDocsRef.get() > 1) {\n      AtomicInteger oldRef = deletedDocsRef;\n      deletedDocs = cloneDeletedDocs(deletedDocs);\n      deletedDocsRef = new AtomicInteger(1);\n      oldRef.decrementAndGet();\n    }\n    deletedDocsDirty = true;\n    if (!deletedDocs.getAndSet(docNum))\n      pendingDeleteCount++;\n  }\n\n","sourceOld":"  @Override\n  protected void doDelete(int docNum) {\n    if (deletedDocs == null) {\n      deletedDocs = new BitVector(maxDoc());\n      deletedDocsRef = new AtomicInteger(1);\n    }\n    // there is more than 1 SegmentReader with a reference to this\n    // deletedDocs BitVector so decRef the current deletedDocsRef,\n    // clone the BitVector, create a new deletedDocsRef\n    if (deletedDocsRef.get() > 1) {\n      AtomicInteger oldRef = deletedDocsRef;\n      deletedDocs = cloneDeletedDocs(deletedDocs);\n      deletedDocsRef = new AtomicInteger(1);\n      oldRef.decrementAndGet();\n    }\n    deletedDocsDirty = true;\n    if (!deletedDocs.getAndSet(docNum))\n      pendingDeleteCount++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"34e2c71b6406443562df54db233fde0728502f64":["6e5d88b55f1b57feab6da94a5c635a224539bd2a"],"e7fb6d70db034a5456ae560175dd1b821eea9ff4":["e0b950aef8cdf4606d480e28ea17bd870b93c81e"],"8a9e385641d717e641408d8fbbc62be8fc766357":["15633975e2cb95a0c6eee9a600583708438ebd76"],"3e444951e98c00cc6f00fdbc2e00286be07067f8":["f653aecb322b74d99e6ecdb93765e453a3d7aa71"],"cf5d15fa6a63d9c38ac496f7c37fe5e5723162ab":["6db660b56f04fdb2853d25cdee8ee0d36559a521"],"f653aecb322b74d99e6ecdb93765e453a3d7aa71":["e7fb6d70db034a5456ae560175dd1b821eea9ff4"],"6db660b56f04fdb2853d25cdee8ee0d36559a521":["34e2c71b6406443562df54db233fde0728502f64"],"e0b950aef8cdf4606d480e28ea17bd870b93c81e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"15633975e2cb95a0c6eee9a600583708438ebd76":["cf5d15fa6a63d9c38ac496f7c37fe5e5723162ab"],"6e5d88b55f1b57feab6da94a5c635a224539bd2a":["3e444951e98c00cc6f00fdbc2e00286be07067f8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d8514024f885b40613b5ec91876ce5e9d2167d89":["8a9e385641d717e641408d8fbbc62be8fc766357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d8514024f885b40613b5ec91876ce5e9d2167d89"]},"commit2Childs":{"34e2c71b6406443562df54db233fde0728502f64":["6db660b56f04fdb2853d25cdee8ee0d36559a521"],"e7fb6d70db034a5456ae560175dd1b821eea9ff4":["f653aecb322b74d99e6ecdb93765e453a3d7aa71"],"8a9e385641d717e641408d8fbbc62be8fc766357":["d8514024f885b40613b5ec91876ce5e9d2167d89"],"3e444951e98c00cc6f00fdbc2e00286be07067f8":["6e5d88b55f1b57feab6da94a5c635a224539bd2a"],"cf5d15fa6a63d9c38ac496f7c37fe5e5723162ab":["15633975e2cb95a0c6eee9a600583708438ebd76"],"f653aecb322b74d99e6ecdb93765e453a3d7aa71":["3e444951e98c00cc6f00fdbc2e00286be07067f8"],"e0b950aef8cdf4606d480e28ea17bd870b93c81e":["e7fb6d70db034a5456ae560175dd1b821eea9ff4"],"6db660b56f04fdb2853d25cdee8ee0d36559a521":["cf5d15fa6a63d9c38ac496f7c37fe5e5723162ab"],"15633975e2cb95a0c6eee9a600583708438ebd76":["8a9e385641d717e641408d8fbbc62be8fc766357"],"6e5d88b55f1b57feab6da94a5c635a224539bd2a":["34e2c71b6406443562df54db233fde0728502f64"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e0b950aef8cdf4606d480e28ea17bd870b93c81e"],"d8514024f885b40613b5ec91876ce5e9d2167d89":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}