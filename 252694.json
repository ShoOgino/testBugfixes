{"path":"lucene/analysis/phonetic/src/java/org/apache/lucene/analysis/phonetic/DoubleMetaphoneFilter#DoubleMetaphoneFilter(TokenStream,int,boolean).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/phonetic/src/java/org/apache/lucene/analysis/phonetic/DoubleMetaphoneFilter#DoubleMetaphoneFilter(TokenStream,int,boolean).mjava","pathOld":"modules/analysis/phonetic/src/java/org/apache/lucene/analysis/phonetic/DoubleMetaphoneFilter#DoubleMetaphoneFilter(TokenStream,int,boolean).mjava","sourceNew":"  public DoubleMetaphoneFilter(TokenStream input, int maxCodeLength, boolean inject) {\n    super(input);\n    this.encoder.setMaxCodeLen(maxCodeLength);\n    this.inject = inject;\n  }\n\n","sourceOld":"  public DoubleMetaphoneFilter(TokenStream input, int maxCodeLength, boolean inject) {\n    super(input);\n    this.encoder.setMaxCodeLen(maxCodeLength);\n    this.inject = inject;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"25673b1e76760166d5a67d7ea5b9ad180c8ca023","date":1348150030,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/phonetic/src/java/org/apache/lucene/analysis/phonetic/DoubleMetaphoneFilter#DoubleMetaphoneFilter(TokenStream,int,boolean).mjava","pathOld":"lucene/analysis/phonetic/src/java/org/apache/lucene/analysis/phonetic/DoubleMetaphoneFilter#DoubleMetaphoneFilter(TokenStream,int,boolean).mjava","sourceNew":"  /** Creates a DoubleMetaphoneFilter with the specified maximum code length, \n   *  and either adding encoded forms as synonyms (<code>inject=true</code>) or\n   *  replacing them.\n   */\n  public DoubleMetaphoneFilter(TokenStream input, int maxCodeLength, boolean inject) {\n    super(input);\n    this.encoder.setMaxCodeLen(maxCodeLength);\n    this.inject = inject;\n  }\n\n","sourceOld":"  public DoubleMetaphoneFilter(TokenStream input, int maxCodeLength, boolean inject) {\n    super(input);\n    this.encoder.setMaxCodeLen(maxCodeLength);\n    this.inject = inject;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["25673b1e76760166d5a67d7ea5b9ad180c8ca023"],"25673b1e76760166d5a67d7ea5b9ad180c8ca023":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["25673b1e76760166d5a67d7ea5b9ad180c8ca023"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"25673b1e76760166d5a67d7ea5b9ad180c8ca023":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}