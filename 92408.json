{"path":"solr/core/src/java/org/apache/solr/cloud/ZkController.RegisterCoreAsync#call().mjava","commits":[{"id":"d92f2aa7a6efa1c4b8f9984131aa94d9729ff92a","date":1431710266,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController.RegisterCoreAsync#call().mjava","pathOld":"/dev/null","sourceNew":"    public Object call() throws Exception {\n      log.info(\"Registering core {} afterExpiration? {}\", descriptor.getName(), afterExpiration);\n      register(descriptor.getName(), descriptor, recoverReloadedCores, afterExpiration);\n      return descriptor;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d528fd7ae22865015b756e0a03832e2051de2a9c","date":1476721105,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController.RegisterCoreAsync#call().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController.RegisterCoreAsync#call().mjava","sourceNew":"    public Object call() throws Exception {\n      log.info(\"Registering core {} afterExpiration? {}\", descriptor.getName(), afterExpiration);\n      register(descriptor.getName(), descriptor, recoverReloadedCores, afterExpiration, false);\n      return descriptor;\n    }\n\n","sourceOld":"    public Object call() throws Exception {\n      log.info(\"Registering core {} afterExpiration? {}\", descriptor.getName(), afterExpiration);\n      register(descriptor.getName(), descriptor, recoverReloadedCores, afterExpiration);\n      return descriptor;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController.RegisterCoreAsync#call().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController.RegisterCoreAsync#call().mjava","sourceNew":"    public Object call() throws Exception {\n      log.info(\"Registering core {} afterExpiration? {}\", descriptor.getName(), afterExpiration);\n      register(descriptor.getName(), descriptor, recoverReloadedCores, afterExpiration, false);\n      return descriptor;\n    }\n\n","sourceOld":"    public Object call() throws Exception {\n      log.info(\"Registering core {} afterExpiration? {}\", descriptor.getName(), afterExpiration);\n      register(descriptor.getName(), descriptor, recoverReloadedCores, afterExpiration);\n      return descriptor;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad4957cde742defe6db19689abdc267c5d948066","date":1587990850,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController.RegisterCoreAsync#call().mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController.RegisterCoreAsync#call().mjava","sourceNew":"    public Object call() throws Exception {\n      if (log.isInfoEnabled()) {\n        log.info(\"Registering core {} afterExpiration? {}\", descriptor.getName(), afterExpiration);\n      }\n      register(descriptor.getName(), descriptor, recoverReloadedCores, afterExpiration, false);\n      return descriptor;\n    }\n\n","sourceOld":"    public Object call() throws Exception {\n      log.info(\"Registering core {} afterExpiration? {}\", descriptor.getName(), afterExpiration);\n      register(descriptor.getName(), descriptor, recoverReloadedCores, afterExpiration, false);\n      return descriptor;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d92f2aa7a6efa1c4b8f9984131aa94d9729ff92a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad4957cde742defe6db19689abdc267c5d948066":["d528fd7ae22865015b756e0a03832e2051de2a9c"],"d528fd7ae22865015b756e0a03832e2051de2a9c":["d92f2aa7a6efa1c4b8f9984131aa94d9729ff92a"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["d92f2aa7a6efa1c4b8f9984131aa94d9729ff92a","d528fd7ae22865015b756e0a03832e2051de2a9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ad4957cde742defe6db19689abdc267c5d948066"]},"commit2Childs":{"d92f2aa7a6efa1c4b8f9984131aa94d9729ff92a":["d528fd7ae22865015b756e0a03832e2051de2a9c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d92f2aa7a6efa1c4b8f9984131aa94d9729ff92a"],"ad4957cde742defe6db19689abdc267c5d948066":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d528fd7ae22865015b756e0a03832e2051de2a9c":["ad4957cde742defe6db19689abdc267c5d948066","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}