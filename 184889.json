{"path":"solr/core/src/test/org/apache/solr/security/BasicAuthIntegrationTest#getAuthPlugins(String).mjava","commits":[{"id":"173104badc305e417297852d42351ba4694a2ad5","date":1565129306,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/BasicAuthIntegrationTest#getAuthPlugins(String).mjava","pathOld":"/dev/null","sourceNew":"  /** @see #executeCommand */\n  private static Map<String,Object> getAuthPlugins(String url) {\n    Map<String,Object> plugins = new HashMap<>();\n    if (url.endsWith(\"authentication\")) {\n      for (JettySolrRunner r : cluster.getJettySolrRunners()) {\n        plugins.put(r.getNodeName(), r.getCoreContainer().getAuthenticationPlugin());\n      }\n    } else if (url.endsWith(\"authorization\")) {\n      for (JettySolrRunner r : cluster.getJettySolrRunners()) {\n        plugins.put(r.getNodeName(), r.getCoreContainer().getAuthorizationPlugin());\n      }\n    } else {\n      fail(\"Test helper method assumptions broken: \" + url);\n    }\n    return plugins;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1747a7f5fca08ea77329319431be445d363ba102","date":1565643834,"type":5,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudAuthTestCase#getAuthPluginsInUseForCluster(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/security/BasicAuthIntegrationTest#getAuthPlugins(String).mjava","sourceNew":"  /**\n   * This helper method can be used by tests to monitor the current state of either \n   * <code>\"authentication\"</code> or <code>\"authorization\"</code> plugins in use each\n   * node of the current cluster.\n   * <p>\n   * This can be useful in a {@line TimeOut#waitFor} loop to monitor a cluster and \"wait for\"\n   * A change in security settings to affect all nodes by comparing the objects in the current \n   * Map with the one in use prior to executing some test command. (providing a work around \n   * for the security user experienence limitations identified in\n   * <a href=\"https://issues.apache.org/jira/browse/SOLR-13464\">SOLR-13464</a> )\n   * </p>\n   * \n   * @param url A REST url (or any arbitrary String) ending in \n   *    <code>\"authentication\"</code> or <code>\"authorization\"</code> used to specify the type of\n   *    plugins to introspect\n   * @return A Map from <code>nodeName</code> to auth plugin\n   */\n  public static Map<String,Object> getAuthPluginsInUseForCluster(String url) {\n    Map<String,Object> plugins = new HashMap<>();\n    if (url.endsWith(\"authentication\")) {\n      for (JettySolrRunner r : cluster.getJettySolrRunners()) {\n        plugins.put(r.getNodeName(), r.getCoreContainer().getAuthenticationPlugin());\n      }\n    } else if (url.endsWith(\"authorization\")) {\n      for (JettySolrRunner r : cluster.getJettySolrRunners()) {\n        plugins.put(r.getNodeName(), r.getCoreContainer().getAuthorizationPlugin());\n      }\n    } else {\n      fail(\"Test helper method assumptions broken: \" + url);\n    }\n    return plugins;\n  }\n\n","sourceOld":"  /** @see #executeCommand */\n  private static Map<String,Object> getAuthPlugins(String url) {\n    Map<String,Object> plugins = new HashMap<>();\n    if (url.endsWith(\"authentication\")) {\n      for (JettySolrRunner r : cluster.getJettySolrRunners()) {\n        plugins.put(r.getNodeName(), r.getCoreContainer().getAuthenticationPlugin());\n      }\n    } else if (url.endsWith(\"authorization\")) {\n      for (JettySolrRunner r : cluster.getJettySolrRunners()) {\n        plugins.put(r.getNodeName(), r.getCoreContainer().getAuthorizationPlugin());\n      }\n    } else {\n      fail(\"Test helper method assumptions broken: \" + url);\n    }\n    return plugins;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1747a7f5fca08ea77329319431be445d363ba102":["173104badc305e417297852d42351ba4694a2ad5"],"173104badc305e417297852d42351ba4694a2ad5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1747a7f5fca08ea77329319431be445d363ba102"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["173104badc305e417297852d42351ba4694a2ad5"],"1747a7f5fca08ea77329319431be445d363ba102":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"173104badc305e417297852d42351ba4694a2ad5":["1747a7f5fca08ea77329319431be445d363ba102"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}