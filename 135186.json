{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/ContextSuggestField#wrapTokenStream(TokenStream).mjava","commits":[{"id":"8c33f6677a2078739058f81eca1df69d12cd62b0","date":1432799589,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/ContextSuggestField#wrapTokenStream(TokenStream).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected CompletionTokenStream wrapTokenStream(TokenStream stream) {\n    CompletionTokenStream completionTokenStream;\n    if (stream instanceof CompletionTokenStream) {\n      completionTokenStream = (CompletionTokenStream) stream;\n      completionTokenStream = new CompletionTokenStream(\n          new PrefixTokenFilter(stream, (char) CONTEXT_SEPARATOR, contexts),\n          completionTokenStream.preserveSep,\n          completionTokenStream.preservePositionIncrements,\n          completionTokenStream.maxGraphExpansions);\n    } else {\n      completionTokenStream = new CompletionTokenStream(\n          new PrefixTokenFilter(stream, (char) CONTEXT_SEPARATOR, contexts));\n    }\n    return completionTokenStream;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3e870f9bab17325ebf91f7500d2c05596634741","date":1438287049,"type":3,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/ContextSuggestField#wrapTokenStream(TokenStream).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/ContextSuggestField#wrapTokenStream(TokenStream).mjava","sourceNew":"  @Override\n  protected CompletionTokenStream wrapTokenStream(TokenStream stream) {\n    for (CharSequence context : contexts()) {\n      validate(context);\n    }\n    PrefixTokenFilter prefixTokenFilter = new PrefixTokenFilter(stream, (char) CONTEXT_SEPARATOR, contexts());\n    CompletionTokenStream completionTokenStream;\n    if (stream instanceof CompletionTokenStream) {\n      completionTokenStream = (CompletionTokenStream) stream;\n      completionTokenStream = new CompletionTokenStream(prefixTokenFilter,\n          completionTokenStream.preserveSep,\n          completionTokenStream.preservePositionIncrements,\n          completionTokenStream.maxGraphExpansions);\n    } else {\n      completionTokenStream = new CompletionTokenStream(prefixTokenFilter);\n    }\n    return completionTokenStream;\n  }\n\n","sourceOld":"  @Override\n  protected CompletionTokenStream wrapTokenStream(TokenStream stream) {\n    CompletionTokenStream completionTokenStream;\n    if (stream instanceof CompletionTokenStream) {\n      completionTokenStream = (CompletionTokenStream) stream;\n      completionTokenStream = new CompletionTokenStream(\n          new PrefixTokenFilter(stream, (char) CONTEXT_SEPARATOR, contexts),\n          completionTokenStream.preserveSep,\n          completionTokenStream.preservePositionIncrements,\n          completionTokenStream.maxGraphExpansions);\n    } else {\n      completionTokenStream = new CompletionTokenStream(\n          new PrefixTokenFilter(stream, (char) CONTEXT_SEPARATOR, contexts));\n    }\n    return completionTokenStream;\n  }\n\n","bugFix":null,"bugIntro":["509ddf2b18aec24f54a1cbabf7d15ed537d61ff2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"509ddf2b18aec24f54a1cbabf7d15ed537d61ff2","date":1446074047,"type":3,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/ContextSuggestField#wrapTokenStream(TokenStream).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/ContextSuggestField#wrapTokenStream(TokenStream).mjava","sourceNew":"  @Override\n  protected CompletionTokenStream wrapTokenStream(TokenStream stream) {\n    final Iterable<CharSequence> contexts = contexts();\n    for (CharSequence context : contexts) {\n      validate(context);\n    }\n    CompletionTokenStream completionTokenStream;\n    if (stream instanceof CompletionTokenStream) {\n      completionTokenStream = (CompletionTokenStream) stream;\n      PrefixTokenFilter prefixTokenFilter = new PrefixTokenFilter(completionTokenStream.inputTokenStream, (char) CONTEXT_SEPARATOR, contexts);\n      completionTokenStream = new CompletionTokenStream(prefixTokenFilter,\n          completionTokenStream.preserveSep,\n          completionTokenStream.preservePositionIncrements,\n          completionTokenStream.maxGraphExpansions);\n    } else {\n      completionTokenStream = new CompletionTokenStream(new PrefixTokenFilter(stream, (char) CONTEXT_SEPARATOR, contexts));\n    }\n    return completionTokenStream;\n  }\n\n","sourceOld":"  @Override\n  protected CompletionTokenStream wrapTokenStream(TokenStream stream) {\n    for (CharSequence context : contexts()) {\n      validate(context);\n    }\n    PrefixTokenFilter prefixTokenFilter = new PrefixTokenFilter(stream, (char) CONTEXT_SEPARATOR, contexts());\n    CompletionTokenStream completionTokenStream;\n    if (stream instanceof CompletionTokenStream) {\n      completionTokenStream = (CompletionTokenStream) stream;\n      completionTokenStream = new CompletionTokenStream(prefixTokenFilter,\n          completionTokenStream.preserveSep,\n          completionTokenStream.preservePositionIncrements,\n          completionTokenStream.maxGraphExpansions);\n    } else {\n      completionTokenStream = new CompletionTokenStream(prefixTokenFilter);\n    }\n    return completionTokenStream;\n  }\n\n","bugFix":["d3e870f9bab17325ebf91f7500d2c05596634741"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a","date":1528168051,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/ContextSuggestField#wrapTokenStream(TokenStream).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/ContextSuggestField#wrapTokenStream(TokenStream).mjava","sourceNew":"  @Override\n  protected CompletionTokenStream wrapTokenStream(TokenStream stream) {\n    final Iterable<CharSequence> contexts = contexts();\n    for (CharSequence context : contexts) {\n      validate(context);\n    }\n    CompletionTokenStream completionTokenStream;\n    if (stream instanceof CompletionTokenStream) {\n      //TODO this is awkward; is there a better way avoiding re-creating the chain?\n      completionTokenStream = (CompletionTokenStream) stream;\n      PrefixTokenFilter prefixTokenFilter = new PrefixTokenFilter(completionTokenStream.inputTokenStream, (char) CONTEXT_SEPARATOR, contexts);\n      completionTokenStream = new CompletionTokenStream(prefixTokenFilter,\n          completionTokenStream.preserveSep,\n          completionTokenStream.preservePositionIncrements,\n          completionTokenStream.maxGraphExpansions);\n    } else {\n      completionTokenStream = new CompletionTokenStream(new PrefixTokenFilter(stream, (char) CONTEXT_SEPARATOR, contexts));\n    }\n    return completionTokenStream;\n  }\n\n","sourceOld":"  @Override\n  protected CompletionTokenStream wrapTokenStream(TokenStream stream) {\n    final Iterable<CharSequence> contexts = contexts();\n    for (CharSequence context : contexts) {\n      validate(context);\n    }\n    CompletionTokenStream completionTokenStream;\n    if (stream instanceof CompletionTokenStream) {\n      completionTokenStream = (CompletionTokenStream) stream;\n      PrefixTokenFilter prefixTokenFilter = new PrefixTokenFilter(completionTokenStream.inputTokenStream, (char) CONTEXT_SEPARATOR, contexts);\n      completionTokenStream = new CompletionTokenStream(prefixTokenFilter,\n          completionTokenStream.preserveSep,\n          completionTokenStream.preservePositionIncrements,\n          completionTokenStream.maxGraphExpansions);\n    } else {\n      completionTokenStream = new CompletionTokenStream(new PrefixTokenFilter(stream, (char) CONTEXT_SEPARATOR, contexts));\n    }\n    return completionTokenStream;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/ContextSuggestField#wrapTokenStream(TokenStream).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/ContextSuggestField#wrapTokenStream(TokenStream).mjava","sourceNew":"  @Override\n  protected CompletionTokenStream wrapTokenStream(TokenStream stream) {\n    final Iterable<CharSequence> contexts = contexts();\n    for (CharSequence context : contexts) {\n      validate(context);\n    }\n    CompletionTokenStream completionTokenStream;\n    if (stream instanceof CompletionTokenStream) {\n      //TODO this is awkward; is there a better way avoiding re-creating the chain?\n      completionTokenStream = (CompletionTokenStream) stream;\n      PrefixTokenFilter prefixTokenFilter = new PrefixTokenFilter(completionTokenStream.inputTokenStream, (char) CONTEXT_SEPARATOR, contexts);\n      completionTokenStream = new CompletionTokenStream(prefixTokenFilter,\n          completionTokenStream.preserveSep,\n          completionTokenStream.preservePositionIncrements,\n          completionTokenStream.maxGraphExpansions);\n    } else {\n      completionTokenStream = new CompletionTokenStream(new PrefixTokenFilter(stream, (char) CONTEXT_SEPARATOR, contexts));\n    }\n    return completionTokenStream;\n  }\n\n","sourceOld":"  @Override\n  protected CompletionTokenStream wrapTokenStream(TokenStream stream) {\n    final Iterable<CharSequence> contexts = contexts();\n    for (CharSequence context : contexts) {\n      validate(context);\n    }\n    CompletionTokenStream completionTokenStream;\n    if (stream instanceof CompletionTokenStream) {\n      completionTokenStream = (CompletionTokenStream) stream;\n      PrefixTokenFilter prefixTokenFilter = new PrefixTokenFilter(completionTokenStream.inputTokenStream, (char) CONTEXT_SEPARATOR, contexts);\n      completionTokenStream = new CompletionTokenStream(prefixTokenFilter,\n          completionTokenStream.preserveSep,\n          completionTokenStream.preservePositionIncrements,\n          completionTokenStream.maxGraphExpansions);\n    } else {\n      completionTokenStream = new CompletionTokenStream(new PrefixTokenFilter(stream, (char) CONTEXT_SEPARATOR, contexts));\n    }\n    return completionTokenStream;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/ContextSuggestField#wrapTokenStream(TokenStream).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/document/ContextSuggestField#wrapTokenStream(TokenStream).mjava","sourceNew":"  @Override\n  protected CompletionTokenStream wrapTokenStream(TokenStream stream) {\n    final Iterable<CharSequence> contexts = contexts();\n    for (CharSequence context : contexts) {\n      validate(context);\n    }\n    CompletionTokenStream completionTokenStream;\n    if (stream instanceof CompletionTokenStream) {\n      //TODO this is awkward; is there a better way avoiding re-creating the chain?\n      completionTokenStream = (CompletionTokenStream) stream;\n      PrefixTokenFilter prefixTokenFilter = new PrefixTokenFilter(completionTokenStream.inputTokenStream, (char) CONTEXT_SEPARATOR, contexts);\n      completionTokenStream = new CompletionTokenStream(prefixTokenFilter,\n          completionTokenStream.preserveSep,\n          completionTokenStream.preservePositionIncrements,\n          completionTokenStream.maxGraphExpansions);\n    } else {\n      completionTokenStream = new CompletionTokenStream(new PrefixTokenFilter(stream, (char) CONTEXT_SEPARATOR, contexts));\n    }\n    return completionTokenStream;\n  }\n\n","sourceOld":"  @Override\n  protected CompletionTokenStream wrapTokenStream(TokenStream stream) {\n    final Iterable<CharSequence> contexts = contexts();\n    for (CharSequence context : contexts) {\n      validate(context);\n    }\n    CompletionTokenStream completionTokenStream;\n    if (stream instanceof CompletionTokenStream) {\n      completionTokenStream = (CompletionTokenStream) stream;\n      PrefixTokenFilter prefixTokenFilter = new PrefixTokenFilter(completionTokenStream.inputTokenStream, (char) CONTEXT_SEPARATOR, contexts);\n      completionTokenStream = new CompletionTokenStream(prefixTokenFilter,\n          completionTokenStream.preserveSep,\n          completionTokenStream.preservePositionIncrements,\n          completionTokenStream.maxGraphExpansions);\n    } else {\n      completionTokenStream = new CompletionTokenStream(new PrefixTokenFilter(stream, (char) CONTEXT_SEPARATOR, contexts));\n    }\n    return completionTokenStream;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"509ddf2b18aec24f54a1cbabf7d15ed537d61ff2":["d3e870f9bab17325ebf91f7500d2c05596634741"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["509ddf2b18aec24f54a1cbabf7d15ed537d61ff2","9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a"],"d3e870f9bab17325ebf91f7500d2c05596634741":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a":["509ddf2b18aec24f54a1cbabf7d15ed537d61ff2"],"f592209545c71895260367152601e9200399776d":["509ddf2b18aec24f54a1cbabf7d15ed537d61ff2","9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a"]},"commit2Childs":{"509ddf2b18aec24f54a1cbabf7d15ed537d61ff2":["b70042a8a492f7054d480ccdd2be9796510d4327","9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a","f592209545c71895260367152601e9200399776d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"d3e870f9bab17325ebf91f7500d2c05596634741":["509ddf2b18aec24f54a1cbabf7d15ed537d61ff2"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["d3e870f9bab17325ebf91f7500d2c05596634741"],"9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f592209545c71895260367152601e9200399776d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}