{"path":"contrib/queries/src/test/org/apache/lucene/search/BoostingQueryTest#testBoostingQueryEquals().mjava","commits":[{"id":"d490856946856278b0595bde153c98cc2d6b6f1a","date":1239330064,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/queries/src/test/org/apache/lucene/search/BoostingQueryTest#testBoostingQueryEquals().mjava","pathOld":"/dev/null","sourceNew":"  public void testBoostingQueryEquals() {\n    TermQuery q1 = new TermQuery(new Term(\"subject:\", \"java\"));\n    TermQuery q2 = new TermQuery(new Term(\"subject:\", \"java\"));\n    assertEquals(\"Two TermQueries with same attributes should be equal\", q1, q2);\n    BoostingQuery bq1 = new BoostingQuery(q1, q2, 0.1f);\n    BoostingQuery bq2 = new BoostingQuery(q1, q2, 0.1f);\n    assertEquals(\"BoostingQuery with same attributes is not equal\", bq1, bq2);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BoostingQueryTest#testBoostingQueryEquals().mjava","pathOld":"contrib/queries/src/test/org/apache/lucene/search/BoostingQueryTest#testBoostingQueryEquals().mjava","sourceNew":"  public void testBoostingQueryEquals() {\n    TermQuery q1 = new TermQuery(new Term(\"subject:\", \"java\"));\n    TermQuery q2 = new TermQuery(new Term(\"subject:\", \"java\"));\n    assertEquals(\"Two TermQueries with same attributes should be equal\", q1, q2);\n    BoostingQuery bq1 = new BoostingQuery(q1, q2, 0.1f);\n    BoostingQuery bq2 = new BoostingQuery(q1, q2, 0.1f);\n    assertEquals(\"BoostingQuery with same attributes is not equal\", bq1, bq2);\n  }\n\n","sourceOld":"  public void testBoostingQueryEquals() {\n    TermQuery q1 = new TermQuery(new Term(\"subject:\", \"java\"));\n    TermQuery q2 = new TermQuery(new Term(\"subject:\", \"java\"));\n    assertEquals(\"Two TermQueries with same attributes should be equal\", q1, q2);\n    BoostingQuery bq1 = new BoostingQuery(q1, q2, 0.1f);\n    BoostingQuery bq2 = new BoostingQuery(q1, q2, 0.1f);\n    assertEquals(\"BoostingQuery with same attributes is not equal\", bq1, bq2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d490856946856278b0595bde153c98cc2d6b6f1a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d490856946856278b0595bde153c98cc2d6b6f1a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d490856946856278b0595bde153c98cc2d6b6f1a"],"d490856946856278b0595bde153c98cc2d6b6f1a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}