{"path":"src/java/org/apache/solr/schema/FieldType.DefaultAnalyzer#getStream(String,Reader).mjava","commits":[{"id":"be29e0e2cef1fd569147732e48caf8538790339b","date":1250443738,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/FieldType.DefaultAnalyzer#getStream(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"    public TokenStreamInfo getStream(String fieldName, Reader reader) {\n      Tokenizer ts = new Tokenizer(reader) {\n        final char[] cbuf = new char[maxChars];\n        final TermAttribute termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n        final OffsetAttribute offsetAtt = (OffsetAttribute) addAttribute(OffsetAttribute.class);\n        @Override\n        public boolean incrementToken() throws IOException {\n          clearAttributes();\n          int n = input.read(cbuf,0,maxChars);\n          if (n<=0) return false;\n          String s = toInternal(new String(cbuf,0,n));\n          termAtt.setTermBuffer(s);\n          offsetAtt.setOffset(0,n);\n          return true;\n        }       \n      };\n\n      return new TokenStreamInfo(ts, ts);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28e349236232860728fc91596fa4a1ec2c64bde6","date":1253259442,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/FieldType.DefaultAnalyzer#getStream(String,Reader).mjava","pathOld":"src/java/org/apache/solr/schema/FieldType.DefaultAnalyzer#getStream(String,Reader).mjava","sourceNew":"    public TokenStreamInfo getStream(String fieldName, Reader reader) {\n      Tokenizer ts = new Tokenizer(reader) {\n        final char[] cbuf = new char[maxChars];\n        final TermAttribute termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n        final OffsetAttribute offsetAtt = (OffsetAttribute) addAttribute(OffsetAttribute.class);\n        @Override\n        public boolean incrementToken() throws IOException {\n          clearAttributes();\n          int n = input.read(cbuf,0,maxChars);\n          if (n<=0) return false;\n          String s = toInternal(new String(cbuf,0,n));\n          termAtt.setTermBuffer(s);\n          offsetAtt.setOffset(correctOffset(0),correctOffset(n));\n          return true;\n        }       \n      };\n\n      return new TokenStreamInfo(ts, ts);\n    }\n\n","sourceOld":"    public TokenStreamInfo getStream(String fieldName, Reader reader) {\n      Tokenizer ts = new Tokenizer(reader) {\n        final char[] cbuf = new char[maxChars];\n        final TermAttribute termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n        final OffsetAttribute offsetAtt = (OffsetAttribute) addAttribute(OffsetAttribute.class);\n        @Override\n        public boolean incrementToken() throws IOException {\n          clearAttributes();\n          int n = input.read(cbuf,0,maxChars);\n          if (n<=0) return false;\n          String s = toInternal(new String(cbuf,0,n));\n          termAtt.setTermBuffer(s);\n          offsetAtt.setOffset(0,n);\n          return true;\n        }       \n      };\n\n      return new TokenStreamInfo(ts, ts);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abec2fd822be07fc74ef5ba3609b9c5625a87d6d","date":1261659802,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/FieldType.DefaultAnalyzer#getStream(String,Reader).mjava","pathOld":"src/java/org/apache/solr/schema/FieldType.DefaultAnalyzer#getStream(String,Reader).mjava","sourceNew":"    public TokenStreamInfo getStream(String fieldName, Reader reader) {\n      Tokenizer ts = new Tokenizer(reader) {\n        final char[] cbuf = new char[maxChars];\n        final TermAttribute termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n        final OffsetAttribute offsetAtt = (OffsetAttribute) addAttribute(OffsetAttribute.class);\n        @Override\n        public boolean incrementToken() throws IOException {\n          clearAttributes();\n          int n = input.read(cbuf,0,maxChars);\n          if (n<=0) return false;\n          String s = toInternal(new String(cbuf,0,n));\n          termAtt.setTermBuffer(s);\n          offsetAtt.setOffset(correctOffset(0),correctOffset(n));\n          return true;\n        }\n      };\n\n      return new TokenStreamInfo(ts, ts);\n    }\n\n","sourceOld":"    public TokenStreamInfo getStream(String fieldName, Reader reader) {\n      Tokenizer ts = new Tokenizer(reader) {\n        final char[] cbuf = new char[maxChars];\n        final TermAttribute termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n        final OffsetAttribute offsetAtt = (OffsetAttribute) addAttribute(OffsetAttribute.class);\n        @Override\n        public boolean incrementToken() throws IOException {\n          clearAttributes();\n          int n = input.read(cbuf,0,maxChars);\n          if (n<=0) return false;\n          String s = toInternal(new String(cbuf,0,n));\n          termAtt.setTermBuffer(s);\n          offsetAtt.setOffset(correctOffset(0),correctOffset(n));\n          return true;\n        }       \n      };\n\n      return new TokenStreamInfo(ts, ts);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/FieldType.DefaultAnalyzer#getStream(String,Reader).mjava","pathOld":"src/java/org/apache/solr/schema/FieldType.DefaultAnalyzer#getStream(String,Reader).mjava","sourceNew":"    public TokenStreamInfo getStream(String fieldName, Reader reader) {\n      Tokenizer ts = new Tokenizer(reader) {\n        final char[] cbuf = new char[maxChars];\n        final TermAttribute termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n        final OffsetAttribute offsetAtt = (OffsetAttribute) addAttribute(OffsetAttribute.class);\n        @Override\n        public boolean incrementToken() throws IOException {\n          clearAttributes();\n          int n = input.read(cbuf,0,maxChars);\n          if (n<=0) return false;\n          String s = toInternal(new String(cbuf,0,n));\n          termAtt.setTermBuffer(s);\n          offsetAtt.setOffset(correctOffset(0),correctOffset(n));\n          return true;\n        }\n      };\n\n      return new TokenStreamInfo(ts, ts);\n    }\n\n","sourceOld":"    public TokenStreamInfo getStream(String fieldName, Reader reader) {\n      Tokenizer ts = new Tokenizer(reader) {\n        final char[] cbuf = new char[maxChars];\n        final TermAttribute termAtt = (TermAttribute) addAttribute(TermAttribute.class);\n        final OffsetAttribute offsetAtt = (OffsetAttribute) addAttribute(OffsetAttribute.class);\n        @Override\n        public boolean incrementToken() throws IOException {\n          clearAttributes();\n          int n = input.read(cbuf,0,maxChars);\n          if (n<=0) return false;\n          String s = toInternal(new String(cbuf,0,n));\n          termAtt.setTermBuffer(s);\n          offsetAtt.setOffset(correctOffset(0),correctOffset(n));\n          return true;\n        }\n      };\n\n      return new TokenStreamInfo(ts, ts);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"abec2fd822be07fc74ef5ba3609b9c5625a87d6d":["28e349236232860728fc91596fa4a1ec2c64bde6"],"28e349236232860728fc91596fa4a1ec2c64bde6":["be29e0e2cef1fd569147732e48caf8538790339b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"be29e0e2cef1fd569147732e48caf8538790339b":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["abec2fd822be07fc74ef5ba3609b9c5625a87d6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"abec2fd822be07fc74ef5ba3609b9c5625a87d6d":["ad94625fb8d088209f46650c8097196fec67f00c"],"28e349236232860728fc91596fa4a1ec2c64bde6":["abec2fd822be07fc74ef5ba3609b9c5625a87d6d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["be29e0e2cef1fd569147732e48caf8538790339b"],"be29e0e2cef1fd569147732e48caf8538790339b":["28e349236232860728fc91596fa4a1ec2c64bde6"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}