{"path":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","commits":[{"id":"6509c8bbcf8f92ba1ecfaccea085eac1d5c4754e","date":1360007824,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMapping).mjava","sourceNew":"    MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","sourceOld":"    MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMapping mapping) throws IOException {\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1be24658e024271bee79b7694d93cdc4dfa09ceb","date":1360107226,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","sourceNew":"    MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      assert values.length == mapping.ordDeltas.length;\n      assert docStarts.length == values.length + 1;\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","sourceOld":"    MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","pathOld":"/dev/null","sourceNew":"    MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      assert values.length == mapping.ordDeltas.length;\n      assert docStarts.length == values.length + 1;\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3","date":1361894345,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","sourceNew":"    /** Creates a new MultiSortedDocValues over <code>values</code> */\n    MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      assert values.length == mapping.ordDeltas.length;\n      assert docStarts.length == values.length + 1;\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","sourceOld":"    MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      assert values.length == mapping.ordDeltas.length;\n      assert docStarts.length == values.length + 1;\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b25d26ad3e8f824d95db88ecc5e5d9d71d3c595","date":1402950824,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","sourceNew":"    /** Creates a new MultiSortedDocValues over <code>values</code> */\n    MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      assert values.length == mapping.segmentToGlobalOrds.length;\n      assert docStarts.length == values.length + 1;\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","sourceOld":"    /** Creates a new MultiSortedDocValues over <code>values</code> */\n    MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      assert values.length == mapping.ordDeltas.length;\n      assert docStarts.length == values.length + 1;\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6d0aee18c1653f7ee634fa8830abdb001dcfe1b","date":1402998114,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","sourceNew":"    /** Creates a new MultiSortedDocValues over <code>values</code> */\n    MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      assert values.length == mapping.segmentToGlobalOrds.length;\n      assert docStarts.length == values.length + 1;\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","sourceOld":"    /** Creates a new MultiSortedDocValues over <code>values</code> */\n    MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      assert values.length == mapping.ordDeltas.length;\n      assert docStarts.length == values.length + 1;\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bcfd864fb8b916f7d21f2579d2010a31892055d","date":1403359094,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","sourceNew":"    /** Creates a new MultiSortedDocValues over <code>values</code> */\n    MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      assert docStarts.length == values.length + 1;\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","sourceOld":"    /** Creates a new MultiSortedDocValues over <code>values</code> */\n    MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      assert values.length == mapping.segmentToGlobalOrds.length;\n      assert docStarts.length == values.length + 1;\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a076c3c721f685b7559308fdc2cd72d91bba67e5","date":1464168992,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","sourceNew":"    /** Creates a new MultiSortedDocValues over <code>values</code> */\n    public MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      assert docStarts.length == values.length + 1;\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","sourceOld":"    /** Creates a new MultiSortedDocValues over <code>values</code> */\n    MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      assert docStarts.length == values.length + 1;\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e121d43b5a10f2df530f406f935102656e9c4e8","date":1464198131,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","sourceNew":"    /** Creates a new MultiSortedDocValues over <code>values</code> */\n    public MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      assert docStarts.length == values.length + 1;\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","sourceOld":"    /** Creates a new MultiSortedDocValues over <code>values</code> */\n    MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      assert docStarts.length == values.length + 1;\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83870855d82aba6819217abeff5a40779dbb28b4","date":1464291012,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","sourceNew":"    /** Creates a new MultiSortedDocValues over <code>values</code> */\n    public MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      assert docStarts.length == values.length + 1;\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","sourceOld":"    /** Creates a new MultiSortedDocValues over <code>values</code> */\n    MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      assert docStarts.length == values.length + 1;\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","sourceNew":"    /** Creates a new MultiSortedDocValues over <code>values</code> */\n    public MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping, long totalCost) throws IOException {\n      assert docStarts.length == values.length + 1;\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n      this.totalCost = totalCost;\n    }\n\n","sourceOld":"    /** Creates a new MultiSortedDocValues over <code>values</code> */\n    public MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      assert docStarts.length == values.length + 1;\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","sourceNew":null,"sourceOld":"    /** Creates a new MultiSortedDocValues over <code>values</code> */\n    public MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      assert docStarts.length == values.length + 1;\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiDocValues.MultiSortedDocValues#MultiSortedDocValues(SortedDocValues[],int[],OrdinalMap).mjava","sourceNew":null,"sourceOld":"    /** Creates a new MultiSortedDocValues over <code>values</code> */\n    MultiSortedDocValues(SortedDocValues values[], int docStarts[], OrdinalMap mapping) throws IOException {\n      assert docStarts.length == values.length + 1;\n      this.values = values;\n      this.docStarts = docStarts;\n      this.mapping = mapping;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a076c3c721f685b7559308fdc2cd72d91bba67e5":["5bcfd864fb8b916f7d21f2579d2010a31892055d"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["5bcfd864fb8b916f7d21f2579d2010a31892055d","a076c3c721f685b7559308fdc2cd72d91bba67e5"],"83870855d82aba6819217abeff5a40779dbb28b4":["5bcfd864fb8b916f7d21f2579d2010a31892055d","0e121d43b5a10f2df530f406f935102656e9c4e8"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["5bcfd864fb8b916f7d21f2579d2010a31892055d","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"1be24658e024271bee79b7694d93cdc4dfa09ceb":["6509c8bbcf8f92ba1ecfaccea085eac1d5c4754e"],"f6d0aee18c1653f7ee634fa8830abdb001dcfe1b":["a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3","9b25d26ad3e8f824d95db88ecc5e5d9d71d3c595"],"6509c8bbcf8f92ba1ecfaccea085eac1d5c4754e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1be24658e024271bee79b7694d93cdc4dfa09ceb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["0e121d43b5a10f2df530f406f935102656e9c4e8","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"9b25d26ad3e8f824d95db88ecc5e5d9d71d3c595":["a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3"],"5bcfd864fb8b916f7d21f2579d2010a31892055d":["9b25d26ad3e8f824d95db88ecc5e5d9d71d3c595"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3":["f6d0aee18c1653f7ee634fa8830abdb001dcfe1b","9b25d26ad3e8f824d95db88ecc5e5d9d71d3c595"],"a076c3c721f685b7559308fdc2cd72d91bba67e5":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["83870855d82aba6819217abeff5a40779dbb28b4","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"83870855d82aba6819217abeff5a40779dbb28b4":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"1be24658e024271bee79b7694d93cdc4dfa09ceb":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"f6d0aee18c1653f7ee634fa8830abdb001dcfe1b":[],"6509c8bbcf8f92ba1ecfaccea085eac1d5c4754e":["1be24658e024271bee79b7694d93cdc4dfa09ceb"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6509c8bbcf8f92ba1ecfaccea085eac1d5c4754e","d4d69c535930b5cce125cff868d40f6373dc27d4"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"9b25d26ad3e8f824d95db88ecc5e5d9d71d3c595":["f6d0aee18c1653f7ee634fa8830abdb001dcfe1b","5bcfd864fb8b916f7d21f2579d2010a31892055d"],"5bcfd864fb8b916f7d21f2579d2010a31892055d":["a076c3c721f685b7559308fdc2cd72d91bba67e5","0e121d43b5a10f2df530f406f935102656e9c4e8","83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","f6d0aee18c1653f7ee634fa8830abdb001dcfe1b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}