{"path":"lucene/core/src/java/org/apache/lucene/search/LeafFieldComparator#compareTop(int).mjava","commits":[{"id":"901e951cec2e6af4e503209a6721c8834db23279","date":1420556599,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LeafFieldComparator#compareTop(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator#compareTop(int).mjava","sourceNew":"  /**\n   * Compare the top value with this doc.  This will\n   * only invoked after setTopValue has been called.  This\n   * should return the same result as {@link\n   * FieldComparator#compare(int,int)}} as if topValue were slot1 and the new\n   * document were slot 2.  This is only called for searches that\n   * use searchAfter (deep paging).\n   *    \n   * @param doc that was hit\n   * @return any {@code N < 0} if the doc's value is sorted after\n   * the bottom entry (not competitive), any {@code N > 0} if the\n   * doc's value is sorted before the bottom entry and {@code 0} if\n   * they are equal.\n   */\n  int compareTop(int doc) throws IOException;\n\n","sourceOld":"  /**\n   * Compare the top value with this doc.  This will\n   * only invoked after setTopValue has been called.  This\n   * should return the same result as {@link\n   * #compare(int,int)}} as if topValue were slot1 and the new\n   * document were slot 2.  This is only called for searches that\n   * use searchAfter (deep paging).\n   *    \n   * @param doc that was hit\n   * @return any {@code N < 0} if the doc's value is sorted after\n   * the bottom entry (not competitive), any {@code N > 0} if the\n   * doc's value is sorted before the bottom entry and {@code 0} if\n   * they are equal.\n   */\n  public abstract int compareTop(int doc) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b51e51178b2e5783e2668d0df680d8708c906a76","date":1469011701,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LeafFieldComparator#compareTop(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LeafFieldComparator#compareTop(int).mjava","sourceNew":"  /**\n   * Compare the top value with this doc.  This will\n   * only invoked after setTopValue has been called.  This\n   * should return the same result as {@link\n   * FieldComparator#compare(int,int)}} as if topValue were slot1 and the new\n   * document were slot 2.  This is only called for searches that\n   * use searchAfter (deep paging).\n   *    \n   * @param doc that was hit\n   * @return any {@code N < 0} if the doc's value is sorted after\n   * the top entry (not competitive), any {@code N > 0} if the\n   * doc's value is sorted before the top entry and {@code 0} if\n   * they are equal.\n   */\n  int compareTop(int doc) throws IOException;\n\n","sourceOld":"  /**\n   * Compare the top value with this doc.  This will\n   * only invoked after setTopValue has been called.  This\n   * should return the same result as {@link\n   * FieldComparator#compare(int,int)}} as if topValue were slot1 and the new\n   * document were slot 2.  This is only called for searches that\n   * use searchAfter (deep paging).\n   *    \n   * @param doc that was hit\n   * @return any {@code N < 0} if the doc's value is sorted after\n   * the bottom entry (not competitive), any {@code N > 0} if the\n   * doc's value is sorted before the bottom entry and {@code 0} if\n   * they are equal.\n   */\n  int compareTop(int doc) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"35d7ed691d627802acc5be44a639b67b1360467b","date":1469032270,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LeafFieldComparator#compareTop(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LeafFieldComparator#compareTop(int).mjava","sourceNew":"  /**\n   * Compare the top value with this doc.  This will\n   * only invoked after setTopValue has been called.  This\n   * should return the same result as {@link\n   * FieldComparator#compare(int,int)}} as if topValue were slot1 and the new\n   * document were slot 2.  This is only called for searches that\n   * use searchAfter (deep paging).\n   *    \n   * @param doc that was hit\n   * @return any {@code N < 0} if the doc's value is sorted after\n   * the top entry (not competitive), any {@code N > 0} if the\n   * doc's value is sorted before the top entry and {@code 0} if\n   * they are equal.\n   */\n  int compareTop(int doc) throws IOException;\n\n","sourceOld":"  /**\n   * Compare the top value with this doc.  This will\n   * only invoked after setTopValue has been called.  This\n   * should return the same result as {@link\n   * FieldComparator#compare(int,int)}} as if topValue were slot1 and the new\n   * document were slot 2.  This is only called for searches that\n   * use searchAfter (deep paging).\n   *    \n   * @param doc that was hit\n   * @return any {@code N < 0} if the doc's value is sorted after\n   * the bottom entry (not competitive), any {@code N > 0} if the\n   * doc's value is sorted before the bottom entry and {@code 0} if\n   * they are equal.\n   */\n  int compareTop(int doc) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LeafFieldComparator#compareTop(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LeafFieldComparator#compareTop(int).mjava","sourceNew":"  /**\n   * Compare the top value with this doc.  This will\n   * only invoked after setTopValue has been called.  This\n   * should return the same result as {@link\n   * FieldComparator#compare(int,int)}} as if topValue were slot1 and the new\n   * document were slot 2.  This is only called for searches that\n   * use searchAfter (deep paging).\n   *    \n   * @param doc that was hit\n   * @return any {@code N < 0} if the doc's value is sorted after\n   * the top entry (not competitive), any {@code N > 0} if the\n   * doc's value is sorted before the top entry and {@code 0} if\n   * they are equal.\n   */\n  int compareTop(int doc) throws IOException;\n\n","sourceOld":"  /**\n   * Compare the top value with this doc.  This will\n   * only invoked after setTopValue has been called.  This\n   * should return the same result as {@link\n   * FieldComparator#compare(int,int)}} as if topValue were slot1 and the new\n   * document were slot 2.  This is only called for searches that\n   * use searchAfter (deep paging).\n   *    \n   * @param doc that was hit\n   * @return any {@code N < 0} if the doc's value is sorted after\n   * the bottom entry (not competitive), any {@code N > 0} if the\n   * doc's value is sorted before the bottom entry and {@code 0} if\n   * they are equal.\n   */\n  int compareTop(int doc) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b51e51178b2e5783e2668d0df680d8708c906a76":["901e951cec2e6af4e503209a6721c8834db23279"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"901e951cec2e6af4e503209a6721c8834db23279":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"35d7ed691d627802acc5be44a639b67b1360467b":["901e951cec2e6af4e503209a6721c8834db23279","b51e51178b2e5783e2668d0df680d8708c906a76"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["901e951cec2e6af4e503209a6721c8834db23279","35d7ed691d627802acc5be44a639b67b1360467b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["35d7ed691d627802acc5be44a639b67b1360467b"]},"commit2Childs":{"b51e51178b2e5783e2668d0df680d8708c906a76":["35d7ed691d627802acc5be44a639b67b1360467b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["901e951cec2e6af4e503209a6721c8834db23279"],"901e951cec2e6af4e503209a6721c8834db23279":["b51e51178b2e5783e2668d0df680d8708c906a76","35d7ed691d627802acc5be44a639b67b1360467b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"35d7ed691d627802acc5be44a639b67b1360467b":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}