{"path":"lucene/src/java/org/apache/lucene/index/MergePolicy.OneMerge#OneMerge(SegmentInfos).mjava","commits":[{"id":"38a62612cfa4e104080d89d7751a8f1a258ac335","date":1291442315,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MergePolicy.OneMerge#OneMerge(SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MergePolicy.OneMerge#OneMerge(SegmentInfos,boolean).mjava","sourceNew":"    public OneMerge(SegmentInfos segments) {\n      if (0 == segments.size())\n        throw new RuntimeException(\"segments must include at least one segment\");\n      this.segments = segments;\n    }\n\n","sourceOld":"    public OneMerge(SegmentInfos segments, boolean useCompoundFile) {\n      if (0 == segments.size())\n        throw new RuntimeException(\"segments must include at least one segment\");\n      this.segments = segments;\n      this.useCompoundFile = useCompoundFile;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a69e5860d014751cc9329dfeb441a6d8fd1ed8e","date":1291833341,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MergePolicy.OneMerge#OneMerge(SegmentInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MergePolicy.OneMerge#OneMerge(SegmentInfos,boolean).mjava","sourceNew":"    public OneMerge(SegmentInfos segments) {\n      if (0 == segments.size())\n        throw new RuntimeException(\"segments must include at least one segment\");\n      this.segments = segments;\n    }\n\n","sourceOld":"    public OneMerge(SegmentInfos segments, boolean useCompoundFile) {\n      if (0 == segments.size())\n        throw new RuntimeException(\"segments must include at least one segment\");\n      this.segments = segments;\n      this.useCompoundFile = useCompoundFile;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/MergePolicy.OneMerge#OneMerge(SegmentInfos).mjava","pathOld":"/dev/null","sourceNew":"    public OneMerge(SegmentInfos segments) {\n      if (0 == segments.size())\n        throw new RuntimeException(\"segments must include at least one segment\");\n      this.segments = segments;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5270fb4f55a1b77663dda53cb8090c083f0a23b3","date":1305050821,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MergePolicy.OneMerge#OneMerge(List[SegmentInfo]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MergePolicy.OneMerge#OneMerge(SegmentInfos).mjava","sourceNew":"    public OneMerge(List<SegmentInfo> segments) {\n      if (0 == segments.size())\n        throw new RuntimeException(\"segments must include at least one segment\");\n      this.segments = segments;\n      int count = 0;\n      for(SegmentInfo info : segments) {\n        count += info.docCount;\n      }\n      totalDocCount = count;\n    }\n\n","sourceOld":"    public OneMerge(SegmentInfos segments) {\n      if (0 == segments.size())\n        throw new RuntimeException(\"segments must include at least one segment\");\n      this.segments = segments;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/MergePolicy.OneMerge#OneMerge(List[SegmentInfo]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MergePolicy.OneMerge#OneMerge(SegmentInfos).mjava","sourceNew":"    public OneMerge(List<SegmentInfo> segments) {\n      if (0 == segments.size())\n        throw new RuntimeException(\"segments must include at least one segment\");\n      this.segments = segments;\n      int count = 0;\n      for(SegmentInfo info : segments) {\n        count += info.docCount;\n      }\n      totalDocCount = count;\n    }\n\n","sourceOld":"    public OneMerge(SegmentInfos segments) {\n      if (0 == segments.size())\n        throw new RuntimeException(\"segments must include at least one segment\");\n      this.segments = segments;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/MergePolicy.OneMerge#OneMerge(SegmentInfos).mjava","sourceNew":null,"sourceOld":"    public OneMerge(SegmentInfos segments) {\n      if (0 == segments.size())\n        throw new RuntimeException(\"segments must include at least one segment\");\n      this.segments = segments;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38a62612cfa4e104080d89d7751a8f1a258ac335":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a3776dccca01c11e7046323cfad46a3b4a471233":["38a62612cfa4e104080d89d7751a8f1a258ac335","5270fb4f55a1b77663dda53cb8090c083f0a23b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4a69e5860d014751cc9329dfeb441a6d8fd1ed8e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["4a69e5860d014751cc9329dfeb441a6d8fd1ed8e","5270fb4f55a1b77663dda53cb8090c083f0a23b3"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","38a62612cfa4e104080d89d7751a8f1a258ac335"],"5270fb4f55a1b77663dda53cb8090c083f0a23b3":["38a62612cfa4e104080d89d7751a8f1a258ac335"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5270fb4f55a1b77663dda53cb8090c083f0a23b3"]},"commit2Childs":{"38a62612cfa4e104080d89d7751a8f1a258ac335":["a3776dccca01c11e7046323cfad46a3b4a471233","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","5270fb4f55a1b77663dda53cb8090c083f0a23b3"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38a62612cfa4e104080d89d7751a8f1a258ac335","4a69e5860d014751cc9329dfeb441a6d8fd1ed8e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"4a69e5860d014751cc9329dfeb441a6d8fd1ed8e":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"5270fb4f55a1b77663dda53cb8090c083f0a23b3":["a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}