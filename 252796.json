{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","commits":[{"id":"33861a7dcb2e09155c04cd7507f0ab74d5d102b6","date":1461397689,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected double outsideDistance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    // MHL\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8530f74e75c82997f2372fff25f63aeaf7c78345","date":1461534280,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","sourceNew":"  @Override\n  protected double outsideDistance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    // MHL\n    return 0.0;\n  }\n\n","sourceOld":"  @Override\n  protected double outsideDistance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    // MHL\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09149ac46adf9772db58c67d18f37b1c5e109b34","date":1461566431,"type":4,"author":"Karl Wright","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected double outsideDistance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    // MHL\n    return 0.0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"116824c1b3f14f43f9a77914fbf6f0d70a5b7c89","date":1461609218,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected double outsideDistance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    // MHL\n    return 0.0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d08583c8d816a4b09b15335f071f6ac9c38e92ed","date":1461759963,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","sourceNew":"  @Override\n  protected double outsideDistance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    double minimumDistance = Double.MAX_VALUE;\n    for (final Edge shapeStartEdge : shapeStartEdges) {\n      Edge shapeEdge = shapeStartEdge;\n      while (true) {\n        final double newDist = distanceStyle.computeDistance(shapeEdge.startPoint, x, y, z);\n        if (newDist < minimumDistance) {\n          minimumDistance = newDist;\n        }\n        final double newPlaneDist = distanceStyle.computeDistance(planetModel, shapeEdge.plane, x, y, z, shapeEdge.startPlane, shapeEdge.endPlane);\n        if (newPlaneDist < minimumDistance) {\n          minimumDistance = newPlaneDist;\n        }\n        shapeEdge = shapeEdge.next;\n        if (shapeEdge == shapeStartEdge) {\n          break;\n        }\n      }\n    }\n    return minimumDistance;\n  }\n\n","sourceOld":"  @Override\n  protected double outsideDistance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    // MHL\n    return 0.0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c46db27f3364a67a1c77a0f4e462cc7c5b4147f0","date":1461888019,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected double outsideDistance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    double minimumDistance = Double.MAX_VALUE;\n    for (final Edge shapeStartEdge : shapeStartEdges) {\n      Edge shapeEdge = shapeStartEdge;\n      while (true) {\n        final double newDist = distanceStyle.computeDistance(shapeEdge.startPoint, x, y, z);\n        if (newDist < minimumDistance) {\n          minimumDistance = newDist;\n        }\n        final double newPlaneDist = distanceStyle.computeDistance(planetModel, shapeEdge.plane, x, y, z, shapeEdge.startPlane, shapeEdge.endPlane);\n        if (newPlaneDist < minimumDistance) {\n          minimumDistance = newPlaneDist;\n        }\n        shapeEdge = shapeEdge.next;\n        if (shapeEdge == shapeStartEdge) {\n          break;\n        }\n      }\n    }\n    return minimumDistance;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55b50463286869f584cf849d1587a0fcd54d1dfa","date":1462378517,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected double outsideDistance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    double minimumDistance = Double.MAX_VALUE;\n    for (final Edge shapeStartEdge : shapeStartEdges) {\n      Edge shapeEdge = shapeStartEdge;\n      while (true) {\n        final double newDist = distanceStyle.computeDistance(shapeEdge.startPoint, x, y, z);\n        if (newDist < minimumDistance) {\n          minimumDistance = newDist;\n        }\n        final double newPlaneDist = distanceStyle.computeDistance(planetModel, shapeEdge.plane, x, y, z, shapeEdge.startPlane, shapeEdge.endPlane);\n        if (newPlaneDist < minimumDistance) {\n          minimumDistance = newPlaneDist;\n        }\n        shapeEdge = shapeEdge.next;\n        if (shapeEdge == shapeStartEdge) {\n          break;\n        }\n      }\n    }\n    return minimumDistance;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae0a2a645db6ae8e4aca176aefd05f400689d2f4","date":1463569628,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","sourceNew":"  @Override\n  protected double outsideDistance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    double minimumDistance = Double.POSITIVE_INFINITY;\n    for (final Edge shapeStartEdge : shapeStartEdges) {\n      Edge shapeEdge = shapeStartEdge;\n      while (true) {\n        final double newDist = distanceStyle.computeDistance(shapeEdge.startPoint, x, y, z);\n        if (newDist < minimumDistance) {\n          minimumDistance = newDist;\n        }\n        final double newPlaneDist = distanceStyle.computeDistance(planetModel, shapeEdge.plane, x, y, z, shapeEdge.startPlane, shapeEdge.endPlane);\n        if (newPlaneDist < minimumDistance) {\n          minimumDistance = newPlaneDist;\n        }\n        shapeEdge = shapeEdge.next;\n        if (shapeEdge == shapeStartEdge) {\n          break;\n        }\n      }\n    }\n    return minimumDistance;\n  }\n\n","sourceOld":"  @Override\n  protected double outsideDistance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    double minimumDistance = Double.MAX_VALUE;\n    for (final Edge shapeStartEdge : shapeStartEdges) {\n      Edge shapeEdge = shapeStartEdge;\n      while (true) {\n        final double newDist = distanceStyle.computeDistance(shapeEdge.startPoint, x, y, z);\n        if (newDist < minimumDistance) {\n          minimumDistance = newDist;\n        }\n        final double newPlaneDist = distanceStyle.computeDistance(planetModel, shapeEdge.plane, x, y, z, shapeEdge.startPlane, shapeEdge.endPlane);\n        if (newPlaneDist < minimumDistance) {\n          minimumDistance = newPlaneDist;\n        }\n        shapeEdge = shapeEdge.next;\n        if (shapeEdge == shapeStartEdge) {\n          break;\n        }\n      }\n    }\n    return minimumDistance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","sourceNew":"  @Override\n  protected double outsideDistance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    double minimumDistance = Double.POSITIVE_INFINITY;\n    for (final Edge shapeStartEdge : shapeStartEdges) {\n      Edge shapeEdge = shapeStartEdge;\n      while (true) {\n        final double newDist = distanceStyle.computeDistance(shapeEdge.startPoint, x, y, z);\n        if (newDist < minimumDistance) {\n          minimumDistance = newDist;\n        }\n        final double newPlaneDist = distanceStyle.computeDistance(planetModel, shapeEdge.plane, x, y, z, shapeEdge.startPlane, shapeEdge.endPlane);\n        if (newPlaneDist < minimumDistance) {\n          minimumDistance = newPlaneDist;\n        }\n        shapeEdge = shapeEdge.next;\n        if (shapeEdge == shapeStartEdge) {\n          break;\n        }\n      }\n    }\n    return minimumDistance;\n  }\n\n","sourceOld":"  @Override\n  protected double outsideDistance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    double minimumDistance = Double.MAX_VALUE;\n    for (final Edge shapeStartEdge : shapeStartEdges) {\n      Edge shapeEdge = shapeStartEdge;\n      while (true) {\n        final double newDist = distanceStyle.computeDistance(shapeEdge.startPoint, x, y, z);\n        if (newDist < minimumDistance) {\n          minimumDistance = newDist;\n        }\n        final double newPlaneDist = distanceStyle.computeDistance(planetModel, shapeEdge.plane, x, y, z, shapeEdge.startPlane, shapeEdge.endPlane);\n        if (newPlaneDist < minimumDistance) {\n          minimumDistance = newPlaneDist;\n        }\n        shapeEdge = shapeEdge.next;\n        if (shapeEdge == shapeStartEdge) {\n          break;\n        }\n      }\n    }\n    return minimumDistance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoComplexPolygon#outsideDistance(DistanceStyle,double,double,double).mjava","sourceNew":"  @Override\n  protected double outsideDistance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    double minimumDistance = Double.POSITIVE_INFINITY;\n    for (final Edge shapeStartEdge : shapeStartEdges) {\n      Edge shapeEdge = shapeStartEdge;\n      while (true) {\n        final double newDist = distanceStyle.computeDistance(shapeEdge.startPoint, x, y, z);\n        if (newDist < minimumDistance) {\n          minimumDistance = newDist;\n        }\n        final double newPlaneDist = distanceStyle.computeDistance(planetModel, shapeEdge.plane, x, y, z, shapeEdge.startPlane, shapeEdge.endPlane);\n        if (newPlaneDist < minimumDistance) {\n          minimumDistance = newPlaneDist;\n        }\n        shapeEdge = shapeEdge.next;\n        if (shapeEdge == shapeStartEdge) {\n          break;\n        }\n      }\n    }\n    return minimumDistance;\n  }\n\n","sourceOld":"  @Override\n  protected double outsideDistance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    double minimumDistance = Double.MAX_VALUE;\n    for (final Edge shapeStartEdge : shapeStartEdges) {\n      Edge shapeEdge = shapeStartEdge;\n      while (true) {\n        final double newDist = distanceStyle.computeDistance(shapeEdge.startPoint, x, y, z);\n        if (newDist < minimumDistance) {\n          minimumDistance = newDist;\n        }\n        final double newPlaneDist = distanceStyle.computeDistance(planetModel, shapeEdge.plane, x, y, z, shapeEdge.startPlane, shapeEdge.endPlane);\n        if (newPlaneDist < minimumDistance) {\n          minimumDistance = newPlaneDist;\n        }\n        shapeEdge = shapeEdge.next;\n        if (shapeEdge == shapeStartEdge) {\n          break;\n        }\n      }\n    }\n    return minimumDistance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"33861a7dcb2e09155c04cd7507f0ab74d5d102b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09149ac46adf9772db58c67d18f37b1c5e109b34":["8530f74e75c82997f2372fff25f63aeaf7c78345"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d08583c8d816a4b09b15335f071f6ac9c38e92ed":["116824c1b3f14f43f9a77914fbf6f0d70a5b7c89"],"8530f74e75c82997f2372fff25f63aeaf7c78345":["33861a7dcb2e09155c04cd7507f0ab74d5d102b6"],"c46db27f3364a67a1c77a0f4e462cc7c5b4147f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d08583c8d816a4b09b15335f071f6ac9c38e92ed"],"116824c1b3f14f43f9a77914fbf6f0d70a5b7c89":["09149ac46adf9772db58c67d18f37b1c5e109b34"],"ae0a2a645db6ae8e4aca176aefd05f400689d2f4":["c46db27f3364a67a1c77a0f4e462cc7c5b4147f0"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["55b50463286869f584cf849d1587a0fcd54d1dfa","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["c46db27f3364a67a1c77a0f4e462cc7c5b4147f0","ae0a2a645db6ae8e4aca176aefd05f400689d2f4"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c46db27f3364a67a1c77a0f4e462cc7c5b4147f0"]},"commit2Childs":{"33861a7dcb2e09155c04cd7507f0ab74d5d102b6":["8530f74e75c82997f2372fff25f63aeaf7c78345"],"09149ac46adf9772db58c67d18f37b1c5e109b34":["116824c1b3f14f43f9a77914fbf6f0d70a5b7c89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["33861a7dcb2e09155c04cd7507f0ab74d5d102b6","c46db27f3364a67a1c77a0f4e462cc7c5b4147f0","55b50463286869f584cf849d1587a0fcd54d1dfa"],"d08583c8d816a4b09b15335f071f6ac9c38e92ed":["c46db27f3364a67a1c77a0f4e462cc7c5b4147f0"],"8530f74e75c82997f2372fff25f63aeaf7c78345":["09149ac46adf9772db58c67d18f37b1c5e109b34"],"c46db27f3364a67a1c77a0f4e462cc7c5b4147f0":["ae0a2a645db6ae8e4aca176aefd05f400689d2f4","d470c8182e92b264680e34081b75e70a9f2b3c89","55b50463286869f584cf849d1587a0fcd54d1dfa"],"116824c1b3f14f43f9a77914fbf6f0d70a5b7c89":["d08583c8d816a4b09b15335f071f6ac9c38e92ed"],"ae0a2a645db6ae8e4aca176aefd05f400689d2f4":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"55b50463286869f584cf849d1587a0fcd54d1dfa":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}