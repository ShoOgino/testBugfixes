{"path":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8","date":1310355420,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException{\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", TextField.TYPE_STORED, \"2\"));\n    doc.add(new Field(\"name\", TextField.TYPE_STORED, \"name2\"));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"name\", \"name2\", Field.Store.YES, Field.Index.ANALYZED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd","date":1317197236,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", TextField.TYPE_STORED));\n    doc.add(new Field(\"name\", \"name2\", TextField.TYPE_STORED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", TextField.TYPE_STORED, \"2\"));\n    doc.add(new Field(\"name\", TextField.TYPE_STORED, \"name2\"));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new Field(\"id\", \"2\", TextField.TYPE_STORED));\n    doc.add(new Field(\"name\", \"name2\", TextField.TYPE_STORED));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException, ParseException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d2c955494271bc1fe5eee192f9faa295e47acda","date":1355240592,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + \"index.properties\");\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write index.properties\", e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1fd8fc50365ae7bb9c0d47256bc40182559b70d1","date":1373649022,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), IOUtils.CHARSET_UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), IOUtils.CHARSET_UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    FileOutputStream os = null;\n    try {\n      os = new FileOutputStream(idxprops);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      if (os != null) os.close();\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0bf41419d452997826ec5f17684993377be77f49","date":1386629618,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), IOUtils.CHARSET_UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), IOUtils.CHARSET_UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":["c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), IOUtils.CHARSET_UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), IOUtils.CHARSET_UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(Version.LUCENE_40, new StandardAnalyzer(Version.LUCENE_40))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), IOUtils.CHARSET_UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), IOUtils.CHARSET_UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.shutdown();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer())\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.shutdown();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.shutdown();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.shutdown();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer())\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.shutdown();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer())\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.shutdown();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT))\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.shutdown();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(new StandardAnalyzer())\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer())\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.shutdown();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cbc3688252d4a8045d69a164236b2cf87b721f17","date":1409846185,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(new StandardAnalyzer())\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(new StandardAnalyzer())\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n    newDir.delete();\n  }\n\n","bugFix":["29765e35c99654ed87e394d8bc13d8ab07b51092"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir.toPath());\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(new StandardAnalyzer())\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir);\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(new StandardAnalyzer())\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac2f1cdbdc54a889e88543cc1d939a931cb96883","date":1420554488,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir.toPath());\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(new StandardAnalyzer())\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());h.getCoreContainer().reload(h.getCore().getName());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir.toPath());\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(new StandardAnalyzer())\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20f6b7cff3771384f27af0f059795d7e64aff6b9","date":1425498309,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + IndexFetcher.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + IndexFetcher.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir.toPath());\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(new StandardAnalyzer())\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());h.getCoreContainer().reload(h.getCore().getName());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir.toPath());\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(new StandardAnalyzer())\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());h.getCoreContainer().reload(h.getCore().getName());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + IndexFetcher.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + IndexFetcher.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir.toPath());\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(new StandardAnalyzer())\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());h.getCoreContainer().reload(h.getCore().getName());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + SnapPuller.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + SnapPuller.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir.toPath());\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(new StandardAnalyzer())\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());h.getCoreContainer().reload(h.getCore().getName());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eef787d580db12c03958d073ba5f70d622314d0","date":1473236349,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + IndexFetcher.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + IndexFetcher.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir.toPath());\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(new StandardAnalyzer())\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());h.getCoreContainer().reload(h.getCore().getName());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89424def13674ea17829b41c5883c54ecc31a132","date":1473767373,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + IndexFetcher.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + IndexFetcher.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir.toPath());\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(new StandardAnalyzer())\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());h.getCoreContainer().reload(h.getCore().getName());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + IndexFetcher.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + IndexFetcher.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir.toPath());\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(new StandardAnalyzer())\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());h.getCoreContainer().reload(h.getCore().getName());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/TestArbitraryIndexDir#testLoadNewIndexDir().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testLoadNewIndexDir() throws IOException, ParserConfigurationException, SAXException {\n    //add a doc in original index dir\n    assertU(adoc(\"id\", String.valueOf(1),\n        \"name\", \"name\"+String.valueOf(1)));\n    //create a new index dir and index.properties file\n    File idxprops = new File(h.getCore().getDataDir() + IndexFetcher.INDEX_PROPERTIES);\n    Properties p = new Properties();\n    File newDir = new File(h.getCore().getDataDir() + \"index_temp\");\n    newDir.mkdirs();\n    p.put(\"index\", newDir.getName());\n    Writer os = null;\n    try {\n      os = new OutputStreamWriter(new FileOutputStream(idxprops), StandardCharsets.UTF_8);\n      p.store(os, \"index properties\");\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to write \" + IndexFetcher.INDEX_PROPERTIES, e);\n    } finally {\n      IOUtils.closeWhileHandlingException(os);\n    }\n\n    //add a doc in the new index dir\n    Directory dir = newFSDirectory(newDir.toPath());\n    IndexWriter iw = new IndexWriter(\n        dir,\n        new IndexWriterConfig(new StandardAnalyzer())\n    );\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"2\", Field.Store.YES));\n    doc.add(new TextField(\"name\", \"name2\", Field.Store.YES));\n    iw.addDocument(doc);\n    iw.commit();\n    iw.close();\n\n    //commit will cause searcher to open with the new index dir\n    assertU(commit());h.getCoreContainer().reload(h.getCore().getName());\n    //new index dir contains just 1 doc.\n    assertQ(\"return doc with id 2\",\n        req(\"id:2\"),\n        \"*[count(//doc)=1]\"\n    );\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["407687e67faf6e1f02a211ca078d8e3eed631027","7d2c955494271bc1fe5eee192f9faa295e47acda"],"ff4227bb146f97aabae888091c19e48c88dbb0db":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["7d2c955494271bc1fe5eee192f9faa295e47acda","1fd8fc50365ae7bb9c0d47256bc40182559b70d1"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"89424def13674ea17829b41c5883c54ecc31a132":["20f6b7cff3771384f27af0f059795d7e64aff6b9","7eef787d580db12c03958d073ba5f70d622314d0"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["ac2f1cdbdc54a889e88543cc1d939a931cb96883","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["ac2f1cdbdc54a889e88543cc1d939a931cb96883"],"0bf41419d452997826ec5f17684993377be77f49":["1fd8fc50365ae7bb9c0d47256bc40182559b70d1"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["20f6b7cff3771384f27af0f059795d7e64aff6b9","89424def13674ea17829b41c5883c54ecc31a132"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["7d89d7e4e5101347833eea558851bf4209218619"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["91a3609ac9a09ca0c8eee1b765401bbdacaceaf8"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"5eb2511ababf862ea11e10761c70ee560cd84510":["0bf41419d452997826ec5f17684993377be77f49","7d89d7e4e5101347833eea558851bf4209218619"],"7d2c955494271bc1fe5eee192f9faa295e47acda":["3cdb67100dc016748799a77218aa409478372d79"],"3cdb67100dc016748799a77218aa409478372d79":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["c26f00b574427b55127e869b935845554afde1fa"],"407687e67faf6e1f02a211ca078d8e3eed631027":["04f07771a2a7dd3a395700665ed839c3dae2def2","3cdb67100dc016748799a77218aa409478372d79"],"f4abec28b874149a7223e32cc7a01704c27790de":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"7d89d7e4e5101347833eea558851bf4209218619":["0bf41419d452997826ec5f17684993377be77f49"],"ac2f1cdbdc54a889e88543cc1d939a931cb96883":["f4abec28b874149a7223e32cc7a01704c27790de"],"1fd8fc50365ae7bb9c0d47256bc40182559b70d1":["7d2c955494271bc1fe5eee192f9faa295e47acda"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["20f6b7cff3771384f27af0f059795d7e64aff6b9","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"7eef787d580db12c03958d073ba5f70d622314d0":["20f6b7cff3771384f27af0f059795d7e64aff6b9"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["1fd8fc50365ae7bb9c0d47256bc40182559b70d1","0bf41419d452997826ec5f17684993377be77f49"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c26f00b574427b55127e869b935845554afde1fa":["91a3609ac9a09ca0c8eee1b765401bbdacaceaf8"],"89424def13674ea17829b41c5883c54ecc31a132":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["89424def13674ea17829b41c5883c54ecc31a132","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","7eef787d580db12c03958d073ba5f70d622314d0"],"0bf41419d452997826ec5f17684993377be77f49":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"5eb2511ababf862ea11e10761c70ee560cd84510":[],"7d2c955494271bc1fe5eee192f9faa295e47acda":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","37a0f60745e53927c4c876cfe5b5a58170f0646c","1fd8fc50365ae7bb9c0d47256bc40182559b70d1"],"3cdb67100dc016748799a77218aa409478372d79":["7d2c955494271bc1fe5eee192f9faa295e47acda","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"7d89d7e4e5101347833eea558851bf4209218619":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","5eb2511ababf862ea11e10761c70ee560cd84510"],"f4abec28b874149a7223e32cc7a01704c27790de":["ac2f1cdbdc54a889e88543cc1d939a931cb96883"],"1fd8fc50365ae7bb9c0d47256bc40182559b70d1":["37a0f60745e53927c4c876cfe5b5a58170f0646c","0bf41419d452997826ec5f17684993377be77f49","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"ac2f1cdbdc54a889e88543cc1d939a931cb96883":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cbc3688252d4a8045d69a164236b2cf87b721f17":["f4abec28b874149a7223e32cc7a01704c27790de"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"7eef787d580db12c03958d073ba5f70d622314d0":["89424def13674ea17829b41c5883c54ecc31a132"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","37a0f60745e53927c4c876cfe5b5a58170f0646c","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","5eb2511ababf862ea11e10761c70ee560cd84510","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","74f45af4339b0daf7a95c820ab88c1aea74fbce0","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}