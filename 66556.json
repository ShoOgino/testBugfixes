{"path":"src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantScorer#ConstantScorer(Similarity,IndexReader,QueryWeight).mjava","commits":[{"id":"052fac7830290bd38a04cddee1a121ee07656b56","date":1245780702,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantScorer#ConstantScorer(Similarity,IndexReader,QueryWeight).mjava","pathOld":"src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantScorer#ConstantScorer(Similarity,IndexReader,Weight).mjava","sourceNew":"    public ConstantScorer(Similarity similarity, IndexReader reader, QueryWeight w) throws IOException {\n      super(similarity);\n      theScore = w.getValue();\n      docIdSetIterator = filter.getDocIdSet(reader).iterator();\n    }\n\n","sourceOld":"    public ConstantScorer(Similarity similarity, IndexReader reader, Weight w) throws IOException {\n      super(similarity);\n      theScore = w.getValue();\n      docIdSetIterator = filter.getDocIdSet(reader).iterator();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d6c98c690b593cea727f68742684c979ead1a0a","date":1248688202,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantScorer#ConstantScorer(Similarity,IndexReader,QueryWeight).mjava","pathOld":"src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantScorer#ConstantScorer(Similarity,IndexReader,QueryWeight).mjava","sourceNew":"    public ConstantScorer(Similarity similarity, IndexReader reader, QueryWeight w) throws IOException {\n      super(similarity);\n      theScore = w.getValue();\n      DocIdSet docIdSet = filter.getDocIdSet(reader);\n      if (docIdSet == null) {\n        docIdSetIterator = EmptyDocIdSetIterator.getInstance();\n      } else {\n        DocIdSetIterator iter = docIdSet.iterator();\n        if (iter == null) {\n          docIdSetIterator = EmptyDocIdSetIterator.getInstance();\n        } else {\n          docIdSetIterator = iter;\n        }\n      }\n    }\n\n","sourceOld":"    public ConstantScorer(Similarity similarity, IndexReader reader, QueryWeight w) throws IOException {\n      super(similarity);\n      theScore = w.getValue();\n      docIdSetIterator = filter.getDocIdSet(reader).iterator();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf6645926c5572261eb47ea234b7892fc1df074f","date":1248693156,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantScorer#ConstantScorer(Similarity,IndexReader,QueryWeight).mjava","pathOld":"src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantScorer#ConstantScorer(Similarity,IndexReader,QueryWeight).mjava","sourceNew":"    public ConstantScorer(Similarity similarity, IndexReader reader, QueryWeight w) throws IOException {\n      super(similarity);\n      theScore = w.getValue();\n      DocIdSet docIdSet = filter.getDocIdSet(reader);\n      if (docIdSet == null) {\n        docIdSetIterator = DocIdSet.EMPTY_DOCIDSET.iterator();\n      } else {\n        DocIdSetIterator iter = docIdSet.iterator();\n        if (iter == null) {\n          docIdSetIterator = DocIdSet.EMPTY_DOCIDSET.iterator();\n        } else {\n          docIdSetIterator = iter;\n        }\n      }\n    }\n\n","sourceOld":"    public ConstantScorer(Similarity similarity, IndexReader reader, QueryWeight w) throws IOException {\n      super(similarity);\n      theScore = w.getValue();\n      DocIdSet docIdSet = filter.getDocIdSet(reader);\n      if (docIdSet == null) {\n        docIdSetIterator = EmptyDocIdSetIterator.getInstance();\n      } else {\n        DocIdSetIterator iter = docIdSet.iterator();\n        if (iter == null) {\n          docIdSetIterator = EmptyDocIdSetIterator.getInstance();\n        } else {\n          docIdSetIterator = iter;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe941135bdfc28c81e20b4d21422f8726af34925","date":1250040150,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantScorer#ConstantScorer(Similarity,IndexReader,Weight).mjava","pathOld":"src/java/org/apache/lucene/search/ConstantScoreQuery.ConstantScorer#ConstantScorer(Similarity,IndexReader,QueryWeight).mjava","sourceNew":"    public ConstantScorer(Similarity similarity, IndexReader reader, Weight w) throws IOException {\n      super(similarity);\n      theScore = w.getValue();\n      DocIdSet docIdSet = filter.getDocIdSet(reader);\n      if (docIdSet == null) {\n        docIdSetIterator = DocIdSet.EMPTY_DOCIDSET.iterator();\n      } else {\n        DocIdSetIterator iter = docIdSet.iterator();\n        if (iter == null) {\n          docIdSetIterator = DocIdSet.EMPTY_DOCIDSET.iterator();\n        } else {\n          docIdSetIterator = iter;\n        }\n      }\n    }\n\n","sourceOld":"    public ConstantScorer(Similarity similarity, IndexReader reader, QueryWeight w) throws IOException {\n      super(similarity);\n      theScore = w.getValue();\n      DocIdSet docIdSet = filter.getDocIdSet(reader);\n      if (docIdSet == null) {\n        docIdSetIterator = DocIdSet.EMPTY_DOCIDSET.iterator();\n      } else {\n        DocIdSetIterator iter = docIdSet.iterator();\n        if (iter == null) {\n          docIdSetIterator = DocIdSet.EMPTY_DOCIDSET.iterator();\n        } else {\n          docIdSetIterator = iter;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cf6645926c5572261eb47ea234b7892fc1df074f":["8d6c98c690b593cea727f68742684c979ead1a0a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fe941135bdfc28c81e20b4d21422f8726af34925":["cf6645926c5572261eb47ea234b7892fc1df074f"],"8d6c98c690b593cea727f68742684c979ead1a0a":["052fac7830290bd38a04cddee1a121ee07656b56"],"052fac7830290bd38a04cddee1a121ee07656b56":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fe941135bdfc28c81e20b4d21422f8726af34925"]},"commit2Childs":{"cf6645926c5572261eb47ea234b7892fc1df074f":["fe941135bdfc28c81e20b4d21422f8726af34925"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["052fac7830290bd38a04cddee1a121ee07656b56"],"fe941135bdfc28c81e20b4d21422f8726af34925":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8d6c98c690b593cea727f68742684c979ead1a0a":["cf6645926c5572261eb47ea234b7892fc1df074f"],"052fac7830290bd38a04cddee1a121ee07656b56":["8d6c98c690b593cea727f68742684c979ead1a0a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}