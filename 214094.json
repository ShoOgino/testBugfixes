{"path":"src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter#next(Token).mjava","commits":[{"id":"6864413dbc0c12104c978c05456f3da1d45adb03","date":1186770873,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter#next(Token).mjava","pathOld":"/dev/null","sourceNew":"  public final Token next(Token result) throws java.io.IOException {\n    result = input.next(result);\n    if (result != null) {\n      outputPos = 0;\n      removeAccents(result.termBuffer(), result.termLength());\n      result.setTermBuffer(output, 0, outputPos);\n      return result;\n    } else\n      return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ead9fa01724ec775f9b56ac4ccfa977bec6ec066"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ead9fa01724ec775f9b56ac4ccfa977bec6ec066","date":1187369916,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter#next(Token).mjava","pathOld":"src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter#next(Token).mjava","sourceNew":"  public final Token next(Token result) throws java.io.IOException {\n    result = input.next(result);\n    if (result != null) {\n      final char[] buffer = result.termBuffer();\n      final int length = result.termLength();\n      // If no characters actually require rewriting then we\n      // just return token as-is:\n      for(int i=0;i<length;i++) {\n        final char c = buffer[i];\n        if (c >= '\\u00c0' && c <= '\\u0178') {\n          removeAccents(buffer, length);\n          result.setTermBuffer(output, 0, outputPos);\n          break;\n        }\n      }\n      return result;\n    } else\n      return null;\n  }\n\n","sourceOld":"  public final Token next(Token result) throws java.io.IOException {\n    result = input.next(result);\n    if (result != null) {\n      outputPos = 0;\n      removeAccents(result.termBuffer(), result.termLength());\n      result.setTermBuffer(output, 0, outputPos);\n      return result;\n    } else\n      return null;\n  }\n\n","bugFix":["6864413dbc0c12104c978c05456f3da1d45adb03"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2d5b3a60e3d67d049091d4cf0d641fd1f5ba564","date":1217951253,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter#next(Token).mjava","pathOld":"src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter#next(Token).mjava","sourceNew":"  public final Token next(Token result) throws java.io.IOException {\n    result = input.next(result);\n    if (result != null) {\n      final char[] buffer = result.termBuffer();\n      final int length = result.termLength();\n      // If no characters actually require rewriting then we\n      // just return token as-is:\n      for(int i=0;i<length;i++) {\n        final char c = buffer[i];\n        if (c >= '\\u00c0' && c <= '\\uFB06') {\n          removeAccents(buffer, length);\n          result.setTermBuffer(output, 0, outputPos);\n          break;\n        }\n      }\n      return result;\n    } else\n      return null;\n  }\n\n","sourceOld":"  public final Token next(Token result) throws java.io.IOException {\n    result = input.next(result);\n    if (result != null) {\n      final char[] buffer = result.termBuffer();\n      final int length = result.termLength();\n      // If no characters actually require rewriting then we\n      // just return token as-is:\n      for(int i=0;i<length;i++) {\n        final char c = buffer[i];\n        if (c >= '\\u00c0' && c <= '\\u0178') {\n          removeAccents(buffer, length);\n          result.setTermBuffer(output, 0, outputPos);\n          break;\n        }\n      }\n      return result;\n    } else\n      return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2cb543b41c145f33390f460ee743d6693c9c6c","date":1219243087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter#next(Token).mjava","pathOld":"src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter#next(Token).mjava","sourceNew":"  public final Token next(final Token reusableToken) throws java.io.IOException {\n    assert reusableToken != null;\n    Token nextToken = input.next(reusableToken);\n    if (nextToken != null) {\n      final char[] buffer = nextToken.termBuffer();\n      final int length = nextToken.termLength();\n      // If no characters actually require rewriting then we\n      // just return token as-is:\n      for(int i=0;i<length;i++) {\n        final char c = buffer[i];\n        if (c >= '\\u00c0' && c <= '\\uFB06') {\n          removeAccents(buffer, length);\n          nextToken.setTermBuffer(output, 0, outputPos);\n          break;\n        }\n      }\n      return nextToken;\n    } else\n      return null;\n  }\n\n","sourceOld":"  public final Token next(Token result) throws java.io.IOException {\n    result = input.next(result);\n    if (result != null) {\n      final char[] buffer = result.termBuffer();\n      final int length = result.termLength();\n      // If no characters actually require rewriting then we\n      // just return token as-is:\n      for(int i=0;i<length;i++) {\n        final char c = buffer[i];\n        if (c >= '\\u00c0' && c <= '\\uFB06') {\n          removeAccents(buffer, length);\n          result.setTermBuffer(output, 0, outputPos);\n          break;\n        }\n      }\n      return result;\n    } else\n      return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223","date":1227051709,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter#next(Token).mjava","pathOld":"src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter#next(Token).mjava","sourceNew":"  /** @deprecated */\n  public final Token next(final Token reusableToken) throws java.io.IOException {\n    assert reusableToken != null;\n    Token nextToken = input.next(reusableToken);\n    if (nextToken != null) {\n      final char[] buffer = nextToken.termBuffer();\n      final int length = nextToken.termLength();\n      // If no characters actually require rewriting then we\n      // just return token as-is:\n      for(int i=0;i<length;i++) {\n        final char c = buffer[i];\n        if (c >= '\\u00c0' && c <= '\\uFB06') {\n          removeAccents(buffer, length);\n          nextToken.setTermBuffer(output, 0, outputPos);\n          break;\n        }\n      }\n      return nextToken;\n    } else\n      return null;\n  }\n\n","sourceOld":"  public final Token next(final Token reusableToken) throws java.io.IOException {\n    assert reusableToken != null;\n    Token nextToken = input.next(reusableToken);\n    if (nextToken != null) {\n      final char[] buffer = nextToken.termBuffer();\n      final int length = nextToken.termLength();\n      // If no characters actually require rewriting then we\n      // just return token as-is:\n      for(int i=0;i<length;i++) {\n        final char c = buffer[i];\n        if (c >= '\\u00c0' && c <= '\\uFB06') {\n          removeAccents(buffer, length);\n          nextToken.setTermBuffer(output, 0, outputPos);\n          break;\n        }\n      }\n      return nextToken;\n    } else\n      return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec8b5a20a12931b8d7e616c79c5248ae06cc5568","date":1248471948,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter#next(Token).mjava","pathOld":"src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter#next(Token).mjava","sourceNew":"  /** @deprecated Will be removed in Lucene 3.0. This method is final, as it should\n   * not be overridden. Delegates to the backwards compatibility layer. */\n  public final Token next(final Token reusableToken) throws java.io.IOException {\n    return super.next(reusableToken);\n  }\n\n","sourceOld":"  /** @deprecated */\n  public final Token next(final Token reusableToken) throws java.io.IOException {\n    assert reusableToken != null;\n    Token nextToken = input.next(reusableToken);\n    if (nextToken != null) {\n      final char[] buffer = nextToken.termBuffer();\n      final int length = nextToken.termLength();\n      // If no characters actually require rewriting then we\n      // just return token as-is:\n      for(int i=0;i<length;i++) {\n        final char c = buffer[i];\n        if (c >= '\\u00c0' && c <= '\\uFB06') {\n          removeAccents(buffer, length);\n          nextToken.setTermBuffer(output, 0, outputPos);\n          break;\n        }\n      }\n      return nextToken;\n    } else\n      return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"439b0fe2f799d1c722151e88e32bdefad8d34ebe","date":1255282509,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter#next(Token).mjava","sourceNew":null,"sourceOld":"  /** @deprecated Will be removed in Lucene 3.0. This method is final, as it should\n   * not be overridden. Delegates to the backwards compatibility layer. */\n  public final Token next(final Token reusableToken) throws java.io.IOException {\n    return super.next(reusableToken);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["d2d5b3a60e3d67d049091d4cf0d641fd1f5ba564"],"6864413dbc0c12104c978c05456f3da1d45adb03":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2d5b3a60e3d67d049091d4cf0d641fd1f5ba564":["ead9fa01724ec775f9b56ac4ccfa977bec6ec066"],"439b0fe2f799d1c722151e88e32bdefad8d34ebe":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"ead9fa01724ec775f9b56ac4ccfa977bec6ec066":["6864413dbc0c12104c978c05456f3da1d45adb03"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["439b0fe2f799d1c722151e88e32bdefad8d34ebe"],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"]},"commit2Childs":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"6864413dbc0c12104c978c05456f3da1d45adb03":["ead9fa01724ec775f9b56ac4ccfa977bec6ec066"],"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6864413dbc0c12104c978c05456f3da1d45adb03"],"d2d5b3a60e3d67d049091d4cf0d641fd1f5ba564":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"439b0fe2f799d1c722151e88e32bdefad8d34ebe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ead9fa01724ec775f9b56ac4ccfa977bec6ec066":["d2d5b3a60e3d67d049091d4cf0d641fd1f5ba564"],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["439b0fe2f799d1c722151e88e32bdefad8d34ebe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}