{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase).mjava","sourceNew":"  public BlockTermsWriter(TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state, PostingsWriterBase postingsWriter)\n      throws IOException {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    out = state.directory.createOutput(termsFileName, state.context);\n    boolean success = false;\n    try {\n      fieldInfos = state.fieldInfos;\n      writeHeader(out);\n      currentField = null;\n      this.postingsWriter = postingsWriter;\n      // segment = state.segmentName;\n      \n      //System.out.println(\"BTW.init seg=\" + state.segmentName);\n      \n      postingsWriter.start(out); // have consumer write its format/header\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":"  public BlockTermsWriter(TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state, PostingsWriterBase postingsWriter)\n      throws IOException {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    out = state.directory.createOutput(termsFileName, state.context);\n    boolean success = false;\n    try {\n      fieldInfos = state.fieldInfos;\n      writeHeader(out);\n      currentField = null;\n      this.postingsWriter = postingsWriter;\n      // segment = state.segmentName;\n      \n      //System.out.println(\"BTW.init seg=\" + state.segmentName);\n      \n      postingsWriter.start(out); // have consumer write its format/header\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"038e2a9b07e2f8ae58336613cea227bf8b973484","date":1346850972,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase).mjava","sourceNew":"  public BlockTermsWriter(TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state, PostingsWriterBase postingsWriter)\n      throws IOException {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    out = state.directory.createOutput(termsFileName, state.context);\n    boolean success = false;\n    try {\n      fieldInfos = state.fieldInfos;\n      writeHeader(out);\n      currentField = null;\n      this.postingsWriter = postingsWriter;\n      // segment = state.segmentName;\n      \n      //System.out.println(\"BTW.init seg=\" + state.segmentName);\n      \n      postingsWriter.start(out); // have consumer write its format/header\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":"  public BlockTermsWriter(TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state, PostingsWriterBase postingsWriter)\n      throws IOException {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    out = state.directory.createOutput(termsFileName, state.context);\n    boolean success = false;\n    try {\n      fieldInfos = state.fieldInfos;\n      writeHeader(out);\n      currentField = null;\n      this.postingsWriter = postingsWriter;\n      // segment = state.segmentName;\n      \n      //System.out.println(\"BTW.init seg=\" + state.segmentName);\n      \n      postingsWriter.start(out); // have consumer write its format/header\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"038e2a9b07e2f8ae58336613cea227bf8b973484":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"038e2a9b07e2f8ae58336613cea227bf8b973484":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}