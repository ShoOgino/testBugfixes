{"path":"solr/core/src/java/org/apache/solr/search/Grouping#Grouping(SolrIndexSearcher,SolrIndexSearcher.QueryResult,SolrIndexSearcher.QueryCommand,boolean,int,boolean).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#Grouping(SolrIndexSearcher,SolrIndexSearcher.QueryResult,SolrIndexSearcher.QueryCommand,boolean,int,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping#Grouping(SolrIndexSearcher,SolrIndexSearcher.QueryResult,SolrIndexSearcher.QueryCommand,boolean,int,boolean).mjava","sourceNew":"  /**\n   * @param searcher\n   * @param qr\n   * @param cmd\n   * @param cacheSecondPassSearch Whether to cache the documents and scores from the first pass search for the second\n   *                              pass search.\n   * @param maxDocsPercentageToCache The maximum number of documents in a percentage relative from maxdoc\n   *                                 that is allowed in the cache. When this threshold is met,\n   *                                 the cache is not used in the second pass search.\n   */\n  public Grouping(SolrIndexSearcher searcher,\n                  SolrIndexSearcher.QueryResult qr,\n                  SolrIndexSearcher.QueryCommand cmd,\n                  boolean cacheSecondPassSearch,\n                  int maxDocsPercentageToCache,\n                  boolean main) {\n    this.searcher = searcher;\n    this.qr = qr;\n    this.cmd = cmd;\n    this.cacheSecondPassSearch = cacheSecondPassSearch;\n    this.maxDocsPercentageToCache = maxDocsPercentageToCache;\n    this.main = main;\n  }\n\n","sourceOld":"  /**\n   * @param searcher\n   * @param qr\n   * @param cmd\n   * @param cacheSecondPassSearch Whether to cache the documents and scores from the first pass search for the second\n   *                              pass search.\n   * @param maxDocsPercentageToCache The maximum number of documents in a percentage relative from maxdoc\n   *                                 that is allowed in the cache. When this threshold is met,\n   *                                 the cache is not used in the second pass search.\n   */\n  public Grouping(SolrIndexSearcher searcher,\n                  SolrIndexSearcher.QueryResult qr,\n                  SolrIndexSearcher.QueryCommand cmd,\n                  boolean cacheSecondPassSearch,\n                  int maxDocsPercentageToCache,\n                  boolean main) {\n    this.searcher = searcher;\n    this.qr = qr;\n    this.cmd = cmd;\n    this.cacheSecondPassSearch = cacheSecondPassSearch;\n    this.maxDocsPercentageToCache = maxDocsPercentageToCache;\n    this.main = main;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#Grouping(SolrIndexSearcher,SolrIndexSearcher.QueryResult,SolrIndexSearcher.QueryCommand,boolean,int,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping#Grouping(SolrIndexSearcher,SolrIndexSearcher.QueryResult,SolrIndexSearcher.QueryCommand,boolean,int,boolean).mjava","sourceNew":"  /**\n   * @param searcher\n   * @param qr\n   * @param cmd\n   * @param cacheSecondPassSearch Whether to cache the documents and scores from the first pass search for the second\n   *                              pass search.\n   * @param maxDocsPercentageToCache The maximum number of documents in a percentage relative from maxdoc\n   *                                 that is allowed in the cache. When this threshold is met,\n   *                                 the cache is not used in the second pass search.\n   */\n  public Grouping(SolrIndexSearcher searcher,\n                  SolrIndexSearcher.QueryResult qr,\n                  SolrIndexSearcher.QueryCommand cmd,\n                  boolean cacheSecondPassSearch,\n                  int maxDocsPercentageToCache,\n                  boolean main) {\n    this.searcher = searcher;\n    this.qr = qr;\n    this.cmd = cmd;\n    this.cacheSecondPassSearch = cacheSecondPassSearch;\n    this.maxDocsPercentageToCache = maxDocsPercentageToCache;\n    this.main = main;\n  }\n\n","sourceOld":"  /**\n   * @param searcher\n   * @param qr\n   * @param cmd\n   * @param cacheSecondPassSearch Whether to cache the documents and scores from the first pass search for the second\n   *                              pass search.\n   * @param maxDocsPercentageToCache The maximum number of documents in a percentage relative from maxdoc\n   *                                 that is allowed in the cache. When this threshold is met,\n   *                                 the cache is not used in the second pass search.\n   */\n  public Grouping(SolrIndexSearcher searcher,\n                  SolrIndexSearcher.QueryResult qr,\n                  SolrIndexSearcher.QueryCommand cmd,\n                  boolean cacheSecondPassSearch,\n                  int maxDocsPercentageToCache,\n                  boolean main) {\n    this.searcher = searcher;\n    this.qr = qr;\n    this.cmd = cmd;\n    this.cacheSecondPassSearch = cacheSecondPassSearch;\n    this.maxDocsPercentageToCache = maxDocsPercentageToCache;\n    this.main = main;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#Grouping(SolrIndexSearcher,SolrIndexSearcher.QueryResult,SolrIndexSearcher.QueryCommand,boolean,int,boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping#Grouping(SolrIndexSearcher,SolrIndexSearcher.QueryResult,SolrIndexSearcher.QueryCommand,boolean,int,boolean).mjava","sourceNew":"  /**\n   * @param searcher\n   * @param qr\n   * @param cmd\n   * @param cacheSecondPassSearch Whether to cache the documents and scores from the first pass search for the second\n   *                              pass search.\n   * @param maxDocsPercentageToCache The maximum number of documents in a percentage relative from maxdoc\n   *                                 that is allowed in the cache. When this threshold is met,\n   *                                 the cache is not used in the second pass search.\n   */\n  public Grouping(SolrIndexSearcher searcher,\n                  SolrIndexSearcher.QueryResult qr,\n                  SolrIndexSearcher.QueryCommand cmd,\n                  boolean cacheSecondPassSearch,\n                  int maxDocsPercentageToCache,\n                  boolean main) {\n    this.searcher = searcher;\n    this.qr = qr;\n    this.cmd = cmd;\n    this.cacheSecondPassSearch = cacheSecondPassSearch;\n    this.maxDocsPercentageToCache = maxDocsPercentageToCache;\n    this.main = main;\n  }\n\n","sourceOld":"  /**\n   * @param searcher\n   * @param qr\n   * @param cmd\n   * @param cacheSecondPassSearch Whether to cache the documents and scores from the first pass search for the second\n   *                              pass search.\n   * @param maxDocsPercentageToCache The maximum number of documents in a percentage relative from maxdoc\n   *                                 that is allowed in the cache. When this threshold is met,\n   *                                 the cache is not used in the second pass search.\n   */\n  public Grouping(SolrIndexSearcher searcher,\n                  SolrIndexSearcher.QueryResult qr,\n                  SolrIndexSearcher.QueryCommand cmd,\n                  boolean cacheSecondPassSearch,\n                  int maxDocsPercentageToCache,\n                  boolean main) {\n    this.searcher = searcher;\n    this.qr = qr;\n    this.cmd = cmd;\n    this.cacheSecondPassSearch = cacheSecondPassSearch;\n    this.maxDocsPercentageToCache = maxDocsPercentageToCache;\n    this.main = main;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3738f7d06920ae25ab2884f4efd80c42e95d6271","date":1312707753,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#Grouping(SolrIndexSearcher,SolrIndexSearcher.QueryResult,SolrIndexSearcher.QueryCommand,boolean,int,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#Grouping(SolrIndexSearcher,SolrIndexSearcher.QueryResult,SolrIndexSearcher.QueryCommand,boolean,int,boolean).mjava","sourceNew":"  /**\n   * @param searcher\n   * @param qr\n   * @param cmd\n   * @param cacheSecondPassSearch    Whether to cache the documents and scores from the first pass search for the second\n   *                                 pass search.\n   * @param maxDocsPercentageToCache The maximum number of documents in a percentage relative from maxdoc\n   *                                 that is allowed in the cache. When this threshold is met,\n   *                                 the cache is not used in the second pass search.\n   */\n  public Grouping(SolrIndexSearcher searcher,\n                  SolrIndexSearcher.QueryResult qr,\n                  SolrIndexSearcher.QueryCommand cmd,\n                  boolean cacheSecondPassSearch,\n                  int maxDocsPercentageToCache,\n                  boolean main) {\n    this.searcher = searcher;\n    this.qr = qr;\n    this.cmd = cmd;\n    this.cacheSecondPassSearch = cacheSecondPassSearch;\n    this.maxDocsPercentageToCache = maxDocsPercentageToCache;\n    this.main = main;\n  }\n\n","sourceOld":"  /**\n   * @param searcher\n   * @param qr\n   * @param cmd\n   * @param cacheSecondPassSearch Whether to cache the documents and scores from the first pass search for the second\n   *                              pass search.\n   * @param maxDocsPercentageToCache The maximum number of documents in a percentage relative from maxdoc\n   *                                 that is allowed in the cache. When this threshold is met,\n   *                                 the cache is not used in the second pass search.\n   */\n  public Grouping(SolrIndexSearcher searcher,\n                  SolrIndexSearcher.QueryResult qr,\n                  SolrIndexSearcher.QueryCommand cmd,\n                  boolean cacheSecondPassSearch,\n                  int maxDocsPercentageToCache,\n                  boolean main) {\n    this.searcher = searcher;\n    this.qr = qr;\n    this.cmd = cmd;\n    this.cacheSecondPassSearch = cacheSecondPassSearch;\n    this.maxDocsPercentageToCache = maxDocsPercentageToCache;\n    this.main = main;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#Grouping(SolrIndexSearcher,SolrIndexSearcher.QueryResult,SolrIndexSearcher.QueryCommand,boolean,int,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#Grouping(SolrIndexSearcher,SolrIndexSearcher.QueryResult,SolrIndexSearcher.QueryCommand,boolean,int,boolean).mjava","sourceNew":"  /**\n   * @param cacheSecondPassSearch    Whether to cache the documents and scores from the first pass search for the second\n   *                                 pass search.\n   * @param maxDocsPercentageToCache The maximum number of documents in a percentage relative from maxdoc\n   *                                 that is allowed in the cache. When this threshold is met,\n   *                                 the cache is not used in the second pass search.\n   */\n  public Grouping(SolrIndexSearcher searcher,\n                  SolrIndexSearcher.QueryResult qr,\n                  SolrIndexSearcher.QueryCommand cmd,\n                  boolean cacheSecondPassSearch,\n                  int maxDocsPercentageToCache,\n                  boolean main) {\n    this.searcher = searcher;\n    this.qr = qr;\n    this.cmd = cmd;\n    this.cacheSecondPassSearch = cacheSecondPassSearch;\n    this.maxDocsPercentageToCache = maxDocsPercentageToCache;\n    this.main = main;\n  }\n\n","sourceOld":"  /**\n   * @param searcher\n   * @param qr\n   * @param cmd\n   * @param cacheSecondPassSearch    Whether to cache the documents and scores from the first pass search for the second\n   *                                 pass search.\n   * @param maxDocsPercentageToCache The maximum number of documents in a percentage relative from maxdoc\n   *                                 that is allowed in the cache. When this threshold is met,\n   *                                 the cache is not used in the second pass search.\n   */\n  public Grouping(SolrIndexSearcher searcher,\n                  SolrIndexSearcher.QueryResult qr,\n                  SolrIndexSearcher.QueryCommand cmd,\n                  boolean cacheSecondPassSearch,\n                  int maxDocsPercentageToCache,\n                  boolean main) {\n    this.searcher = searcher;\n    this.qr = qr;\n    this.cmd = cmd;\n    this.cacheSecondPassSearch = cacheSecondPassSearch;\n    this.maxDocsPercentageToCache = maxDocsPercentageToCache;\n    this.main = main;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#Grouping(SolrIndexSearcher,SolrIndexSearcher.QueryResult,SolrIndexSearcher.QueryCommand,boolean,int,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#Grouping(SolrIndexSearcher,SolrIndexSearcher.QueryResult,SolrIndexSearcher.QueryCommand,boolean,int,boolean).mjava","sourceNew":"  /**\n   * @param cacheSecondPassSearch    Whether to cache the documents and scores from the first pass search for the second\n   *                                 pass search.\n   * @param maxDocsPercentageToCache The maximum number of documents in a percentage relative from maxdoc\n   *                                 that is allowed in the cache. When this threshold is met,\n   *                                 the cache is not used in the second pass search.\n   */\n  public Grouping(SolrIndexSearcher searcher,\n                  SolrIndexSearcher.QueryResult qr,\n                  SolrIndexSearcher.QueryCommand cmd,\n                  boolean cacheSecondPassSearch,\n                  int maxDocsPercentageToCache,\n                  boolean main) {\n    this.searcher = searcher;\n    this.qr = qr;\n    this.cmd = cmd;\n    this.cacheSecondPassSearch = cacheSecondPassSearch;\n    this.maxDocsPercentageToCache = maxDocsPercentageToCache;\n    this.main = main;\n  }\n\n","sourceOld":"  /**\n   * @param cacheSecondPassSearch    Whether to cache the documents and scores from the first pass search for the second\n   *                                 pass search.\n   * @param maxDocsPercentageToCache The maximum number of documents in a percentage relative from maxdoc\n   *                                 that is allowed in the cache. When this threshold is met,\n   *                                 the cache is not used in the second pass search.\n   */\n  public Grouping(SolrIndexSearcher searcher,\n                  SolrIndexSearcher.QueryResult qr,\n                  SolrIndexSearcher.QueryCommand cmd,\n                  boolean cacheSecondPassSearch,\n                  int maxDocsPercentageToCache,\n                  boolean main) {\n    this.searcher = searcher;\n    this.qr = qr;\n    this.cmd = cmd;\n    this.cacheSecondPassSearch = cacheSecondPassSearch;\n    this.maxDocsPercentageToCache = maxDocsPercentageToCache;\n    this.main = main;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#Grouping(SolrIndexSearcher,SolrIndexSearcher.QueryResult,SolrIndexSearcher.QueryCommand,boolean,int,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#Grouping(SolrIndexSearcher,SolrIndexSearcher.QueryResult,SolrIndexSearcher.QueryCommand,boolean,int,boolean).mjava","sourceNew":"  /**\n   * @param cacheSecondPassSearch    Whether to cache the documents and scores from the first pass search for the second\n   *                                 pass search.\n   * @param maxDocsPercentageToCache The maximum number of documents in a percentage relative from maxdoc\n   *                                 that is allowed in the cache. When this threshold is met,\n   *                                 the cache is not used in the second pass search.\n   */\n  public Grouping(SolrIndexSearcher searcher,\n                  SolrIndexSearcher.QueryResult qr,\n                  SolrIndexSearcher.QueryCommand cmd,\n                  boolean cacheSecondPassSearch,\n                  int maxDocsPercentageToCache,\n                  boolean main) {\n    this.searcher = searcher;\n    this.qr = qr;\n    this.cmd = cmd;\n    this.cacheSecondPassSearch = cacheSecondPassSearch;\n    this.maxDocsPercentageToCache = maxDocsPercentageToCache;\n    this.main = main;\n  }\n\n","sourceOld":"  /**\n   * @param cacheSecondPassSearch    Whether to cache the documents and scores from the first pass search for the second\n   *                                 pass search.\n   * @param maxDocsPercentageToCache The maximum number of documents in a percentage relative from maxdoc\n   *                                 that is allowed in the cache. When this threshold is met,\n   *                                 the cache is not used in the second pass search.\n   */\n  public Grouping(SolrIndexSearcher searcher,\n                  SolrIndexSearcher.QueryResult qr,\n                  SolrIndexSearcher.QueryCommand cmd,\n                  boolean cacheSecondPassSearch,\n                  int maxDocsPercentageToCache,\n                  boolean main) {\n    this.searcher = searcher;\n    this.qr = qr;\n    this.cmd = cmd;\n    this.cacheSecondPassSearch = cacheSecondPassSearch;\n    this.maxDocsPercentageToCache = maxDocsPercentageToCache;\n    this.main = main;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac9de183adbc9483681f275ac1e2d92ed19f52e1","date":1452414626,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#Grouping(SolrIndexSearcher,QueryResult,QueryCommand,boolean,int,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#Grouping(SolrIndexSearcher,SolrIndexSearcher.QueryResult,SolrIndexSearcher.QueryCommand,boolean,int,boolean).mjava","sourceNew":"  /**\n   * @param cacheSecondPassSearch    Whether to cache the documents and scores from the first pass search for the second\n   *                                 pass search.\n   * @param maxDocsPercentageToCache The maximum number of documents in a percentage relative from maxdoc\n   *                                 that is allowed in the cache. When this threshold is met,\n   *                                 the cache is not used in the second pass search.\n   */\n  public Grouping(SolrIndexSearcher searcher,\n                  QueryResult qr,\n                  QueryCommand cmd,\n                  boolean cacheSecondPassSearch,\n                  int maxDocsPercentageToCache,\n                  boolean main) {\n    this.searcher = searcher;\n    this.qr = qr;\n    this.cmd = cmd;\n    this.cacheSecondPassSearch = cacheSecondPassSearch;\n    this.maxDocsPercentageToCache = maxDocsPercentageToCache;\n    this.main = main;\n  }\n\n","sourceOld":"  /**\n   * @param cacheSecondPassSearch    Whether to cache the documents and scores from the first pass search for the second\n   *                                 pass search.\n   * @param maxDocsPercentageToCache The maximum number of documents in a percentage relative from maxdoc\n   *                                 that is allowed in the cache. When this threshold is met,\n   *                                 the cache is not used in the second pass search.\n   */\n  public Grouping(SolrIndexSearcher searcher,\n                  SolrIndexSearcher.QueryResult qr,\n                  SolrIndexSearcher.QueryCommand cmd,\n                  boolean cacheSecondPassSearch,\n                  int maxDocsPercentageToCache,\n                  boolean main) {\n    this.searcher = searcher;\n    this.qr = qr;\n    this.cmd = cmd;\n    this.cacheSecondPassSearch = cacheSecondPassSearch;\n    this.maxDocsPercentageToCache = maxDocsPercentageToCache;\n    this.main = main;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["3738f7d06920ae25ab2884f4efd80c42e95d6271"],"3738f7d06920ae25ab2884f4efd80c42e95d6271":["c26f00b574427b55127e869b935845554afde1fa"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ac9de183adbc9483681f275ac1e2d92ed19f52e1":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ac9de183adbc9483681f275ac1e2d92ed19f52e1"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"3738f7d06920ae25ab2884f4efd80c42e95d6271":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["3738f7d06920ae25ab2884f4efd80c42e95d6271"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","ac9de183adbc9483681f275ac1e2d92ed19f52e1"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ac9de183adbc9483681f275ac1e2d92ed19f52e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}