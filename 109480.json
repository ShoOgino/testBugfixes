{"path":"backwards/src/test/org/apache/lucene/search/TestTermRangeFilter#testFarsi().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/search/TestTermRangeFilter#testFarsi().mjava","pathOld":"/dev/null","sourceNew":"    public void testFarsi() throws Exception {\n            \n        /* build an index */\n        RAMDirectory farsiIndex = new RAMDirectory();\n        IndexWriter writer = new IndexWriter(farsiIndex, new SimpleAnalyzer(), T, \n                                             IndexWriter.MaxFieldLength.LIMITED);\n        Document doc = new Document();\n        doc.add(new Field(\"content\",\"\\u0633\\u0627\\u0628\", \n                          Field.Store.YES, Field.Index.NOT_ANALYZED));\n        doc.add(new Field(\"body\", \"body\",\n                          Field.Store.YES, Field.Index.NOT_ANALYZED));\n        writer.addDocument(doc);\n            \n        writer.optimize();\n        writer.close();\n\n        IndexReader reader = IndexReader.open(farsiIndex, true);\n        IndexSearcher search = new IndexSearcher(reader);\n        Query q = new TermQuery(new Term(\"body\",\"body\"));\n\n        // Neither Java 1.4.2 nor 1.5.0 has Farsi Locale collation available in\n        // RuleBasedCollator.  However, the Arabic Locale seems to order the Farsi\n        // characters properly.\n        Collator collator = Collator.getInstance(new Locale(\"ar\"));\n        \n        // Unicode order would include U+0633 in [ U+062F - U+0698 ], but Farsi\n        // orders the U+0698 character before the U+0633 character, so the single\n        // index Term below should NOT be returned by a TermRangeFilter with a Farsi\n        // Collator (or an Arabic one for the case when Farsi is not supported).\n        int numHits = search.search\n            (q, new TermRangeFilter(\"content\", \"\\u062F\", \"\\u0698\", T, T, collator), 1000).totalHits;\n        assertEquals(\"The index Term should not be included.\", 0, numHits);\n\n        numHits = search.search\n            (q, new TermRangeFilter(\"content\", \"\\u0633\", \"\\u0638\", T, T, collator), 1000).totalHits;\n        assertEquals(\"The index Term should be included.\", 1, numHits);\n        search.close();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/TestTermRangeFilter#testFarsi().mjava","pathOld":"backwards/src/test/org/apache/lucene/search/TestTermRangeFilter#testFarsi().mjava","sourceNew":"    public void testFarsi() throws Exception {\n            \n        /* build an index */\n        RAMDirectory farsiIndex = new RAMDirectory();\n        IndexWriter writer = new IndexWriter(farsiIndex, new SimpleAnalyzer(), T, \n                                             IndexWriter.MaxFieldLength.LIMITED);\n        Document doc = new Document();\n        doc.add(new Field(\"content\",\"\\u0633\\u0627\\u0628\", \n                          Field.Store.YES, Field.Index.NOT_ANALYZED));\n        doc.add(new Field(\"body\", \"body\",\n                          Field.Store.YES, Field.Index.NOT_ANALYZED));\n        writer.addDocument(doc);\n            \n        writer.optimize();\n        writer.close();\n\n        IndexReader reader = IndexReader.open(farsiIndex, true);\n        IndexSearcher search = new IndexSearcher(reader);\n        Query q = new TermQuery(new Term(\"body\",\"body\"));\n\n        // Neither Java 1.4.2 nor 1.5.0 has Farsi Locale collation available in\n        // RuleBasedCollator.  However, the Arabic Locale seems to order the Farsi\n        // characters properly.\n        Collator collator = Collator.getInstance(new Locale(\"ar\"));\n        \n        // Unicode order would include U+0633 in [ U+062F - U+0698 ], but Farsi\n        // orders the U+0698 character before the U+0633 character, so the single\n        // index Term below should NOT be returned by a TermRangeFilter with a Farsi\n        // Collator (or an Arabic one for the case when Farsi is not supported).\n        int numHits = search.search\n            (q, new TermRangeFilter(\"content\", \"\\u062F\", \"\\u0698\", T, T, collator), 1000).totalHits;\n        assertEquals(\"The index Term should not be included.\", 0, numHits);\n\n        numHits = search.search\n            (q, new TermRangeFilter(\"content\", \"\\u0633\", \"\\u0638\", T, T, collator), 1000).totalHits;\n        assertEquals(\"The index Term should be included.\", 1, numHits);\n        search.close();\n    }\n\n","sourceOld":"    public void testFarsi() throws Exception {\n            \n        /* build an index */\n        RAMDirectory farsiIndex = new RAMDirectory();\n        IndexWriter writer = new IndexWriter(farsiIndex, new SimpleAnalyzer(), T, \n                                             IndexWriter.MaxFieldLength.LIMITED);\n        Document doc = new Document();\n        doc.add(new Field(\"content\",\"\\u0633\\u0627\\u0628\", \n                          Field.Store.YES, Field.Index.NOT_ANALYZED));\n        doc.add(new Field(\"body\", \"body\",\n                          Field.Store.YES, Field.Index.NOT_ANALYZED));\n        writer.addDocument(doc);\n            \n        writer.optimize();\n        writer.close();\n\n        IndexReader reader = IndexReader.open(farsiIndex, true);\n        IndexSearcher search = new IndexSearcher(reader);\n        Query q = new TermQuery(new Term(\"body\",\"body\"));\n\n        // Neither Java 1.4.2 nor 1.5.0 has Farsi Locale collation available in\n        // RuleBasedCollator.  However, the Arabic Locale seems to order the Farsi\n        // characters properly.\n        Collator collator = Collator.getInstance(new Locale(\"ar\"));\n        \n        // Unicode order would include U+0633 in [ U+062F - U+0698 ], but Farsi\n        // orders the U+0698 character before the U+0633 character, so the single\n        // index Term below should NOT be returned by a TermRangeFilter with a Farsi\n        // Collator (or an Arabic one for the case when Farsi is not supported).\n        int numHits = search.search\n            (q, new TermRangeFilter(\"content\", \"\\u062F\", \"\\u0698\", T, T, collator), 1000).totalHits;\n        assertEquals(\"The index Term should not be included.\", 0, numHits);\n\n        numHits = search.search\n            (q, new TermRangeFilter(\"content\", \"\\u0633\", \"\\u0638\", T, T, collator), 1000).totalHits;\n        assertEquals(\"The index Term should be included.\", 1, numHits);\n        search.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}