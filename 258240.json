{"path":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#createPostingsArray(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#createPostingsArray(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#createPostingsArray(int).mjava","sourceNew":"  @Override\n  ParallelPostingsArray createPostingsArray(int size) {\n    return new FreqProxPostingsArray(size, writeFreq, writeProx, writeOffsets);\n  }\n\n","sourceOld":"  @Override\n  ParallelPostingsArray createPostingsArray(int size) {\n    return new FreqProxPostingsArray(size, writeFreq, writeProx, writeOffsets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83ede60c0b5bb96ad193414bbd663193b56689b3","date":1338331478,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#createPostingsArray(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#createPostingsArray(int).mjava","sourceNew":"  @Override\n  ParallelPostingsArray createPostingsArray(int size) {\n    return new FreqProxPostingsArray(size, hasFreq, hasProx, hasOffsets);\n  }\n\n","sourceOld":"  @Override\n  ParallelPostingsArray createPostingsArray(int size) {\n    return new FreqProxPostingsArray(size, writeFreq, writeProx, writeOffsets);\n  }\n\n","bugFix":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#createPostingsArray(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#createPostingsArray(int).mjava","sourceNew":"  @Override\n  ParallelPostingsArray createPostingsArray(int size) {\n    IndexOptions indexOptions = fieldInfo.getIndexOptions();\n    assert indexOptions != null;\n    boolean hasFreq = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n    boolean hasProx = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n    boolean hasOffsets = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n    return new FreqProxPostingsArray(size, hasFreq, hasProx, hasOffsets);\n  }\n\n","sourceOld":"  @Override\n  ParallelPostingsArray createPostingsArray(int size) {\n    return new FreqProxPostingsArray(size, hasFreq, hasProx, hasOffsets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#createPostingsArray(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#createPostingsArray(int).mjava","sourceNew":"  @Override\n  ParallelPostingsArray createPostingsArray(int size) {\n    IndexOptions indexOptions = fieldInfo.getIndexOptions();\n    assert indexOptions != null;\n    boolean hasFreq = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n    boolean hasProx = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n    boolean hasOffsets = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n    return new FreqProxPostingsArray(size, hasFreq, hasProx, hasOffsets);\n  }\n\n","sourceOld":"  @Override\n  ParallelPostingsArray createPostingsArray(int size) {\n    return new FreqProxPostingsArray(size, hasFreq, hasProx, hasOffsets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#createPostingsArray(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#createPostingsArray(int).mjava","sourceNew":"  @Override\n  ParallelPostingsArray createPostingsArray(int size) {\n    IndexOptions indexOptions = fieldInfo.getIndexOptions();\n    assert indexOptions != null;\n    boolean hasFreq = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n    boolean hasProx = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n    boolean hasOffsets = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n    return new FreqProxPostingsArray(size, hasFreq, hasProx, hasOffsets);\n  }\n\n","sourceOld":"  @Override\n  ParallelPostingsArray createPostingsArray(int size) {\n    return new FreqProxPostingsArray(size, hasFreq, hasProx, hasOffsets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2bb2842e561df4e8e9ad89010605fc86ac265465","date":1414768208,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#createPostingsArray(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#createPostingsArray(int).mjava","sourceNew":"  @Override\n  ParallelPostingsArray createPostingsArray(int size) {\n    IndexOptions indexOptions = fieldInfo.getIndexOptions();\n    assert indexOptions != IndexOptions.NO;\n    boolean hasFreq = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n    boolean hasProx = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n    boolean hasOffsets = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n    return new FreqProxPostingsArray(size, hasFreq, hasProx, hasOffsets);\n  }\n\n","sourceOld":"  @Override\n  ParallelPostingsArray createPostingsArray(int size) {\n    IndexOptions indexOptions = fieldInfo.getIndexOptions();\n    assert indexOptions != null;\n    boolean hasFreq = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n    boolean hasProx = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n    boolean hasOffsets = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n    return new FreqProxPostingsArray(size, hasFreq, hasProx, hasOffsets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f95ce1375367b92d411a06175eab3915fe93c6bc","date":1414788502,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#createPostingsArray(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#createPostingsArray(int).mjava","sourceNew":"  @Override\n  ParallelPostingsArray createPostingsArray(int size) {\n    IndexOptions indexOptions = fieldInfo.getIndexOptions();\n    assert indexOptions != IndexOptions.NONE;\n    boolean hasFreq = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n    boolean hasProx = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n    boolean hasOffsets = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n    return new FreqProxPostingsArray(size, hasFreq, hasProx, hasOffsets);\n  }\n\n","sourceOld":"  @Override\n  ParallelPostingsArray createPostingsArray(int size) {\n    IndexOptions indexOptions = fieldInfo.getIndexOptions();\n    assert indexOptions != IndexOptions.NO;\n    boolean hasFreq = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n    boolean hasProx = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n    boolean hasOffsets = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n    return new FreqProxPostingsArray(size, hasFreq, hasProx, hasOffsets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3cc3fa1ecad75b99ec55169e44628808f9866ad","date":1592311545,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#createPostingsArray(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#createPostingsArray(int).mjava","sourceNew":"  @Override\n  ParallelPostingsArray createPostingsArray(int size) {\n    boolean hasFreq = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n    boolean hasProx = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n    boolean hasOffsets = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n    return new FreqProxPostingsArray(size, hasFreq, hasProx, hasOffsets);\n  }\n\n","sourceOld":"  @Override\n  ParallelPostingsArray createPostingsArray(int size) {\n    IndexOptions indexOptions = fieldInfo.getIndexOptions();\n    assert indexOptions != IndexOptions.NONE;\n    boolean hasFreq = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;\n    boolean hasProx = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;\n    boolean hasOffsets = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n    return new FreqProxPostingsArray(size, hasFreq, hasProx, hasOffsets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["83ede60c0b5bb96ad193414bbd663193b56689b3","52c7e49be259508735752fba88085255014a6ecf"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["83ede60c0b5bb96ad193414bbd663193b56689b3","3394716f52b34ab259ad5247e7595d9f9db6e935"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83ede60c0b5bb96ad193414bbd663193b56689b3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2bb2842e561df4e8e9ad89010605fc86ac265465":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"52c7e49be259508735752fba88085255014a6ecf":["83ede60c0b5bb96ad193414bbd663193b56689b3"],"d3cc3fa1ecad75b99ec55169e44628808f9866ad":["f95ce1375367b92d411a06175eab3915fe93c6bc"],"f95ce1375367b92d411a06175eab3915fe93c6bc":["2bb2842e561df4e8e9ad89010605fc86ac265465"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3cc3fa1ecad75b99ec55169e44628808f9866ad"]},"commit2Childs":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","2bb2842e561df4e8e9ad89010605fc86ac265465"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["83ede60c0b5bb96ad193414bbd663193b56689b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"83ede60c0b5bb96ad193414bbd663193b56689b3":["3394716f52b34ab259ad5247e7595d9f9db6e935","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","52c7e49be259508735752fba88085255014a6ecf"],"2bb2842e561df4e8e9ad89010605fc86ac265465":["f95ce1375367b92d411a06175eab3915fe93c6bc"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"d3cc3fa1ecad75b99ec55169e44628808f9866ad":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f95ce1375367b92d411a06175eab3915fe93c6bc":["d3cc3fa1ecad75b99ec55169e44628808f9866ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}