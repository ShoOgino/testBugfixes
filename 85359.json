{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/en/TestPorterStemFilter#testPorterStemFilter().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/en/TestPorterStemFilter#testPorterStemFilter().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/en/TestPorterStemFilter#testPorterStemFilter().mjava","sourceNew":"  /**\n   * Run the stemmer against all strings in voc.txt\n   * The output should be the same as the string in output.txt\n   */\n  public void testPorterStemFilter() throws Exception {\n    assertVocabulary(a, getDataFile(\"porterTestData.zip\"), \"voc.txt\", \"output.txt\");\n  }\n\n","sourceOld":"  /**\n   * Run the stemmer against all strings in voc.txt\n   * The output should be the same as the string in output.txt\n   */\n  public void testPorterStemFilter() throws Exception {\n    assertVocabulary(a, getDataFile(\"porterTestData.zip\"), \"voc.txt\", \"output.txt\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/en/TestPorterStemFilter#testPorterStemFilter().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/en/TestPorterStemFilter#testPorterStemFilter().mjava","sourceNew":"  /**\n   * Run the stemmer against all strings in voc.txt\n   * The output should be the same as the string in output.txt\n   */\n  public void testPorterStemFilter() throws Exception {\n    assertVocabulary(a, getDataPath(\"porterTestData.zip\"), \"voc.txt\", \"output.txt\");\n  }\n\n","sourceOld":"  /**\n   * Run the stemmer against all strings in voc.txt\n   * The output should be the same as the string in output.txt\n   */\n  public void testPorterStemFilter() throws Exception {\n    assertVocabulary(a, getDataFile(\"porterTestData.zip\"), \"voc.txt\", \"output.txt\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4abec28b874149a7223e32cc7a01704c27790de"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["f4abec28b874149a7223e32cc7a01704c27790de"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"f4abec28b874149a7223e32cc7a01704c27790de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}