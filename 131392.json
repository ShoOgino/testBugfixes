{"path":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/StandardQueryParser#setRangeCollator(Collator).mjava","commits":[{"id":"e8a848e758754282137f42bf85793c278e250390","date":1249640668,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/StandardQueryParser#setRangeCollator(Collator).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/OriginalQueryParserHelper#setRangeCollator(Collator).mjava","sourceNew":"  /**\n   * Sets the collator used to determine index term inclusion in ranges for\n   * RangeQuerys.\n   * <p/>\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null collator\n   * using this method will cause every single index Term in the Field\n   * referenced by lowerTerm and/or upperTerm to be examined. Depending on the\n   * number of index Terms in this Field, the operation could be very slow.\n   * \n   * @param collator\n   *          the collator to use when constructing {@link RangeQueryNode}s\n   */\n  public void setRangeCollator(Collator collator) {\n    RangeCollatorAttribute attr = (RangeCollatorAttribute) getQueryConfigHandler().getAttribute(RangeCollatorAttribute.class);\n    attr.setDateResolution(collator);\n  }\n\n","sourceOld":"  /**\n   * Sets the collator used to determine index term inclusion in ranges for\n   * RangeQuerys.\n   * <p/>\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null collator\n   * using this method will cause every single index Term in the Field\n   * referenced by lowerTerm and/or upperTerm to be examined. Depending on the\n   * number of index Terms in this Field, the operation could be very slow.\n   * \n   * @param collator\n   *          the collator to use when constructing {@link RangeQueryNode}s\n   */\n  public void setRangeCollator(Collator collator) {\n    RangeCollatorAttribute attr = (RangeCollatorAttribute) getQueryConfigHandler().getAttribute(RangeCollatorAttribute.class);\n    attr.setDateResolution(collator);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d78f014fded44fbde905f4f84cdc21907b371e8","date":1254383623,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/StandardQueryParser#setRangeCollator(Collator).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/StandardQueryParser#setRangeCollator(Collator).mjava","sourceNew":"  /**\n   * Sets the collator used to determine index term inclusion in ranges for\n   * RangeQuerys.\n   * <p/>\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null collator\n   * using this method will cause every single index Term in the Field\n   * referenced by lowerTerm and/or upperTerm to be examined. Depending on the\n   * number of index Terms in this Field, the operation could be very slow.\n   * \n   * @param collator\n   *          the collator to use when constructing {@link RangeQueryNode}s\n   */\n  public void setRangeCollator(Collator collator) {\n    RangeCollatorAttribute attr = getQueryConfigHandler().getAttribute(RangeCollatorAttribute.class);\n    attr.setDateResolution(collator);\n  }\n\n","sourceOld":"  /**\n   * Sets the collator used to determine index term inclusion in ranges for\n   * RangeQuerys.\n   * <p/>\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null collator\n   * using this method will cause every single index Term in the Field\n   * referenced by lowerTerm and/or upperTerm to be examined. Depending on the\n   * number of index Terms in this Field, the operation could be very slow.\n   * \n   * @param collator\n   *          the collator to use when constructing {@link RangeQueryNode}s\n   */\n  public void setRangeCollator(Collator collator) {\n    RangeCollatorAttribute attr = (RangeCollatorAttribute) getQueryConfigHandler().getAttribute(RangeCollatorAttribute.class);\n    attr.setDateResolution(collator);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/StandardQueryParser#setRangeCollator(Collator).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/StandardQueryParser#setRangeCollator(Collator).mjava","sourceNew":"  /**\n   * Sets the collator used to determine index term inclusion in ranges for\n   * RangeQuerys.\n   * <p/>\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null collator\n   * using this method will cause every single index Term in the Field\n   * referenced by lowerTerm and/or upperTerm to be examined. Depending on the\n   * number of index Terms in this Field, the operation could be very slow.\n   * \n   * @param collator\n   *          the collator to use when constructing {@link RangeQueryNode}s\n   */\n  public void setRangeCollator(Collator collator) {\n    RangeCollatorAttribute attr = getQueryConfigHandler().getAttribute(RangeCollatorAttribute.class);\n    attr.setDateResolution(collator);\n  }\n\n","sourceOld":"  /**\n   * Sets the collator used to determine index term inclusion in ranges for\n   * RangeQuerys.\n   * <p/>\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null collator\n   * using this method will cause every single index Term in the Field\n   * referenced by lowerTerm and/or upperTerm to be examined. Depending on the\n   * number of index Terms in this Field, the operation could be very slow.\n   * \n   * @param collator\n   *          the collator to use when constructing {@link RangeQueryNode}s\n   */\n  public void setRangeCollator(Collator collator) {\n    RangeCollatorAttribute attr = getQueryConfigHandler().getAttribute(RangeCollatorAttribute.class);\n    attr.setDateResolution(collator);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e8a848e758754282137f42bf85793c278e250390":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8d78f014fded44fbde905f4f84cdc21907b371e8":["e8a848e758754282137f42bf85793c278e250390"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8d78f014fded44fbde905f4f84cdc21907b371e8"]},"commit2Childs":{"e8a848e758754282137f42bf85793c278e250390":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e8a848e758754282137f42bf85793c278e250390"],"8d78f014fded44fbde905f4f84cdc21907b371e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}