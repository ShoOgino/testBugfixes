{"path":"contrib/miscellaneous/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#parse(String).mjava","commits":[{"id":"e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a","date":1114594353,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/miscellaneous/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#parse(String).mjava","pathOld":"src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#parse(String).mjava","sourceNew":"  /** Parses a query string, returning a {@link org.apache.lucene.search.Query}.\n   *  @param expression  the query string to be parsed.\n   *  @throws ParseException if the parsing fails\n   */\n  public Query parse(String expression) throws ParseException {\n    // optimize empty query to be empty BooleanQuery\n    if (expression == null || expression.trim().length() == 0) {\n      return new BooleanQuery();\n    }\n\n    ReInit(new FastCharStream(new StringReader(expression)));\n    try {\n      Query query = Query(field);\n      return (query != null) ? query : new BooleanQuery();\n    }\n    catch (TokenMgrError tme) {\n      throw new ParseException(tme.getMessage());\n    }\n    catch (BooleanQuery.TooManyClauses tmc) {\n      throw new ParseException(\"Too many boolean clauses\");\n    }\n  }\n\n","sourceOld":"  /** Parses a query string, returning a {@link org.apache.lucene.search.Query}.\n   *  @param expression  the query string to be parsed.\n   *  @throws ParseException if the parsing fails\n   */\n  public Query parse(String expression) throws ParseException {\n    // optimize empty query to be empty BooleanQuery\n    if (expression == null || expression.trim().length() == 0) {\n      return new BooleanQuery();\n    }\n\n    ReInit(new FastCharStream(new StringReader(expression)));\n    try {\n      Query query = Query(field);\n      return (query != null) ? query : new BooleanQuery();\n    }\n    catch (TokenMgrError tme) {\n      throw new ParseException(tme.getMessage());\n    }\n    catch (BooleanQuery.TooManyClauses tmc) {\n      throw new ParseException(\"Too many boolean clauses\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48bedd31c61edafb8baaff4bcbcac19449fb7c3a","date":1251468037,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#parse(String).mjava","pathOld":"contrib/miscellaneous/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#parse(String).mjava","sourceNew":"  /** Parses a query string, returning a {@link org.apache.lucene.search.Query}.\n   *  @param expression  the query string to be parsed.\n   *  @throws ParseException if the parsing fails\n   */\n  public Query parse(String expression) throws ParseException {\n    // optimize empty query to be empty BooleanQuery\n    if (expression == null || expression.trim().length() == 0) {\n      return new BooleanQuery();\n    }\n\n    ReInit(new FastCharStream(new StringReader(expression)));\n    try {\n      Query query = Query(field);\n      return (query != null) ? query : new BooleanQuery();\n    }\n    catch (TokenMgrError tme) {\n      throw new ParseException(tme.getMessage());\n    }\n    catch (BooleanQuery.TooManyClauses tmc) {\n      throw new ParseException(\"Too many boolean clauses\");\n    }\n  }\n\n","sourceOld":"  /** Parses a query string, returning a {@link org.apache.lucene.search.Query}.\n   *  @param expression  the query string to be parsed.\n   *  @throws ParseException if the parsing fails\n   */\n  public Query parse(String expression) throws ParseException {\n    // optimize empty query to be empty BooleanQuery\n    if (expression == null || expression.trim().length() == 0) {\n      return new BooleanQuery();\n    }\n\n    ReInit(new FastCharStream(new StringReader(expression)));\n    try {\n      Query query = Query(field);\n      return (query != null) ? query : new BooleanQuery();\n    }\n    catch (TokenMgrError tme) {\n      throw new ParseException(tme.getMessage());\n    }\n    catch (BooleanQuery.TooManyClauses tmc) {\n      throw new ParseException(\"Too many boolean clauses\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a"],"e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"]},"commit2Childs":{"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}