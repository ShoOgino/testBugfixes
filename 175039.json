{"path":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_postlude().mjava","commits":[{"id":"a5aa159e1ac4009d23cea92797d3804da4f5e7ad","date":1264041909,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_postlude().mjava","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_postlude().mjava","sourceNew":"        private boolean r_postlude() {\n            int v_1;\n            int v_2;\n            // (, line 203\n            // Boolean test Y_found, line 203\n            if (!(B_Y_found))\n            {\n                return false;\n            }\n            // repeat, line 203\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // (, line 203\n                    // goto, line 203\n                    golab2: while(true)\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // (, line 203\n                            // [, line 203\n                            bra = cursor;\n                            // literal, line 203\n                            if (!(eq_s(1, \"Y\")))\n                            {\n                                break lab3;\n                            }\n                            // ], line 203\n                            ket = cursor;\n                            cursor = v_2;\n                            break golab2;\n                        } while (false);\n                        cursor = v_2;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    // <-, line 203\n                    slice_from(\"y\");\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_postlude() {\n            int v_1;\n            int v_2;\n            // (, line 203\n            // Boolean test Y_found, line 203\n            if (!(B_Y_found))\n            {\n                return false;\n            }\n            // repeat, line 203\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // (, line 203\n                    // goto, line 203\n                    golab2: while(true)\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // (, line 203\n                            // [, line 203\n                            bra = cursor;\n                            // literal, line 203\n                            if (!(eq_s(1, \"Y\")))\n                            {\n                                break lab3;\n                            }\n                            // ], line 203\n                            ket = cursor;\n                            cursor = v_2;\n                            break golab2;\n                        } while (false);\n                        cursor = v_2;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    // <-, line 203\n                    slice_from(\"y\");\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_postlude().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_postlude().mjava","sourceNew":"        private boolean r_postlude() {\n            int v_1;\n            int v_2;\n            // (, line 203\n            // Boolean test Y_found, line 203\n            if (!(B_Y_found))\n            {\n                return false;\n            }\n            // repeat, line 203\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // (, line 203\n                    // goto, line 203\n                    golab2: while(true)\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // (, line 203\n                            // [, line 203\n                            bra = cursor;\n                            // literal, line 203\n                            if (!(eq_s(1, \"Y\")))\n                            {\n                                break lab3;\n                            }\n                            // ], line 203\n                            ket = cursor;\n                            cursor = v_2;\n                            break golab2;\n                        } while (false);\n                        cursor = v_2;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    // <-, line 203\n                    slice_from(\"y\");\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_postlude() {\n            int v_1;\n            int v_2;\n            // (, line 203\n            // Boolean test Y_found, line 203\n            if (!(B_Y_found))\n            {\n                return false;\n            }\n            // repeat, line 203\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // (, line 203\n                    // goto, line 203\n                    golab2: while(true)\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // (, line 203\n                            // [, line 203\n                            bra = cursor;\n                            // literal, line 203\n                            if (!(eq_s(1, \"Y\")))\n                            {\n                                break lab3;\n                            }\n                            // ], line 203\n                            ket = cursor;\n                            cursor = v_2;\n                            break golab2;\n                        } while (false);\n                        cursor = v_2;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    // <-, line 203\n                    slice_from(\"y\");\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"]},"commit2Childs":{"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}