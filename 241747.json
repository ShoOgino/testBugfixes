{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer#readNumericEntry(IndexInput).mjava","commits":[{"id":"d14ffaac9c4a4a2c750bf0cd956506802561e062","date":1402602036,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer#readNumericEntry(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  private NumericEntry readNumericEntry(IndexInput meta) throws IOException {\n    NumericEntry entry = new NumericEntry();\n    entry.offset = meta.readLong();\n    entry.missingOffset = meta.readLong();\n    if (entry.missingOffset != -1) {\n      entry.missingBytes = meta.readLong();\n    } else {\n      entry.missingBytes = 0;\n    }\n    entry.format = meta.readByte();\n    switch(entry.format) {\n      case DELTA_COMPRESSED:\n      case TABLE_COMPRESSED:\n      case BLOCK_COMPRESSED:\n      case GCD_COMPRESSED:\n           break;\n      default:\n           throw new CorruptIndexException(\"Unknown format: \" + entry.format + \", input=\" + meta);\n    }\n    entry.packedIntsVersion = meta.readVInt();\n    entry.count = meta.readLong();\n    return entry;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["9a70ce9bddc6f985feb8e5e182aebe20872328d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer#readNumericEntry(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  private NumericEntry readNumericEntry(IndexInput meta) throws IOException {\n    NumericEntry entry = new NumericEntry();\n    entry.offset = meta.readLong();\n    entry.missingOffset = meta.readLong();\n    if (entry.missingOffset != -1) {\n      entry.missingBytes = meta.readLong();\n    } else {\n      entry.missingBytes = 0;\n    }\n    entry.format = meta.readByte();\n    switch(entry.format) {\n      case DELTA_COMPRESSED:\n      case TABLE_COMPRESSED:\n      case BLOCK_COMPRESSED:\n      case GCD_COMPRESSED:\n           break;\n      default:\n           throw new CorruptIndexException(\"Unknown format: \" + entry.format + \", input=\" + meta);\n    }\n    entry.packedIntsVersion = meta.readVInt();\n    entry.count = meta.readLong();\n    return entry;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a70ce9bddc6f985feb8e5e182aebe20872328d4","date":1411172748,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer#readNumericEntry(IndexInput).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer#readNumericEntry(IndexInput).mjava","sourceNew":"  private NumericEntry readNumericEntry(IndexInput meta) throws IOException {\n    NumericEntry entry = new NumericEntry();\n    entry.offset = meta.readLong();\n    entry.missingOffset = meta.readLong();\n    if (entry.missingOffset != -1) {\n      entry.missingBytes = meta.readLong();\n    } else {\n      entry.missingBytes = 0;\n    }\n    entry.format = meta.readByte();\n    switch(entry.format) {\n      case DELTA_COMPRESSED:\n      case TABLE_COMPRESSED:\n      case BLOCK_COMPRESSED:\n      case GCD_COMPRESSED:\n           break;\n      default:\n           throw new CorruptIndexException(\"Unknown format: \" + entry.format, meta);\n    }\n    entry.packedIntsVersion = meta.readVInt();\n    entry.count = meta.readLong();\n    return entry;\n  }\n\n","sourceOld":"  private NumericEntry readNumericEntry(IndexInput meta) throws IOException {\n    NumericEntry entry = new NumericEntry();\n    entry.offset = meta.readLong();\n    entry.missingOffset = meta.readLong();\n    if (entry.missingOffset != -1) {\n      entry.missingBytes = meta.readLong();\n    } else {\n      entry.missingBytes = 0;\n    }\n    entry.format = meta.readByte();\n    switch(entry.format) {\n      case DELTA_COMPRESSED:\n      case TABLE_COMPRESSED:\n      case BLOCK_COMPRESSED:\n      case GCD_COMPRESSED:\n           break;\n      default:\n           throw new CorruptIndexException(\"Unknown format: \" + entry.format + \", input=\" + meta);\n    }\n    entry.packedIntsVersion = meta.readVInt();\n    entry.count = meta.readLong();\n    return entry;\n  }\n\n","bugFix":["d14ffaac9c4a4a2c750bf0cd956506802561e062"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24f89e8a6aac05753cde4c83d62a74356098200d","date":1525768331,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesProducer#readNumericEntry(IndexInput).mjava","sourceNew":null,"sourceOld":"  private NumericEntry readNumericEntry(IndexInput meta) throws IOException {\n    NumericEntry entry = new NumericEntry();\n    entry.offset = meta.readLong();\n    entry.missingOffset = meta.readLong();\n    if (entry.missingOffset != -1) {\n      entry.missingBytes = meta.readLong();\n    } else {\n      entry.missingBytes = 0;\n    }\n    entry.format = meta.readByte();\n    switch(entry.format) {\n      case DELTA_COMPRESSED:\n      case TABLE_COMPRESSED:\n      case BLOCK_COMPRESSED:\n      case GCD_COMPRESSED:\n           break;\n      default:\n           throw new CorruptIndexException(\"Unknown format: \" + entry.format, meta);\n    }\n    entry.packedIntsVersion = meta.readVInt();\n    entry.count = meta.readLong();\n    return entry;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9a70ce9bddc6f985feb8e5e182aebe20872328d4":["d14ffaac9c4a4a2c750bf0cd956506802561e062"],"24f89e8a6aac05753cde4c83d62a74356098200d":["9a70ce9bddc6f985feb8e5e182aebe20872328d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d14ffaac9c4a4a2c750bf0cd956506802561e062"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["24f89e8a6aac05753cde4c83d62a74356098200d"],"d14ffaac9c4a4a2c750bf0cd956506802561e062":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9a70ce9bddc6f985feb8e5e182aebe20872328d4":["24f89e8a6aac05753cde4c83d62a74356098200d"],"24f89e8a6aac05753cde4c83d62a74356098200d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","d14ffaac9c4a4a2c750bf0cd956506802561e062"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":[],"d14ffaac9c4a4a2c750bf0cd956506802561e062":["9a70ce9bddc6f985feb8e5e182aebe20872328d4","c6f080a2ab37c464dd98db173f6cbf10dc74f211"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}