{"path":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesTypeCompatibility#getRandomBytesField(boolean,int,boolean).mjava","commits":[{"id":"cc8f931c07d7930ebee666cf6d69b1b6d9f9cd18","date":1339188570,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesTypeCompatibility#getRandomBytesField(boolean,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public IndexableField getRandomBytesField(boolean mustBeFixed, int maxSize,\n      boolean mustBeVariableIfNotFixed) {\n    int size = mustBeFixed ? maxSize : random().nextInt(maxSize) + 1;\n    StringBuilder s = new StringBuilder();\n    for (int i = 0; i < size; i++) {\n      s.append(\"a\");\n    }\n    BytesRef bytesRef = new BytesRef(s);\n    boolean fixed = mustBeFixed ? true : mustBeVariableIfNotFixed ? false\n        : random().nextBoolean();\n    switch (random().nextInt(3)) {\n      case 0:\n        return new SortedBytesDocValuesField(\"f\", bytesRef, fixed);\n      case 1:\n        return new DerefBytesDocValuesField(\"f\", bytesRef, fixed);\n      default:\n        return new StraightBytesDocValuesField(\"f\", bytesRef, fixed);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"409324b31a1419d7c05a38211168cf317e39be77","date":1344866765,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesTypeCompatibility#getRandomBytesField(boolean,int,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesTypeCompatibility#getRandomBytesField(boolean,int,boolean).mjava","sourceNew":"  public Field getRandomBytesField(boolean mustBeFixed, int maxSize,\n      boolean mustBeVariableIfNotFixed) {\n    int size = mustBeFixed ? maxSize : random().nextInt(maxSize) + 1;\n    StringBuilder s = new StringBuilder();\n    for (int i = 0; i < size; i++) {\n      s.append(\"a\");\n    }\n    BytesRef bytesRef = new BytesRef(s);\n    boolean fixed = mustBeFixed ? true : mustBeVariableIfNotFixed ? false\n        : random().nextBoolean();\n    switch (random().nextInt(3)) {\n      case 0:\n        return new SortedBytesDocValuesField(\"f\", bytesRef, fixed);\n      case 1:\n        return new DerefBytesDocValuesField(\"f\", bytesRef, fixed);\n      default:\n        return new StraightBytesDocValuesField(\"f\", bytesRef, fixed);\n    }\n  }\n\n","sourceOld":"  public IndexableField getRandomBytesField(boolean mustBeFixed, int maxSize,\n      boolean mustBeVariableIfNotFixed) {\n    int size = mustBeFixed ? maxSize : random().nextInt(maxSize) + 1;\n    StringBuilder s = new StringBuilder();\n    for (int i = 0; i < size; i++) {\n      s.append(\"a\");\n    }\n    BytesRef bytesRef = new BytesRef(s);\n    boolean fixed = mustBeFixed ? true : mustBeVariableIfNotFixed ? false\n        : random().nextBoolean();\n    switch (random().nextInt(3)) {\n      case 0:\n        return new SortedBytesDocValuesField(\"f\", bytesRef, fixed);\n      case 1:\n        return new DerefBytesDocValuesField(\"f\", bytesRef, fixed);\n      default:\n        return new StraightBytesDocValuesField(\"f\", bytesRef, fixed);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesTypeCompatibility#getRandomBytesField(boolean,int,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesTypeCompatibility#getRandomBytesField(boolean,int,boolean).mjava","sourceNew":"  public Field getRandomBytesField(boolean mustBeFixed, int maxSize,\n      boolean mustBeVariableIfNotFixed) {\n    int size = mustBeFixed ? maxSize : random().nextInt(maxSize) + 1;\n    StringBuilder s = new StringBuilder();\n    for (int i = 0; i < size; i++) {\n      s.append(\"a\");\n    }\n    BytesRef bytesRef = new BytesRef(s);\n    boolean fixed = mustBeFixed ? true : mustBeVariableIfNotFixed ? false\n        : random().nextBoolean();\n    switch (random().nextInt(3)) {\n      case 0:\n        return new SortedBytesDocValuesField(\"f\", bytesRef, fixed);\n      case 1:\n        return new DerefBytesDocValuesField(\"f\", bytesRef, fixed);\n      default:\n        return new StraightBytesDocValuesField(\"f\", bytesRef, fixed);\n    }\n  }\n\n","sourceOld":"  public IndexableField getRandomBytesField(boolean mustBeFixed, int maxSize,\n      boolean mustBeVariableIfNotFixed) {\n    int size = mustBeFixed ? maxSize : random().nextInt(maxSize) + 1;\n    StringBuilder s = new StringBuilder();\n    for (int i = 0; i < size; i++) {\n      s.append(\"a\");\n    }\n    BytesRef bytesRef = new BytesRef(s);\n    boolean fixed = mustBeFixed ? true : mustBeVariableIfNotFixed ? false\n        : random().nextBoolean();\n    switch (random().nextInt(3)) {\n      case 0:\n        return new SortedBytesDocValuesField(\"f\", bytesRef, fixed);\n      case 1:\n        return new DerefBytesDocValuesField(\"f\", bytesRef, fixed);\n      default:\n        return new StraightBytesDocValuesField(\"f\", bytesRef, fixed);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e2893fd5349134af382d33ccc3d84840394c6c1","date":1353682567,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesTypeCompatibility#getRandomBytesField(boolean,int,boolean).mjava","sourceNew":null,"sourceOld":"  public Field getRandomBytesField(boolean mustBeFixed, int maxSize,\n      boolean mustBeVariableIfNotFixed) {\n    int size = mustBeFixed ? maxSize : random().nextInt(maxSize) + 1;\n    StringBuilder s = new StringBuilder();\n    for (int i = 0; i < size; i++) {\n      s.append(\"a\");\n    }\n    BytesRef bytesRef = new BytesRef(s);\n    boolean fixed = mustBeFixed ? true : mustBeVariableIfNotFixed ? false\n        : random().nextBoolean();\n    switch (random().nextInt(3)) {\n      case 0:\n        return new SortedBytesDocValuesField(\"f\", bytesRef, fixed);\n      case 1:\n        return new DerefBytesDocValuesField(\"f\", bytesRef, fixed);\n      default:\n        return new StraightBytesDocValuesField(\"f\", bytesRef, fixed);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesTypeCompatibility#getRandomBytesField(boolean,int,boolean).mjava","sourceNew":null,"sourceOld":"  public Field getRandomBytesField(boolean mustBeFixed, int maxSize,\n      boolean mustBeVariableIfNotFixed) {\n    int size = mustBeFixed ? maxSize : random().nextInt(maxSize) + 1;\n    StringBuilder s = new StringBuilder();\n    for (int i = 0; i < size; i++) {\n      s.append(\"a\");\n    }\n    BytesRef bytesRef = new BytesRef(s);\n    boolean fixed = mustBeFixed ? true : mustBeVariableIfNotFixed ? false\n        : random().nextBoolean();\n    switch (random().nextInt(3)) {\n      case 0:\n        return new SortedBytesDocValuesField(\"f\", bytesRef, fixed);\n      case 1:\n        return new DerefBytesDocValuesField(\"f\", bytesRef, fixed);\n      default:\n        return new StraightBytesDocValuesField(\"f\", bytesRef, fixed);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"409324b31a1419d7c05a38211168cf317e39be77":["cc8f931c07d7930ebee666cf6d69b1b6d9f9cd18"],"cc8f931c07d7930ebee666cf6d69b1b6d9f9cd18":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1d028314cced5858683a1bb4741423d0f934257b":["cc8f931c07d7930ebee666cf6d69b1b6d9f9cd18","409324b31a1419d7c05a38211168cf317e39be77"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["1d028314cced5858683a1bb4741423d0f934257b","6e2893fd5349134af382d33ccc3d84840394c6c1"],"6e2893fd5349134af382d33ccc3d84840394c6c1":["1d028314cced5858683a1bb4741423d0f934257b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"409324b31a1419d7c05a38211168cf317e39be77":["1d028314cced5858683a1bb4741423d0f934257b"],"cc8f931c07d7930ebee666cf6d69b1b6d9f9cd18":["409324b31a1419d7c05a38211168cf317e39be77","1d028314cced5858683a1bb4741423d0f934257b"],"1d028314cced5858683a1bb4741423d0f934257b":["d4d69c535930b5cce125cff868d40f6373dc27d4","6e2893fd5349134af382d33ccc3d84840394c6c1"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6e2893fd5349134af382d33ccc3d84840394c6c1":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cc8f931c07d7930ebee666cf6d69b1b6d9f9cd18"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}