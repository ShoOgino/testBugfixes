{"path":"solr/core/src/java/org/apache/solr/handler/component/PivotFacetFieldValueCollection#compareWithNullLast(Comparable,Comparable).mjava","commits":[{"id":"92751ba9273251eab6a2e379ec42a1697a32ff96","date":1407954233,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/PivotFacetFieldValueCollection#compareWithNullLast(Comparable,Comparable).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * A helper method for use in <code>Comparator</code> classes where object properties \n   * are <code>Comparable</code> but may be null.\n   */\n  static int compareWithNullLast(final Comparable o1, final Comparable o2) {\n    if (null == o1) {\n      if (null == o2) {\n        return 0;\n      }\n      return 1; // o1 is null, o2 is not\n    }\n    if (null == o2) {\n      return -1; // o2 is null, o1 is not\n    }\n    return o1.compareTo(o2);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8582f07e9350eaeb33bf6c4617b8c9895d99c839","date":1591307386,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/PivotFacetFieldValueCollection#compareWithNullLast(Comparable,Comparable).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/PivotFacetFieldValueCollection#compareWithNullLast(Comparable,Comparable).mjava","sourceNew":"  /**\n   * A helper method for use in <code>Comparator</code> classes where object properties \n   * are <code>Comparable</code> but may be null.\n   */\n  @SuppressWarnings({\"unchecked\"})\n  static int compareWithNullLast(final Comparable o1, final Comparable o2) {\n    if (null == o1) {\n      if (null == o2) {\n        return 0;\n      }\n      return 1; // o1 is null, o2 is not\n    }\n    if (null == o2) {\n      return -1; // o2 is null, o1 is not\n    }\n    return o1.compareTo(o2);\n  }\n\n","sourceOld":"  /**\n   * A helper method for use in <code>Comparator</code> classes where object properties \n   * are <code>Comparable</code> but may be null.\n   */\n  static int compareWithNullLast(final Comparable o1, final Comparable o2) {\n    if (null == o1) {\n      if (null == o2) {\n        return 0;\n      }\n      return 1; // o1 is null, o2 is not\n    }\n    if (null == o2) {\n      return -1; // o2 is null, o1 is not\n    }\n    return o1.compareTo(o2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"92751ba9273251eab6a2e379ec42a1697a32ff96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8582f07e9350eaeb33bf6c4617b8c9895d99c839"],"8582f07e9350eaeb33bf6c4617b8c9895d99c839":["92751ba9273251eab6a2e379ec42a1697a32ff96"]},"commit2Childs":{"92751ba9273251eab6a2e379ec42a1697a32ff96":["8582f07e9350eaeb33bf6c4617b8c9895d99c839"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["92751ba9273251eab6a2e379ec42a1697a32ff96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8582f07e9350eaeb33bf6c4617b8c9895d99c839":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}