{"path":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(SolrZkClient,ZkStateReader,String).mjava","commits":[{"id":"d0492616b11aace806d95ec9df44f57a60160bf7","date":1327803775,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(SolrZkClient,ZkStateReader,String).mjava","pathOld":"/dev/null","sourceNew":"  public Overseer(final SolrZkClient zkClient, final ZkStateReader reader, String id) throws KeeperException, InterruptedException {\n    log.info(\"Constructing new Overseer id=\" + id);\n    this.zkClient = zkClient;\n    this.zkCmdExecutor = new ZkCmdExecutor();\n    createWatches();\n    \n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer delayed state updater\");\n    Thread updaterThread = new Thread(tg, new CloudStateUpdater(fifo, reader, zkClient, id));\n    updaterThread.setDaemon(true);\n    updaterThread.start();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f4a0c306589f8607dc4b33f7abaf753db19f76e","date":1327836084,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(SolrZkClient,ZkStateReader,String).mjava","pathOld":"/dev/null","sourceNew":"  public Overseer(final SolrZkClient zkClient, final ZkStateReader reader, String id) throws KeeperException, InterruptedException {\n    log.info(\"Constructing new Overseer id=\" + id);\n    this.zkClient = zkClient;\n    this.zkCmdExecutor = new ZkCmdExecutor();\n    createWatches();\n    \n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer delayed state updater\");\n    Thread updaterThread = new Thread(tg, new CloudStateUpdater(fifo, reader, zkClient, id));\n    updaterThread.setDaemon(true);\n    updaterThread.start();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd92b8bcc88e969302510acf77bd6970da3994c4","date":1327839530,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(SolrZkClient,ZkStateReader,String).mjava","pathOld":"/dev/null","sourceNew":"  public Overseer(final SolrZkClient zkClient, final ZkStateReader reader, String id) throws KeeperException, InterruptedException {\n    log.info(\"Constructing new Overseer id=\" + id);\n    this.zkClient = zkClient;\n    this.zkCmdExecutor = new ZkCmdExecutor();\n    createWatches();\n    \n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer delayed state updater\");\n    Thread updaterThread = new Thread(tg, new CloudStateUpdater(fifo, reader, zkClient, id));\n    updaterThread.setDaemon(true);\n    updaterThread.start();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5093a9e893633cc091cf2f729d7863671c2b715","date":1339132888,"type":5,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(ZkStateReader,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer#Overseer(SolrZkClient,ZkStateReader,String).mjava","sourceNew":"  public Overseer(final ZkStateReader reader, final String id) throws KeeperException, InterruptedException {\n    log.info(\"Overseer (id=\" + id + \") starting\");\n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer state updater.\");\n    Thread updaterThread = new Thread(tg, new CloudStateUpdater(reader, id));\n    updaterThread.setDaemon(true);\n    updaterThread.start();\n  }\n\n","sourceOld":"  public Overseer(final SolrZkClient zkClient, final ZkStateReader reader, String id) throws KeeperException, InterruptedException {\n    log.info(\"Constructing new Overseer id=\" + id);\n    this.zkClient = zkClient;\n    this.zkCmdExecutor = new ZkCmdExecutor();\n    createWatches();\n    \n    //launch cluster state updater thread\n    ThreadGroup tg = new ThreadGroup(\"Overseer delayed state updater\");\n    Thread updaterThread = new Thread(tg, new CloudStateUpdater(fifo, reader, zkClient, id));\n    updaterThread.setDaemon(true);\n    updaterThread.start();\n  }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a5093a9e893633cc091cf2f729d7863671c2b715":["d0492616b11aace806d95ec9df44f57a60160bf7"],"fd92b8bcc88e969302510acf77bd6970da3994c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d0492616b11aace806d95ec9df44f57a60160bf7"],"d0492616b11aace806d95ec9df44f57a60160bf7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8f4a0c306589f8607dc4b33f7abaf753db19f76e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d0492616b11aace806d95ec9df44f57a60160bf7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a5093a9e893633cc091cf2f729d7863671c2b715"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fd92b8bcc88e969302510acf77bd6970da3994c4","d0492616b11aace806d95ec9df44f57a60160bf7","8f4a0c306589f8607dc4b33f7abaf753db19f76e"],"a5093a9e893633cc091cf2f729d7863671c2b715":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fd92b8bcc88e969302510acf77bd6970da3994c4":[],"d0492616b11aace806d95ec9df44f57a60160bf7":["a5093a9e893633cc091cf2f729d7863671c2b715","fd92b8bcc88e969302510acf77bd6970da3994c4","8f4a0c306589f8607dc4b33f7abaf753db19f76e"],"8f4a0c306589f8607dc4b33f7abaf753db19f76e":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fd92b8bcc88e969302510acf77bd6970da3994c4","8f4a0c306589f8607dc4b33f7abaf753db19f76e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}