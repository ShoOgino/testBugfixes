{"path":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesDistrib#checkExpectedSchemaField(Map[String,Object]).mjava","commits":[{"id":"415bbbe7da8065dd3c477bdc3c703c6425622998","date":1485393793,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesDistrib#checkExpectedSchemaField(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Use the schema API to verify that the specified expected Field exists with those exact attributes. \n   */\n  public void checkExpectedSchemaField(Map<String,Object> expected) throws Exception {\n    String fieldName = (String) expected.get(\"name\");\n    assertNotNull(\"expected contains no name: \" + expected, fieldName);\n    FieldResponse rsp = new Field(fieldName).process(this.cloudClient);\n    assertNotNull(\"Field Null Response: \" + fieldName, rsp);\n    assertEquals(\"Field Status: \" + fieldName + \" => \" + rsp.toString(), 0, rsp.getStatus());\n    assertEquals(\"Field: \" + fieldName, expected, rsp.getField());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"598b5d23aa7c9732bf473c21a9cd309c44599394","date":1485530378,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesDistrib#checkExpectedSchemaField(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Use the schema API to verify that the specified expected Field exists with those exact attributes. \n   */\n  public void checkExpectedSchemaField(Map<String,Object> expected) throws Exception {\n    String fieldName = (String) expected.get(\"name\");\n    assertNotNull(\"expected contains no name: \" + expected, fieldName);\n    FieldResponse rsp = new Field(fieldName).process(this.cloudClient);\n    assertNotNull(\"Field Null Response: \" + fieldName, rsp);\n    assertEquals(\"Field Status: \" + fieldName + \" => \" + rsp.toString(), 0, rsp.getStatus());\n    assertEquals(\"Field: \" + fieldName, expected, rsp.getField());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"598b5d23aa7c9732bf473c21a9cd309c44599394":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","415bbbe7da8065dd3c477bdc3c703c6425622998"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["415bbbe7da8065dd3c477bdc3c703c6425622998"]},"commit2Childs":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"598b5d23aa7c9732bf473c21a9cd309c44599394":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["415bbbe7da8065dd3c477bdc3c703c6425622998","598b5d23aa7c9732bf473c21a9cd309c44599394"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}