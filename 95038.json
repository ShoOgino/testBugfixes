{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/CellStream#CellStream(StreamExpression,StreamFactory).mjava","commits":[{"id":"014c3fc2ef9621f91a3786f1055913d8fa10d0df","date":1492893542,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/CellStream#CellStream(StreamExpression,StreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  public CellStream(StreamExpression expression, StreamFactory factory) throws IOException {\n    String name = factory.getValueOperand(expression, 0);\n    List<StreamExpression> streamExpressions = factory.getExpressionOperandsRepresentingTypes(expression, Expressible.class, TupleStream.class);\n\n    if(streamExpressions.size() != 1){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting 1 stream but found %d\",expression, streamExpressions.size()));\n    }\n\n    TupleStream tupleStream = factory.constructStream(streamExpressions.get(0));\n    init(name, tupleStream);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/CellStream#CellStream(StreamExpression,StreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  public CellStream(StreamExpression expression, StreamFactory factory) throws IOException {\n    String name = factory.getValueOperand(expression, 0);\n    List<StreamExpression> streamExpressions = factory.getExpressionOperandsRepresentingTypes(expression, Expressible.class, TupleStream.class);\n\n    if(streamExpressions.size() != 1){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting 1 stream but found %d\",expression, streamExpressions.size()));\n    }\n\n    TupleStream tupleStream = factory.constructStream(streamExpressions.get(0));\n    init(name, tupleStream);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","014c3fc2ef9621f91a3786f1055913d8fa10d0df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"014c3fc2ef9621f91a3786f1055913d8fa10d0df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["014c3fc2ef9621f91a3786f1055913d8fa10d0df"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","014c3fc2ef9621f91a3786f1055913d8fa10d0df"],"014c3fc2ef9621f91a3786f1055913d8fa10d0df":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}