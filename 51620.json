{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n\n    final FunctionValues shapeValues = bboxValueSource.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        //? limit to Rect or call getBoundingBox()? latter would encourage bad practice\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        return rect==null ? 0 : score(rect, null);\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        return shapeValues.exists(doc);\n      }\n\n      @Override\n      public Explanation explain(int doc) {\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        if (rect == null)\n          return new Explanation(0, \"no rect\");\n        Explanation exp = new Explanation();\n        score(rect, exp);\n        return exp;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","date":1429620941,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n\n    final FunctionValues shapeValues = bboxValueSource.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        //? limit to Rect or call getBoundingBox()? latter would encourage bad practice\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        return rect==null ? 0 : score(rect, null);\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        return shapeValues.exists(doc);\n      }\n\n      @Override\n      public Explanation explain(int doc) {\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        if (rect == null)\n          return Explanation.noMatch(\"no rect\");\n        AtomicReference<Explanation> explanation = new AtomicReference<>();\n        score(rect, explanation);\n        return explanation.get();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n\n    final FunctionValues shapeValues = bboxValueSource.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        //? limit to Rect or call getBoundingBox()? latter would encourage bad practice\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        return rect==null ? 0 : score(rect, null);\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        return shapeValues.exists(doc);\n      }\n\n      @Override\n      public Explanation explain(int doc) {\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        if (rect == null)\n          return new Explanation(0, \"no rect\");\n        Explanation exp = new Explanation();\n        score(rect, exp);\n        return exp;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n\n    final FunctionValues shapeValues = bboxValueSource.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        //? limit to Rect or call getBoundingBox()? latter would encourage bad practice\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        return rect==null ? 0 : score(rect, null);\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        return shapeValues.exists(doc);\n      }\n\n      @Override\n      public Explanation explain(int doc) {\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        if (rect == null)\n          return Explanation.noMatch(\"no rect\");\n        AtomicReference<Explanation> explanation = new AtomicReference<>();\n        score(rect, explanation);\n        return explanation.get();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n\n    final FunctionValues shapeValues = bboxValueSource.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        //? limit to Rect or call getBoundingBox()? latter would encourage bad practice\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        return rect==null ? 0 : score(rect, null);\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        return shapeValues.exists(doc);\n      }\n\n      @Override\n      public Explanation explain(int doc) {\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        if (rect == null)\n          return Explanation.noMatch(\"no rect\");\n        AtomicReference<Explanation> explanation = new AtomicReference<>();\n        score(rect, explanation);\n        return explanation.get();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/bbox/BBoxSimilarityValueSource#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n\n    final FunctionValues shapeValues = bboxValueSource.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        //? limit to Rect or call getBoundingBox()? latter would encourage bad practice\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        return rect==null ? 0 : score(rect, null);\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        return shapeValues.exists(doc);\n      }\n\n      @Override\n      public Explanation explain(int doc) {\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        if (rect == null)\n          return Explanation.noMatch(\"no rect\");\n        AtomicReference<Explanation> explanation = new AtomicReference<>();\n        score(rect, explanation);\n        return explanation.get();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n\n    final FunctionValues shapeValues = bboxValueSource.getValues(context, readerContext);\n\n    return new DoubleDocValues(this) {\n      @Override\n      public double doubleVal(int doc) {\n        //? limit to Rect or call getBoundingBox()? latter would encourage bad practice\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        return rect==null ? 0 : score(rect, null);\n      }\n\n      @Override\n      public boolean exists(int doc) {\n        return shapeValues.exists(doc);\n      }\n\n      @Override\n      public Explanation explain(int doc) {\n        final Rectangle rect = (Rectangle) shapeValues.objectVal(doc);\n        if (rect == null)\n          return Explanation.noMatch(\"no rect\");\n        AtomicReference<Explanation> explanation = new AtomicReference<>();\n        score(rect, explanation);\n        return explanation.get();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}