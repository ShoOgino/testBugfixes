{"path":"solr/core/src/java/org/apache/solr/search/CaffeineCache#buildCache(Cache[K,V]).mjava","commits":[{"id":"87f0484c38f986062889ed50f3bf3bd462848c26","date":1570108628,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CaffeineCache#buildCache(Cache[K,V]).mjava","pathOld":"/dev/null","sourceNew":"  private Cache<K, V> buildCache(Cache<K, V> prev) {\n    Caffeine builder = Caffeine.newBuilder()\n        .initialCapacity(initialSize)\n        .executor(executor)\n        .removalListener(this)\n        .recordStats();\n    if (maxIdleTimeSec > 0) {\n      builder.expireAfterAccess(Duration.ofSeconds(maxIdleTimeSec));\n    }\n    if (maxRamBytes != Long.MAX_VALUE) {\n      builder.maximumWeight(maxRamBytes);\n      builder.weigher((k, v) -> (int) (RamUsageEstimator.sizeOfObject(k) + RamUsageEstimator.sizeOfObject(v)));\n    } else {\n      builder.maximumSize(maxSize);\n    }\n    Cache<K, V> newCache = builder.build();\n    if (prev != null) {\n      newCache.putAll(prev.asMap());\n    }\n    return newCache;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":0,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CaffeineCache#buildCache(Cache[K,V]).mjava","pathOld":"/dev/null","sourceNew":"  private Cache<K, V> buildCache(Cache<K, V> prev) {\n    Caffeine builder = Caffeine.newBuilder()\n        .initialCapacity(initialSize)\n        .executor(executor)\n        .removalListener(this)\n        .recordStats();\n    if (maxIdleTimeSec > 0) {\n      builder.expireAfterAccess(Duration.ofSeconds(maxIdleTimeSec));\n    }\n    if (maxRamBytes != Long.MAX_VALUE) {\n      builder.maximumWeight(maxRamBytes);\n      builder.weigher((k, v) -> (int) (RamUsageEstimator.sizeOfObject(k) + RamUsageEstimator.sizeOfObject(v)));\n    } else {\n      builder.maximumSize(maxSize);\n    }\n    Cache<K, V> newCache = builder.build();\n    if (prev != null) {\n      newCache.putAll(prev.asMap());\n    }\n    return newCache;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50dfd19525c8d73e856dca6edb64b7aea074037f","date":1591579225,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CaffeineCache#buildCache(Cache[K,V]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CaffeineCache#buildCache(Cache[K,V]).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  private Cache<K, V> buildCache(Cache<K, V> prev) {\n    @SuppressWarnings({\"rawtypes\"})\n    Caffeine builder = Caffeine.newBuilder()\n        .initialCapacity(initialSize)\n        .executor(executor)\n        .removalListener(this)\n        .recordStats();\n    if (maxIdleTimeSec > 0) {\n      builder.expireAfterAccess(Duration.ofSeconds(maxIdleTimeSec));\n    }\n    if (maxRamBytes != Long.MAX_VALUE) {\n      builder.maximumWeight(maxRamBytes);\n      builder.weigher((k, v) -> (int) (RamUsageEstimator.sizeOfObject(k) + RamUsageEstimator.sizeOfObject(v)));\n    } else {\n      builder.maximumSize(maxSize);\n    }\n    Cache<K, V> newCache = builder.build();\n    if (prev != null) {\n      newCache.putAll(prev.asMap());\n    }\n    return newCache;\n  }\n\n","sourceOld":"  private Cache<K, V> buildCache(Cache<K, V> prev) {\n    Caffeine builder = Caffeine.newBuilder()\n        .initialCapacity(initialSize)\n        .executor(executor)\n        .removalListener(this)\n        .recordStats();\n    if (maxIdleTimeSec > 0) {\n      builder.expireAfterAccess(Duration.ofSeconds(maxIdleTimeSec));\n    }\n    if (maxRamBytes != Long.MAX_VALUE) {\n      builder.maximumWeight(maxRamBytes);\n      builder.weigher((k, v) -> (int) (RamUsageEstimator.sizeOfObject(k) + RamUsageEstimator.sizeOfObject(v)));\n    } else {\n      builder.maximumSize(maxSize);\n    }\n    Cache<K, V> newCache = builder.build();\n    if (prev != null) {\n      newCache.putAll(prev.asMap());\n    }\n    return newCache;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"50dfd19525c8d73e856dca6edb64b7aea074037f":["87f0484c38f986062889ed50f3bf3bd462848c26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"87f0484c38f986062889ed50f3bf3bd462848c26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["50dfd19525c8d73e856dca6edb64b7aea074037f"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","87f0484c38f986062889ed50f3bf3bd462848c26"]},"commit2Childs":{"50dfd19525c8d73e856dca6edb64b7aea074037f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["87f0484c38f986062889ed50f3bf3bd462848c26","b0b597c65628ca9e73913a07e81691f8229bae35"],"87f0484c38f986062889ed50f3bf3bd462848c26":["50dfd19525c8d73e856dca6edb64b7aea074037f","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}