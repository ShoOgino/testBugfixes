{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager#close().mjava","commits":[{"id":"938e4fd7b1e4b34da1650edba7471764bbfaefde","date":1344033248,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager#close().mjava","pathOld":"/dev/null","sourceNew":"  // we use a volatile rather than sync\n  // to avoid deadlock on shutdown\n  public void close() {\n    this.isClosed = true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bbf36bc4ffcb059ec73feefb2c36de5da1739c36"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager#close().mjava","pathOld":"/dev/null","sourceNew":"  // we use a volatile rather than sync\n  // to avoid deadlock on shutdown\n  public void close() {\n    this.isClosed = true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager#close().mjava","pathOld":"/dev/null","sourceNew":"  // we use a volatile rather than sync\n  // to avoid deadlock on shutdown\n  public void close() {\n    this.isClosed = true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b85d2aa862c6ff17c9930e80591ab781c0b87579","date":1388263753,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager#close().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager#close().mjava","sourceNew":"  // we use a volatile rather than sync\n  // to avoid deadlock on shutdown\n  public void close() {\n    this.isClosed = true;\n    if (this.disconnectedTimer != null) {\n      this.disconnectedTimer.cancel();\n      this.disconnectedTimer = null;\n    }\n  }\n\n","sourceOld":"  // we use a volatile rather than sync\n  // to avoid deadlock on shutdown\n  public void close() {\n    this.isClosed = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6467320c43ab0ba587737c696baf790aa278abe3","date":1388269104,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager#close().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager#close().mjava","sourceNew":"  // we use a volatile rather than sync\n  // to avoid deadlock on shutdown\n  public void close() {\n    this.isClosed = true;\n    this.likelyExpired = true;\n    if (this.disconnectedTimer != null) {\n      this.disconnectedTimer.cancel();\n      this.disconnectedTimer = null;\n    }\n  }\n\n","sourceOld":"  // we use a volatile rather than sync\n  // to avoid deadlock on shutdown\n  public void close() {\n    this.isClosed = true;\n    if (this.disconnectedTimer != null) {\n      this.disconnectedTimer.cancel();\n      this.disconnectedTimer = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":["5ae839c0b155e35fa4049376c3d3a1d842a68111"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"91033db3e77885f4d5c84b2b1ae5347d8a1a4bf9","date":1388775982,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager#close().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager#close().mjava","sourceNew":"  // we use a volatile rather than sync\n  // to avoid deadlock on shutdown\n  public void close() {\n    this.isClosed = true;\n    this.likelyExpired = true;\n    try {\n      this.disconnectedTimer.cancel();\n    } catch (NullPointerException e) {\n      // fine\n    } finally {\n      this.disconnectedTimer = null;\n    }\n  }\n\n","sourceOld":"  // we use a volatile rather than sync\n  // to avoid deadlock on shutdown\n  public void close() {\n    this.isClosed = true;\n    this.likelyExpired = true;\n    if (this.disconnectedTimer != null) {\n      this.disconnectedTimer.cancel();\n      this.disconnectedTimer = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2ec245241c2474ed40f97e19635afbe89daf55c2","date":1390256744,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager#close().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager#close().mjava","sourceNew":"  // we use a volatile rather than sync\n  // to avoid deadlock on shutdown\n  public void close() {\n    this.isClosed = true;\n    this.likelyExpired = true;\n    cancelTimer();\n  }\n\n","sourceOld":"  // we use a volatile rather than sync\n  // to avoid deadlock on shutdown\n  public void close() {\n    this.isClosed = true;\n    this.likelyExpired = true;\n    try {\n      this.disconnectedTimer.cancel();\n    } catch (NullPointerException e) {\n      // fine\n    } finally {\n      this.disconnectedTimer = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":["5ae839c0b155e35fa4049376c3d3a1d842a68111"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bbf36bc4ffcb059ec73feefb2c36de5da1739c36","date":1390747915,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager#close().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager#close().mjava","sourceNew":"  // we use a volatile rather than sync\n  // to avoid possible deadlock on shutdown\n  public void close() {\n    this.isClosed = true;\n    this.likelyExpired = true;\n    cancelTimer();\n  }\n\n","sourceOld":"  // we use a volatile rather than sync\n  // to avoid deadlock on shutdown\n  public void close() {\n    this.isClosed = true;\n    this.likelyExpired = true;\n    cancelTimer();\n  }\n\n","bugFix":["938e4fd7b1e4b34da1650edba7471764bbfaefde"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5ae839c0b155e35fa4049376c3d3a1d842a68111","date":1392392160,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager#close().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager#close().mjava","sourceNew":"  // we use a volatile rather than sync\n  // to avoid possible deadlock on shutdown\n  public void close() {\n    this.isClosed = true;\n    this.likelyExpiredState = LikelyExpiredState.EXPIRED;\n  }\n\n","sourceOld":"  // we use a volatile rather than sync\n  // to avoid possible deadlock on shutdown\n  public void close() {\n    this.isClosed = true;\n    this.likelyExpired = true;\n    cancelTimer();\n  }\n\n","bugFix":["2ec245241c2474ed40f97e19635afbe89daf55c2","6467320c43ab0ba587737c696baf790aa278abe3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5ae839c0b155e35fa4049376c3d3a1d842a68111":["bbf36bc4ffcb059ec73feefb2c36de5da1739c36"],"6467320c43ab0ba587737c696baf790aa278abe3":["b85d2aa862c6ff17c9930e80591ab781c0b87579"],"bbf36bc4ffcb059ec73feefb2c36de5da1739c36":["2ec245241c2474ed40f97e19635afbe89daf55c2"],"91033db3e77885f4d5c84b2b1ae5347d8a1a4bf9":["6467320c43ab0ba587737c696baf790aa278abe3"],"2ec245241c2474ed40f97e19635afbe89daf55c2":["91033db3e77885f4d5c84b2b1ae5347d8a1a4bf9"],"b85d2aa862c6ff17c9930e80591ab781c0b87579":["938e4fd7b1e4b34da1650edba7471764bbfaefde"],"938e4fd7b1e4b34da1650edba7471764bbfaefde":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","938e4fd7b1e4b34da1650edba7471764bbfaefde"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","938e4fd7b1e4b34da1650edba7471764bbfaefde"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5ae839c0b155e35fa4049376c3d3a1d842a68111"]},"commit2Childs":{"5ae839c0b155e35fa4049376c3d3a1d842a68111":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6467320c43ab0ba587737c696baf790aa278abe3":["91033db3e77885f4d5c84b2b1ae5347d8a1a4bf9"],"bbf36bc4ffcb059ec73feefb2c36de5da1739c36":["5ae839c0b155e35fa4049376c3d3a1d842a68111"],"91033db3e77885f4d5c84b2b1ae5347d8a1a4bf9":["2ec245241c2474ed40f97e19635afbe89daf55c2"],"2ec245241c2474ed40f97e19635afbe89daf55c2":["bbf36bc4ffcb059ec73feefb2c36de5da1739c36"],"b85d2aa862c6ff17c9930e80591ab781c0b87579":["6467320c43ab0ba587737c696baf790aa278abe3"],"938e4fd7b1e4b34da1650edba7471764bbfaefde":["b85d2aa862c6ff17c9930e80591ab781c0b87579","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["938e4fd7b1e4b34da1650edba7471764bbfaefde","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}