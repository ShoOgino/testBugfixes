{"path":"solr/core/src/java/org/apache/solr/util/SimplePostTool#doGet(String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#doGet(String).mjava","pathOld":"solr/src/java/org/apache/solr/util/SimplePostTool#doGet(String).mjava","sourceNew":"  /**\n   * Performs a simple get on the given URL\n   * @param url\n   */\n  public void doGet(String url) {\n    try {\n      doGet(new URL(url));\n    } catch (MalformedURLException e) {\n      fatal(\"The specified URL \"+url+\" is not a valid URL. Please check\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Performs a simple get on the given URL\n   * @param url\n   */\n  public void doGet(String url) {\n    try {\n      doGet(new URL(url));\n    } catch (MalformedURLException e) {\n      fatal(\"The specified URL \"+url+\" is not a valid URL. Please check\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#doGet(String).mjava","pathOld":"solr/src/java/org/apache/solr/util/SimplePostTool#doGet(String).mjava","sourceNew":"  /**\n   * Performs a simple get on the given URL\n   * @param url\n   */\n  public void doGet(String url) {\n    try {\n      doGet(new URL(url));\n    } catch (MalformedURLException e) {\n      fatal(\"The specified URL \"+url+\" is not a valid URL. Please check\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Performs a simple get on the given URL\n   * @param url\n   */\n  public void doGet(String url) {\n    try {\n      doGet(new URL(url));\n    } catch (MalformedURLException e) {\n      fatal(\"The specified URL \"+url+\" is not a valid URL. Please check\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#doGet(String).mjava","pathOld":"solr/src/java/org/apache/solr/util/SimplePostTool#doGet(String).mjava","sourceNew":"  /**\n   * Performs a simple get on the given URL\n   * @param url\n   */\n  public void doGet(String url) {\n    try {\n      doGet(new URL(url));\n    } catch (MalformedURLException e) {\n      fatal(\"The specified URL \"+url+\" is not a valid URL. Please check\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Performs a simple get on the given URL\n   * @param url\n   */\n  public void doGet(String url) {\n    try {\n      doGet(new URL(url));\n    } catch (MalformedURLException e) {\n      fatal(\"The specified URL \"+url+\" is not a valid URL. Please check\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00c8a312269787ad677745cd5fc2631d61dff78d","date":1326209731,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#doGet(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#doGet(String).mjava","sourceNew":"  /**\n   * Performs a simple get on the given URL\n   * @param url\n   */\n  public static void doGet(String url) {\n    try {\n      doGet(new URL(url));\n    } catch (MalformedURLException e) {\n      fatal(\"The specified URL \"+url+\" is not a valid URL. Please check\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Performs a simple get on the given URL\n   * @param url\n   */\n  public void doGet(String url) {\n    try {\n      doGet(new URL(url));\n    } catch (MalformedURLException e) {\n      fatal(\"The specified URL \"+url+\" is not a valid URL. Please check\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa","date":1343692569,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#doGet(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#doGet(String).mjava","sourceNew":"  /**\n   * Performs a simple get on the given URL\n   */\n  public static void doGet(String url) {\n    try {\n      doGet(new URL(url));\n    } catch (MalformedURLException e) {\n      warn(\"The specified URL \"+url+\" is not a valid URL. Please check\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Performs a simple get on the given URL\n   * @param url\n   */\n  public static void doGet(String url) {\n    try {\n      doGet(new URL(url));\n    } catch (MalformedURLException e) {\n      fatal(\"The specified URL \"+url+\" is not a valid URL. Please check\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#doGet(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#doGet(String).mjava","sourceNew":"  /**\n   * Performs a simple get on the given URL\n   */\n  public static void doGet(String url) {\n    try {\n      doGet(new URL(url));\n    } catch (MalformedURLException e) {\n      warn(\"The specified URL \"+url+\" is not a valid URL. Please check\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Performs a simple get on the given URL\n   * @param url\n   */\n  public static void doGet(String url) {\n    try {\n      doGet(new URL(url));\n    } catch (MalformedURLException e) {\n      fatal(\"The specified URL \"+url+\" is not a valid URL. Please check\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#doGet(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#doGet(String).mjava","sourceNew":"  /**\n   * Performs a simple get on the given URL\n   */\n  public static void doGet(String url) {\n    try {\n      doGet(new URL(url));\n    } catch (MalformedURLException e) {\n      warn(\"The specified URL \"+url+\" is not a valid URL. Please check\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Performs a simple get on the given URL\n   * @param url\n   */\n  public static void doGet(String url) {\n    try {\n      doGet(new URL(url));\n    } catch (MalformedURLException e) {\n      fatal(\"The specified URL \"+url+\" is not a valid URL. Please check\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06c53fdb787c249799e6655451c48ef29c717557","date":1494098950,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#doGet(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#doGet(String).mjava","sourceNew":"  /**\n   * Performs a simple get on the given URL\n   */\n  public void doGet(String url) {\n    try {\n      doGet(new URL(url));\n    } catch (MalformedURLException e) {\n      warn(\"The specified URL \"+url+\" is not a valid URL. Please check\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Performs a simple get on the given URL\n   */\n  public static void doGet(String url) {\n    try {\n      doGet(new URL(url));\n    } catch (MalformedURLException e) {\n      warn(\"The specified URL \"+url+\" is not a valid URL. Please check\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#doGet(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#doGet(String).mjava","sourceNew":"  /**\n   * Performs a simple get on the given URL\n   */\n  public void doGet(String url) {\n    try {\n      doGet(new URL(url));\n    } catch (MalformedURLException e) {\n      warn(\"The specified URL \"+url+\" is not a valid URL. Please check\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Performs a simple get on the given URL\n   */\n  public static void doGet(String url) {\n    try {\n      doGet(new URL(url));\n    } catch (MalformedURLException e) {\n      warn(\"The specified URL \"+url+\" is not a valid URL. Please check\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa","06c53fdb787c249799e6655451c48ef29c717557"],"2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa":["00c8a312269787ad677745cd5fc2631d61dff78d"],"00c8a312269787ad677745cd5fc2631d61dff78d":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["00c8a312269787ad677745cd5fc2631d61dff78d","2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["00c8a312269787ad677745cd5fc2631d61dff78d","2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"06c53fdb787c249799e6655451c48ef29c717557":["2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06c53fdb787c249799e6655451c48ef29c717557"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa":["e9017cf144952056066919f1ebc7897ff9bd71b1","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","06c53fdb787c249799e6655451c48ef29c717557"],"00c8a312269787ad677745cd5fc2631d61dff78d":["2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["00c8a312269787ad677745cd5fc2631d61dff78d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"06c53fdb787c249799e6655451c48ef29c717557":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}