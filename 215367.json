{"path":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPoint#testBasics().mjava","commits":[{"id":"609ba4ce51a7095e9815d4fb2666ec85714f8f54","date":1456320705,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPoint#testBasics().mjava","pathOld":"/dev/null","sourceNew":"  /** Add a single address and search for it in a box */\n  // NOTE: we don't currently supply an exact search, only ranges, because of the lossiness...\n  public void testBasics() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // add a doc with an address\n    Document document = new Document();\n    document.add(new LatLonPoint(\"field\", 18.313694, -65.227444));\n    writer.addDocument(document);\n    \n    // search and verify we found our doc\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    assertEquals(1, searcher.count(LatLonPoint.newBoxQuery(\"field\", 18, 19, -66, -65)));\n\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6","date":1456321728,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPoint#testBasics().mjava","pathOld":"/dev/null","sourceNew":"  /** Add a single address and search for it in a box */\n  // NOTE: we don't currently supply an exact search, only ranges, because of the lossiness...\n  public void testBasics() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // add a doc with an address\n    Document document = new Document();\n    document.add(new LatLonPoint(\"field\", 18.313694, -65.227444));\n    writer.addDocument(document);\n    \n    // search and verify we found our doc\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    assertEquals(1, searcher.count(LatLonPoint.newBoxQuery(\"field\", 18, 19, -66, -65)));\n\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94ee361295fb38310ac4d53cb4773d1622423d68","date":1456833885,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPoint#testBoxQuery().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPoint#testBasics().mjava","sourceNew":"  /** Add a single point and search for it in a box */\n  // NOTE: we don't currently supply an exact search, only ranges, because of the lossiness...\n  public void testBoxQuery() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // add a doc with a point\n    Document document = new Document();\n    document.add(new LatLonPoint(\"field\", 18.313694, -65.227444));\n    writer.addDocument(document);\n    \n    // search and verify we found our doc\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    assertEquals(1, searcher.count(LatLonPoint.newBoxQuery(\"field\", 18, 19, -66, -65)));\n\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** Add a single address and search for it in a box */\n  // NOTE: we don't currently supply an exact search, only ranges, because of the lossiness...\n  public void testBasics() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // add a doc with an address\n    Document document = new Document();\n    document.add(new LatLonPoint(\"field\", 18.313694, -65.227444));\n    writer.addDocument(document);\n    \n    // search and verify we found our doc\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    assertEquals(1, searcher.count(LatLonPoint.newBoxQuery(\"field\", 18, 19, -66, -65)));\n\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPoint#testBoxQuery().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPoint#testBasics().mjava","sourceNew":"  /** Add a single point and search for it in a box */\n  // NOTE: we don't currently supply an exact search, only ranges, because of the lossiness...\n  public void testBoxQuery() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // add a doc with a point\n    Document document = new Document();\n    document.add(new LatLonPoint(\"field\", 18.313694, -65.227444));\n    writer.addDocument(document);\n    \n    // search and verify we found our doc\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader, false);\n    assertEquals(1, searcher.count(LatLonPoint.newBoxQuery(\"field\", 18, 19, -66, -65)));\n\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** Add a single address and search for it in a box */\n  // NOTE: we don't currently supply an exact search, only ranges, because of the lossiness...\n  public void testBasics() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // add a doc with an address\n    Document document = new Document();\n    document.add(new LatLonPoint(\"field\", 18.313694, -65.227444));\n    writer.addDocument(document);\n    \n    // search and verify we found our doc\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    assertEquals(1, searcher.count(LatLonPoint.newBoxQuery(\"field\", 18, 19, -66, -65)));\n\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"609ba4ce51a7095e9815d4fb2666ec85714f8f54":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"94ee361295fb38310ac4d53cb4773d1622423d68":["609ba4ce51a7095e9815d4fb2666ec85714f8f54"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["609ba4ce51a7095e9815d4fb2666ec85714f8f54","94ee361295fb38310ac4d53cb4773d1622423d68"],"1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","609ba4ce51a7095e9815d4fb2666ec85714f8f54"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"]},"commit2Childs":{"609ba4ce51a7095e9815d4fb2666ec85714f8f54":["94ee361295fb38310ac4d53cb4773d1622423d68","cf1a614098b46c9c22afebd7b898ae4d1d2fc273","1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["609ba4ce51a7095e9815d4fb2666ec85714f8f54","1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6"],"94ee361295fb38310ac4d53cb4773d1622423d68":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}