{"path":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/Bytes.BytesWriterBase#files(Collection[String]).mjava","commits":[{"id":"f9efc72acdea22f5285be0a808f8bba51bb8e367","date":1323217280,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/Bytes.BytesWriterBase#files(Collection[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#files(Collection[String]).mjava","sourceNew":"    @Override\n    public void files(Collection<String> files) throws IOException {\n      assert datOut != null;\n      files.add(IndexFileNames.segmentFileName(id, DV_SEGMENT_SUFFIX, DATA_EXTENSION));\n      if (idxOut != null) { // called after flush - so this must be initialized\n        // if needed or present\n        final String idxFile = IndexFileNames.segmentFileName(id, DV_SEGMENT_SUFFIX,\n            INDEX_EXTENSION);\n        files.add(idxFile);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void files(Collection<String> files) throws IOException {\n      assert datOut != null;\n      files.add(IndexFileNames.segmentFileName(id, DV_SEGMENT_SUFFIX, DATA_EXTENSION));\n      if (idxOut != null) { // called after flush - so this must be initialized\n        // if needed or present\n        final String idxFile = IndexFileNames.segmentFileName(id, DV_SEGMENT_SUFFIX,\n            INDEX_EXTENSION);\n        files.add(idxFile);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f024bd8af1f5072d8415b5fad2d655ccb604e1bb","date":1323217887,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/Bytes.BytesWriterBase#files(Collection[String]).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void files(Collection<String> files) throws IOException {\n      assert datOut != null;\n      files.add(IndexFileNames.segmentFileName(id, DV_SEGMENT_SUFFIX, DATA_EXTENSION));\n      if (idxOut != null) { // called after flush - so this must be initialized\n        // if needed or present\n        final String idxFile = IndexFileNames.segmentFileName(id, DV_SEGMENT_SUFFIX,\n            INDEX_EXTENSION);\n        files.add(idxFile);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f024bd8af1f5072d8415b5fad2d655ccb604e1bb":["f9efc72acdea22f5285be0a808f8bba51bb8e367"],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f9efc72acdea22f5285be0a808f8bba51bb8e367","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f024bd8af1f5072d8415b5fad2d655ccb604e1bb":[],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["f024bd8af1f5072d8415b5fad2d655ccb604e1bb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f024bd8af1f5072d8415b5fad2d655ccb604e1bb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}