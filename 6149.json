{"path":"lucene/replicator/src/test/org/apache/lucene/replicator/LocalReplicatorTest#testObtainMissingFile().mjava","commits":[{"id":"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4","date":1368446242,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/LocalReplicatorTest#testObtainMissingFile().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testObtainMissingFile() throws IOException {\n    replicator.publish(createRevision(1));\n    SessionToken res = replicator.checkForUpdate(null);\n    try {\n      replicator.obtainFile(res.id, res.sourceFiles.keySet().iterator().next(), \"madeUpFile\");\n      fail(\"should have failed obtaining an unrecognized file\");\n    } catch (FileNotFoundException e) {\n      // expected\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"99075c7701161b67b70a69143ceb3554a6cc7a71","date":1370786474,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/LocalReplicatorTest#testObtainMissingFile().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/LocalReplicatorTest#testObtainMissingFile().mjava","sourceNew":"  @Test\n  public void testObtainMissingFile() throws IOException {\n    replicator.publish(createRevision(1));\n    SessionToken res = replicator.checkForUpdate(null);\n    try {\n      replicator.obtainFile(res.id, res.sourceFiles.keySet().iterator().next(), \"madeUpFile\");\n      fail(\"should have failed obtaining an unrecognized file\");\n    } catch (FileNotFoundException e) {\n      // expected\n    } catch (NoSuchFileException e) {\n      // expected (only java 1.7)\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testObtainMissingFile() throws IOException {\n    replicator.publish(createRevision(1));\n    SessionToken res = replicator.checkForUpdate(null);\n    try {\n      replicator.obtainFile(res.id, res.sourceFiles.keySet().iterator().next(), \"madeUpFile\");\n      fail(\"should have failed obtaining an unrecognized file\");\n    } catch (FileNotFoundException e) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":["d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52","date":1370989568,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/LocalReplicatorTest#testObtainMissingFile().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/LocalReplicatorTest#testObtainMissingFile().mjava","sourceNew":"  @Test\n  public void testObtainMissingFile() throws IOException {\n    replicator.publish(createRevision(1));\n    SessionToken res = replicator.checkForUpdate(null);\n    try {\n      replicator.obtainFile(res.id, res.sourceFiles.keySet().iterator().next(), \"madeUpFile\");\n      fail(\"should have failed obtaining an unrecognized file\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testObtainMissingFile() throws IOException {\n    replicator.publish(createRevision(1));\n    SessionToken res = replicator.checkForUpdate(null);\n    try {\n      replicator.obtainFile(res.id, res.sourceFiles.keySet().iterator().next(), \"madeUpFile\");\n      fail(\"should have failed obtaining an unrecognized file\");\n    } catch (FileNotFoundException e) {\n      // expected\n    } catch (NoSuchFileException e) {\n      // expected (only java 1.7)\n    }\n  }\n\n","bugFix":["99075c7701161b67b70a69143ceb3554a6cc7a71","9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/LocalReplicatorTest#testObtainMissingFile().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/LocalReplicatorTest#testObtainMissingFile().mjava","sourceNew":"  @Test\n  public void testObtainMissingFile() throws IOException {\n    replicator.publish(createRevision(1));\n    SessionToken res = replicator.checkForUpdate(null);\n    try {\n      replicator.obtainFile(res.id, res.sourceFiles.keySet().iterator().next(), \"madeUpFile\");\n      fail(\"should have failed obtaining an unrecognized file\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testObtainMissingFile() throws IOException {\n    replicator.publish(createRevision(1));\n    SessionToken res = replicator.checkForUpdate(null);\n    try {\n      replicator.obtainFile(res.id, res.sourceFiles.keySet().iterator().next(), \"madeUpFile\");\n      fail(\"should have failed obtaining an unrecognized file\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/LocalReplicatorTest#testObtainMissingFile().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/LocalReplicatorTest#testObtainMissingFile().mjava","sourceNew":"  @Test\n  public void testObtainMissingFile() throws IOException {\n    replicator.publish(createRevision(1));\n    SessionToken res = replicator.checkForUpdate(null);\n    try {\n      replicator.obtainFile(res.id, res.sourceFiles.keySet().iterator().next(), \"madeUpFile\");\n      fail(\"should have failed obtaining an unrecognized file\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testObtainMissingFile() throws IOException {\n    replicator.publish(createRevision(1));\n    SessionToken res = replicator.checkForUpdate(null);\n    try {\n      replicator.obtainFile(res.id, res.sourceFiles.keySet().iterator().next(), \"madeUpFile\");\n      fail(\"should have failed obtaining an unrecognized file\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cd8a7e622c1138188be79e193b1dc52f3f0889a5","date":1564419078,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/LocalReplicatorTest#testObtainMissingFile().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/LocalReplicatorTest#testObtainMissingFile().mjava","sourceNew":"  @Test\n  public void testObtainMissingFile() throws IOException {\n    replicator.publish(createRevision(1));\n    SessionToken res = replicator.checkForUpdate(null);\n    expectThrowsAnyOf(Arrays.asList(FileNotFoundException.class, NoSuchFileException.class), () -> {\n      replicator.obtainFile(res.id, res.sourceFiles.keySet().iterator().next(), \"madeUpFile\");\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testObtainMissingFile() throws IOException {\n    replicator.publish(createRevision(1));\n    SessionToken res = replicator.checkForUpdate(null);\n    try {\n      replicator.obtainFile(res.id, res.sourceFiles.keySet().iterator().next(), \"madeUpFile\");\n      fail(\"should have failed obtaining an unrecognized file\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/LocalReplicatorTest#testObtainMissingFile().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/LocalReplicatorTest#testObtainMissingFile().mjava","sourceNew":"  @Test\n  public void testObtainMissingFile() throws IOException {\n    replicator.publish(createRevision(1));\n    SessionToken res = replicator.checkForUpdate(null);\n    expectThrowsAnyOf(Arrays.asList(FileNotFoundException.class, NoSuchFileException.class), () -> {\n      replicator.obtainFile(res.id, res.sourceFiles.keySet().iterator().next(), \"madeUpFile\");\n    });\n  }\n\n","sourceOld":"  @Test\n  public void testObtainMissingFile() throws IOException {\n    replicator.publish(createRevision(1));\n    SessionToken res = replicator.checkForUpdate(null);\n    try {\n      replicator.obtainFile(res.id, res.sourceFiles.keySet().iterator().next(), \"madeUpFile\");\n      fail(\"should have failed obtaining an unrecognized file\");\n    } catch (FileNotFoundException | NoSuchFileException e) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd8a7e622c1138188be79e193b1dc52f3f0889a5":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52":["99075c7701161b67b70a69143ceb3554a6cc7a71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52"],"99075c7701161b67b70a69143ceb3554a6cc7a71":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"f8061ddd97f3352007d927dae445884a6f3d857b":["19275ba31e621f6da1b83bf13af75233876fd3d4","cd8a7e622c1138188be79e193b1dc52f3f0889a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cd8a7e622c1138188be79e193b1dc52f3f0889a5"]},"commit2Childs":{"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4":["99075c7701161b67b70a69143ceb3554a6cc7a71"],"cd8a7e622c1138188be79e193b1dc52f3f0889a5":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["cd8a7e622c1138188be79e193b1dc52f3f0889a5","f8061ddd97f3352007d927dae445884a6f3d857b"],"99075c7701161b67b70a69143ceb3554a6cc7a71":["d1498f09c87cd5e5f3085bdcbdb9a6bc30410d52"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}