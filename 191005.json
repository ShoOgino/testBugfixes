{"path":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#close().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#close().mjava","pathOld":"src/java/org/apache/lucene/index/TermVectorsReader#close().mjava","sourceNew":"  void close() throws IOException {\n    // make all effort to close up. Keep the first exception\n    // and throw it as a new one.\n    IOException keep = null;\n    if (tvx != null) try { tvx.close(); } catch (IOException e) { keep = e; }\n    if (tvd != null) try { tvd.close(); } catch (IOException e) { if (keep == null) keep = e; }\n    if (tvf  != null) try {  tvf.close(); } catch (IOException e) { if (keep == null) keep = e; }\n    if (keep != null) throw (IOException) keep.fillInStackTrace();\n  }\n\n","sourceOld":"  void close() throws IOException {\n    // make all effort to close up. Keep the first exception\n    // and throw it as a new one.\n    IOException keep = null;\n    if (tvx != null) try { tvx.close(); } catch (IOException e) { keep = e; }\n    if (tvd != null) try { tvd.close(); } catch (IOException e) { if (keep == null) keep = e; }\n    if (tvf  != null) try {  tvf.close(); } catch (IOException e) { if (keep == null) keep = e; }\n    if (keep != null) throw (IOException) keep.fillInStackTrace();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c61ee18b40abd78015c77a335ad05ff77899a8d0","date":1310043002,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#close().mjava","sourceNew":"  public void close() throws IOException {\n    IOUtils.closeSafely(false, tvx, tvd, tvf);\n  }\n\n","sourceOld":"  void close() throws IOException {\n    // make all effort to close up. Keep the first exception\n    // and throw it as a new one.\n    IOException keep = null;\n    if (tvx != null) try { tvx.close(); } catch (IOException e) { keep = e; }\n    if (tvd != null) try { tvd.close(); } catch (IOException e) { if (keep == null) keep = e; }\n    if (tvf  != null) try {  tvf.close(); } catch (IOException e) { if (keep == null) keep = e; }\n    if (keep != null) throw (IOException) keep.fillInStackTrace();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#close().mjava","sourceNew":"  public void close() throws IOException {\n    IOUtils.closeSafely(false, tvx, tvd, tvf);\n  }\n\n","sourceOld":"  void close() throws IOException {\n    // make all effort to close up. Keep the first exception\n    // and throw it as a new one.\n    IOException keep = null;\n    if (tvx != null) try { tvx.close(); } catch (IOException e) { keep = e; }\n    if (tvd != null) try { tvd.close(); } catch (IOException e) { if (keep == null) keep = e; }\n    if (tvf  != null) try {  tvf.close(); } catch (IOException e) { if (keep == null) keep = e; }\n    if (keep != null) throw (IOException) keep.fillInStackTrace();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#close().mjava","sourceNew":"  public void close() throws IOException {\n    IOUtils.closeSafely(false, tvx, tvd, tvf);\n  }\n\n","sourceOld":"  void close() throws IOException {\n    // make all effort to close up. Keep the first exception\n    // and throw it as a new one.\n    IOException keep = null;\n    if (tvx != null) try { tvx.close(); } catch (IOException e) { keep = e; }\n    if (tvd != null) try { tvd.close(); } catch (IOException e) { if (keep == null) keep = e; }\n    if (tvf  != null) try {  tvf.close(); } catch (IOException e) { if (keep == null) keep = e; }\n    if (keep != null) throw (IOException) keep.fillInStackTrace();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24230fe54121f9be9d85f2c2067536296785e421","date":1314462346,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#close().mjava","sourceNew":"  public void close() throws IOException {\n    IOUtils.close(tvx, tvd, tvf);\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    IOUtils.closeSafely(false, tvx, tvd, tvf);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultTermVectorsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermVectorsReader#close().mjava","sourceNew":"  public void close() throws IOException {\n    IOUtils.close(tvx, tvd, tvf);\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    IOUtils.close(tvx, tvd, tvf);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24230fe54121f9be9d85f2c2067536296785e421":["c61ee18b40abd78015c77a335ad05ff77899a8d0"],"1291e4568eb7d9463d751627596ef14baf4c1603":["9454a6510e2db155fb01faa5c049b06ece95fab9","c61ee18b40abd78015c77a335ad05ff77899a8d0"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["9454a6510e2db155fb01faa5c049b06ece95fab9","c61ee18b40abd78015c77a335ad05ff77899a8d0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["24230fe54121f9be9d85f2c2067536296785e421"],"c61ee18b40abd78015c77a335ad05ff77899a8d0":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc749c053615f5871f3b95715fe292f34e70a53"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"24230fe54121f9be9d85f2c2067536296785e421":["3cc749c053615f5871f3b95715fe292f34e70a53"],"1291e4568eb7d9463d751627596ef14baf4c1603":[],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3cc749c053615f5871f3b95715fe292f34e70a53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c61ee18b40abd78015c77a335ad05ff77899a8d0":["24230fe54121f9be9d85f2c2067536296785e421","1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","c61ee18b40abd78015c77a335ad05ff77899a8d0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}