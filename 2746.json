{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#buildDocument(BytesRef,Set[BytesRef],long,BytesRef).mjava","commits":[{"id":"58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b","date":1395588343,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#buildDocument(BytesRef,Set[BytesRef],long,BytesRef).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#add(BytesRef,long,BytesRef).mjava","sourceNew":"  private Document buildDocument(BytesRef text, Set<BytesRef> contexts, long weight, BytesRef payload) throws IOException {\n    String textString = text.utf8ToString();\n    Document doc = new Document();\n    FieldType ft = getTextFieldType();\n    doc.add(new Field(TEXT_FIELD_NAME, textString, ft));\n    doc.add(new Field(\"textgrams\", textString, ft));\n    doc.add(new StringField(EXACT_TEXT_FIELD_NAME, textString, Field.Store.NO));\n    doc.add(new BinaryDocValuesField(TEXT_FIELD_NAME, text));\n    doc.add(new NumericDocValuesField(\"weight\", weight));\n    if (payload != null) {\n      doc.add(new BinaryDocValuesField(\"payloads\", payload));\n    }\n    if (contexts != null) {\n      for(BytesRef context : contexts) {\n        // TODO: if we had a BinaryTermField we could fix\n        // this \"must be valid ut8f\" limitation:\n        doc.add(new StringField(CONTEXTS_FIELD_NAME, context.utf8ToString(), Field.Store.NO));\n        doc.add(new SortedSetDocValuesField(CONTEXTS_FIELD_NAME, context));\n      }\n    }\n    return doc;\n  }\n\n","sourceOld":"  /** Adds a new suggestion.  Be sure to use {@link #update}\n   *  instead if you want to replace a previous suggestion.\n   *  After adding or updating a batch of new suggestions,\n   *  you must call {@link #refresh} in the end in order to\n   *  see the suggestions in {@link #lookup} */\n  public void add(BytesRef text, long weight, BytesRef payload) throws IOException {\n    String textString = text.utf8ToString();\n    Document doc = new Document();\n    FieldType ft = getTextFieldType();\n    doc.add(new Field(TEXT_FIELD_NAME, textString, ft));\n    doc.add(new Field(\"textgrams\", textString, ft));\n    doc.add(new StringField(EXACT_TEXT_FIELD_NAME, textString, Field.Store.NO));\n    doc.add(new BinaryDocValuesField(TEXT_FIELD_NAME, text));\n    doc.add(new NumericDocValuesField(\"weight\", weight));\n    if (payload != null) {\n      doc.add(new BinaryDocValuesField(\"payloads\", payload));\n    }\n    writer.addDocument(doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b28ce1e2b0fd85f7ca7f72b9ab2ae1f5350c9005","date":1431617381,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#buildDocument(BytesRef,Set[BytesRef],long,BytesRef).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#buildDocument(BytesRef,Set[BytesRef],long,BytesRef).mjava","sourceNew":"  private Document buildDocument(BytesRef text, Set<BytesRef> contexts, long weight, BytesRef payload) throws IOException {\n    String textString = text.utf8ToString();\n    Document doc = new Document();\n    FieldType ft = getTextFieldType();\n    doc.add(new Field(TEXT_FIELD_NAME, textString, ft));\n    doc.add(new Field(\"textgrams\", textString, ft));\n    doc.add(new StringField(EXACT_TEXT_FIELD_NAME, textString, Field.Store.NO));\n    doc.add(new BinaryDocValuesField(TEXT_FIELD_NAME, text));\n    doc.add(new NumericDocValuesField(\"weight\", weight));\n    if (payload != null) {\n      doc.add(new BinaryDocValuesField(\"payloads\", payload));\n    }\n    if (contexts != null) {\n      for(BytesRef context : contexts) {\n        doc.add(new StringField(CONTEXTS_FIELD_NAME, context, Field.Store.NO));\n        doc.add(new SortedSetDocValuesField(CONTEXTS_FIELD_NAME, context));\n      }\n    }\n    return doc;\n  }\n\n","sourceOld":"  private Document buildDocument(BytesRef text, Set<BytesRef> contexts, long weight, BytesRef payload) throws IOException {\n    String textString = text.utf8ToString();\n    Document doc = new Document();\n    FieldType ft = getTextFieldType();\n    doc.add(new Field(TEXT_FIELD_NAME, textString, ft));\n    doc.add(new Field(\"textgrams\", textString, ft));\n    doc.add(new StringField(EXACT_TEXT_FIELD_NAME, textString, Field.Store.NO));\n    doc.add(new BinaryDocValuesField(TEXT_FIELD_NAME, text));\n    doc.add(new NumericDocValuesField(\"weight\", weight));\n    if (payload != null) {\n      doc.add(new BinaryDocValuesField(\"payloads\", payload));\n    }\n    if (contexts != null) {\n      for(BytesRef context : contexts) {\n        // TODO: if we had a BinaryTermField we could fix\n        // this \"must be valid ut8f\" limitation:\n        doc.add(new StringField(CONTEXTS_FIELD_NAME, context.utf8ToString(), Field.Store.NO));\n        doc.add(new SortedSetDocValuesField(CONTEXTS_FIELD_NAME, context));\n      }\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d31848ef598c839e93829db4cbab650e1b59430a","date":1498810024,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#buildDocument(BytesRef,Set[BytesRef],long,BytesRef).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#buildDocument(BytesRef,Set[BytesRef],long,BytesRef).mjava","sourceNew":"  private Document buildDocument(BytesRef text, Set<BytesRef> contexts, long weight, BytesRef payload) throws IOException {\n    String textString = text.utf8ToString();\n    Document doc = new Document();\n    FieldType ft = getTextFieldType();\n    doc.add(new Field(TEXT_FIELD_NAME, textString, ft));\n    if (minPrefixChars>0) {\n      doc.add(new Field(TEXTGRAMS_FIELD_NAME, textString, ft));\n    }\n    doc.add(new StringField(EXACT_TEXT_FIELD_NAME, textString, Field.Store.NO));\n    doc.add(new BinaryDocValuesField(TEXT_FIELD_NAME, text));\n    doc.add(new NumericDocValuesField(\"weight\", weight));\n    if (payload != null) {\n      doc.add(new BinaryDocValuesField(\"payloads\", payload));\n    }\n    if (contexts != null) {\n      for(BytesRef context : contexts) {\n        doc.add(new StringField(CONTEXTS_FIELD_NAME, context, Field.Store.NO));\n        doc.add(new SortedSetDocValuesField(CONTEXTS_FIELD_NAME, context));\n      }\n    }\n    return doc;\n  }\n\n","sourceOld":"  private Document buildDocument(BytesRef text, Set<BytesRef> contexts, long weight, BytesRef payload) throws IOException {\n    String textString = text.utf8ToString();\n    Document doc = new Document();\n    FieldType ft = getTextFieldType();\n    doc.add(new Field(TEXT_FIELD_NAME, textString, ft));\n    doc.add(new Field(\"textgrams\", textString, ft));\n    doc.add(new StringField(EXACT_TEXT_FIELD_NAME, textString, Field.Store.NO));\n    doc.add(new BinaryDocValuesField(TEXT_FIELD_NAME, text));\n    doc.add(new NumericDocValuesField(\"weight\", weight));\n    if (payload != null) {\n      doc.add(new BinaryDocValuesField(\"payloads\", payload));\n    }\n    if (contexts != null) {\n      for(BytesRef context : contexts) {\n        doc.add(new StringField(CONTEXTS_FIELD_NAME, context, Field.Store.NO));\n        doc.add(new SortedSetDocValuesField(CONTEXTS_FIELD_NAME, context));\n      }\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"182384b20c064aa16998ddebe9f36e649279c5a6","date":1503596494,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#buildDocument(BytesRef,Set[BytesRef],long,BytesRef).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#buildDocument(BytesRef,Set[BytesRef],long,BytesRef).mjava","sourceNew":"  private Document buildDocument(BytesRef text, Set<BytesRef> contexts, long weight, BytesRef payload) throws IOException {\n    String textString = text.utf8ToString();\n    Document doc = new Document();\n    FieldType ft = getTextFieldType();\n    doc.add(new Field(TEXT_FIELD_NAME, textString, ft));\n    if (minPrefixChars>0) {\n      doc.add(new Field(TEXTGRAMS_FIELD_NAME, textString, ft));\n    }\n    doc.add(new StringField(EXACT_TEXT_FIELD_NAME, textString, Field.Store.NO));\n    doc.add(new BinaryDocValuesField(TEXT_FIELD_NAME, text));\n    doc.add(new NumericDocValuesField(\"weight\", weight));\n    if (payload != null) {\n      doc.add(new BinaryDocValuesField(\"payloads\", payload));\n    }\n    if (contexts != null) {\n      for(BytesRef context : contexts) {\n        doc.add(new StringField(CONTEXTS_FIELD_NAME, context, Field.Store.NO));\n        doc.add(new SortedSetDocValuesField(CONTEXTS_FIELD_NAME, context));\n      }\n    }\n    return doc;\n  }\n\n","sourceOld":"  private Document buildDocument(BytesRef text, Set<BytesRef> contexts, long weight, BytesRef payload) throws IOException {\n    String textString = text.utf8ToString();\n    Document doc = new Document();\n    FieldType ft = getTextFieldType();\n    doc.add(new Field(TEXT_FIELD_NAME, textString, ft));\n    doc.add(new Field(\"textgrams\", textString, ft));\n    doc.add(new StringField(EXACT_TEXT_FIELD_NAME, textString, Field.Store.NO));\n    doc.add(new BinaryDocValuesField(TEXT_FIELD_NAME, text));\n    doc.add(new NumericDocValuesField(\"weight\", weight));\n    if (payload != null) {\n      doc.add(new BinaryDocValuesField(\"payloads\", payload));\n    }\n    if (contexts != null) {\n      for(BytesRef context : contexts) {\n        doc.add(new StringField(CONTEXTS_FIELD_NAME, context, Field.Store.NO));\n        doc.add(new SortedSetDocValuesField(CONTEXTS_FIELD_NAME, context));\n      }\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#buildDocument(BytesRef,Set[BytesRef],long,BytesRef).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#buildDocument(BytesRef,Set[BytesRef],long,BytesRef).mjava","sourceNew":"  private Document buildDocument(BytesRef text, Set<BytesRef> contexts, long weight, BytesRef payload) throws IOException {\n    String textString = text.utf8ToString();\n    Document doc = new Document();\n    FieldType ft = getTextFieldType();\n    doc.add(new Field(TEXT_FIELD_NAME, textString, ft));\n    if (minPrefixChars>0) {\n      doc.add(new Field(TEXTGRAMS_FIELD_NAME, textString, ft));\n    }\n    doc.add(new StringField(EXACT_TEXT_FIELD_NAME, textString, Field.Store.NO));\n    doc.add(new BinaryDocValuesField(TEXT_FIELD_NAME, text));\n    doc.add(new NumericDocValuesField(\"weight\", weight));\n    if (payload != null) {\n      doc.add(new BinaryDocValuesField(\"payloads\", payload));\n    }\n    if (contexts != null) {\n      for(BytesRef context : contexts) {\n        doc.add(new StringField(CONTEXTS_FIELD_NAME, context, Field.Store.NO));\n        doc.add(new SortedSetDocValuesField(CONTEXTS_FIELD_NAME, context));\n      }\n    }\n    return doc;\n  }\n\n","sourceOld":"  private Document buildDocument(BytesRef text, Set<BytesRef> contexts, long weight, BytesRef payload) throws IOException {\n    String textString = text.utf8ToString();\n    Document doc = new Document();\n    FieldType ft = getTextFieldType();\n    doc.add(new Field(TEXT_FIELD_NAME, textString, ft));\n    doc.add(new Field(\"textgrams\", textString, ft));\n    doc.add(new StringField(EXACT_TEXT_FIELD_NAME, textString, Field.Store.NO));\n    doc.add(new BinaryDocValuesField(TEXT_FIELD_NAME, text));\n    doc.add(new NumericDocValuesField(\"weight\", weight));\n    if (payload != null) {\n      doc.add(new BinaryDocValuesField(\"payloads\", payload));\n    }\n    if (contexts != null) {\n      for(BytesRef context : contexts) {\n        doc.add(new StringField(CONTEXTS_FIELD_NAME, context, Field.Store.NO));\n        doc.add(new SortedSetDocValuesField(CONTEXTS_FIELD_NAME, context));\n      }\n    }\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d31848ef598c839e93829db4cbab650e1b59430a":["b28ce1e2b0fd85f7ca7f72b9ab2ae1f5350c9005"],"58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["b28ce1e2b0fd85f7ca7f72b9ab2ae1f5350c9005","182384b20c064aa16998ddebe9f36e649279c5a6"],"b28ce1e2b0fd85f7ca7f72b9ab2ae1f5350c9005":["58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"182384b20c064aa16998ddebe9f36e649279c5a6":["b28ce1e2b0fd85f7ca7f72b9ab2ae1f5350c9005","d31848ef598c839e93829db4cbab650e1b59430a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["182384b20c064aa16998ddebe9f36e649279c5a6"]},"commit2Childs":{"d31848ef598c839e93829db4cbab650e1b59430a":["182384b20c064aa16998ddebe9f36e649279c5a6"],"58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b":["b28ce1e2b0fd85f7ca7f72b9ab2ae1f5350c9005"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"b28ce1e2b0fd85f7ca7f72b9ab2ae1f5350c9005":["d31848ef598c839e93829db4cbab650e1b59430a","3a7809d1d753b67f48b1a706e17034bf8b624ea3","182384b20c064aa16998ddebe9f36e649279c5a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["58d0345a28bb6b4be59c38e6a77e2cc0e615ee4b"],"182384b20c064aa16998ddebe9f36e649279c5a6":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}