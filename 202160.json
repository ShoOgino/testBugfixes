{"path":"solr/core/src/java/org/apache/solr/rest/ManagedResource#reloadFromStorage().mjava","commits":[{"id":"afb6bf9ce227ab6aac5068547e286ecc958b8b9d","date":1394661169,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/ManagedResource#reloadFromStorage().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Invoked when this object determines it needs to reload the stored data.\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected synchronized void reloadFromStorage() throws SolrException {\n    String resourceId = getResourceId();\n    Object data = null;\n    try {\n      data = storage.load(resourceId);\n    } catch (FileNotFoundException fnf) {\n      log.warn(\"No stored data found for {}\", resourceId);\n    } catch (IOException ioExc) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \n          \"Failed to load stored data for \"+resourceId+\" due to: \"+ioExc, ioExc);\n    }\n\n    Object managedData = null;    \n    if (data != null) {\n      if (!(data instanceof Map)) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \n            \"Stored data for \"+resourceId+\" is not a valid JSON object!\");\n      }\n\n      Map<String,Object> jsonMap = (Map<String,Object>)data;\n      Map<String,Object> initArgsMap = (Map<String,Object>)jsonMap.get(INIT_ARGS_JSON_FIELD);\n      managedInitArgs = new NamedList<>(initArgsMap);\n      log.info(\"Loaded initArgs {} for {}\", managedInitArgs, resourceId);\n      \n      if (jsonMap.containsKey(MANAGED_JSON_LIST_FIELD)) {\n        Object jsonList = jsonMap.get(MANAGED_JSON_LIST_FIELD);\n        if (!(jsonList instanceof List)) {\n          String errMsg = \n              String.format(Locale.ROOT,\n                  \"Expected JSON array as value for %s but client sent a %s instead!\",\n                  MANAGED_JSON_LIST_FIELD, jsonList.getClass().getName());\n          throw new SolrException(ErrorCode.SERVER_ERROR, errMsg);\n        }\n        \n        managedData = jsonList;\n      } else if (jsonMap.containsKey(MANAGED_JSON_MAP_FIELD)) {\n        Object jsonObj = jsonMap.get(MANAGED_JSON_MAP_FIELD);\n        if (!(jsonObj instanceof Map)) {\n          String errMsg = \n              String.format(Locale.ROOT,\n                  \"Expected JSON map as value for %s but client sent a %s instead!\",\n                  MANAGED_JSON_MAP_FIELD, jsonObj.getClass().getName());\n          throw new SolrException(ErrorCode.SERVER_ERROR, errMsg);\n        }\n        \n        managedData = jsonObj;\n      }      \n    }\n    \n    if (managedInitArgs == null) {\n      managedInitArgs = new NamedList<>();\n    }\n        \n    onManagedDataLoadedFromStorage(managedInitArgs, managedData);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["aebec5e84983a45d78a72ed0d459b5e033302bda"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"aebec5e84983a45d78a72ed0d459b5e033302bda","date":1419445941,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/ManagedResource#reloadFromStorage().mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/ManagedResource#reloadFromStorage().mjava","sourceNew":"  /**\n   * Invoked when this object determines it needs to reload the stored data.\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected synchronized void reloadFromStorage() throws SolrException {\n    String resourceId = getResourceId();\n    Object data = null;\n    try {\n      data = storage.load(resourceId);\n    } catch (FileNotFoundException fnf) {\n      log.warn(\"No stored data found for {}\", resourceId);\n    } catch (IOException ioExc) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \n          \"Failed to load stored data for \"+resourceId+\" due to: \"+ioExc, ioExc);\n    }\n\n    Object managedData = processStoredData(data);\n\n    if (managedInitArgs == null)\n      managedInitArgs = new NamedList<>();\n\n    onManagedDataLoadedFromStorage(managedInitArgs, managedData);\n  }\n\n","sourceOld":"  /**\n   * Invoked when this object determines it needs to reload the stored data.\n   */\n  @SuppressWarnings(\"unchecked\")\n  protected synchronized void reloadFromStorage() throws SolrException {\n    String resourceId = getResourceId();\n    Object data = null;\n    try {\n      data = storage.load(resourceId);\n    } catch (FileNotFoundException fnf) {\n      log.warn(\"No stored data found for {}\", resourceId);\n    } catch (IOException ioExc) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \n          \"Failed to load stored data for \"+resourceId+\" due to: \"+ioExc, ioExc);\n    }\n\n    Object managedData = null;    \n    if (data != null) {\n      if (!(data instanceof Map)) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \n            \"Stored data for \"+resourceId+\" is not a valid JSON object!\");\n      }\n\n      Map<String,Object> jsonMap = (Map<String,Object>)data;\n      Map<String,Object> initArgsMap = (Map<String,Object>)jsonMap.get(INIT_ARGS_JSON_FIELD);\n      managedInitArgs = new NamedList<>(initArgsMap);\n      log.info(\"Loaded initArgs {} for {}\", managedInitArgs, resourceId);\n      \n      if (jsonMap.containsKey(MANAGED_JSON_LIST_FIELD)) {\n        Object jsonList = jsonMap.get(MANAGED_JSON_LIST_FIELD);\n        if (!(jsonList instanceof List)) {\n          String errMsg = \n              String.format(Locale.ROOT,\n                  \"Expected JSON array as value for %s but client sent a %s instead!\",\n                  MANAGED_JSON_LIST_FIELD, jsonList.getClass().getName());\n          throw new SolrException(ErrorCode.SERVER_ERROR, errMsg);\n        }\n        \n        managedData = jsonList;\n      } else if (jsonMap.containsKey(MANAGED_JSON_MAP_FIELD)) {\n        Object jsonObj = jsonMap.get(MANAGED_JSON_MAP_FIELD);\n        if (!(jsonObj instanceof Map)) {\n          String errMsg = \n              String.format(Locale.ROOT,\n                  \"Expected JSON map as value for %s but client sent a %s instead!\",\n                  MANAGED_JSON_MAP_FIELD, jsonObj.getClass().getName());\n          throw new SolrException(ErrorCode.SERVER_ERROR, errMsg);\n        }\n        \n        managedData = jsonObj;\n      }      \n    }\n    \n    if (managedInitArgs == null) {\n      managedInitArgs = new NamedList<>();\n    }\n        \n    onManagedDataLoadedFromStorage(managedInitArgs, managedData);\n  }\n\n","bugFix":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aebec5e84983a45d78a72ed0d459b5e033302bda":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aebec5e84983a45d78a72ed0d459b5e033302bda"]},"commit2Childs":{"aebec5e84983a45d78a72ed0d459b5e033302bda":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["aebec5e84983a45d78a72ed0d459b5e033302bda"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}