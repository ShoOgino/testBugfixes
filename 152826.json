{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","commits":[{"id":"25308800fd7565ab31e6353077a56bba68fb0668","date":1355337658,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene41Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene41Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e","date":1358793943,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","sourceNew":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene42Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","sourceOld":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene41Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eda61b1e90b490cc5837200e04c02639a0d272c7","date":1358795519,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","sourceNew":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene41Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n    this.termVectorsFormat = new CompressingTermVectorsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","sourceOld":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene41Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","sourceNew":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene42Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n    this.termVectorsFormat = new CompressingTermVectorsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","sourceOld":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene42Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33aeb9ed95127e3cb6b2abce6c4b0441e6c3633","date":1359743129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","sourceNew":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene42Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n    this.termVectorsFormat = new CompressingTermVectorsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","sourceOld":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene41Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n    this.termVectorsFormat = new CompressingTermVectorsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11a746437bc5c0a0b3df0337ed249c387c812871","date":1376687959,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","sourceNew":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene45Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n    this.termVectorsFormat = new CompressingTermVectorsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","sourceOld":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene42Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n    this.termVectorsFormat = new CompressingTermVectorsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","sourceNew":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene45Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n    this.termVectorsFormat = new CompressingTermVectorsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","sourceOld":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene42Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n    this.termVectorsFormat = new CompressingTermVectorsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","sourceNew":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene45Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n    this.termVectorsFormat = new CompressingTermVectorsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","sourceOld":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene42Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n    this.termVectorsFormat = new CompressingTermVectorsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8435160e9702b19398118ddf76b61c846612b6a4","date":1380349140,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","sourceNew":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene46Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n    this.termVectorsFormat = new CompressingTermVectorsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","sourceOld":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene45Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n    this.termVectorsFormat = new CompressingTermVectorsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","bugFix":null,"bugIntro":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8106bc60c7452250f84c65cdb43ab6b1d8eb1534","date":1401906364,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","sourceNew":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene49Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n    this.termVectorsFormat = new CompressingTermVectorsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","sourceOld":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene46Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n    this.termVectorsFormat = new CompressingTermVectorsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","bugFix":["8435160e9702b19398118ddf76b61c846612b6a4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793","date":1408030244,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","sourceNew":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene410Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n    this.termVectorsFormat = new CompressingTermVectorsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","sourceOld":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene49Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n    this.termVectorsFormat = new CompressingTermVectorsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"941b7027a51547b0a38d711bc08ec354f9e2e4a7","date":1411394279,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","sourceNew":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, TestUtil.getDefaultCodec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n    this.termVectorsFormat = new CompressingTermVectorsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","sourceOld":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, new Lucene410Codec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n    this.termVectorsFormat = new CompressingTermVectorsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"699a2199028b8eadcc558eebcf669e5fc708524a","date":1417544403,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#CompressingCodec(String,String,CompressionMode,int).mjava","sourceNew":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize, int maxDocsPerChunk) {\n    super(name, TestUtil.getDefaultCodec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize, maxDocsPerChunk);\n    this.termVectorsFormat = new CompressingTermVectorsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","sourceOld":"  /**\n   * Creates a compressing codec with a given segment suffix\n   */\n  public CompressingCodec(String name, String segmentSuffix, CompressionMode compressionMode, int chunkSize) {\n    super(name, TestUtil.getDefaultCodec());\n    this.storedFieldsFormat = new CompressingStoredFieldsFormat(name, segmentSuffix, compressionMode, chunkSize);\n    this.termVectorsFormat = new CompressingTermVectorsFormat(name, segmentSuffix, compressionMode, chunkSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","25308800fd7565ab31e6353077a56bba68fb0668"],"eda61b1e90b490cc5837200e04c02639a0d272c7":["25308800fd7565ab31e6353077a56bba68fb0668"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["d33aeb9ed95127e3cb6b2abce6c4b0441e6c3633","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"8435160e9702b19398118ddf76b61c846612b6a4":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["d33aeb9ed95127e3cb6b2abce6c4b0441e6c3633","11a746437bc5c0a0b3df0337ed249c387c812871"],"07155cdd910937cdf6877e48884d5782845c8b8b":["3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e","eda61b1e90b490cc5837200e04c02639a0d272c7"],"699a2199028b8eadcc558eebcf669e5fc708524a":["941b7027a51547b0a38d711bc08ec354f9e2e4a7"],"d33aeb9ed95127e3cb6b2abce6c4b0441e6c3633":["eda61b1e90b490cc5837200e04c02639a0d272c7"],"25308800fd7565ab31e6353077a56bba68fb0668":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"11a746437bc5c0a0b3df0337ed249c387c812871":["d33aeb9ed95127e3cb6b2abce6c4b0441e6c3633"],"3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8106bc60c7452250f84c65cdb43ab6b1d8eb1534":["8435160e9702b19398118ddf76b61c846612b6a4"],"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["699a2199028b8eadcc558eebcf669e5fc708524a"],"941b7027a51547b0a38d711bc08ec354f9e2e4a7":["0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e"],"eda61b1e90b490cc5837200e04c02639a0d272c7":["07155cdd910937cdf6877e48884d5782845c8b8b","d33aeb9ed95127e3cb6b2abce6c4b0441e6c3633"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"8435160e9702b19398118ddf76b61c846612b6a4":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","8435160e9702b19398118ddf76b61c846612b6a4"],"07155cdd910937cdf6877e48884d5782845c8b8b":[],"699a2199028b8eadcc558eebcf669e5fc708524a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d33aeb9ed95127e3cb6b2abce6c4b0441e6c3633":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","11a746437bc5c0a0b3df0337ed249c387c812871"],"25308800fd7565ab31e6353077a56bba68fb0668":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","eda61b1e90b490cc5837200e04c02639a0d272c7"],"11a746437bc5c0a0b3df0337ed249c387c812871":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e":["07155cdd910937cdf6877e48884d5782845c8b8b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","25308800fd7565ab31e6353077a56bba68fb0668"],"8106bc60c7452250f84c65cdb43ab6b1d8eb1534":["0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793"],"0ce5e7f280a7b3f0f96f2623d9f0ce70f742b793":["941b7027a51547b0a38d711bc08ec354f9e2e4a7"],"941b7027a51547b0a38d711bc08ec354f9e2e4a7":["699a2199028b8eadcc558eebcf669e5fc708524a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","07155cdd910937cdf6877e48884d5782845c8b8b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}