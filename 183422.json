{"path":"lucene/core/src/java/org/apache/lucene/document/DoubleField#DoubleField(String,double,FieldType).mjava","commits":[{"id":"a78a90fc9701e511308346ea29f4f5e548bb39fe","date":1329489995,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/DoubleField#DoubleField(String,double,FieldType).mjava","pathOld":"/dev/null","sourceNew":"  /** Expert: allows you to customize the {@link\n   *  FieldType}. */\n  public DoubleField(String name, double value, FieldType type) {\n    super(name, type);\n    if (type.numericType() != FieldType.NumericType.DOUBLE) {\n      throw new IllegalArgumentException(\"type.numericType() must be DOUBLE but got \" + type.numericType());\n    }\n    fieldsData = Double.valueOf(value);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d","date":1346337224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/DoubleField#DoubleField(String,double,FieldType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/DoubleField#DoubleField(String,double,FieldType).mjava","sourceNew":"  /** Expert: allows you to customize the {@link\n   *  FieldType}. \n   *  @param name field name\n   *  @param value 64-bit double value\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link FieldType.NumericType#DOUBLE}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a DOUBLE numericType()\n   */\n  public DoubleField(String name, double value, FieldType type) {\n    super(name, type);\n    if (type.numericType() != FieldType.NumericType.DOUBLE) {\n      throw new IllegalArgumentException(\"type.numericType() must be DOUBLE but got \" + type.numericType());\n    }\n    fieldsData = Double.valueOf(value);\n  }\n\n","sourceOld":"  /** Expert: allows you to customize the {@link\n   *  FieldType}. */\n  public DoubleField(String name, double value, FieldType type) {\n    super(name, type);\n    if (type.numericType() != FieldType.NumericType.DOUBLE) {\n      throw new IllegalArgumentException(\"type.numericType() must be DOUBLE but got \" + type.numericType());\n    }\n    fieldsData = Double.valueOf(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/DoubleField#DoubleField(String,double,FieldType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/DoubleField#DoubleField(String,double,FieldType).mjava","sourceNew":"  /** Expert: allows you to customize the {@link\n   *  FieldType}. \n   *  @param name field name\n   *  @param value 64-bit double value\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link FieldType.NumericType#DOUBLE}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a DOUBLE numericType()\n   */\n  public DoubleField(String name, double value, FieldType type) {\n    super(name, type);\n    if (type.numericType() != FieldType.NumericType.DOUBLE) {\n      throw new IllegalArgumentException(\"type.numericType() must be DOUBLE but got \" + type.numericType());\n    }\n    fieldsData = Double.valueOf(value);\n  }\n\n","sourceOld":"  /** Expert: allows you to customize the {@link\n   *  FieldType}. */\n  public DoubleField(String name, double value, FieldType type) {\n    super(name, type);\n    if (type.numericType() != FieldType.NumericType.DOUBLE) {\n      throw new IllegalArgumentException(\"type.numericType() must be DOUBLE but got \" + type.numericType());\n    }\n    fieldsData = Double.valueOf(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LegacyDoubleField#LegacyDoubleField(String,double,FieldType).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/DoubleField#DoubleField(String,double,FieldType).mjava","sourceNew":"  /** Expert: allows you to customize the {@link\n   *  FieldType}. \n   *  @param name field name\n   *  @param value 64-bit double value\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link org.apache.lucene.document.FieldType.LegacyNumericType#DOUBLE}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a DOUBLE numericType()\n   */\n  public LegacyDoubleField(String name, double value, FieldType type) {\n    super(name, type);\n    if (type.numericType() != FieldType.LegacyNumericType.DOUBLE) {\n      throw new IllegalArgumentException(\"type.numericType() must be DOUBLE but got \" + type.numericType());\n    }\n    fieldsData = Double.valueOf(value);\n  }\n\n","sourceOld":"  /** Expert: allows you to customize the {@link\n   *  FieldType}. \n   *  @param name field name\n   *  @param value 64-bit double value\n   *  @param type customized field type: must have {@link FieldType#numericType()}\n   *         of {@link FieldType.NumericType#DOUBLE}.\n   *  @throws IllegalArgumentException if the field name or type is null, or\n   *          if the field type does not have a DOUBLE numericType()\n   */\n  public DoubleField(String name, double value, FieldType type) {\n    super(name, type);\n    if (type.numericType() != FieldType.NumericType.DOUBLE) {\n      throw new IllegalArgumentException(\"type.numericType() must be DOUBLE but got \" + type.numericType());\n    }\n    fieldsData = Double.valueOf(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a78a90fc9701e511308346ea29f4f5e548bb39fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05a14b2611ead08655a2b2bdc61632eb31316e57":["a78a90fc9701e511308346ea29f4f5e548bb39fe","6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d"],"770342641f7b505eaa8dccdc666158bff2419109":["6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d"],"6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["770342641f7b505eaa8dccdc666158bff2419109"]},"commit2Childs":{"a78a90fc9701e511308346ea29f4f5e548bb39fe":["05a14b2611ead08655a2b2bdc61632eb31316e57","6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"6a5eb62c0fdb59f00b9ef0d4762ff79827d9ca1d":["05a14b2611ead08655a2b2bdc61632eb31316e57","770342641f7b505eaa8dccdc666158bff2419109"],"770342641f7b505eaa8dccdc666158bff2419109":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}