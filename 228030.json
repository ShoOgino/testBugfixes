{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/Dictionary#lookupOrd(char[],int,int).mjava","commits":[{"id":"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e","date":1393532367,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/Dictionary#lookupOrd(char[],int,int).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Dictionary#lookupOrd(char[],int,int).mjava","sourceNew":"  Integer lookupOrd(char word[], int offset, int length) throws IOException {\n    final FST.BytesReader bytesReader = words.getBytesReader();\n    final FST.Arc<Long> arc = words.getFirstArc(new FST.Arc<Long>());\n    // Accumulate output as we go\n    final Long NO_OUTPUT = words.outputs.getNoOutput();\n    Long output = NO_OUTPUT;\n    \n    int l = offset + length;\n    for (int i = offset, cp = 0; i < l; i += Character.charCount(cp)) {\n      cp = Character.codePointAt(word, i, l);\n      if (words.findTargetArc(cp, arc, arc, bytesReader) == null) {\n        return null;\n      } else if (arc.output != NO_OUTPUT) {\n        output = words.outputs.add(output, arc.output);\n      }\n    }\n    if (words.findTargetArc(FST.END_LABEL, arc, arc, bytesReader) == null) {\n      return null;\n    } else if (arc.output != NO_OUTPUT) {\n      return words.outputs.add(output, arc.output).intValue();\n    } else {\n      return output.intValue();\n    }\n  }\n\n","sourceOld":"  public Integer lookupOrd(char word[], int offset, int length) throws IOException {\n    final FST.BytesReader bytesReader = words.getBytesReader();\n    final FST.Arc<Long> arc = words.getFirstArc(new FST.Arc<Long>());\n    // Accumulate output as we go\n    final Long NO_OUTPUT = words.outputs.getNoOutput();\n    Long output = NO_OUTPUT;\n    \n    int l = offset + length;\n    for (int i = offset, cp = 0; i < l; i += Character.charCount(cp)) {\n      cp = Character.codePointAt(word, i, l);\n      if (words.findTargetArc(cp, arc, arc, bytesReader) == null) {\n        return null;\n      } else if (arc.output != NO_OUTPUT) {\n        output = words.outputs.add(output, arc.output);\n      }\n    }\n    if (words.findTargetArc(FST.END_LABEL, arc, arc, bytesReader) == null) {\n      return null;\n    } else if (arc.output != NO_OUTPUT) {\n      return words.outputs.add(output, arc.output).intValue();\n    } else {\n      return output.intValue();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba791bce8103c79e38f957e9c5a53a75871bd918","date":1393539206,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/Dictionary#lookupOrd(char[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  Integer lookupOrd(char word[], int offset, int length) throws IOException {\n    final FST.BytesReader bytesReader = words.getBytesReader();\n    final FST.Arc<Long> arc = words.getFirstArc(new FST.Arc<Long>());\n    // Accumulate output as we go\n    final Long NO_OUTPUT = words.outputs.getNoOutput();\n    Long output = NO_OUTPUT;\n    \n    int l = offset + length;\n    for (int i = offset, cp = 0; i < l; i += Character.charCount(cp)) {\n      cp = Character.codePointAt(word, i, l);\n      if (words.findTargetArc(cp, arc, arc, bytesReader) == null) {\n        return null;\n      } else if (arc.output != NO_OUTPUT) {\n        output = words.outputs.add(output, arc.output);\n      }\n    }\n    if (words.findTargetArc(FST.END_LABEL, arc, arc, bytesReader) == null) {\n      return null;\n    } else if (arc.output != NO_OUTPUT) {\n      return words.outputs.add(output, arc.output).intValue();\n    } else {\n      return output.intValue();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b58bd8dd457a9b46b007c641d5b6e747afb8904a","date":1393616676,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/Dictionary#lookupOrd(char[],int,int).mjava","sourceNew":null,"sourceOld":"  Integer lookupOrd(char word[], int offset, int length) throws IOException {\n    final FST.BytesReader bytesReader = words.getBytesReader();\n    final FST.Arc<Long> arc = words.getFirstArc(new FST.Arc<Long>());\n    // Accumulate output as we go\n    final Long NO_OUTPUT = words.outputs.getNoOutput();\n    Long output = NO_OUTPUT;\n    \n    int l = offset + length;\n    for (int i = offset, cp = 0; i < l; i += Character.charCount(cp)) {\n      cp = Character.codePointAt(word, i, l);\n      if (words.findTargetArc(cp, arc, arc, bytesReader) == null) {\n        return null;\n      } else if (arc.output != NO_OUTPUT) {\n        output = words.outputs.add(output, arc.output);\n      }\n    }\n    if (words.findTargetArc(FST.END_LABEL, arc, arc, bytesReader) == null) {\n      return null;\n    } else if (arc.output != NO_OUTPUT) {\n      return words.outputs.add(output, arc.output).intValue();\n    } else {\n      return output.intValue();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ba791bce8103c79e38f957e9c5a53a75871bd918":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dc3f094cafa4a87b4066e1d6710fa4e6afe6260e"],"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b58bd8dd457a9b46b007c641d5b6e747afb8904a":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b58bd8dd457a9b46b007c641d5b6e747afb8904a"]},"commit2Childs":{"ba791bce8103c79e38f957e9c5a53a75871bd918":["b58bd8dd457a9b46b007c641d5b6e747afb8904a"],"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba791bce8103c79e38f957e9c5a53a75871bd918","dc3f094cafa4a87b4066e1d6710fa4e6afe6260e"],"b58bd8dd457a9b46b007c641d5b6e747afb8904a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}