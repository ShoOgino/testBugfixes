{"path":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/menubar/OpenIndexDialogFactory#initialize().mjava","commits":[{"id":"f554f2d9b5456248ab6467b9d4f6015686797a6c","date":1554891357,"type":0,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/menubar/OpenIndexDialogFactory#initialize().mjava","pathOld":"/dev/null","sourceNew":"  private void initialize() {\n    idxPathCombo.setPreferredSize(new Dimension(360, 40));\n\n    browseBtn.setText(FontUtils.elegantIconHtml(\"&#x6e;\", MessageUtils.getLocalizedMessage(\"button.browse\")));\n    browseBtn.setFont(StyleConstants.FONT_BUTTON_LARGE);\n    browseBtn.setPreferredSize(new Dimension(120, 40));\n    browseBtn.addActionListener(listeners::browseDirectory);\n\n    readOnlyCB.setText(MessageUtils.getLocalizedMessage(\"openindex.checkbox.readonly\"));\n    readOnlyCB.setSelected(prefs.isReadOnly());\n    readOnlyCB.addActionListener(listeners::toggleReadOnly);\n    readOnlyCB.setOpaque(false);\n\n    // Scanning all Directory types will take time...\n    ExecutorService executorService = Executors.newFixedThreadPool(1, new NamedThreadFactory(\"load-directory-types\"));\n    executorService.execute(() -> {\n      for (String clazzName : supportedDirImpls()) {\n        dirImplCombo.addItem(clazzName);\n      }\n    });\n    executorService.shutdown();\n    dirImplCombo.setPreferredSize(new Dimension(350, 30));\n    dirImplCombo.setSelectedItem(prefs.getDirImpl());\n\n    noReaderCB.setText(MessageUtils.getLocalizedMessage(\"openindex.checkbox.no_reader\"));\n    noReaderCB.setSelected(prefs.isNoReader());\n    noReaderCB.setOpaque(false);\n\n    useCompoundCB.setText(MessageUtils.getLocalizedMessage(\"openindex.checkbox.use_compound\"));\n    useCompoundCB.setSelected(prefs.isUseCompound());\n    useCompoundCB.setOpaque(false);\n\n    keepLastCommitRB.setText(MessageUtils.getLocalizedMessage(\"openindex.radio.keep_only_last_commit\"));\n    keepLastCommitRB.setSelected(!prefs.isKeepAllCommits());\n    keepLastCommitRB.setOpaque(false);\n\n    keepAllCommitsRB.setText(MessageUtils.getLocalizedMessage(\"openindex.radio.keep_all_commits\"));\n    keepAllCommitsRB.setSelected(prefs.isKeepAllCommits());\n    keepAllCommitsRB.setOpaque(false);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f554f2d9b5456248ab6467b9d4f6015686797a6c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}