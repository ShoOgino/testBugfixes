{"path":"lucene/src/java/org/apache/lucene/index/codecs/lucene3x/TermBuffer#read(IndexInput,FieldInfos).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene3x/TermBuffer#read(IndexInput,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/TermBuffer#read(IndexInput,FieldInfos).mjava","sourceNew":"  public void read(IndexInput input, FieldInfos fieldInfos)\n    throws IOException {\n    this.term = null;                           // invalidate cache\n    newSuffixStart = input.readVInt();\n    int length = input.readVInt();\n    int totalLength = newSuffixStart + length;\n    if (bytes.bytes.length < totalLength) {\n      bytes.grow(totalLength);\n    }\n    bytes.length = totalLength;\n    input.readBytes(bytes.bytes, newSuffixStart, length);\n    final int fieldNumber = input.readVInt();\n    if (fieldNumber != currentFieldNumber) {\n      currentFieldNumber = fieldNumber;\n      field = fieldInfos.fieldName(currentFieldNumber).intern();\n    } else {\n      assert field.equals(fieldInfos.fieldName(fieldNumber)): \"currentFieldNumber=\" + currentFieldNumber + \" field=\" + field + \" vs \" + fieldInfos.fieldName(fieldNumber);\n    }\n  }\n\n","sourceOld":"  public void read(IndexInput input, FieldInfos fieldInfos)\n    throws IOException {\n    this.term = null;                           // invalidate cache\n    newSuffixStart = input.readVInt();\n    int length = input.readVInt();\n    int totalLength = newSuffixStart + length;\n    if (bytes.bytes.length < totalLength) {\n      bytes.grow(totalLength);\n    }\n    bytes.length = totalLength;\n    input.readBytes(bytes.bytes, newSuffixStart, length);\n    final int fieldNumber = input.readVInt();\n    if (fieldNumber != currentFieldNumber) {\n      currentFieldNumber = fieldNumber;\n      field = fieldInfos.fieldName(currentFieldNumber).intern();\n    } else {\n      assert field.equals(fieldInfos.fieldName(fieldNumber)): \"currentFieldNumber=\" + currentFieldNumber + \" field=\" + field + \" vs \" + fieldInfos.fieldName(fieldNumber);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/TermBuffer#read(IndexInput,FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene3x/TermBuffer#read(IndexInput,FieldInfos).mjava","sourceNew":"  public void read(IndexInput input, FieldInfos fieldInfos)\n    throws IOException {\n    this.term = null;                           // invalidate cache\n    newSuffixStart = input.readVInt();\n    int length = input.readVInt();\n    int totalLength = newSuffixStart + length;\n    if (bytes.bytes.length < totalLength) {\n      bytes.grow(totalLength);\n    }\n    bytes.length = totalLength;\n    input.readBytes(bytes.bytes, newSuffixStart, length);\n    final int fieldNumber = input.readVInt();\n    if (fieldNumber != currentFieldNumber) {\n      currentFieldNumber = fieldNumber;\n      field = fieldInfos.fieldName(currentFieldNumber).intern();\n    } else {\n      assert field.equals(fieldInfos.fieldName(fieldNumber)): \"currentFieldNumber=\" + currentFieldNumber + \" field=\" + field + \" vs \" + fieldInfos.fieldName(fieldNumber);\n    }\n  }\n\n","sourceOld":"  public void read(IndexInput input, FieldInfos fieldInfos)\n    throws IOException {\n    this.term = null;                           // invalidate cache\n    newSuffixStart = input.readVInt();\n    int length = input.readVInt();\n    int totalLength = newSuffixStart + length;\n    if (bytes.bytes.length < totalLength) {\n      bytes.grow(totalLength);\n    }\n    bytes.length = totalLength;\n    input.readBytes(bytes.bytes, newSuffixStart, length);\n    final int fieldNumber = input.readVInt();\n    if (fieldNumber != currentFieldNumber) {\n      currentFieldNumber = fieldNumber;\n      field = fieldInfos.fieldName(currentFieldNumber).intern();\n    } else {\n      assert field.equals(fieldInfos.fieldName(fieldNumber)): \"currentFieldNumber=\" + currentFieldNumber + \" field=\" + field + \" vs \" + fieldInfos.fieldName(fieldNumber);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}