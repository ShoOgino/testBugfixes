{"path":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testUpdateDocument().mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testUpdateDocument().mjava","pathOld":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testUpdateDocument().mjava","sourceNew":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.index.GDataIndexer.updateDocument(IndexDocument)'\n     */\n    public void testUpdateDocument() throws IOException {\n        \n        String id = \"myID\";\n        Field f = new Field(FIELD_ID, id, Field.Store.YES,\n                Field.Index.UN_TOKENIZED);\n        Document doc = new Document();\n        doc.add(f);\n        Term delTerm =  new Term(FIELD_ID, id);\n        IndexDocument iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.INSERT);\n        /*\n         * write doc to index\n         */\n        this.indexer.writer.addDocument(doc);\n        this.indexer.closeWriter();\n        IndexSearcher s = new IndexSearcher(this.dir);\n        Hits h = s.search(new TermQuery(delTerm));\n        assertEquals(1, h.length());\n        s.close();\n        String testFieldName = \"someTestFieldupdate\";\n        doc.add(new Field(testFieldName,\"someText\",Field.Store.YES,Field.Index.TOKENIZED));\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.UPDATE);\n        /*\n         * updateDoc via indexer \n         */\n        this.indexer.updateDocument(iDoc);\n        assertEquals(0,this.indexer.docsAdded.get());\n        assertEquals(0,this.indexer.docsDeleted.get());\n        assertEquals(1,this.indexer.docsUpdated.get());\n        \n        this.indexer.commit(false);\n        \n        \n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(1, h.length());\n        assertNotNull(h.doc(0).getField(testFieldName));\n        s.close();\n        \n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        try{\n            this.indexer.updateDocument(iDoc);\n            fail(\"document has not update action \");\n        }catch (GdataIndexerException e) {\n            \n        }\n    }\n\n","sourceOld":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.index.GDataIndexer.updateDocument(IndexDocument)'\n     */\n    public void testUpdateDocument() throws IOException {\n        \n        String id = \"myID\";\n        Field f = new Field(FIELD_ID, id, Field.Store.YES,\n                Field.Index.UN_TOKENIZED);\n        Document doc = new Document();\n        doc.add(f);\n        Term delTerm =  new Term(FIELD_ID, id);\n        IndexDocument iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.INSERT);\n        /*\n         * write doc to index\n         */\n        this.indexer.writer.addDocument(doc);\n        this.indexer.closeWriter();\n        IndexSearcher s = new IndexSearcher(this.dir);\n        Hits h = s.search(new TermQuery(delTerm));\n        assertEquals(1, h.length());\n        s.close();\n        String testFieldName = \"someTestFieldupdate\";\n        doc.add(new Field(testFieldName,\"someText\",Field.Store.YES,Field.Index.TOKENIZED));\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.UPDATE);\n        /*\n         * updateDoc via indexer \n         */\n        this.indexer.updateDocument(iDoc);\n        assertEquals(0,this.indexer.docsAdded.get());\n        assertEquals(0,this.indexer.docsDeleted.get());\n        assertEquals(1,this.indexer.docsUpdated.get());\n        \n        this.indexer.commit(false);\n        \n        \n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(1, h.length());\n        assertNotNull(h.doc(0).getField(testFieldName));\n        s.close();\n        \n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        try{\n            this.indexer.updateDocument(iDoc);\n            fail(\"document has not update action \");\n        }catch (GdataIndexerException e) {\n            \n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testUpdateDocument().mjava","sourceNew":null,"sourceOld":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.index.GDataIndexer.updateDocument(IndexDocument)'\n     */\n    public void testUpdateDocument() throws IOException {\n        \n        String id = \"myID\";\n        Field f = new Field(FIELD_ID, id, Field.Store.YES,\n                Field.Index.UN_TOKENIZED);\n        Document doc = new Document();\n        doc.add(f);\n        Term delTerm =  new Term(FIELD_ID, id);\n        IndexDocument iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.INSERT);\n        /*\n         * write doc to index\n         */\n        this.indexer.writer.addDocument(doc);\n        this.indexer.closeWriter();\n        IndexSearcher s = new IndexSearcher(this.dir);\n        Hits h = s.search(new TermQuery(delTerm));\n        assertEquals(1, h.length());\n        s.close();\n        String testFieldName = \"someTestFieldupdate\";\n        doc.add(new Field(testFieldName,\"someText\",Field.Store.YES,Field.Index.TOKENIZED));\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.UPDATE);\n        /*\n         * updateDoc via indexer \n         */\n        this.indexer.updateDocument(iDoc);\n        assertEquals(0,this.indexer.docsAdded.get());\n        assertEquals(0,this.indexer.docsDeleted.get());\n        assertEquals(1,this.indexer.docsUpdated.get());\n        \n        this.indexer.commit(false);\n        \n        \n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(1, h.length());\n        assertNotNull(h.doc(0).getField(testFieldName));\n        s.close();\n        \n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        try{\n            this.indexer.updateDocument(iDoc);\n            fail(\"document has not update action \");\n        }catch (GdataIndexerException e) {\n            \n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}