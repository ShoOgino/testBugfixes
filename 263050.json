{"path":"modules/queryparser/src/java/org/apache/lucene/queryparser/surround/query/DistanceQuery#distanceSubQueryNotAllowed().mjava","commits":[{"id":"a53a291ad9b1cc050d846b68758c061a55d52734","date":1310437344,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/surround/query/DistanceQuery#distanceSubQueryNotAllowed().mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/surround/query/DistanceQuery#distanceSubQueryNotAllowed().mjava","sourceNew":"  public String distanceSubQueryNotAllowed() {\n    Iterator<?> sqi = getSubQueriesIterator();\n    while (sqi.hasNext()) {\n      Object leq = sqi.next();\n      if (leq instanceof DistanceSubQuery) {\n        DistanceSubQuery dsq = (DistanceSubQuery) leq;\n        String m = dsq.distanceSubQueryNotAllowed();\n        if (m != null) {\n          return m; \n        }\n      } else {\n        return \"Operator \" + getOperatorName() + \" does not allow subquery \" + leq.toString();\n      }\n    }\n    return null; /* subqueries acceptable */\n  }\n\n","sourceOld":"  public String distanceSubQueryNotAllowed() {\n    Iterator<?> sqi = getSubQueriesIterator();\n    while (sqi.hasNext()) {\n      Object leq = sqi.next();\n      if (leq instanceof DistanceSubQuery) {\n        DistanceSubQuery dsq = (DistanceSubQuery) leq;\n        String m = dsq.distanceSubQueryNotAllowed();\n        if (m != null) {\n          return m; \n        }\n      } else {\n        return \"Operator \" + getOperatorName() + \" does not allow subquery \" + leq.toString();\n      }\n    }\n    return null; /* subqueries acceptable */\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb278067c961537864615b4862771ebc54dae426","date":1315400669,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/surround/query/DistanceQuery#distanceSubQueryNotAllowed().mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/surround/query/DistanceQuery#distanceSubQueryNotAllowed().mjava","sourceNew":"  @Override\n  public String distanceSubQueryNotAllowed() {\n    Iterator<?> sqi = getSubQueriesIterator();\n    while (sqi.hasNext()) {\n      Object leq = sqi.next();\n      if (leq instanceof DistanceSubQuery) {\n        DistanceSubQuery dsq = (DistanceSubQuery) leq;\n        String m = dsq.distanceSubQueryNotAllowed();\n        if (m != null) {\n          return m; \n        }\n      } else {\n        return \"Operator \" + getOperatorName() + \" does not allow subquery \" + leq.toString();\n      }\n    }\n    return null; /* subqueries acceptable */\n  }\n\n","sourceOld":"  public String distanceSubQueryNotAllowed() {\n    Iterator<?> sqi = getSubQueriesIterator();\n    while (sqi.hasNext()) {\n      Object leq = sqi.next();\n      if (leq instanceof DistanceSubQuery) {\n        DistanceSubQuery dsq = (DistanceSubQuery) leq;\n        String m = dsq.distanceSubQueryNotAllowed();\n        if (m != null) {\n          return m; \n        }\n      } else {\n        return \"Operator \" + getOperatorName() + \" does not allow subquery \" + leq.toString();\n      }\n    }\n    return null; /* subqueries acceptable */\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/DistanceQuery#distanceSubQueryNotAllowed().mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/surround/query/DistanceQuery#distanceSubQueryNotAllowed().mjava","sourceNew":"  @Override\n  public String distanceSubQueryNotAllowed() {\n    Iterator<?> sqi = getSubQueriesIterator();\n    while (sqi.hasNext()) {\n      Object leq = sqi.next();\n      if (leq instanceof DistanceSubQuery) {\n        DistanceSubQuery dsq = (DistanceSubQuery) leq;\n        String m = dsq.distanceSubQueryNotAllowed();\n        if (m != null) {\n          return m; \n        }\n      } else {\n        return \"Operator \" + getOperatorName() + \" does not allow subquery \" + leq.toString();\n      }\n    }\n    return null; /* subqueries acceptable */\n  }\n\n","sourceOld":"  @Override\n  public String distanceSubQueryNotAllowed() {\n    Iterator<?> sqi = getSubQueriesIterator();\n    while (sqi.hasNext()) {\n      Object leq = sqi.next();\n      if (leq instanceof DistanceSubQuery) {\n        DistanceSubQuery dsq = (DistanceSubQuery) leq;\n        String m = dsq.distanceSubQueryNotAllowed();\n        if (m != null) {\n          return m; \n        }\n      } else {\n        return \"Operator \" + getOperatorName() + \" does not allow subquery \" + leq.toString();\n      }\n    }\n    return null; /* subqueries acceptable */\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cb278067c961537864615b4862771ebc54dae426"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cb278067c961537864615b4862771ebc54dae426":["a53a291ad9b1cc050d846b68758c061a55d52734"],"a53a291ad9b1cc050d846b68758c061a55d52734":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a53a291ad9b1cc050d846b68758c061a55d52734"],"cb278067c961537864615b4862771ebc54dae426":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a53a291ad9b1cc050d846b68758c061a55d52734":["cb278067c961537864615b4862771ebc54dae426"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}