{"path":"lucene/backwards/src/java/org/apache/lucene/store/IndexInput#readVInt().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/store/IndexInput#readVInt().mjava","pathOld":"backwards/src/java/org/apache/lucene/store/IndexInput#readVInt().mjava","sourceNew":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see IndexOutput#writeVInt(int)\n   */\n  public int readVInt() throws IOException {\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see IndexOutput#writeVInt(int)\n   */\n  public int readVInt() throws IOException {\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/store/IndexInput#readVInt().mjava","sourceNew":null,"sourceOld":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see IndexOutput#writeVInt(int)\n   */\n  public int readVInt() throws IOException {\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}