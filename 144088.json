{"path":"lucene/src/java/org/apache/lucene/index/IndexWriter#maxDoc().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#maxDoc().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#maxDoc().mjava","sourceNew":"  /** Returns total number of docs in this index, including\n   *  docs not yet flushed (still in the RAM buffer),\n   *  not counting deletions.\n   *  @see #numDocs */\n  public synchronized int maxDoc() {\n    int count;\n    if (docWriter != null)\n      count = docWriter.getNumDocsInRAM();\n    else\n      count = 0;\n\n    for (int i = 0; i < segmentInfos.size(); i++)\n      count += segmentInfos.info(i).docCount;\n    return count;\n  }\n\n","sourceOld":"  /** Returns total number of docs in this index, including\n   *  docs not yet flushed (still in the RAM buffer),\n   *  not counting deletions.\n   *  @see #numDocs */\n  public synchronized int maxDoc() {\n    int count;\n    if (docWriter != null)\n      count = docWriter.getNumDocsInRAM();\n    else\n      count = 0;\n\n    for (int i = 0; i < segmentInfos.size(); i++)\n      count += segmentInfos.info(i).docCount;\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","date":1292695408,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#maxDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#maxDoc().mjava","sourceNew":"  /** Returns total number of docs in this index, including\n   *  docs not yet flushed (still in the RAM buffer),\n   *  not counting deletions.\n   *  @see #numDocs */\n  public synchronized int maxDoc() {\n    int count;\n    if (docWriter != null)\n      count = docWriter.getNumDocs();\n    else\n      count = 0;\n\n    for (int i = 0; i < segmentInfos.size(); i++)\n      count += segmentInfos.info(i).docCount;\n    return count;\n  }\n\n","sourceOld":"  /** Returns total number of docs in this index, including\n   *  docs not yet flushed (still in the RAM buffer),\n   *  not counting deletions.\n   *  @see #numDocs */\n  public synchronized int maxDoc() {\n    int count;\n    if (docWriter != null)\n      count = docWriter.getNumDocsInRAM();\n    else\n      count = 0;\n\n    for (int i = 0; i < segmentInfos.size(); i++)\n      count += segmentInfos.info(i).docCount;\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#maxDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#maxDoc().mjava","sourceNew":"  /** Returns total number of docs in this index, including\n   *  docs not yet flushed (still in the RAM buffer),\n   *  not counting deletions.\n   *  @see #numDocs */\n  public synchronized int maxDoc() {\n    int count;\n    if (docWriter != null)\n      count = docWriter.getNumDocs();\n    else\n      count = 0;\n\n    for (int i = 0; i < segmentInfos.size(); i++)\n      count += segmentInfos.info(i).docCount;\n    return count;\n  }\n\n","sourceOld":"  /** Returns total number of docs in this index, including\n   *  docs not yet flushed (still in the RAM buffer),\n   *  not counting deletions.\n   *  @see #numDocs */\n  public synchronized int maxDoc() {\n    int count;\n    if (docWriter != null)\n      count = docWriter.getNumDocsInRAM();\n    else\n      count = 0;\n\n    for (int i = 0; i < segmentInfos.size(); i++)\n      count += segmentInfos.info(i).docCount;\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#maxDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#maxDoc().mjava","sourceNew":"  /** Returns total number of docs in this index, including\n   *  docs not yet flushed (still in the RAM buffer),\n   *  not counting deletions.\n   *  @see #numDocs */\n  public synchronized int maxDoc() {\n    int count;\n    if (docWriter != null)\n      count = docWriter.getNumDocs();\n    else\n      count = 0;\n\n    for (int i = 0; i < segmentInfos.size(); i++)\n      count += segmentInfos.info(i).docCount;\n    return count;\n  }\n\n","sourceOld":"  /** Returns total number of docs in this index, including\n   *  docs not yet flushed (still in the RAM buffer),\n   *  not counting deletions.\n   *  @see #numDocs */\n  public synchronized int maxDoc() {\n    int count;\n    if (docWriter != null)\n      count = docWriter.getNumDocsInRAM();\n    else\n      count = 0;\n\n    for (int i = 0; i < segmentInfos.size(); i++)\n      count += segmentInfos.info(i).docCount;\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"786a4d25ca958a1f315a9d6a74f0441fdafcd522","date":1305734256,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#maxDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#maxDoc().mjava","sourceNew":"  /** Returns total number of docs in this index, including\n   *  docs not yet flushed (still in the RAM buffer),\n   *  not counting deletions.\n   *  @see #numDocs */\n  public synchronized int maxDoc() {\n    int count;\n    if (docWriter != null)\n      count = docWriter.getNumDocs();\n    else\n      count = 0;\n\n    count += segmentInfos.totalDocCount();\n    return count;\n  }\n\n","sourceOld":"  /** Returns total number of docs in this index, including\n   *  docs not yet flushed (still in the RAM buffer),\n   *  not counting deletions.\n   *  @see #numDocs */\n  public synchronized int maxDoc() {\n    int count;\n    if (docWriter != null)\n      count = docWriter.getNumDocs();\n    else\n      count = 0;\n\n    for (int i = 0; i < segmentInfos.size(); i++)\n      count += segmentInfos.info(i).docCount;\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#maxDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#maxDoc().mjava","sourceNew":"  /** Returns total number of docs in this index, including\n   *  docs not yet flushed (still in the RAM buffer),\n   *  not counting deletions.\n   *  @see #numDocs */\n  public synchronized int maxDoc() {\n    int count;\n    if (docWriter != null)\n      count = docWriter.getNumDocs();\n    else\n      count = 0;\n\n    count += segmentInfos.totalDocCount();\n    return count;\n  }\n\n","sourceOld":"  /** Returns total number of docs in this index, including\n   *  docs not yet flushed (still in the RAM buffer),\n   *  not counting deletions.\n   *  @see #numDocs */\n  public synchronized int maxDoc() {\n    int count;\n    if (docWriter != null)\n      count = docWriter.getNumDocs();\n    else\n      count = 0;\n\n    for (int i = 0; i < segmentInfos.size(); i++)\n      count += segmentInfos.info(i).docCount;\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#maxDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#maxDoc().mjava","sourceNew":"  /** Returns total number of docs in this index, including\n   *  docs not yet flushed (still in the RAM buffer),\n   *  not counting deletions.\n   *  @see #numDocs */\n  public synchronized int maxDoc() {\n    int count;\n    if (docWriter != null)\n      count = docWriter.getNumDocs();\n    else\n      count = 0;\n\n    count += segmentInfos.totalDocCount();\n    return count;\n  }\n\n","sourceOld":"  /** Returns total number of docs in this index, including\n   *  docs not yet flushed (still in the RAM buffer),\n   *  not counting deletions.\n   *  @see #numDocs */\n  public synchronized int maxDoc() {\n    int count;\n    if (docWriter != null)\n      count = docWriter.getNumDocs();\n    else\n      count = 0;\n\n    for (int i = 0; i < segmentInfos.size(); i++)\n      count += segmentInfos.info(i).docCount;\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ddeeafb97cacc0f0e449e34a246cb6dda2c712b","date":1316619234,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#maxDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#maxDoc().mjava","sourceNew":"  /** Returns total number of docs in this index, including\n   *  docs not yet flushed (still in the RAM buffer),\n   *  not counting deletions.\n   *  @see #numDocs */\n  public synchronized int maxDoc() {\n    ensureOpen();\n    int count;\n    if (docWriter != null)\n      count = docWriter.getNumDocs();\n    else\n      count = 0;\n\n    count += segmentInfos.totalDocCount();\n    return count;\n  }\n\n","sourceOld":"  /** Returns total number of docs in this index, including\n   *  docs not yet flushed (still in the RAM buffer),\n   *  not counting deletions.\n   *  @see #numDocs */\n  public synchronized int maxDoc() {\n    int count;\n    if (docWriter != null)\n      count = docWriter.getNumDocs();\n    else\n      count = 0;\n\n    count += segmentInfos.totalDocCount();\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maxDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#maxDoc().mjava","sourceNew":"  /** Returns total number of docs in this index, including\n   *  docs not yet flushed (still in the RAM buffer),\n   *  not counting deletions.\n   *  @see #numDocs */\n  public synchronized int maxDoc() {\n    ensureOpen();\n    int count;\n    if (docWriter != null)\n      count = docWriter.getNumDocs();\n    else\n      count = 0;\n\n    count += segmentInfos.totalDocCount();\n    return count;\n  }\n\n","sourceOld":"  /** Returns total number of docs in this index, including\n   *  docs not yet flushed (still in the RAM buffer),\n   *  not counting deletions.\n   *  @see #numDocs */\n  public synchronized int maxDoc() {\n    ensureOpen();\n    int count;\n    if (docWriter != null)\n      count = docWriter.getNumDocs();\n    else\n      count = 0;\n\n    count += segmentInfos.totalDocCount();\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0ddeeafb97cacc0f0e449e34a246cb6dda2c712b":["786a4d25ca958a1f315a9d6a74f0441fdafcd522"],"786a4d25ca958a1f315a9d6a74f0441fdafcd522":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","786a4d25ca958a1f315a9d6a74f0441fdafcd522"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["0ddeeafb97cacc0f0e449e34a246cb6dda2c712b"],"a3776dccca01c11e7046323cfad46a3b4a471233":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","786a4d25ca958a1f315a9d6a74f0441fdafcd522"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["9454a6510e2db155fb01faa5c049b06ece95fab9","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0ddeeafb97cacc0f0e449e34a246cb6dda2c712b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"786a4d25ca958a1f315a9d6a74f0441fdafcd522":["0ddeeafb97cacc0f0e449e34a246cb6dda2c712b","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["c3a8a449466c1ff7ce2274fe73dab487256964b4"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["786a4d25ca958a1f315a9d6a74f0441fdafcd522","a3776dccca01c11e7046323cfad46a3b4a471233","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}