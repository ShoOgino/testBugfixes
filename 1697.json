{"path":"solr/core/src/java/org/apache/solr/request/SimpleFacets#getHeatmapCounts().mjava","commits":[{"id":"59d82b0be40ecfcc2c94c776b324e0903a62b844","date":1423535462,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#getHeatmapCounts().mjava","pathOld":"/dev/null","sourceNew":"  private NamedList getHeatmapCounts() throws IOException, SyntaxError {\n    final NamedList<Object> resOuter = new SimpleOrderedMap<>();\n    String[] unparsedFields = rb.req.getParams().getParams(FacetParams.FACET_HEATMAP);\n    if (unparsedFields == null || unparsedFields.length == 0) {\n      return resOuter;\n    }\n    if (params.getBool(GroupParams.GROUP_FACET, false)) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Heatmaps can't be used with \" + GroupParams.GROUP_FACET);\n    }\n    for (String unparsedField : unparsedFields) {\n      parseParams(FacetParams.FACET_HEATMAP, unparsedField); // populates facetValue, rb, params, docs\n\n      resOuter.add(key, SpatialHeatmapFacets.getHeatmapForField(key, facetValue, rb, params, docs));\n    }\n    return resOuter;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["aa62c79a7afa4d7f22e1f71b883659f3213d7db1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"aa62c79a7afa4d7f22e1f71b883659f3213d7db1","date":1435334422,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#getHeatmapCounts().mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SimpleFacets#getHeatmapCounts().mjava","sourceNew":"  private NamedList getHeatmapCounts() throws IOException, SyntaxError {\n    final NamedList<Object> resOuter = new SimpleOrderedMap<>();\n    String[] unparsedFields = rb.req.getParams().getParams(FacetParams.FACET_HEATMAP);\n    if (unparsedFields == null || unparsedFields.length == 0) {\n      return resOuter;\n    }\n    if (global.getBool(GroupParams.GROUP_FACET, false)) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Heatmaps can't be used with \" + GroupParams.GROUP_FACET);\n    }\n    for (String unparsedField : unparsedFields) {\n      final ParsedParams parsed = parseParams(FacetParams.FACET_HEATMAP, unparsedField); // populates facetValue, rb, params, docs\n\n      resOuter.add(parsed.key, SpatialHeatmapFacets.getHeatmapForField(parsed.key, parsed.facetValue, rb, parsed.params, parsed.docs));\n    }\n    return resOuter;\n  }\n\n","sourceOld":"  private NamedList getHeatmapCounts() throws IOException, SyntaxError {\n    final NamedList<Object> resOuter = new SimpleOrderedMap<>();\n    String[] unparsedFields = rb.req.getParams().getParams(FacetParams.FACET_HEATMAP);\n    if (unparsedFields == null || unparsedFields.length == 0) {\n      return resOuter;\n    }\n    if (params.getBool(GroupParams.GROUP_FACET, false)) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Heatmaps can't be used with \" + GroupParams.GROUP_FACET);\n    }\n    for (String unparsedField : unparsedFields) {\n      parseParams(FacetParams.FACET_HEATMAP, unparsedField); // populates facetValue, rb, params, docs\n\n      resOuter.add(key, SpatialHeatmapFacets.getHeatmapForField(key, facetValue, rb, params, docs));\n    }\n    return resOuter;\n  }\n\n","bugFix":["59d82b0be40ecfcc2c94c776b324e0903a62b844"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22d0a81a05eba47d5e18976f17d88306b218cc22","date":1436341569,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#getHeatmapCounts().mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SimpleFacets#getHeatmapCounts().mjava","sourceNew":"  public NamedList getHeatmapCounts() throws IOException, SyntaxError {\n    final NamedList<Object> resOuter = new SimpleOrderedMap<>();\n    String[] unparsedFields = rb.req.getParams().getParams(FacetParams.FACET_HEATMAP);\n    if (unparsedFields == null || unparsedFields.length == 0) {\n      return resOuter;\n    }\n    if (global.getBool(GroupParams.GROUP_FACET, false)) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Heatmaps can't be used with \" + GroupParams.GROUP_FACET);\n    }\n    for (String unparsedField : unparsedFields) {\n      final ParsedParams parsed = parseParams(FacetParams.FACET_HEATMAP, unparsedField); // populates facetValue, rb, params, docs\n\n      resOuter.add(parsed.key, SpatialHeatmapFacets.getHeatmapForField(parsed.key, parsed.facetValue, rb, parsed.params, parsed.docs));\n    }\n    return resOuter;\n  }\n\n","sourceOld":"  private NamedList getHeatmapCounts() throws IOException, SyntaxError {\n    final NamedList<Object> resOuter = new SimpleOrderedMap<>();\n    String[] unparsedFields = rb.req.getParams().getParams(FacetParams.FACET_HEATMAP);\n    if (unparsedFields == null || unparsedFields.length == 0) {\n      return resOuter;\n    }\n    if (global.getBool(GroupParams.GROUP_FACET, false)) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Heatmaps can't be used with \" + GroupParams.GROUP_FACET);\n    }\n    for (String unparsedField : unparsedFields) {\n      final ParsedParams parsed = parseParams(FacetParams.FACET_HEATMAP, unparsedField); // populates facetValue, rb, params, docs\n\n      resOuter.add(parsed.key, SpatialHeatmapFacets.getHeatmapForField(parsed.key, parsed.facetValue, rb, parsed.params, parsed.docs));\n    }\n    return resOuter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd25fa3647fa73152703b8dccb4fb5f43633de20","date":1592060458,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#getHeatmapCounts().mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SimpleFacets#getHeatmapCounts().mjava","sourceNew":"  @SuppressWarnings({\"rawtypes\"})\n  public NamedList getHeatmapCounts() throws IOException, SyntaxError {\n    final NamedList<Object> resOuter = new SimpleOrderedMap<>();\n    String[] unparsedFields = rb.req.getParams().getParams(FacetParams.FACET_HEATMAP);\n    if (unparsedFields == null || unparsedFields.length == 0) {\n      return resOuter;\n    }\n    if (global.getBool(GroupParams.GROUP_FACET, false)) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Heatmaps can't be used with \" + GroupParams.GROUP_FACET);\n    }\n    for (String unparsedField : unparsedFields) {\n      final ParsedParams parsed = parseParams(FacetParams.FACET_HEATMAP, unparsedField); // populates facetValue, rb, params, docs\n\n      resOuter.add(parsed.key, SpatialHeatmapFacets.getHeatmapForField(parsed.key, parsed.facetValue, rb, parsed.params, parsed.docs));\n    }\n    return resOuter;\n  }\n\n","sourceOld":"  public NamedList getHeatmapCounts() throws IOException, SyntaxError {\n    final NamedList<Object> resOuter = new SimpleOrderedMap<>();\n    String[] unparsedFields = rb.req.getParams().getParams(FacetParams.FACET_HEATMAP);\n    if (unparsedFields == null || unparsedFields.length == 0) {\n      return resOuter;\n    }\n    if (global.getBool(GroupParams.GROUP_FACET, false)) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          \"Heatmaps can't be used with \" + GroupParams.GROUP_FACET);\n    }\n    for (String unparsedField : unparsedFields) {\n      final ParsedParams parsed = parseParams(FacetParams.FACET_HEATMAP, unparsedField); // populates facetValue, rb, params, docs\n\n      resOuter.add(parsed.key, SpatialHeatmapFacets.getHeatmapForField(parsed.key, parsed.facetValue, rb, parsed.params, parsed.docs));\n    }\n    return resOuter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"59d82b0be40ecfcc2c94c776b324e0903a62b844":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22d0a81a05eba47d5e18976f17d88306b218cc22":["aa62c79a7afa4d7f22e1f71b883659f3213d7db1"],"bd25fa3647fa73152703b8dccb4fb5f43633de20":["22d0a81a05eba47d5e18976f17d88306b218cc22"],"aa62c79a7afa4d7f22e1f71b883659f3213d7db1":["59d82b0be40ecfcc2c94c776b324e0903a62b844"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bd25fa3647fa73152703b8dccb4fb5f43633de20"]},"commit2Childs":{"59d82b0be40ecfcc2c94c776b324e0903a62b844":["aa62c79a7afa4d7f22e1f71b883659f3213d7db1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["59d82b0be40ecfcc2c94c776b324e0903a62b844"],"22d0a81a05eba47d5e18976f17d88306b218cc22":["bd25fa3647fa73152703b8dccb4fb5f43633de20"],"bd25fa3647fa73152703b8dccb4fb5f43633de20":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aa62c79a7afa4d7f22e1f71b883659f3213d7db1":["22d0a81a05eba47d5e18976f17d88306b218cc22"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}