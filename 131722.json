{"path":"lucene/core/src/java/org/apache/lucene/search/LeafSimScorer#LeafSimScorer(SimScorer,LeafReader,boolean,float).mjava","commits":[{"id":"68d6cb7f0f019661a784bd0e5a21e85b5f812af6","date":1515075216,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LeafSimScorer#LeafSimScorer(SimScorer,LeafReader,boolean,float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sole constructor: Score documents of {@code reader} with {@code scorer}.\n   */\n  public LeafSimScorer(SimScorer scorer, LeafReader reader, boolean needsScores, float maxFreq) throws IOException {\n    this.scorer = scorer;\n    norms = needsScores ? reader.getNormValues(scorer.getField()) : null;\n    maxScore = scorer.maxScore(maxFreq);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6e9f769521480a623f897c0d59089b919fa4239","date":1515161835,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LeafSimScorer#LeafSimScorer(SimScorer,LeafReader,boolean,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LeafSimScorer#LeafSimScorer(SimScorer,LeafReader,boolean,float).mjava","sourceNew":"  /**\n   * Sole constructor: Score documents of {@code reader} with {@code scorer}.\n   */\n  public LeafSimScorer(SimScorer scorer, LeafReader reader, boolean needsScores, float maxFreq) throws IOException {\n    this.scorer = scorer;\n    norms = needsScores ? reader.getNormValues(scorer.getField()) : null;\n    maxScore = needsScores ? scorer.maxScore(maxFreq) : Integer.MAX_VALUE;\n  }\n\n","sourceOld":"  /**\n   * Sole constructor: Score documents of {@code reader} with {@code scorer}.\n   */\n  public LeafSimScorer(SimScorer scorer, LeafReader reader, boolean needsScores, float maxFreq) throws IOException {\n    this.scorer = scorer;\n    norms = needsScores ? reader.getNormValues(scorer.getField()) : null;\n    maxScore = scorer.maxScore(maxFreq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c68bfb3354451a11c895b36484af94f27530b79","date":1515505336,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LeafSimScorer#LeafSimScorer(SimScorer,LeafReader,boolean,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LeafSimScorer#LeafSimScorer(SimScorer,LeafReader,boolean,float).mjava","sourceNew":"  /**\n   * Sole constructor: Score documents of {@code reader} with {@code scorer}.\n   */\n  public LeafSimScorer(SimScorer scorer, LeafReader reader, boolean needsScores, float maxFreq) throws IOException {\n    this.scorer = scorer;\n    norms = needsScores ? reader.getNormValues(scorer.getField()) : null;\n    maxScore = needsScores ? scorer.score(maxFreq, 1) : Float.MAX_VALUE;\n  }\n\n","sourceOld":"  /**\n   * Sole constructor: Score documents of {@code reader} with {@code scorer}.\n   */\n  public LeafSimScorer(SimScorer scorer, LeafReader reader, boolean needsScores, float maxFreq) throws IOException {\n    this.scorer = scorer;\n    norms = needsScores ? reader.getNormValues(scorer.getField()) : null;\n    maxScore = needsScores ? scorer.maxScore(maxFreq) : Integer.MAX_VALUE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LeafSimScorer#LeafSimScorer(SimScorer,LeafReader,boolean,float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sole constructor: Score documents of {@code reader} with {@code scorer}.\n   */\n  public LeafSimScorer(SimScorer scorer, LeafReader reader, boolean needsScores, float maxFreq) throws IOException {\n    this.scorer = scorer;\n    norms = needsScores ? reader.getNormValues(scorer.getField()) : null;\n    maxScore = needsScores ? scorer.score(maxFreq, 1) : Float.MAX_VALUE;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ea90bc076fbe82be472db33fc80b00eb0bff44f","date":1526486036,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/LeafSimScorer#LeafSimScorer(SimScorer,LeafReader,boolean,float).mjava","sourceNew":null,"sourceOld":"  /**\n   * Sole constructor: Score documents of {@code reader} with {@code scorer}.\n   */\n  public LeafSimScorer(SimScorer scorer, LeafReader reader, boolean needsScores, float maxFreq) throws IOException {\n    this.scorer = scorer;\n    norms = needsScores ? reader.getNormValues(scorer.getField()) : null;\n    maxScore = needsScores ? scorer.score(maxFreq, 1) : Float.MAX_VALUE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0c68bfb3354451a11c895b36484af94f27530b79":["a6e9f769521480a623f897c0d59089b919fa4239"],"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0c68bfb3354451a11c895b36484af94f27530b79"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a6e9f769521480a623f897c0d59089b919fa4239":["68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6ea90bc076fbe82be472db33fc80b00eb0bff44f":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6ea90bc076fbe82be472db33fc80b00eb0bff44f"]},"commit2Childs":{"0c68bfb3354451a11c895b36484af94f27530b79":["b94236357aaa22b76c10629851fe4e376e0cea82"],"b94236357aaa22b76c10629851fe4e376e0cea82":["6ea90bc076fbe82be472db33fc80b00eb0bff44f"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["a6e9f769521480a623f897c0d59089b919fa4239"],"a6e9f769521480a623f897c0d59089b919fa4239":["0c68bfb3354451a11c895b36484af94f27530b79"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"6ea90bc076fbe82be472db33fc80b00eb0bff44f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}