{"path":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/OrderedIntervalsSource.OrderedIntervalIterator#nextInterval().mjava","commits":[{"id":"4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde","date":1553685823,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/OrderedIntervalsSource.OrderedIntervalIterator#nextInterval().mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/IntervalFunction.OrderedIntervalIterator#nextInterval().mjava","sourceNew":"    @Override\n    public int nextInterval() throws IOException {\n      start = end = IntervalIterator.NO_MORE_INTERVALS;\n      int b = Integer.MAX_VALUE;\n      i = 1;\n      while (true) {\n        while (true) {\n          if (subIterators.get(i - 1).end() >= b)\n            return start;\n          if (i == subIterators.size() || subIterators.get(i).start() > subIterators.get(i - 1).end())\n            break;\n          do {\n            if (subIterators.get(i).end() >= b || subIterators.get(i).nextInterval() == IntervalIterator.NO_MORE_INTERVALS)\n              return start;\n          }\n          while (subIterators.get(i).start() <= subIterators.get(i - 1).end());\n          i++;\n        }\n        start = subIterators.get(0).start();\n        if (start == NO_MORE_INTERVALS) {\n          return end = NO_MORE_INTERVALS;\n        }\n        firstEnd = subIterators.get(0).end();\n        end = subIterators.get(subIterators.size() - 1).end();\n        b = subIterators.get(subIterators.size() - 1).start();\n        i = 1;\n        if (subIterators.get(0).nextInterval() == IntervalIterator.NO_MORE_INTERVALS)\n          return start;\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextInterval() throws IOException {\n      start = end = IntervalIterator.NO_MORE_INTERVALS;\n      int b = Integer.MAX_VALUE;\n      i = 1;\n      while (true) {\n        while (true) {\n          if (subIterators.get(i - 1).end() >= b)\n            return start;\n          if (i == subIterators.size() || subIterators.get(i).start() > subIterators.get(i - 1).end())\n            break;\n          do {\n            if (subIterators.get(i).end() >= b || subIterators.get(i).nextInterval() == IntervalIterator.NO_MORE_INTERVALS)\n              return start;\n          }\n          while (subIterators.get(i).start() <= subIterators.get(i - 1).end());\n          i++;\n        }\n        start = subIterators.get(0).start();\n        if (start == NO_MORE_INTERVALS) {\n          return end = NO_MORE_INTERVALS;\n        }\n        firstEnd = subIterators.get(0).end();\n        end = subIterators.get(subIterators.size() - 1).end();\n        b = subIterators.get(subIterators.size() - 1).start();\n        i = 1;\n        if (subIterators.get(0).nextInterval() == IntervalIterator.NO_MORE_INTERVALS)\n          return start;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97ee2282ff806e9bc9d705f389cf40451ab81c3e","date":1561721333,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/intervals/OrderedIntervalsSource.OrderedIntervalIterator#nextInterval().mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/OrderedIntervalsSource.OrderedIntervalIterator#nextInterval().mjava","sourceNew":"    @Override\n    public int nextInterval() throws IOException {\n      start = end = IntervalIterator.NO_MORE_INTERVALS;\n      int b = Integer.MAX_VALUE;\n      i = 1;\n      while (true) {\n        while (true) {\n          if (subIterators.get(i - 1).end() >= b)\n            return start;\n          if (i == subIterators.size() || subIterators.get(i).start() > subIterators.get(i - 1).end())\n            break;\n          do {\n            if (subIterators.get(i).end() >= b || subIterators.get(i).nextInterval() == IntervalIterator.NO_MORE_INTERVALS)\n              return start;\n          }\n          while (subIterators.get(i).start() <= subIterators.get(i - 1).end());\n          i++;\n        }\n        start = subIterators.get(0).start();\n        if (start == NO_MORE_INTERVALS) {\n          return end = NO_MORE_INTERVALS;\n        }\n        firstEnd = subIterators.get(0).end();\n        end = subIterators.get(subIterators.size() - 1).end();\n        b = subIterators.get(subIterators.size() - 1).start();\n        i = 1;\n        if (subIterators.get(0).nextInterval() == IntervalIterator.NO_MORE_INTERVALS)\n          return start;\n      }\n    }\n\n","sourceOld":"    @Override\n    public int nextInterval() throws IOException {\n      start = end = IntervalIterator.NO_MORE_INTERVALS;\n      int b = Integer.MAX_VALUE;\n      i = 1;\n      while (true) {\n        while (true) {\n          if (subIterators.get(i - 1).end() >= b)\n            return start;\n          if (i == subIterators.size() || subIterators.get(i).start() > subIterators.get(i - 1).end())\n            break;\n          do {\n            if (subIterators.get(i).end() >= b || subIterators.get(i).nextInterval() == IntervalIterator.NO_MORE_INTERVALS)\n              return start;\n          }\n          while (subIterators.get(i).start() <= subIterators.get(i - 1).end());\n          i++;\n        }\n        start = subIterators.get(0).start();\n        if (start == NO_MORE_INTERVALS) {\n          return end = NO_MORE_INTERVALS;\n        }\n        firstEnd = subIterators.get(0).end();\n        end = subIterators.get(subIterators.size() - 1).end();\n        b = subIterators.get(subIterators.size() - 1).start();\n        i = 1;\n        if (subIterators.get(0).nextInterval() == IntervalIterator.NO_MORE_INTERVALS)\n          return start;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde"],"4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"]},"commit2Childs":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}