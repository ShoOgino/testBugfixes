{"path":"solr/core/src/test/org/apache/solr/analysis/TestJapaneseTokenizerFactory#testMode().mjava","commits":[{"id":"ce511b88510766951528ad497e1886e27b7688e4","date":1332778117,"type":1,"author":"Christian Moen","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestJapaneseTokenizerFactory#testMode().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestKuromojiTokenizerFactory#testMode().mjava","sourceNew":"  /**\n   * Test mode parameter: specifying normal mode\n   */\n  public void testMode() throws IOException {\n    JapaneseTokenizerFactory factory = new JapaneseTokenizerFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"mode\", \"normal\");\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(null, null));\n    TokenStream ts = factory.create(new StringReader(\"シニアソフトウェアエンジニア\"));\n    assertTokenStreamContents(ts,\n        new String[] { \"シニアソフトウェアエンジニア\" }\n    );\n  }\n\n","sourceOld":"  /**\n   * Test mode parameter: specifying normal mode\n   */\n  public void testMode() throws IOException {\n    JapaneseTokenizerFactory factory = new JapaneseTokenizerFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"mode\", \"normal\");\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(null, null));\n    TokenStream ts = factory.create(new StringReader(\"シニアソフトウェアエンジニア\"));\n    assertTokenStreamContents(ts,\n        new String[] { \"シニアソフトウェアエンジニア\" }\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3241e06e642196396b80bb293acd9c0814d079e0","date":1343094999,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizerFactory#testMode().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestJapaneseTokenizerFactory#testMode().mjava","sourceNew":"  /**\n   * Test mode parameter: specifying normal mode\n   */\n  public void testMode() throws IOException {\n    JapaneseTokenizerFactory factory = new JapaneseTokenizerFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"mode\", \"normal\");\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(null, null));\n    TokenStream ts = factory.create(new StringReader(\"シニアソフトウェアエンジニア\"));\n    assertTokenStreamContents(ts,\n        new String[] { \"シニアソフトウェアエンジニア\" }\n    );\n  }\n\n","sourceOld":"  /**\n   * Test mode parameter: specifying normal mode\n   */\n  public void testMode() throws IOException {\n    JapaneseTokenizerFactory factory = new JapaneseTokenizerFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"mode\", \"normal\");\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(null, null));\n    TokenStream ts = factory.create(new StringReader(\"シニアソフトウェアエンジニア\"));\n    assertTokenStreamContents(ts,\n        new String[] { \"シニアソフトウェアエンジニア\" }\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizerFactory#testMode().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestJapaneseTokenizerFactory#testMode().mjava","sourceNew":"  /**\n   * Test mode parameter: specifying normal mode\n   */\n  public void testMode() throws IOException {\n    JapaneseTokenizerFactory factory = new JapaneseTokenizerFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"mode\", \"normal\");\n    factory.init(args);\n    factory.inform(new StringMockResourceLoader(\"\"));\n    TokenStream ts = factory.create(new StringReader(\"シニアソフトウェアエンジニア\"));\n    assertTokenStreamContents(ts,\n        new String[] { \"シニアソフトウェアエンジニア\" }\n    );\n  }\n\n","sourceOld":"  /**\n   * Test mode parameter: specifying normal mode\n   */\n  public void testMode() throws IOException {\n    JapaneseTokenizerFactory factory = new JapaneseTokenizerFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"mode\", \"normal\");\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(null, null));\n    TokenStream ts = factory.create(new StringReader(\"シニアソフトウェアエンジニア\"));\n    assertTokenStreamContents(ts,\n        new String[] { \"シニアソフトウェアエンジニア\" }\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestJapaneseTokenizerFactory#testMode().mjava","sourceNew":null,"sourceOld":"  /**\n   * Test mode parameter: specifying normal mode\n   */\n  public void testMode() throws IOException {\n    JapaneseTokenizerFactory factory = new JapaneseTokenizerFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"mode\", \"normal\");\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(null, null));\n    TokenStream ts = factory.create(new StringReader(\"シニアソフトウェアエンジニア\"));\n    assertTokenStreamContents(ts,\n        new String[] { \"シニアソフトウェアエンジニア\" }\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestJapaneseTokenizerFactory#testMode().mjava","sourceNew":null,"sourceOld":"  /**\n   * Test mode parameter: specifying normal mode\n   */\n  public void testMode() throws IOException {\n    JapaneseTokenizerFactory factory = new JapaneseTokenizerFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"mode\", \"normal\");\n    factory.init(args);\n    factory.inform(new SolrResourceLoader(null, null));\n    TokenStream ts = factory.create(new StringReader(\"シニアソフトウェアエンジニア\"));\n    assertTokenStreamContents(ts,\n        new String[] { \"シニアソフトウェアエンジニア\" }\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["ce511b88510766951528ad497e1886e27b7688e4","5a1a22b1ad88b436661458df567f3fdb446392a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["ce511b88510766951528ad497e1886e27b7688e4","5a1a22b1ad88b436661458df567f3fdb446392a4"],"ce511b88510766951528ad497e1886e27b7688e4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["ce511b88510766951528ad497e1886e27b7688e4","3241e06e642196396b80bb293acd9c0814d079e0"],"3241e06e642196396b80bb293acd9c0814d079e0":["ce511b88510766951528ad497e1886e27b7688e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a1a22b1ad88b436661458df567f3fdb446392a4"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ce511b88510766951528ad497e1886e27b7688e4"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"ce511b88510766951528ad497e1886e27b7688e4":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","5a1a22b1ad88b436661458df567f3fdb446392a4","3241e06e642196396b80bb293acd9c0814d079e0"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3241e06e642196396b80bb293acd9c0814d079e0":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}