{"path":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesStandalone#testOnlyPartialUpdatesBetweenCommits().mjava","commits":[{"id":"415bbbe7da8065dd3c477bdc3c703c6425622998","date":1485393793,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesStandalone#testOnlyPartialUpdatesBetweenCommits().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testOnlyPartialUpdatesBetweenCommits() throws Exception {\n    // Full updates\n    long version1 = addAndGetVersion(sdoc(\"id\", \"1\", \"title_s\", \"first\", \"val1_i_dvo\", \"1\", \"val2_l_dvo\", \"1\"), params());\n    long version2 = addAndGetVersion(sdoc(\"id\", \"2\", \"title_s\", \"second\", \"val1_i_dvo\", \"2\", \"val2_l_dvo\", \"2\"), params());\n    long version3 = addAndGetVersion(sdoc(\"id\", \"3\", \"title_s\", \"third\", \"val1_i_dvo\", \"3\", \"val2_l_dvo\", \"3\"), params());\n    assertU(commit(\"softCommit\", \"false\"));\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"*,[docid]\"), \"//*[@numFound='3']\");\n\n    int docid1 = getDocId(\"1\");\n    int docid2 = getDocId(\"2\");\n    int docid3 = getDocId(\"3\");\n\n    int numPartialUpdates = 1 + random().nextInt(5000);\n    for (int i=0; i<numPartialUpdates; i++) {\n      version1 = addAndAssertVersion(version1, \"id\", \"1\", \"val1_i_dvo\", map(\"set\", i));\n      version2 = addAndAssertVersion(version2, \"id\", \"2\", \"val1_i_dvo\", map(\"inc\", 1));\n      version3 = addAndAssertVersion(version3, \"id\", \"3\", \"val1_i_dvo\", map(\"set\", i));\n\n      version1 = addAndAssertVersion(version1, \"id\", \"1\", \"val2_l_dvo\", map(\"set\", i));\n      version2 = addAndAssertVersion(version2, \"id\", \"2\", \"val2_l_dvo\", map(\"inc\", 1));\n      version3 = addAndAssertVersion(version3, \"id\", \"3\", \"val2_l_dvo\", map(\"set\", i));\n    }\n    assertU(commit(\"softCommit\", \"true\"));\n\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"id asc\", \"fl\", \"*,[docid]\"),\n        \"//*[@numFound='3']\",\n        \"//result/doc[1]/int[@name='val1_i_dvo'][.='\"+(numPartialUpdates-1)+\"']\",\n        \"//result/doc[2]/int[@name='val1_i_dvo'][.='\"+(numPartialUpdates+2)+\"']\",\n        \"//result/doc[3]/int[@name='val1_i_dvo'][.='\"+(numPartialUpdates-1)+\"']\",\n        \"//result/doc[1]/long[@name='val2_l_dvo'][.='\"+(numPartialUpdates-1)+\"']\",\n        \"//result/doc[2]/long[@name='val2_l_dvo'][.='\"+(numPartialUpdates+2)+\"']\",\n        \"//result/doc[3]/long[@name='val2_l_dvo'][.='\"+(numPartialUpdates-1)+\"']\",\n        \"//result/doc[1]/int[@name='[docid]'][.='\"+docid1+\"']\",\n        \"//result/doc[2]/int[@name='[docid]'][.='\"+docid2+\"']\",\n        \"//result/doc[3]/int[@name='[docid]'][.='\"+docid3+\"']\",\n        \"//result/doc[1]/long[@name='_version_'][.='\" + version1 + \"']\",\n        \"//result/doc[2]/long[@name='_version_'][.='\" + version2 + \"']\",\n        \"//result/doc[3]/long[@name='_version_'][.='\" + version3 + \"']\"\n        );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"598b5d23aa7c9732bf473c21a9cd309c44599394","date":1485530378,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesStandalone#testOnlyPartialUpdatesBetweenCommits().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testOnlyPartialUpdatesBetweenCommits() throws Exception {\n    // Full updates\n    long version1 = addAndGetVersion(sdoc(\"id\", \"1\", \"title_s\", \"first\", \"val1_i_dvo\", \"1\", \"val2_l_dvo\", \"1\"), params());\n    long version2 = addAndGetVersion(sdoc(\"id\", \"2\", \"title_s\", \"second\", \"val1_i_dvo\", \"2\", \"val2_l_dvo\", \"2\"), params());\n    long version3 = addAndGetVersion(sdoc(\"id\", \"3\", \"title_s\", \"third\", \"val1_i_dvo\", \"3\", \"val2_l_dvo\", \"3\"), params());\n    assertU(commit(\"softCommit\", \"false\"));\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"*,[docid]\"), \"//*[@numFound='3']\");\n\n    int docid1 = getDocId(\"1\");\n    int docid2 = getDocId(\"2\");\n    int docid3 = getDocId(\"3\");\n\n    int numPartialUpdates = 1 + random().nextInt(5000);\n    for (int i=0; i<numPartialUpdates; i++) {\n      version1 = addAndAssertVersion(version1, \"id\", \"1\", \"val1_i_dvo\", map(\"set\", i));\n      version2 = addAndAssertVersion(version2, \"id\", \"2\", \"val1_i_dvo\", map(\"inc\", 1));\n      version3 = addAndAssertVersion(version3, \"id\", \"3\", \"val1_i_dvo\", map(\"set\", i));\n\n      version1 = addAndAssertVersion(version1, \"id\", \"1\", \"val2_l_dvo\", map(\"set\", i));\n      version2 = addAndAssertVersion(version2, \"id\", \"2\", \"val2_l_dvo\", map(\"inc\", 1));\n      version3 = addAndAssertVersion(version3, \"id\", \"3\", \"val2_l_dvo\", map(\"set\", i));\n    }\n    assertU(commit(\"softCommit\", \"true\"));\n\n    assertQ(req(\"q\", \"*:*\", \"sort\", \"id asc\", \"fl\", \"*,[docid]\"),\n        \"//*[@numFound='3']\",\n        \"//result/doc[1]/int[@name='val1_i_dvo'][.='\"+(numPartialUpdates-1)+\"']\",\n        \"//result/doc[2]/int[@name='val1_i_dvo'][.='\"+(numPartialUpdates+2)+\"']\",\n        \"//result/doc[3]/int[@name='val1_i_dvo'][.='\"+(numPartialUpdates-1)+\"']\",\n        \"//result/doc[1]/long[@name='val2_l_dvo'][.='\"+(numPartialUpdates-1)+\"']\",\n        \"//result/doc[2]/long[@name='val2_l_dvo'][.='\"+(numPartialUpdates+2)+\"']\",\n        \"//result/doc[3]/long[@name='val2_l_dvo'][.='\"+(numPartialUpdates-1)+\"']\",\n        \"//result/doc[1]/int[@name='[docid]'][.='\"+docid1+\"']\",\n        \"//result/doc[2]/int[@name='[docid]'][.='\"+docid2+\"']\",\n        \"//result/doc[3]/int[@name='[docid]'][.='\"+docid3+\"']\",\n        \"//result/doc[1]/long[@name='_version_'][.='\" + version1 + \"']\",\n        \"//result/doc[2]/long[@name='_version_'][.='\" + version2 + \"']\",\n        \"//result/doc[3]/long[@name='_version_'][.='\" + version3 + \"']\"\n        );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"598b5d23aa7c9732bf473c21a9cd309c44599394":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","415bbbe7da8065dd3c477bdc3c703c6425622998"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["415bbbe7da8065dd3c477bdc3c703c6425622998"]},"commit2Childs":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"598b5d23aa7c9732bf473c21a9cd309c44599394":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["415bbbe7da8065dd3c477bdc3c703c6425622998","598b5d23aa7c9732bf473c21a9cd309c44599394"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}