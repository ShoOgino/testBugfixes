{"path":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/de/GermanStemmer#stem(String).mjava","commits":[{"id":"4215168c7c026cd898f2d98bb6aa5b0df9856696","date":1092688246,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/de/GermanStemmer#stem(String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Stemms the given term to an unique <tt>discriminator</tt>.\n     *\n     * @param term  The term that should be stemmed.\n     * @return      Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term )\n    {\n      // Use lowercase for medium stemming.\n      term = term.toLowerCase();\n      if ( !isStemmable( term ) )\n        return term;\n      // Reset the StringBuffer.\n      sb.delete( 0, sb.length() );\n      sb.insert( 0, term );\n      // Stemming starts here...\n      substitute( sb );\n      strip( sb );\n      optimize( sb );\n      resubstitute( sb );\n      removeParticleDenotion( sb );\n      return sb.toString();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/de/GermanStemmer#stem(String).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/de/GermanStemmer#stem(String).mjava","sourceNew":"    /**\n     * Stemms the given term to an unique <tt>discriminator</tt>.\n     *\n     * @param term  The term that should be stemmed.\n     * @return      Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term )\n    {\n      // Use lowercase for medium stemming.\n      term = term.toLowerCase();\n      if ( !isStemmable( term ) )\n        return term;\n      // Reset the StringBuffer.\n      sb.delete( 0, sb.length() );\n      sb.insert( 0, term );\n      // Stemming starts here...\n      substitute( sb );\n      strip( sb );\n      optimize( sb );\n      resubstitute( sb );\n      removeParticleDenotion( sb );\n      return sb.toString();\n    }\n\n","sourceOld":"    /**\n     * Stemms the given term to an unique <tt>discriminator</tt>.\n     *\n     * @param term  The term that should be stemmed.\n     * @return      Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term )\n    {\n      // Use lowercase for medium stemming.\n      term = term.toLowerCase();\n      if ( !isStemmable( term ) )\n        return term;\n      // Reset the StringBuffer.\n      sb.delete( 0, sb.length() );\n      sb.insert( 0, term );\n      // Stemming starts here...\n      substitute( sb );\n      strip( sb );\n      optimize( sb );\n      resubstitute( sb );\n      removeParticleDenotion( sb );\n      return sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["4215168c7c026cd898f2d98bb6aa5b0df9856696"],"4215168c7c026cd898f2d98bb6aa5b0df9856696":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4215168c7c026cd898f2d98bb6aa5b0df9856696":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4215168c7c026cd898f2d98bb6aa5b0df9856696"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}