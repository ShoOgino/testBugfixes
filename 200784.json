{"path":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/SegmentTermsEnum.Frame#rewind().mjava","commits":[{"id":"e50f0da93c6dcee20d8792637b1786e2c34975e9","date":1400182475,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/SegmentTermsEnum.Frame#rewind().mjava","pathOld":"/dev/null","sourceNew":"    void rewind() {\n\n      // Force reload:\n      fp = fpOrig;\n      nextEnt = -1;\n      hasTerms = hasTermsOrig;\n      if (isFloor) {\n        floorDataReader.rewind();\n        numFollowFloorBlocks = floorDataReader.readVInt();\n        nextFloorLabel = floorDataReader.readByte() & 0xff;\n      }\n\n      /*\n      //System.out.println(\"rewind\");\n      // Keeps the block loaded, but rewinds its state:\n      if (nextEnt > 0 || fp != fpOrig) {\n      if (DEBUG) {\n      System.out.println(\"      rewind frame ord=\" + ord + \" fpOrig=\" + fpOrig + \" fp=\" + fp + \" hasTerms?=\" + hasTerms + \" isFloor?=\" + isFloor + \" nextEnt=\" + nextEnt + \" prefixLen=\" + prefix);\n      }\n      if (fp != fpOrig) {\n      fp = fpOrig;\n      nextEnt = -1;\n      } else {\n      nextEnt = 0;\n      }\n      hasTerms = hasTermsOrig;\n      if (isFloor) {\n      floorDataReader.rewind();\n      numFollowFloorBlocks = floorDataReader.readVInt();\n      nextFloorLabel = floorDataReader.readByte() & 0xff;\n      }\n      assert suffixBytes != null;\n      suffixesReader.rewind();\n      assert statBytes != null;\n      statsReader.rewind();\n      metaDataUpto = 0;\n      state.termBlockOrd = 0;\n      // TODO: skip this if !hasTerms?  Then postings\n      // impl wouldn't have to write useless 0 byte\n      postingsReader.resetTermsBlock(fieldInfo, state);\n      lastSubFP = -1;\n      } else if (DEBUG) {\n      System.out.println(\"      skip rewind fp=\" + fp + \" fpOrig=\" + fpOrig + \" nextEnt=\" + nextEnt + \" ord=\" + ord);\n      }\n      */\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f4ef2de7b0fd59ef22e20888773ad260c90bfb4","date":1400183621,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/SegmentTermsEnum.Frame#rewind().mjava","sourceNew":null,"sourceOld":"    void rewind() {\n\n      // Force reload:\n      fp = fpOrig;\n      nextEnt = -1;\n      hasTerms = hasTermsOrig;\n      if (isFloor) {\n        floorDataReader.rewind();\n        numFollowFloorBlocks = floorDataReader.readVInt();\n        nextFloorLabel = floorDataReader.readByte() & 0xff;\n      }\n\n      /*\n      //System.out.println(\"rewind\");\n      // Keeps the block loaded, but rewinds its state:\n      if (nextEnt > 0 || fp != fpOrig) {\n      if (DEBUG) {\n      System.out.println(\"      rewind frame ord=\" + ord + \" fpOrig=\" + fpOrig + \" fp=\" + fp + \" hasTerms?=\" + hasTerms + \" isFloor?=\" + isFloor + \" nextEnt=\" + nextEnt + \" prefixLen=\" + prefix);\n      }\n      if (fp != fpOrig) {\n      fp = fpOrig;\n      nextEnt = -1;\n      } else {\n      nextEnt = 0;\n      }\n      hasTerms = hasTermsOrig;\n      if (isFloor) {\n      floorDataReader.rewind();\n      numFollowFloorBlocks = floorDataReader.readVInt();\n      nextFloorLabel = floorDataReader.readByte() & 0xff;\n      }\n      assert suffixBytes != null;\n      suffixesReader.rewind();\n      assert statBytes != null;\n      statsReader.rewind();\n      metaDataUpto = 0;\n      state.termBlockOrd = 0;\n      // TODO: skip this if !hasTerms?  Then postings\n      // impl wouldn't have to write useless 0 byte\n      postingsReader.resetTermsBlock(fieldInfo, state);\n      lastSubFP = -1;\n      } else if (DEBUG) {\n      System.out.println(\"      skip rewind fp=\" + fp + \" fpOrig=\" + fpOrig + \" nextEnt=\" + nextEnt + \" ord=\" + ord);\n      }\n      */\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f4ef2de7b0fd59ef22e20888773ad260c90bfb4":["e50f0da93c6dcee20d8792637b1786e2c34975e9"],"e50f0da93c6dcee20d8792637b1786e2c34975e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3f4ef2de7b0fd59ef22e20888773ad260c90bfb4":[],"e50f0da93c6dcee20d8792637b1786e2c34975e9":["3f4ef2de7b0fd59ef22e20888773ad260c90bfb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e50f0da93c6dcee20d8792637b1786e2c34975e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3f4ef2de7b0fd59ef22e20888773ad260c90bfb4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}