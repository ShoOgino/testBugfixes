{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase#simScorer(SimWeight,AtomicReaderContext).mjava","commits":[{"id":"b799defcfda6d303cbb180917bf1e749089adf42","date":1370695356,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase#simScorer(SimWeight,AtomicReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase#exactSimScorer(SimWeight,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public SimScorer simScorer(SimWeight stats, AtomicReaderContext context) throws IOException {\n    if (stats instanceof MultiSimilarity.MultiStats) {\n      // a multi term query (e.g. phrase). return the summation, \n      // scoring almost as if it were boolean query\n      SimWeight subStats[] = ((MultiSimilarity.MultiStats) stats).subStats;\n      SimScorer subScorers[] = new SimScorer[subStats.length];\n      for (int i = 0; i < subScorers.length; i++) {\n        BasicStats basicstats = (BasicStats) subStats[i];\n        subScorers[i] = new BasicSimScorer(basicstats, context.reader().getNormValues(basicstats.field));\n      }\n      return new MultiSimilarity.MultiSimScorer(subScorers);\n    } else {\n      BasicStats basicstats = (BasicStats) stats;\n      return new BasicSimScorer(basicstats, context.reader().getNormValues(basicstats.field));\n    }\n  }\n\n","sourceOld":"  @Override\n  public ExactSimScorer exactSimScorer(SimWeight stats, AtomicReaderContext context) throws IOException {\n    if (stats instanceof MultiSimilarity.MultiStats) {\n      // a multi term query (e.g. phrase). return the summation, \n      // scoring almost as if it were boolean query\n      SimWeight subStats[] = ((MultiSimilarity.MultiStats) stats).subStats;\n      ExactSimScorer subScorers[] = new ExactSimScorer[subStats.length];\n      for (int i = 0; i < subScorers.length; i++) {\n        BasicStats basicstats = (BasicStats) subStats[i];\n        subScorers[i] = new BasicExactDocScorer(basicstats, context.reader().getNormValues(basicstats.field));\n      }\n      return new MultiSimilarity.MultiExactDocScorer(subScorers);\n    } else {\n      BasicStats basicstats = (BasicStats) stats;\n      return new BasicExactDocScorer(basicstats, context.reader().getNormValues(basicstats.field));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase#simScorer(SimWeight,AtomicReaderContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public SimScorer simScorer(SimWeight stats, AtomicReaderContext context) throws IOException {\n    if (stats instanceof MultiSimilarity.MultiStats) {\n      // a multi term query (e.g. phrase). return the summation, \n      // scoring almost as if it were boolean query\n      SimWeight subStats[] = ((MultiSimilarity.MultiStats) stats).subStats;\n      SimScorer subScorers[] = new SimScorer[subStats.length];\n      for (int i = 0; i < subScorers.length; i++) {\n        BasicStats basicstats = (BasicStats) subStats[i];\n        subScorers[i] = new BasicSimScorer(basicstats, context.reader().getNormValues(basicstats.field));\n      }\n      return new MultiSimilarity.MultiSimScorer(subScorers);\n    } else {\n      BasicStats basicstats = (BasicStats) stats;\n      return new BasicSimScorer(basicstats, context.reader().getNormValues(basicstats.field));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b799defcfda6d303cbb180917bf1e749089adf42":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["b799defcfda6d303cbb180917bf1e749089adf42"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"b799defcfda6d303cbb180917bf1e749089adf42":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b799defcfda6d303cbb180917bf1e749089adf42"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}