{"path":"solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser#parse().mjava","commits":[{"id":"637a392e2e05d4e1179ac3c532cfeef0cde977ba","date":1376347977,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser#parse().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Query parse() throws SyntaxError {\n    String filter = localParams.get(getParentFilterLocalParamName());\n    QParser parentParser = subQuery(filter, null);\n    Query parentQ = parentParser.getQuery();\n\n    String queryText = localParams.get(QueryParsing.V);\n    // there is no child query, return parent filter from cache\n    if (queryText == null || queryText.length()==0) {\n                  SolrConstantScoreQuery wrapped = new SolrConstantScoreQuery(getFilter(parentQ));\n                  wrapped.setCache(false);\n                  return wrapped;\n    }\n    QParser childrenParser = subQuery(queryText, null);\n    Query childrenQuery = childrenParser.getQuery();\n    return createQuery(parentQ, childrenQuery);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser#parse().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Query parse() throws SyntaxError {\n    String filter = localParams.get(getParentFilterLocalParamName());\n    QParser parentParser = subQuery(filter, null);\n    Query parentQ = parentParser.getQuery();\n\n    String queryText = localParams.get(QueryParsing.V);\n    // there is no child query, return parent filter from cache\n    if (queryText == null || queryText.length()==0) {\n                  SolrConstantScoreQuery wrapped = new SolrConstantScoreQuery(getFilter(parentQ));\n                  wrapped.setCache(false);\n                  return wrapped;\n    }\n    QParser childrenParser = subQuery(queryText, null);\n    Query childrenQuery = childrenParser.getQuery();\n    return createQuery(parentQ, childrenQuery);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0b5dc820d653826ca85d4355563ef001f156c644","date":1438618492,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws SyntaxError {\n    String filter = localParams.get(getParentFilterLocalParamName());\n    String scoreMode = localParams.get(\"score\", ScoreMode.None.name());\n    QParser parentParser = subQuery(filter, null);\n    Query parentQ = parentParser.getQuery();\n\n    String queryText = localParams.get(QueryParsing.V);\n    // there is no child query, return parent filter from cache\n    if (queryText == null || queryText.length()==0) {\n                  SolrConstantScoreQuery wrapped = new SolrConstantScoreQuery(getFilter(parentQ));\n                  wrapped.setCache(false);\n                  return wrapped;\n    }\n    QParser childrenParser = subQuery(queryText, null);\n    Query childrenQuery = childrenParser.getQuery();\n    return createQuery(parentQ, childrenQuery, scoreMode);\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws SyntaxError {\n    String filter = localParams.get(getParentFilterLocalParamName());\n    QParser parentParser = subQuery(filter, null);\n    Query parentQ = parentParser.getQuery();\n\n    String queryText = localParams.get(QueryParsing.V);\n    // there is no child query, return parent filter from cache\n    if (queryText == null || queryText.length()==0) {\n                  SolrConstantScoreQuery wrapped = new SolrConstantScoreQuery(getFilter(parentQ));\n                  wrapped.setCache(false);\n                  return wrapped;\n    }\n    QParser childrenParser = subQuery(queryText, null);\n    Query childrenQuery = childrenParser.getQuery();\n    return createQuery(parentQ, childrenQuery);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f7c69c29432074b666568db5e84001acd540dee","date":1520745905,"type":4,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser#parse().mjava","sourceNew":null,"sourceOld":"  @Override\n  public Query parse() throws SyntaxError {\n    String filter = localParams.get(getParentFilterLocalParamName());\n    String scoreMode = localParams.get(\"score\", ScoreMode.None.name());\n    QParser parentParser = subQuery(filter, null);\n    Query parentQ = parentParser.getQuery();\n\n    String queryText = localParams.get(QueryParsing.V);\n    // there is no child query, return parent filter from cache\n    if (queryText == null || queryText.length()==0) {\n                  SolrConstantScoreQuery wrapped = new SolrConstantScoreQuery(getFilter(parentQ));\n                  wrapped.setCache(false);\n                  return wrapped;\n    }\n    QParser childrenParser = subQuery(queryText, null);\n    Query childrenQuery = childrenParser.getQuery();\n    return createQuery(parentQ, childrenQuery, scoreMode);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0b5dc820d653826ca85d4355563ef001f156c644":["637a392e2e05d4e1179ac3c532cfeef0cde977ba"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","637a392e2e05d4e1179ac3c532cfeef0cde977ba"],"637a392e2e05d4e1179ac3c532cfeef0cde977ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f7c69c29432074b666568db5e84001acd540dee":["0b5dc820d653826ca85d4355563ef001f156c644"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5f7c69c29432074b666568db5e84001acd540dee"]},"commit2Childs":{"0b5dc820d653826ca85d4355563ef001f156c644":["5f7c69c29432074b666568db5e84001acd540dee"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"637a392e2e05d4e1179ac3c532cfeef0cde977ba":["0b5dc820d653826ca85d4355563ef001f156c644","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","637a392e2e05d4e1179ac3c532cfeef0cde977ba"],"5f7c69c29432074b666568db5e84001acd540dee":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}