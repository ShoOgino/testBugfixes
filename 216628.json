{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties]).mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties]).mjava","pathOld":"/dev/null","sourceNew":"  public DataImporter(String dataConfig, SolrCore core,\n                      Map<String, Properties> ds) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    loadDataConfig(dataConfig);\n\n    for (DataConfig.Document document : config.documents) {\n      for (DataConfig.Entity e : document.entities) {\n        Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n        initEntity(e, fields, false);\n        e.implicitFields = new ArrayList<DataConfig.Field>();\n        String errs = verifyWithSchema(fields, e.implicitFields);\n        if (e.implicitFields.isEmpty())\n          e.implicitFields = null;\n        if (errs != null) {\n          throw new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, errs);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["8d22c66b0638c82521891318fc352042c5b86e03","29df09ecb6b96d58f34447be89f88a0c067fb3a9","33c5df47ecbf734182bdfec8f59154a8dbecc2e3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8d22c66b0638c82521891318fc352042c5b86e03","date":1219993248,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties]).mjava","sourceNew":"  DataImporter(String dataConfig, SolrCore core,\n                      Map<String, Properties> ds) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    loadDataConfig(dataConfig);\n\n    for (DataConfig.Document document : config.documents) {\n      for (DataConfig.Entity e : document.entities) {\n        Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n        initEntity(e, fields, false);\n        e.implicitFields = new ArrayList<DataConfig.Field>();\n        String errs = verifyWithSchema(fields, e.implicitFields);\n        if (e.implicitFields.isEmpty())\n          e.implicitFields = null;\n        if (errs != null) {\n          throw new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, errs);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public DataImporter(String dataConfig, SolrCore core,\n                      Map<String, Properties> ds) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    loadDataConfig(dataConfig);\n\n    for (DataConfig.Document document : config.documents) {\n      for (DataConfig.Entity e : document.entities) {\n        Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n        initEntity(e, fields, false);\n        e.implicitFields = new ArrayList<DataConfig.Field>();\n        String errs = verifyWithSchema(fields, e.implicitFields);\n        if (e.implicitFields.isEmpty())\n          e.implicitFields = null;\n        if (errs != null) {\n          throw new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, errs);\n        }\n      }\n    }\n  }\n\n","bugFix":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e46bf22400b9cd12540418cd46bfa17c100f983a","date":1225303526,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties]).mjava","sourceNew":"  DataImporter(String dataConfig, SolrCore core,\n                      Map<String, Properties> ds) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    loadDataConfig(dataConfig);\n\n    for (DataConfig.Document document : config.documents) {\n      for (DataConfig.Entity e : document.entities) {\n        Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n        initEntity(e, fields, false);\n        e.implicitFields = new ArrayList<DataConfig.Field>();\n        String errs = verifyWithSchema(e, fields);\n        if (e.implicitFields.isEmpty())\n          e.implicitFields = null;\n        if (errs != null) {\n          throw new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, errs);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  DataImporter(String dataConfig, SolrCore core,\n                      Map<String, Properties> ds) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    loadDataConfig(dataConfig);\n\n    for (DataConfig.Document document : config.documents) {\n      for (DataConfig.Entity e : document.entities) {\n        Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n        initEntity(e, fields, false);\n        e.implicitFields = new ArrayList<DataConfig.Field>();\n        String errs = verifyWithSchema(fields, e.implicitFields);\n        if (e.implicitFields.isEmpty())\n          e.implicitFields = null;\n        if (errs != null) {\n          throw new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, errs);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["29df09ecb6b96d58f34447be89f88a0c067fb3a9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29df09ecb6b96d58f34447be89f88a0c067fb3a9","date":1225344078,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties]).mjava","sourceNew":"  DataImporter(String dataConfig, SolrCore core,\n                      Map<String, Properties> ds) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(), entry.getValue());\n    }\n\n    for (DataConfig.Document document : config.documents) {\n      for (DataConfig.Entity e : document.entities) {\n        Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n        initEntity(e, fields, false);\n        String errs = verifyWithSchema(fields);\n        if (errs != null) {\n          throw new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, errs);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  DataImporter(String dataConfig, SolrCore core,\n                      Map<String, Properties> ds) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    loadDataConfig(dataConfig);\n\n    for (DataConfig.Document document : config.documents) {\n      for (DataConfig.Entity e : document.entities) {\n        Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n        initEntity(e, fields, false);\n        e.implicitFields = new ArrayList<DataConfig.Field>();\n        String errs = verifyWithSchema(e, fields);\n        if (e.implicitFields.isEmpty())\n          e.implicitFields = null;\n        if (errs != null) {\n          throw new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, errs);\n        }\n      }\n    }\n  }\n\n","bugFix":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","e46bf22400b9cd12540418cd46bfa17c100f983a"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"33c5df47ecbf734182bdfec8f59154a8dbecc2e3","date":1226037101,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties]).mjava","sourceNew":"  DataImporter(String dataConfig, SolrCore core,\n               Map<String, Properties> ds) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(), entry.getValue());\n    }\n\n    for (DataConfig.Document document : config.documents) {\n      for (DataConfig.Entity e : document.entities) {\n        Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n        initEntity(e, fields, false);\n        String errs = verifyWithSchema(fields);\n        if (errs != null) {\n          throw new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, errs);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  DataImporter(String dataConfig, SolrCore core,\n                      Map<String, Properties> ds) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(), entry.getValue());\n    }\n\n    for (DataConfig.Document document : config.documents) {\n      for (DataConfig.Entity e : document.entities) {\n        Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n        initEntity(e, fields, false);\n        String errs = verifyWithSchema(fields);\n        if (errs != null) {\n          throw new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, errs);\n        }\n      }\n    }\n  }\n\n","bugFix":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db6dfac30d1553e9356900c2b76b768139483a62","date":1230619368,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties]).mjava","sourceNew":"  DataImporter(String dataConfig, SolrCore core,\n               Map<String, Properties> ds) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      String errs = verifyWithSchema(fields);\n      if (errs != null) {\n        throw new DataImportHandlerException(\n                DataImportHandlerException.SEVERE, errs);\n      }\n    }\n  }\n\n","sourceOld":"  DataImporter(String dataConfig, SolrCore core,\n               Map<String, Properties> ds) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(), entry.getValue());\n    }\n\n    for (DataConfig.Document document : config.documents) {\n      for (DataConfig.Entity e : document.entities) {\n        Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n        initEntity(e, fields, false);\n        String errs = verifyWithSchema(fields);\n        if (errs != null) {\n          throw new DataImportHandlerException(\n                  DataImportHandlerException.SEVERE, errs);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f8c38ac26359dc90605e71c2bfd327e6c18362c","date":1233040912,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties],Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(String,SolrCore,Map[String,Properties]).mjava","sourceNew":"  DataImporter(String dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      String errs = verifyWithSchema(fields);\n      if (errs != null) {\n        throw new DataImportHandlerException(\n                DataImportHandlerException.SEVERE, errs);\n      }\n    }\n  }\n\n","sourceOld":"  DataImporter(String dataConfig, SolrCore core,\n               Map<String, Properties> ds) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      String errs = verifyWithSchema(fields);\n      if (errs != null) {\n        throw new DataImportHandlerException(\n                DataImportHandlerException.SEVERE, errs);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8d22c66b0638c82521891318fc352042c5b86e03":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"29df09ecb6b96d58f34447be89f88a0c067fb3a9":["e46bf22400b9cd12540418cd46bfa17c100f983a"],"e46bf22400b9cd12540418cd46bfa17c100f983a":["8d22c66b0638c82521891318fc352042c5b86e03"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"33c5df47ecbf734182bdfec8f59154a8dbecc2e3":["29df09ecb6b96d58f34447be89f88a0c067fb3a9"],"4f8c38ac26359dc90605e71c2bfd327e6c18362c":["db6dfac30d1553e9356900c2b76b768139483a62"],"db6dfac30d1553e9356900c2b76b768139483a62":["33c5df47ecbf734182bdfec8f59154a8dbecc2e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"8d22c66b0638c82521891318fc352042c5b86e03":["e46bf22400b9cd12540418cd46bfa17c100f983a"],"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["8d22c66b0638c82521891318fc352042c5b86e03"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29df09ecb6b96d58f34447be89f88a0c067fb3a9":["33c5df47ecbf734182bdfec8f59154a8dbecc2e3"],"e46bf22400b9cd12540418cd46bfa17c100f983a":["29df09ecb6b96d58f34447be89f88a0c067fb3a9"],"33c5df47ecbf734182bdfec8f59154a8dbecc2e3":["db6dfac30d1553e9356900c2b76b768139483a62"],"4f8c38ac26359dc90605e71c2bfd327e6c18362c":[],"db6dfac30d1553e9356900c2b76b768139483a62":["4f8c38ac26359dc90605e71c2bfd327e6c18362c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4f8c38ac26359dc90605e71c2bfd327e6c18362c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}