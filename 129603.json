{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#toLiveInfos(SegmentInfos).mjava","commits":[{"id":"ae695f21c50b03702b5d0fa2543d5af844bb7cd3","date":1331554994,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#toLiveInfos(SegmentInfos).mjava","pathOld":"/dev/null","sourceNew":"  // For infoStream output\n  synchronized SegmentInfos toLiveInfos(SegmentInfos sis) {\n    final SegmentInfos newSIS = new SegmentInfos();\n    final Map<SegmentInfo,SegmentInfo> liveSIS = new HashMap<SegmentInfo,SegmentInfo>();        \n    for(SegmentInfo info : segmentInfos) {\n      liveSIS.put(info, info);\n    }\n    for(SegmentInfo info : sis) {\n      SegmentInfo liveInfo = liveSIS.get(info);\n      if (liveInfo != null) {\n        info = liveInfo;\n      }\n      newSIS.add(info);\n    }\n\n    return newSIS;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#toLiveInfos(SegmentInfos).mjava","pathOld":"/dev/null","sourceNew":"  // For infoStream output\n  synchronized SegmentInfos toLiveInfos(SegmentInfos sis) {\n    final SegmentInfos newSIS = new SegmentInfos();\n    final Map<SegmentInfo,SegmentInfo> liveSIS = new HashMap<SegmentInfo,SegmentInfo>();        \n    for(SegmentInfo info : segmentInfos) {\n      liveSIS.put(info, info);\n    }\n    for(SegmentInfo info : sis) {\n      SegmentInfo liveInfo = liveSIS.get(info);\n      if (liveInfo != null) {\n        info = liveInfo;\n      }\n      newSIS.add(info);\n    }\n\n    return newSIS;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d153abcf92dc5329d98571a8c3035df9bd80648","date":1337702630,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#toLiveInfos(SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#toLiveInfos(SegmentInfos).mjava","sourceNew":"  // For infoStream output\n  synchronized SegmentInfos toLiveInfos(SegmentInfos sis) {\n    final SegmentInfos newSIS = new SegmentInfos();\n    final Map<SegmentInfoPerCommit,SegmentInfoPerCommit> liveSIS = new HashMap<SegmentInfoPerCommit,SegmentInfoPerCommit>();        \n    for(SegmentInfoPerCommit info : segmentInfos) {\n      liveSIS.put(info, info);\n    }\n    for(SegmentInfoPerCommit info : sis) {\n      SegmentInfoPerCommit liveInfo = liveSIS.get(info);\n      if (liveInfo != null) {\n        info = liveInfo;\n      }\n      newSIS.add(info);\n    }\n\n    return newSIS;\n  }\n\n","sourceOld":"  // For infoStream output\n  synchronized SegmentInfos toLiveInfos(SegmentInfos sis) {\n    final SegmentInfos newSIS = new SegmentInfos();\n    final Map<SegmentInfo,SegmentInfo> liveSIS = new HashMap<SegmentInfo,SegmentInfo>();        \n    for(SegmentInfo info : segmentInfos) {\n      liveSIS.put(info, info);\n    }\n    for(SegmentInfo info : sis) {\n      SegmentInfo liveInfo = liveSIS.get(info);\n      if (liveInfo != null) {\n        info = liveInfo;\n      }\n      newSIS.add(info);\n    }\n\n    return newSIS;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#toLiveInfos(SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#toLiveInfos(SegmentInfos).mjava","sourceNew":"  // For infoStream output\n  synchronized SegmentInfos toLiveInfos(SegmentInfos sis) {\n    final SegmentInfos newSIS = new SegmentInfos();\n    final Map<SegmentInfoPerCommit,SegmentInfoPerCommit> liveSIS = new HashMap<SegmentInfoPerCommit,SegmentInfoPerCommit>();        \n    for(SegmentInfoPerCommit info : segmentInfos) {\n      liveSIS.put(info, info);\n    }\n    for(SegmentInfoPerCommit info : sis) {\n      SegmentInfoPerCommit liveInfo = liveSIS.get(info);\n      if (liveInfo != null) {\n        info = liveInfo;\n      }\n      newSIS.add(info);\n    }\n\n    return newSIS;\n  }\n\n","sourceOld":"  // For infoStream output\n  synchronized SegmentInfos toLiveInfos(SegmentInfos sis) {\n    final SegmentInfos newSIS = new SegmentInfos();\n    final Map<SegmentInfo,SegmentInfo> liveSIS = new HashMap<SegmentInfo,SegmentInfo>();        \n    for(SegmentInfo info : segmentInfos) {\n      liveSIS.put(info, info);\n    }\n    for(SegmentInfo info : sis) {\n      SegmentInfo liveInfo = liveSIS.get(info);\n      if (liveInfo != null) {\n        info = liveInfo;\n      }\n      newSIS.add(info);\n    }\n\n    return newSIS;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#toLiveInfos(SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#toLiveInfos(SegmentInfos).mjava","sourceNew":"  // For infoStream output\n  synchronized SegmentInfos toLiveInfos(SegmentInfos sis) {\n    final SegmentInfos newSIS = new SegmentInfos();\n    final Map<SegmentCommitInfo,SegmentCommitInfo> liveSIS = new HashMap<SegmentCommitInfo,SegmentCommitInfo>();        \n    for(SegmentCommitInfo info : segmentInfos) {\n      liveSIS.put(info, info);\n    }\n    for(SegmentCommitInfo info : sis) {\n      SegmentCommitInfo liveInfo = liveSIS.get(info);\n      if (liveInfo != null) {\n        info = liveInfo;\n      }\n      newSIS.add(info);\n    }\n\n    return newSIS;\n  }\n\n","sourceOld":"  // For infoStream output\n  synchronized SegmentInfos toLiveInfos(SegmentInfos sis) {\n    final SegmentInfos newSIS = new SegmentInfos();\n    final Map<SegmentInfoPerCommit,SegmentInfoPerCommit> liveSIS = new HashMap<SegmentInfoPerCommit,SegmentInfoPerCommit>();        \n    for(SegmentInfoPerCommit info : segmentInfos) {\n      liveSIS.put(info, info);\n    }\n    for(SegmentInfoPerCommit info : sis) {\n      SegmentInfoPerCommit liveInfo = liveSIS.get(info);\n      if (liveInfo != null) {\n        info = liveInfo;\n      }\n      newSIS.add(info);\n    }\n\n    return newSIS;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#toLiveInfos(SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#toLiveInfos(SegmentInfos).mjava","sourceNew":"  // For infoStream output\n  synchronized SegmentInfos toLiveInfos(SegmentInfos sis) {\n    final SegmentInfos newSIS = new SegmentInfos();\n    final Map<SegmentCommitInfo,SegmentCommitInfo> liveSIS = new HashMap<>();\n    for(SegmentCommitInfo info : segmentInfos) {\n      liveSIS.put(info, info);\n    }\n    for(SegmentCommitInfo info : sis) {\n      SegmentCommitInfo liveInfo = liveSIS.get(info);\n      if (liveInfo != null) {\n        info = liveInfo;\n      }\n      newSIS.add(info);\n    }\n\n    return newSIS;\n  }\n\n","sourceOld":"  // For infoStream output\n  synchronized SegmentInfos toLiveInfos(SegmentInfos sis) {\n    final SegmentInfos newSIS = new SegmentInfos();\n    final Map<SegmentCommitInfo,SegmentCommitInfo> liveSIS = new HashMap<SegmentCommitInfo,SegmentCommitInfo>();        \n    for(SegmentCommitInfo info : segmentInfos) {\n      liveSIS.put(info, info);\n    }\n    for(SegmentCommitInfo info : sis) {\n      SegmentCommitInfo liveInfo = liveSIS.get(info);\n      if (liveInfo != null) {\n        info = liveInfo;\n      }\n      newSIS.add(info);\n    }\n\n    return newSIS;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d97ba94eef1fc33c5451259a7aa2ac682646c1af","date":1488285427,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#toLiveInfos(SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#toLiveInfos(SegmentInfos).mjava","sourceNew":"  // For infoStream output\n  synchronized SegmentInfos toLiveInfos(SegmentInfos sis) {\n    final SegmentInfos newSIS = new SegmentInfos(sis.getIndexCreatedVersion());\n    final Map<SegmentCommitInfo,SegmentCommitInfo> liveSIS = new HashMap<>();\n    for(SegmentCommitInfo info : segmentInfos) {\n      liveSIS.put(info, info);\n    }\n    for(SegmentCommitInfo info : sis) {\n      SegmentCommitInfo liveInfo = liveSIS.get(info);\n      if (liveInfo != null) {\n        info = liveInfo;\n      }\n      newSIS.add(info);\n    }\n\n    return newSIS;\n  }\n\n","sourceOld":"  // For infoStream output\n  synchronized SegmentInfos toLiveInfos(SegmentInfos sis) {\n    final SegmentInfos newSIS = new SegmentInfos();\n    final Map<SegmentCommitInfo,SegmentCommitInfo> liveSIS = new HashMap<>();\n    for(SegmentCommitInfo info : segmentInfos) {\n      liveSIS.put(info, info);\n    }\n    for(SegmentCommitInfo info : sis) {\n      SegmentCommitInfo liveInfo = liveSIS.get(info);\n      if (liveInfo != null) {\n        info = liveInfo;\n      }\n      newSIS.add(info);\n    }\n\n    return newSIS;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31741cf1390044e38a2ec3127cf302ba841bfd75","date":1491292636,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#toLiveInfos(SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#toLiveInfos(SegmentInfos).mjava","sourceNew":"  // For infoStream output\n  synchronized SegmentInfos toLiveInfos(SegmentInfos sis) {\n    final SegmentInfos newSIS = new SegmentInfos(sis.getIndexCreatedVersionMajor());\n    final Map<SegmentCommitInfo,SegmentCommitInfo> liveSIS = new HashMap<>();\n    for(SegmentCommitInfo info : segmentInfos) {\n      liveSIS.put(info, info);\n    }\n    for(SegmentCommitInfo info : sis) {\n      SegmentCommitInfo liveInfo = liveSIS.get(info);\n      if (liveInfo != null) {\n        info = liveInfo;\n      }\n      newSIS.add(info);\n    }\n\n    return newSIS;\n  }\n\n","sourceOld":"  // For infoStream output\n  synchronized SegmentInfos toLiveInfos(SegmentInfos sis) {\n    final SegmentInfos newSIS = new SegmentInfos(sis.getIndexCreatedVersion());\n    final Map<SegmentCommitInfo,SegmentCommitInfo> liveSIS = new HashMap<>();\n    for(SegmentCommitInfo info : segmentInfos) {\n      liveSIS.put(info, info);\n    }\n    for(SegmentCommitInfo info : sis) {\n      SegmentCommitInfo liveInfo = liveSIS.get(info);\n      if (liveInfo != null) {\n        info = liveInfo;\n      }\n      newSIS.add(info);\n    }\n\n    return newSIS;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92212fd254551a0b1156aafc3a1a6ed1a43932ad","date":1491296431,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#toLiveInfos(SegmentInfos).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#toLiveInfos(SegmentInfos).mjava","sourceNew":"  // For infoStream output\n  synchronized SegmentInfos toLiveInfos(SegmentInfos sis) {\n    final SegmentInfos newSIS = new SegmentInfos(sis.getIndexCreatedVersionMajor());\n    final Map<SegmentCommitInfo,SegmentCommitInfo> liveSIS = new HashMap<>();\n    for(SegmentCommitInfo info : segmentInfos) {\n      liveSIS.put(info, info);\n    }\n    for(SegmentCommitInfo info : sis) {\n      SegmentCommitInfo liveInfo = liveSIS.get(info);\n      if (liveInfo != null) {\n        info = liveInfo;\n      }\n      newSIS.add(info);\n    }\n\n    return newSIS;\n  }\n\n","sourceOld":"  // For infoStream output\n  synchronized SegmentInfos toLiveInfos(SegmentInfos sis) {\n    final SegmentInfos newSIS = new SegmentInfos(sis.getIndexCreatedVersion());\n    final Map<SegmentCommitInfo,SegmentCommitInfo> liveSIS = new HashMap<>();\n    for(SegmentCommitInfo info : segmentInfos) {\n      liveSIS.put(info, info);\n    }\n    for(SegmentCommitInfo info : sis) {\n      SegmentCommitInfo liveInfo = liveSIS.get(info);\n      if (liveInfo != null) {\n        info = liveInfo;\n      }\n      newSIS.add(info);\n    }\n\n    return newSIS;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ae695f21c50b03702b5d0fa2543d5af844bb7cd3"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["ae695f21c50b03702b5d0fa2543d5af844bb7cd3","9d153abcf92dc5329d98571a8c3035df9bd80648"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d153abcf92dc5329d98571a8c3035df9bd80648":["ae695f21c50b03702b5d0fa2543d5af844bb7cd3"],"ae695f21c50b03702b5d0fa2543d5af844bb7cd3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d97ba94eef1fc33c5451259a7aa2ac682646c1af":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":["d97ba94eef1fc33c5451259a7aa2ac682646c1af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["31741cf1390044e38a2ec3127cf302ba841bfd75"],"31741cf1390044e38a2ec3127cf302ba841bfd75":["d97ba94eef1fc33c5451259a7aa2ac682646c1af"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d97ba94eef1fc33c5451259a7aa2ac682646c1af"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38e3b736c7ca086d61b7dbb841c905ee115490da","ae695f21c50b03702b5d0fa2543d5af844bb7cd3"],"9d153abcf92dc5329d98571a8c3035df9bd80648":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"ae695f21c50b03702b5d0fa2543d5af844bb7cd3":["38e3b736c7ca086d61b7dbb841c905ee115490da","615ddbd81799980d0fdd95e0238e1c498b6f47b0","9d153abcf92dc5329d98571a8c3035df9bd80648"],"d97ba94eef1fc33c5451259a7aa2ac682646c1af":["92212fd254551a0b1156aafc3a1a6ed1a43932ad","31741cf1390044e38a2ec3127cf302ba841bfd75"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"31741cf1390044e38a2ec3127cf302ba841bfd75":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","92212fd254551a0b1156aafc3a1a6ed1a43932ad","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}