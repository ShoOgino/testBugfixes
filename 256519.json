{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/charfilter/BaseCharFilter#correct(int).mjava","commits":[{"id":"c6744d321d7fd4ced5c99aeff28c036ac61e2314","date":1272929763,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/charfilter/BaseCharFilter#correct(int).mjava","pathOld":"lucene/backwards/src/java/org/apache/lucene/analysis/BaseCharFilter#correct(int).mjava","sourceNew":"  /** Retrieve the corrected offset.  Note that this method\n   *  is slow, if you correct positions far before the most\n   *  recently added position, as it's a simple linear\n   *  search backwards through all offset corrections added\n   *  by {@link #addOffCorrectMap}. */\n  @Override\n  protected int correct(int currentOff) {\n    if (pcmList == null || pcmList.isEmpty()) {\n      return currentOff;\n    }\n    for (int i = pcmList.size() - 1; i >= 0; i--) {\n      if (currentOff >=  pcmList.get(i).off) {\n        return currentOff + pcmList.get(i).cumulativeDiff;\n      }\n    }\n    return currentOff;\n  }\n\n","sourceOld":"  /** Retrieve the corrected offset.  Note that this method\n   *  is slow, if you correct positions far before the most\n   *  recently added position, as it's a simple linear\n   *  search backwards through all offset corrections added\n   *  by {@link #addOffCorrectMap}. */\n  @Override\n  protected int correct(int currentOff) {\n    if (pcmList == null || pcmList.isEmpty()) {\n      return currentOff;\n    }\n    for (int i = pcmList.size() - 1; i >= 0; i--) {\n      if (currentOff >=  pcmList.get(i).off) {\n        return currentOff + pcmList.get(i).cumulativeDiff;\n      }\n    }\n    return currentOff;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/BaseCharFilter#correct(int).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/charfilter/BaseCharFilter#correct(int).mjava","sourceNew":"  /** Retrieve the corrected offset.  Note that this method\n   *  is slow, if you correct positions far before the most\n   *  recently added position, as it's a simple linear\n   *  search backwards through all offset corrections added\n   *  by {@link #addOffCorrectMap}. */\n  @Override\n  protected int correct(int currentOff) {\n    if (pcmList == null || pcmList.isEmpty()) {\n      return currentOff;\n    }\n    for (int i = pcmList.size() - 1; i >= 0; i--) {\n      if (currentOff >=  pcmList.get(i).off) {\n        return currentOff + pcmList.get(i).cumulativeDiff;\n      }\n    }\n    return currentOff;\n  }\n\n","sourceOld":"  /** Retrieve the corrected offset.  Note that this method\n   *  is slow, if you correct positions far before the most\n   *  recently added position, as it's a simple linear\n   *  search backwards through all offset corrections added\n   *  by {@link #addOffCorrectMap}. */\n  @Override\n  protected int correct(int currentOff) {\n    if (pcmList == null || pcmList.isEmpty()) {\n      return currentOff;\n    }\n    for (int i = pcmList.size() - 1; i >= 0; i--) {\n      if (currentOff >=  pcmList.get(i).off) {\n        return currentOff + pcmList.get(i).cumulativeDiff;\n      }\n    }\n    return currentOff;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["c6744d321d7fd4ced5c99aeff28c036ac61e2314"],"c6744d321d7fd4ced5c99aeff28c036ac61e2314":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c6744d321d7fd4ced5c99aeff28c036ac61e2314"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c6744d321d7fd4ced5c99aeff28c036ac61e2314":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}