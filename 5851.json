{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestCodepointCountFilter#testIllegalArguments().mjava","commits":[{"id":"d47c249ea6af39c2da32cebcf113b7ac5c12bad8","date":1398390859,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestCodepointCountFilter#testIllegalArguments().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * checking the validity of constructor arguments\n   */\n  @Test(expected = IllegalArgumentException.class)\n  public void testIllegalArguments() throws Exception {\n    new CodepointCountFilter(TEST_VERSION_CURRENT, whitespaceMockTokenizer(\"accept only valid arguments\"), 4, 1);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestCodepointCountFilter#testIllegalArguments().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * checking the validity of constructor arguments\n   */\n  @Test(expected = IllegalArgumentException.class)\n  public void testIllegalArguments() throws Exception {\n    new CodepointCountFilter(TEST_VERSION_CURRENT, whitespaceMockTokenizer(\"accept only valid arguments\"), 4, 1);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestCodepointCountFilter#testIllegalArguments().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestCodepointCountFilter#testIllegalArguments().mjava","sourceNew":"  /**\n   * checking the validity of constructor arguments\n   */\n  @Test(expected = IllegalArgumentException.class)\n  public void testIllegalArguments() throws Exception {\n    new CodepointCountFilter(whitespaceMockTokenizer(\"accept only valid arguments\"), 4, 1);\n  }\n\n","sourceOld":"  /**\n   * checking the validity of constructor arguments\n   */\n  @Test(expected = IllegalArgumentException.class)\n  public void testIllegalArguments() throws Exception {\n    new CodepointCountFilter(TEST_VERSION_CURRENT, whitespaceMockTokenizer(\"accept only valid arguments\"), 4, 1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestCodepointCountFilter#testIllegalArguments().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestCodepointCountFilter#testIllegalArguments().mjava","sourceNew":"  /**\n   * checking the validity of constructor arguments\n   */\n  @Test(expected = IllegalArgumentException.class)\n  public void testIllegalArguments() throws Exception {\n    new CodepointCountFilter(TEST_VERSION_CURRENT, whitespaceMockTokenizer(\"accept only valid arguments\"), 4, 1);\n  }\n\n","sourceOld":"  /**\n   * checking the validity of constructor arguments\n   */\n  @Test(expected = IllegalArgumentException.class)\n  public void testIllegalArguments() throws Exception {\n    new CodepointCountFilter(whitespaceMockTokenizer(\"accept only valid arguments\"), 4, 1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestCodepointCountFilter#testIllegalArguments().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestCodepointCountFilter#testIllegalArguments().mjava","sourceNew":"  /**\n   * checking the validity of constructor arguments\n   */\n  @Test(expected = IllegalArgumentException.class)\n  public void testIllegalArguments() throws Exception {\n    new CodepointCountFilter(whitespaceMockTokenizer(\"accept only valid arguments\"), 4, 1);\n  }\n\n","sourceOld":"  /**\n   * checking the validity of constructor arguments\n   */\n  @Test(expected = IllegalArgumentException.class)\n  public void testIllegalArguments() throws Exception {\n    new CodepointCountFilter(TEST_VERSION_CURRENT, whitespaceMockTokenizer(\"accept only valid arguments\"), 4, 1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["d47c249ea6af39c2da32cebcf113b7ac5c12bad8"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d47c249ea6af39c2da32cebcf113b7ac5c12bad8"],"d47c249ea6af39c2da32cebcf113b7ac5c12bad8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["379db3ad24c4f0214f30a122265a6d6be003a99d"]},"commit2Childs":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"d47c249ea6af39c2da32cebcf113b7ac5c12bad8":["ff4227bb146f97aabae888091c19e48c88dbb0db","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","d47c249ea6af39c2da32cebcf113b7ac5c12bad8"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}