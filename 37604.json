{"path":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum).mjava","commits":[{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docs(FieldInfo,BlockTermState,Bits,DocsEnum).mjava","sourceNew":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsEnum reuse) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","sourceOld":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsEnum reuse) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"872cff1d3a554e0cd64014cd97f88d3002b0f491","date":1323024658,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum).mjava","sourceNew":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsEnum reuse, boolean needsFreqs) throws IOException {\n    if (needsFreqs && fieldInfo.indexOptions == IndexOptions.DOCS_ONLY) {\n      return null;\n    }\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","sourceOld":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsEnum reuse) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b65b350ca9588f9fc76ce7d6804160d06c45ff42","date":1323026297,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum).mjava","sourceNew":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsEnum reuse, boolean needsFreqs) throws IOException {\n    if (needsFreqs && fieldInfo.indexOptions == IndexOptions.DOCS_ONLY) {\n      return null;\n    }\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","sourceOld":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsEnum reuse) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":["60ba444201d2570214b6fcf1d15600dc1a01f548","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["872cff1d3a554e0cd64014cd97f88d3002b0f491"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}