{"path":"lucene/core/src/java/org/apache/lucene/search/SortedSetSortField#getComparator(int,int).mjava","commits":[{"id":"4cb48b0969187aad3e0c6befa65e4421e1e1f667","date":1399982311,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SortedSetSortField#getComparator(int,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FieldComparator<?> getComparator(int numHits, int sortPos) throws IOException {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n      @Override\n      protected SortedDocValues getSortedDocValues(AtomicReaderContext context, String field) throws IOException {\n        SortedSetDocValues sortedSet = DocValues.getSortedSet(context.reader(), field);\n        return SortedSetSelector.wrap(sortedSet, selector);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SortedSetSortField#getComparator(int,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FieldComparator<?> getComparator(int numHits, int sortPos) throws IOException {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n      @Override\n      protected SortedDocValues getSortedDocValues(AtomicReaderContext context, String field) throws IOException {\n        SortedSetDocValues sortedSet = DocValues.getSortedSet(context.reader(), field);\n        return SortedSetSelector.wrap(sortedSet, selector);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SortedSetSortField#getComparator(int,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FieldComparator<?> getComparator(int numHits, int sortPos) throws IOException {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n      @Override\n      protected SortedDocValues getSortedDocValues(AtomicReaderContext context, String field) throws IOException {\n        SortedSetDocValues sortedSet = DocValues.getSortedSet(context.reader(), field);\n        return SortedSetSelector.wrap(sortedSet, selector);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SortedSetSortField#getComparator(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/SortedSetSortField#getComparator(int,int).mjava","sourceNew":"  @Override\n  public FieldComparator<?> getComparator(int numHits, int sortPos) throws IOException {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n      @Override\n      protected SortedDocValues getSortedDocValues(LeafReaderContext context, String field) throws IOException {\n        SortedSetDocValues sortedSet = DocValues.getSortedSet(context.reader(), field);\n        return SortedSetSelector.wrap(sortedSet, selector);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FieldComparator<?> getComparator(int numHits, int sortPos) throws IOException {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n      @Override\n      protected SortedDocValues getSortedDocValues(AtomicReaderContext context, String field) throws IOException {\n        SortedSetDocValues sortedSet = DocValues.getSortedSet(context.reader(), field);\n        return SortedSetSelector.wrap(sortedSet, selector);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SortedSetSortField#getComparator(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/SortedSetSortField#getComparator(int,int).mjava","sourceNew":"  @Override\n  public FieldComparator<?> getComparator(int numHits, int sortPos) throws IOException {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n      @Override\n      protected SortedDocValues getSortedDocValues(LeafReaderContext context, String field) throws IOException {\n        return SortedSetSelector.wrap(DocValues.getSortedSet(context.reader(), field), selector);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FieldComparator<?> getComparator(int numHits, int sortPos) throws IOException {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n      @Override\n      protected SortedDocValues getSortedDocValues(LeafReaderContext context, String field) throws IOException {\n        SortedSetDocValues sortedSet = DocValues.getSortedSet(context.reader(), field);\n        return SortedSetSelector.wrap(sortedSet, selector);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SortedSetSortField#getComparator(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/SortedSetSortField#getComparator(int,int).mjava","sourceNew":"  @Override\n  public FieldComparator<?> getComparator(int numHits, int sortPos) throws IOException {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n      @Override\n      protected SortedDocValues getSortedDocValues(LeafReaderContext context, String field) throws IOException {\n        return SortedSetSelector.wrap(DocValues.getSortedSet(context.reader(), field), selector);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FieldComparator<?> getComparator(int numHits, int sortPos) throws IOException {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n      @Override\n      protected SortedDocValues getSortedDocValues(LeafReaderContext context, String field) throws IOException {\n        SortedSetDocValues sortedSet = DocValues.getSortedSet(context.reader(), field);\n        return SortedSetSelector.wrap(sortedSet, selector);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SortedSetSortField#getComparator(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/SortedSetSortField#getComparator(int,int).mjava","sourceNew":"  @Override\n  public FieldComparator<?> getComparator(int numHits, int sortPos) throws IOException {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n      @Override\n      protected SortedDocValues getSortedDocValues(LeafReaderContext context, String field) throws IOException {\n        return SortedSetSelector.wrap(DocValues.getSortedSet(context.reader(), field), selector);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FieldComparator<?> getComparator(int numHits, int sortPos) throws IOException {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n      @Override\n      protected SortedDocValues getSortedDocValues(LeafReaderContext context, String field) throws IOException {\n        SortedSetDocValues sortedSet = DocValues.getSortedSet(context.reader(), field);\n        return SortedSetSelector.wrap(sortedSet, selector);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03e38c6374c23083c93e212a9498ff0a9c255476","date":1484767039,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SortedSetSortField#getComparator(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/SortedSetSortField#getComparator(int,int).mjava","sourceNew":"  @Override\n  public FieldComparator<?> getComparator(int numHits, int sortPos) {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n      @Override\n      protected SortedDocValues getSortedDocValues(LeafReaderContext context, String field) throws IOException {\n        return SortedSetSelector.wrap(DocValues.getSortedSet(context.reader(), field), selector);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FieldComparator<?> getComparator(int numHits, int sortPos) throws IOException {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n      @Override\n      protected SortedDocValues getSortedDocValues(LeafReaderContext context, String field) throws IOException {\n        return SortedSetSelector.wrap(DocValues.getSortedSet(context.reader(), field), selector);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90a682dc1bfd188ef61cc28373c7f5d700b4ac75","date":1485186128,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SortedSetSortField#getComparator(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/SortedSetSortField#getComparator(int,int).mjava","sourceNew":"  @Override\n  public FieldComparator<?> getComparator(int numHits, int sortPos) {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n      @Override\n      protected SortedDocValues getSortedDocValues(LeafReaderContext context, String field) throws IOException {\n        return SortedSetSelector.wrap(DocValues.getSortedSet(context.reader(), field), selector);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FieldComparator<?> getComparator(int numHits, int sortPos) throws IOException {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n      @Override\n      protected SortedDocValues getSortedDocValues(LeafReaderContext context, String field) throws IOException {\n        return SortedSetSelector.wrap(DocValues.getSortedSet(context.reader(), field), selector);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"03e38c6374c23083c93e212a9498ff0a9c255476":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4cb48b0969187aad3e0c6befa65e4421e1e1f667"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["c9fb5f46e264daf5ba3860defe623a89d202dd87","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"4cb48b0969187aad3e0c6befa65e4421e1e1f667":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"56572ec06f1407c066d6b7399413178b33176cd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","93dd449115a9247533e44bab47e8429e5dccbc6d"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["c9fb5f46e264daf5ba3860defe623a89d202dd87","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","03e38c6374c23083c93e212a9498ff0a9c255476"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["03e38c6374c23083c93e212a9498ff0a9c255476"]},"commit2Childs":{"03e38c6374c23083c93e212a9498ff0a9c255476":["90a682dc1bfd188ef61cc28373c7f5d700b4ac75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","c9fb5f46e264daf5ba3860defe623a89d202dd87"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["03e38c6374c23083c93e212a9498ff0a9c255476","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["93dd449115a9247533e44bab47e8429e5dccbc6d","4cb48b0969187aad3e0c6befa65e4421e1e1f667","56572ec06f1407c066d6b7399413178b33176cd8"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cb48b0969187aad3e0c6befa65e4421e1e1f667":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["90a682dc1bfd188ef61cc28373c7f5d700b4ac75"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","90a682dc1bfd188ef61cc28373c7f5d700b4ac75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}