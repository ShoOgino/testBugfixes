{"path":"lucene/monitor/src/java/org/apache/lucene/monitor/TermFilteredPresearcher#getQueryBuilder().mjava","commits":[{"id":"7c529b189e09de25455d82ebd7260748cf11ee14","date":1560415257,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/monitor/src/java/org/apache/lucene/monitor/TermFilteredPresearcher#getQueryBuilder().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a {@link DocumentQueryBuilder} for this presearcher\n   */\n  protected DocumentQueryBuilder getQueryBuilder() {\n    return new DocumentQueryBuilder() {\n\n      Map<String, List<BytesRef>> terms = new HashMap<>();\n\n      @Override\n      public void addTerm(String field, BytesRef term) {\n        List<BytesRef> t = terms.computeIfAbsent(field, f -> new ArrayList<>());\n        t.add(term);\n      }\n\n      @Override\n      public Query build() {\n        BooleanQuery.Builder builder = new BooleanQuery.Builder();\n        for (String field : terms.keySet()) {\n          builder.add(new TermInSetQuery(field, terms.get(field)), BooleanClause.Occur.SHOULD);\n        }\n        return builder.build();\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0","date":1571070979,"type":3,"author":"Koen De Groote","isMerge":false,"pathNew":"lucene/monitor/src/java/org/apache/lucene/monitor/TermFilteredPresearcher#getQueryBuilder().mjava","pathOld":"lucene/monitor/src/java/org/apache/lucene/monitor/TermFilteredPresearcher#getQueryBuilder().mjava","sourceNew":"  /**\n   * Returns a {@link DocumentQueryBuilder} for this presearcher\n   */\n  protected DocumentQueryBuilder getQueryBuilder() {\n    return new DocumentQueryBuilder() {\n\n      Map<String, List<BytesRef>> terms = new HashMap<>();\n\n      @Override\n      public void addTerm(String field, BytesRef term) {\n        List<BytesRef> t = terms.computeIfAbsent(field, f -> new ArrayList<>());\n        t.add(term);\n      }\n\n      @Override\n      public Query build() {\n        BooleanQuery.Builder builder = new BooleanQuery.Builder();\n        for (Map.Entry<String, List<BytesRef>> entry : terms.entrySet()) {\n          builder.add(new TermInSetQuery(entry.getKey(), entry.getValue()), BooleanClause.Occur.SHOULD);\n        }\n        return builder.build();\n      }\n    };\n  }\n\n","sourceOld":"  /**\n   * Returns a {@link DocumentQueryBuilder} for this presearcher\n   */\n  protected DocumentQueryBuilder getQueryBuilder() {\n    return new DocumentQueryBuilder() {\n\n      Map<String, List<BytesRef>> terms = new HashMap<>();\n\n      @Override\n      public void addTerm(String field, BytesRef term) {\n        List<BytesRef> t = terms.computeIfAbsent(field, f -> new ArrayList<>());\n        t.add(term);\n      }\n\n      @Override\n      public Query build() {\n        BooleanQuery.Builder builder = new BooleanQuery.Builder();\n        for (String field : terms.keySet()) {\n          builder.add(new TermInSetQuery(field, terms.get(field)), BooleanClause.Occur.SHOULD);\n        }\n        return builder.build();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"lucene/monitor/src/java/org/apache/lucene/monitor/TermFilteredPresearcher#getQueryBuilder().mjava","pathOld":"lucene/monitor/src/java/org/apache/lucene/monitor/TermFilteredPresearcher#getQueryBuilder().mjava","sourceNew":"  /**\n   * Returns a {@link DocumentQueryBuilder} for this presearcher\n   */\n  protected DocumentQueryBuilder getQueryBuilder() {\n    return new DocumentQueryBuilder() {\n\n      Map<String, List<BytesRef>> terms = new HashMap<>();\n\n      @Override\n      public void addTerm(String field, BytesRef term) {\n        List<BytesRef> t = terms.computeIfAbsent(field, f -> new ArrayList<>());\n        t.add(term);\n      }\n\n      @Override\n      public Query build() {\n        BooleanQuery.Builder builder = new BooleanQuery.Builder();\n        for (Map.Entry<String, List<BytesRef>> entry : terms.entrySet()) {\n          builder.add(new TermInSetQuery(entry.getKey(), entry.getValue()), BooleanClause.Occur.SHOULD);\n        }\n        return builder.build();\n      }\n    };\n  }\n\n","sourceOld":"  /**\n   * Returns a {@link DocumentQueryBuilder} for this presearcher\n   */\n  protected DocumentQueryBuilder getQueryBuilder() {\n    return new DocumentQueryBuilder() {\n\n      Map<String, List<BytesRef>> terms = new HashMap<>();\n\n      @Override\n      public void addTerm(String field, BytesRef term) {\n        List<BytesRef> t = terms.computeIfAbsent(field, f -> new ArrayList<>());\n        t.add(term);\n      }\n\n      @Override\n      public Query build() {\n        BooleanQuery.Builder builder = new BooleanQuery.Builder();\n        for (String field : terms.keySet()) {\n          builder.add(new TermInSetQuery(field, terms.get(field)), BooleanClause.Occur.SHOULD);\n        }\n        return builder.build();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0":["7c529b189e09de25455d82ebd7260748cf11ee14"],"7c529b189e09de25455d82ebd7260748cf11ee14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0"],"b0b597c65628ca9e73913a07e81691f8229bae35":["7c529b189e09de25455d82ebd7260748cf11ee14","7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0"]},"commit2Childs":{"7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"7c529b189e09de25455d82ebd7260748cf11ee14":["7b22e06bed98cf8dceb4f71c4d5265e798e7fbd0","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c529b189e09de25455d82ebd7260748cf11ee14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}