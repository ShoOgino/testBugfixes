{"path":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/SpanRegexQuery#equals(Object).mjava","commits":[{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/SpanRegexQuery#equals(Object).mjava","pathOld":"lucene/contrib/regex/src/java/org/apache/lucene/search/regex/SpanRegexQuery#equals(Object).mjava","sourceNew":"  /* generated by IntelliJ IDEA */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final SpanRegexQuery that = (SpanRegexQuery) o;\n\n    if (!regexImpl.equals(that.regexImpl)) return false;\n    if (!term.equals(that.term)) return false;\n\n    return true;\n  }\n\n","sourceOld":"  /* generated by IntelliJ IDEA */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final SpanRegexQuery that = (SpanRegexQuery) o;\n\n    if (!regexImpl.equals(that.regexImpl)) return false;\n    if (!term.equals(that.term)) return false;\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"744486748bc5bee772100e49230e5bca39bac99a","date":1289776426,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/SpanRegexQuery#equals(Object).mjava","sourceNew":null,"sourceOld":"  /* generated by IntelliJ IDEA */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final SpanRegexQuery that = (SpanRegexQuery) o;\n\n    if (!regexImpl.equals(that.regexImpl)) return false;\n    if (!term.equals(that.term)) return false;\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/SpanRegexQuery#equals(Object).mjava","sourceNew":null,"sourceOld":"  /* generated by IntelliJ IDEA */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final SpanRegexQuery that = (SpanRegexQuery) o;\n\n    if (!regexImpl.equals(that.regexImpl)) return false;\n    if (!term.equals(that.term)) return false;\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/regex/SpanRegexQuery#equals(Object).mjava","sourceNew":null,"sourceOld":"  /* generated by IntelliJ IDEA */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final SpanRegexQuery that = (SpanRegexQuery) o;\n\n    if (!regexImpl.equals(that.regexImpl)) return false;\n    if (!term.equals(that.term)) return false;\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af","744486748bc5bee772100e49230e5bca39bac99a"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af","744486748bc5bee772100e49230e5bca39bac99a"],"744486748bc5bee772100e49230e5bca39bac99a":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["744486748bc5bee772100e49230e5bca39bac99a"]},"commit2Childs":{"9ab1f5591dc05f1f2b5407d809c9699f75554a32":[],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","744486748bc5bee772100e49230e5bca39bac99a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"744486748bc5bee772100e49230e5bca39bac99a":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}