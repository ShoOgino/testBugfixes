{"path":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesStats().mjava","commits":[{"id":"73bb5a57dc75b54a39494f99986599cae7dff417","date":1361040620,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesStats().mjava","pathOld":"/dev/null","sourceNew":"  public void testDocValuesStats() {\n    for (int i = 0; i < 50; ++i) {\n      assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i%2, \"intdv\", \"\" + i%3, \"doubledv\", \"\" + i%4, \"longdv\", \"\" + i%5, \"datedv\", (1900+i%6) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i%7));\n      if (rarely()) {\n        commit(); // to have several segments\n      }\n    }\n    assertU(commit());\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"stringdv\"),\n        \"//str[@name='min'][.='abc0']\",\n        \"//str[@name='max'][.='abc6']\",\n        \"//long[@name='count'][.='50']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='1.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='25.0']\",\n        \"//double[@name='mean'][.='0.5']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"intdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='2.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='49.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"doubledv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='3.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='73.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"longdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='4.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='100.0']\",\n        \"//double[@name='mean'][.='2.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"datedv\"),\n        \"//date[@name='min'][.='1900-12-31T23:59:59.999Z']\",\n        \"//date[@name='max'][.='1905-12-31T23:59:59.999Z']\",\n        \"//long[@name='count'][.='50']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\", \"stats.facet\", \"intdv\"),\n        \"//lst[@name='intdv']/lst[@name='0']/long[@name='count'][.='17']\",\n        \"//lst[@name='intdv']/lst[@name='1']/long[@name='count'][.='17']\",\n        \"//lst[@name='intdv']/lst[@name='2']/long[@name='count'][.='16']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\", \"stats.facet\", \"datedv\"),\n        \"//lst[@name='datedv']/lst[@name='1900-12-31T23:59:59.999Z']/long[@name='count'][.='9']\",\n        \"//lst[@name='datedv']/lst[@name='1901-12-31T23:59:59.999Z']/long[@name='count'][.='9']\",\n        \"//lst[@name='datedv']/lst[@name='1902-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1903-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1904-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1905-12-31T23:59:59.999Z']/long[@name='count'][.='8']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesStats().mjava","pathOld":"/dev/null","sourceNew":"  public void testDocValuesStats() {\n    for (int i = 0; i < 50; ++i) {\n      assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i%2, \"intdv\", \"\" + i%3, \"doubledv\", \"\" + i%4, \"longdv\", \"\" + i%5, \"datedv\", (1900+i%6) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i%7));\n      if (rarely()) {\n        commit(); // to have several segments\n      }\n    }\n    assertU(commit());\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"stringdv\"),\n        \"//str[@name='min'][.='abc0']\",\n        \"//str[@name='max'][.='abc6']\",\n        \"//long[@name='count'][.='50']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='1.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='25.0']\",\n        \"//double[@name='mean'][.='0.5']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"intdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='2.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='49.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"doubledv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='3.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='73.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"longdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='4.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='100.0']\",\n        \"//double[@name='mean'][.='2.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"datedv\"),\n        \"//date[@name='min'][.='1900-12-31T23:59:59.999Z']\",\n        \"//date[@name='max'][.='1905-12-31T23:59:59.999Z']\",\n        \"//long[@name='count'][.='50']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\", \"stats.facet\", \"intdv\"),\n        \"//lst[@name='intdv']/lst[@name='0']/long[@name='count'][.='17']\",\n        \"//lst[@name='intdv']/lst[@name='1']/long[@name='count'][.='17']\",\n        \"//lst[@name='intdv']/lst[@name='2']/long[@name='count'][.='16']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\", \"stats.facet\", \"datedv\"),\n        \"//lst[@name='datedv']/lst[@name='1900-12-31T23:59:59.999Z']/long[@name='count'][.='9']\",\n        \"//lst[@name='datedv']/lst[@name='1901-12-31T23:59:59.999Z']/long[@name='count'][.='9']\",\n        \"//lst[@name='datedv']/lst[@name='1902-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1903-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1904-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1905-12-31T23:59:59.999Z']/long[@name='count'][.='8']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"404b171beda23ddce9e45366a3dbd6444d8d029c","date":1391180301,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesStats().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesStats().mjava","sourceNew":"  public void testDocValuesStats() {\n    for (int i = 0; i < 50; ++i) {\n      assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i%2, \"intdv\", \"\" + i%3, \"doubledv\", \"\" + i%4, \"longdv\", \"\" + i%5, \"datedv\", (1900+i%6) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i%7));\n      if (rarely()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n    assertU(commit());\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"stringdv\"),\n        \"//str[@name='min'][.='abc0']\",\n        \"//str[@name='max'][.='abc6']\",\n        \"//long[@name='count'][.='50']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='1.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='25.0']\",\n        \"//double[@name='mean'][.='0.5']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"intdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='2.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='49.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"doubledv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='3.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='73.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"longdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='4.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='100.0']\",\n        \"//double[@name='mean'][.='2.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"datedv\"),\n        \"//date[@name='min'][.='1900-12-31T23:59:59.999Z']\",\n        \"//date[@name='max'][.='1905-12-31T23:59:59.999Z']\",\n        \"//long[@name='count'][.='50']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\", \"stats.facet\", \"intdv\"),\n        \"//lst[@name='intdv']/lst[@name='0']/long[@name='count'][.='17']\",\n        \"//lst[@name='intdv']/lst[@name='1']/long[@name='count'][.='17']\",\n        \"//lst[@name='intdv']/lst[@name='2']/long[@name='count'][.='16']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\", \"stats.facet\", \"datedv\"),\n        \"//lst[@name='datedv']/lst[@name='1900-12-31T23:59:59.999Z']/long[@name='count'][.='9']\",\n        \"//lst[@name='datedv']/lst[@name='1901-12-31T23:59:59.999Z']/long[@name='count'][.='9']\",\n        \"//lst[@name='datedv']/lst[@name='1902-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1903-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1904-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1905-12-31T23:59:59.999Z']/long[@name='count'][.='8']\");\n  }\n\n","sourceOld":"  public void testDocValuesStats() {\n    for (int i = 0; i < 50; ++i) {\n      assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i%2, \"intdv\", \"\" + i%3, \"doubledv\", \"\" + i%4, \"longdv\", \"\" + i%5, \"datedv\", (1900+i%6) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i%7));\n      if (rarely()) {\n        commit(); // to have several segments\n      }\n    }\n    assertU(commit());\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"stringdv\"),\n        \"//str[@name='min'][.='abc0']\",\n        \"//str[@name='max'][.='abc6']\",\n        \"//long[@name='count'][.='50']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='1.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='25.0']\",\n        \"//double[@name='mean'][.='0.5']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"intdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='2.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='49.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"doubledv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='3.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='73.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"longdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='4.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='100.0']\",\n        \"//double[@name='mean'][.='2.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"datedv\"),\n        \"//date[@name='min'][.='1900-12-31T23:59:59.999Z']\",\n        \"//date[@name='max'][.='1905-12-31T23:59:59.999Z']\",\n        \"//long[@name='count'][.='50']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\", \"stats.facet\", \"intdv\"),\n        \"//lst[@name='intdv']/lst[@name='0']/long[@name='count'][.='17']\",\n        \"//lst[@name='intdv']/lst[@name='1']/long[@name='count'][.='17']\",\n        \"//lst[@name='intdv']/lst[@name='2']/long[@name='count'][.='16']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\", \"stats.facet\", \"datedv\"),\n        \"//lst[@name='datedv']/lst[@name='1900-12-31T23:59:59.999Z']/long[@name='count'][.='9']\",\n        \"//lst[@name='datedv']/lst[@name='1901-12-31T23:59:59.999Z']/long[@name='count'][.='9']\",\n        \"//lst[@name='datedv']/lst[@name='1902-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1903-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1904-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1905-12-31T23:59:59.999Z']/long[@name='count'][.='8']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f1f5e4b31ec44927335e2ad6eebc4c1f8c0abf5","date":1465691899,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesStats().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesStats().mjava","sourceNew":"  @Test\n  public void testDocValuesStats() {\n    for (int i = 0; i < 50; ++i) {\n      assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i%2, \"intdv\", \"\" + i%3, \"doubledv\", \"\" + i%4, \"longdv\", \"\" + i%5, \"datedv\", (1900+i%6) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i%7));\n      if (rarely()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n    assertU(commit());\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"stringdv\"),\n        \"//str[@name='min'][.='abc0']\",\n        \"//str[@name='max'][.='abc6']\",\n        \"//long[@name='count'][.='50']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='1.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='25.0']\",\n        \"//double[@name='mean'][.='0.5']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"intdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='2.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='49.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"doubledv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='3.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='73.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"longdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='4.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='100.0']\",\n        \"//double[@name='mean'][.='2.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"datedv\"),\n        \"//date[@name='min'][.='1900-12-31T23:59:59.999Z']\",\n        \"//date[@name='max'][.='1905-12-31T23:59:59.999Z']\",\n        \"//long[@name='count'][.='50']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\", \"stats.facet\", \"intdv\"),\n        \"//lst[@name='intdv']/lst[@name='0']/long[@name='count'][.='17']\",\n        \"//lst[@name='intdv']/lst[@name='1']/long[@name='count'][.='17']\",\n        \"//lst[@name='intdv']/lst[@name='2']/long[@name='count'][.='16']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\", \"stats.facet\", \"datedv\"),\n        \"//lst[@name='datedv']/lst[@name='1900-12-31T23:59:59.999Z']/long[@name='count'][.='9']\",\n        \"//lst[@name='datedv']/lst[@name='1901-12-31T23:59:59.999Z']/long[@name='count'][.='9']\",\n        \"//lst[@name='datedv']/lst[@name='1902-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1903-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1904-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1905-12-31T23:59:59.999Z']/long[@name='count'][.='8']\");\n  }\n\n","sourceOld":"  public void testDocValuesStats() {\n    for (int i = 0; i < 50; ++i) {\n      assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i%2, \"intdv\", \"\" + i%3, \"doubledv\", \"\" + i%4, \"longdv\", \"\" + i%5, \"datedv\", (1900+i%6) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i%7));\n      if (rarely()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n    assertU(commit());\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"stringdv\"),\n        \"//str[@name='min'][.='abc0']\",\n        \"//str[@name='max'][.='abc6']\",\n        \"//long[@name='count'][.='50']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='1.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='25.0']\",\n        \"//double[@name='mean'][.='0.5']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"intdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='2.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='49.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"doubledv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='3.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='73.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"longdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='4.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='100.0']\",\n        \"//double[@name='mean'][.='2.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"datedv\"),\n        \"//date[@name='min'][.='1900-12-31T23:59:59.999Z']\",\n        \"//date[@name='max'][.='1905-12-31T23:59:59.999Z']\",\n        \"//long[@name='count'][.='50']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\", \"stats.facet\", \"intdv\"),\n        \"//lst[@name='intdv']/lst[@name='0']/long[@name='count'][.='17']\",\n        \"//lst[@name='intdv']/lst[@name='1']/long[@name='count'][.='17']\",\n        \"//lst[@name='intdv']/lst[@name='2']/long[@name='count'][.='16']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\", \"stats.facet\", \"datedv\"),\n        \"//lst[@name='datedv']/lst[@name='1900-12-31T23:59:59.999Z']/long[@name='count'][.='9']\",\n        \"//lst[@name='datedv']/lst[@name='1901-12-31T23:59:59.999Z']/long[@name='count'][.='9']\",\n        \"//lst[@name='datedv']/lst[@name='1902-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1903-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1904-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1905-12-31T23:59:59.999Z']/long[@name='count'][.='8']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesStats().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/DocValuesTest#testDocValuesStats().mjava","sourceNew":"  @Test\n  public void testDocValuesStats() {\n    for (int i = 0; i < 50; ++i) {\n      assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i%2, \"intdv\", \"\" + i%3, \"doubledv\", \"\" + i%4, \"longdv\", \"\" + i%5, \"datedv\", (1900+i%6) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i%7));\n      if (rarely()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n    assertU(commit());\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"stringdv\"),\n        \"//str[@name='min'][.='abc0']\",\n        \"//str[@name='max'][.='abc6']\",\n        \"//long[@name='count'][.='50']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='1.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='25.0']\",\n        \"//double[@name='mean'][.='0.5']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"intdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='2.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='49.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"doubledv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='3.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='73.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"longdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='4.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='100.0']\",\n        \"//double[@name='mean'][.='2.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"datedv\"),\n        \"//date[@name='min'][.='1900-12-31T23:59:59.999Z']\",\n        \"//date[@name='max'][.='1905-12-31T23:59:59.999Z']\",\n        \"//long[@name='count'][.='50']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\", \"stats.facet\", \"intdv\"),\n        \"//lst[@name='intdv']/lst[@name='0']/long[@name='count'][.='17']\",\n        \"//lst[@name='intdv']/lst[@name='1']/long[@name='count'][.='17']\",\n        \"//lst[@name='intdv']/lst[@name='2']/long[@name='count'][.='16']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\", \"stats.facet\", \"datedv\"),\n        \"//lst[@name='datedv']/lst[@name='1900-12-31T23:59:59.999Z']/long[@name='count'][.='9']\",\n        \"//lst[@name='datedv']/lst[@name='1901-12-31T23:59:59.999Z']/long[@name='count'][.='9']\",\n        \"//lst[@name='datedv']/lst[@name='1902-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1903-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1904-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1905-12-31T23:59:59.999Z']/long[@name='count'][.='8']\");\n  }\n\n","sourceOld":"  public void testDocValuesStats() {\n    for (int i = 0; i < 50; ++i) {\n      assertU(adoc(\"id\", \"1000\" + i, \"floatdv\", \"\" + i%2, \"intdv\", \"\" + i%3, \"doubledv\", \"\" + i%4, \"longdv\", \"\" + i%5, \"datedv\", (1900+i%6) + \"-12-31T23:59:59.999Z\", \"stringdv\", \"abc\" + i%7));\n      if (rarely()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n    assertU(commit());\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"stringdv\"),\n        \"//str[@name='min'][.='abc0']\",\n        \"//str[@name='max'][.='abc6']\",\n        \"//long[@name='count'][.='50']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='1.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='25.0']\",\n        \"//double[@name='mean'][.='0.5']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"intdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='2.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='49.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"doubledv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='3.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='73.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"longdv\"),\n        \"//double[@name='min'][.='0.0']\",\n        \"//double[@name='max'][.='4.0']\",\n        \"//long[@name='count'][.='50']\",\n        \"//double[@name='sum'][.='100.0']\",\n        \"//double[@name='mean'][.='2.0']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"datedv\"),\n        \"//date[@name='min'][.='1900-12-31T23:59:59.999Z']\",\n        \"//date[@name='max'][.='1905-12-31T23:59:59.999Z']\",\n        \"//long[@name='count'][.='50']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\", \"stats.facet\", \"intdv\"),\n        \"//lst[@name='intdv']/lst[@name='0']/long[@name='count'][.='17']\",\n        \"//lst[@name='intdv']/lst[@name='1']/long[@name='count'][.='17']\",\n        \"//lst[@name='intdv']/lst[@name='2']/long[@name='count'][.='16']\");\n\n    assertQ(req(\"q\", \"*:*\", \"stats\", \"true\", \"rows\", \"0\", \"stats.field\", \"floatdv\", \"stats.facet\", \"datedv\"),\n        \"//lst[@name='datedv']/lst[@name='1900-12-31T23:59:59.999Z']/long[@name='count'][.='9']\",\n        \"//lst[@name='datedv']/lst[@name='1901-12-31T23:59:59.999Z']/long[@name='count'][.='9']\",\n        \"//lst[@name='datedv']/lst[@name='1902-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1903-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1904-12-31T23:59:59.999Z']/long[@name='count'][.='8']\",\n        \"//lst[@name='datedv']/lst[@name='1905-12-31T23:59:59.999Z']/long[@name='count'][.='8']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"95303ff3749680c743b9425f9cf99e6e4065e8a8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","73bb5a57dc75b54a39494f99986599cae7dff417"],"7f1f5e4b31ec44927335e2ad6eebc4c1f8c0abf5":["404b171beda23ddce9e45366a3dbd6444d8d029c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"404b171beda23ddce9e45366a3dbd6444d8d029c":["73bb5a57dc75b54a39494f99986599cae7dff417"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["404b171beda23ddce9e45366a3dbd6444d8d029c","7f1f5e4b31ec44927335e2ad6eebc4c1f8c0abf5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7f1f5e4b31ec44927335e2ad6eebc4c1f8c0abf5"],"73bb5a57dc75b54a39494f99986599cae7dff417":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["95303ff3749680c743b9425f9cf99e6e4065e8a8","73bb5a57dc75b54a39494f99986599cae7dff417"],"7f1f5e4b31ec44927335e2ad6eebc4c1f8c0abf5":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"404b171beda23ddce9e45366a3dbd6444d8d029c":["7f1f5e4b31ec44927335e2ad6eebc4c1f8c0abf5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"73bb5a57dc75b54a39494f99986599cae7dff417":["95303ff3749680c743b9425f9cf99e6e4065e8a8","404b171beda23ddce9e45366a3dbd6444d8d029c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["95303ff3749680c743b9425f9cf99e6e4065e8a8","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}