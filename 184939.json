{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/DuplicateFilterBuilder#getQuery(Element).mjava","commits":[{"id":"1db68e96dd908fcd79ef809095822736aa601d08","date":1434630596,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/DuplicateFilterBuilder#getQuery(Element).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/DuplicateFilterBuilder#getFilter(Element).mjava","sourceNew":"  @Override\n  public Filter getQuery(Element e) throws ParserException {\n    String fieldName = DOMUtils.getAttributeWithInheritanceOrFail(e, \"fieldName\");\n    DuplicateFilter df = new DuplicateFilter(fieldName);\n\n    String keepMode = DOMUtils.getAttribute(e, \"keepMode\", \"first\");\n    if (keepMode.equalsIgnoreCase(\"first\")) {\n      df.setKeepMode(DuplicateFilter.KeepMode.KM_USE_FIRST_OCCURRENCE);\n    } else if (keepMode.equalsIgnoreCase(\"last\")) {\n      df.setKeepMode(DuplicateFilter.KeepMode.KM_USE_LAST_OCCURRENCE);\n    } else {\n      throw new ParserException(\"Illegal keepMode attribute in DuplicateFilter:\" + keepMode);\n    }\n\n    String processingMode = DOMUtils.getAttribute(e, \"processingMode\", \"full\");\n    if (processingMode.equalsIgnoreCase(\"full\")) {\n      df.setProcessingMode(DuplicateFilter.ProcessingMode.PM_FULL_VALIDATION);\n    } else if (processingMode.equalsIgnoreCase(\"fast\")) {\n      df.setProcessingMode(DuplicateFilter.ProcessingMode.PM_FAST_INVALIDATION);\n    } else {\n      throw new ParserException(\"Illegal processingMode attribute in DuplicateFilter:\" + processingMode);\n    }\n\n    return df;\n  }\n\n","sourceOld":"  @Override\n  public Filter getFilter(Element e) throws ParserException {\n    String fieldName = DOMUtils.getAttributeWithInheritanceOrFail(e, \"fieldName\");\n    DuplicateFilter df = new DuplicateFilter(fieldName);\n\n    String keepMode = DOMUtils.getAttribute(e, \"keepMode\", \"first\");\n    if (keepMode.equalsIgnoreCase(\"first\")) {\n      df.setKeepMode(DuplicateFilter.KeepMode.KM_USE_FIRST_OCCURRENCE);\n    } else if (keepMode.equalsIgnoreCase(\"last\")) {\n      df.setKeepMode(DuplicateFilter.KeepMode.KM_USE_LAST_OCCURRENCE);\n    } else {\n      throw new ParserException(\"Illegal keepMode attribute in DuplicateFilter:\" + keepMode);\n    }\n\n    String processingMode = DOMUtils.getAttribute(e, \"processingMode\", \"full\");\n    if (processingMode.equalsIgnoreCase(\"full\")) {\n      df.setProcessingMode(DuplicateFilter.ProcessingMode.PM_FULL_VALIDATION);\n    } else if (processingMode.equalsIgnoreCase(\"fast\")) {\n      df.setProcessingMode(DuplicateFilter.ProcessingMode.PM_FAST_INVALIDATION);\n    } else {\n      throw new ParserException(\"Illegal processingMode attribute in DuplicateFilter:\" + processingMode);\n    }\n\n    return df;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4dfca18b7bfce32a543487fd4b0c11595177e908","date":1435655762,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/DuplicateFilterBuilder#getQuery(Element).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Filter getQuery(Element e) throws ParserException {\n    String fieldName = DOMUtils.getAttributeWithInheritanceOrFail(e, \"fieldName\");\n    DuplicateFilter df = new DuplicateFilter(fieldName);\n\n    String keepMode = DOMUtils.getAttribute(e, \"keepMode\", \"first\");\n    if (keepMode.equalsIgnoreCase(\"first\")) {\n      df.setKeepMode(DuplicateFilter.KeepMode.KM_USE_FIRST_OCCURRENCE);\n    } else if (keepMode.equalsIgnoreCase(\"last\")) {\n      df.setKeepMode(DuplicateFilter.KeepMode.KM_USE_LAST_OCCURRENCE);\n    } else {\n      throw new ParserException(\"Illegal keepMode attribute in DuplicateFilter:\" + keepMode);\n    }\n\n    String processingMode = DOMUtils.getAttribute(e, \"processingMode\", \"full\");\n    if (processingMode.equalsIgnoreCase(\"full\")) {\n      df.setProcessingMode(DuplicateFilter.ProcessingMode.PM_FULL_VALIDATION);\n    } else if (processingMode.equalsIgnoreCase(\"fast\")) {\n      df.setProcessingMode(DuplicateFilter.ProcessingMode.PM_FAST_INVALIDATION);\n    } else {\n      throw new ParserException(\"Illegal processingMode attribute in DuplicateFilter:\" + processingMode);\n    }\n\n    return df;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1db68e96dd908fcd79ef809095822736aa601d08":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4dfca18b7bfce32a543487fd4b0c11595177e908":["1db68e96dd908fcd79ef809095822736aa601d08"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4dfca18b7bfce32a543487fd4b0c11595177e908"]},"commit2Childs":{"1db68e96dd908fcd79ef809095822736aa601d08":["4dfca18b7bfce32a543487fd4b0c11595177e908"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1db68e96dd908fcd79ef809095822736aa601d08"],"4dfca18b7bfce32a543487fd4b0c11595177e908":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}