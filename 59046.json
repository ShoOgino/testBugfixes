{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/xml/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","sourceNew":"  public static void transformCriteria(Properties formProperties, Transformer transformer, Result result)\n      throws SAXException, IOException, ParserConfigurationException, TransformerException {\n    dbf.setNamespaceAware(true);\n\n    //Create an XML document representing the search index document.\n    DocumentBuilder db = dbf.newDocumentBuilder();\n    org.w3c.dom.Document doc = db.newDocument();\n    Element root = doc.createElement(\"Document\");\n    doc.appendChild(root);\n\n    Enumeration keysEnum = formProperties.keys();\n    while (keysEnum.hasMoreElements()) {\n      String propName = (String) keysEnum.nextElement();\n      String value = formProperties.getProperty(propName);\n      if ((value != null) && (value.length() > 0)) {\n        DOMUtils.insertChild(root, propName, value);\n      }\n    }\n    //Use XSLT to to transform into an XML query string using the  queryTemplate\n    DOMSource xml = new DOMSource(doc);\n    transformer.transform(xml, result);\n  }\n\n","sourceOld":"  public static void transformCriteria(Properties formProperties, Transformer transformer, Result result)\n      throws SAXException, IOException, ParserConfigurationException, TransformerException {\n    dbf.setNamespaceAware(true);\n\n    //Create an XML document representing the search index document.\n    DocumentBuilder db = dbf.newDocumentBuilder();\n    org.w3c.dom.Document doc = db.newDocument();\n    Element root = doc.createElement(\"Document\");\n    doc.appendChild(root);\n\n    Enumeration keysEnum = formProperties.keys();\n    while (keysEnum.hasMoreElements()) {\n      String propName = (String) keysEnum.nextElement();\n      String value = formProperties.getProperty(propName);\n      if ((value != null) && (value.length() > 0)) {\n        DOMUtils.insertChild(root, propName, value);\n      }\n    }\n    //Use XSLT to to transform into an XML query string using the  queryTemplate\n    DOMSource xml = new DOMSource(doc);\n    transformer.transform(xml, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","sourceNew":"  public static void transformCriteria(Properties formProperties, Transformer transformer, Result result)\n      throws ParserConfigurationException, TransformerException {\n    dbf.setNamespaceAware(true);\n\n    //Create an XML document representing the search index document.\n    DocumentBuilder db = dbf.newDocumentBuilder();\n    org.w3c.dom.Document doc = db.newDocument();\n    Element root = doc.createElement(\"Document\");\n    doc.appendChild(root);\n\n    Enumeration keysEnum = formProperties.keys();\n    while (keysEnum.hasMoreElements()) {\n      String propName = (String) keysEnum.nextElement();\n      String value = formProperties.getProperty(propName);\n      if ((value != null) && (value.length() > 0)) {\n        DOMUtils.insertChild(root, propName, value);\n      }\n    }\n    //Use XSLT to to transform into an XML query string using the  queryTemplate\n    DOMSource xml = new DOMSource(doc);\n    transformer.transform(xml, result);\n  }\n\n","sourceOld":"  public static void transformCriteria(Properties formProperties, Transformer transformer, Result result)\n      throws SAXException, IOException, ParserConfigurationException, TransformerException {\n    dbf.setNamespaceAware(true);\n\n    //Create an XML document representing the search index document.\n    DocumentBuilder db = dbf.newDocumentBuilder();\n    org.w3c.dom.Document doc = db.newDocument();\n    Element root = doc.createElement(\"Document\");\n    doc.appendChild(root);\n\n    Enumeration keysEnum = formProperties.keys();\n    while (keysEnum.hasMoreElements()) {\n      String propName = (String) keysEnum.nextElement();\n      String value = formProperties.getProperty(propName);\n      if ((value != null) && (value.length() > 0)) {\n        DOMUtils.insertChild(root, propName, value);\n      }\n    }\n    //Use XSLT to to transform into an XML query string using the  queryTemplate\n    DOMSource xml = new DOMSource(doc);\n    transformer.transform(xml, result);\n  }\n\n","bugFix":["b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","sourceNew":"  public static void transformCriteria(Properties formProperties, Transformer transformer, Result result)\n      throws ParserConfigurationException, TransformerException {\n    dbf.setNamespaceAware(true);\n\n    //Create an XML document representing the search index document.\n    DocumentBuilder db = dbf.newDocumentBuilder();\n    org.w3c.dom.Document doc = db.newDocument();\n    Element root = doc.createElement(\"Document\");\n    doc.appendChild(root);\n\n    Enumeration keysEnum = formProperties.keys();\n    while (keysEnum.hasMoreElements()) {\n      String propName = (String) keysEnum.nextElement();\n      String value = formProperties.getProperty(propName);\n      if ((value != null) && (value.length() > 0)) {\n        DOMUtils.insertChild(root, propName, value);\n      }\n    }\n    //Use XSLT to to transform into an XML query string using the  queryTemplate\n    DOMSource xml = new DOMSource(doc);\n    transformer.transform(xml, result);\n  }\n\n","sourceOld":"  public static void transformCriteria(Properties formProperties, Transformer transformer, Result result)\n      throws SAXException, IOException, ParserConfigurationException, TransformerException {\n    dbf.setNamespaceAware(true);\n\n    //Create an XML document representing the search index document.\n    DocumentBuilder db = dbf.newDocumentBuilder();\n    org.w3c.dom.Document doc = db.newDocument();\n    Element root = doc.createElement(\"Document\");\n    doc.appendChild(root);\n\n    Enumeration keysEnum = formProperties.keys();\n    while (keysEnum.hasMoreElements()) {\n      String propName = (String) keysEnum.nextElement();\n      String value = formProperties.getProperty(propName);\n      if ((value != null) && (value.length() > 0)) {\n        DOMUtils.insertChild(root, propName, value);\n      }\n    }\n    //Use XSLT to to transform into an XML query string using the  queryTemplate\n    DOMSource xml = new DOMSource(doc);\n    transformer.transform(xml, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81d286a9c5b9ffccdecbe00839ea800c6dc95ecb","date":1439661864,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","sourceNew":"  public static void transformCriteria(Properties formProperties, Transformer transformer, Result result)\n      throws ParserConfigurationException, TransformerException {\n    dbf.setNamespaceAware(true);\n\n    //Create an XML document representing the search index document.\n    DocumentBuilder db = dbf.newDocumentBuilder();\n    org.w3c.dom.Document doc = db.newDocument();\n    Element root = doc.createElement(\"Document\");\n    doc.appendChild(root);\n\n    Enumeration<?> keysEnum = formProperties.propertyNames();\n    while (keysEnum.hasMoreElements()) {\n      String propName = keysEnum.nextElement().toString();\n      String value = formProperties.getProperty(propName);\n      if ((value != null) && (value.length() > 0)) {\n        DOMUtils.insertChild(root, propName, value);\n      }\n    }\n    //Use XSLT to to transform into an XML query string using the  queryTemplate\n    DOMSource xml = new DOMSource(doc);\n    transformer.transform(xml, result);\n  }\n\n","sourceOld":"  public static void transformCriteria(Properties formProperties, Transformer transformer, Result result)\n      throws ParserConfigurationException, TransformerException {\n    dbf.setNamespaceAware(true);\n\n    //Create an XML document representing the search index document.\n    DocumentBuilder db = dbf.newDocumentBuilder();\n    org.w3c.dom.Document doc = db.newDocument();\n    Element root = doc.createElement(\"Document\");\n    doc.appendChild(root);\n\n    Enumeration keysEnum = formProperties.keys();\n    while (keysEnum.hasMoreElements()) {\n      String propName = (String) keysEnum.nextElement();\n      String value = formProperties.getProperty(propName);\n      if ((value != null) && (value.length() > 0)) {\n        DOMUtils.insertChild(root, propName, value);\n      }\n    }\n    //Use XSLT to to transform into an XML query string using the  queryTemplate\n    DOMSource xml = new DOMSource(doc);\n    transformer.transform(xml, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef5efd612b12038e51f8da591d11b5359c5e176d","date":1526420099,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","sourceNew":null,"sourceOld":"  public static void transformCriteria(Properties formProperties, Transformer transformer, Result result)\n      throws ParserConfigurationException, TransformerException {\n    dbf.setNamespaceAware(true);\n\n    //Create an XML document representing the search index document.\n    DocumentBuilder db = dbf.newDocumentBuilder();\n    org.w3c.dom.Document doc = db.newDocument();\n    Element root = doc.createElement(\"Document\");\n    doc.appendChild(root);\n\n    Enumeration<?> keysEnum = formProperties.propertyNames();\n    while (keysEnum.hasMoreElements()) {\n      String propName = keysEnum.nextElement().toString();\n      String value = formProperties.getProperty(propName);\n      if ((value != null) && (value.length() > 0)) {\n        DOMUtils.insertChild(root, propName, value);\n      }\n    }\n    //Use XSLT to to transform into an XML query string using the  queryTemplate\n    DOMSource xml = new DOMSource(doc);\n    transformer.transform(xml, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"81d286a9c5b9ffccdecbe00839ea800c6dc95ecb":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ef5efd612b12038e51f8da591d11b5359c5e176d":["81d286a9c5b9ffccdecbe00839ea800c6dc95ecb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ef5efd612b12038e51f8da591d11b5359c5e176d"]},"commit2Childs":{"81d286a9c5b9ffccdecbe00839ea800c6dc95ecb":["ef5efd612b12038e51f8da591d11b5359c5e176d"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["81d286a9c5b9ffccdecbe00839ea800c6dc95ecb","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"ef5efd612b12038e51f8da591d11b5359c5e176d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}