{"path":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes(String).mjava","commits":[{"id":"826e791d635df5093032ca5d1925016bdf0c1df6","date":1454083189,"type":0,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes(String).mjava","pathOld":"/dev/null","sourceNew":"    private DocSet resolveLeafNodes(String field) throws IOException {\n      BooleanQuery.Builder leafNodeQuery = new BooleanQuery.Builder();\n      WildcardQuery edgeQuery = new WildcardQuery(new Term(field, \"*\"));\n      leafNodeQuery.add(edgeQuery, Occur.MUST_NOT);\n      DocSet leafNodes = fromSearcher.getDocSet(leafNodeQuery.build());\n      return leafNodes;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d15e34266d75e4e8b95da046cd0afc812367b38","date":1454246129,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes(String).mjava","pathOld":"/dev/null","sourceNew":"    private DocSet resolveLeafNodes(String field) throws IOException {\n      BooleanQuery.Builder leafNodeQuery = new BooleanQuery.Builder();\n      WildcardQuery edgeQuery = new WildcardQuery(new Term(field, \"*\"));\n      leafNodeQuery.add(edgeQuery, Occur.MUST_NOT);\n      DocSet leafNodes = fromSearcher.getDocSet(leafNodeQuery.build());\n      return leafNodes;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes(String).mjava","pathOld":"/dev/null","sourceNew":"    private DocSet resolveLeafNodes(String field) throws IOException {\n      BooleanQuery.Builder leafNodeQuery = new BooleanQuery.Builder();\n      WildcardQuery edgeQuery = new WildcardQuery(new Term(field, \"*\"));\n      leafNodeQuery.add(edgeQuery, Occur.MUST_NOT);\n      DocSet leafNodes = fromSearcher.getDocSet(leafNodeQuery.build());\n      return leafNodes;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3be7723008a2c26b93c1b9d6a5e67ed2e4a2976","date":1500994164,"type":5,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes(String).mjava","sourceNew":"    private DocSet resolveLeafNodes() throws IOException {\n      String field = toSchemaField.getName();\n      BooleanQuery.Builder leafNodeQuery = new BooleanQuery.Builder();\n      Query edgeQuery = toSchemaField.hasDocValues() ? new DocValuesFieldExistsQuery(field) : new WildcardQuery(new Term(field, \"*\"));\n      leafNodeQuery.add(edgeQuery, Occur.MUST_NOT);\n      DocSet leafNodes = fromSearcher.getDocSet(leafNodeQuery.build());\n      return leafNodes;\n    }\n\n","sourceOld":"    private DocSet resolveLeafNodes(String field) throws IOException {\n      BooleanQuery.Builder leafNodeQuery = new BooleanQuery.Builder();\n      WildcardQuery edgeQuery = new WildcardQuery(new Term(field, \"*\"));\n      leafNodeQuery.add(edgeQuery, Occur.MUST_NOT);\n      DocSet leafNodes = fromSearcher.getDocSet(leafNodeQuery.build());\n      return leafNodes;\n    }\n\n","bugFix":null,"bugIntro":["487de3f55283f58d7e02a16993f8be55bbe32061","487de3f55283f58d7e02a16993f8be55bbe32061","487de3f55283f58d7e02a16993f8be55bbe32061"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a52341299179de5479672f7cf518bf4b173f34b3","date":1501079746,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes(String).mjava","sourceNew":"    private DocSet resolveLeafNodes() throws IOException {\n      String field = toSchemaField.getName();\n      BooleanQuery.Builder leafNodeQuery = new BooleanQuery.Builder();\n      Query edgeQuery = toSchemaField.hasDocValues() ? new DocValuesFieldExistsQuery(field) : new WildcardQuery(new Term(field, \"*\"));\n      leafNodeQuery.add(edgeQuery, Occur.MUST_NOT);\n      DocSet leafNodes = fromSearcher.getDocSet(leafNodeQuery.build());\n      return leafNodes;\n    }\n\n","sourceOld":"    private DocSet resolveLeafNodes(String field) throws IOException {\n      BooleanQuery.Builder leafNodeQuery = new BooleanQuery.Builder();\n      WildcardQuery edgeQuery = new WildcardQuery(new Term(field, \"*\"));\n      leafNodeQuery.add(edgeQuery, Occur.MUST_NOT);\n      DocSet leafNodes = fromSearcher.getDocSet(leafNodeQuery.build());\n      return leafNodes;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":5,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/GraphQuery.GraphQueryWeight#resolveLeafNodes(String).mjava","sourceNew":"    private DocSet resolveLeafNodes() throws IOException {\n      String field = collectSchemaField.getName();\n      BooleanQuery.Builder leafNodeQuery = new BooleanQuery.Builder();\n      Query edgeQuery = collectSchemaField.hasDocValues() ? new DocValuesFieldExistsQuery(field) : new WildcardQuery(new Term(field, \"*\"));\n      leafNodeQuery.add(edgeQuery, Occur.MUST_NOT);\n      DocSet leafNodes = fromSearcher.getDocSet(leafNodeQuery.build());\n      return leafNodes;\n    }\n\n","sourceOld":"    private DocSet resolveLeafNodes(String field) throws IOException {\n      BooleanQuery.Builder leafNodeQuery = new BooleanQuery.Builder();\n      WildcardQuery edgeQuery = new WildcardQuery(new Term(field, \"*\"));\n      leafNodeQuery.add(edgeQuery, Occur.MUST_NOT);\n      DocSet leafNodes = fromSearcher.getDocSet(leafNodeQuery.build());\n      return leafNodes;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a3be7723008a2c26b93c1b9d6a5e67ed2e4a2976":["8d15e34266d75e4e8b95da046cd0afc812367b38"],"a52341299179de5479672f7cf518bf4b173f34b3":["8d15e34266d75e4e8b95da046cd0afc812367b38","a3be7723008a2c26b93c1b9d6a5e67ed2e4a2976"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["8d15e34266d75e4e8b95da046cd0afc812367b38","a52341299179de5479672f7cf518bf4b173f34b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"826e791d635df5093032ca5d1925016bdf0c1df6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8d15e34266d75e4e8b95da046cd0afc812367b38"],"8d15e34266d75e4e8b95da046cd0afc812367b38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","826e791d635df5093032ca5d1925016bdf0c1df6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a52341299179de5479672f7cf518bf4b173f34b3"]},"commit2Childs":{"a3be7723008a2c26b93c1b9d6a5e67ed2e4a2976":["a52341299179de5479672f7cf518bf4b173f34b3"],"a52341299179de5479672f7cf518bf4b173f34b3":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["826e791d635df5093032ca5d1925016bdf0c1df6","1e6acbaae7af722f17204ceccf0f7db5753eccf3","8d15e34266d75e4e8b95da046cd0afc812367b38"],"826e791d635df5093032ca5d1925016bdf0c1df6":["8d15e34266d75e4e8b95da046cd0afc812367b38"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"8d15e34266d75e4e8b95da046cd0afc812367b38":["a3be7723008a2c26b93c1b9d6a5e67ed2e4a2976","a52341299179de5479672f7cf518bf4b173f34b3","7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}