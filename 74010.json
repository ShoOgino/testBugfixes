{"path":"lucene/highlighter/src/test/org/apache/lucene/search/matchhighlight/TestPassageSelector#getPassages(String,int,int,OffsetRange[],OffsetRange[]).mjava","commits":[{"id":"2fb36690ce41edd0bebf4e4babc0fa8c9b0f2e5c","date":1597407672,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/matchhighlight/TestPassageSelector#getPassages(String,int,int,OffsetRange[],OffsetRange[]).mjava","pathOld":"/dev/null","sourceNew":"  protected String getPassages(\n      String value,\n      int charWindow,\n      int maxPassages,\n      OffsetRange[] highlights,\n      OffsetRange[] ranges) {\n    PassageFormatter passageFormatter = new PassageFormatter(\"...\", \">\", \"<\");\n    PassageSelector selector = new PassageSelector();\n    List<OffsetRange> hlist = Arrays.asList(highlights);\n    List<OffsetRange> rangeList = Arrays.asList(ranges);\n    List<Passage> passages = selector.pickBest(value, hlist, charWindow, maxPassages, rangeList);\n    return String.join(\"|\", passageFormatter.format(value, passages, rangeList));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"060cad2e7ae19bfe202be419234328acf680716c","date":1599747351,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/matchhighlight/TestPassageSelector#getPassages(String,int,int,OffsetRange[],OffsetRange[]).mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/matchhighlight/TestPassageSelector#getPassages(String,int,int,OffsetRange[],OffsetRange[]).mjava","sourceNew":"  protected String getPassages(\n      String value,\n      int charWindow,\n      int maxPassages,\n      OffsetRange[] highlights,\n      OffsetRange[] ranges) {\n    PassageFormatter passageFormatter = new PassageFormatter(\"...\", \">\", \"<\");\n    PassageSelector selector = new PassageSelector();\n    List<OffsetRange> rangeList = Arrays.asList(ranges);\n    List<OffsetRange> hlist = Arrays.asList(highlights);\n    List<Passage> passages = selector.pickBest(value, hlist, charWindow, maxPassages, rangeList);\n    return String.join(\"|\", passageFormatter.format(value, passages, rangeList));\n  }\n\n","sourceOld":"  protected String getPassages(\n      String value,\n      int charWindow,\n      int maxPassages,\n      OffsetRange[] highlights,\n      OffsetRange[] ranges) {\n    PassageFormatter passageFormatter = new PassageFormatter(\"...\", \">\", \"<\");\n    PassageSelector selector = new PassageSelector();\n    List<OffsetRange> hlist = Arrays.asList(highlights);\n    List<OffsetRange> rangeList = Arrays.asList(ranges);\n    List<Passage> passages = selector.pickBest(value, hlist, charWindow, maxPassages, rangeList);\n    return String.join(\"|\", passageFormatter.format(value, passages, rangeList));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"060cad2e7ae19bfe202be419234328acf680716c":["2fb36690ce41edd0bebf4e4babc0fa8c9b0f2e5c"],"2fb36690ce41edd0bebf4e4babc0fa8c9b0f2e5c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["060cad2e7ae19bfe202be419234328acf680716c"]},"commit2Childs":{"060cad2e7ae19bfe202be419234328acf680716c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2fb36690ce41edd0bebf4e4babc0fa8c9b0f2e5c":["060cad2e7ae19bfe202be419234328acf680716c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2fb36690ce41edd0bebf4e4babc0fa8c9b0f2e5c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}