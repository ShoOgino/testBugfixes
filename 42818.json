{"path":"lucene/core/src/java/org/apache/lucene/geo/SimpleGeoJSONPolygonParser#parsePoints(List[Object]).mjava","commits":[{"id":"928077c840ee09456eee199964d886c73fc53314","date":1468594268,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/SimpleGeoJSONPolygonParser#parsePoints(List[Object]).mjava","pathOld":"/dev/null","sourceNew":"  /** Parses [[lat, lon], [lat, lon] ...] into 2d double array */\n  private double[][] parsePoints(List<Object> o) throws ParseException {\n    double[] lats = new double[o.size()];\n    double[] lons = new double[o.size()];\n    for(int i=0;i<o.size();i++) {\n      Object point = o.get(i);\n      if (point instanceof List == false) {\n        throw newParseException(\"elements of coordinates array must [lat, lon] array, but got: \" + point);\n      }\n      List<Object> pointList = (List<Object>) point;\n      if (pointList.size() != 2) {\n        throw newParseException(\"elements of coordinates array must [lat, lon] array, but got wrong element count: \" + pointList);\n      }\n      if (pointList.get(0) instanceof Double == false) {\n        throw newParseException(\"elements of coordinates array must [lat, lon] array, but first element is not a Double: \" + pointList.get(0));\n      }\n      if (pointList.get(1) instanceof Double == false) {\n        throw newParseException(\"elements of coordinates array must [lat, lon] array, but second element is not a Double: \" + pointList.get(1));\n      }\n\n      // lon, lat ordering in GeoJSON!\n      lons[i] = ((Double) pointList.get(0)).doubleValue();\n      lats[i] = ((Double) pointList.get(1)).doubleValue();\n    }\n\n    return new double[][] {lats, lons};\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/SimpleGeoJSONPolygonParser#parsePoints(List[Object]).mjava","pathOld":"/dev/null","sourceNew":"  /** Parses [[lat, lon], [lat, lon] ...] into 2d double array */\n  private double[][] parsePoints(List<Object> o) throws ParseException {\n    double[] lats = new double[o.size()];\n    double[] lons = new double[o.size()];\n    for(int i=0;i<o.size();i++) {\n      Object point = o.get(i);\n      if (point instanceof List == false) {\n        throw newParseException(\"elements of coordinates array must [lat, lon] array, but got: \" + point);\n      }\n      List<Object> pointList = (List<Object>) point;\n      if (pointList.size() != 2) {\n        throw newParseException(\"elements of coordinates array must [lat, lon] array, but got wrong element count: \" + pointList);\n      }\n      if (pointList.get(0) instanceof Double == false) {\n        throw newParseException(\"elements of coordinates array must [lat, lon] array, but first element is not a Double: \" + pointList.get(0));\n      }\n      if (pointList.get(1) instanceof Double == false) {\n        throw newParseException(\"elements of coordinates array must [lat, lon] array, but second element is not a Double: \" + pointList.get(1));\n      }\n\n      // lon, lat ordering in GeoJSON!\n      lons[i] = ((Double) pointList.get(0)).doubleValue();\n      lats[i] = ((Double) pointList.get(1)).doubleValue();\n    }\n\n    return new double[][] {lats, lons};\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"928077c840ee09456eee199964d886c73fc53314":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","928077c840ee09456eee199964d886c73fc53314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["928077c840ee09456eee199964d886c73fc53314"]},"commit2Childs":{"928077c840ee09456eee199964d886c73fc53314":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["928077c840ee09456eee199964d886c73fc53314","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}