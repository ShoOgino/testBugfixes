{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/Dictionary#unescapeEntry(String).mjava","commits":[{"id":"b6b9214e93abd5c360b7dc32483691d5555a9c7e","date":1394289706,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/Dictionary#unescapeEntry(String).mjava","pathOld":"/dev/null","sourceNew":"  String unescapeEntry(String entry) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < entry.length(); i++) {\n      char ch = entry.charAt(i);\n      if (ch == '\\\\' && i+1 < entry.length()) {\n        sb.append(entry.charAt(i+1));\n        i++;\n      } else if (ch == '/') {\n        sb.append(FLAG_SEPARATOR);\n      } else {\n        sb.append(ch);\n      }\n    }\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","date":1394564625,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/Dictionary#unescapeEntry(String).mjava","pathOld":"/dev/null","sourceNew":"  String unescapeEntry(String entry) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < entry.length(); i++) {\n      char ch = entry.charAt(i);\n      if (ch == '\\\\' && i+1 < entry.length()) {\n        sb.append(entry.charAt(i+1));\n        i++;\n      } else if (ch == '/') {\n        sb.append(FLAG_SEPARATOR);\n      } else {\n        sb.append(ch);\n      }\n    }\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5916de6e2f6deb9da923b2710f6451668e94a20c","date":1403356557,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/Dictionary#unescapeEntry(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/Dictionary#unescapeEntry(String).mjava","sourceNew":"  String unescapeEntry(String entry) {\n    StringBuilder sb = new StringBuilder();\n    int end = morphBoundary(entry);\n    for (int i = 0; i < end; i++) {\n      char ch = entry.charAt(i);\n      if (ch == '\\\\' && i+1 < entry.length()) {\n        sb.append(entry.charAt(i+1));\n        i++;\n      } else if (ch == '/') {\n        sb.append(FLAG_SEPARATOR);\n      } else if (ch == MORPH_SEPARATOR || ch == FLAG_SEPARATOR) {\n        // BINARY EXECUTABLES EMBEDDED IN ZULU DICTIONARIES!!!!!!!\n      } else {\n        sb.append(ch);\n      }\n    }\n    sb.append(MORPH_SEPARATOR);\n    if (end < entry.length()) {\n      for (int i = end; i < entry.length(); i++) {\n        char c = entry.charAt(i);\n        if (c == FLAG_SEPARATOR || c == MORPH_SEPARATOR) {\n          // BINARY EXECUTABLES EMBEDDED IN ZULU DICTIONARIES!!!!!!!\n        } else {\n          sb.append(c);\n        }\n      }\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  String unescapeEntry(String entry) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < entry.length(); i++) {\n      char ch = entry.charAt(i);\n      if (ch == '\\\\' && i+1 < entry.length()) {\n        sb.append(entry.charAt(i+1));\n        i++;\n      } else if (ch == '/') {\n        sb.append(FLAG_SEPARATOR);\n      } else {\n        sb.append(ch);\n      }\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5916de6e2f6deb9da923b2710f6451668e94a20c":["b6b9214e93abd5c360b7dc32483691d5555a9c7e"],"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b6b9214e93abd5c360b7dc32483691d5555a9c7e"],"b6b9214e93abd5c360b7dc32483691d5555a9c7e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5916de6e2f6deb9da923b2710f6451668e94a20c"]},"commit2Childs":{"5916de6e2f6deb9da923b2710f6451668e94a20c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4":[],"b6b9214e93abd5c360b7dc32483691d5555a9c7e":["5916de6e2f6deb9da923b2710f6451668e94a20c","a58bbbe1c866963764d3f15d3a26a6a85f6c6af4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","b6b9214e93abd5c360b7dc32483691d5555a9c7e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}