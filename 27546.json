{"path":"lucene/backwards/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(Similarity,int,List[Scorer],List[Scorer]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(Similarity,int,List[Scorer],List[Scorer]).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(Similarity,int,List[Scorer],List[Scorer]).mjava","sourceNew":"  BooleanScorer(Similarity similarity, int minNrShouldMatch,\n      List<Scorer> optionalScorers, List<Scorer> prohibitedScorers) throws IOException {\n    super(similarity);\n    this.minNrShouldMatch = minNrShouldMatch;\n\n    if (optionalScorers != null && optionalScorers.size() > 0) {\n      for (Scorer scorer : optionalScorers) {\n        maxCoord++;\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n        }\n      }\n    }\n    \n    if (prohibitedScorers != null && prohibitedScorers.size() > 0) {\n      for (Scorer scorer : prohibitedScorers) {\n        int mask = nextMask;\n        nextMask = nextMask << 1;\n        prohibitedMask |= mask;                     // update prohibited mask\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(mask), scorers);\n        }\n      }\n    }\n\n    coordFactors = new float[maxCoord];\n    Similarity sim = getSimilarity();\n    for (int i = 0; i < maxCoord; i++) {\n      coordFactors[i] = sim.coord(i, maxCoord - 1); \n    }\n  }\n\n","sourceOld":"  BooleanScorer(Similarity similarity, int minNrShouldMatch,\n      List<Scorer> optionalScorers, List<Scorer> prohibitedScorers) throws IOException {\n    super(similarity);\n    this.minNrShouldMatch = minNrShouldMatch;\n\n    if (optionalScorers != null && optionalScorers.size() > 0) {\n      for (Scorer scorer : optionalScorers) {\n        maxCoord++;\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n        }\n      }\n    }\n    \n    if (prohibitedScorers != null && prohibitedScorers.size() > 0) {\n      for (Scorer scorer : prohibitedScorers) {\n        int mask = nextMask;\n        nextMask = nextMask << 1;\n        prohibitedMask |= mask;                     // update prohibited mask\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(mask), scorers);\n        }\n      }\n    }\n\n    coordFactors = new float[maxCoord];\n    Similarity sim = getSimilarity();\n    for (int i = 0; i < maxCoord; i++) {\n      coordFactors[i] = sim.coord(i, maxCoord - 1); \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(Similarity,int,List[Scorer],List[Scorer]).mjava","sourceNew":null,"sourceOld":"  BooleanScorer(Similarity similarity, int minNrShouldMatch,\n      List<Scorer> optionalScorers, List<Scorer> prohibitedScorers) throws IOException {\n    super(similarity);\n    this.minNrShouldMatch = minNrShouldMatch;\n\n    if (optionalScorers != null && optionalScorers.size() > 0) {\n      for (Scorer scorer : optionalScorers) {\n        maxCoord++;\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n        }\n      }\n    }\n    \n    if (prohibitedScorers != null && prohibitedScorers.size() > 0) {\n      for (Scorer scorer : prohibitedScorers) {\n        int mask = nextMask;\n        nextMask = nextMask << 1;\n        prohibitedMask |= mask;                     // update prohibited mask\n        if (scorer.nextDoc() != NO_MORE_DOCS) {\n          scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(mask), scorers);\n        }\n      }\n    }\n\n    coordFactors = new float[maxCoord];\n    Similarity sim = getSimilarity();\n    for (int i = 0; i < maxCoord; i++) {\n      coordFactors[i] = sim.coord(i, maxCoord - 1); \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}