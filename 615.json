{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/Lucene70DocValuesProducer#getSortedSetTable(FieldInfo,SortedSetEntry).mjava","commits":[{"id":"084884d4602f4d1c7411eab29e897e349ce62675","date":1475571034,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/Lucene70DocValuesProducer#getSortedSetTable(FieldInfo,SortedSetEntry).mjava","pathOld":"/dev/null","sourceNew":"  private SortedSetDocValues getSortedSetTable(FieldInfo field, SortedSetEntry ss) throws IOException {\n    final long valueCount = binaries.get(field.name).count;\n    final LongBinaryDocValues binary = (LongBinaryDocValues) getLegacyBinary(field);\n    final NumericEntry ordinalsEntry = ords.get(field.name);\n    final LongValues ordinals = getNumeric(ordinalsEntry);\n\n    final long[] table = ss.table;\n    final int[] offsets = ss.tableOffsets;\n\n    return new LegacySortedSetDocValuesWrapper(new LegacySortedSetDocValues() {\n\n      int offset, startOffset, endOffset;\n\n      @Override\n      public void setDocument(int docID) {\n        final int ord = (int) ordinals.get(docID);\n        offset = startOffset = offsets[ord];\n        endOffset = offsets[ord + 1];\n      }\n\n      @Override\n      public long nextOrd() {\n        if (offset == endOffset) {\n          return NO_MORE_ORDS;\n        } else {\n          return table[offset++];\n        }\n      }\n\n      @Override\n      public BytesRef lookupOrd(long ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public long getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public long lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).lookupTerm(key);\n        } else {\n          return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n      }, maxDoc);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1967bed916cc89da82a1c2085f27976da6d08cbd","date":1475588750,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/Lucene70DocValuesProducer#getSortedSetTable(FieldInfo,SortedSetEntry).mjava","pathOld":"/dev/null","sourceNew":"  private SortedSetDocValues getSortedSetTable(FieldInfo field, SortedSetEntry ss) throws IOException {\n    final long valueCount = binaries.get(field.name).count;\n    final LongBinaryDocValues binary = (LongBinaryDocValues) getLegacyBinary(field);\n    final NumericEntry ordinalsEntry = ords.get(field.name);\n    final LongValues ordinals = getNumeric(ordinalsEntry);\n\n    final long[] table = ss.table;\n    final int[] offsets = ss.tableOffsets;\n\n    return new LegacySortedSetDocValuesWrapper(new LegacySortedSetDocValues() {\n\n      int offset, startOffset, endOffset;\n\n      @Override\n      public void setDocument(int docID) {\n        final int ord = (int) ordinals.get(docID);\n        offset = startOffset = offsets[ord];\n        endOffset = offsets[ord + 1];\n      }\n\n      @Override\n      public long nextOrd() {\n        if (offset == endOffset) {\n          return NO_MORE_ORDS;\n        } else {\n          return table[offset++];\n        }\n      }\n\n      @Override\n      public BytesRef lookupOrd(long ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public long getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public long lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).lookupTerm(key);\n        } else {\n          return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n      }, maxDoc);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23e44daeaa8b89694d10df5999956c8e14a7dd09","date":1476689300,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/Lucene70DocValuesProducer#getSortedSetTable(FieldInfo,SortedSetEntry).mjava","sourceNew":null,"sourceOld":"  private SortedSetDocValues getSortedSetTable(FieldInfo field, SortedSetEntry ss) throws IOException {\n    final long valueCount = binaries.get(field.name).count;\n    final LongBinaryDocValues binary = (LongBinaryDocValues) getLegacyBinary(field);\n    final NumericEntry ordinalsEntry = ords.get(field.name);\n    final LongValues ordinals = getNumeric(ordinalsEntry);\n\n    final long[] table = ss.table;\n    final int[] offsets = ss.tableOffsets;\n\n    return new LegacySortedSetDocValuesWrapper(new LegacySortedSetDocValues() {\n\n      int offset, startOffset, endOffset;\n\n      @Override\n      public void setDocument(int docID) {\n        final int ord = (int) ordinals.get(docID);\n        offset = startOffset = offsets[ord];\n        endOffset = offsets[ord + 1];\n      }\n\n      @Override\n      public long nextOrd() {\n        if (offset == endOffset) {\n          return NO_MORE_ORDS;\n        } else {\n          return table[offset++];\n        }\n      }\n\n      @Override\n      public BytesRef lookupOrd(long ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public long getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public long lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).lookupTerm(key);\n        } else {\n          return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n      }, maxDoc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"23e44daeaa8b89694d10df5999956c8e14a7dd09":["1967bed916cc89da82a1c2085f27976da6d08cbd"],"1967bed916cc89da82a1c2085f27976da6d08cbd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","084884d4602f4d1c7411eab29e897e349ce62675"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23e44daeaa8b89694d10df5999956c8e14a7dd09"],"084884d4602f4d1c7411eab29e897e349ce62675":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"23e44daeaa8b89694d10df5999956c8e14a7dd09":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1967bed916cc89da82a1c2085f27976da6d08cbd":["23e44daeaa8b89694d10df5999956c8e14a7dd09"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1967bed916cc89da82a1c2085f27976da6d08cbd","084884d4602f4d1c7411eab29e897e349ce62675"],"084884d4602f4d1c7411eab29e897e349ce62675":["1967bed916cc89da82a1c2085f27976da6d08cbd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}