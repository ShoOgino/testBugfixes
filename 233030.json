{"path":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#any_decendent_of_a_child1().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#any_decendent_of_a_child1().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void any_decendent_of_a_child1() {\n    XPathRecordReader rr = new XPathRecordReader(\"/anycd\");\n    rr.addField(\"descdend\", \"/anycd//boo\",         true);\n\n    // same test string as above but checking to see if *all* //boo's are collected\n    String xml=\"<anycd>\\n\"\n             + \"  this <boo>top level</boo> is ignored because it is external to the forEach\\n\"\n             + \"  <status>as is <boo>this element</boo></status>\\n\"\n             + \"  <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    This one is <boo>not ignored as its</boo> inside a forEach\\n\"\n             + \"    <antetitulo><i> big <boo>antler</boo></i></antetitulo>\\n\"\n             + \"    <titulo>  My <i>flattened <boo>title</boo></i> </titulo>\\n\"\n             + \"    <resumen> My summary <i>skip this!</i>  </resumen>\\n\"\n             + \"    <texto>   <boo>Within the body of</boo>My text</texto>\\n\"\n             + \"    <p>Access <boo>inner <i>sub clauses</i> as well</boo></p>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</anycd>\";\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Assert.assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    Assert.assertEquals(\"top level\"         ,(String) ((List) m.get(\"descdend\")).get(0) );\n    Assert.assertEquals(\"this element\"      ,(String) ((List) m.get(\"descdend\")).get(1) );\n    Assert.assertEquals(\"not ignored as its\",(String) ((List) m.get(\"descdend\")).get(2) );\n    Assert.assertEquals(\"antler\"            ,(String) ((List) m.get(\"descdend\")).get(3) );\n    Assert.assertEquals(\"title\"             ,(String) ((List) m.get(\"descdend\")).get(4) );\n    Assert.assertEquals(\"Within the body of\",(String) ((List) m.get(\"descdend\")).get(5) );\n    Assert.assertEquals(\"inner  as well\"    ,(String) ((List) m.get(\"descdend\")).get(6) );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#any_decendent_of_a_child1().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void any_decendent_of_a_child1() {\n    XPathRecordReader rr = new XPathRecordReader(\"/anycd\");\n    rr.addField(\"descdend\", \"/anycd//boo\",         true);\n\n    // same test string as above but checking to see if *all* //boo's are collected\n    String xml=\"<anycd>\\n\"\n             + \"  this <boo>top level</boo> is ignored because it is external to the forEach\\n\"\n             + \"  <status>as is <boo>this element</boo></status>\\n\"\n             + \"  <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    This one is <boo>not ignored as its</boo> inside a forEach\\n\"\n             + \"    <antetitulo><i> big <boo>antler</boo></i></antetitulo>\\n\"\n             + \"    <titulo>  My <i>flattened <boo>title</boo></i> </titulo>\\n\"\n             + \"    <resumen> My summary <i>skip this!</i>  </resumen>\\n\"\n             + \"    <texto>   <boo>Within the body of</boo>My text</texto>\\n\"\n             + \"    <p>Access <boo>inner <i>sub clauses</i> as well</boo></p>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</anycd>\";\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Assert.assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    Assert.assertEquals(\"top level\"         ,(String) ((List) m.get(\"descdend\")).get(0) );\n    Assert.assertEquals(\"this element\"      ,(String) ((List) m.get(\"descdend\")).get(1) );\n    Assert.assertEquals(\"not ignored as its\",(String) ((List) m.get(\"descdend\")).get(2) );\n    Assert.assertEquals(\"antler\"            ,(String) ((List) m.get(\"descdend\")).get(3) );\n    Assert.assertEquals(\"title\"             ,(String) ((List) m.get(\"descdend\")).get(4) );\n    Assert.assertEquals(\"Within the body of\",(String) ((List) m.get(\"descdend\")).get(5) );\n    Assert.assertEquals(\"inner  as well\"    ,(String) ((List) m.get(\"descdend\")).get(6) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#any_decendent_of_a_child1().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#any_decendent_of_a_child1().mjava","sourceNew":"  @Test\n  public void any_decendent_of_a_child1() {\n    XPathRecordReader rr = new XPathRecordReader(\"/anycd\");\n    rr.addField(\"descdend\", \"/anycd//boo\",         true);\n\n    // same test string as above but checking to see if *all* //boo's are collected\n    String xml=\"<anycd>\\n\"\n             + \"  this <boo>top level</boo> is ignored because it is external to the forEach\\n\"\n             + \"  <status>as is <boo>this element</boo></status>\\n\"\n             + \"  <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    This one is <boo>not ignored as its</boo> inside a forEach\\n\"\n             + \"    <antetitulo><i> big <boo>antler</boo></i></antetitulo>\\n\"\n             + \"    <titulo>  My <i>flattened <boo>title</boo></i> </titulo>\\n\"\n             + \"    <resumen> My summary <i>skip this!</i>  </resumen>\\n\"\n             + \"    <texto>   <boo>Within the body of</boo>My text</texto>\\n\"\n             + \"    <p>Access <boo>inner <i>sub clauses</i> as well</boo></p>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</anycd>\";\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Assert.assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    Assert.assertEquals(\"top level\"         ,(String) ((List) m.get(\"descdend\")).get(0) );\n    Assert.assertEquals(\"this element\"      ,(String) ((List) m.get(\"descdend\")).get(1) );\n    Assert.assertEquals(\"not ignored as its\",(String) ((List) m.get(\"descdend\")).get(2) );\n    Assert.assertEquals(\"antler\"            ,(String) ((List) m.get(\"descdend\")).get(3) );\n    Assert.assertEquals(\"title\"             ,(String) ((List) m.get(\"descdend\")).get(4) );\n    Assert.assertEquals(\"Within the body of\",(String) ((List) m.get(\"descdend\")).get(5) );\n    Assert.assertEquals(\"inner  as well\"    ,(String) ((List) m.get(\"descdend\")).get(6) );\n  }\n\n","sourceOld":"  @Test\n  public void any_decendent_of_a_child1() {\n    XPathRecordReader rr = new XPathRecordReader(\"/anycd\");\n    rr.addField(\"descdend\", \"/anycd//boo\",         true);\n\n    // same test string as above but checking to see if *all* //boo's are collected\n    String xml=\"<anycd>\\n\"\n             + \"  this <boo>top level</boo> is ignored because it is external to the forEach\\n\"\n             + \"  <status>as is <boo>this element</boo></status>\\n\"\n             + \"  <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    This one is <boo>not ignored as its</boo> inside a forEach\\n\"\n             + \"    <antetitulo><i> big <boo>antler</boo></i></antetitulo>\\n\"\n             + \"    <titulo>  My <i>flattened <boo>title</boo></i> </titulo>\\n\"\n             + \"    <resumen> My summary <i>skip this!</i>  </resumen>\\n\"\n             + \"    <texto>   <boo>Within the body of</boo>My text</texto>\\n\"\n             + \"    <p>Access <boo>inner <i>sub clauses</i> as well</boo></p>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</anycd>\";\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Assert.assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    Assert.assertEquals(\"top level\"         ,(String) ((List) m.get(\"descdend\")).get(0) );\n    Assert.assertEquals(\"this element\"      ,(String) ((List) m.get(\"descdend\")).get(1) );\n    Assert.assertEquals(\"not ignored as its\",(String) ((List) m.get(\"descdend\")).get(2) );\n    Assert.assertEquals(\"antler\"            ,(String) ((List) m.get(\"descdend\")).get(3) );\n    Assert.assertEquals(\"title\"             ,(String) ((List) m.get(\"descdend\")).get(4) );\n    Assert.assertEquals(\"Within the body of\",(String) ((List) m.get(\"descdend\")).get(5) );\n    Assert.assertEquals(\"inner  as well\"    ,(String) ((List) m.get(\"descdend\")).get(6) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#any_decendent_of_a_child1().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void any_decendent_of_a_child1() {\n    XPathRecordReader rr = new XPathRecordReader(\"/anycd\");\n    rr.addField(\"descdend\", \"/anycd//boo\",         true);\n\n    // same test string as above but checking to see if *all* //boo's are collected\n    String xml=\"<anycd>\\n\"\n             + \"  this <boo>top level</boo> is ignored because it is external to the forEach\\n\"\n             + \"  <status>as is <boo>this element</boo></status>\\n\"\n             + \"  <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    This one is <boo>not ignored as its</boo> inside a forEach\\n\"\n             + \"    <antetitulo><i> big <boo>antler</boo></i></antetitulo>\\n\"\n             + \"    <titulo>  My <i>flattened <boo>title</boo></i> </titulo>\\n\"\n             + \"    <resumen> My summary <i>skip this!</i>  </resumen>\\n\"\n             + \"    <texto>   <boo>Within the body of</boo>My text</texto>\\n\"\n             + \"    <p>Access <boo>inner <i>sub clauses</i> as well</boo></p>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</anycd>\";\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Assert.assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    Assert.assertEquals(\"top level\"         ,(String) ((List) m.get(\"descdend\")).get(0) );\n    Assert.assertEquals(\"this element\"      ,(String) ((List) m.get(\"descdend\")).get(1) );\n    Assert.assertEquals(\"not ignored as its\",(String) ((List) m.get(\"descdend\")).get(2) );\n    Assert.assertEquals(\"antler\"            ,(String) ((List) m.get(\"descdend\")).get(3) );\n    Assert.assertEquals(\"title\"             ,(String) ((List) m.get(\"descdend\")).get(4) );\n    Assert.assertEquals(\"Within the body of\",(String) ((List) m.get(\"descdend\")).get(5) );\n    Assert.assertEquals(\"inner  as well\"    ,(String) ((List) m.get(\"descdend\")).get(6) );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead","date":1286986267,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAny_decendent_of_a_child1().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#any_decendent_of_a_child1().mjava","sourceNew":"  @Test\n  public void testAny_decendent_of_a_child1() {\n    XPathRecordReader rr = new XPathRecordReader(\"/anycd\");\n    rr.addField(\"descdend\", \"/anycd//boo\",         true);\n\n    // same test string as above but checking to see if *all* //boo's are collected\n    String xml=\"<anycd>\\n\"\n             + \"  this <boo>top level</boo> is ignored because it is external to the forEach\\n\"\n             + \"  <status>as is <boo>this element</boo></status>\\n\"\n             + \"  <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    This one is <boo>not ignored as its</boo> inside a forEach\\n\"\n             + \"    <antetitulo><i> big <boo>antler</boo></i></antetitulo>\\n\"\n             + \"    <titulo>  My <i>flattened <boo>title</boo></i> </titulo>\\n\"\n             + \"    <resumen> My summary <i>skip this!</i>  </resumen>\\n\"\n             + \"    <texto>   <boo>Within the body of</boo>My text</texto>\\n\"\n             + \"    <p>Access <boo>inner <i>sub clauses</i> as well</boo></p>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</anycd>\";\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    assertEquals(\"top level\"         ,(String) ((List) m.get(\"descdend\")).get(0) );\n    assertEquals(\"this element\"      ,(String) ((List) m.get(\"descdend\")).get(1) );\n    assertEquals(\"not ignored as its\",(String) ((List) m.get(\"descdend\")).get(2) );\n    assertEquals(\"antler\"            ,(String) ((List) m.get(\"descdend\")).get(3) );\n    assertEquals(\"title\"             ,(String) ((List) m.get(\"descdend\")).get(4) );\n    assertEquals(\"Within the body of\",(String) ((List) m.get(\"descdend\")).get(5) );\n    assertEquals(\"inner  as well\"    ,(String) ((List) m.get(\"descdend\")).get(6) );\n  }\n\n","sourceOld":"  @Test\n  public void any_decendent_of_a_child1() {\n    XPathRecordReader rr = new XPathRecordReader(\"/anycd\");\n    rr.addField(\"descdend\", \"/anycd//boo\",         true);\n\n    // same test string as above but checking to see if *all* //boo's are collected\n    String xml=\"<anycd>\\n\"\n             + \"  this <boo>top level</boo> is ignored because it is external to the forEach\\n\"\n             + \"  <status>as is <boo>this element</boo></status>\\n\"\n             + \"  <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    This one is <boo>not ignored as its</boo> inside a forEach\\n\"\n             + \"    <antetitulo><i> big <boo>antler</boo></i></antetitulo>\\n\"\n             + \"    <titulo>  My <i>flattened <boo>title</boo></i> </titulo>\\n\"\n             + \"    <resumen> My summary <i>skip this!</i>  </resumen>\\n\"\n             + \"    <texto>   <boo>Within the body of</boo>My text</texto>\\n\"\n             + \"    <p>Access <boo>inner <i>sub clauses</i> as well</boo></p>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</anycd>\";\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Assert.assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    Assert.assertEquals(\"top level\"         ,(String) ((List) m.get(\"descdend\")).get(0) );\n    Assert.assertEquals(\"this element\"      ,(String) ((List) m.get(\"descdend\")).get(1) );\n    Assert.assertEquals(\"not ignored as its\",(String) ((List) m.get(\"descdend\")).get(2) );\n    Assert.assertEquals(\"antler\"            ,(String) ((List) m.get(\"descdend\")).get(3) );\n    Assert.assertEquals(\"title\"             ,(String) ((List) m.get(\"descdend\")).get(4) );\n    Assert.assertEquals(\"Within the body of\",(String) ((List) m.get(\"descdend\")).get(5) );\n    Assert.assertEquals(\"inner  as well\"    ,(String) ((List) m.get(\"descdend\")).get(6) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAny_decendent_of_a_child1().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#any_decendent_of_a_child1().mjava","sourceNew":"  @Test\n  public void testAny_decendent_of_a_child1() {\n    XPathRecordReader rr = new XPathRecordReader(\"/anycd\");\n    rr.addField(\"descdend\", \"/anycd//boo\",         true);\n\n    // same test string as above but checking to see if *all* //boo's are collected\n    String xml=\"<anycd>\\n\"\n             + \"  this <boo>top level</boo> is ignored because it is external to the forEach\\n\"\n             + \"  <status>as is <boo>this element</boo></status>\\n\"\n             + \"  <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    This one is <boo>not ignored as its</boo> inside a forEach\\n\"\n             + \"    <antetitulo><i> big <boo>antler</boo></i></antetitulo>\\n\"\n             + \"    <titulo>  My <i>flattened <boo>title</boo></i> </titulo>\\n\"\n             + \"    <resumen> My summary <i>skip this!</i>  </resumen>\\n\"\n             + \"    <texto>   <boo>Within the body of</boo>My text</texto>\\n\"\n             + \"    <p>Access <boo>inner <i>sub clauses</i> as well</boo></p>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</anycd>\";\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    assertEquals(\"top level\"         ,(String) ((List) m.get(\"descdend\")).get(0) );\n    assertEquals(\"this element\"      ,(String) ((List) m.get(\"descdend\")).get(1) );\n    assertEquals(\"not ignored as its\",(String) ((List) m.get(\"descdend\")).get(2) );\n    assertEquals(\"antler\"            ,(String) ((List) m.get(\"descdend\")).get(3) );\n    assertEquals(\"title\"             ,(String) ((List) m.get(\"descdend\")).get(4) );\n    assertEquals(\"Within the body of\",(String) ((List) m.get(\"descdend\")).get(5) );\n    assertEquals(\"inner  as well\"    ,(String) ((List) m.get(\"descdend\")).get(6) );\n  }\n\n","sourceOld":"  @Test\n  public void any_decendent_of_a_child1() {\n    XPathRecordReader rr = new XPathRecordReader(\"/anycd\");\n    rr.addField(\"descdend\", \"/anycd//boo\",         true);\n\n    // same test string as above but checking to see if *all* //boo's are collected\n    String xml=\"<anycd>\\n\"\n             + \"  this <boo>top level</boo> is ignored because it is external to the forEach\\n\"\n             + \"  <status>as is <boo>this element</boo></status>\\n\"\n             + \"  <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    This one is <boo>not ignored as its</boo> inside a forEach\\n\"\n             + \"    <antetitulo><i> big <boo>antler</boo></i></antetitulo>\\n\"\n             + \"    <titulo>  My <i>flattened <boo>title</boo></i> </titulo>\\n\"\n             + \"    <resumen> My summary <i>skip this!</i>  </resumen>\\n\"\n             + \"    <texto>   <boo>Within the body of</boo>My text</texto>\\n\"\n             + \"    <p>Access <boo>inner <i>sub clauses</i> as well</boo></p>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</anycd>\";\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Assert.assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    Assert.assertEquals(\"top level\"         ,(String) ((List) m.get(\"descdend\")).get(0) );\n    Assert.assertEquals(\"this element\"      ,(String) ((List) m.get(\"descdend\")).get(1) );\n    Assert.assertEquals(\"not ignored as its\",(String) ((List) m.get(\"descdend\")).get(2) );\n    Assert.assertEquals(\"antler\"            ,(String) ((List) m.get(\"descdend\")).get(3) );\n    Assert.assertEquals(\"title\"             ,(String) ((List) m.get(\"descdend\")).get(4) );\n    Assert.assertEquals(\"Within the body of\",(String) ((List) m.get(\"descdend\")).get(5) );\n    Assert.assertEquals(\"inner  as well\"    ,(String) ((List) m.get(\"descdend\")).get(6) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#any_decendent_of_a_child1().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void any_decendent_of_a_child1() {\n    XPathRecordReader rr = new XPathRecordReader(\"/anycd\");\n    rr.addField(\"descdend\", \"/anycd//boo\",         true);\n\n    // same test string as above but checking to see if *all* //boo's are collected\n    String xml=\"<anycd>\\n\"\n             + \"  this <boo>top level</boo> is ignored because it is external to the forEach\\n\"\n             + \"  <status>as is <boo>this element</boo></status>\\n\"\n             + \"  <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    This one is <boo>not ignored as its</boo> inside a forEach\\n\"\n             + \"    <antetitulo><i> big <boo>antler</boo></i></antetitulo>\\n\"\n             + \"    <titulo>  My <i>flattened <boo>title</boo></i> </titulo>\\n\"\n             + \"    <resumen> My summary <i>skip this!</i>  </resumen>\\n\"\n             + \"    <texto>   <boo>Within the body of</boo>My text</texto>\\n\"\n             + \"    <p>Access <boo>inner <i>sub clauses</i> as well</boo></p>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</anycd>\";\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    Assert.assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    Assert.assertEquals(\"top level\"         ,(String) ((List) m.get(\"descdend\")).get(0) );\n    Assert.assertEquals(\"this element\"      ,(String) ((List) m.get(\"descdend\")).get(1) );\n    Assert.assertEquals(\"not ignored as its\",(String) ((List) m.get(\"descdend\")).get(2) );\n    Assert.assertEquals(\"antler\"            ,(String) ((List) m.get(\"descdend\")).get(3) );\n    Assert.assertEquals(\"title\"             ,(String) ((List) m.get(\"descdend\")).get(4) );\n    Assert.assertEquals(\"Within the body of\",(String) ((List) m.get(\"descdend\")).get(5) );\n    Assert.assertEquals(\"inner  as well\"    ,(String) ((List) m.get(\"descdend\")).get(6) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1da8d55113b689b06716246649de6f62430f15c0","fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead"],"fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead":["1da8d55113b689b06716246649de6f62430f15c0"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["1da8d55113b689b06716246649de6f62430f15c0","fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"fcd6cfe8abcb5337766abe79cabfff7f9c1f6ead":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}