{"path":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#testNullPointerException().mjava","commits":[{"id":"d2da200553d43622ccbeef29f3c1b6223fec4d83","date":1331145186,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#testNullPointerException().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-3831\n  public void testNullPointerException() throws IOException {\n    RegexpQuery regex = new RegexpQuery(new Term(\"field\", \"worl.\"));\n    SpanQuery wrappedquery = new SpanMultiTermQueryWrapper<RegexpQuery>(regex);\n        \n    MemoryIndex mindex = new MemoryIndex();\n    mindex.addField(\"field\", new MockAnalyzer(random).tokenStream(\"field\", new StringReader(\"hello there\")));\n\n    // This throws an NPE\n    assertEquals(0, mindex.search(wrappedquery), 0.00001f);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#testNullPointerException().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-3831\n  public void testNullPointerException() throws IOException {\n    RegexpQuery regex = new RegexpQuery(new Term(\"field\", \"worl.\"));\n    SpanQuery wrappedquery = new SpanMultiTermQueryWrapper<RegexpQuery>(regex);\n        \n    MemoryIndex mindex = new MemoryIndex();\n    mindex.addField(\"field\", new MockAnalyzer(random).tokenStream(\"field\", new StringReader(\"hello there\")));\n\n    // This throws an NPE\n    assertEquals(0, mindex.search(wrappedquery), 0.00001f);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#testNullPointerException().mjava","pathOld":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#testNullPointerException().mjava","sourceNew":"  // LUCENE-3831\n  public void testNullPointerException() throws IOException {\n    RegexpQuery regex = new RegexpQuery(new Term(\"field\", \"worl.\"));\n    SpanQuery wrappedquery = new SpanMultiTermQueryWrapper<RegexpQuery>(regex);\n        \n    MemoryIndex mindex = new MemoryIndex();\n    mindex.addField(\"field\", new MockAnalyzer(random()).tokenStream(\"field\", new StringReader(\"hello there\")));\n\n    // This throws an NPE\n    assertEquals(0, mindex.search(wrappedquery), 0.00001f);\n  }\n\n","sourceOld":"  // LUCENE-3831\n  public void testNullPointerException() throws IOException {\n    RegexpQuery regex = new RegexpQuery(new Term(\"field\", \"worl.\"));\n    SpanQuery wrappedquery = new SpanMultiTermQueryWrapper<RegexpQuery>(regex);\n        \n    MemoryIndex mindex = new MemoryIndex();\n    mindex.addField(\"field\", new MockAnalyzer(random).tokenStream(\"field\", new StringReader(\"hello there\")));\n\n    // This throws an NPE\n    assertEquals(0, mindex.search(wrappedquery), 0.00001f);\n  }\n\n","bugFix":null,"bugIntro":["c83d6c4335f31cae14f625a222bc842f20073dcd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#testNullPointerException().mjava","pathOld":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#testNullPointerException().mjava","sourceNew":"  // LUCENE-3831\n  public void testNullPointerException() throws IOException {\n    RegexpQuery regex = new RegexpQuery(new Term(\"field\", \"worl.\"));\n    SpanQuery wrappedquery = new SpanMultiTermQueryWrapper<RegexpQuery>(regex);\n        \n    MemoryIndex mindex = new MemoryIndex();\n    mindex.addField(\"field\", new MockAnalyzer(random()).tokenStream(\"field\", new StringReader(\"hello there\")));\n\n    // This throws an NPE\n    assertEquals(0, mindex.search(wrappedquery), 0.00001f);\n  }\n\n","sourceOld":"  // LUCENE-3831\n  public void testNullPointerException() throws IOException {\n    RegexpQuery regex = new RegexpQuery(new Term(\"field\", \"worl.\"));\n    SpanQuery wrappedquery = new SpanMultiTermQueryWrapper<RegexpQuery>(regex);\n        \n    MemoryIndex mindex = new MemoryIndex();\n    mindex.addField(\"field\", new MockAnalyzer(random()).tokenStream(\"field\", new StringReader(\"hello there\")));\n\n    // This throws an NPE\n    assertEquals(0, mindex.search(wrappedquery), 0.00001f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d2da200553d43622ccbeef29f3c1b6223fec4d83"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"d2da200553d43622ccbeef29f3c1b6223fec4d83":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["d2da200553d43622ccbeef29f3c1b6223fec4d83"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d2da200553d43622ccbeef29f3c1b6223fec4d83":["38e3b736c7ca086d61b7dbb841c905ee115490da","629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38e3b736c7ca086d61b7dbb841c905ee115490da","d2da200553d43622ccbeef29f3c1b6223fec4d83"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}