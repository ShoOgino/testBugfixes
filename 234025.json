{"path":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openCompoundInput(String,int).mjava","commits":[{"id":"0aab6e810b4b0d3743d6a048be0602801f4b3920","date":1308671625,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openCompoundInput(String,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileReader#createOutput(String).mjava","sourceNew":"  /** Not implemented\n   * @throws UnsupportedOperationException */\n  @Override\n  public final CompoundFileDirectory openCompoundInput(String name, int bufferSize) throws IOException {\n    // NOTE: final to make nested compounding impossible.\n    throw new UnsupportedOperationException();\n  }\n\n","sourceOld":"  /** Not implemented\n   * @throws UnsupportedOperationException */\n  @Override\n  public IndexOutput createOutput(String name) {\n    throw new UnsupportedOperationException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openCompoundInput(String,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompoundFileReader#createOutput(String).mjava","sourceNew":"  /** Not implemented\n   * @throws UnsupportedOperationException */\n  @Override\n  public final CompoundFileDirectory openCompoundInput(String name, int bufferSize) throws IOException {\n    // NOTE: final to make nested compounding impossible.\n    throw new UnsupportedOperationException();\n  }\n\n","sourceOld":"  /** Not implemented\n   * @throws UnsupportedOperationException */\n  @Override\n  public IndexOutput createOutput(String name) {\n    throw new UnsupportedOperationException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc0b8069918917b33f361011899a1af0cdd2d462","date":1310039336,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openCompoundInput(String,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openCompoundInput(String,int).mjava","sourceNew":"  @Override\n  public CompoundFileDirectory openCompoundInput(String name, int bufferSize) throws IOException {\n    FileEntry fileEntry = this.entries.get(IndexFileNames.stripSegmentName(name));\n    if (fileEntry == null) {\n      throw new FileNotFoundException(\"file \" + name + \" does not exists in this CFS\");\n    }\n    return new NestedCompoundFileDirectory(name, bufferSize, fileEntry.offset, fileEntry.length);\n  }\n\n","sourceOld":"  /** Not implemented\n   * @throws UnsupportedOperationException */\n  @Override\n  public final CompoundFileDirectory openCompoundInput(String name, int bufferSize) throws IOException {\n    // NOTE: final to make nested compounding impossible.\n    throw new UnsupportedOperationException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openCompoundInput(String,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openCompoundInput(String,int).mjava","sourceNew":"  @Override\n  public CompoundFileDirectory openCompoundInput(String name, int bufferSize) throws IOException {\n    FileEntry fileEntry = this.entries.get(IndexFileNames.stripSegmentName(name));\n    if (fileEntry == null) {\n      throw new FileNotFoundException(\"file \" + name + \" does not exists in this CFS\");\n    }\n    return new NestedCompoundFileDirectory(name, bufferSize, fileEntry.offset, fileEntry.length);\n  }\n\n","sourceOld":"  /** Not implemented\n   * @throws UnsupportedOperationException */\n  @Override\n  public final CompoundFileDirectory openCompoundInput(String name, int bufferSize) throws IOException {\n    // NOTE: final to make nested compounding impossible.\n    throw new UnsupportedOperationException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openCompoundInput(String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openCompoundInput(String,int).mjava","sourceNew":"  @Override\n  public CompoundFileDirectory openCompoundInput(String name, IOContext context) throws IOException {\n    FileEntry fileEntry = this.entries.get(IndexFileNames.stripSegmentName(name));\n    if (fileEntry == null) {\n      throw new FileNotFoundException(\"file \" + name + \" does not exists in this CFS\");\n    }\n    return new NestedCompoundFileDirectory(name, context, fileEntry.offset, fileEntry.length);\n  }\n\n","sourceOld":"  @Override\n  public CompoundFileDirectory openCompoundInput(String name, int bufferSize) throws IOException {\n    FileEntry fileEntry = this.entries.get(IndexFileNames.stripSegmentName(name));\n    if (fileEntry == null) {\n      throw new FileNotFoundException(\"file \" + name + \" does not exists in this CFS\");\n    }\n    return new NestedCompoundFileDirectory(name, bufferSize, fileEntry.offset, fileEntry.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openCompoundInput(String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#openCompoundInput(String,int).mjava","sourceNew":"  @Override\n  public CompoundFileDirectory openCompoundInput(String name, IOContext context) throws IOException {\n    FileEntry fileEntry = this.entries.get(IndexFileNames.stripSegmentName(name));\n    if (fileEntry == null) {\n      throw new FileNotFoundException(\"file \" + name + \" does not exists in this CFS\");\n    }\n    return new NestedCompoundFileDirectory(name, context, fileEntry.offset, fileEntry.length);\n  }\n\n","sourceOld":"  @Override\n  public CompoundFileDirectory openCompoundInput(String name, int bufferSize) throws IOException {\n    FileEntry fileEntry = this.entries.get(IndexFileNames.stripSegmentName(name));\n    if (fileEntry == null) {\n      throw new FileNotFoundException(\"file \" + name + \" does not exists in this CFS\");\n    }\n    return new NestedCompoundFileDirectory(name, bufferSize, fileEntry.offset, fileEntry.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f0b9507caf22f292ac0e5e59f62db4275adf4511":["2553b00f699380c64959ccb27991289aae87be2e","bc0b8069918917b33f361011899a1af0cdd2d462"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bc0b8069918917b33f361011899a1af0cdd2d462":["0aab6e810b4b0d3743d6a048be0602801f4b3920"],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["f0b9507caf22f292ac0e5e59f62db4275adf4511","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["bc0b8069918917b33f361011899a1af0cdd2d462","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2553b00f699380c64959ccb27991289aae87be2e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0aab6e810b4b0d3743d6a048be0602801f4b3920"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddc4c914be86e34b54f70023f45a60fa7f04e929"]},"commit2Childs":{"f0b9507caf22f292ac0e5e59f62db4275adf4511":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0aab6e810b4b0d3743d6a048be0602801f4b3920","ddc4c914be86e34b54f70023f45a60fa7f04e929","2553b00f699380c64959ccb27991289aae87be2e"],"bc0b8069918917b33f361011899a1af0cdd2d462":["f0b9507caf22f292ac0e5e59f62db4275adf4511","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["bc0b8069918917b33f361011899a1af0cdd2d462","2553b00f699380c64959ccb27991289aae87be2e"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2553b00f699380c64959ccb27991289aae87be2e":["f0b9507caf22f292ac0e5e59f62db4275adf4511"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}