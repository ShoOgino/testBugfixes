{"path":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","commits":[{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler(overseer.getCoreContainer().getUpdateShardHandler().getDefaultHttpClient());\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","bugFix":["4e6b620c271c84c0f14919eec7b90083b292ee51"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86968c6cf51846df861b8f29bd85b6d9a7c9f19c","date":1591481497,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, @SuppressWarnings({\"rawtypes\"})NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler(overseer.getCoreContainer().getUpdateShardHandler().getDefaultHttpClient());\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler(overseer.getCoreContainer().getUpdateShardHandler().getDefaultHttpClient());\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1964c059f45ae1de1877f9f0fe3ca327ea4218e8","date":1594088246,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, @SuppressWarnings({\"rawtypes\"})NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, @SuppressWarnings({\"rawtypes\"})NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler(overseer.getCoreContainer().getUpdateShardHandler().getDefaultHttpClient());\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c526352db87264a72a7a9ad68c1b769b81e54305","date":1598780188,"type":5,"author":"Ilan Ginzburg","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,CloudConfig,ZkNodeProps,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, CloudConfig cloudConfig, ZkNodeProps message, @SuppressWarnings({\"rawtypes\"})NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, @SuppressWarnings({\"rawtypes\"})NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7b17e79a71117668ecbf8d3417c876e41396565","date":1598973672,"type":1,"author":"Ilan Ginzburg","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,CloudConfig,ZkNodeProps,NamedList).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, @SuppressWarnings({\"rawtypes\"})NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, CloudConfig cloudConfig, ZkNodeProps message, @SuppressWarnings({\"rawtypes\"})NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7b17e79a71117668ecbf8d3417c876e41396565":["c526352db87264a72a7a9ad68c1b769b81e54305"],"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"1964c059f45ae1de1877f9f0fe3ca327ea4218e8":["86968c6cf51846df861b8f29bd85b6d9a7c9f19c"],"c526352db87264a72a7a9ad68c1b769b81e54305":["1964c059f45ae1de1877f9f0fe3ca327ea4218e8"],"86968c6cf51846df861b8f29bd85b6d9a7c9f19c":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7b17e79a71117668ecbf8d3417c876e41396565"]},"commit2Childs":{"e7b17e79a71117668ecbf8d3417c876e41396565":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b94236357aaa22b76c10629851fe4e376e0cea82":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"1964c059f45ae1de1877f9f0fe3ca327ea4218e8":["c526352db87264a72a7a9ad68c1b769b81e54305"],"c526352db87264a72a7a9ad68c1b769b81e54305":["e7b17e79a71117668ecbf8d3417c876e41396565"],"86968c6cf51846df861b8f29bd85b6d9a7c9f19c":["1964c059f45ae1de1877f9f0fe3ca327ea4218e8"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["86968c6cf51846df861b8f29bd85b6d9a7c9f19c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}