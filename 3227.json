{"path":"src/java/org/apache/lucene/search/Similarity#idf(int,int).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Similarity#idf(int,int).mjava","pathOld":"/dev/null","sourceNew":"  static final float idf(int docFreq, int numDocs) {\n    return (float)(Math.log(numDocs/(double)(docFreq+1)) + 1.0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f5efa46fb27648cd98137d9898d819e115911bc","date":1036690287,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Similarity#idf(int,int).mjava","pathOld":"src/java/org/apache/lucene/search/Similarity#idf(int,int).mjava","sourceNew":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implemenations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  protected abstract float idf(int docFreq, int numDocs);\n\n","sourceOld":"  static final float idf(int docFreq, int numDocs) {\n    return (float)(Math.log(numDocs/(double)(docFreq+1)) + 1.0);\n  }\n\n","bugFix":null,"bugIntro":["b799defcfda6d303cbb180917bf1e749089adf42","b799defcfda6d303cbb180917bf1e749089adf42","b799defcfda6d303cbb180917bf1e749089adf42","b799defcfda6d303cbb180917bf1e749089adf42","b799defcfda6d303cbb180917bf1e749089adf42","b799defcfda6d303cbb180917bf1e749089adf42","b799defcfda6d303cbb180917bf1e749089adf42","b799defcfda6d303cbb180917bf1e749089adf42","b799defcfda6d303cbb180917bf1e749089adf42"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d25f1c3708a6b6aebb0c7e969100b5a13c418733","date":1066410957,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Similarity#idf(int,int).mjava","pathOld":"src/java/org/apache/lucene/search/Similarity#idf(int,int).mjava","sourceNew":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implemenations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(int docFreq, int numDocs);\n\n","sourceOld":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implemenations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  protected abstract float idf(int docFreq, int numDocs);\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"259b241bfd02b264ef7ac3f599b657397c583613","date":1098914342,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Similarity#idf(int,int).mjava","pathOld":"src/java/org/apache/lucene/search/Similarity#idf(int,int).mjava","sourceNew":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(int docFreq, int numDocs);\n\n","sourceOld":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implemenations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(int docFreq, int numDocs);\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/Similarity#idf(int,int).mjava","pathOld":"src/java/org/apache/lucene/search/Similarity#idf(int,int).mjava","sourceNew":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(int docFreq, int numDocs);\n\n","sourceOld":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(int docFreq, int numDocs);\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d25f1c3708a6b6aebb0c7e969100b5a13c418733":["6f5efa46fb27648cd98137d9898d819e115911bc"],"259b241bfd02b264ef7ac3f599b657397c583613":["d25f1c3708a6b6aebb0c7e969100b5a13c418733"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6f5efa46fb27648cd98137d9898d819e115911bc":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["259b241bfd02b264ef7ac3f599b657397c583613"]},"commit2Childs":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["6f5efa46fb27648cd98137d9898d819e115911bc"],"d25f1c3708a6b6aebb0c7e969100b5a13c418733":["259b241bfd02b264ef7ac3f599b657397c583613"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"259b241bfd02b264ef7ac3f599b657397c583613":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"6f5efa46fb27648cd98137d9898d819e115911bc":["d25f1c3708a6b6aebb0c7e969100b5a13c418733"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}