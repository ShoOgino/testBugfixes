{"path":"src/java/org/apache/lucene/analysis/StopwordAnalyzerBase#StopwordAnalyzerBase(Version,Set[#]).mjava","commits":[{"id":"ddc5fbfd4c64963aba52713a4496522540294d69","date":1262508497,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopwordAnalyzerBase#StopwordAnalyzerBase(Version,Set[#]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new instance initialized with the given stopword set\n   * \n   * @param version\n   *          the Lucene version for cross version compatibility\n   * @param stopwords\n   *          the analyzer's stopword set\n   */\n  protected StopwordAnalyzerBase(final Version version, final Set<?> stopwords) {\n    /*\n     * no need to call\n     * setOverridesTokenStreamMethod(StopwordAnalyzerBase.class); here, both\n     * tokenStream methods are final in this class.\n     */\n    matchVersion = version;\n    // analyzers should use char array set for stopwords!\n    this.stopwords = stopwords == null ? CharArraySet.EMPTY_SET : CharArraySet\n        .unmodifiableSet(CharArraySet.copy(version, stopwords));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24c1288acaee3fa0fa246aa45f305b8d7fb0ac5e","date":1263329721,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopwordAnalyzerBase#StopwordAnalyzerBase(Version,Set[#]).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopwordAnalyzerBase#StopwordAnalyzerBase(Version,Set[#]).mjava","sourceNew":"  /**\n   * Creates a new instance initialized with the given stopword set\n   * \n   * @param version\n   *          the Lucene version for cross version compatibility\n   * @param stopwords\n   *          the analyzer's stopword set\n   */\n  protected StopwordAnalyzerBase(final Version version, final Set<?> stopwords) {\n    matchVersion = version;\n    // analyzers should use char array set for stopwords!\n    this.stopwords = stopwords == null ? CharArraySet.EMPTY_SET : CharArraySet\n        .unmodifiableSet(CharArraySet.copy(version, stopwords));\n  }\n\n","sourceOld":"  /**\n   * Creates a new instance initialized with the given stopword set\n   * \n   * @param version\n   *          the Lucene version for cross version compatibility\n   * @param stopwords\n   *          the analyzer's stopword set\n   */\n  protected StopwordAnalyzerBase(final Version version, final Set<?> stopwords) {\n    /*\n     * no need to call\n     * setOverridesTokenStreamMethod(StopwordAnalyzerBase.class); here, both\n     * tokenStream methods are final in this class.\n     */\n    matchVersion = version;\n    // analyzers should use char array set for stopwords!\n    this.stopwords = stopwords == null ? CharArraySet.EMPTY_SET : CharArraySet\n        .unmodifiableSet(CharArraySet.copy(version, stopwords));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/StopwordAnalyzerBase#StopwordAnalyzerBase(Version,Set[#]).mjava","pathOld":"src/java/org/apache/lucene/analysis/StopwordAnalyzerBase#StopwordAnalyzerBase(Version,Set[#]).mjava","sourceNew":"  /**\n   * Creates a new instance initialized with the given stopword set\n   * \n   * @param version\n   *          the Lucene version for cross version compatibility\n   * @param stopwords\n   *          the analyzer's stopword set\n   */\n  protected StopwordAnalyzerBase(final Version version, final Set<?> stopwords) {\n    matchVersion = version;\n    // analyzers should use char array set for stopwords!\n    this.stopwords = stopwords == null ? CharArraySet.EMPTY_SET : CharArraySet\n        .unmodifiableSet(CharArraySet.copy(version, stopwords));\n  }\n\n","sourceOld":"  /**\n   * Creates a new instance initialized with the given stopword set\n   * \n   * @param version\n   *          the Lucene version for cross version compatibility\n   * @param stopwords\n   *          the analyzer's stopword set\n   */\n  protected StopwordAnalyzerBase(final Version version, final Set<?> stopwords) {\n    matchVersion = version;\n    // analyzers should use char array set for stopwords!\n    this.stopwords = stopwords == null ? CharArraySet.EMPTY_SET : CharArraySet\n        .unmodifiableSet(CharArraySet.copy(version, stopwords));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24c1288acaee3fa0fa246aa45f305b8d7fb0ac5e":["ddc5fbfd4c64963aba52713a4496522540294d69"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ddc5fbfd4c64963aba52713a4496522540294d69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["24c1288acaee3fa0fa246aa45f305b8d7fb0ac5e"]},"commit2Childs":{"24c1288acaee3fa0fa246aa45f305b8d7fb0ac5e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ddc5fbfd4c64963aba52713a4496522540294d69"],"ddc5fbfd4c64963aba52713a4496522540294d69":["24c1288acaee3fa0fa246aa45f305b8d7fb0ac5e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}