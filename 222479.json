{"path":"solr/core/src/java/org/apache/solr/core/CoreContainer#replaceSchema(SolrCore,IndexSchema,IndexSchema).mjava","commits":[{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#replaceSchema(SolrCore,IndexSchema,IndexSchema).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Removes all references to the oldSchema from the schema cache; places an entry\n   * in the schema cache for the newSchema; and replaces references to the oldSchema\n   * with references to the newSchema in all registered cores.\n   * \n   * @param initiatingCore The initiating core; schema references doesn't need to be changed here\n   * @param oldSchema The schema to remove references to\n   * @param newSchema The schema to add references to\n   */\n  public void replaceSchema(SolrCore initiatingCore, IndexSchema oldSchema, IndexSchema newSchema) {\n    if (null != indexSchemaCache) { // isShareSchema() == true\n      // Remove references to the oldSchema from the schema cache\n      for (Iterator<Map.Entry<String,IndexSchema>> iter = indexSchemaCache.entrySet().iterator() ; iter.hasNext() ; ) {\n        Map.Entry<String,IndexSchema> entry = iter.next();\n        if (oldSchema == entry.getValue()) {\n          iter.remove();\n        }\n      }\n\n      // Cache the new schema\n      final String newSchemaResourceName\n          = IndexSchemaFactory.getResourceNameToBeUsed(newSchema.getResourceName(), initiatingCore.getSolrConfig());\n      File schemaFile = new File(newSchemaResourceName);\n      if ( ! schemaFile.isAbsolute()) {\n        schemaFile = new File(initiatingCore.getResourceLoader().getConfigDir(), schemaFile.getPath());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        indexSchemaCache.put(key, newSchema);\n      }\n\n      // Replace oldSchema references with newSchema references in all active cores\n      for (String coreName : coreMaps.getAllCoreNames()) {\n        SolrCore activeCore = coreMaps.getCoreFromAnyList(coreName);\n        if (null != activeCore) {\n          if (initiatingCore != activeCore) {\n            if (oldSchema == activeCore.getLatestSchema()) {\n              activeCore.setLatestSchema(newSchema);\n            }\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0","date":1366659310,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#replaceSchema(SolrCore,IndexSchema,IndexSchema).mjava","sourceNew":null,"sourceOld":"  /**\n   * Removes all references to the oldSchema from the schema cache; places an entry\n   * in the schema cache for the newSchema; and replaces references to the oldSchema\n   * with references to the newSchema in all registered cores.\n   * \n   * @param initiatingCore The initiating core; schema references doesn't need to be changed here\n   * @param oldSchema The schema to remove references to\n   * @param newSchema The schema to add references to\n   */\n  public void replaceSchema(SolrCore initiatingCore, IndexSchema oldSchema, IndexSchema newSchema) {\n    if (null != indexSchemaCache) { // isShareSchema() == true\n      // Remove references to the oldSchema from the schema cache\n      for (Iterator<Map.Entry<String,IndexSchema>> iter = indexSchemaCache.entrySet().iterator() ; iter.hasNext() ; ) {\n        Map.Entry<String,IndexSchema> entry = iter.next();\n        if (oldSchema == entry.getValue()) {\n          iter.remove();\n        }\n      }\n\n      // Cache the new schema\n      final String newSchemaResourceName\n          = IndexSchemaFactory.getResourceNameToBeUsed(newSchema.getResourceName(), initiatingCore.getSolrConfig());\n      File schemaFile = new File(newSchemaResourceName);\n      if ( ! schemaFile.isAbsolute()) {\n        schemaFile = new File(initiatingCore.getResourceLoader().getConfigDir(), schemaFile.getPath());\n      }\n      if (schemaFile.exists()) {\n        String key = schemaFile.getAbsolutePath()\n            + \":\"\n            + new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.ROOT).format(new Date(\n            schemaFile.lastModified()));\n        indexSchemaCache.put(key, newSchema);\n      }\n\n      // Replace oldSchema references with newSchema references in all active cores\n      for (String coreName : coreMaps.getAllCoreNames()) {\n        SolrCore activeCore = coreMaps.getCoreFromAnyList(coreName);\n        if (null != activeCore) {\n          if (initiatingCore != activeCore) {\n            if (oldSchema == activeCore.getLatestSchema()) {\n              activeCore.setLatestSchema(newSchema);\n            }\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0":["08970e5b8411182a29412c177eff67ec1110095b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"08970e5b8411182a29412c177eff67ec1110095b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["08970e5b8411182a29412c177eff67ec1110095b"],"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"08970e5b8411182a29412c177eff67ec1110095b":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}