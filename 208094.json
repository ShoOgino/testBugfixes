{"path":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#createTempOutput(String,String,IOContext).mjava","commits":[{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#createTempOutput(String,String,IOContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public IndexOutput createTempOutput(String prefix, String suffix, IOContext context) throws IOException {\n    ensureOpen();\n    while (true) {\n      String name = prefix + tempFileRandom.nextInt(Integer.MAX_VALUE) + \".\" + suffix;\n      try {\n        return new FSIndexOutput(name, StandardOpenOption.CREATE, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW);\n      } catch (FileAlreadyExistsException faee) {\n        // Retry with next random name\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["57deae53907a4ece55c7e78d3aab19592ad083a5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"57deae53907a4ece55c7e78d3aab19592ad083a5","date":1446894468,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#createTempOutput(String,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#createTempOutput(String,String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createTempOutput(String prefix, String suffix, IOContext context) throws IOException {\n    ensureOpen();\n    while (true) {\n      try {\n        String name = IndexFileNames.segmentFileName(prefix, suffix + \"_\" + Long.toString(nextTempFileCounter.getAndIncrement(), Character.MAX_RADIX), \"tmp\");\n        return new FSIndexOutput(name,\n                                 StandardOpenOption.CREATE, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW);\n      } catch (FileAlreadyExistsException faee) {\n        // Retry with next random name\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createTempOutput(String prefix, String suffix, IOContext context) throws IOException {\n    ensureOpen();\n    while (true) {\n      String name = prefix + tempFileRandom.nextInt(Integer.MAX_VALUE) + \".\" + suffix;\n      try {\n        return new FSIndexOutput(name, StandardOpenOption.CREATE, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW);\n      } catch (FileAlreadyExistsException faee) {\n        // Retry with next random name\n      }\n    }\n  }\n\n","bugFix":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"bugIntro":["11c6df42fb3eba174c3ca0d9a5194eaecd893b77"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"44a0466296f4b2d9deac60e3e524628c97aa5191","date":1454532248,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#createTempOutput(String,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#createTempOutput(String,String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createTempOutput(String prefix, String suffix, IOContext context) throws IOException {\n    ensureOpen();\n    while (true) {\n      try {\n        String name = IndexFileNames.segmentFileName(prefix, suffix + \"_\" + Long.toString(nextTempFileCounter.getAndIncrement(), Character.MAX_RADIX), \"tmp\");\n        return new FSIndexOutput(name,\n                                 StandardOpenOption.CREATE, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW);\n      } catch (FileAlreadyExistsException faee) {\n        // Retry with next incremented name\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createTempOutput(String prefix, String suffix, IOContext context) throws IOException {\n    ensureOpen();\n    while (true) {\n      try {\n        String name = IndexFileNames.segmentFileName(prefix, suffix + \"_\" + Long.toString(nextTempFileCounter.getAndIncrement(), Character.MAX_RADIX), \"tmp\");\n        return new FSIndexOutput(name,\n                                 StandardOpenOption.CREATE, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW);\n      } catch (FileAlreadyExistsException faee) {\n        // Retry with next random name\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"240cd0f67652ccfb87d7c5f8b2486d0f42012daa","date":1454536570,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#createTempOutput(String,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#createTempOutput(String,String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createTempOutput(String prefix, String suffix, IOContext context) throws IOException {\n    ensureOpen();\n    maybeDeletePendingFiles();\n    while (true) {\n      try {\n        String name = IndexFileNames.segmentFileName(prefix, suffix + \"_\" + Long.toString(nextTempFileCounter.getAndIncrement(), Character.MAX_RADIX), \"tmp\");\n        if (pendingDeletes.contains(name)) {\n          continue;\n        }\n        return new FSIndexOutput(name,\n                                 StandardOpenOption.CREATE, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW);\n      } catch (FileAlreadyExistsException faee) {\n        // Retry with next incremented name\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createTempOutput(String prefix, String suffix, IOContext context) throws IOException {\n    ensureOpen();\n    while (true) {\n      try {\n        String name = IndexFileNames.segmentFileName(prefix, suffix + \"_\" + Long.toString(nextTempFileCounter.getAndIncrement(), Character.MAX_RADIX), \"tmp\");\n        return new FSIndexOutput(name,\n                                 StandardOpenOption.CREATE, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW);\n      } catch (FileAlreadyExistsException faee) {\n        // Retry with next incremented name\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#createTempOutput(String,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#createTempOutput(String,String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createTempOutput(String prefix, String suffix, IOContext context) throws IOException {\n    ensureOpen();\n    maybeDeletePendingFiles();\n    while (true) {\n      try {\n        String name = IndexFileNames.segmentFileName(prefix, suffix + \"_\" + Long.toString(nextTempFileCounter.getAndIncrement(), Character.MAX_RADIX), \"tmp\");\n        if (pendingDeletes.contains(name)) {\n          continue;\n        }\n        return new FSIndexOutput(name,\n                                 StandardOpenOption.CREATE, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW);\n      } catch (FileAlreadyExistsException faee) {\n        // Retry with next incremented name\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createTempOutput(String prefix, String suffix, IOContext context) throws IOException {\n    ensureOpen();\n    while (true) {\n      try {\n        String name = IndexFileNames.segmentFileName(prefix, suffix + \"_\" + Long.toString(nextTempFileCounter.getAndIncrement(), Character.MAX_RADIX), \"tmp\");\n        return new FSIndexOutput(name,\n                                 StandardOpenOption.CREATE, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW);\n      } catch (FileAlreadyExistsException faee) {\n        // Retry with next random name\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#createTempOutput(String,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#createTempOutput(String,String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createTempOutput(String prefix, String suffix, IOContext context) throws IOException {\n    ensureOpen();\n    maybeDeletePendingFiles();\n    while (true) {\n      try {\n        String name = IndexFileNames.segmentFileName(prefix, suffix + \"_\" + Long.toString(nextTempFileCounter.getAndIncrement(), Character.MAX_RADIX), \"tmp\");\n        if (pendingDeletes.contains(name)) {\n          continue;\n        }\n        return new FSIndexOutput(name,\n                                 StandardOpenOption.CREATE, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW);\n      } catch (FileAlreadyExistsException faee) {\n        // Retry with next incremented name\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createTempOutput(String prefix, String suffix, IOContext context) throws IOException {\n    ensureOpen();\n    while (true) {\n      try {\n        String name = IndexFileNames.segmentFileName(prefix, suffix + \"_\" + Long.toString(nextTempFileCounter.getAndIncrement(), Character.MAX_RADIX), \"tmp\");\n        return new FSIndexOutput(name,\n                                 StandardOpenOption.CREATE, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW);\n      } catch (FileAlreadyExistsException faee) {\n        // Retry with next random name\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#createTempOutput(String,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#createTempOutput(String,String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createTempOutput(String prefix, String suffix, IOContext context) throws IOException {\n    ensureOpen();\n    maybeDeletePendingFiles();\n    while (true) {\n      try {\n        String name = IndexFileNames.segmentFileName(prefix, suffix + \"_\" + Long.toString(nextTempFileCounter.getAndIncrement(), Character.MAX_RADIX), \"tmp\");\n        if (pendingDeletes.contains(name)) {\n          continue;\n        }\n        return new FSIndexOutput(name,\n                                 StandardOpenOption.CREATE, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW);\n      } catch (FileAlreadyExistsException faee) {\n        // Retry with next incremented name\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createTempOutput(String prefix, String suffix, IOContext context) throws IOException {\n    ensureOpen();\n    while (true) {\n      try {\n        String name = IndexFileNames.segmentFileName(prefix, suffix + \"_\" + Long.toString(nextTempFileCounter.getAndIncrement(), Character.MAX_RADIX), \"tmp\");\n        return new FSIndexOutput(name,\n                                 StandardOpenOption.CREATE, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW);\n      } catch (FileAlreadyExistsException faee) {\n        // Retry with next random name\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"11c6df42fb3eba174c3ca0d9a5194eaecd893b77","date":1465931757,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#createTempOutput(String,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#createTempOutput(String,String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createTempOutput(String prefix, String suffix, IOContext context) throws IOException {\n    ensureOpen();\n    maybeDeletePendingFiles();\n    while (true) {\n      try {\n        String name = IndexFileNames.segmentFileName(prefix, suffix + \"_\" + Long.toString(nextTempFileCounter.getAndIncrement(), Character.MAX_RADIX), \"tmp\");\n        if (pendingDeletes.contains(name)) {\n          continue;\n        }\n        return new FSIndexOutput(name,\n                                 StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW);\n      } catch (FileAlreadyExistsException faee) {\n        // Retry with next incremented name\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createTempOutput(String prefix, String suffix, IOContext context) throws IOException {\n    ensureOpen();\n    maybeDeletePendingFiles();\n    while (true) {\n      try {\n        String name = IndexFileNames.segmentFileName(prefix, suffix + \"_\" + Long.toString(nextTempFileCounter.getAndIncrement(), Character.MAX_RADIX), \"tmp\");\n        if (pendingDeletes.contains(name)) {\n          continue;\n        }\n        return new FSIndexOutput(name,\n                                 StandardOpenOption.CREATE, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW);\n      } catch (FileAlreadyExistsException faee) {\n        // Retry with next incremented name\n      }\n    }\n  }\n\n","bugFix":["57deae53907a4ece55c7e78d3aab19592ad083a5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#createTempOutput(String,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#createTempOutput(String,String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createTempOutput(String prefix, String suffix, IOContext context) throws IOException {\n    ensureOpen();\n    maybeDeletePendingFiles();\n    while (true) {\n      try {\n        String name = IndexFileNames.segmentFileName(prefix, suffix + \"_\" + Long.toString(nextTempFileCounter.getAndIncrement(), Character.MAX_RADIX), \"tmp\");\n        if (pendingDeletes.contains(name)) {\n          continue;\n        }\n        return new FSIndexOutput(name,\n                                 StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW);\n      } catch (FileAlreadyExistsException faee) {\n        // Retry with next incremented name\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createTempOutput(String prefix, String suffix, IOContext context) throws IOException {\n    ensureOpen();\n    maybeDeletePendingFiles();\n    while (true) {\n      try {\n        String name = IndexFileNames.segmentFileName(prefix, suffix + \"_\" + Long.toString(nextTempFileCounter.getAndIncrement(), Character.MAX_RADIX), \"tmp\");\n        if (pendingDeletes.contains(name)) {\n          continue;\n        }\n        return new FSIndexOutput(name,\n                                 StandardOpenOption.CREATE, StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW);\n      } catch (FileAlreadyExistsException faee) {\n        // Retry with next incremented name\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90671118e7e92007dbc908dd155b24990f315e82","date":1560840479,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#createTempOutput(String,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#createTempOutput(String,String,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput createTempOutput(String prefix, String suffix, IOContext context) throws IOException {\n    ensureOpen();\n    maybeDeletePendingFiles();\n    while (true) {\n      try {\n        String name = getTempFileName(prefix, suffix, nextTempFileCounter.getAndIncrement());\n        if (pendingDeletes.contains(name)) {\n          continue;\n        }\n        return new FSIndexOutput(name,\n                                 StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW);\n      } catch (FileAlreadyExistsException faee) {\n        // Retry with next incremented name\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput createTempOutput(String prefix, String suffix, IOContext context) throws IOException {\n    ensureOpen();\n    maybeDeletePendingFiles();\n    while (true) {\n      try {\n        String name = IndexFileNames.segmentFileName(prefix, suffix + \"_\" + Long.toString(nextTempFileCounter.getAndIncrement(), Character.MAX_RADIX), \"tmp\");\n        if (pendingDeletes.contains(name)) {\n          continue;\n        }\n        return new FSIndexOutput(name,\n                                 StandardOpenOption.WRITE, StandardOpenOption.CREATE_NEW);\n      } catch (FileAlreadyExistsException faee) {\n        // Retry with next incremented name\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"240cd0f67652ccfb87d7c5f8b2486d0f42012daa":["44a0466296f4b2d9deac60e3e524628c97aa5191"],"57deae53907a4ece55c7e78d3aab19592ad083a5":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"5a207d19eac354d649c3f0e2cce070017c78125e":["57deae53907a4ece55c7e78d3aab19592ad083a5","b470f36a9372c97283360b1304eacbde22df6c0d"],"b470f36a9372c97283360b1304eacbde22df6c0d":["57deae53907a4ece55c7e78d3aab19592ad083a5","240cd0f67652ccfb87d7c5f8b2486d0f42012daa"],"90671118e7e92007dbc908dd155b24990f315e82":["11c6df42fb3eba174c3ca0d9a5194eaecd893b77"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["57deae53907a4ece55c7e78d3aab19592ad083a5","b470f36a9372c97283360b1304eacbde22df6c0d"],"11c6df42fb3eba174c3ca0d9a5194eaecd893b77":["5a207d19eac354d649c3f0e2cce070017c78125e"],"44a0466296f4b2d9deac60e3e524628c97aa5191":["57deae53907a4ece55c7e78d3aab19592ad083a5"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["5a207d19eac354d649c3f0e2cce070017c78125e","11c6df42fb3eba174c3ca0d9a5194eaecd893b77"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90671118e7e92007dbc908dd155b24990f315e82"]},"commit2Childs":{"240cd0f67652ccfb87d7c5f8b2486d0f42012daa":["b470f36a9372c97283360b1304eacbde22df6c0d"],"57deae53907a4ece55c7e78d3aab19592ad083a5":["5a207d19eac354d649c3f0e2cce070017c78125e","b470f36a9372c97283360b1304eacbde22df6c0d","1e6acbaae7af722f17204ceccf0f7db5753eccf3","44a0466296f4b2d9deac60e3e524628c97aa5191"],"5a207d19eac354d649c3f0e2cce070017c78125e":["11c6df42fb3eba174c3ca0d9a5194eaecd893b77","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"90671118e7e92007dbc908dd155b24990f315e82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"11c6df42fb3eba174c3ca0d9a5194eaecd893b77":["90671118e7e92007dbc908dd155b24990f315e82","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"44a0466296f4b2d9deac60e3e524628c97aa5191":["240cd0f67652ccfb87d7c5f8b2486d0f42012daa"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["57deae53907a4ece55c7e78d3aab19592ad083a5"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}