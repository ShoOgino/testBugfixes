{"path":"solr/core/src/java/org/apache/solr/core/CoreContainer#getLoadedCoreNames().mjava","commits":[{"id":"729cb470f975115d4c60517b2cb7c42e37a7a2e1","date":1492041760,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getLoadedCoreNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getCoreNames().mjava","sourceNew":"  /**\n   * @return a Collection of the names that loaded cores are mapped to\n   */\n  public Collection<String> getLoadedCoreNames() {\n    return solrCores.getLoadedCoreNames();\n  }\n\n","sourceOld":"  /**\n   * @return a Collection of the names that loaded cores are mapped to\n   */\n  public Collection<String> getCoreNames() {\n    return solrCores.getLoadedCoreNames();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getLoadedCoreNames().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @return a Collection of the names that loaded cores are mapped to\n   */\n  public Collection<String> getLoadedCoreNames() {\n    return solrCores.getLoadedCoreNames();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7871f9c286dce2a9370bcf517a3e7d12e3bd9602","date":1498708934,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getLoadedCoreNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getLoadedCoreNames().mjava","sourceNew":"  /**\n   * Gets the cores that are currently loaded, i.e. cores that have\n   * 1: loadOnStartup=true and are either not-transient or, if transient, have been loaded and have not been aged out\n   * 2: loadOnStartup=false and have been loaded but are either non-transient or have not been aged out.\n   *\n   * Put another way, this will not return any names of cores that are lazily loaded but have not been called for yet\n   * or are transient and either not loaded or have been swapped out.\n   *\n   */\n  public Collection<String> getLoadedCoreNames() {\n    return solrCores.getLoadedCoreNames();\n  }\n\n","sourceOld":"  /**\n   * @return a Collection of the names that loaded cores are mapped to\n   */\n  public Collection<String> getLoadedCoreNames() {\n    return solrCores.getLoadedCoreNames();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getLoadedCoreNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getLoadedCoreNames().mjava","sourceNew":"  /**\n   * Gets the cores that are currently loaded, i.e. cores that have\n   * 1: loadOnStartup=true and are either not-transient or, if transient, have been loaded and have not been aged out\n   * 2: loadOnStartup=false and have been loaded but are either non-transient or have not been aged out.\n   *\n   * Put another way, this will not return any names of cores that are lazily loaded but have not been called for yet\n   * or are transient and either not loaded or have been swapped out.\n   *\n   */\n  public Collection<String> getLoadedCoreNames() {\n    return solrCores.getLoadedCoreNames();\n  }\n\n","sourceOld":"  /**\n   * @return a Collection of the names that loaded cores are mapped to\n   */\n  public Collection<String> getLoadedCoreNames() {\n    return solrCores.getLoadedCoreNames();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getLoadedCoreNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getLoadedCoreNames().mjava","sourceNew":"  /**\n   * Gets the cores that are currently loaded, i.e. cores that have\n   * 1: loadOnStartup=true and are either not-transient or, if transient, have been loaded and have not been aged out\n   * 2: loadOnStartup=false and have been loaded but are either non-transient or have not been aged out.\n   *\n   * Put another way, this will not return any names of cores that are lazily loaded but have not been called for yet\n   * or are transient and either not loaded or have been swapped out.\n   *\n   */\n  public Collection<String> getLoadedCoreNames() {\n    return solrCores.getLoadedCoreNames();\n  }\n\n","sourceOld":"  /**\n   * @return a Collection of the names that loaded cores are mapped to\n   */\n  public Collection<String> getLoadedCoreNames() {\n    return solrCores.getLoadedCoreNames();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2668c99990e4c94a78bac005aa682b7c5986d23a","date":1561446137,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#getLoadedCoreNames().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getLoadedCoreNames().mjava","sourceNew":"  /**\n   * Gets the cores that are currently loaded, i.e. cores that have\n   * 1: loadOnStartup=true and are either not-transient or, if transient, have been loaded and have not been aged out\n   * 2: loadOnStartup=false and have been loaded but are either non-transient or have not been aged out.\n   * <p>\n   * Put another way, this will not return any names of cores that are lazily loaded but have not been called for yet\n   * or are transient and either not loaded or have been swapped out.\n   */\n  public Collection<String> getLoadedCoreNames() {\n    return solrCores.getLoadedCoreNames();\n  }\n\n","sourceOld":"  /**\n   * Gets the cores that are currently loaded, i.e. cores that have\n   * 1: loadOnStartup=true and are either not-transient or, if transient, have been loaded and have not been aged out\n   * 2: loadOnStartup=false and have been loaded but are either non-transient or have not been aged out.\n   *\n   * Put another way, this will not return any names of cores that are lazily loaded but have not been called for yet\n   * or are transient and either not loaded or have been swapped out.\n   *\n   */\n  public Collection<String> getLoadedCoreNames() {\n    return solrCores.getLoadedCoreNames();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7871f9c286dce2a9370bcf517a3e7d12e3bd9602":["729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"30c8e5574b55d57947e989443dfde611646530ee":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","28288370235ed02234a64753cdbf0c6ec096304a"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["729cb470f975115d4c60517b2cb7c42e37a7a2e1","7871f9c286dce2a9370bcf517a3e7d12e3bd9602"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2668c99990e4c94a78bac005aa682b7c5986d23a"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["30c8e5574b55d57947e989443dfde611646530ee"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"7871f9c286dce2a9370bcf517a3e7d12e3bd9602":["28288370235ed02234a64753cdbf0c6ec096304a"],"30c8e5574b55d57947e989443dfde611646530ee":[],"28288370235ed02234a64753cdbf0c6ec096304a":["2668c99990e4c94a78bac005aa682b7c5986d23a","30c8e5574b55d57947e989443dfde611646530ee"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["7871f9c286dce2a9370bcf517a3e7d12e3bd9602","28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}