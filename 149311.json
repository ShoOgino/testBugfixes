{"path":"src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler].FieldSplitter#add(DocumentBuilder,int,int,String).mjava","commits":[{"id":"4f483a44e10befaaa6da11d433e2eb0f52829eec","date":1175273998,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler].FieldSplitter#add(DocumentBuilder,int,int,String).mjava","pathOld":"/dev/null","sourceNew":"    void add(DocumentBuilder builder, int line, int column, String val) {\n      CSVParser parser = new CSVParser(new StringReader(val), strategy);\n      try {\n        String[] vals = parser.getLine();\n        if (vals!=null) {\n          for (String v: vals) base.add(builder,line,column,v);\n        } else {\n          base.add(builder,line,column,val);\n        }\n      } catch (IOException e) {\n        throw new SolrException(400,\"\");\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996","date":1180477701,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler].FieldSplitter#add(DocumentBuilder,int,int,String).mjava","pathOld":"src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler].FieldSplitter#add(DocumentBuilder,int,int,String).mjava","sourceNew":"    void add(DocumentBuilder builder, int line, int column, String val) {\n      CSVParser parser = new CSVParser(new StringReader(val), strategy);\n      try {\n        String[] vals = parser.getLine();\n        if (vals!=null) {\n          for (String v: vals) base.add(builder,line,column,v);\n        } else {\n          base.add(builder,line,column,val);\n        }\n      } catch (IOException e) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"\");\n      }\n    }\n\n","sourceOld":"    void add(DocumentBuilder builder, int line, int column, String val) {\n      CSVParser parser = new CSVParser(new StringReader(val), strategy);\n      try {\n        String[] vals = parser.getLine();\n        if (vals!=null) {\n          for (String v: vals) base.add(builder,line,column,v);\n        } else {\n          base.add(builder,line,column,val);\n        }\n      } catch (IOException e) {\n        throw new SolrException(400,\"\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab0f969a7a1933d9fe89a74336793987da8cce14","date":1199804280,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler].FieldSplitter#add(DocumentBuilder,int,int,String).mjava","pathOld":"src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler].FieldSplitter#add(DocumentBuilder,int,int,String).mjava","sourceNew":"    void add(DocumentBuilder builder, int line, int column, String val) {\n      CSVParser parser = new CSVParser(new StringReader(val), strategy);\n      try {\n        String[] vals = parser.getLine();\n        if (vals!=null) {\n          for (String v: vals) base.add(builder,line,column,v);\n        } else {\n          base.add(builder,line,column,val);\n        }\n      } catch (IOException e) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,e);\n      }\n    }\n\n","sourceOld":"    void add(DocumentBuilder builder, int line, int column, String val) {\n      CSVParser parser = new CSVParser(new StringReader(val), strategy);\n      try {\n        String[] vals = parser.getLine();\n        if (vals!=null) {\n          for (String v: vals) base.add(builder,line,column,v);\n        } else {\n          base.add(builder,line,column,val);\n        }\n      } catch (IOException e) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abf644a9bed9c9f68be70fcfbe59137ec716f54a","date":1206114973,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler].FieldSplitter#add(SolrInputDocument,int,int,String).mjava","pathOld":"src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler].FieldSplitter#add(DocumentBuilder,int,int,String).mjava","sourceNew":"    void add(SolrInputDocument doc, int line, int column, String val) {\n      CSVParser parser = new CSVParser(new StringReader(val), strategy);\n      try {\n        String[] vals = parser.getLine();\n        if (vals!=null) {\n          for (String v: vals) base.add(doc,line,column,v);\n        } else {\n          base.add(doc,line,column,val);\n        }\n      } catch (IOException e) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,e);\n      }\n    }\n\n","sourceOld":"    void add(DocumentBuilder builder, int line, int column, String val) {\n      CSVParser parser = new CSVParser(new StringReader(val), strategy);\n      try {\n        String[] vals = parser.getLine();\n        if (vals!=null) {\n          for (String v: vals) base.add(builder,line,column,v);\n        } else {\n          base.add(builder,line,column,val);\n        }\n      } catch (IOException e) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"abf644a9bed9c9f68be70fcfbe59137ec716f54a":["ab0f969a7a1933d9fe89a74336793987da8cce14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["4f483a44e10befaaa6da11d433e2eb0f52829eec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ab0f969a7a1933d9fe89a74336793987da8cce14":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"4f483a44e10befaaa6da11d433e2eb0f52829eec":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"abf644a9bed9c9f68be70fcfbe59137ec716f54a":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4f483a44e10befaaa6da11d433e2eb0f52829eec"],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["ab0f969a7a1933d9fe89a74336793987da8cce14"],"ab0f969a7a1933d9fe89a74336793987da8cce14":["abf644a9bed9c9f68be70fcfbe59137ec716f54a"],"4f483a44e10befaaa6da11d433e2eb0f52829eec":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["abf644a9bed9c9f68be70fcfbe59137ec716f54a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}