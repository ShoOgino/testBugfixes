{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermStates],float).mjava","commits":[{"id":"a6e9f769521480a623f897c0d59089b919fa4239","date":1515161835,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermStates],float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext],float).mjava","sourceNew":"  private Similarity.SimScorer buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermStates> termStates, float boost) throws IOException {\n    if (termStates == null || termStates.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termStates.size()];\n    int termUpTo = 0;\n    for (Term term : termStates.keySet()) {\n      TermStatistics termStatistics = searcher.termStatistics(term, termStates.get(term));\n      if (termStatistics != null) {\n        termStats[termUpTo++] = termStatistics;\n      }\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    if (termUpTo > 0) {\n      return similarity.scorer(boost, collectionStats, Arrays.copyOf(termStats, termUpTo));\n    } else {\n      return null; // no terms at all exist, we won't use similarity\n    }\n  }\n\n","sourceOld":"  private Similarity.SimScorer buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermContext> termContexts, float boost) throws IOException {\n    if (termContexts == null || termContexts.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termContexts.size()];\n    int termUpTo = 0;\n    for (Term term : termContexts.keySet()) {\n      TermStatistics termStatistics = searcher.termStatistics(term, termContexts.get(term));\n      if (termStatistics != null) {\n        termStats[termUpTo++] = termStatistics;\n      }\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    if (termUpTo > 0) {\n      return similarity.scorer(boost, collectionStats, Arrays.copyOf(termStats, termUpTo));\n    } else {\n      return null; // no terms at all exist, we won't use similarity\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermStates],float).mjava","pathOld":"/dev/null","sourceNew":"  private Similarity.SimScorer buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermStates> termStates, float boost) throws IOException {\n    if (termStates == null || termStates.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termStates.size()];\n    int termUpTo = 0;\n    for (Term term : termStates.keySet()) {\n      TermStatistics termStatistics = searcher.termStatistics(term, termStates.get(term));\n      if (termStatistics != null) {\n        termStats[termUpTo++] = termStatistics;\n      }\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    if (termUpTo > 0) {\n      return similarity.scorer(boost, collectionStats, Arrays.copyOf(termStats, termUpTo));\n    } else {\n      return null; // no terms at all exist, we won't use similarity\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9798d0818e7a880546802b509792d3f3d57babd2","date":1528358901,"type":3,"author":"Nhat Nguyen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermStates],float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermStates],float).mjava","sourceNew":"  private Similarity.SimScorer buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermStates> termStates, float boost) throws IOException {\n    if (termStates == null || termStates.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termStates.size()];\n    int termUpTo = 0;\n    for (Term term : termStates.keySet()) {\n      TermStatistics termStatistics = searcher.termStatistics(term, termStates.get(term));\n      if (termStatistics != null) {\n        termStats[termUpTo++] = termStatistics;\n      }\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    if (termUpTo > 0) {\n      return similarity.scorer(boost, collectionStats, ArrayUtil.copyOfSubArray(termStats, 0, termUpTo));\n    } else {\n      return null; // no terms at all exist, we won't use similarity\n    }\n  }\n\n","sourceOld":"  private Similarity.SimScorer buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermStates> termStates, float boost) throws IOException {\n    if (termStates == null || termStates.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termStates.size()];\n    int termUpTo = 0;\n    for (Term term : termStates.keySet()) {\n      TermStatistics termStatistics = searcher.termStatistics(term, termStates.get(term));\n      if (termStatistics != null) {\n        termStats[termUpTo++] = termStatistics;\n      }\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    if (termUpTo > 0) {\n      return similarity.scorer(boost, collectionStats, Arrays.copyOf(termStats, termUpTo));\n    } else {\n      return null; // no terms at all exist, we won't use similarity\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermStates],float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermStates],float).mjava","sourceNew":"  private Similarity.SimScorer buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermStates> termStates, float boost) throws IOException {\n    if (termStates == null || termStates.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termStates.size()];\n    int termUpTo = 0;\n    for (Term term : termStates.keySet()) {\n      TermStatistics termStatistics = searcher.termStatistics(term, termStates.get(term));\n      if (termStatistics != null) {\n        termStats[termUpTo++] = termStatistics;\n      }\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    if (termUpTo > 0) {\n      return similarity.scorer(boost, collectionStats, ArrayUtil.copyOfSubArray(termStats, 0, termUpTo));\n    } else {\n      return null; // no terms at all exist, we won't use similarity\n    }\n  }\n\n","sourceOld":"  private Similarity.SimScorer buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermStates> termStates, float boost) throws IOException {\n    if (termStates == null || termStates.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termStates.size()];\n    int termUpTo = 0;\n    for (Term term : termStates.keySet()) {\n      TermStatistics termStatistics = searcher.termStatistics(term, termStates.get(term));\n      if (termStatistics != null) {\n        termStats[termUpTo++] = termStatistics;\n      }\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    if (termUpTo > 0) {\n      return similarity.scorer(boost, collectionStats, Arrays.copyOf(termStats, termUpTo));\n    } else {\n      return null; // no terms at all exist, we won't use similarity\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermStates],float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermStates],float).mjava","sourceNew":"  private Similarity.SimScorer buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermStates> termStates, float boost) throws IOException {\n    if (termStates == null || termStates.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termStates.size()];\n    int termUpTo = 0;\n    for (Term term : termStates.keySet()) {\n      TermStatistics termStatistics = searcher.termStatistics(term, termStates.get(term));\n      if (termStatistics != null) {\n        termStats[termUpTo++] = termStatistics;\n      }\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    if (termUpTo > 0) {\n      return similarity.scorer(boost, collectionStats, ArrayUtil.copyOfSubArray(termStats, 0, termUpTo));\n    } else {\n      return null; // no terms at all exist, we won't use similarity\n    }\n  }\n\n","sourceOld":"  private Similarity.SimScorer buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermStates> termStates, float boost) throws IOException {\n    if (termStates == null || termStates.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termStates.size()];\n    int termUpTo = 0;\n    for (Term term : termStates.keySet()) {\n      TermStatistics termStatistics = searcher.termStatistics(term, termStates.get(term));\n      if (termStatistics != null) {\n        termStats[termUpTo++] = termStatistics;\n      }\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    if (termUpTo > 0) {\n      return similarity.scorer(boost, collectionStats, Arrays.copyOf(termStats, termUpTo));\n    } else {\n      return null; // no terms at all exist, we won't use similarity\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f97fc3d287be2a8d7f513f0de3249b50dda47299","date":1568378558,"type":3,"author":"Koen De Groote","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermStates],float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermStates],float).mjava","sourceNew":"  private Similarity.SimScorer buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermStates> termStates, float boost) throws IOException {\n    if (termStates == null || termStates.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termStates.size()];\n    int termUpTo = 0;\n    for (Map.Entry<Term, TermStates> entry : termStates.entrySet()) {\n      TermStatistics termStatistics = searcher.termStatistics(entry.getKey(), entry.getValue());\n      if (termStatistics != null) {\n        termStats[termUpTo++] = termStatistics;\n      }\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    if (termUpTo > 0) {\n      return similarity.scorer(boost, collectionStats, ArrayUtil.copyOfSubArray(termStats, 0, termUpTo));\n    } else {\n      return null; // no terms at all exist, we won't use similarity\n    }\n  }\n\n","sourceOld":"  private Similarity.SimScorer buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermStates> termStates, float boost) throws IOException {\n    if (termStates == null || termStates.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termStates.size()];\n    int termUpTo = 0;\n    for (Term term : termStates.keySet()) {\n      TermStatistics termStatistics = searcher.termStatistics(term, termStates.get(term));\n      if (termStatistics != null) {\n        termStats[termUpTo++] = termStatistics;\n      }\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    if (termUpTo > 0) {\n      return similarity.scorer(boost, collectionStats, ArrayUtil.copyOfSubArray(termStats, 0, termUpTo));\n    } else {\n      return null; // no terms at all exist, we won't use similarity\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19238c4860c45945f1b1e39032e056ce9e266152","date":1568753304,"type":3,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermStates],float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermStates],float).mjava","sourceNew":"  private Similarity.SimScorer buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermStates> termStates, float boost) throws IOException {\n    if (termStates == null || termStates.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termStates.size()];\n    int termUpTo = 0;\n    for (Map.Entry<Term, TermStates> entry : termStates.entrySet()) {\n      TermStates ts = entry.getValue();\n      if (ts.docFreq() > 0) {\n        termStats[termUpTo++] = searcher.termStatistics(entry.getKey(), ts.docFreq(), ts.totalTermFreq());\n      }\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    if (termUpTo > 0) {\n      return similarity.scorer(boost, collectionStats, ArrayUtil.copyOfSubArray(termStats, 0, termUpTo));\n    } else {\n      return null; // no terms at all exist, we won't use similarity\n    }\n  }\n\n","sourceOld":"  private Similarity.SimScorer buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermStates> termStates, float boost) throws IOException {\n    if (termStates == null || termStates.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termStates.size()];\n    int termUpTo = 0;\n    for (Map.Entry<Term, TermStates> entry : termStates.entrySet()) {\n      TermStatistics termStatistics = searcher.termStatistics(entry.getKey(), entry.getValue());\n      if (termStatistics != null) {\n        termStats[termUpTo++] = termStatistics;\n      }\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    if (termUpTo > 0) {\n      return similarity.scorer(boost, collectionStats, ArrayUtil.copyOfSubArray(termStats, 0, termUpTo));\n    } else {\n      return null; // no terms at all exist, we won't use similarity\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a6e9f769521480a623f897c0d59089b919fa4239"],"a6e9f769521480a623f897c0d59089b919fa4239":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["b94236357aaa22b76c10629851fe4e376e0cea82","9798d0818e7a880546802b509792d3f3d57babd2"],"19238c4860c45945f1b1e39032e056ce9e266152":["f97fc3d287be2a8d7f513f0de3249b50dda47299"],"f97fc3d287be2a8d7f513f0de3249b50dda47299":["9798d0818e7a880546802b509792d3f3d57babd2"],"9798d0818e7a880546802b509792d3f3d57babd2":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19238c4860c45945f1b1e39032e056ce9e266152"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["b94236357aaa22b76c10629851fe4e376e0cea82","9798d0818e7a880546802b509792d3f3d57babd2"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["b70042a8a492f7054d480ccdd2be9796510d4327","9798d0818e7a880546802b509792d3f3d57babd2","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a6e9f769521480a623f897c0d59089b919fa4239":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","a6e9f769521480a623f897c0d59089b919fa4239"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"19238c4860c45945f1b1e39032e056ce9e266152":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9798d0818e7a880546802b509792d3f3d57babd2":["b70042a8a492f7054d480ccdd2be9796510d4327","f97fc3d287be2a8d7f513f0de3249b50dda47299","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"f97fc3d287be2a8d7f513f0de3249b50dda47299":["19238c4860c45945f1b1e39032e056ce9e266152"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}