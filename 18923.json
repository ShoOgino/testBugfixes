{"path":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#ConjunctionScorer(Weight,List[Scorer],List[Scorer]).mjava","commits":[{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#ConjunctionScorer(Weight,List[Scorer],List[Scorer]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#ConjunctionScorer(Weight,List[#-extends-DocIdSetIterator],List[Scorer]).mjava","sourceNew":"  ConjunctionScorer(Weight weight, List<Scorer> required, List<Scorer> scorers) {\n    this(weight, required, scorers, 1f);\n  }\n\n","sourceOld":"  ConjunctionScorer(Weight weight, List<? extends DocIdSetIterator> required, List<Scorer> scorers) {\n    this(weight, required, scorers, 1f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8a0e442f7b61f811680273b25da95994a724466","date":1467878549,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#ConjunctionScorer(Weight,List[Scorer],List[Scorer]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#ConjunctionScorer(Weight,List[Scorer],List[Scorer]).mjava","sourceNew":"  /** Create a new {@link ConjunctionScorer}, note that {@code scorers} must be a subset of {@code required}. */\n  ConjunctionScorer(Weight weight, List<Scorer> required, List<Scorer> scorers) {\n    super(weight);\n    assert required.containsAll(scorers);\n    this.disi = ConjunctionDISI.intersectScorers(required);\n    this.scorers = scorers.toArray(new Scorer[scorers.size()]);\n  }\n\n","sourceOld":"  ConjunctionScorer(Weight weight, List<Scorer> required, List<Scorer> scorers) {\n    this(weight, required, scorers, 1f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#ConjunctionScorer(Weight,List[Scorer],List[Scorer]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#ConjunctionScorer(Weight,List[Scorer],List[Scorer]).mjava","sourceNew":"  /** Create a new {@link ConjunctionScorer}, note that {@code scorers} must be a subset of {@code required}. */\n  ConjunctionScorer(Weight weight, List<Scorer> required, List<Scorer> scorers) {\n    super(weight);\n    assert required.containsAll(scorers);\n    this.disi = ConjunctionDISI.intersectScorers(required);\n    this.scorers = scorers.toArray(new Scorer[scorers.size()]);\n  }\n\n","sourceOld":"  ConjunctionScorer(Weight weight, List<Scorer> required, List<Scorer> scorers) {\n    this(weight, required, scorers, 1f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dca67e06c96e95a8d9ef07418b6299bfd981523b","date":1484639518,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#ConjunctionScorer(Weight,Collection[Scorer],Collection[Scorer]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#ConjunctionScorer(Weight,List[Scorer],List[Scorer]).mjava","sourceNew":"  /** Create a new {@link ConjunctionScorer}, note that {@code scorers} must be a subset of {@code required}. */\n  ConjunctionScorer(Weight weight, Collection<Scorer> required, Collection<Scorer> scorers) {\n    super(weight);\n    assert required.containsAll(scorers);\n    this.disi = ConjunctionDISI.intersectScorers(required);\n    this.scorers = scorers.toArray(new Scorer[scorers.size()]);\n  }\n\n","sourceOld":"  /** Create a new {@link ConjunctionScorer}, note that {@code scorers} must be a subset of {@code required}. */\n  ConjunctionScorer(Weight weight, List<Scorer> required, List<Scorer> scorers) {\n    super(weight);\n    assert required.containsAll(scorers);\n    this.disi = ConjunctionDISI.intersectScorers(required);\n    this.scorers = scorers.toArray(new Scorer[scorers.size()]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"302d34f2c66e8d489ee13078305c330cbf67b226","date":1484754357,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#ConjunctionScorer(Weight,Collection[Scorer],Collection[Scorer]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#ConjunctionScorer(Weight,List[Scorer],List[Scorer]).mjava","sourceNew":"  /** Create a new {@link ConjunctionScorer}, note that {@code scorers} must be a subset of {@code required}. */\n  ConjunctionScorer(Weight weight, Collection<Scorer> required, Collection<Scorer> scorers) {\n    super(weight);\n    assert required.containsAll(scorers);\n    this.disi = ConjunctionDISI.intersectScorers(required);\n    this.scorers = scorers.toArray(new Scorer[scorers.size()]);\n  }\n\n","sourceOld":"  /** Create a new {@link ConjunctionScorer}, note that {@code scorers} must be a subset of {@code required}. */\n  ConjunctionScorer(Weight weight, List<Scorer> required, List<Scorer> scorers) {\n    super(weight);\n    assert required.containsAll(scorers);\n    this.disi = ConjunctionDISI.intersectScorers(required);\n    this.scorers = scorers.toArray(new Scorer[scorers.size()]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dca67e06c96e95a8d9ef07418b6299bfd981523b":["c8a0e442f7b61f811680273b25da95994a724466"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c8a0e442f7b61f811680273b25da95994a724466":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7dd748bb245633a8195281556bb0e68a6ea97d18","c8a0e442f7b61f811680273b25da95994a724466"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dca67e06c96e95a8d9ef07418b6299bfd981523b"],"302d34f2c66e8d489ee13078305c330cbf67b226":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","dca67e06c96e95a8d9ef07418b6299bfd981523b"]},"commit2Childs":{"dca67e06c96e95a8d9ef07418b6299bfd981523b":["cd5edd1f2b162a5cfa08efd17851a07373a96817","302d34f2c66e8d489ee13078305c330cbf67b226"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"c8a0e442f7b61f811680273b25da95994a724466":["dca67e06c96e95a8d9ef07418b6299bfd981523b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["c8a0e442f7b61f811680273b25da95994a724466","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["302d34f2c66e8d489ee13078305c330cbf67b226"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"302d34f2c66e8d489ee13078305c330cbf67b226":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","302d34f2c66e8d489ee13078305c330cbf67b226"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}