{"path":"solr/core/src/java/org/apache/solr/search/facet/SlotAcc.SweepingCountSlotAcc#setSweepValues(SimpleOrderedMap[Object],int).mjava","commits":[{"id":"2f9e4bd10604489b5817ee29e35ac96a3148cbec","date":1594345357,"type":0,"author":"Michael Gibney","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/SlotAcc.SweepingCountSlotAcc#setSweepValues(SimpleOrderedMap[Object],int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Populates the bucket with the values from all mapped \"output\" accumulators for the specified slot.\n     *\n     * This method exists because there are some contexts (namely SpecialSlotAcc, for allBuckets, etc.) in which \"base\"\n     * count is tracked differently, via getSpecialCount(). For such cases, we need a method that allows the caller to\n     * directly coordinate calling {@link SlotAcc#setValues} on the sweeping output accs, while avoiding the inclusion\n     * of {@link CountSlotAcc#setValues CountSlotAcc.setValues}\n     */\n    public void setSweepValues(SimpleOrderedMap<Object> bucket, int slotNum) throws IOException {\n      for (SlotAcc acc : output) {\n        acc.setValues(bucket, slotNum);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2f9e4bd10604489b5817ee29e35ac96a3148cbec"]},"commit2Childs":{"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2f9e4bd10604489b5817ee29e35ac96a3148cbec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}