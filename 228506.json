{"path":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n        \n    NamedList explainList = new SimpleOrderedMap();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Explanation explain = searcher.explain(query, id);\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      // String docname = \"\";\n      // if (strid != null) docname=\"id=\"+strid+\",\";\n      // docname = docname + \"internal_docid=\"+id;\n\n      explainList.add(strid, \"\\n\" +explain.toString());\n    }\n    return explainList;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":null,"sourceOld":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n        \n    NamedList explainList = new SimpleOrderedMap();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Explanation explain = searcher.explain(query, id);\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      // String docname = \"\";\n      // if (strid != null) docname=\"id=\"+strid+\",\";\n      // docname = docname + \"internal_docid=\"+id;\n\n      explainList.add(strid, \"\\n\" +explain.toString());\n    }\n    return explainList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n        \n    NamedList explainList = new SimpleOrderedMap();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Explanation explain = searcher.explain(query, id);\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      // String docname = \"\";\n      // if (strid != null) docname=\"id=\"+strid+\",\";\n      // docname = docname + \"internal_docid=\"+id;\n\n      explainList.add(strid, \"\\n\" +explain.toString());\n    }\n    return explainList;\n  }\n\n","sourceOld":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n        \n    NamedList explainList = new SimpleOrderedMap();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Explanation explain = searcher.explain(query, id);\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      // String docname = \"\";\n      // if (strid != null) docname=\"id=\"+strid+\",\";\n      // docname = docname + \"internal_docid=\"+id;\n\n      explainList.add(strid, \"\\n\" +explain.toString());\n    }\n    return explainList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n        \n    NamedList explainList = new SimpleOrderedMap();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Explanation explain = searcher.explain(query, id);\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      // String docname = \"\";\n      // if (strid != null) docname=\"id=\"+strid+\",\";\n      // docname = docname + \"internal_docid=\"+id;\n\n      explainList.add(strid, \"\\n\" +explain.toString());\n    }\n    return explainList;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f0737567c7196b3ba1a359c2bdf103a3984a55e","date":1275089164,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   * @deprecated this returns the explanations as Strings, instead it \n   *    is recommeded to use getExplanations and call toString() \n   *    yourself, or use explanationsToNamedLists\n   */\n  @Deprecated\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n        \n    NamedList<String> outList = new SimpleOrderedMap<String>();\n    NamedList<Explanation> explainList = \n      getExplanations(query,docs,searcher,schema);\n\n    for (Map.Entry<String,Explanation> entry : explainList) {\n      outList.add(entry.getKey(), \"\\n\"+entry.getValue().toString());\n    }\n    return outList;\n  }\n\n","sourceOld":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   */\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n        \n    NamedList explainList = new SimpleOrderedMap();\n    DocIterator iterator = docs.iterator();\n    for (int i=0; i<docs.size(); i++) {\n      int id = iterator.nextDoc();\n\n      Explanation explain = searcher.explain(query, id);\n\n      Document doc = searcher.doc(id);\n      String strid = schema.printableUniqueKey(doc);\n\n      // String docname = \"\";\n      // if (strid != null) docname=\"id=\"+strid+\",\";\n      // docname = docname + \"internal_docid=\"+id;\n\n      explainList.add(strid, \"\\n\" +explain.toString());\n    }\n    return explainList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"faa067d0f3edbad4e7a765c0819b7ce3bcb7ab74","date":1275499188,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   * @deprecated this returns the explanations as Strings, instead it \n   *    is recommeded to use getExplanations and call toString() \n   *    yourself, or use explanationsToNamedLists\n   */\n  @Deprecated\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n\n    return explanationsToStrings(getExplanations(query,docs,searcher,schema));\n  }\n\n","sourceOld":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   * @deprecated this returns the explanations as Strings, instead it \n   *    is recommeded to use getExplanations and call toString() \n   *    yourself, or use explanationsToNamedLists\n   */\n  @Deprecated\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n        \n    NamedList<String> outList = new SimpleOrderedMap<String>();\n    NamedList<Explanation> explainList = \n      getExplanations(query,docs,searcher,schema);\n\n    for (Map.Entry<String,Explanation> entry : explainList) {\n      outList.add(entry.getKey(), \"\\n\"+entry.getValue().toString());\n    }\n    return outList;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cd00dd91853514614379b0e680d65bd19cac0f30","date":1283087816,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   * @deprecated this returns the explanations as Strings, instead it\n   *    is recommeded to use getExplanations and call toString()\n   *    yourself, or use explanationsToNamedLists\n   */\n  @Deprecated\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n\n    return explanationsToStrings(getExplanations(query,docs,searcher,schema));\n  }\n\n","sourceOld":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   * @deprecated this returns the explanations as Strings, instead it \n   *    is recommeded to use getExplanations and call toString() \n   *    yourself, or use explanationsToNamedLists\n   */\n  @Deprecated\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n\n    return explanationsToStrings(getExplanations(query,docs,searcher,schema));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   * @deprecated this returns the explanations as Strings, instead it\n   *    is recommeded to use getExplanations and call toString()\n   *    yourself, or use explanationsToNamedLists\n   */\n  @Deprecated\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n\n    return explanationsToStrings(getExplanations(query,docs,searcher,schema));\n  }\n\n","sourceOld":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   * @deprecated this returns the explanations as Strings, instead it \n   *    is recommeded to use getExplanations and call toString() \n   *    yourself, or use explanationsToNamedLists\n   */\n  @Deprecated\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n\n    return explanationsToStrings(getExplanations(query,docs,searcher,schema));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f60a6fbcf656b886f3e7ffe63059c54a10c929bc","date":1293253735,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":null,"sourceOld":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   * @deprecated this returns the explanations as Strings, instead it\n   *    is recommeded to use getExplanations and call toString()\n   *    yourself, or use explanationsToNamedLists\n   */\n  @Deprecated\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n\n    return explanationsToStrings(getExplanations(query,docs,searcher,schema));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":null,"sourceOld":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   * @deprecated this returns the explanations as Strings, instead it\n   *    is recommeded to use getExplanations and call toString()\n   *    yourself, or use explanationsToNamedLists\n   */\n  @Deprecated\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n\n    return explanationsToStrings(getExplanations(query,docs,searcher,schema));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getExplainList(Query,DocList,SolrIndexSearcher,IndexSchema).mjava","sourceNew":null,"sourceOld":"  /**\n   * Generates an list of Explanations for each item in a list of docs.\n   *\n   * @param query The Query you want explanations in the context of\n   * @param docs The Documents you want explained relative that query\n   * @deprecated this returns the explanations as Strings, instead it\n   *    is recommeded to use getExplanations and call toString()\n   *    yourself, or use explanationsToNamedLists\n   */\n  @Deprecated\n  public static NamedList getExplainList(Query query, DocList docs,\n                                         SolrIndexSearcher searcher,\n                                         IndexSchema schema)\n    throws IOException {\n\n    return explanationsToStrings(getExplanations(query,docs,searcher,schema));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["cd00dd91853514614379b0e680d65bd19cac0f30","f60a6fbcf656b886f3e7ffe63059c54a10c929bc"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f60a6fbcf656b886f3e7ffe63059c54a10c929bc":["cd00dd91853514614379b0e680d65bd19cac0f30"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5f0737567c7196b3ba1a359c2bdf103a3984a55e":["1da8d55113b689b06716246649de6f62430f15c0"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["faa067d0f3edbad4e7a765c0819b7ce3bcb7ab74","cd00dd91853514614379b0e680d65bd19cac0f30"],"cd00dd91853514614379b0e680d65bd19cac0f30":["faa067d0f3edbad4e7a765c0819b7ce3bcb7ab74"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f60a6fbcf656b886f3e7ffe63059c54a10c929bc"],"faa067d0f3edbad4e7a765c0819b7ce3bcb7ab74":["5f0737567c7196b3ba1a359c2bdf103a3984a55e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f60a6fbcf656b886f3e7ffe63059c54a10c929bc"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"f60a6fbcf656b886f3e7ffe63059c54a10c929bc":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"5f0737567c7196b3ba1a359c2bdf103a3984a55e":["faa067d0f3edbad4e7a765c0819b7ce3bcb7ab74"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c"],"cd00dd91853514614379b0e680d65bd19cac0f30":["70ad682703b8585f5d0a637efec044d57ec05efb","f60a6fbcf656b886f3e7ffe63059c54a10c929bc","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"1da8d55113b689b06716246649de6f62430f15c0":["5f0737567c7196b3ba1a359c2bdf103a3984a55e"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":[],"faa067d0f3edbad4e7a765c0819b7ce3bcb7ab74":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd00dd91853514614379b0e680d65bd19cac0f30"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}