{"path":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#DrillDownQuery(FacetsConfig,Filter,DrillDownQuery).mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#DrillDownQuery(FacetsConfig,Filter,DrillDownQuery).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#SimpleDrillDownQuery(FacetsConfig,Filter,SimpleDrillDownQuery).mjava","sourceNew":"  /** Used by DrillSideways */\n  DrillDownQuery(FacetsConfig config, Filter filter, DrillDownQuery other) {\n    query = new BooleanQuery(true); // disable coord\n\n    BooleanClause[] clauses = other.query.getClauses();\n    if (clauses.length == other.drillDownDims.size()) {\n      throw new IllegalArgumentException(\"cannot apply filter unless baseQuery isn't null; pass ConstantScoreQuery instead\");\n    }\n    assert clauses.length == 1+other.drillDownDims.size(): clauses.length + \" vs \" + (1+other.drillDownDims.size());\n    drillDownDims.putAll(other.drillDownDims);\n    query.add(new FilteredQuery(clauses[0].getQuery(), filter), Occur.MUST);\n    for(int i=1;i<clauses.length;i++) {\n      query.add(clauses[i].getQuery(), Occur.MUST);\n    }\n    this.config = config;\n  }\n\n","sourceOld":"  /** Used by DrillSideways */\n  SimpleDrillDownQuery(FacetsConfig config, Filter filter, SimpleDrillDownQuery other) {\n    query = new BooleanQuery(true); // disable coord\n\n    BooleanClause[] clauses = other.query.getClauses();\n    if (clauses.length == other.drillDownDims.size()) {\n      throw new IllegalArgumentException(\"cannot apply filter unless baseQuery isn't null; pass ConstantScoreQuery instead\");\n    }\n    assert clauses.length == 1+other.drillDownDims.size(): clauses.length + \" vs \" + (1+other.drillDownDims.size());\n    drillDownDims.putAll(other.drillDownDims);\n    query.add(new FilteredQuery(clauses[0].getQuery(), filter), Occur.MUST);\n    for(int i=1;i<clauses.length;i++) {\n      query.add(clauses[i].getQuery(), Occur.MUST);\n    }\n    this.config = config;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#DrillDownQuery(FacetsConfig,Filter,DrillDownQuery).mjava","pathOld":"/dev/null","sourceNew":"  /** Used by DrillSideways */\n  DrillDownQuery(FacetsConfig config, Filter filter, DrillDownQuery other) {\n    query = new BooleanQuery(true); // disable coord\n\n    BooleanClause[] clauses = other.query.getClauses();\n    if (clauses.length == other.drillDownDims.size()) {\n      throw new IllegalArgumentException(\"cannot apply filter unless baseQuery isn't null; pass ConstantScoreQuery instead\");\n    }\n    assert clauses.length == 1+other.drillDownDims.size(): clauses.length + \" vs \" + (1+other.drillDownDims.size());\n    drillDownDims.putAll(other.drillDownDims);\n    query.add(new FilteredQuery(clauses[0].getQuery(), filter), Occur.MUST);\n    for(int i=1;i<clauses.length;i++) {\n      query.add(clauses[i].getQuery(), Occur.MUST);\n    }\n    this.config = config;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#DrillDownQuery(FacetsConfig,Filter,DrillDownQuery).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#DrillDownQuery(FacetsConfig,Filter,DrillDownQuery).mjava","sourceNew":"  /** Used by DrillSideways */\n  DrillDownQuery(FacetsConfig config, Filter filter, DrillDownQuery other) {\n    this.baseQuery = new FilteredQuery(other.baseQuery == null ? new MatchAllDocsQuery() : other.baseQuery, filter);\n    this.dimQueries.addAll(other.dimQueries);\n    this.drillDownDims.putAll(other.drillDownDims);\n    this.config = config;\n  }\n\n","sourceOld":"  /** Used by DrillSideways */\n  DrillDownQuery(FacetsConfig config, Filter filter, DrillDownQuery other) {\n    query = new BooleanQuery(true); // disable coord\n\n    BooleanClause[] clauses = other.query.getClauses();\n    if (clauses.length == other.drillDownDims.size()) {\n      throw new IllegalArgumentException(\"cannot apply filter unless baseQuery isn't null; pass ConstantScoreQuery instead\");\n    }\n    assert clauses.length == 1+other.drillDownDims.size(): clauses.length + \" vs \" + (1+other.drillDownDims.size());\n    drillDownDims.putAll(other.drillDownDims);\n    query.add(new FilteredQuery(clauses[0].getQuery(), filter), Occur.MUST);\n    for(int i=1;i<clauses.length;i++) {\n      query.add(clauses[i].getQuery(), Occur.MUST);\n    }\n    this.config = config;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1db68e96dd908fcd79ef809095822736aa601d08","date":1434630596,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#DrillDownQuery(FacetsConfig,Filter,DrillDownQuery).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#DrillDownQuery(FacetsConfig,Filter,DrillDownQuery).mjava","sourceNew":"  /** Used by DrillSideways */\n  DrillDownQuery(FacetsConfig config, Filter filter, DrillDownQuery other) {\n    this.baseQuery = new BooleanQuery.Builder()\n        .add(other.baseQuery == null ? new MatchAllDocsQuery() : other.baseQuery, Occur.MUST)\n        .add(filter, Occur.FILTER)\n        .build();\n    this.dimQueries.addAll(other.dimQueries);\n    this.drillDownDims.putAll(other.drillDownDims);\n    this.config = config;\n  }\n\n","sourceOld":"  /** Used by DrillSideways */\n  DrillDownQuery(FacetsConfig config, Filter filter, DrillDownQuery other) {\n    this.baseQuery = new FilteredQuery(other.baseQuery == null ? new MatchAllDocsQuery() : other.baseQuery, filter);\n    this.dimQueries.addAll(other.dimQueries);\n    this.drillDownDims.putAll(other.drillDownDims);\n    this.config = config;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd6be878365e339c75cc43ad7d5df95ab4ea21e5","date":1435762101,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#DrillDownQuery(FacetsConfig,Query,DrillDownQuery).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#DrillDownQuery(FacetsConfig,Filter,DrillDownQuery).mjava","sourceNew":"  /** Used by DrillSideways */\n  DrillDownQuery(FacetsConfig config, Query filter, DrillDownQuery other) {\n    this.baseQuery = new BooleanQuery.Builder()\n        .add(other.baseQuery == null ? new MatchAllDocsQuery() : other.baseQuery, Occur.MUST)\n        .add(filter, Occur.FILTER)\n        .build();\n    this.dimQueries.addAll(other.dimQueries);\n    this.drillDownDims.putAll(other.drillDownDims);\n    this.config = config;\n  }\n\n","sourceOld":"  /** Used by DrillSideways */\n  DrillDownQuery(FacetsConfig config, Filter filter, DrillDownQuery other) {\n    this.baseQuery = new BooleanQuery.Builder()\n        .add(other.baseQuery == null ? new MatchAllDocsQuery() : other.baseQuery, Occur.MUST)\n        .add(filter, Occur.FILTER)\n        .build();\n    this.dimQueries.addAll(other.dimQueries);\n    this.drillDownDims.putAll(other.drillDownDims);\n    this.config = config;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"1db68e96dd908fcd79ef809095822736aa601d08":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","21d36d0db865f7b84026b447bec653469a6e66df"],"dd6be878365e339c75cc43ad7d5df95ab4ea21e5":["1db68e96dd908fcd79ef809095822736aa601d08"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd6be878365e339c75cc43ad7d5df95ab4ea21e5"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["1db68e96dd908fcd79ef809095822736aa601d08"],"1db68e96dd908fcd79ef809095822736aa601d08":["dd6be878365e339c75cc43ad7d5df95ab4ea21e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","3cc728b07df73b197e6d940d27f9b08b63918f13"],"21d36d0db865f7b84026b447bec653469a6e66df":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"dd6be878365e339c75cc43ad7d5df95ab4ea21e5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}