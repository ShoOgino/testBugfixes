{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#stripHTML(String,String).mjava","commits":[{"id":"edb8e0d6398ffb1bca995034c5b743dd96aa5622","date":1228420243,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#stripHTML(String,String).mjava","pathOld":"/dev/null","sourceNew":"  private Object stripHTML(String value, String column) {\n    StringBuilder out = new StringBuilder();\n    StringReader strReader = new StringReader(value);\n    try {\n      HTMLStripReader html = new HTMLStripReader(strReader);\n      char[] cbuf = new char[1024 * 10];\n      while (true) {\n        int count = html.read(cbuf);\n        if (count == -1)\n          break; // end of stream mark is -1\n        if (count > 0)\n          out.append(cbuf, 0, count);\n      }\n      html.close();\n    } catch (IOException e) {\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Failed stripping HTML for column: \" + column, e);\n    }\n    return out.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbf0d6800a62753dc1bfcdb2abac6d1a90cd5d2a","date":1254156266,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#stripHTML(String,String).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#stripHTML(String,String).mjava","sourceNew":"  private Object stripHTML(String value, String column) {\n    StringBuilder out = new StringBuilder();\n    StringReader strReader = new StringReader(value);\n    try {\n      HTMLStripCharFilter html = new HTMLStripCharFilter(CharReader.get(strReader.markSupported() ? strReader : new BufferedReader(strReader)));\n      char[] cbuf = new char[1024 * 10];\n      while (true) {\n        int count = html.read(cbuf);\n        if (count == -1)\n          break; // end of stream mark is -1\n        if (count > 0)\n          out.append(cbuf, 0, count);\n      }\n      html.close();\n    } catch (IOException e) {\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Failed stripping HTML for column: \" + column, e);\n    }\n    return out.toString();\n  }\n\n","sourceOld":"  private Object stripHTML(String value, String column) {\n    StringBuilder out = new StringBuilder();\n    StringReader strReader = new StringReader(value);\n    try {\n      HTMLStripReader html = new HTMLStripReader(strReader);\n      char[] cbuf = new char[1024 * 10];\n      while (true) {\n        int count = html.read(cbuf);\n        if (count == -1)\n          break; // end of stream mark is -1\n        if (count > 0)\n          out.append(cbuf, 0, count);\n      }\n      html.close();\n    } catch (IOException e) {\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Failed stripping HTML for column: \" + column, e);\n    }\n    return out.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#stripHTML(String,String).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/HTMLStripTransformer#stripHTML(String,String).mjava","sourceNew":"  private Object stripHTML(String value, String column) {\n    StringBuilder out = new StringBuilder();\n    StringReader strReader = new StringReader(value);\n    try {\n      HTMLStripCharFilter html = new HTMLStripCharFilter(CharReader.get(strReader.markSupported() ? strReader : new BufferedReader(strReader)));\n      char[] cbuf = new char[1024 * 10];\n      while (true) {\n        int count = html.read(cbuf);\n        if (count == -1)\n          break; // end of stream mark is -1\n        if (count > 0)\n          out.append(cbuf, 0, count);\n      }\n      html.close();\n    } catch (IOException e) {\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Failed stripping HTML for column: \" + column, e);\n    }\n    return out.toString();\n  }\n\n","sourceOld":"  private Object stripHTML(String value, String column) {\n    StringBuilder out = new StringBuilder();\n    StringReader strReader = new StringReader(value);\n    try {\n      HTMLStripCharFilter html = new HTMLStripCharFilter(CharReader.get(strReader.markSupported() ? strReader : new BufferedReader(strReader)));\n      char[] cbuf = new char[1024 * 10];\n      while (true) {\n        int count = html.read(cbuf);\n        if (count == -1)\n          break; // end of stream mark is -1\n        if (count > 0)\n          out.append(cbuf, 0, count);\n      }\n      html.close();\n    } catch (IOException e) {\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"Failed stripping HTML for column: \" + column, e);\n    }\n    return out.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fbf0d6800a62753dc1bfcdb2abac6d1a90cd5d2a":["edb8e0d6398ffb1bca995034c5b743dd96aa5622"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"edb8e0d6398ffb1bca995034c5b743dd96aa5622":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["fbf0d6800a62753dc1bfcdb2abac6d1a90cd5d2a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"fbf0d6800a62753dc1bfcdb2abac6d1a90cd5d2a":["ad94625fb8d088209f46650c8097196fec67f00c"],"edb8e0d6398ffb1bca995034c5b743dd96aa5622":["fbf0d6800a62753dc1bfcdb2abac6d1a90cd5d2a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["edb8e0d6398ffb1bca995034c5b743dd96aa5622"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}