{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getInfosToApply(FrozenBufferedUpdates).mjava","commits":[{"id":"9f21f1920c232db2352489eed260fe5c1f39e5a0","date":1587748041,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getInfosToApply(FrozenBufferedUpdates).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#getInfosToApply(IndexWriter).mjava","sourceNew":"  /** Returns the {@link SegmentCommitInfo} that this packet is supposed to apply its deletes to, or null\n   *  if the private segment was already merged away. */\n  private synchronized List<SegmentCommitInfo> getInfosToApply(FrozenBufferedUpdates updates) {\n    final List<SegmentCommitInfo> infos;\n    if (updates.privateSegment != null) {\n      if (segmentInfos.contains(updates.privateSegment)) {\n        infos = Collections.singletonList(updates.privateSegment);\n      }else {\n        if (infoStream.isEnabled(\"BD\")) {\n          infoStream.message(\"BD\", \"private segment already gone; skip processing updates\");\n        }\n        infos = null;\n      }\n    } else {\n      infos = listOfSegmentCommitInfos();\n    }\n    return infos;\n  }\n\n","sourceOld":"  /** Returns the {@link SegmentCommitInfo} that this packet is supposed to apply its deletes to, or null\n   *  if the private segment was already merged away. */\n  private List<SegmentCommitInfo> getInfosToApply(IndexWriter writer) {\n    assert Thread.holdsLock(writer);\n    final List<SegmentCommitInfo> infos;\n    if (privateSegment != null) {\n      if (writer.segmentCommitInfoExist(privateSegment)) {\n        infos = Collections.singletonList(privateSegment);\n      }else {\n        if (infoStream.isEnabled(\"BD\")) {\n          infoStream.message(\"BD\", \"private segment already gone; skip processing updates\");\n        }\n        infos = null;\n      }\n    } else {\n      infos = writer.listOfSegmentCommitInfos();\n    }\n    return infos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2","date":1588002560,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getInfosToApply(FrozenBufferedUpdates).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getInfosToApply(FrozenBufferedUpdates).mjava","sourceNew":"  /** Returns the {@link SegmentCommitInfo} that this packet is supposed to apply its deletes to, or null\n   *  if the private segment was already merged away. */\n  private synchronized List<SegmentCommitInfo> getInfosToApply(FrozenBufferedUpdates updates) {\n    final List<SegmentCommitInfo> infos;\n    if (updates.privateSegment != null) {\n      if (segmentInfos.contains(updates.privateSegment)) {\n        infos = Collections.singletonList(updates.privateSegment);\n      }else {\n        if (infoStream.isEnabled(\"BD\")) {\n          infoStream.message(\"BD\", \"private segment already gone; skip processing updates\");\n        }\n        infos = null;\n      }\n    } else {\n      infos = segmentInfos.asList();\n    }\n    return infos;\n  }\n\n","sourceOld":"  /** Returns the {@link SegmentCommitInfo} that this packet is supposed to apply its deletes to, or null\n   *  if the private segment was already merged away. */\n  private synchronized List<SegmentCommitInfo> getInfosToApply(FrozenBufferedUpdates updates) {\n    final List<SegmentCommitInfo> infos;\n    if (updates.privateSegment != null) {\n      if (segmentInfos.contains(updates.privateSegment)) {\n        infos = Collections.singletonList(updates.privateSegment);\n      }else {\n        if (infoStream.isEnabled(\"BD\")) {\n          infoStream.message(\"BD\", \"private segment already gone; skip processing updates\");\n        }\n        infos = null;\n      }\n    } else {\n      infos = listOfSegmentCommitInfos();\n    }\n    return infos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9f21f1920c232db2352489eed260fe5c1f39e5a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2":["9f21f1920c232db2352489eed260fe5c1f39e5a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2"]},"commit2Childs":{"9f21f1920c232db2352489eed260fe5c1f39e5a0":["8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9f21f1920c232db2352489eed260fe5c1f39e5a0"],"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}