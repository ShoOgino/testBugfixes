{"path":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal.ReportingMergeScheduler#merge(IndexWriter).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal.ReportingMergeScheduler#merge(IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/TestMergeSchedulerExternal.ReportingMergeScheduler#merge(IndexWriter).mjava","sourceNew":"    @Override\n    public void merge(IndexWriter writer) throws CorruptIndexException, IOException {\n      OneMerge merge = null;\n      while ((merge = writer.getNextMerge()) != null) {\n        if (VERBOSE) {\n          System.out.println(\"executing merge \" + merge.segString(writer.getDirectory()));\n        }\n        writer.merge(merge);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void merge(IndexWriter writer) throws CorruptIndexException, IOException {\n      OneMerge merge = null;\n      while ((merge = writer.getNextMerge()) != null) {\n        if (VERBOSE) {\n          System.out.println(\"executing merge \" + merge.segString(writer.getDirectory()));\n        }\n        writer.merge(merge);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal.ReportingMergeScheduler#merge(IndexWriter).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal.ReportingMergeScheduler#merge(IndexWriter).mjava","sourceNew":"    @Override\n    public void merge(IndexWriter writer) throws IOException {\n      OneMerge merge = null;\n      while ((merge = writer.getNextMerge()) != null) {\n        if (VERBOSE) {\n          System.out.println(\"executing merge \" + merge.segString(writer.getDirectory()));\n        }\n        writer.merge(merge);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void merge(IndexWriter writer) throws CorruptIndexException, IOException {\n      OneMerge merge = null;\n      while ((merge = writer.getNextMerge()) != null) {\n        if (VERBOSE) {\n          System.out.println(\"executing merge \" + merge.segString(writer.getDirectory()));\n        }\n        writer.merge(merge);\n      }\n    }\n\n","bugFix":["59e018adb27395528a3a548ec731ee436c0e9169"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal.ReportingMergeScheduler#merge(IndexWriter).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal.ReportingMergeScheduler#merge(IndexWriter).mjava","sourceNew":"    @Override\n    public void merge(IndexWriter writer) throws IOException {\n      OneMerge merge = null;\n      while ((merge = writer.getNextMerge()) != null) {\n        if (VERBOSE) {\n          System.out.println(\"executing merge \" + merge.segString(writer.getDirectory()));\n        }\n        writer.merge(merge);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void merge(IndexWriter writer) throws CorruptIndexException, IOException {\n      OneMerge merge = null;\n      while ((merge = writer.getNextMerge()) != null) {\n        if (VERBOSE) {\n          System.out.println(\"executing merge \" + merge.segString(writer.getDirectory()));\n        }\n        writer.merge(merge);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4853751884e55469b8cc1abab8fa0788eab240c9","date":1394565067,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal.ReportingMergeScheduler#merge(IndexWriter,MergeTrigger,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestMergeSchedulerExternal.ReportingMergeScheduler#merge(IndexWriter).mjava","sourceNew":"    @Override\n    public void merge(IndexWriter writer, MergeTrigger trigger, boolean newMergesFound) throws IOException {\n      OneMerge merge = null;\n      while ((merge = writer.getNextMerge()) != null) {\n        if (VERBOSE) {\n          System.out.println(\"executing merge \" + merge.segString(writer.getDirectory()));\n        }\n        writer.merge(merge);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void merge(IndexWriter writer) throws IOException {\n      OneMerge merge = null;\n      while ((merge = writer.getNextMerge()) != null) {\n        if (VERBOSE) {\n          System.out.println(\"executing merge \" + merge.segString(writer.getDirectory()));\n        }\n        writer.merge(merge);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4853751884e55469b8cc1abab8fa0788eab240c9":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4853751884e55469b8cc1abab8fa0788eab240c9"]},"commit2Childs":{"4853751884e55469b8cc1abab8fa0788eab240c9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["4853751884e55469b8cc1abab8fa0788eab240c9","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}