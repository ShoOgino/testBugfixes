{"path":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","sourceNew":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException {\n      if (!storePositions && !storeOffsets) {\n        return null;\n      }\n      \n      TVDocsAndPositionsEnum docsAndPositionsEnum;\n      if (reuse != null) {\n        docsAndPositionsEnum = (TVDocsAndPositionsEnum) reuse;\n        if (docsAndPositionsEnum.canReuse(storeOffsets)) {\n          docsAndPositionsEnum = (TVDocsAndPositionsEnum) reuse;\n        } else {\n          docsAndPositionsEnum = new TVDocsAndPositionsEnum(storeOffsets);\n        }\n      } else {\n        docsAndPositionsEnum = new TVDocsAndPositionsEnum(storeOffsets);\n      }\n      docsAndPositionsEnum.reset(liveDocs, positions, startOffsets, endOffsets);\n      return docsAndPositionsEnum;\n    }\n\n","sourceOld":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException {\n      if (!storePositions && !storeOffsets) {\n        return null;\n      }\n      \n      TVDocsAndPositionsEnum docsAndPositionsEnum;\n      if (reuse != null) {\n        docsAndPositionsEnum = (TVDocsAndPositionsEnum) reuse;\n        if (docsAndPositionsEnum.canReuse(storeOffsets)) {\n          docsAndPositionsEnum = (TVDocsAndPositionsEnum) reuse;\n        } else {\n          docsAndPositionsEnum = new TVDocsAndPositionsEnum(storeOffsets);\n        }\n      } else {\n        docsAndPositionsEnum = new TVDocsAndPositionsEnum(storeOffsets);\n      }\n      docsAndPositionsEnum.reset(liveDocs, positions, startOffsets, endOffsets);\n      return docsAndPositionsEnum;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31f025ae60076ae95274433f3fe8e6ace2857a87","date":1326669465,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#docsAndPositions(Bits,DocsAndPositionsEnum).mjava","sourceNew":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse, boolean needsOffsets) throws IOException {\n      if (needsOffsets && !storeOffsets) {\n        return null;\n      }\n\n      if (!storePositions && !storeOffsets) {\n        return null;\n      }\n      \n      TVDocsAndPositionsEnum docsAndPositionsEnum;\n      if (reuse != null && reuse instanceof TVDocsAndPositionsEnum) {\n        docsAndPositionsEnum = (TVDocsAndPositionsEnum) reuse;\n      } else {\n        docsAndPositionsEnum = new TVDocsAndPositionsEnum();\n      }\n      docsAndPositionsEnum.reset(liveDocs, positions, startOffsets, endOffsets);\n      return docsAndPositionsEnum;\n    }\n\n","sourceOld":"    @Override\n    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse) throws IOException {\n      if (!storePositions && !storeOffsets) {\n        return null;\n      }\n      \n      TVDocsAndPositionsEnum docsAndPositionsEnum;\n      if (reuse != null) {\n        docsAndPositionsEnum = (TVDocsAndPositionsEnum) reuse;\n        if (docsAndPositionsEnum.canReuse(storeOffsets)) {\n          docsAndPositionsEnum = (TVDocsAndPositionsEnum) reuse;\n        } else {\n          docsAndPositionsEnum = new TVDocsAndPositionsEnum(storeOffsets);\n        }\n      } else {\n        docsAndPositionsEnum = new TVDocsAndPositionsEnum(storeOffsets);\n      }\n      docsAndPositionsEnum.reset(liveDocs, positions, startOffsets, endOffsets);\n      return docsAndPositionsEnum;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"31f025ae60076ae95274433f3fe8e6ace2857a87":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"31f025ae60076ae95274433f3fe8e6ace2857a87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}