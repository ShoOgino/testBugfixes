{"path":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator#sizeOfCollection(Collection[#],int,long).mjava","commits":[{"id":"fe90d104db258964b96e50418b9caa0c156eafda","date":1561555614,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator#sizeOfCollection(Collection[#],int,long).mjava","pathOld":"/dev/null","sourceNew":"  private static long sizeOfCollection(Collection<?> collection, int depth, long defSize) {\n    if (collection == null) {\n      return 0;\n    }\n    long size = shallowSizeOf(collection);\n    if (depth > MAX_DEPTH) {\n      return size;\n    }\n    // assume array-backed collection and add per-object references\n    size += NUM_BYTES_ARRAY_HEADER * 2;\n    for (Object o : collection) {\n      size += sizeOfObject(o, depth, defSize);\n    }\n    return alignObjectSize(size);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0633445968876e74a19e422a3a955ca6e00ad0da","date":1561710807,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator#sizeOfCollection(Collection[#],int,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator#sizeOfCollection(Collection[#],int,long).mjava","sourceNew":"  private static long sizeOfCollection(Collection<?> collection, int depth, long defSize) {\n    if (collection == null) {\n      return 0;\n    }\n    long size = shallowSizeOf(collection);\n    if (depth > MAX_DEPTH) {\n      return size;\n    }\n    // assume array-backed collection and add per-object references\n    size += NUM_BYTES_ARRAY_HEADER + collection.size() * NUM_BYTES_OBJECT_REF;\n    for (Object o : collection) {\n      size += sizeOfObject(o, depth, defSize);\n    }\n    return alignObjectSize(size);\n  }\n\n","sourceOld":"  private static long sizeOfCollection(Collection<?> collection, int depth, long defSize) {\n    if (collection == null) {\n      return 0;\n    }\n    long size = shallowSizeOf(collection);\n    if (depth > MAX_DEPTH) {\n      return size;\n    }\n    // assume array-backed collection and add per-object references\n    size += NUM_BYTES_ARRAY_HEADER * 2;\n    for (Object o : collection) {\n      size += sizeOfObject(o, depth, defSize);\n    }\n    return alignObjectSize(size);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0633445968876e74a19e422a3a955ca6e00ad0da":["fe90d104db258964b96e50418b9caa0c156eafda"],"fe90d104db258964b96e50418b9caa0c156eafda":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0633445968876e74a19e422a3a955ca6e00ad0da"]},"commit2Childs":{"0633445968876e74a19e422a3a955ca6e00ad0da":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe90d104db258964b96e50418b9caa0c156eafda":["0633445968876e74a19e422a3a955ca6e00ad0da"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fe90d104db258964b96e50418b9caa0c156eafda"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}