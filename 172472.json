{"path":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","sourceNew":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    BufferedReader reader = null;\n    \n    try {\n      Process process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString( in );\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      IOUtils.closeQuietly( reader );\n      IOUtils.closeQuietly( in );\n    }\n  }\n\n","sourceOld":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    BufferedReader reader = null;\n    \n    try {\n      Process process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString( in );\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      IOUtils.closeQuietly( reader );\n      IOUtils.closeQuietly( in );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","sourceNew":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    BufferedReader reader = null;\n    \n    try {\n      Process process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString( in );\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      IOUtils.closeQuietly( reader );\n      IOUtils.closeQuietly( in );\n    }\n  }\n\n","sourceOld":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    BufferedReader reader = null;\n    \n    try {\n      Process process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString( in );\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      IOUtils.closeQuietly( reader );\n      IOUtils.closeQuietly( in );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","sourceNew":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    BufferedReader reader = null;\n    \n    try {\n      Process process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString( in );\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      IOUtils.closeQuietly( reader );\n      IOUtils.closeQuietly( in );\n    }\n  }\n\n","sourceOld":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    BufferedReader reader = null;\n    \n    try {\n      Process process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString( in );\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      IOUtils.closeQuietly( reader );\n      IOUtils.closeQuietly( in );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6eed6a4605d9a188a53ad2a5a217ea50a409c7cf","date":1331032094,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","sourceNew":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    Process process = null;\n    \n    try {\n      process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString(in);\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      if (process != null) {\n        IOUtils.closeQuietly( process.getOutputStream() );\n        IOUtils.closeQuietly( process.getInputStream() );\n        IOUtils.closeQuietly( process.getErrorStream() );\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    BufferedReader reader = null;\n    \n    try {\n      Process process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString( in );\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      IOUtils.closeQuietly( reader );\n      IOUtils.closeQuietly( in );\n    }\n  }\n\n","bugFix":["2070bf73ffa1039a505000f99ea245884ff19e11"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","sourceNew":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    Process process = null;\n    \n    try {\n      process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString(in);\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      if (process != null) {\n        IOUtils.closeQuietly( process.getOutputStream() );\n        IOUtils.closeQuietly( process.getInputStream() );\n        IOUtils.closeQuietly( process.getErrorStream() );\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    BufferedReader reader = null;\n    \n    try {\n      Process process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString( in );\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      IOUtils.closeQuietly( reader );\n      IOUtils.closeQuietly( in );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"197070b7f9191af8b5d8598b579393d4a67e32f0","date":1341843740,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","sourceNew":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    Process process = null;\n    \n    try {\n      process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString(new InputStreamReader(in, Charset.defaultCharset()));\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      if (process != null) {\n        IOUtils.closeQuietly( process.getOutputStream() );\n        IOUtils.closeQuietly( process.getInputStream() );\n        IOUtils.closeQuietly( process.getErrorStream() );\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    Process process = null;\n    \n    try {\n      process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString(in);\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      if (process != null) {\n        IOUtils.closeQuietly( process.getOutputStream() );\n        IOUtils.closeQuietly( process.getInputStream() );\n        IOUtils.closeQuietly( process.getErrorStream() );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","sourceNew":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    Process process = null;\n    \n    try {\n      process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString(new InputStreamReader(in, Charset.defaultCharset()));\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      if (process != null) {\n        IOUtils.closeQuietly( process.getOutputStream() );\n        IOUtils.closeQuietly( process.getInputStream() );\n        IOUtils.closeQuietly( process.getErrorStream() );\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    Process process = null;\n    \n    try {\n      process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString(in);\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      if (process != null) {\n        IOUtils.closeQuietly( process.getOutputStream() );\n        IOUtils.closeQuietly( process.getInputStream() );\n        IOUtils.closeQuietly( process.getErrorStream() );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","sourceNew":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    Process process = null;\n    \n    try {\n      process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString(new InputStreamReader(in, Charset.defaultCharset()));\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      if (process != null) {\n        IOUtils.closeQuietly( process.getOutputStream() );\n        IOUtils.closeQuietly( process.getInputStream() );\n        IOUtils.closeQuietly( process.getErrorStream() );\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    Process process = null;\n    \n    try {\n      process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString(in);\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      if (process != null) {\n        IOUtils.closeQuietly( process.getOutputStream() );\n        IOUtils.closeQuietly( process.getInputStream() );\n        IOUtils.closeQuietly( process.getErrorStream() );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","sourceNew":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    Process process = null;\n    \n    try {\n      process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString(new InputStreamReader(in, Charset.defaultCharset()));\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      if (process != null) {\n        IOUtils.closeQuietly( process.getOutputStream() );\n        IOUtils.closeQuietly( process.getInputStream() );\n        IOUtils.closeQuietly( process.getErrorStream() );\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    Process process = null;\n    \n    try {\n      process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString(in);\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      if (process != null) {\n        IOUtils.closeQuietly( process.getOutputStream() );\n        IOUtils.closeQuietly( process.getInputStream() );\n        IOUtils.closeQuietly( process.getErrorStream() );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d8770f1cf41b019832667e392030ec054ea577a","date":1408383229,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","sourceNew":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    InputStream in = null;\n    Process process = null;\n    \n    try {\n      process = Runtime.getRuntime().exec(cmd);\n      in = process.getInputStream();\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString(new InputStreamReader(in, Charset.defaultCharset()));\n    } catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    } catch (Error err) {\n      if (err.getMessage() != null && err.getMessage().contains(\"posix_spawn\")) {\n        log.warn(\"Error forking command due to JVM locale bug (see https://issues.apache.org/jira/browse/SOLR-6387): \" + err.getMessage());\n        return \"(error executing: \" + cmd + \")\";\n      }\n      throw err;\n    } finally {\n      if (process != null) {\n        IOUtils.closeQuietly( process.getOutputStream() );\n        IOUtils.closeQuietly( process.getInputStream() );\n        IOUtils.closeQuietly( process.getErrorStream() );\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    Process process = null;\n    \n    try {\n      process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString(new InputStreamReader(in, Charset.defaultCharset()));\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      if (process != null) {\n        IOUtils.closeQuietly( process.getOutputStream() );\n        IOUtils.closeQuietly( process.getInputStream() );\n        IOUtils.closeQuietly( process.getErrorStream() );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dfe01fdf105c0729e80893e0520176aa9891f2a","date":1408475467,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","sourceNew":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    InputStream in = null;\n    Process process = null;\n    \n    try {\n      process = Runtime.getRuntime().exec(cmd);\n      in = process.getInputStream();\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString(new InputStreamReader(in, Charset.defaultCharset()));\n    } catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    } catch (Error err) {\n      if (err.getMessage() != null && (err.getMessage().contains(\"posix_spawn\") || err.getMessage().contains(\"UNIXProcess\"))) {\n        log.warn(\"Error forking command due to JVM locale bug (see https://issues.apache.org/jira/browse/SOLR-6387): \" + err.getMessage());\n        return \"(error executing: \" + cmd + \")\";\n      }\n      throw err;\n    } finally {\n      if (process != null) {\n        IOUtils.closeQuietly( process.getOutputStream() );\n        IOUtils.closeQuietly( process.getInputStream() );\n        IOUtils.closeQuietly( process.getErrorStream() );\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    InputStream in = null;\n    Process process = null;\n    \n    try {\n      process = Runtime.getRuntime().exec(cmd);\n      in = process.getInputStream();\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString(new InputStreamReader(in, Charset.defaultCharset()));\n    } catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    } catch (Error err) {\n      if (err.getMessage() != null && err.getMessage().contains(\"posix_spawn\")) {\n        log.warn(\"Error forking command due to JVM locale bug (see https://issues.apache.org/jira/browse/SOLR-6387): \" + err.getMessage());\n        return \"(error executing: \" + cmd + \")\";\n      }\n      throw err;\n    } finally {\n      if (process != null) {\n        IOUtils.closeQuietly( process.getOutputStream() );\n        IOUtils.closeQuietly( process.getInputStream() );\n        IOUtils.closeQuietly( process.getErrorStream() );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8c7b2ce545e86aaf1ab6f90537c1343aa787401","date":1576677787,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    InputStream in = null;\n    Process process = null;\n    \n    try {\n      process = Runtime.getRuntime().exec(cmd);\n      in = process.getInputStream();\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString(new InputStreamReader(in, Charset.defaultCharset()));\n    } catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    } catch (Error err) {\n      if (err.getMessage() != null && (err.getMessage().contains(\"posix_spawn\") || err.getMessage().contains(\"UNIXProcess\"))) {\n        log.warn(\"Error forking command due to JVM locale bug (see https://issues.apache.org/jira/browse/SOLR-6387): \" + err.getMessage());\n        return \"(error executing: \" + cmd + \")\";\n      }\n      throw err;\n    } finally {\n      if (process != null) {\n        IOUtils.closeQuietly( process.getOutputStream() );\n        IOUtils.closeQuietly( process.getInputStream() );\n        IOUtils.closeQuietly( process.getErrorStream() );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c66470e527299cc148ad0b3441d08dfb7cb9e03","date":1576859740,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    InputStream in = null;\n    Process process = null;\n    \n    try {\n      process = Runtime.getRuntime().exec(cmd);\n      in = process.getInputStream();\n      // use default charset from locale here, because the command invoked also uses the default locale:\n      return IOUtils.toString(new InputStreamReader(in, Charset.defaultCharset()));\n    } catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    } catch (Error err) {\n      if (err.getMessage() != null && (err.getMessage().contains(\"posix_spawn\") || err.getMessage().contains(\"UNIXProcess\"))) {\n        log.warn(\"Error forking command due to JVM locale bug (see https://issues.apache.org/jira/browse/SOLR-6387): \" + err.getMessage());\n        return \"(error executing: \" + cmd + \")\";\n      }\n      throw err;\n    } finally {\n      if (process != null) {\n        IOUtils.closeQuietly( process.getOutputStream() );\n        IOUtils.closeQuietly( process.getInputStream() );\n        IOUtils.closeQuietly( process.getErrorStream() );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6eed6a4605d9a188a53ad2a5a217ea50a409c7cf":["c26f00b574427b55127e869b935845554afde1fa"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["c26f00b574427b55127e869b935845554afde1fa","6eed6a4605d9a188a53ad2a5a217ea50a409c7cf"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"2acf500f78aa12b92e371fd89c719291986b6b90":["6eed6a4605d9a188a53ad2a5a217ea50a409c7cf","197070b7f9191af8b5d8598b579393d4a67e32f0"],"4c66470e527299cc148ad0b3441d08dfb7cb9e03":["3dfe01fdf105c0729e80893e0520176aa9891f2a","e8c7b2ce545e86aaf1ab6f90537c1343aa787401"],"46d8ada1fff8d18cb197c38c7983225162599948":["6eed6a4605d9a188a53ad2a5a217ea50a409c7cf","2acf500f78aa12b92e371fd89c719291986b6b90"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["6eed6a4605d9a188a53ad2a5a217ea50a409c7cf","2acf500f78aa12b92e371fd89c719291986b6b90"],"0d8770f1cf41b019832667e392030ec054ea577a":["2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e8c7b2ce545e86aaf1ab6f90537c1343aa787401":["3dfe01fdf105c0729e80893e0520176aa9891f2a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dfe01fdf105c0729e80893e0520176aa9891f2a":["0d8770f1cf41b019832667e392030ec054ea577a"],"197070b7f9191af8b5d8598b579393d4a67e32f0":["6eed6a4605d9a188a53ad2a5a217ea50a409c7cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e8c7b2ce545e86aaf1ab6f90537c1343aa787401"]},"commit2Childs":{"6eed6a4605d9a188a53ad2a5a217ea50a409c7cf":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424","197070b7f9191af8b5d8598b579393d4a67e32f0"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"c26f00b574427b55127e869b935845554afde1fa":["6eed6a4605d9a188a53ad2a5a217ea50a409c7cf","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"2acf500f78aa12b92e371fd89c719291986b6b90":["46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424","0d8770f1cf41b019832667e392030ec054ea577a"],"4c66470e527299cc148ad0b3441d08dfb7cb9e03":[],"46d8ada1fff8d18cb197c38c7983225162599948":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"0d8770f1cf41b019832667e392030ec054ea577a":["3dfe01fdf105c0729e80893e0520176aa9891f2a"],"e8c7b2ce545e86aaf1ab6f90537c1343aa787401":["4c66470e527299cc148ad0b3441d08dfb7cb9e03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"197070b7f9191af8b5d8598b579393d4a67e32f0":["2acf500f78aa12b92e371fd89c719291986b6b90"],"3dfe01fdf105c0729e80893e0520176aa9891f2a":["4c66470e527299cc148ad0b3441d08dfb7cb9e03","e8c7b2ce545e86aaf1ab6f90537c1343aa787401"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","4c66470e527299cc148ad0b3441d08dfb7cb9e03","46d8ada1fff8d18cb197c38c7983225162599948","fe33227f6805edab2036cbb80645cc4e2d1fa424","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}