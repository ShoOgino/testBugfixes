{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsReader#SimpleTextStoredFieldsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsReader#SimpleTextStoredFieldsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsReader#SimpleTextStoredFieldsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","sourceNew":"  public SimpleTextStoredFieldsReader(Directory directory, SegmentInfo si, FieldInfos fn, IOContext context) throws IOException {\n    this.fieldInfos = fn;\n    boolean success = false;\n    try {\n      in = directory.openInput(IndexFileNames.segmentFileName(si.name, \"\", SimpleTextStoredFieldsWriter.FIELDS_EXTENSION), context);\n      success = true;\n    } finally {\n      if (!success) {\n        close();\n      }\n    }\n    readIndex();\n  }\n\n","sourceOld":"  public SimpleTextStoredFieldsReader(Directory directory, SegmentInfo si, FieldInfos fn, IOContext context) throws IOException {\n    this.fieldInfos = fn;\n    boolean success = false;\n    try {\n      in = directory.openInput(IndexFileNames.segmentFileName(si.name, \"\", SimpleTextStoredFieldsWriter.FIELDS_EXTENSION), context);\n      success = true;\n    } finally {\n      if (!success) {\n        close();\n      }\n    }\n    readIndex();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1bf819846fb54a635eb297e36e7c6196d67f8273","date":1349447995,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsReader#SimpleTextStoredFieldsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsReader#SimpleTextStoredFieldsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","sourceNew":"  public SimpleTextStoredFieldsReader(Directory directory, SegmentInfo si, FieldInfos fn, IOContext context) throws IOException {\n    this.fieldInfos = fn;\n    boolean success = false;\n    try {\n      in = directory.openInput(IndexFileNames.segmentFileName(si.name, \"\", SimpleTextStoredFieldsWriter.FIELDS_EXTENSION), context);\n      success = true;\n    } finally {\n      if (!success) {\n        try {\n          close();\n        } catch (Throwable t) {} // ensure we throw our original exception\n      }\n    }\n    readIndex();\n  }\n\n","sourceOld":"  public SimpleTextStoredFieldsReader(Directory directory, SegmentInfo si, FieldInfos fn, IOContext context) throws IOException {\n    this.fieldInfos = fn;\n    boolean success = false;\n    try {\n      in = directory.openInput(IndexFileNames.segmentFileName(si.name, \"\", SimpleTextStoredFieldsWriter.FIELDS_EXTENSION), context);\n      success = true;\n    } finally {\n      if (!success) {\n        close();\n      }\n    }\n    readIndex();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e784d2742d5536b6fceba16c6d032d4b2e38e320","date":1349724693,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsReader#SimpleTextStoredFieldsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsReader#SimpleTextStoredFieldsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","sourceNew":"  public SimpleTextStoredFieldsReader(Directory directory, SegmentInfo si, FieldInfos fn, IOContext context) throws IOException {\n    this.fieldInfos = fn;\n    boolean success = false;\n    try {\n      in = directory.openInput(IndexFileNames.segmentFileName(si.name, \"\", SimpleTextStoredFieldsWriter.FIELDS_EXTENSION), context);\n      success = true;\n    } finally {\n      if (!success) {\n        try {\n          close();\n        } catch (Throwable t) {} // ensure we throw our original exception\n      }\n    }\n    readIndex(si.getDocCount());\n  }\n\n","sourceOld":"  public SimpleTextStoredFieldsReader(Directory directory, SegmentInfo si, FieldInfos fn, IOContext context) throws IOException {\n    this.fieldInfos = fn;\n    boolean success = false;\n    try {\n      in = directory.openInput(IndexFileNames.segmentFileName(si.name, \"\", SimpleTextStoredFieldsWriter.FIELDS_EXTENSION), context);\n      success = true;\n    } finally {\n      if (!success) {\n        try {\n          close();\n        } catch (Throwable t) {} // ensure we throw our original exception\n      }\n    }\n    readIndex();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0267c69e2456a3477a1ad785723f2135da3117e","date":1425317087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsReader#SimpleTextStoredFieldsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsReader#SimpleTextStoredFieldsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","sourceNew":"  public SimpleTextStoredFieldsReader(Directory directory, SegmentInfo si, FieldInfos fn, IOContext context) throws IOException {\n    this.fieldInfos = fn;\n    boolean success = false;\n    try {\n      in = directory.openInput(IndexFileNames.segmentFileName(si.name, \"\", SimpleTextStoredFieldsWriter.FIELDS_EXTENSION), context);\n      success = true;\n    } finally {\n      if (!success) {\n        try {\n          close();\n        } catch (Throwable t) {} // ensure we throw our original exception\n      }\n    }\n    readIndex(si.maxDoc());\n  }\n\n","sourceOld":"  public SimpleTextStoredFieldsReader(Directory directory, SegmentInfo si, FieldInfos fn, IOContext context) throws IOException {\n    this.fieldInfos = fn;\n    boolean success = false;\n    try {\n      in = directory.openInput(IndexFileNames.segmentFileName(si.name, \"\", SimpleTextStoredFieldsWriter.FIELDS_EXTENSION), context);\n      success = true;\n    } finally {\n      if (!success) {\n        try {\n          close();\n        } catch (Throwable t) {} // ensure we throw our original exception\n      }\n    }\n    readIndex(si.getDocCount());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b06445ae1731e049327712db0454e5643ca9b7fe","date":1425329139,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsReader#SimpleTextStoredFieldsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsReader#SimpleTextStoredFieldsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","sourceNew":"  public SimpleTextStoredFieldsReader(Directory directory, SegmentInfo si, FieldInfos fn, IOContext context) throws IOException {\n    this.fieldInfos = fn;\n    boolean success = false;\n    try {\n      in = directory.openInput(IndexFileNames.segmentFileName(si.name, \"\", SimpleTextStoredFieldsWriter.FIELDS_EXTENSION), context);\n      success = true;\n    } finally {\n      if (!success) {\n        try {\n          close();\n        } catch (Throwable t) {} // ensure we throw our original exception\n      }\n    }\n    readIndex(si.maxDoc());\n  }\n\n","sourceOld":"  public SimpleTextStoredFieldsReader(Directory directory, SegmentInfo si, FieldInfos fn, IOContext context) throws IOException {\n    this.fieldInfos = fn;\n    boolean success = false;\n    try {\n      in = directory.openInput(IndexFileNames.segmentFileName(si.name, \"\", SimpleTextStoredFieldsWriter.FIELDS_EXTENSION), context);\n      success = true;\n    } finally {\n      if (!success) {\n        try {\n          close();\n        } catch (Throwable t) {} // ensure we throw our original exception\n      }\n    }\n    readIndex(si.getDocCount());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsReader#SimpleTextStoredFieldsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsReader#SimpleTextStoredFieldsReader(Directory,SegmentInfo,FieldInfos,IOContext).mjava","sourceNew":"  public SimpleTextStoredFieldsReader(Directory directory, SegmentInfo si, FieldInfos fn, IOContext context) throws IOException {\n    this.fieldInfos = fn;\n    boolean success = false;\n    try {\n      in = directory.openInput(IndexFileNames.segmentFileName(si.name, \"\", SimpleTextStoredFieldsWriter.FIELDS_EXTENSION), context);\n      success = true;\n    } finally {\n      if (!success) {\n        try {\n          close();\n        } catch (Throwable t) {} // ensure we throw our original exception\n      }\n    }\n    readIndex(si.maxDoc());\n  }\n\n","sourceOld":"  public SimpleTextStoredFieldsReader(Directory directory, SegmentInfo si, FieldInfos fn, IOContext context) throws IOException {\n    this.fieldInfos = fn;\n    boolean success = false;\n    try {\n      in = directory.openInput(IndexFileNames.segmentFileName(si.name, \"\", SimpleTextStoredFieldsWriter.FIELDS_EXTENSION), context);\n      success = true;\n    } finally {\n      if (!success) {\n        try {\n          close();\n        } catch (Throwable t) {} // ensure we throw our original exception\n      }\n    }\n    readIndex(si.getDocCount());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e784d2742d5536b6fceba16c6d032d4b2e38e320":["1bf819846fb54a635eb297e36e7c6196d67f8273"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["e784d2742d5536b6fceba16c6d032d4b2e38e320","b0267c69e2456a3477a1ad785723f2135da3117e"],"b06445ae1731e049327712db0454e5643ca9b7fe":["e784d2742d5536b6fceba16c6d032d4b2e38e320","b0267c69e2456a3477a1ad785723f2135da3117e"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b0267c69e2456a3477a1ad785723f2135da3117e":["e784d2742d5536b6fceba16c6d032d4b2e38e320"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1bf819846fb54a635eb297e36e7c6196d67f8273":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b0267c69e2456a3477a1ad785723f2135da3117e"]},"commit2Childs":{"e784d2742d5536b6fceba16c6d032d4b2e38e320":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","b0267c69e2456a3477a1ad785723f2135da3117e"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b06445ae1731e049327712db0454e5643ca9b7fe":[],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["1bf819846fb54a635eb297e36e7c6196d67f8273"],"b0267c69e2456a3477a1ad785723f2135da3117e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"1bf819846fb54a635eb297e36e7c6196d67f8273":["e784d2742d5536b6fceba16c6d032d4b2e38e320"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}