{"path":"sandbox/contributions/webcrawler-LARM/src/hplb/xml/util/UrlScanner#main(String[]).mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/hplb/xml/util/UrlScanner#main(String[]).mjava","pathOld":"/dev/null","sourceNew":"    public static void main(String[] args) throws Exception {\n        URL url = null;\n        //HttpClient cl;\n        //HttpResponse res = null;\n    \n        try {\n            url = new URL(args[args.length-1]);\n            for (int i = 0; i < args.length - 1; i++) {\n                if (\"-t\".equals(args[i])) {\n                    test = true;\n                } else if (\"-v\".equals(args[i])) {\n                    verbose = true;\n                } else if (\"-h\".equals(args[i])) {\n                    proxyHost = args[++i];\n                } else if (\"-p\".equals(args[i])) {\n                    proxyPort = args[++i];\n                } else {\n                    usage();\n                }\n            }\n        } catch (Exception e) {\n            usage();\n        }\n\n        //cl = new HttpClient(url);\n        if (proxyHost != null) {\n            System.getProperties().put(\"http.proxyHost\", proxyHost);\n        }\n        if (proxyPort != null) {\n            System.getProperties().put(\"http.proxyPort\", proxyPort);\n        }\n        /*\n        try {\n            res = cl.get();\n        } catch (UnknownHostException e) {\n            panic(\"Couldn't connect to host \" + e.getMessage());\n        } catch (IOException e) {\n            panic(\"I/O exception\");\n        } catch (Exception e) {\n            panic(\"Error: \" + e.getMessage());\n        }\n        */\n        \n        new HtmlScanner(url, new UrlScanner());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e","date":1022957716,"type":4,"author":"cmarschner","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/hplb/xml/util/UrlScanner#main(String[]).mjava","sourceNew":null,"sourceOld":"    public static void main(String[] args) throws Exception {\n        URL url = null;\n        //HttpClient cl;\n        //HttpResponse res = null;\n    \n        try {\n            url = new URL(args[args.length-1]);\n            for (int i = 0; i < args.length - 1; i++) {\n                if (\"-t\".equals(args[i])) {\n                    test = true;\n                } else if (\"-v\".equals(args[i])) {\n                    verbose = true;\n                } else if (\"-h\".equals(args[i])) {\n                    proxyHost = args[++i];\n                } else if (\"-p\".equals(args[i])) {\n                    proxyPort = args[++i];\n                } else {\n                    usage();\n                }\n            }\n        } catch (Exception e) {\n            usage();\n        }\n\n        //cl = new HttpClient(url);\n        if (proxyHost != null) {\n            System.getProperties().put(\"http.proxyHost\", proxyHost);\n        }\n        if (proxyPort != null) {\n            System.getProperties().put(\"http.proxyPort\", proxyPort);\n        }\n        /*\n        try {\n            res = cl.get();\n        } catch (UnknownHostException e) {\n            panic(\"Couldn't connect to host \" + e.getMessage());\n        } catch (IOException e) {\n            panic(\"I/O exception\");\n        } catch (Exception e) {\n            panic(\"Error: \" + e.getMessage());\n        }\n        */\n        \n        new HtmlScanner(url, new UrlScanner());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e":["05d36e0b328ec96237035fbcca240e73631396e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e"]},"commit2Childs":{"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"05d36e0b328ec96237035fbcca240e73631396e5":["12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}