{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrClient().mjava","commits":[{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrClient().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrClient createNewSolrClient()\n  {\n    try {\n      // setup the server...\n      String url = jetty.getBaseUrl().toString() + \"/collection1\";\n      // smaller queue size hits locks more often\n      ConcurrentUpdateSolrClient concurrentClient = new ConcurrentUpdateSolrClient( url, 2, 5 ) {\n        \n        public Throwable lastError = null;\n        @Override\n        public void handleError(Throwable ex) {\n          handledException = lastError = ex;\n        }\n      };\n\n      concurrentClient.setParser(new XMLResponseParser());\n      concurrentClient.setRequestWriter(new RequestWriter());\n      return concurrentClient;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = jetty.getBaseUrl().toString() + \"/collection1\";\n      // smaller queue size hits locks more often\n      ConcurrentUpdateSolrServer s = new ConcurrentUpdateSolrServer( url, 2, 5 ) {\n        \n        public Throwable lastError = null;\n        @Override\n        public void handleError(Throwable ex) {\n          handledException = lastError = ex;\n        }\n      };\n\n      s.setParser(new XMLResponseParser());\n      s.setRequestWriter(new RequestWriter());\n      return s;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4383b91725e5b335d0a9d5f24b122b813dddd0cc","date":1442106431,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrClient().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrClient().mjava","sourceNew":"  @Override\n  public SolrClient createNewSolrClient()\n  {\n    try {\n      // setup the server...\n      String url = jetty.getBaseUrl().toString() + \"/collection1\";\n      // smaller queue size hits locks more often\n      ConcurrentUpdateSolrClient concurrentClient = new ErrorTrackingConcurrentUpdateSolrClient( url, 2, 5 );\n      concurrentClient.setParser(new XMLResponseParser());\n      concurrentClient.setRequestWriter(new RequestWriter());\n      return concurrentClient;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrClient createNewSolrClient()\n  {\n    try {\n      // setup the server...\n      String url = jetty.getBaseUrl().toString() + \"/collection1\";\n      // smaller queue size hits locks more often\n      ConcurrentUpdateSolrClient concurrentClient = new ConcurrentUpdateSolrClient( url, 2, 5 ) {\n        \n        public Throwable lastError = null;\n        @Override\n        public void handleError(Throwable ex) {\n          handledException = lastError = ex;\n        }\n      };\n\n      concurrentClient.setParser(new XMLResponseParser());\n      concurrentClient.setRequestWriter(new RequestWriter());\n      return concurrentClient;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":["c07dc645ff236a7d51da2a5ef49a948dfbf8610c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c07dc645ff236a7d51da2a5ef49a948dfbf8610c","date":1498242650,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrClient().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrClient().mjava","sourceNew":"  @Override\n  public SolrClient createNewSolrClient()\n  {\n    try {\n      // setup the server...\n      String url = jetty.getBaseUrl().toString() + \"/collection1\";\n      // smaller queue size hits locks more often\n      ConcurrentUpdateSolrClient concurrentClient = new ErrorTrackingConcurrentUpdateSolrClient.Builder(url)\n          .withQueueSize(2)\n          .withThreadCount(5)\n          .build();\n      concurrentClient.setParser(new XMLResponseParser());\n      concurrentClient.setRequestWriter(new RequestWriter());\n      return concurrentClient;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrClient createNewSolrClient()\n  {\n    try {\n      // setup the server...\n      String url = jetty.getBaseUrl().toString() + \"/collection1\";\n      // smaller queue size hits locks more often\n      ConcurrentUpdateSolrClient concurrentClient = new ErrorTrackingConcurrentUpdateSolrClient( url, 2, 5 );\n      concurrentClient.setParser(new XMLResponseParser());\n      concurrentClient.setRequestWriter(new RequestWriter());\n      return concurrentClient;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":["4383b91725e5b335d0a9d5f24b122b813dddd0cc"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrClient().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrClient().mjava","sourceNew":"  @Override\n  public SolrClient createNewSolrClient()\n  {\n    try {\n      // setup the server...\n      String url = jetty.getBaseUrl().toString() + \"/collection1\";\n      // smaller queue size hits locks more often\n      ConcurrentUpdateSolrClient concurrentClient = new ErrorTrackingConcurrentUpdateSolrClient.Builder(url)\n          .withQueueSize(2)\n          .withThreadCount(5)\n          .build();\n      concurrentClient.setParser(new XMLResponseParser());\n      concurrentClient.setRequestWriter(new RequestWriter());\n      return concurrentClient;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrClient createNewSolrClient()\n  {\n    try {\n      // setup the server...\n      String url = jetty.getBaseUrl().toString() + \"/collection1\";\n      // smaller queue size hits locks more often\n      ConcurrentUpdateSolrClient concurrentClient = new ErrorTrackingConcurrentUpdateSolrClient( url, 2, 5 );\n      concurrentClient.setParser(new XMLResponseParser());\n      concurrentClient.setRequestWriter(new RequestWriter());\n      return concurrentClient;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrClient().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest#createNewSolrClient().mjava","sourceNew":"  @Override\n  public SolrClient createNewSolrClient()\n  {\n    try {\n      // setup the server...\n      String url = jetty.getBaseUrl().toString() + \"/collection1\";\n      // smaller queue size hits locks more often\n      ConcurrentUpdateSolrClient concurrentClient = new ErrorTrackingConcurrentUpdateSolrClient.Builder(url)\n          .withQueueSize(2)\n          .withThreadCount(5)\n          .build();\n      concurrentClient.setParser(new XMLResponseParser());\n      concurrentClient.setRequestWriter(new RequestWriter());\n      return concurrentClient;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrClient createNewSolrClient()\n  {\n    try {\n      // setup the server...\n      String url = jetty.getBaseUrl().toString() + \"/collection1\";\n      // smaller queue size hits locks more often\n      ConcurrentUpdateSolrClient concurrentClient = new ErrorTrackingConcurrentUpdateSolrClient( url, 2, 5 );\n      concurrentClient.setParser(new XMLResponseParser());\n      concurrentClient.setRequestWriter(new RequestWriter());\n      return concurrentClient;\n    }\n    \n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4383b91725e5b335d0a9d5f24b122b813dddd0cc":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["4383b91725e5b335d0a9d5f24b122b813dddd0cc","c07dc645ff236a7d51da2a5ef49a948dfbf8610c"],"28288370235ed02234a64753cdbf0c6ec096304a":["4383b91725e5b335d0a9d5f24b122b813dddd0cc","c07dc645ff236a7d51da2a5ef49a948dfbf8610c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"c07dc645ff236a7d51da2a5ef49a948dfbf8610c":["4383b91725e5b335d0a9d5f24b122b813dddd0cc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bafca15d8e408346a67f4282ad1143b88023893b"],"4383b91725e5b335d0a9d5f24b122b813dddd0cc":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a","c07dc645ff236a7d51da2a5ef49a948dfbf8610c"],"bafca15d8e408346a67f4282ad1143b88023893b":["4383b91725e5b335d0a9d5f24b122b813dddd0cc"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c07dc645ff236a7d51da2a5ef49a948dfbf8610c":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}