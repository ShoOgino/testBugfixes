{"path":"src/java/org/apache/lucene/store/IndexOutput#writeChars(char[],int,int).mjava","commits":[{"id":"4350b17bd363cd13a95171b8df1ca62ea4c3e71c","date":1183562198,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexOutput#writeChars(char[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Writes a sequence of UTF-8 encoded characters from a char[].\n   * @param s the source of the characters\n   * @param start the first character in the sequence\n   * @param length the number of characters in the sequence\n   * @see IndexInput#readChars(char[],int,int)\n   */\n  public void writeChars(char[] s, int start, int length)\n    throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      final int code = (int)s[i];\n      if (code >= 0x01 && code <= 0x7F)\n\twriteByte((byte)code);\n      else if (((code >= 0x80) && (code <= 0x7FF)) || code == 0) {\n\twriteByte((byte)(0xC0 | (code >> 6)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      } else {\n\twriteByte((byte)(0xE0 | (code >>> 12)));\n\twriteByte((byte)(0x80 | ((code >> 6) & 0x3F)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4","date":1206538765,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexOutput#writeChars(char[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/IndexOutput#writeChars(char[],int,int).mjava","sourceNew":"  /** Writes a sub sequence of characters from char[] as\n   *  the old format (modified UTF-8 encoded bytes).\n   * @param s the source of the characters\n   * @param start the first character in the sequence\n   * @param length the number of characters in the sequence\n   * @deprecated -- please pre-convert to utf8 bytes instead or use {@link #writeString}\n   */\n  public void writeChars(char[] s, int start, int length)\n    throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      final int code = (int)s[i];\n      if (code >= 0x01 && code <= 0x7F)\n\twriteByte((byte)code);\n      else if (((code >= 0x80) && (code <= 0x7FF)) || code == 0) {\n\twriteByte((byte)(0xC0 | (code >> 6)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      } else {\n\twriteByte((byte)(0xE0 | (code >>> 12)));\n\twriteByte((byte)(0x80 | ((code >> 6) & 0x3F)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      }\n    }\n  }\n\n","sourceOld":"  /** Writes a sequence of UTF-8 encoded characters from a char[].\n   * @param s the source of the characters\n   * @param start the first character in the sequence\n   * @param length the number of characters in the sequence\n   * @see IndexInput#readChars(char[],int,int)\n   */\n  public void writeChars(char[] s, int start, int length)\n    throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      final int code = (int)s[i];\n      if (code >= 0x01 && code <= 0x7F)\n\twriteByte((byte)code);\n      else if (((code >= 0x80) && (code <= 0x7FF)) || code == 0) {\n\twriteByte((byte)(0xC0 | (code >> 6)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      } else {\n\twriteByte((byte)(0xE0 | (code >>> 12)));\n\twriteByte((byte)(0x80 | ((code >> 6) & 0x3F)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5","date":1262514702,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexOutput#writeChars(char[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/IndexOutput#writeChars(char[],int,int).mjava","sourceNew":"  /** Writes a sub sequence of characters from char[] as\n   *  the old format (modified UTF-8 encoded bytes).\n   * @param s the source of the characters\n   * @param start the first character in the sequence\n   * @param length the number of characters in the sequence\n   * @deprecated -- please pre-convert to utf8 bytes instead or use {@link #writeString}\n   */\n  @Deprecated\n  public void writeChars(char[] s, int start, int length)\n    throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      final int code = (int)s[i];\n      if (code >= 0x01 && code <= 0x7F)\n\twriteByte((byte)code);\n      else if (((code >= 0x80) && (code <= 0x7FF)) || code == 0) {\n\twriteByte((byte)(0xC0 | (code >> 6)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      } else {\n\twriteByte((byte)(0xE0 | (code >>> 12)));\n\twriteByte((byte)(0x80 | ((code >> 6) & 0x3F)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      }\n    }\n  }\n\n","sourceOld":"  /** Writes a sub sequence of characters from char[] as\n   *  the old format (modified UTF-8 encoded bytes).\n   * @param s the source of the characters\n   * @param start the first character in the sequence\n   * @param length the number of characters in the sequence\n   * @deprecated -- please pre-convert to utf8 bytes instead or use {@link #writeString}\n   */\n  public void writeChars(char[] s, int start, int length)\n    throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      final int code = (int)s[i];\n      if (code >= 0x01 && code <= 0x7F)\n\twriteByte((byte)code);\n      else if (((code >= 0x80) && (code <= 0x7FF)) || code == 0) {\n\twriteByte((byte)(0xC0 | (code >> 6)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      } else {\n\twriteByte((byte)(0xE0 | (code >>> 12)));\n\twriteByte((byte)(0x80 | ((code >> 6) & 0x3F)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexOutput#writeChars(char[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/IndexOutput#writeChars(char[],int,int).mjava","sourceNew":"  /** Writes a sub sequence of characters from char[] as\n   *  the old format (modified UTF-8 encoded bytes).\n   * @param s the source of the characters\n   * @param start the first character in the sequence\n   * @param length the number of characters in the sequence\n   * @deprecated -- please pre-convert to utf8 bytes instead or use {@link #writeString}\n   */\n  @Deprecated\n  public void writeChars(char[] s, int start, int length)\n    throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      final int code = s[i];\n      if (code >= 0x01 && code <= 0x7F)\n\twriteByte((byte)code);\n      else if (((code >= 0x80) && (code <= 0x7FF)) || code == 0) {\n\twriteByte((byte)(0xC0 | (code >> 6)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      } else {\n\twriteByte((byte)(0xE0 | (code >>> 12)));\n\twriteByte((byte)(0x80 | ((code >> 6) & 0x3F)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      }\n    }\n  }\n\n","sourceOld":"  /** Writes a sub sequence of characters from char[] as\n   *  the old format (modified UTF-8 encoded bytes).\n   * @param s the source of the characters\n   * @param start the first character in the sequence\n   * @param length the number of characters in the sequence\n   * @deprecated -- please pre-convert to utf8 bytes instead or use {@link #writeString}\n   */\n  @Deprecated\n  public void writeChars(char[] s, int start, int length)\n    throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      final int code = (int)s[i];\n      if (code >= 0x01 && code <= 0x7F)\n\twriteByte((byte)code);\n      else if (((code >= 0x80) && (code <= 0x7FF)) || code == 0) {\n\twriteByte((byte)(0xC0 | (code >> 6)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      } else {\n\twriteByte((byte)(0xE0 | (code >>> 12)));\n\twriteByte((byte)(0x80 | ((code >> 6) & 0x3F)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/IndexOutput#writeChars(char[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/IndexOutput#writeChars(char[],int,int).mjava","sourceNew":"  /** Writes a sub sequence of characters from char[] as\n   *  the old format (modified UTF-8 encoded bytes).\n   * @param s the source of the characters\n   * @param start the first character in the sequence\n   * @param length the number of characters in the sequence\n   * @deprecated -- please pre-convert to utf8 bytes instead or use {@link #writeString}\n   */\n  @Deprecated\n  public void writeChars(char[] s, int start, int length)\n    throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      final int code = s[i];\n      if (code >= 0x01 && code <= 0x7F)\n\twriteByte((byte)code);\n      else if (((code >= 0x80) && (code <= 0x7FF)) || code == 0) {\n\twriteByte((byte)(0xC0 | (code >> 6)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      } else {\n\twriteByte((byte)(0xE0 | (code >>> 12)));\n\twriteByte((byte)(0x80 | ((code >> 6) & 0x3F)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      }\n    }\n  }\n\n","sourceOld":"  /** Writes a sub sequence of characters from char[] as\n   *  the old format (modified UTF-8 encoded bytes).\n   * @param s the source of the characters\n   * @param start the first character in the sequence\n   * @param length the number of characters in the sequence\n   * @deprecated -- please pre-convert to utf8 bytes instead or use {@link #writeString}\n   */\n  @Deprecated\n  public void writeChars(char[] s, int start, int length)\n    throws IOException {\n    final int end = start + length;\n    for (int i = start; i < end; i++) {\n      final int code = s[i];\n      if (code >= 0x01 && code <= 0x7F)\n\twriteByte((byte)code);\n      else if (((code >= 0x80) && (code <= 0x7FF)) || code == 0) {\n\twriteByte((byte)(0xC0 | (code >> 6)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      } else {\n\twriteByte((byte)(0xE0 | (code >>> 12)));\n\twriteByte((byte)(0x80 | ((code >> 6) & 0x3F)));\n\twriteByte((byte)(0x80 | (code & 0x3F)));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["5384d626ad24f6a1d56141ba6b0b144d1b2eafc5"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4":["5384d626ad24f6a1d56141ba6b0b144d1b2eafc5"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["dbb7b6f10bff9eedd5c9bc6cf9222ffbb2df74d4"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}