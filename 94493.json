{"path":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreExplanations#testExplanationsIncludingScore().mjava","commits":[{"id":"c5bceed3ccfd33baff7dde1a56def37b6ccd66f6","date":1484565333,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreExplanations#testExplanationsIncludingScore().mjava","pathOld":"/dev/null","sourceNew":"  public void testExplanationsIncludingScore() throws Exception {\n\n    DoubleValuesSource scores = DoubleValuesSource.function(DoubleValuesSource.SCORES, v -> v * 2);\n\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    FunctionScoreQuery csq = new FunctionScoreQuery(q, scores);\n\n    qtest(csq, new int[] { 0, 1, 2, 3 });\n\n    Explanation e1 = searcher.explain(q, 0);\n    Explanation e = searcher.explain(csq, 0);\n\n    assertEquals(e.getDetails().length, 2);\n\n    assertEquals(e1.getValue() * 2, e.getValue(), 0.00001);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"507e7decdf00981d09a74632ea30299a4ce6ba72","date":1484600874,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreExplanations#testExplanationsIncludingScore().mjava","pathOld":"/dev/null","sourceNew":"  public void testExplanationsIncludingScore() throws Exception {\n\n    DoubleValuesSource scores = DoubleValuesSource.function(DoubleValuesSource.SCORES, v -> v * 2);\n\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    FunctionScoreQuery csq = new FunctionScoreQuery(q, scores);\n\n    qtest(csq, new int[] { 0, 1, 2, 3 });\n\n    Explanation e1 = searcher.explain(q, 0);\n    Explanation e = searcher.explain(csq, 0);\n\n    assertEquals(e.getDetails().length, 2);\n\n    assertEquals(e1.getValue() * 2, e.getValue(), 0.00001);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"501fdb8d708778ae5368dd5c44879e1d46487e43","date":1494401395,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreExplanations#testExplanationsIncludingScore().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreExplanations#testExplanationsIncludingScore().mjava","sourceNew":"  public void testExplanationsIncludingScore() throws Exception {\n\n    DoubleValuesSource scores = DoubleValuesSource.function(DoubleValuesSource.SCORES, \"v * 2\", v -> v * 2);\n\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    FunctionScoreQuery csq = new FunctionScoreQuery(q, scores);\n\n    qtest(csq, new int[] { 0, 1, 2, 3 });\n\n    Explanation e1 = searcher.explain(q, 0);\n    Explanation e = searcher.explain(csq, 0);\n\n    assertEquals(e.getDetails().length, 2);\n\n    assertEquals(e1.getValue() * 2, e.getValue(), 0.00001);\n  }\n\n","sourceOld":"  public void testExplanationsIncludingScore() throws Exception {\n\n    DoubleValuesSource scores = DoubleValuesSource.function(DoubleValuesSource.SCORES, v -> v * 2);\n\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    FunctionScoreQuery csq = new FunctionScoreQuery(q, scores);\n\n    qtest(csq, new int[] { 0, 1, 2, 3 });\n\n    Explanation e1 = searcher.explain(q, 0);\n    Explanation e = searcher.explain(csq, 0);\n\n    assertEquals(e.getDetails().length, 2);\n\n    assertEquals(e1.getValue() * 2, e.getValue(), 0.00001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreExplanations#testExplanationsIncludingScore().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreExplanations#testExplanationsIncludingScore().mjava","sourceNew":"  public void testExplanationsIncludingScore() throws Exception {\n\n    DoubleValuesSource scores = DoubleValuesSource.function(DoubleValuesSource.SCORES, \"v * 2\", v -> v * 2);\n\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    FunctionScoreQuery csq = new FunctionScoreQuery(q, scores);\n\n    qtest(csq, new int[] { 0, 1, 2, 3 });\n\n    Explanation e1 = searcher.explain(q, 0);\n    Explanation e = searcher.explain(csq, 0);\n\n    assertEquals(e.getDetails().length, 2);\n\n    assertEquals(e1.getValue() * 2, e.getValue(), 0.00001);\n  }\n\n","sourceOld":"  public void testExplanationsIncludingScore() throws Exception {\n\n    DoubleValuesSource scores = DoubleValuesSource.function(DoubleValuesSource.SCORES, v -> v * 2);\n\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    FunctionScoreQuery csq = new FunctionScoreQuery(q, scores);\n\n    qtest(csq, new int[] { 0, 1, 2, 3 });\n\n    Explanation e1 = searcher.explain(q, 0);\n    Explanation e = searcher.explain(csq, 0);\n\n    assertEquals(e.getDetails().length, 2);\n\n    assertEquals(e1.getValue() * 2, e.getValue(), 0.00001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41ea72350b903b90cb4fda2a5adbce31aa00c074","date":1498575219,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreExplanations#testExplanationsIncludingScore().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreExplanations#testExplanationsIncludingScore().mjava","sourceNew":"  public void testExplanationsIncludingScore() throws Exception {\n\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    FunctionScoreQuery csq = new FunctionScoreQuery(q, DoubleValuesSource.SCORES);\n\n    qtest(csq, new int[] { 0, 1, 2, 3 });\n\n    Explanation e1 = searcher.explain(q, 0);\n    Explanation e = searcher.explain(csq, 0);\n\n    assertEquals(e, e1);\n  }\n\n","sourceOld":"  public void testExplanationsIncludingScore() throws Exception {\n\n    DoubleValuesSource scores = DoubleValuesSource.function(DoubleValuesSource.SCORES, \"v * 2\", v -> v * 2);\n\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    FunctionScoreQuery csq = new FunctionScoreQuery(q, scores);\n\n    qtest(csq, new int[] { 0, 1, 2, 3 });\n\n    Explanation e1 = searcher.explain(q, 0);\n    Explanation e = searcher.explain(csq, 0);\n\n    assertEquals(e.getDetails().length, 2);\n\n    assertEquals(e1.getValue() * 2, e.getValue(), 0.00001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98f11c416d30e556e0004a9a84960702d12d35b1","date":1498628359,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreExplanations#testExplanationsIncludingScore().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreExplanations#testExplanationsIncludingScore().mjava","sourceNew":"  public void testExplanationsIncludingScore() throws Exception {\n\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    FunctionScoreQuery csq = new FunctionScoreQuery(q, DoubleValuesSource.SCORES);\n\n    qtest(csq, new int[] { 0, 1, 2, 3 });\n\n    Explanation e1 = searcher.explain(q, 0);\n    Explanation e = searcher.explain(csq, 0);\n\n    assertEquals(e, e1);\n  }\n\n","sourceOld":"  public void testExplanationsIncludingScore() throws Exception {\n\n    DoubleValuesSource scores = DoubleValuesSource.function(DoubleValuesSource.SCORES, \"v * 2\", v -> v * 2);\n\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    FunctionScoreQuery csq = new FunctionScoreQuery(q, scores);\n\n    qtest(csq, new int[] { 0, 1, 2, 3 });\n\n    Explanation e1 = searcher.explain(q, 0);\n    Explanation e = searcher.explain(csq, 0);\n\n    assertEquals(e.getDetails().length, 2);\n\n    assertEquals(e1.getValue() * 2, e.getValue(), 0.00001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreExplanations#testExplanationsIncludingScore().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreExplanations#testExplanationsIncludingScore().mjava","sourceNew":"  public void testExplanationsIncludingScore() throws Exception {\n\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    FunctionScoreQuery csq = new FunctionScoreQuery(q, DoubleValuesSource.SCORES);\n\n    qtest(csq, new int[] { 0, 1, 2, 3 });\n\n    Explanation e1 = searcher.explain(q, 0);\n    Explanation e = searcher.explain(csq, 0);\n\n    assertEquals(e, e1);\n  }\n\n","sourceOld":"  public void testExplanationsIncludingScore() throws Exception {\n\n    DoubleValuesSource scores = DoubleValuesSource.function(DoubleValuesSource.SCORES, \"v * 2\", v -> v * 2);\n\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    FunctionScoreQuery csq = new FunctionScoreQuery(q, scores);\n\n    qtest(csq, new int[] { 0, 1, 2, 3 });\n\n    Explanation e1 = searcher.explain(q, 0);\n    Explanation e = searcher.explain(csq, 0);\n\n    assertEquals(e.getDetails().length, 2);\n\n    assertEquals(e1.getValue() * 2, e.getValue(), 0.00001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a38488a55cc52553c9792da5044dd31b15128cd8","date":1510755769,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreExplanations#testExplanationsIncludingScore().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreExplanations#testExplanationsIncludingScore().mjava","sourceNew":"  public void testExplanationsIncludingScore() throws Exception {\n\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    FunctionScoreQuery csq = new FunctionScoreQuery(q, DoubleValuesSource.SCORES);\n\n    qtest(csq, new int[] { 0, 1, 2, 3 });\n\n    Explanation e1 = searcher.explain(q, 0);\n    Explanation e = searcher.explain(csq, 0);\n\n    assertEquals(e.getValue(), e1.getValue(), 0.00001);\n    assertEquals(e.getDetails()[1], e1);\n\n  }\n\n","sourceOld":"  public void testExplanationsIncludingScore() throws Exception {\n\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    FunctionScoreQuery csq = new FunctionScoreQuery(q, DoubleValuesSource.SCORES);\n\n    qtest(csq, new int[] { 0, 1, 2, 3 });\n\n    Explanation e1 = searcher.explain(q, 0);\n    Explanation e = searcher.explain(csq, 0);\n\n    assertEquals(e, e1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"784ee6cdfa2c32c6eb6c2cd6383ffe4bd320c1fb","date":1512565563,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreExplanations#testExplanationsIncludingScore().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreExplanations#testExplanationsIncludingScore().mjava","sourceNew":"  public void testExplanationsIncludingScore() throws Exception {\n\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    FunctionScoreQuery fsq = new FunctionScoreQuery(q, DoubleValuesSource.SCORES);\n\n    qtest(fsq, new int[] { 0, 1, 2, 3 });\n\n    Explanation e1 = searcher.explain(q, 0);\n    Explanation e = searcher.explain(fsq, 0);\n\n    assertEquals(e.getValue(), e1.getValue(), 0.00001);\n    assertEquals(e.getDetails()[0], e1);\n\n  }\n\n","sourceOld":"  public void testExplanationsIncludingScore() throws Exception {\n\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    FunctionScoreQuery csq = new FunctionScoreQuery(q, DoubleValuesSource.SCORES);\n\n    qtest(csq, new int[] { 0, 1, 2, 3 });\n\n    Explanation e1 = searcher.explain(q, 0);\n    Explanation e = searcher.explain(csq, 0);\n\n    assertEquals(e.getValue(), e1.getValue(), 0.00001);\n    assertEquals(e.getDetails()[1], e1);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf","date":1514891219,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreExplanations#testExplanationsIncludingScore().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreExplanations#testExplanationsIncludingScore().mjava","sourceNew":"  public void testExplanationsIncludingScore() throws Exception {\n\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    FunctionScoreQuery fsq = new FunctionScoreQuery(q, DoubleValuesSource.SCORES);\n\n    qtest(fsq, new int[] { 0, 1, 2, 3 });\n\n    Explanation e1 = searcher.explain(q, 0);\n    Explanation e = searcher.explain(fsq, 0);\n\n    assertEquals(e.getValue(), e1.getValue());\n    assertEquals(e.getDetails()[0], e1);\n\n  }\n\n","sourceOld":"  public void testExplanationsIncludingScore() throws Exception {\n\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    FunctionScoreQuery fsq = new FunctionScoreQuery(q, DoubleValuesSource.SCORES);\n\n    qtest(fsq, new int[] { 0, 1, 2, 3 });\n\n    Explanation e1 = searcher.explain(q, 0);\n    Explanation e = searcher.explain(fsq, 0);\n\n    assertEquals(e.getValue(), e1.getValue(), 0.00001);\n    assertEquals(e.getDetails()[0], e1);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"41ea72350b903b90cb4fda2a5adbce31aa00c074":["501fdb8d708778ae5368dd5c44879e1d46487e43"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["c5bceed3ccfd33baff7dde1a56def37b6ccd66f6","501fdb8d708778ae5368dd5c44879e1d46487e43"],"501fdb8d708778ae5368dd5c44879e1d46487e43":["c5bceed3ccfd33baff7dde1a56def37b6ccd66f6"],"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf":["784ee6cdfa2c32c6eb6c2cd6383ffe4bd320c1fb"],"784ee6cdfa2c32c6eb6c2cd6383ffe4bd320c1fb":["a38488a55cc52553c9792da5044dd31b15128cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a38488a55cc52553c9792da5044dd31b15128cd8":["28288370235ed02234a64753cdbf0c6ec096304a"],"507e7decdf00981d09a74632ea30299a4ce6ba72":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c5bceed3ccfd33baff7dde1a56def37b6ccd66f6"],"28288370235ed02234a64753cdbf0c6ec096304a":["501fdb8d708778ae5368dd5c44879e1d46487e43","41ea72350b903b90cb4fda2a5adbce31aa00c074"],"98f11c416d30e556e0004a9a84960702d12d35b1":["e9017cf144952056066919f1ebc7897ff9bd71b1","41ea72350b903b90cb4fda2a5adbce31aa00c074"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf"],"c5bceed3ccfd33baff7dde1a56def37b6ccd66f6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"41ea72350b903b90cb4fda2a5adbce31aa00c074":["28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["98f11c416d30e556e0004a9a84960702d12d35b1"],"501fdb8d708778ae5368dd5c44879e1d46487e43":["41ea72350b903b90cb4fda2a5adbce31aa00c074","e9017cf144952056066919f1ebc7897ff9bd71b1","28288370235ed02234a64753cdbf0c6ec096304a"],"b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"784ee6cdfa2c32c6eb6c2cd6383ffe4bd320c1fb":["b8e3fe8a32614e52f7d9fd491b9faab852fbb4bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["507e7decdf00981d09a74632ea30299a4ce6ba72","c5bceed3ccfd33baff7dde1a56def37b6ccd66f6"],"a38488a55cc52553c9792da5044dd31b15128cd8":["784ee6cdfa2c32c6eb6c2cd6383ffe4bd320c1fb"],"507e7decdf00981d09a74632ea30299a4ce6ba72":[],"28288370235ed02234a64753cdbf0c6ec096304a":["a38488a55cc52553c9792da5044dd31b15128cd8"],"98f11c416d30e556e0004a9a84960702d12d35b1":[],"c5bceed3ccfd33baff7dde1a56def37b6ccd66f6":["e9017cf144952056066919f1ebc7897ff9bd71b1","501fdb8d708778ae5368dd5c44879e1d46487e43","507e7decdf00981d09a74632ea30299a4ce6ba72"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["507e7decdf00981d09a74632ea30299a4ce6ba72","98f11c416d30e556e0004a9a84960702d12d35b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}