{"path":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/bg/TestBulgarianStemmer#testMasculineNouns().mjava","commits":[{"id":"b1db5edc6e70c0b0e6a3c8e1ac5a87f99ce63c74","date":1259770136,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/bg/TestBulgarianStemmer#testMasculineNouns().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test showing how masculine noun forms conflate. An example noun for each\n   * common (and some rare) plural pattern is listed.\n   */\n  public void testMasculineNouns() throws IOException {\n    BulgarianAnalyzer a = new BulgarianAnalyzer(Version.LUCENE_CURRENT);\n    \n    // -и pattern\n    assertAnalyzesTo(a, \"град\", new String[] {\"град\"});\n    assertAnalyzesTo(a, \"града\", new String[] {\"град\"});\n    assertAnalyzesTo(a, \"градът\", new String[] {\"град\"});\n    assertAnalyzesTo(a, \"градове\", new String[] {\"град\"});\n    assertAnalyzesTo(a, \"градовете\", new String[] {\"град\"});\n    \n    // -ове pattern\n    assertAnalyzesTo(a, \"народ\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народа\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народът\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народи\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народите\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народе\", new String[] {\"народ\"});\n    \n    // -ища pattern\n    assertAnalyzesTo(a, \"път\", new String[] {\"път\"});\n    assertAnalyzesTo(a, \"пътя\", new String[] {\"път\"});\n    assertAnalyzesTo(a, \"пътят\", new String[] {\"път\"});\n    assertAnalyzesTo(a, \"пътища\", new String[] {\"път\"});\n    assertAnalyzesTo(a, \"пътищата\", new String[] {\"път\"});\n    \n    // -чета pattern\n    assertAnalyzesTo(a, \"градец\", new String[] {\"градец\"});\n    assertAnalyzesTo(a, \"градеца\", new String[] {\"градец\"});\n    assertAnalyzesTo(a, \"градецът\", new String[] {\"градец\"});\n    /* note the below forms conflate with each other, but not the rest */\n    assertAnalyzesTo(a, \"градовце\", new String[] {\"градовц\"});\n    assertAnalyzesTo(a, \"градовцете\", new String[] {\"градовц\"});\n    \n    // -овци pattern\n    assertAnalyzesTo(a, \"дядо\", new String[] {\"дяд\"});\n    assertAnalyzesTo(a, \"дядото\", new String[] {\"дяд\"});\n    assertAnalyzesTo(a, \"дядовци\", new String[] {\"дяд\"});\n    assertAnalyzesTo(a, \"дядовците\", new String[] {\"дяд\"});\n    \n    // -е pattern\n    assertAnalyzesTo(a, \"мъж\", new String[] {\"мъж\"});\n    assertAnalyzesTo(a, \"мъжа\", new String[] {\"мъж\"});\n    assertAnalyzesTo(a, \"мъже\", new String[] {\"мъж\"});\n    assertAnalyzesTo(a, \"мъжете\", new String[] {\"мъж\"});\n    assertAnalyzesTo(a, \"мъжо\", new String[] {\"мъж\"});\n    /* word is too short, will not remove -ът */\n    assertAnalyzesTo(a, \"мъжът\", new String[] {\"мъжът\"});\n    \n    // -а pattern\n    assertAnalyzesTo(a, \"крак\", new String[] {\"крак\"});\n    assertAnalyzesTo(a, \"крака\", new String[] {\"крак\"});\n    assertAnalyzesTo(a, \"кракът\", new String[] {\"крак\"});\n    assertAnalyzesTo(a, \"краката\", new String[] {\"крак\"});\n    \n    // брат\n    assertAnalyzesTo(a, \"брат\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"брата\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"братът\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"братя\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"братята\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"брате\", new String[] {\"брат\"});\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/bg/TestBulgarianStemmer#testMasculineNouns().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/bg/TestBulgarianStemmer#testMasculineNouns().mjava","sourceNew":"  /**\n   * Test showing how masculine noun forms conflate. An example noun for each\n   * common (and some rare) plural pattern is listed.\n   */\n  public void testMasculineNouns() throws IOException {\n    BulgarianAnalyzer a = new BulgarianAnalyzer(TEST_VERSION_CURRENT);\n    \n    // -и pattern\n    assertAnalyzesTo(a, \"град\", new String[] {\"град\"});\n    assertAnalyzesTo(a, \"града\", new String[] {\"град\"});\n    assertAnalyzesTo(a, \"градът\", new String[] {\"град\"});\n    assertAnalyzesTo(a, \"градове\", new String[] {\"град\"});\n    assertAnalyzesTo(a, \"градовете\", new String[] {\"град\"});\n    \n    // -ове pattern\n    assertAnalyzesTo(a, \"народ\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народа\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народът\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народи\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народите\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народе\", new String[] {\"народ\"});\n    \n    // -ища pattern\n    assertAnalyzesTo(a, \"път\", new String[] {\"път\"});\n    assertAnalyzesTo(a, \"пътя\", new String[] {\"път\"});\n    assertAnalyzesTo(a, \"пътят\", new String[] {\"път\"});\n    assertAnalyzesTo(a, \"пътища\", new String[] {\"път\"});\n    assertAnalyzesTo(a, \"пътищата\", new String[] {\"път\"});\n    \n    // -чета pattern\n    assertAnalyzesTo(a, \"градец\", new String[] {\"градец\"});\n    assertAnalyzesTo(a, \"градеца\", new String[] {\"градец\"});\n    assertAnalyzesTo(a, \"градецът\", new String[] {\"градец\"});\n    /* note the below forms conflate with each other, but not the rest */\n    assertAnalyzesTo(a, \"градовце\", new String[] {\"градовц\"});\n    assertAnalyzesTo(a, \"градовцете\", new String[] {\"градовц\"});\n    \n    // -овци pattern\n    assertAnalyzesTo(a, \"дядо\", new String[] {\"дяд\"});\n    assertAnalyzesTo(a, \"дядото\", new String[] {\"дяд\"});\n    assertAnalyzesTo(a, \"дядовци\", new String[] {\"дяд\"});\n    assertAnalyzesTo(a, \"дядовците\", new String[] {\"дяд\"});\n    \n    // -е pattern\n    assertAnalyzesTo(a, \"мъж\", new String[] {\"мъж\"});\n    assertAnalyzesTo(a, \"мъжа\", new String[] {\"мъж\"});\n    assertAnalyzesTo(a, \"мъже\", new String[] {\"мъж\"});\n    assertAnalyzesTo(a, \"мъжете\", new String[] {\"мъж\"});\n    assertAnalyzesTo(a, \"мъжо\", new String[] {\"мъж\"});\n    /* word is too short, will not remove -ът */\n    assertAnalyzesTo(a, \"мъжът\", new String[] {\"мъжът\"});\n    \n    // -а pattern\n    assertAnalyzesTo(a, \"крак\", new String[] {\"крак\"});\n    assertAnalyzesTo(a, \"крака\", new String[] {\"крак\"});\n    assertAnalyzesTo(a, \"кракът\", new String[] {\"крак\"});\n    assertAnalyzesTo(a, \"краката\", new String[] {\"крак\"});\n    \n    // брат\n    assertAnalyzesTo(a, \"брат\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"брата\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"братът\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"братя\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"братята\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"брате\", new String[] {\"брат\"});\n  }\n\n","sourceOld":"  /**\n   * Test showing how masculine noun forms conflate. An example noun for each\n   * common (and some rare) plural pattern is listed.\n   */\n  public void testMasculineNouns() throws IOException {\n    BulgarianAnalyzer a = new BulgarianAnalyzer(Version.LUCENE_CURRENT);\n    \n    // -и pattern\n    assertAnalyzesTo(a, \"град\", new String[] {\"град\"});\n    assertAnalyzesTo(a, \"града\", new String[] {\"град\"});\n    assertAnalyzesTo(a, \"градът\", new String[] {\"град\"});\n    assertAnalyzesTo(a, \"градове\", new String[] {\"град\"});\n    assertAnalyzesTo(a, \"градовете\", new String[] {\"град\"});\n    \n    // -ове pattern\n    assertAnalyzesTo(a, \"народ\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народа\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народът\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народи\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народите\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народе\", new String[] {\"народ\"});\n    \n    // -ища pattern\n    assertAnalyzesTo(a, \"път\", new String[] {\"път\"});\n    assertAnalyzesTo(a, \"пътя\", new String[] {\"път\"});\n    assertAnalyzesTo(a, \"пътят\", new String[] {\"път\"});\n    assertAnalyzesTo(a, \"пътища\", new String[] {\"път\"});\n    assertAnalyzesTo(a, \"пътищата\", new String[] {\"път\"});\n    \n    // -чета pattern\n    assertAnalyzesTo(a, \"градец\", new String[] {\"градец\"});\n    assertAnalyzesTo(a, \"градеца\", new String[] {\"градец\"});\n    assertAnalyzesTo(a, \"градецът\", new String[] {\"градец\"});\n    /* note the below forms conflate with each other, but not the rest */\n    assertAnalyzesTo(a, \"градовце\", new String[] {\"градовц\"});\n    assertAnalyzesTo(a, \"градовцете\", new String[] {\"градовц\"});\n    \n    // -овци pattern\n    assertAnalyzesTo(a, \"дядо\", new String[] {\"дяд\"});\n    assertAnalyzesTo(a, \"дядото\", new String[] {\"дяд\"});\n    assertAnalyzesTo(a, \"дядовци\", new String[] {\"дяд\"});\n    assertAnalyzesTo(a, \"дядовците\", new String[] {\"дяд\"});\n    \n    // -е pattern\n    assertAnalyzesTo(a, \"мъж\", new String[] {\"мъж\"});\n    assertAnalyzesTo(a, \"мъжа\", new String[] {\"мъж\"});\n    assertAnalyzesTo(a, \"мъже\", new String[] {\"мъж\"});\n    assertAnalyzesTo(a, \"мъжете\", new String[] {\"мъж\"});\n    assertAnalyzesTo(a, \"мъжо\", new String[] {\"мъж\"});\n    /* word is too short, will not remove -ът */\n    assertAnalyzesTo(a, \"мъжът\", new String[] {\"мъжът\"});\n    \n    // -а pattern\n    assertAnalyzesTo(a, \"крак\", new String[] {\"крак\"});\n    assertAnalyzesTo(a, \"крака\", new String[] {\"крак\"});\n    assertAnalyzesTo(a, \"кракът\", new String[] {\"крак\"});\n    assertAnalyzesTo(a, \"краката\", new String[] {\"крак\"});\n    \n    // брат\n    assertAnalyzesTo(a, \"брат\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"брата\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"братът\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"братя\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"братята\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"брате\", new String[] {\"брат\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/bg/TestBulgarianStemmer#testMasculineNouns().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/bg/TestBulgarianStemmer#testMasculineNouns().mjava","sourceNew":"  /**\n   * Test showing how masculine noun forms conflate. An example noun for each\n   * common (and some rare) plural pattern is listed.\n   */\n  public void testMasculineNouns() throws IOException {\n    BulgarianAnalyzer a = new BulgarianAnalyzer(TEST_VERSION_CURRENT);\n    \n    // -и pattern\n    assertAnalyzesTo(a, \"град\", new String[] {\"град\"});\n    assertAnalyzesTo(a, \"града\", new String[] {\"град\"});\n    assertAnalyzesTo(a, \"градът\", new String[] {\"град\"});\n    assertAnalyzesTo(a, \"градове\", new String[] {\"град\"});\n    assertAnalyzesTo(a, \"градовете\", new String[] {\"град\"});\n    \n    // -ове pattern\n    assertAnalyzesTo(a, \"народ\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народа\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народът\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народи\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народите\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народе\", new String[] {\"народ\"});\n    \n    // -ища pattern\n    assertAnalyzesTo(a, \"път\", new String[] {\"път\"});\n    assertAnalyzesTo(a, \"пътя\", new String[] {\"път\"});\n    assertAnalyzesTo(a, \"пътят\", new String[] {\"път\"});\n    assertAnalyzesTo(a, \"пътища\", new String[] {\"път\"});\n    assertAnalyzesTo(a, \"пътищата\", new String[] {\"път\"});\n    \n    // -чета pattern\n    assertAnalyzesTo(a, \"градец\", new String[] {\"градец\"});\n    assertAnalyzesTo(a, \"градеца\", new String[] {\"градец\"});\n    assertAnalyzesTo(a, \"градецът\", new String[] {\"градец\"});\n    /* note the below forms conflate with each other, but not the rest */\n    assertAnalyzesTo(a, \"градовце\", new String[] {\"градовц\"});\n    assertAnalyzesTo(a, \"градовцете\", new String[] {\"градовц\"});\n    \n    // -овци pattern\n    assertAnalyzesTo(a, \"дядо\", new String[] {\"дяд\"});\n    assertAnalyzesTo(a, \"дядото\", new String[] {\"дяд\"});\n    assertAnalyzesTo(a, \"дядовци\", new String[] {\"дяд\"});\n    assertAnalyzesTo(a, \"дядовците\", new String[] {\"дяд\"});\n    \n    // -е pattern\n    assertAnalyzesTo(a, \"мъж\", new String[] {\"мъж\"});\n    assertAnalyzesTo(a, \"мъжа\", new String[] {\"мъж\"});\n    assertAnalyzesTo(a, \"мъже\", new String[] {\"мъж\"});\n    assertAnalyzesTo(a, \"мъжете\", new String[] {\"мъж\"});\n    assertAnalyzesTo(a, \"мъжо\", new String[] {\"мъж\"});\n    /* word is too short, will not remove -ът */\n    assertAnalyzesTo(a, \"мъжът\", new String[] {\"мъжът\"});\n    \n    // -а pattern\n    assertAnalyzesTo(a, \"крак\", new String[] {\"крак\"});\n    assertAnalyzesTo(a, \"крака\", new String[] {\"крак\"});\n    assertAnalyzesTo(a, \"кракът\", new String[] {\"крак\"});\n    assertAnalyzesTo(a, \"краката\", new String[] {\"крак\"});\n    \n    // брат\n    assertAnalyzesTo(a, \"брат\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"брата\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"братът\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"братя\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"братята\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"брате\", new String[] {\"брат\"});\n  }\n\n","sourceOld":"  /**\n   * Test showing how masculine noun forms conflate. An example noun for each\n   * common (and some rare) plural pattern is listed.\n   */\n  public void testMasculineNouns() throws IOException {\n    BulgarianAnalyzer a = new BulgarianAnalyzer(TEST_VERSION_CURRENT);\n    \n    // -и pattern\n    assertAnalyzesTo(a, \"град\", new String[] {\"град\"});\n    assertAnalyzesTo(a, \"града\", new String[] {\"град\"});\n    assertAnalyzesTo(a, \"градът\", new String[] {\"град\"});\n    assertAnalyzesTo(a, \"градове\", new String[] {\"град\"});\n    assertAnalyzesTo(a, \"градовете\", new String[] {\"град\"});\n    \n    // -ове pattern\n    assertAnalyzesTo(a, \"народ\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народа\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народът\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народи\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народите\", new String[] {\"народ\"});\n    assertAnalyzesTo(a, \"народе\", new String[] {\"народ\"});\n    \n    // -ища pattern\n    assertAnalyzesTo(a, \"път\", new String[] {\"път\"});\n    assertAnalyzesTo(a, \"пътя\", new String[] {\"път\"});\n    assertAnalyzesTo(a, \"пътят\", new String[] {\"път\"});\n    assertAnalyzesTo(a, \"пътища\", new String[] {\"път\"});\n    assertAnalyzesTo(a, \"пътищата\", new String[] {\"път\"});\n    \n    // -чета pattern\n    assertAnalyzesTo(a, \"градец\", new String[] {\"градец\"});\n    assertAnalyzesTo(a, \"градеца\", new String[] {\"градец\"});\n    assertAnalyzesTo(a, \"градецът\", new String[] {\"градец\"});\n    /* note the below forms conflate with each other, but not the rest */\n    assertAnalyzesTo(a, \"градовце\", new String[] {\"градовц\"});\n    assertAnalyzesTo(a, \"градовцете\", new String[] {\"градовц\"});\n    \n    // -овци pattern\n    assertAnalyzesTo(a, \"дядо\", new String[] {\"дяд\"});\n    assertAnalyzesTo(a, \"дядото\", new String[] {\"дяд\"});\n    assertAnalyzesTo(a, \"дядовци\", new String[] {\"дяд\"});\n    assertAnalyzesTo(a, \"дядовците\", new String[] {\"дяд\"});\n    \n    // -е pattern\n    assertAnalyzesTo(a, \"мъж\", new String[] {\"мъж\"});\n    assertAnalyzesTo(a, \"мъжа\", new String[] {\"мъж\"});\n    assertAnalyzesTo(a, \"мъже\", new String[] {\"мъж\"});\n    assertAnalyzesTo(a, \"мъжете\", new String[] {\"мъж\"});\n    assertAnalyzesTo(a, \"мъжо\", new String[] {\"мъж\"});\n    /* word is too short, will not remove -ът */\n    assertAnalyzesTo(a, \"мъжът\", new String[] {\"мъжът\"});\n    \n    // -а pattern\n    assertAnalyzesTo(a, \"крак\", new String[] {\"крак\"});\n    assertAnalyzesTo(a, \"крака\", new String[] {\"крак\"});\n    assertAnalyzesTo(a, \"кракът\", new String[] {\"крак\"});\n    assertAnalyzesTo(a, \"краката\", new String[] {\"крак\"});\n    \n    // брат\n    assertAnalyzesTo(a, \"брат\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"брата\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"братът\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"братя\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"братята\", new String[] {\"брат\"});\n    assertAnalyzesTo(a, \"брате\", new String[] {\"брат\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["b1db5edc6e70c0b0e6a3c8e1ac5a87f99ce63c74"],"b1db5edc6e70c0b0e6a3c8e1ac5a87f99ce63c74":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b1db5edc6e70c0b0e6a3c8e1ac5a87f99ce63c74"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b1db5edc6e70c0b0e6a3c8e1ac5a87f99ce63c74":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}