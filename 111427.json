{"path":"solr/core/src/test/org/apache/solr/security/CallbackAuditLoggerPlugin#init(Map[String,Object]).mjava","commits":[{"id":"12ddd922ea96c1d0ea68a68506b6984a246cfb22","date":1554385731,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/CallbackAuditLoggerPlugin#init(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    super.init(pluginConfig);\n    callbackPort = Integer.parseInt((String) pluginConfig.get(\"callbackPort\"));\n    delay = Integer.parseInt((String) pluginConfig.get(\"delay\"));\n    try {\n      socket = new Socket(\"localhost\", callbackPort);\n      out = new PrintWriter(new OutputStreamWriter(socket.getOutputStream(), StandardCharsets.UTF_8), true);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d5482e225fe64e9f868c423923d1144adc88142","date":1571270194,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/CallbackAuditLoggerPlugin#init(Map[String,Object]).mjava","pathOld":"solr/core/src/test/org/apache/solr/security/CallbackAuditLoggerPlugin#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    super.init(pluginConfig);\n    callbackPort = Integer.parseInt((String) pluginConfig.get(\"callbackPort\"));\n    final String semaphoreName = (String) pluginConfig.get(\"semaphore\");\n    if (null != semaphoreName) {\n      semaphore = BLOCKING_SEMAPHORES.get(semaphoreName);\n      if (null == semaphore) {\n        throw new RuntimeException(\"Test did not setup semaphore of specified name: \" + semaphoreName);\n      }\n    }\n    try {\n      socket = new Socket(\"localhost\", callbackPort);\n      out = new PrintWriter(new OutputStreamWriter(socket.getOutputStream(), StandardCharsets.UTF_8), true);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    super.init(pluginConfig);\n    callbackPort = Integer.parseInt((String) pluginConfig.get(\"callbackPort\"));\n    delay = Integer.parseInt((String) pluginConfig.get(\"delay\"));\n    try {\n      socket = new Socket(\"localhost\", callbackPort);\n      out = new PrintWriter(new OutputStreamWriter(socket.getOutputStream(), StandardCharsets.UTF_8), true);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12ddd922ea96c1d0ea68a68506b6984a246cfb22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5d5482e225fe64e9f868c423923d1144adc88142":["12ddd922ea96c1d0ea68a68506b6984a246cfb22"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5d5482e225fe64e9f868c423923d1144adc88142"]},"commit2Childs":{"12ddd922ea96c1d0ea68a68506b6984a246cfb22":["5d5482e225fe64e9f868c423923d1144adc88142"],"5d5482e225fe64e9f868c423923d1144adc88142":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["12ddd922ea96c1d0ea68a68506b6984a246cfb22"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}