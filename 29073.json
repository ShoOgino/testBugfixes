{"path":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest#testFieldTermStackIndex1wSearch2terms().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest#testFieldTermStackIndex1wSearch2terms().mjava","pathOld":"contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest#testFieldTermStackIndex1wSearch2terms().mjava","sourceNew":"  public void testFieldTermStackIndex1wSearch2terms() throws Exception {\n    makeIndex1w();\n\n    BooleanQuery bq = new BooleanQuery();\n    bq.add( tq( \"Mac\" ), Occur.SHOULD );\n    bq.add( tq( \"MacBook\" ), Occur.SHOULD );\n    FieldQuery fq = new FieldQuery( bq, true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    assertEquals( 2, stack.termList.size() );\n    Set<String> expectedSet = new HashSet<String>();\n    expectedSet.add( \"Mac(11,20,3)\" );\n    expectedSet.add( \"MacBook(11,20,3)\" );\n    assertTrue( expectedSet.contains( stack.pop().toString() ) );\n    assertTrue( expectedSet.contains( stack.pop().toString() ) );\n  }\n\n","sourceOld":"  public void testFieldTermStackIndex1wSearch2terms() throws Exception {\n    makeIndex1w();\n\n    BooleanQuery bq = new BooleanQuery();\n    bq.add( tq( \"Mac\" ), Occur.SHOULD );\n    bq.add( tq( \"MacBook\" ), Occur.SHOULD );\n    FieldQuery fq = new FieldQuery( bq, true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    assertEquals( 2, stack.termList.size() );\n    Set<String> expectedSet = new HashSet<String>();\n    expectedSet.add( \"Mac(11,20,3)\" );\n    expectedSet.add( \"MacBook(11,20,3)\" );\n    assertTrue( expectedSet.contains( stack.pop().toString() ) );\n    assertTrue( expectedSet.contains( stack.pop().toString() ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest#testFieldTermStackIndex1wSearch2terms().mjava","pathOld":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/IndexTimeSynonymTest#testFieldTermStackIndex1wSearch2terms().mjava","sourceNew":"  public void testFieldTermStackIndex1wSearch2terms() throws Exception {\n    makeIndex1w();\n\n    BooleanQuery bq = new BooleanQuery();\n    bq.add( tq( \"Mac\" ), Occur.SHOULD );\n    bq.add( tq( \"MacBook\" ), Occur.SHOULD );\n    FieldQuery fq = new FieldQuery( bq, true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    assertEquals( 2, stack.termList.size() );\n    Set<String> expectedSet = new HashSet<String>();\n    expectedSet.add( \"Mac(11,20,3)\" );\n    expectedSet.add( \"MacBook(11,20,3)\" );\n    assertTrue( expectedSet.contains( stack.pop().toString() ) );\n    assertTrue( expectedSet.contains( stack.pop().toString() ) );\n  }\n\n","sourceOld":"  public void testFieldTermStackIndex1wSearch2terms() throws Exception {\n    makeIndex1w();\n\n    BooleanQuery bq = new BooleanQuery();\n    bq.add( tq( \"Mac\" ), Occur.SHOULD );\n    bq.add( tq( \"MacBook\" ), Occur.SHOULD );\n    FieldQuery fq = new FieldQuery( bq, true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    assertEquals( 2, stack.termList.size() );\n    Set<String> expectedSet = new HashSet<String>();\n    expectedSet.add( \"Mac(11,20,3)\" );\n    expectedSet.add( \"MacBook(11,20,3)\" );\n    assertTrue( expectedSet.contains( stack.pop().toString() ) );\n    assertTrue( expectedSet.contains( stack.pop().toString() ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}