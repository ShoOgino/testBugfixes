{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestClassicAnalyzer#testMaxTermLength2().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestClassicAnalyzer#testMaxTermLength2().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestClassicAnalyzer#testMaxTermLength2().mjava","sourceNew":"  public void testMaxTermLength2() throws Exception {\n    ClassicAnalyzer sa = new ClassicAnalyzer(TEST_VERSION_CURRENT);\n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"toolong\", \"xy\", \"z\"});\n    sa.setMaxTokenLength(5);\n    \n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"xy\", \"z\"}, new int[]{1, 1, 2, 1});\n  }\n\n","sourceOld":"  public void testMaxTermLength2() throws Exception {\n    ClassicAnalyzer sa = new ClassicAnalyzer(TEST_VERSION_CURRENT);\n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"toolong\", \"xy\", \"z\"});\n    sa.setMaxTokenLength(5);\n    \n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"xy\", \"z\"}, new int[]{1, 1, 2, 1});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestClassicAnalyzer#testMaxTermLength2().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestClassicAnalyzer#testMaxTermLength2().mjava","sourceNew":"  public void testMaxTermLength2() throws Exception {\n    ClassicAnalyzer sa = new ClassicAnalyzer();\n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"toolong\", \"xy\", \"z\"});\n    sa.setMaxTokenLength(5);\n    \n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"xy\", \"z\"}, new int[]{1, 1, 2, 1});\n  }\n\n","sourceOld":"  public void testMaxTermLength2() throws Exception {\n    ClassicAnalyzer sa = new ClassicAnalyzer(TEST_VERSION_CURRENT);\n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"toolong\", \"xy\", \"z\"});\n    sa.setMaxTokenLength(5);\n    \n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"xy\", \"z\"}, new int[]{1, 1, 2, 1});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestClassicAnalyzer#testMaxTermLength2().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestClassicAnalyzer#testMaxTermLength2().mjava","sourceNew":"  public void testMaxTermLength2() throws Exception {\n    ClassicAnalyzer sa = new ClassicAnalyzer(TEST_VERSION_CURRENT);\n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"toolong\", \"xy\", \"z\"});\n    sa.setMaxTokenLength(5);\n    \n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"xy\", \"z\"}, new int[]{1, 1, 2, 1});\n  }\n\n","sourceOld":"  public void testMaxTermLength2() throws Exception {\n    ClassicAnalyzer sa = new ClassicAnalyzer();\n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"toolong\", \"xy\", \"z\"});\n    sa.setMaxTokenLength(5);\n    \n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"xy\", \"z\"}, new int[]{1, 1, 2, 1});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestClassicAnalyzer#testMaxTermLength2().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestClassicAnalyzer#testMaxTermLength2().mjava","sourceNew":"  public void testMaxTermLength2() throws Exception {\n    ClassicAnalyzer sa = new ClassicAnalyzer();\n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"toolong\", \"xy\", \"z\"});\n    sa.setMaxTokenLength(5);\n    \n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"xy\", \"z\"}, new int[]{1, 1, 2, 1});\n  }\n\n","sourceOld":"  public void testMaxTermLength2() throws Exception {\n    ClassicAnalyzer sa = new ClassicAnalyzer(TEST_VERSION_CURRENT);\n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"toolong\", \"xy\", \"z\"});\n    sa.setMaxTokenLength(5);\n    \n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"xy\", \"z\"}, new int[]{1, 1, 2, 1});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c177b66783fe11c18553f8b57e8b745098cc7607","date":1412798789,"type":5,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestClassicAnalyzer#testMaxTermLength2().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestClassicAnalyzer#testMaxTermLength2().mjava","sourceNew":"  public void testMaxTermLength2() throws Exception {\n    ClassicAnalyzer sa = new ClassicAnalyzer();\n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"toolong\", \"xy\", \"z\"});\n    sa.setMaxTokenLength(5);\n    \n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"xy\", \"z\"}, new int[]{1, 1, 2, 1});\n  }\n\n","sourceOld":"  public void testMaxTermLength2() throws Exception {\n    ClassicAnalyzer sa = new ClassicAnalyzer();\n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"toolong\", \"xy\", \"z\"});\n    sa.setMaxTokenLength(5);\n    \n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"xy\", \"z\"}, new int[]{1, 1, 2, 1});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestClassicAnalyzer#testMaxTermLength2().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestClassicAnalyzer#testMaxTermLength2().mjava","sourceNew":"  public void testMaxTermLength2() throws Exception {\n    ClassicAnalyzer sa = new ClassicAnalyzer();\n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"toolong\", \"xy\", \"z\"});\n    sa.setMaxTokenLength(5);\n    \n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"xy\", \"z\"}, new int[]{1, 1, 2, 1});\n  }\n\n","sourceOld":"  public void testMaxTermLength2() throws Exception {\n    ClassicAnalyzer sa = new ClassicAnalyzer();\n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"toolong\", \"xy\", \"z\"});\n    sa.setMaxTokenLength(5);\n    \n    assertAnalyzesTo(sa, \"ab cd toolong xy z\", new String[]{\"ab\", \"cd\", \"xy\", \"z\"}, new int[]{1, 1, 2, 1});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"55980207f1977bd1463465de1659b821347e2fa8":["379db3ad24c4f0214f30a122265a6d6be003a99d","c177b66783fe11c18553f8b57e8b745098cc7607"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c177b66783fe11c18553f8b57e8b745098cc7607":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c177b66783fe11c18553f8b57e8b745098cc7607"]},"commit2Childs":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"55980207f1977bd1463465de1659b821347e2fa8":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["55980207f1977bd1463465de1659b821347e2fa8","c177b66783fe11c18553f8b57e8b745098cc7607"],"c177b66783fe11c18553f8b57e8b745098cc7607":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}