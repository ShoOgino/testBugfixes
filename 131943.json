{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#FunctionAllGroupHeadsCollector(ValueSource,Map[#,#],Sort).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#FunctionAllGroupHeadsCollector(ValueSource,Map[#,#],Sort).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#FunctionAllGroupHeadsCollector(ValueSource,Map[#,#],Sort).mjava","sourceNew":"  /**\n   * Constructs a {@link FunctionAllGroupHeadsCollector} instance.\n   *\n   * @param groupBy The {@link ValueSource} to group by\n   * @param vsContext The ValueSource context\n   * @param sortWithinGroup The sort within a group\n   */\n  public FunctionAllGroupHeadsCollector(ValueSource groupBy, Map<?, ?> vsContext, Sort sortWithinGroup) {\n    super(sortWithinGroup.getSort().length);\n    groups = new HashMap<MutableValue, GroupHead>();\n    this.sortWithinGroup = sortWithinGroup;\n    this.groupBy = groupBy;\n    this.vsContext = vsContext;\n\n    final SortField[] sortFields = sortWithinGroup.getSort();\n    for (int i = 0; i < sortFields.length; i++) {\n      reversed[i] = sortFields[i].getReverse() ? -1 : 1;\n    }\n  }\n\n","sourceOld":"  /**\n   * Constructs a {@link FunctionAllGroupHeadsCollector} instance.\n   *\n   * @param groupBy The {@link ValueSource} to group by\n   * @param vsContext The ValueSource context\n   * @param sortWithinGroup The sort within a group\n   */\n  public FunctionAllGroupHeadsCollector(ValueSource groupBy, Map<?, ?> vsContext, Sort sortWithinGroup) {\n    super(sortWithinGroup.getSort().length);\n    groups = new HashMap<MutableValue, GroupHead>();\n    this.sortWithinGroup = sortWithinGroup;\n    this.groupBy = groupBy;\n    this.vsContext = vsContext;\n\n    final SortField[] sortFields = sortWithinGroup.getSort();\n    for (int i = 0; i < sortFields.length; i++) {\n      reversed[i] = sortFields[i].getReverse() ? -1 : 1;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97d4692d0c601ff773f0a2231967312428a904e4","date":1366026608,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#FunctionAllGroupHeadsCollector(ValueSource,Map[#,#],Sort).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#FunctionAllGroupHeadsCollector(ValueSource,Map[#,#],Sort).mjava","sourceNew":"  /**\n   * Constructs a {@link FunctionAllGroupHeadsCollector} instance.\n   *\n   * @param groupBy The {@link ValueSource} to group by\n   * @param vsContext The ValueSource context\n   * @param sortWithinGroup The sort within a group\n   */\n  public FunctionAllGroupHeadsCollector(ValueSource groupBy, Map<?, ?> vsContext, Sort sortWithinGroup) {\n    super(sortWithinGroup.getSort().length);\n    groups = new HashMap<>();\n    this.sortWithinGroup = sortWithinGroup;\n    this.groupBy = groupBy;\n    this.vsContext = vsContext;\n\n    final SortField[] sortFields = sortWithinGroup.getSort();\n    for (int i = 0; i < sortFields.length; i++) {\n      reversed[i] = sortFields[i].getReverse() ? -1 : 1;\n    }\n  }\n\n","sourceOld":"  /**\n   * Constructs a {@link FunctionAllGroupHeadsCollector} instance.\n   *\n   * @param groupBy The {@link ValueSource} to group by\n   * @param vsContext The ValueSource context\n   * @param sortWithinGroup The sort within a group\n   */\n  public FunctionAllGroupHeadsCollector(ValueSource groupBy, Map<?, ?> vsContext, Sort sortWithinGroup) {\n    super(sortWithinGroup.getSort().length);\n    groups = new HashMap<MutableValue, GroupHead>();\n    this.sortWithinGroup = sortWithinGroup;\n    this.groupBy = groupBy;\n    this.vsContext = vsContext;\n\n    final SortField[] sortFields = sortWithinGroup.getSort();\n    for (int i = 0; i < sortFields.length; i++) {\n      reversed[i] = sortFields[i].getReverse() ? -1 : 1;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ae958a739da1866696f442384393ba2f13e33e5","date":1491819018,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#FunctionAllGroupHeadsCollector(ValueSource,Map[#,#],Sort).mjava","sourceNew":null,"sourceOld":"  /**\n   * Constructs a {@link FunctionAllGroupHeadsCollector} instance.\n   *\n   * @param groupBy The {@link ValueSource} to group by\n   * @param vsContext The ValueSource context\n   * @param sortWithinGroup The sort within a group\n   */\n  public FunctionAllGroupHeadsCollector(ValueSource groupBy, Map<?, ?> vsContext, Sort sortWithinGroup) {\n    super(sortWithinGroup.getSort().length);\n    groups = new HashMap<>();\n    this.sortWithinGroup = sortWithinGroup;\n    this.groupBy = groupBy;\n    this.vsContext = vsContext;\n\n    final SortField[] sortFields = sortWithinGroup.getSort();\n    for (int i = 0; i < sortFields.length; i++) {\n      reversed[i] = sortFields[i].getReverse() ? -1 : 1;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/function/FunctionAllGroupHeadsCollector#FunctionAllGroupHeadsCollector(ValueSource,Map[#,#],Sort).mjava","sourceNew":null,"sourceOld":"  /**\n   * Constructs a {@link FunctionAllGroupHeadsCollector} instance.\n   *\n   * @param groupBy The {@link ValueSource} to group by\n   * @param vsContext The ValueSource context\n   * @param sortWithinGroup The sort within a group\n   */\n  public FunctionAllGroupHeadsCollector(ValueSource groupBy, Map<?, ?> vsContext, Sort sortWithinGroup) {\n    super(sortWithinGroup.getSort().length);\n    groups = new HashMap<>();\n    this.sortWithinGroup = sortWithinGroup;\n    this.groupBy = groupBy;\n    this.vsContext = vsContext;\n\n    final SortField[] sortFields = sortWithinGroup.getSort();\n    for (int i = 0; i < sortFields.length; i++) {\n      reversed[i] = sortFields[i].getReverse() ? -1 : 1;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["97d4692d0c601ff773f0a2231967312428a904e4"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"97d4692d0c601ff773f0a2231967312428a904e4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7ae958a739da1866696f442384393ba2f13e33e5"],"7ae958a739da1866696f442384393ba2f13e33e5":["97d4692d0c601ff773f0a2231967312428a904e4"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["97d4692d0c601ff773f0a2231967312428a904e4"],"97d4692d0c601ff773f0a2231967312428a904e4":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","7ae958a739da1866696f442384393ba2f13e33e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7ae958a739da1866696f442384393ba2f13e33e5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}