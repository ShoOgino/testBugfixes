{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.UtilsTool#getOptions().mjava","commits":[{"id":"5d1e9a21218cf0ffd81625a2f105dc388aa3097d","date":1476967652,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.UtilsTool#getOptions().mjava","pathOld":"/dev/null","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n              .withArgName(\"path\")\n              .hasArg()\n              .withDescription(\"Path to server dir. Required if logs path is relative\")\n              .create(\"s\"),\n          OptionBuilder\n              .withArgName(\"path\")\n              .hasArg()\n              .withDescription(\"Path to logs dir. If relative, also provide server dir with -s\")\n              .create(\"l\"),\n          OptionBuilder\n              .withDescription(\"Be quiet, don't print to stdout, only return exit codes\")\n              .create(\"q\"),\n          OptionBuilder\n              .withArgName(\"daysToKeep\")\n              .hasArg()\n              .withType(Integer.class)\n              .withDescription(\"Path to logs directory\")\n              .create(\"remove_old_solr_logs\"),\n          OptionBuilder\n              .withArgName(\"generations\")\n              .hasArg()\n              .withType(Integer.class)\n              .withDescription(\"Rotate solr.log to solr.log.1 etc\")\n              .create(\"rotate_solr_logs\"),\n          OptionBuilder\n              .withDescription(\"Archive old garbage collection logs into archive/\")\n              .create(\"archive_gc_logs\"),\n          OptionBuilder\n              .withDescription(\"Archive old console logs into archive/\")\n              .create(\"archive_console_logs\")\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c6b1b1219af145d9cbc08feaa968f7e515ab3f4e","date":1476974235,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.UtilsTool#getOptions().mjava","pathOld":"/dev/null","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n              .withArgName(\"path\")\n              .hasArg()\n              .withDescription(\"Path to server dir. Required if logs path is relative\")\n              .create(\"s\"),\n          OptionBuilder\n              .withArgName(\"path\")\n              .hasArg()\n              .withDescription(\"Path to logs dir. If relative, also provide server dir with -s\")\n              .create(\"l\"),\n          OptionBuilder\n              .withDescription(\"Be quiet, don't print to stdout, only return exit codes\")\n              .create(\"q\"),\n          OptionBuilder\n              .withArgName(\"daysToKeep\")\n              .hasArg()\n              .withType(Integer.class)\n              .withDescription(\"Path to logs directory\")\n              .create(\"remove_old_solr_logs\"),\n          OptionBuilder\n              .withArgName(\"generations\")\n              .hasArg()\n              .withType(Integer.class)\n              .withDescription(\"Rotate solr.log to solr.log.1 etc\")\n              .create(\"rotate_solr_logs\"),\n          OptionBuilder\n              .withDescription(\"Archive old garbage collection logs into archive/\")\n              .create(\"archive_gc_logs\"),\n          OptionBuilder\n              .withDescription(\"Archive old console logs into archive/\")\n              .create(\"archive_console_logs\")\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.UtilsTool#getOptions().mjava","pathOld":"/dev/null","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n              .withArgName(\"path\")\n              .hasArg()\n              .withDescription(\"Path to server dir. Required if logs path is relative\")\n              .create(\"s\"),\n          OptionBuilder\n              .withArgName(\"path\")\n              .hasArg()\n              .withDescription(\"Path to logs dir. If relative, also provide server dir with -s\")\n              .create(\"l\"),\n          OptionBuilder\n              .withDescription(\"Be quiet, don't print to stdout, only return exit codes\")\n              .create(\"q\"),\n          OptionBuilder\n              .withArgName(\"daysToKeep\")\n              .hasArg()\n              .withType(Integer.class)\n              .withDescription(\"Path to logs directory\")\n              .create(\"remove_old_solr_logs\"),\n          OptionBuilder\n              .withArgName(\"generations\")\n              .hasArg()\n              .withType(Integer.class)\n              .withDescription(\"Rotate solr.log to solr.log.1 etc\")\n              .create(\"rotate_solr_logs\"),\n          OptionBuilder\n              .withDescription(\"Archive old garbage collection logs into archive/\")\n              .create(\"archive_gc_logs\"),\n          OptionBuilder\n              .withDescription(\"Archive old console logs into archive/\")\n              .create(\"archive_console_logs\")\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b79a5db147a1c6f95d1625ddbc3561ef56955225","date":1528848080,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.UtilsTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.UtilsTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n              .withArgName(\"path\")\n              .hasArg()\n              .withDescription(\"Path to server dir. Required if logs path is relative\")\n              .create(\"s\"),\n          OptionBuilder\n              .withArgName(\"path\")\n              .hasArg()\n              .withDescription(\"Path to logs dir. If relative, also provide server dir with -s\")\n              .create(\"l\"),\n          OptionBuilder\n              .withDescription(\"Be quiet, don't print to stdout, only return exit codes\")\n              .create(\"q\"),\n          OptionBuilder\n              .withArgName(\"daysToKeep\")\n              .hasArg()\n              .withType(Integer.class)\n              .withDescription(\"Path to logs directory\")\n              .create(\"remove_old_solr_logs\"),\n          OptionBuilder\n              .withArgName(\"generations\")\n              .hasArg()\n              .withType(Integer.class)\n              .withDescription(\"Rotate solr.log to solr.log.1 etc\")\n              .create(\"rotate_solr_logs\"),\n          OptionBuilder\n              .withDescription(\"Archive old garbage collection logs into archive/\")\n              .create(\"archive_gc_logs\"),\n          OptionBuilder\n              .withDescription(\"Archive old console logs into archive/\")\n              .create(\"archive_console_logs\")\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n              .withArgName(\"path\")\n              .hasArg()\n              .withDescription(\"Path to server dir. Required if logs path is relative\")\n              .create(\"s\"),\n          OptionBuilder\n              .withArgName(\"path\")\n              .hasArg()\n              .withDescription(\"Path to logs dir. If relative, also provide server dir with -s\")\n              .create(\"l\"),\n          OptionBuilder\n              .withDescription(\"Be quiet, don't print to stdout, only return exit codes\")\n              .create(\"q\"),\n          OptionBuilder\n              .withArgName(\"daysToKeep\")\n              .hasArg()\n              .withType(Integer.class)\n              .withDescription(\"Path to logs directory\")\n              .create(\"remove_old_solr_logs\"),\n          OptionBuilder\n              .withArgName(\"generations\")\n              .hasArg()\n              .withType(Integer.class)\n              .withDescription(\"Rotate solr.log to solr.log.1 etc\")\n              .create(\"rotate_solr_logs\"),\n          OptionBuilder\n              .withDescription(\"Archive old garbage collection logs into archive/\")\n              .create(\"archive_gc_logs\"),\n          OptionBuilder\n              .withDescription(\"Archive old console logs into archive/\")\n              .create(\"archive_console_logs\")\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.UtilsTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.UtilsTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n              .withArgName(\"path\")\n              .hasArg()\n              .withDescription(\"Path to server dir. Required if logs path is relative\")\n              .create(\"s\"),\n          OptionBuilder\n              .withArgName(\"path\")\n              .hasArg()\n              .withDescription(\"Path to logs dir. If relative, also provide server dir with -s\")\n              .create(\"l\"),\n          OptionBuilder\n              .withDescription(\"Be quiet, don't print to stdout, only return exit codes\")\n              .create(\"q\"),\n          OptionBuilder\n              .withArgName(\"daysToKeep\")\n              .hasArg()\n              .withType(Integer.class)\n              .withDescription(\"Path to logs directory\")\n              .create(\"remove_old_solr_logs\"),\n          OptionBuilder\n              .withArgName(\"generations\")\n              .hasArg()\n              .withType(Integer.class)\n              .withDescription(\"Rotate solr.log to solr.log.1 etc\")\n              .create(\"rotate_solr_logs\"),\n          OptionBuilder\n              .withDescription(\"Archive old garbage collection logs into archive/\")\n              .create(\"archive_gc_logs\"),\n          OptionBuilder\n              .withDescription(\"Archive old console logs into archive/\")\n              .create(\"archive_console_logs\")\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n              .withArgName(\"path\")\n              .hasArg()\n              .withDescription(\"Path to server dir. Required if logs path is relative\")\n              .create(\"s\"),\n          OptionBuilder\n              .withArgName(\"path\")\n              .hasArg()\n              .withDescription(\"Path to logs dir. If relative, also provide server dir with -s\")\n              .create(\"l\"),\n          OptionBuilder\n              .withDescription(\"Be quiet, don't print to stdout, only return exit codes\")\n              .create(\"q\"),\n          OptionBuilder\n              .withArgName(\"daysToKeep\")\n              .hasArg()\n              .withType(Integer.class)\n              .withDescription(\"Path to logs directory\")\n              .create(\"remove_old_solr_logs\"),\n          OptionBuilder\n              .withArgName(\"generations\")\n              .hasArg()\n              .withType(Integer.class)\n              .withDescription(\"Rotate solr.log to solr.log.1 etc\")\n              .create(\"rotate_solr_logs\"),\n          OptionBuilder\n              .withDescription(\"Archive old garbage collection logs into archive/\")\n              .create(\"archive_gc_logs\"),\n          OptionBuilder\n              .withDescription(\"Archive old console logs into archive/\")\n              .create(\"archive_console_logs\")\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.UtilsTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.UtilsTool#getOptions().mjava","sourceNew":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n              .withArgName(\"path\")\n              .hasArg()\n              .withDescription(\"Path to server dir. Required if logs path is relative\")\n              .create(\"s\"),\n          OptionBuilder\n              .withArgName(\"path\")\n              .hasArg()\n              .withDescription(\"Path to logs dir. If relative, also provide server dir with -s\")\n              .create(\"l\"),\n          OptionBuilder\n              .withDescription(\"Be quiet, don't print to stdout, only return exit codes\")\n              .create(\"q\"),\n          OptionBuilder\n              .withArgName(\"daysToKeep\")\n              .hasArg()\n              .withType(Integer.class)\n              .withDescription(\"Path to logs directory\")\n              .create(\"remove_old_solr_logs\"),\n          OptionBuilder\n              .withArgName(\"generations\")\n              .hasArg()\n              .withType(Integer.class)\n              .withDescription(\"Rotate solr.log to solr.log.1 etc\")\n              .create(\"rotate_solr_logs\"),\n          OptionBuilder\n              .withDescription(\"Archive old garbage collection logs into archive/\")\n              .create(\"archive_gc_logs\"),\n          OptionBuilder\n              .withDescription(\"Archive old console logs into archive/\")\n              .create(\"archive_console_logs\")\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n              .withArgName(\"path\")\n              .hasArg()\n              .withDescription(\"Path to server dir. Required if logs path is relative\")\n              .create(\"s\"),\n          OptionBuilder\n              .withArgName(\"path\")\n              .hasArg()\n              .withDescription(\"Path to logs dir. If relative, also provide server dir with -s\")\n              .create(\"l\"),\n          OptionBuilder\n              .withDescription(\"Be quiet, don't print to stdout, only return exit codes\")\n              .create(\"q\"),\n          OptionBuilder\n              .withArgName(\"daysToKeep\")\n              .hasArg()\n              .withType(Integer.class)\n              .withDescription(\"Path to logs directory\")\n              .create(\"remove_old_solr_logs\"),\n          OptionBuilder\n              .withArgName(\"generations\")\n              .hasArg()\n              .withType(Integer.class)\n              .withDescription(\"Rotate solr.log to solr.log.1 etc\")\n              .create(\"rotate_solr_logs\"),\n          OptionBuilder\n              .withDescription(\"Archive old garbage collection logs into archive/\")\n              .create(\"archive_gc_logs\"),\n          OptionBuilder\n              .withDescription(\"Archive old console logs into archive/\")\n              .create(\"archive_console_logs\")\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee8fbffa595c312bc0437f2c9bb6376a29c1b427","date":1589412657,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.UtilsTool#getOptions().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.UtilsTool#getOptions().mjava","sourceNew":"    public Option[] getOptions() {\n      return new Option[]{\n          Option.builder(\"s\")\n              .argName(\"path\")\n              .hasArg()\n              .desc(\"Path to server dir. Required if logs path is relative\")\n              .build(),\n          Option.builder(\"l\")\n              .argName(\"path\")\n              .hasArg()\n              .desc(\"Path to logs dir. If relative, also provide server dir with -s\")\n              .build(),\n          Option.builder(\"q\")\n              .desc(\"Be quiet, don't print to stdout, only return exit codes\")\n              .build(),\n          Option.builder(\"remove_old_solr_logs\")\n              .argName(\"daysToKeep\")\n              .hasArg()\n              .type(Integer.class)\n              .desc(\"Path to logs directory\")\n              .build(),\n          Option.builder(\"rotate_solr_logs\")\n              .argName(\"generations\")\n              .hasArg()\n              .type(Integer.class)\n              .desc(\"Rotate solr.log to solr.log.1 etc\")\n              .build(),\n          Option.builder(\"archive_gc_logs\")\n              .desc(\"Archive old garbage collection logs into archive/\")\n              .build(),\n          Option.builder(\"archive_console_logs\")\n              .desc(\"Archive old console logs into archive/\")\n              .build()\n      };\n    }\n\n","sourceOld":"    @SuppressWarnings(\"static-access\")\n    public Option[] getOptions() {\n      return new Option[]{\n          OptionBuilder\n              .withArgName(\"path\")\n              .hasArg()\n              .withDescription(\"Path to server dir. Required if logs path is relative\")\n              .create(\"s\"),\n          OptionBuilder\n              .withArgName(\"path\")\n              .hasArg()\n              .withDescription(\"Path to logs dir. If relative, also provide server dir with -s\")\n              .create(\"l\"),\n          OptionBuilder\n              .withDescription(\"Be quiet, don't print to stdout, only return exit codes\")\n              .create(\"q\"),\n          OptionBuilder\n              .withArgName(\"daysToKeep\")\n              .hasArg()\n              .withType(Integer.class)\n              .withDescription(\"Path to logs directory\")\n              .create(\"remove_old_solr_logs\"),\n          OptionBuilder\n              .withArgName(\"generations\")\n              .hasArg()\n              .withType(Integer.class)\n              .withDescription(\"Rotate solr.log to solr.log.1 etc\")\n              .create(\"rotate_solr_logs\"),\n          OptionBuilder\n              .withDescription(\"Archive old garbage collection logs into archive/\")\n              .create(\"archive_gc_logs\"),\n          OptionBuilder\n              .withDescription(\"Archive old console logs into archive/\")\n              .create(\"archive_console_logs\")\n      };\n    }\n\n","bugFix":["5d1e9a21218cf0ffd81625a2f105dc388aa3097d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["c6b1b1219af145d9cbc08feaa968f7e515ab3f4e","b79a5db147a1c6f95d1625ddbc3561ef56955225"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ee8fbffa595c312bc0437f2c9bb6376a29c1b427":["b79a5db147a1c6f95d1625ddbc3561ef56955225"],"5d1e9a21218cf0ffd81625a2f105dc388aa3097d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c6b1b1219af145d9cbc08feaa968f7e515ab3f4e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5d1e9a21218cf0ffd81625a2f105dc388aa3097d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5d1e9a21218cf0ffd81625a2f105dc388aa3097d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee8fbffa595c312bc0437f2c9bb6376a29c1b427"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["c6b1b1219af145d9cbc08feaa968f7e515ab3f4e"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["c6b1b1219af145d9cbc08feaa968f7e515ab3f4e","b79a5db147a1c6f95d1625ddbc3561ef56955225"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d1e9a21218cf0ffd81625a2f105dc388aa3097d","c6b1b1219af145d9cbc08feaa968f7e515ab3f4e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"ee8fbffa595c312bc0437f2c9bb6376a29c1b427":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5d1e9a21218cf0ffd81625a2f105dc388aa3097d":["c6b1b1219af145d9cbc08feaa968f7e515ab3f4e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"c6b1b1219af145d9cbc08feaa968f7e515ab3f4e":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","b79a5db147a1c6f95d1625ddbc3561ef56955225","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","ee8fbffa595c312bc0437f2c9bb6376a29c1b427","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}