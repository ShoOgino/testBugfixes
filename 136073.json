{"path":"lucene/sandbox/src/java/org/apache/lucene/document/GeoPointField#GeoPointField(String,double,double,Store).mjava","commits":[{"id":"e91b7d9f5000faefb0e81b98e76ad5b9463283e8","date":1433799348,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/GeoPointField#GeoPointField(String,double,double,Store).mjava","pathOld":"/dev/null","sourceNew":"  /** Creates a stored or un-stored GeoPointField with the provided value\n   *  and default <code>precisionStep</code> set to 64 to avoid wasteful\n   *  indexing of lower precision terms.\n   *  @param name field name\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param stored Store.YES if the content should also be stored\n   *  @throws IllegalArgumentException if the field name is null.\n   */\n  public GeoPointField(String name, double lon, double lat, Store stored) {\n    super(name, stored == Store.YES ? TYPE_STORED : TYPE_NOT_STORED);\n    fieldsData = GeoUtils.mortonHash(lon, lat);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/document/GeoPointField#GeoPointField(String,double,double,Store).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/GeoPointField#GeoPointField(String,double,double,Store).mjava","sourceNew":"  /** Creates a stored or un-stored GeoPointField with the provided value\n   *  and default <code>precisionStep</code> set to 64 to avoid wasteful\n   *  indexing of lower precision terms.\n   *  @param name field name\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param stored Store.YES if the content should also be stored\n   *  @throws IllegalArgumentException if the field name is null.\n   */\n  public GeoPointField(String name, double lon, double lat, Store stored) {\n    super(name, stored == Store.YES ? TYPE_STORED : TYPE_NOT_STORED);\n    fieldsData = GeoUtils.mortonHash(lon, lat);\n  }\n\n","sourceOld":"  /** Creates a stored or un-stored GeoPointField with the provided value\n   *  and default <code>precisionStep</code> set to 64 to avoid wasteful\n   *  indexing of lower precision terms.\n   *  @param name field name\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param stored Store.YES if the content should also be stored\n   *  @throws IllegalArgumentException if the field name is null.\n   */\n  public GeoPointField(String name, double lon, double lat, Store stored) {\n    super(name, stored == Store.YES ? TYPE_STORED : TYPE_NOT_STORED);\n    fieldsData = GeoUtils.mortonHash(lon, lat);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/document/GeoPointField#GeoPointField(String,double,double,Store).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/GeoPointField#GeoPointField(String,double,double,Store).mjava","sourceNew":"  /** Creates a stored or un-stored GeoPointField\n   *  @param name field name\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param stored Store.YES if the content should also be stored\n   *  @throws IllegalArgumentException if the field name is null.\n   */\n  public GeoPointField(String name, double lon, double lat, Store stored) {\n    this(name, lon, lat, getFieldType(stored));\n  }\n\n","sourceOld":"  /** Creates a stored or un-stored GeoPointField with the provided value\n   *  and default <code>precisionStep</code> set to 64 to avoid wasteful\n   *  indexing of lower precision terms.\n   *  @param name field name\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param stored Store.YES if the content should also be stored\n   *  @throws IllegalArgumentException if the field name is null.\n   */\n  public GeoPointField(String name, double lon, double lat, Store stored) {\n    super(name, stored == Store.YES ? TYPE_STORED : TYPE_NOT_STORED);\n    fieldsData = GeoUtils.mortonHash(lon, lat);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":6,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/document/GeoPointField#GeoPointField(String,double,double,TermEncoding,Store).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/GeoPointField#GeoPointField(String,double,double,Store).mjava","sourceNew":"  /** Creates a stored or un-stored GeoPointField using the specified {@link TermEncoding} method\n   *  @param name field name\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param termEncoding encoding type to use ({@link TermEncoding#NUMERIC} Terms, or {@link TermEncoding#PREFIX} only Terms)\n   *  @param stored Store.YES if the content should also be stored\n   *  @throws IllegalArgumentException if the field name is null.\n   */\n  @Deprecated\n  public GeoPointField(String name, double lon, double lat, TermEncoding termEncoding, Store stored) {\n    this(name, lon, lat, getFieldType(termEncoding, stored));\n  }\n\n","sourceOld":"  /** Creates a stored or un-stored GeoPointField with the provided value\n   *  and default <code>precisionStep</code> set to 64 to avoid wasteful\n   *  indexing of lower precision terms.\n   *  @param name field name\n   *  @param lon longitude double value [-180.0 : 180.0]\n   *  @param lat latitude double value [-90.0 : 90.0]\n   *  @param stored Store.YES if the content should also be stored\n   *  @throws IllegalArgumentException if the field name is null.\n   */\n  public GeoPointField(String name, double lon, double lat, Store stored) {\n    super(name, stored == Store.YES ? TYPE_STORED : TYPE_NOT_STORED);\n    fieldsData = GeoUtils.mortonHash(lon, lat);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["e91b7d9f5000faefb0e81b98e76ad5b9463283e8","937923083e4d137932336fc80f3d78758ff698a6"],"e91b7d9f5000faefb0e81b98e76ad5b9463283e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"937923083e4d137932336fc80f3d78758ff698a6":["e91b7d9f5000faefb0e81b98e76ad5b9463283e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["937923083e4d137932336fc80f3d78758ff698a6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e91b7d9f5000faefb0e81b98e76ad5b9463283e8"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"e91b7d9f5000faefb0e81b98e76ad5b9463283e8":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","937923083e4d137932336fc80f3d78758ff698a6"],"937923083e4d137932336fc80f3d78758ff698a6":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}