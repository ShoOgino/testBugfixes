{"path":"src/test/org/apache/lucene/search/TestScorerPerf#createRandomTerms(int,int,Directory).mjava","commits":[{"id":"ba4dc8f71618a4d32d1cff3265c274a7d8c26eab","date":1161740775,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestScorerPerf#createRandomTerms(int,int,Directory).mjava","pathOld":"/dev/null","sourceNew":"  public void createRandomTerms(int nDocs, int nTerms, Directory dir) throws Exception {\n    IndexWriter iw = new IndexWriter(dir,new WhitespaceAnalyzer(), true);\n    iw.setMaxBufferedDocs(123);\n    for (int i=0; i<nDocs; i++) {\n      Document d = new Document();\n      for (int j=0; j<nTerms; j++) {\n        if (r.nextInt(nTerms) <= j) {\n          d.add(new Field(\"f\", Character.toString((char)j), Field.Store.NO, Field.Index.UN_TOKENIZED));\n        }\n      }\n      iw.addDocument(d);\n    }\n    iw.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b77550c47735d804ddb8767848f5af9b02b88c84","date":1162245631,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestScorerPerf#createRandomTerms(int,int,double,Directory).mjava","pathOld":"src/test/org/apache/lucene/search/TestScorerPerf#createRandomTerms(int,int,Directory).mjava","sourceNew":"  public void createRandomTerms(int nDocs, int nTerms, double power, Directory dir) throws Exception {\n    int[] freq = new int[nTerms];\n    for (int i=0; i<nTerms; i++) {\n      int f = (nTerms+1)-i;  // make first terms less frequent\n      freq[i] = (int)Math.ceil(Math.pow(f,power));\n    }\n\n    IndexWriter iw = new IndexWriter(dir,new WhitespaceAnalyzer(), true);\n    iw.setMaxBufferedDocs(123);\n    for (int i=0; i<nDocs; i++) {\n      Document d = new Document();\n      for (int j=0; j<nTerms; j++) {\n        if (r.nextInt(freq[j]) == 0) {\n          d.add(new Field(\"f\", Character.toString((char)j), Field.Store.NO, Field.Index.UN_TOKENIZED));\n        }\n      }\n      iw.addDocument(d);\n    }\n    iw.close();\n  }\n\n","sourceOld":"  public void createRandomTerms(int nDocs, int nTerms, Directory dir) throws Exception {\n    IndexWriter iw = new IndexWriter(dir,new WhitespaceAnalyzer(), true);\n    iw.setMaxBufferedDocs(123);\n    for (int i=0; i<nDocs; i++) {\n      Document d = new Document();\n      for (int j=0; j<nTerms; j++) {\n        if (r.nextInt(nTerms) <= j) {\n          d.add(new Field(\"f\", Character.toString((char)j), Field.Store.NO, Field.Index.UN_TOKENIZED));\n        }\n      }\n      iw.addDocument(d);\n    }\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":["a251547210ad8523f10c15c461496a2ad4bb3df4"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ba4dc8f71618a4d32d1cff3265c274a7d8c26eab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b77550c47735d804ddb8767848f5af9b02b88c84"],"b77550c47735d804ddb8767848f5af9b02b88c84":["ba4dc8f71618a4d32d1cff3265c274a7d8c26eab"]},"commit2Childs":{"ba4dc8f71618a4d32d1cff3265c274a7d8c26eab":["b77550c47735d804ddb8767848f5af9b02b88c84"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba4dc8f71618a4d32d1cff3265c274a7d8c26eab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b77550c47735d804ddb8767848f5af9b02b88c84":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}