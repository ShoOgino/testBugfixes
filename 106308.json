{"path":"solr/core/src/java/org/apache/solr/cloud/api/collections/Assign.RulesBasedAssignStrategy#assign(SolrCloudManager,AssignRequest).mjava","commits":[{"id":"e9f71a1c6c905e9489b4d25c83c8d628d978a8ea","date":1538045138,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/Assign.RulesBasedAssignStrategy#assign(SolrCloudManager,AssignRequest).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public List<ReplicaPosition> assign(SolrCloudManager solrCloudManager, AssignRequest assignRequest) throws Assign.AssignmentException, IOException, InterruptedException {\n      if (assignRequest.numTlogReplicas + assignRequest.numPullReplicas != 0) {\n        throw new Assign.AssignmentException(\n            Replica.Type.TLOG + \" or \" + Replica.Type.PULL + \" replica types not supported with placement rules or cluster policies\");\n      }\n\n      Map<String, Integer> shardVsReplicaCount = new HashMap<>();\n      for (String shard : assignRequest.shardNames) shardVsReplicaCount.put(shard, assignRequest.numNrtReplicas);\n\n      Map<String, Map<String, Integer>> shardVsNodes = new LinkedHashMap<>();\n      DocCollection docCollection = solrCloudManager.getClusterStateProvider().getClusterState().getCollectionOrNull(assignRequest.collectionName);\n      if (docCollection != null) {\n        for (Slice slice : docCollection.getSlices()) {\n          LinkedHashMap<String, Integer> n = new LinkedHashMap<>();\n          shardVsNodes.put(slice.getName(), n);\n          for (Replica replica : slice.getReplicas()) {\n            Integer count = n.get(replica.getNodeName());\n            if (count == null) count = 0;\n            n.put(replica.getNodeName(), ++count);\n          }\n        }\n      }\n\n      List<String> nodesList = assignRequest.nodes == null ? new ArrayList<>(clusterState.getLiveNodes()) : assignRequest.nodes;\n\n      ReplicaAssigner replicaAssigner = new ReplicaAssigner(rules,\n          shardVsReplicaCount,\n          snitches,\n          shardVsNodes,\n          nodesList,\n          solrCloudManager, clusterState);\n\n      Map<ReplicaPosition, String> nodeMappings = replicaAssigner.getNodeMappings();\n      return nodeMappings.entrySet().stream()\n          .map(e -> new ReplicaPosition(e.getKey().shard, e.getKey().index, e.getKey().type, e.getValue()))\n          .collect(Collectors.toList());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9f71a1c6c905e9489b4d25c83c8d628d978a8ea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e9f71a1c6c905e9489b4d25c83c8d628d978a8ea"]},"commit2Childs":{"e9f71a1c6c905e9489b4d25c83c8d628d978a8ea":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9f71a1c6c905e9489b4d25c83c8d628d978a8ea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}