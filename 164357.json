{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BaseCloudSolrClient#request(SolrRequest,String).mjava","commits":[{"id":"0544142c22eb88b6d8b3817f2e1190156aa4f9af","date":1551692505,"type":1,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BaseCloudSolrClient#request(SolrRequest,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient#request(SolrRequest,String).mjava","sourceNew":"  @Override\n  public NamedList<Object> request(SolrRequest request, String collection) throws SolrServerException, IOException {\n    // the collection parameter of the request overrides that of the parameter to this method\n    String requestCollection = request.getCollection();\n    if (requestCollection != null) {\n      collection = requestCollection;\n    } else if (collection == null) {\n      collection = defaultCollection;\n    }\n    List<String> inputCollections =\n        collection == null ? Collections.emptyList() : StrUtils.splitSmart(collection, \",\", true);\n    return requestWithRetryOnStaleState(request, 0, inputCollections);\n  }\n\n","sourceOld":"  @Override\n  public NamedList<Object> request(SolrRequest request, String collection) throws SolrServerException, IOException {\n    // the collection parameter of the request overrides that of the parameter to this method\n    String requestCollection = request.getCollection();\n    if (requestCollection != null) {\n      collection = requestCollection;\n    } else if (collection == null) {\n      collection = defaultCollection;\n    }\n    List<String> inputCollections =\n        collection == null ? Collections.emptyList() : StrUtils.splitSmart(collection, \",\", true);\n    return requestWithRetryOnStaleState(request, 0, inputCollections);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d","date":1592006776,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BaseCloudSolrClient#request(SolrRequest,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/BaseCloudSolrClient#request(SolrRequest,String).mjava","sourceNew":"  @Override\n  public NamedList<Object> request(@SuppressWarnings({\"rawtypes\"})SolrRequest request, String collection) throws SolrServerException, IOException {\n    // the collection parameter of the request overrides that of the parameter to this method\n    String requestCollection = request.getCollection();\n    if (requestCollection != null) {\n      collection = requestCollection;\n    } else if (collection == null) {\n      collection = defaultCollection;\n    }\n    List<String> inputCollections =\n        collection == null ? Collections.emptyList() : StrUtils.splitSmart(collection, \",\", true);\n    return requestWithRetryOnStaleState(request, 0, inputCollections);\n  }\n\n","sourceOld":"  @Override\n  public NamedList<Object> request(SolrRequest request, String collection) throws SolrServerException, IOException {\n    // the collection parameter of the request overrides that of the parameter to this method\n    String requestCollection = request.getCollection();\n    if (requestCollection != null) {\n      collection = requestCollection;\n    } else if (collection == null) {\n      collection = defaultCollection;\n    }\n    List<String> inputCollections =\n        collection == null ? Collections.emptyList() : StrUtils.splitSmart(collection, \",\", true);\n    return requestWithRetryOnStaleState(request, 0, inputCollections);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0544142c22eb88b6d8b3817f2e1190156aa4f9af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d":["0544142c22eb88b6d8b3817f2e1190156aa4f9af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d"]},"commit2Childs":{"0544142c22eb88b6d8b3817f2e1190156aa4f9af":["0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d"],"0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0544142c22eb88b6d8b3817f2e1190156aa4f9af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}