{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/DirectJsonQueryRequestFacetingEmbeddedTest#beforeClass().mjava","commits":[{"id":"216b828f4f2341ae2e70eb7585059e3576e4cb99","date":1570451249,"type":0,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/DirectJsonQueryRequestFacetingEmbeddedTest#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final String sourceHome = ExternalPaths.SOURCE_HOME;\n\n    final File tempSolrHome = LuceneTestCase.createTempDir().toFile();\n    FileUtils.copyFileToDirectory(new File(sourceHome, \"server/solr/solr.xml\"), tempSolrHome);\n    final File collectionDir = new File(tempSolrHome, COLLECTION_NAME);\n    FileUtils.forceMkdir(collectionDir);\n    final File configSetDir = new File(sourceHome, \"server/solr/configsets/sample_techproducts_configs/conf\");\n    FileUtils.copyDirectoryToDirectory(configSetDir, collectionDir);\n\n    final Properties props = new Properties();\n    props.setProperty(\"name\", COLLECTION_NAME);\n\n    try (Writer writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collectionDir, \"core.properties\")),\n        \"UTF-8\");) {\n      props.store(writer, null);\n    }\n\n    final String config = tempSolrHome.getAbsolutePath() + \"/\" + COLLECTION_NAME + \"/conf/solrconfig.xml\";\n    final String schema = tempSolrHome.getAbsolutePath() + \"/\" + COLLECTION_NAME + \"/conf/managed-schema\";\n    initCore(config, schema, tempSolrHome.getAbsolutePath(), COLLECTION_NAME);\n\n    client = new EmbeddedSolrServer(h.getCoreContainer(), COLLECTION_NAME) {\n      @Override\n      public void close() {\n        // do not close core container\n      }\n    };\n\n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.setParam(\"collection\", COLLECTION_NAME);\n    up.addFile(getFile(\"solrj/techproducts.xml\"), \"application/xml\");\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    UpdateResponse updateResponse = up.process(client);\n    assertEquals(0, updateResponse.getStatus());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":0,"author":"jimczi","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/DirectJsonQueryRequestFacetingEmbeddedTest#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    final String sourceHome = ExternalPaths.SOURCE_HOME;\n\n    final File tempSolrHome = LuceneTestCase.createTempDir().toFile();\n    FileUtils.copyFileToDirectory(new File(sourceHome, \"server/solr/solr.xml\"), tempSolrHome);\n    final File collectionDir = new File(tempSolrHome, COLLECTION_NAME);\n    FileUtils.forceMkdir(collectionDir);\n    final File configSetDir = new File(sourceHome, \"server/solr/configsets/sample_techproducts_configs/conf\");\n    FileUtils.copyDirectoryToDirectory(configSetDir, collectionDir);\n\n    final Properties props = new Properties();\n    props.setProperty(\"name\", COLLECTION_NAME);\n\n    try (Writer writer = new OutputStreamWriter(FileUtils.openOutputStream(new File(collectionDir, \"core.properties\")),\n        \"UTF-8\");) {\n      props.store(writer, null);\n    }\n\n    final String config = tempSolrHome.getAbsolutePath() + \"/\" + COLLECTION_NAME + \"/conf/solrconfig.xml\";\n    final String schema = tempSolrHome.getAbsolutePath() + \"/\" + COLLECTION_NAME + \"/conf/managed-schema\";\n    initCore(config, schema, tempSolrHome.getAbsolutePath(), COLLECTION_NAME);\n\n    client = new EmbeddedSolrServer(h.getCoreContainer(), COLLECTION_NAME) {\n      @Override\n      public void close() {\n        // do not close core container\n      }\n    };\n\n    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest(\"/update\");\n    up.setParam(\"collection\", COLLECTION_NAME);\n    up.addFile(getFile(\"solrj/techproducts.xml\"), \"application/xml\");\n    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);\n    UpdateResponse updateResponse = up.process(client);\n    assertEquals(0, updateResponse.getStatus());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"216b828f4f2341ae2e70eb7585059e3576e4cb99":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["216b828f4f2341ae2e70eb7585059e3576e4cb99"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","216b828f4f2341ae2e70eb7585059e3576e4cb99"]},"commit2Childs":{"216b828f4f2341ae2e70eb7585059e3576e4cb99":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["216b828f4f2341ae2e70eb7585059e3576e4cb99","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}