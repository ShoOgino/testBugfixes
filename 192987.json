{"path":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","commits":[{"id":"1f9f2355d68aab1348539f7a1603279405e566a4","date":1313634992,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","pathOld":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = new SlowMultiReaderWrapper(writer.getReader());\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = new SlowMultiReaderWrapper(writer.getReader());\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61e20f33ce8ff701576366fdb03955eded5f209b","date":1327852832,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","pathOld":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = new SlowCompositeReaderWrapper(writer.getReader());\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = new SlowMultiReaderWrapper(writer.getReader());\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","pathOld":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = new SlowCompositeReaderWrapper(writer.getReader());\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = new SlowMultiReaderWrapper(writer.getReader());\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","pathOld":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = new SlowCompositeReaderWrapper(writer.getReader());\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = new SlowCompositeReaderWrapper(writer.getReader());\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","pathOld":"modules/queries/src/test/org/apache/lucene/queries/BooleanFilterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = new SlowCompositeReaderWrapper(writer.getReader());\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false));\n\n    //Add series of docs with filterable fields : acces rights, prices, dates and \"in-stock\" flags\n    addDoc(writer, \"admin guest\", \"010\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20040101\", \"Y\");\n    addDoc(writer, \"guest\", \"020\", \"20050101\", \"Y\");\n    addDoc(writer, \"admin\", \"020\", \"20050101\", \"Maybe\");\n    addDoc(writer, \"admin guest\", \"030\", \"20050101\", \"N\");\n    reader = new SlowCompositeReaderWrapper(writer.getReader());\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"61e20f33ce8ff701576366fdb03955eded5f209b":["1f9f2355d68aab1348539f7a1603279405e566a4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["1f9f2355d68aab1348539f7a1603279405e566a4","61e20f33ce8ff701576366fdb03955eded5f209b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"1f9f2355d68aab1348539f7a1603279405e566a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f9f2355d68aab1348539f7a1603279405e566a4"],"61e20f33ce8ff701576366fdb03955eded5f209b":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"1f9f2355d68aab1348539f7a1603279405e566a4":["61e20f33ce8ff701576366fdb03955eded5f209b","5cab9a86bd67202d20b6adc463008c8e982b070a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}