{"path":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,boolean,float).mjava","commits":[{"id":"a94c3ed25a08dda75a7682a15aa4499e5cdc9d8b","date":1491224823,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return scorerSupplier(context).get(false);\n        }\n        @Override\n        public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n          final Weight weight = this;\n          return new ScorerSupplier() {\n            @Override\n            public Scorer get(boolean randomAccess) throws IOException {\n              scorerCreated.set(true);\n              return new ConstantScoreScorer(weight, boost, DocIdSetIterator.all(1));\n            }\n\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e98a4d8e18e7296a274ca283df84a76544bd753","date":1491296430,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return scorerSupplier(context).get(false);\n        }\n        @Override\n        public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n          final Weight weight = this;\n          return new ScorerSupplier() {\n            @Override\n            public Scorer get(boolean randomAccess) throws IOException {\n              scorerCreated.set(true);\n              return new ConstantScoreScorer(weight, boost, DocIdSetIterator.all(1));\n            }\n\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24f3e9c0fc20b3107388ec853a6fbad9f891b461","date":1502359844,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return scorerSupplier(context).get(Long.MAX_VALUE);\n        }\n        @Override\n        public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n          final Weight weight = this;\n          return new ScorerSupplier() {\n            @Override\n            public Scorer get(long leadCost) throws IOException {\n              scorerCreated.set(true);\n              return new ConstantScoreScorer(weight, boost, DocIdSetIterator.all(1));\n            }\n\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return scorerSupplier(context).get(false);\n        }\n        @Override\n        public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n          final Weight weight = this;\n          return new ScorerSupplier() {\n            @Override\n            public Scorer get(boolean randomAccess) throws IOException {\n              scorerCreated.set(true);\n              return new ConstantScoreScorer(weight, boost, DocIdSetIterator.all(1));\n            }\n\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d6ba405c7c8192661bdf7ce782181d12f3162a6","date":1502361392,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return scorerSupplier(context).get(Long.MAX_VALUE);\n        }\n        @Override\n        public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n          final Weight weight = this;\n          return new ScorerSupplier() {\n            @Override\n            public Scorer get(long leadCost) throws IOException {\n              scorerCreated.set(true);\n              return new ConstantScoreScorer(weight, boost, DocIdSetIterator.all(1));\n            }\n\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return scorerSupplier(context).get(false);\n        }\n        @Override\n        public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n          final Weight weight = this;\n          return new ScorerSupplier() {\n            @Override\n            public Scorer get(boolean randomAccess) throws IOException {\n              scorerCreated.set(true);\n              return new ConstantScoreScorer(weight, boost, DocIdSetIterator.all(1));\n            }\n\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58884af1f68e9d61c217c753fbd6266d86a63b14","date":1502363401,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return scorerSupplier(context).get(Long.MAX_VALUE);\n        }\n        @Override\n        public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n          final Weight weight = this;\n          return new ScorerSupplier() {\n            @Override\n            public Scorer get(long leadCost) throws IOException {\n              scorerCreated.set(true);\n              return new ConstantScoreScorer(weight, boost, DocIdSetIterator.all(1));\n            }\n\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return scorerSupplier(context).get(false);\n        }\n        @Override\n        public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n          final Weight weight = this;\n          return new ScorerSupplier() {\n            @Override\n            public Scorer get(boolean randomAccess) throws IOException {\n              scorerCreated.set(true);\n              return new ConstantScoreScorer(weight, boost, DocIdSetIterator.all(1));\n            }\n\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","date":1502692251,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return scorerSupplier(context).get(Long.MAX_VALUE);\n        }\n        @Override\n        public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n          final Weight weight = this;\n          return new ScorerSupplier() {\n            @Override\n            public Scorer get(long leadCost) throws IOException {\n              scorerCreated.set(true);\n              return new ConstantScoreScorer(weight, boost, DocIdSetIterator.all(1));\n            }\n\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return scorerSupplier(context).get(false);\n        }\n        @Override\n        public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n          final Weight weight = this;\n          return new ScorerSupplier() {\n            @Override\n            public Scorer get(boolean randomAccess) throws IOException {\n              scorerCreated.set(true);\n              return new ConstantScoreScorer(weight, boost, DocIdSetIterator.all(1));\n            }\n\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"706a7a3396c030cc66dda92a0492eb492131c4c0","date":1509705614,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return scorerSupplier(context).get(Long.MAX_VALUE);\n        }\n\n        @Override\n        public IndexReader.CacheHelper getCacheHelper(LeafReaderContext context) {\n          return context.reader().getCoreCacheHelper();\n        }\n\n        @Override\n        public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n          final Weight weight = this;\n          return new ScorerSupplier() {\n            @Override\n            public Scorer get(long leadCost) throws IOException {\n              scorerCreated.set(true);\n              return new ConstantScoreScorer(weight, boost, DocIdSetIterator.all(1));\n            }\n\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return scorerSupplier(context).get(Long.MAX_VALUE);\n        }\n        @Override\n        public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n          final Weight weight = this;\n          return new ScorerSupplier() {\n            @Override\n            public Scorer get(long leadCost) throws IOException {\n              scorerCreated.set(true);\n              return new ConstantScoreScorer(weight, boost, DocIdSetIterator.all(1));\n            }\n\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d523b8189b211dd1630166aa77b8c88bb48b3fcc","date":1510144168,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return scorerSupplier(context).get(Long.MAX_VALUE);\n        }\n\n        @Override\n        public IndexReader.CacheHelper getCacheHelper(LeafReaderContext context) {\n          return context.reader().getCoreCacheHelper();\n        }\n\n        @Override\n        public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n          final Weight weight = this;\n          return new ScorerSupplier() {\n            @Override\n            public Scorer get(long leadCost) throws IOException {\n              scorerCreated.set(true);\n              return new ConstantScoreScorer(weight, boost, DocIdSetIterator.all(1));\n            }\n\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return scorerSupplier(context).get(Long.MAX_VALUE);\n        }\n        @Override\n        public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n          final Weight weight = this;\n          return new ScorerSupplier() {\n            @Override\n            public Scorer get(long leadCost) throws IOException {\n              scorerCreated.set(true);\n              return new ConstantScoreScorer(weight, boost, DocIdSetIterator.all(1));\n            }\n\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da1460d7a5dea2658e7b8e4f6e632e53ade440ac","date":1510316270,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return scorerSupplier(context).get(Long.MAX_VALUE);\n        }\n\n        @Override\n        public boolean isCacheable(LeafReaderContext ctx) {\n          return true;\n        }\n\n        @Override\n        public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n          final Weight weight = this;\n          return new ScorerSupplier() {\n            @Override\n            public Scorer get(long leadCost) throws IOException {\n              scorerCreated.set(true);\n              return new ConstantScoreScorer(weight, boost, DocIdSetIterator.all(1));\n            }\n\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return scorerSupplier(context).get(Long.MAX_VALUE);\n        }\n\n        @Override\n        public IndexReader.CacheHelper getCacheHelper(LeafReaderContext context) {\n          return context.reader().getCoreCacheHelper();\n        }\n\n        @Override\n        public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n          final Weight weight = this;\n          return new ScorerSupplier() {\n            @Override\n            public Scorer get(long leadCost) throws IOException {\n              scorerCreated.set(true);\n              return new ConstantScoreScorer(weight, boost, DocIdSetIterator.all(1));\n            }\n\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,ScoreMode,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n      return new ConstantScoreWeight(this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return scorerSupplier(context).get(Long.MAX_VALUE);\n        }\n\n        @Override\n        public boolean isCacheable(LeafReaderContext ctx) {\n          return true;\n        }\n\n        @Override\n        public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n          final Weight weight = this;\n          return new ScorerSupplier() {\n            @Override\n            public Scorer get(long leadCost) throws IOException {\n              scorerCreated.set(true);\n              return new ConstantScoreScorer(weight, boost, DocIdSetIterator.all(1));\n            }\n\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return scorerSupplier(context).get(Long.MAX_VALUE);\n        }\n\n        @Override\n        public boolean isCacheable(LeafReaderContext ctx) {\n          return true;\n        }\n\n        @Override\n        public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n          final Weight weight = this;\n          return new ScorerSupplier() {\n            @Override\n            public Scorer get(long leadCost) throws IOException {\n              scorerCreated.set(true);\n              return new ConstantScoreScorer(weight, boost, DocIdSetIterator.all(1));\n            }\n\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,ScoreMode,float).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache.DummyQuery2#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {\n      return new ConstantScoreWeight(this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return scorerSupplier(context).get(Long.MAX_VALUE);\n        }\n\n        @Override\n        public boolean isCacheable(LeafReaderContext ctx) {\n          return true;\n        }\n\n        @Override\n        public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n          final Weight weight = this;\n          return new ScorerSupplier() {\n            @Override\n            public Scorer get(long leadCost) throws IOException {\n              scorerCreated.set(true);\n              return new ConstantScoreScorer(weight, boost, DocIdSetIterator.all(1));\n            }\n\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      return new ConstantScoreWeight(this, boost) {\n        @Override\n        public Scorer scorer(LeafReaderContext context) throws IOException {\n          return scorerSupplier(context).get(Long.MAX_VALUE);\n        }\n\n        @Override\n        public boolean isCacheable(LeafReaderContext ctx) {\n          return true;\n        }\n\n        @Override\n        public ScorerSupplier scorerSupplier(LeafReaderContext context) throws IOException {\n          final Weight weight = this;\n          return new ScorerSupplier() {\n            @Override\n            public Scorer get(long leadCost) throws IOException {\n              scorerCreated.set(true);\n              return new ConstantScoreScorer(weight, boost, DocIdSetIterator.all(1));\n            }\n\n            @Override\n            public long cost() {\n              return 1;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"706a7a3396c030cc66dda92a0492eb492131c4c0":["7d6ba405c7c8192661bdf7ce782181d12f3162a6"],"24f3e9c0fc20b3107388ec853a6fbad9f891b461":["a94c3ed25a08dda75a7682a15aa4499e5cdc9d8b"],"da1460d7a5dea2658e7b8e4f6e632e53ade440ac":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["7d6ba405c7c8192661bdf7ce782181d12f3162a6","706a7a3396c030cc66dda92a0492eb492131c4c0"],"417142ff08fda9cf0b72d5133e63097a166c6458":["da1460d7a5dea2658e7b8e4f6e632e53ade440ac","9fc47cb7b4346802411bb432f501ed0673d7119e"],"7d6ba405c7c8192661bdf7ce782181d12f3162a6":["a94c3ed25a08dda75a7682a15aa4499e5cdc9d8b","24f3e9c0fc20b3107388ec853a6fbad9f891b461"],"58884af1f68e9d61c217c753fbd6266d86a63b14":["a94c3ed25a08dda75a7682a15aa4499e5cdc9d8b","7d6ba405c7c8192661bdf7ce782181d12f3162a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be":["0e98a4d8e18e7296a274ca283df84a76544bd753","7d6ba405c7c8192661bdf7ce782181d12f3162a6"],"a94c3ed25a08dda75a7682a15aa4499e5cdc9d8b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["da1460d7a5dea2658e7b8e4f6e632e53ade440ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["417142ff08fda9cf0b72d5133e63097a166c6458"],"0e98a4d8e18e7296a274ca283df84a76544bd753":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"706a7a3396c030cc66dda92a0492eb492131c4c0":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"24f3e9c0fc20b3107388ec853a6fbad9f891b461":["7d6ba405c7c8192661bdf7ce782181d12f3162a6"],"da1460d7a5dea2658e7b8e4f6e632e53ade440ac":["417142ff08fda9cf0b72d5133e63097a166c6458","9fc47cb7b4346802411bb432f501ed0673d7119e"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["da1460d7a5dea2658e7b8e4f6e632e53ade440ac"],"417142ff08fda9cf0b72d5133e63097a166c6458":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7d6ba405c7c8192661bdf7ce782181d12f3162a6":["706a7a3396c030cc66dda92a0492eb492131c4c0","d523b8189b211dd1630166aa77b8c88bb48b3fcc","58884af1f68e9d61c217c753fbd6266d86a63b14","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be"],"58884af1f68e9d61c217c753fbd6266d86a63b14":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a94c3ed25a08dda75a7682a15aa4499e5cdc9d8b","0e98a4d8e18e7296a274ca283df84a76544bd753"],"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be":[],"a94c3ed25a08dda75a7682a15aa4499e5cdc9d8b":["24f3e9c0fc20b3107388ec853a6fbad9f891b461","7d6ba405c7c8192661bdf7ce782181d12f3162a6","58884af1f68e9d61c217c753fbd6266d86a63b14"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"0e98a4d8e18e7296a274ca283df84a76544bd753":["93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["58884af1f68e9d61c217c753fbd6266d86a63b14","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}