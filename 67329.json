{"path":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","commits":[{"id":"83f7535831b82edd777d50f0276d244b3c9a4734","date":1353267152,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","pathOld":"/dev/null","sourceNew":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    Field f;\n    doc.add(f = new PackedLongDocValuesField(\"field\", 17));\n    doc.add(new SortedBytesDocValuesField(\"field\", new BytesRef(\"hello\")));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    DirectoryReader r = w.getReader();\n    w.close();\n    assertEquals(17, getOnlySegmentReader(r).docValues(\"field\").loadSource().getInt(0));\n    r.close();\n    d.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"55d38708477d49511977195bad066d9ced001005","date":1353348143,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","sourceNew":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    Field f;\n    doc.add(f = new PackedLongDocValuesField(\"field\", 17));\n    doc.add(new SortedBytesDocValuesField(\"field\", new BytesRef(\"hello\")));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    DirectoryReader r = w.getReader();\n    w.close();\n    assertEquals(17, getOnlySegmentReader(r).getNumericDocValues(\"field\").get(0));\n    r.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    Field f;\n    doc.add(f = new PackedLongDocValuesField(\"field\", 17));\n    doc.add(new SortedBytesDocValuesField(\"field\", new BytesRef(\"hello\")));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    DirectoryReader r = w.getReader();\n    w.close();\n    assertEquals(17, getOnlySegmentReader(r).docValues(\"field\").loadSource().getInt(0));\n    r.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6e2893fd5349134af382d33ccc3d84840394c6c1","date":1353682567,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","sourceNew":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    Field f = new PackedLongDocValuesField(\"field\", 17);\n    doc.add(f);\n    doc.add(new SortedBytesDocValuesField(\"field\", new BytesRef(\"hello\")));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    if (_TestUtil.canUseSimpleDV()) {\n      DirectoryReader r = w.getReader();\n      assertEquals(17, getOnlySegmentReader(r).getNumericDocValues(\"field\").get(0));\n      r.close();\n    }\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    Field f;\n    doc.add(f = new PackedLongDocValuesField(\"field\", 17));\n    doc.add(new SortedBytesDocValuesField(\"field\", new BytesRef(\"hello\")));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    DirectoryReader r = w.getReader();\n    w.close();\n    assertEquals(17, getOnlySegmentReader(r).getNumericDocValues(\"field\").get(0));\n    r.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ddadc5a8439c906a65bfba5ce15166b5d5b58d82","date":1358287870,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","sourceNew":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    Field f = new PackedLongDocValuesField(\"field\", 17);\n    doc.add(f);\n    doc.add(new SortedBytesDocValuesField(\"field\", new BytesRef(\"hello\")));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    DirectoryReader r = w.getReader();\n    assertEquals(17, getOnlySegmentReader(r).getNumericDocValues(\"field\").get(0));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    Field f = new PackedLongDocValuesField(\"field\", 17);\n    doc.add(f);\n    doc.add(new SortedBytesDocValuesField(\"field\", new BytesRef(\"hello\")));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    if (_TestUtil.canUseSimpleDV()) {\n      DirectoryReader r = w.getReader();\n      assertEquals(17, getOnlySegmentReader(r).getNumericDocValues(\"field\").get(0));\n      r.close();\n    }\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"423d89a2b3cc419b647c07c2b3fdbc54311d07f9","date":1358836612,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","sourceNew":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    Field f = new NumericDocValuesField(\"field\", 17);\n    doc.add(f);\n    doc.add(new SortedDocValuesField(\"field\", new BytesRef(\"hello\")));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    DirectoryReader r = w.getReader();\n    assertEquals(17, getOnlySegmentReader(r).getNumericDocValues(\"field\").get(0));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    Field f = new PackedLongDocValuesField(\"field\", 17);\n    doc.add(f);\n    doc.add(new SortedBytesDocValuesField(\"field\", new BytesRef(\"hello\")));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    DirectoryReader r = w.getReader();\n    assertEquals(17, getOnlySegmentReader(r).getNumericDocValues(\"field\").get(0));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","pathOld":"/dev/null","sourceNew":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    Field f = new NumericDocValuesField(\"field\", 17);\n    doc.add(f);\n    doc.add(new SortedDocValuesField(\"field\", new BytesRef(\"hello\")));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    DirectoryReader r = w.getReader();\n    assertEquals(17, getOnlySegmentReader(r).getNumericDocValues(\"field\").get(0));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","sourceNew":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    Field f = new NumericDocValuesField(\"field\", 17);\n    doc.add(f);\n    doc.add(new SortedDocValuesField(\"field\", new BytesRef(\"hello\")));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    DirectoryReader r = w.getReader();\n    assertEquals(17, getOnlySegmentReader(r).getNumericDocValues(\"field\").get(0));\n    r.close();\n    w.shutdown();\n    d.close();\n  }\n\n","sourceOld":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    Field f = new NumericDocValuesField(\"field\", 17);\n    doc.add(f);\n    doc.add(new SortedDocValuesField(\"field\", new BytesRef(\"hello\")));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    DirectoryReader r = w.getReader();\n    assertEquals(17, getOnlySegmentReader(r).getNumericDocValues(\"field\").get(0));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"15b65fdb55ac25c30b38ad720f9cf68c69647a31","date":1398941528,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","sourceNew":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"field\", 17));\n    w.addDocument(doc);\n    \n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(new SortedDocValuesField(\"field\", new BytesRef(\"hello\")));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    DirectoryReader r = w.getReader();\n    assertEquals(17, getOnlySegmentReader(r).getNumericDocValues(\"field\").get(0));\n    r.close();\n    w.shutdown();\n    d.close();\n  }\n\n","sourceOld":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    Field f = new NumericDocValuesField(\"field\", 17);\n    doc.add(f);\n    doc.add(new SortedDocValuesField(\"field\", new BytesRef(\"hello\")));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    DirectoryReader r = w.getReader();\n    assertEquals(17, getOnlySegmentReader(r).getNumericDocValues(\"field\").get(0));\n    r.close();\n    w.shutdown();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","sourceNew":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"field\", 17));\n    w.addDocument(doc);\n    \n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(new SortedDocValuesField(\"field\", new BytesRef(\"hello\")));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    DirectoryReader r = w.getReader();\n    assertEquals(17, getOnlySegmentReader(r).getNumericDocValues(\"field\").get(0));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"field\", 17));\n    w.addDocument(doc);\n    \n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(new SortedDocValuesField(\"field\", new BytesRef(\"hello\")));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    DirectoryReader r = w.getReader();\n    assertEquals(17, getOnlySegmentReader(r).getNumericDocValues(\"field\").get(0));\n    r.close();\n    w.shutdown();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","sourceNew":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"field\", 17));\n    w.addDocument(doc);\n    \n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(new SortedDocValuesField(\"field\", new BytesRef(\"hello\")));\n    expectThrows(IllegalArgumentException.class, () -> {\n      w.addDocument(doc);\n    });\n\n    DirectoryReader r = w.getReader();\n    assertEquals(17, getOnlySegmentReader(r).getNumericDocValues(\"field\").get(0));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"field\", 17));\n    w.addDocument(doc);\n    \n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(new SortedDocValuesField(\"field\", new BytesRef(\"hello\")));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    DirectoryReader r = w.getReader();\n    assertEquals(17, getOnlySegmentReader(r).getNumericDocValues(\"field\").get(0));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","bugFix":["83f7535831b82edd777d50f0276d244b3c9a4734"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1","date":1457644139,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","sourceNew":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"field\", 17));\n    w.addDocument(doc);\n    \n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(new SortedDocValuesField(\"field\", new BytesRef(\"hello\")));\n    expectThrows(IllegalArgumentException.class, () -> {\n      w.addDocument(doc);\n    });\n\n    DirectoryReader r = w.getReader();\n    assertEquals(17, getOnlyLeafReader(r).getNumericDocValues(\"field\").get(0));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"field\", 17));\n    w.addDocument(doc);\n    \n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(new SortedDocValuesField(\"field\", new BytesRef(\"hello\")));\n    expectThrows(IllegalArgumentException.class, () -> {\n      w.addDocument(doc);\n    });\n\n    DirectoryReader r = w.getReader();\n    assertEquals(17, getOnlySegmentReader(r).getNumericDocValues(\"field\").get(0));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","bugFix":["ddadc5a8439c906a65bfba5ce15166b5d5b58d82"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","sourceNew":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"field\", 17));\n    w.addDocument(doc);\n    \n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(new SortedDocValuesField(\"field\", new BytesRef(\"hello\")));\n    expectThrows(IllegalArgumentException.class, () -> {\n      w.addDocument(doc);\n    });\n\n    DirectoryReader r = w.getReader();\n    NumericDocValues values = DocValues.getNumeric(getOnlyLeafReader(r), \"field\");\n    assertEquals(0, values.nextDoc());\n    assertEquals(17, values.longValue());\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"field\", 17));\n    w.addDocument(doc);\n    \n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(new SortedDocValuesField(\"field\", new BytesRef(\"hello\")));\n    expectThrows(IllegalArgumentException.class, () -> {\n      w.addDocument(doc);\n    });\n\n    DirectoryReader r = w.getReader();\n    assertEquals(17, getOnlyLeafReader(r).getNumericDocValues(\"field\").get(0));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","sourceNew":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"field\", 17));\n    w.addDocument(doc);\n    \n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(new SortedDocValuesField(\"field\", new BytesRef(\"hello\")));\n    expectThrows(IllegalArgumentException.class, () -> {\n      w.addDocument(doc);\n    });\n\n    DirectoryReader r = w.getReader();\n    NumericDocValues values = DocValues.getNumeric(getOnlyLeafReader(r), \"field\");\n    assertEquals(0, values.nextDoc());\n    assertEquals(17, values.longValue());\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"field\", 17));\n    w.addDocument(doc);\n    \n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(new SortedDocValuesField(\"field\", new BytesRef(\"hello\")));\n    expectThrows(IllegalArgumentException.class, () -> {\n      w.addDocument(doc);\n    });\n\n    DirectoryReader r = w.getReader();\n    assertEquals(17, getOnlyLeafReader(r).getNumericDocValues(\"field\").get(0));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField2().mjava","sourceNew":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"field\", 17));\n    w.addDocument(doc);\n    \n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(new SortedDocValuesField(\"field\", new BytesRef(\"hello\")));\n    expectThrows(IllegalArgumentException.class, () -> {\n      w.addDocument(doc);\n    });\n\n    DirectoryReader r = w.getReader();\n    NumericDocValues values = DocValues.getNumeric(getOnlyLeafReader(r), \"field\");\n    assertEquals(0, values.nextDoc());\n    assertEquals(17, values.longValue());\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDifferentTypedDocValuesField2() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), d);\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"field\", 17));\n    w.addDocument(doc);\n    \n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(new SortedDocValuesField(\"field\", new BytesRef(\"hello\")));\n    expectThrows(IllegalArgumentException.class, () -> {\n      w.addDocument(doc);\n    });\n\n    DirectoryReader r = w.getReader();\n    assertEquals(17, getOnlyLeafReader(r).getNumericDocValues(\"field\").get(0));\n    r.close();\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"15b65fdb55ac25c30b38ad720f9cf68c69647a31":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"6e2893fd5349134af382d33ccc3d84840394c6c1":["55d38708477d49511977195bad066d9ced001005"],"05fe562aa248790944d43cdd478f512572835ba0":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"83f7535831b82edd777d50f0276d244b3c9a4734":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1":["05fe562aa248790944d43cdd478f512572835ba0"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","423d89a2b3cc419b647c07c2b3fdbc54311d07f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["15b65fdb55ac25c30b38ad720f9cf68c69647a31"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"423d89a2b3cc419b647c07c2b3fdbc54311d07f9":["ddadc5a8439c906a65bfba5ce15166b5d5b58d82"],"ddadc5a8439c906a65bfba5ce15166b5d5b58d82":["6e2893fd5349134af382d33ccc3d84840394c6c1"],"55d38708477d49511977195bad066d9ced001005":["83f7535831b82edd777d50f0276d244b3c9a4734"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"15b65fdb55ac25c30b38ad720f9cf68c69647a31":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"6e2893fd5349134af382d33ccc3d84840394c6c1":["ddadc5a8439c906a65bfba5ce15166b5d5b58d82"],"05fe562aa248790944d43cdd478f512572835ba0":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"83f7535831b82edd777d50f0276d244b3c9a4734":["55d38708477d49511977195bad066d9ced001005"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["83f7535831b82edd777d50f0276d244b3c9a4734","d4d69c535930b5cce125cff868d40f6373dc27d4"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["05fe562aa248790944d43cdd478f512572835ba0"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["15b65fdb55ac25c30b38ad720f9cf68c69647a31"],"423d89a2b3cc419b647c07c2b3fdbc54311d07f9":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"55d38708477d49511977195bad066d9ced001005":["6e2893fd5349134af382d33ccc3d84840394c6c1"],"ddadc5a8439c906a65bfba5ce15166b5d5b58d82":["423d89a2b3cc419b647c07c2b3fdbc54311d07f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}