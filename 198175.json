{"path":"src/java/org/apache/solr/handler/SearchHandler#inform(SolrCore).mjava","commits":[{"id":"68f896937cecbd003415d5fd0616436eaa1fb336","date":1197098869,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/SearchHandler#inform(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Initialize the components based on name\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void inform(SolrCore core) \n  {\n    Object declaredComponents = initArgs.get(INIT_COMPONENTS);\n    List<String> first = (List<String>) initArgs.get(INIT_FISRT_COMPONENTS);\n    List<String> last  = (List<String>) initArgs.get(INIT_LAST_COMPONENTS);\n\n    List<String> list = null;\n    if( declaredComponents == null ) {\n      // Use the default component list\n      list = getDefaultComponets();\n      \n      if( first != null ) {\n        List<String> clist = first;\n        clist.addAll( list );\n        list = clist;\n      }\n      \n      if( last != null ) {\n        list.addAll( last );\n      }\n    }\n    else {\n      list = (List<String>)declaredComponents;\n      if( first != null || last != null ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n            \"First/Last components only valid if you do not declare 'components'\");\n      }\n    }\n    \n    // Build the component list\n    components = new ArrayList<SearchComponent>( list.size() );\n    for(String c : list){\n      SearchComponent comp = core.getSearchComponent( c );\n      components.add(comp);\n      log.info(\"Adding  component:\"+comp);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7c1e9928d771e4e47fc17bc23aa91a2454b133a","date":1199894278,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/SearchHandler#inform(SolrCore).mjava","pathOld":"src/java/org/apache/solr/handler/SearchHandler#inform(SolrCore).mjava","sourceNew":"  /**\n   * Initialize the components based on name\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void inform(SolrCore core) \n  {\n    Object declaredComponents = initArgs.get(INIT_COMPONENTS);\n    List<String> first = (List<String>) initArgs.get(INIT_FISRT_COMPONENTS);\n    List<String> last  = (List<String>) initArgs.get(INIT_LAST_COMPONENTS);\n\n    List<String> list = null;\n    if( declaredComponents == null ) {\n      // Use the default component list\n      list = getDefaultComponets();\n      \n      if( first != null ) {\n        List<String> clist = first;\n        clist.addAll( list );\n        list = clist;\n      }\n      \n      if( last != null ) {\n        list.addAll( last );\n      }\n    }\n    else {\n      list = (List<String>)declaredComponents;\n      if( first != null || last != null ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n            \"First/Last components only valid if you do not declare 'components'\");\n      }\n    }\n    \n    // Build the component list\n    components = new ArrayList<SearchComponent>( list.size() );\n    for(String c : list){\n      SearchComponent comp = core.getSearchComponent( c );\n      components.add(comp);\n      log.info(\"Adding  component:\"+comp);\n    }\n  }\n\n","sourceOld":"  /**\n   * Initialize the components based on name\n   */\n  @SuppressWarnings(\"unchecked\")\n  public void inform(SolrCore core) \n  {\n    Object declaredComponents = initArgs.get(INIT_COMPONENTS);\n    List<String> first = (List<String>) initArgs.get(INIT_FISRT_COMPONENTS);\n    List<String> last  = (List<String>) initArgs.get(INIT_LAST_COMPONENTS);\n\n    List<String> list = null;\n    if( declaredComponents == null ) {\n      // Use the default component list\n      list = getDefaultComponets();\n      \n      if( first != null ) {\n        List<String> clist = first;\n        clist.addAll( list );\n        list = clist;\n      }\n      \n      if( last != null ) {\n        list.addAll( last );\n      }\n    }\n    else {\n      list = (List<String>)declaredComponents;\n      if( first != null || last != null ) {\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n            \"First/Last components only valid if you do not declare 'components'\");\n      }\n    }\n    \n    // Build the component list\n    components = new ArrayList<SearchComponent>( list.size() );\n    for(String c : list){\n      SearchComponent comp = core.getSearchComponent( c );\n      components.add(comp);\n      log.info(\"Adding  component:\"+comp);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"68f896937cecbd003415d5fd0616436eaa1fb336":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"d7c1e9928d771e4e47fc17bc23aa91a2454b133a":["68f896937cecbd003415d5fd0616436eaa1fb336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["68f896937cecbd003415d5fd0616436eaa1fb336"],"68f896937cecbd003415d5fd0616436eaa1fb336":["d7c1e9928d771e4e47fc17bc23aa91a2454b133a"],"d7c1e9928d771e4e47fc17bc23aa91a2454b133a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d7c1e9928d771e4e47fc17bc23aa91a2454b133a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}