{"path":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleForcePrepareForLeadership(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05","date":1446751515,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleForcePrepareForLeadership(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  protected void handleForcePrepareForLeadership(SolrQueryRequest req,\n      SolrQueryResponse rsp) throws IOException {\n    final SolrParams params = req.getParams();\n\n    log.info(\"I have been forcefully prepare myself for leadership.\");\n    ZkController zkController = coreContainer.getZkController();\n    if (zkController == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Only valid for SolrCloud\");\n    }\n    \n    String cname = params.get(CoreAdminParams.CORE);\n    if (cname == null) {\n      throw new IllegalArgumentException(CoreAdminParams.CORE + \" is required\");\n    }\n    try (SolrCore core = coreContainer.getCore(cname)) {\n\n      // Setting the last published state for this core to be ACTIVE\n      if (core != null) {\n        core.getCoreDescriptor().getCloudDescriptor().setLastPublished(Replica.State.ACTIVE);\n        log.info(\"Setting the last published state for this core, {}, to {}\", core.getName(), Replica.State.ACTIVE);\n      } else {\n        SolrException.log(log, \"Could not find core: \" + cname);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa0876236f0bd8be403747120d248bdd42b75a96","date":1451844229,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleForcePrepareForLeadership(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":null,"sourceOld":"  protected void handleForcePrepareForLeadership(SolrQueryRequest req,\n      SolrQueryResponse rsp) throws IOException {\n    final SolrParams params = req.getParams();\n\n    log.info(\"I have been forcefully prepare myself for leadership.\");\n    ZkController zkController = coreContainer.getZkController();\n    if (zkController == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Only valid for SolrCloud\");\n    }\n    \n    String cname = params.get(CoreAdminParams.CORE);\n    if (cname == null) {\n      throw new IllegalArgumentException(CoreAdminParams.CORE + \" is required\");\n    }\n    try (SolrCore core = coreContainer.getCore(cname)) {\n\n      // Setting the last published state for this core to be ACTIVE\n      if (core != null) {\n        core.getCoreDescriptor().getCloudDescriptor().setLastPublished(Replica.State.ACTIVE);\n        log.info(\"Setting the last published state for this core, {}, to {}\", core.getName(), Replica.State.ACTIVE);\n      } else {\n        SolrException.log(log, \"Could not find core: \" + cname);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa0876236f0bd8be403747120d248bdd42b75a96":["55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05"],"55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fa0876236f0bd8be403747120d248bdd42b75a96"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05"],"fa0876236f0bd8be403747120d248bdd42b75a96":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"55dd60b0ec28d5f9b8d178ab4d1cc3abb74c3e05":["fa0876236f0bd8be403747120d248bdd42b75a96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}