{"path":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","commits":[{"id":"7917a219001fa51c4289d6a8e1a98606995170b7","date":1376673362,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n\n    createTempDir();\n    File solrHome = new File(dataDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(Charsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n\n    Object obj = method.invoke(new SolrDispatchFilter(), new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n\n    createTempDir();\n    File solrHome = new File(dataDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(Charsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n\n    Object obj = method.invoke(new SolrDispatchFilter(), new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n\n    createTempDir();\n    File solrHome = new File(dataDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(Charsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n\n    Object obj = method.invoke(new SolrDispatchFilter(), new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","sourceNew":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    recurseDelete(dataDir);\n    File solrHome = new File(dataDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(Charsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n\n    Object obj = method.invoke(new SolrDispatchFilter(), new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n\n    createTempDir();\n    File solrHome = new File(dataDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(Charsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n\n    Object obj = method.invoke(new SolrDispatchFilter(), new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","sourceNew":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir();\n    recurseDelete(tmpDir);\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(Charsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n\n    Object obj = method.invoke(new SolrDispatchFilter(), new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n\n    createTempDir();\n    File solrHome = new File(dataDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(Charsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n\n    Object obj = method.invoke(new SolrDispatchFilter(), new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6e1c1455e91339e72d6cdc7518defd3e05a43957","date":1396304204,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","sourceNew":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    recurseDelete(dataDir);\n    File solrHome = new File(dataDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n\n    Object obj = method.invoke(new SolrDispatchFilter(), new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    recurseDelete(dataDir);\n    File solrHome = new File(dataDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(Charsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n\n    Object obj = method.invoke(new SolrDispatchFilter(), new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","sourceNew":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir();\n    recurseDelete(tmpDir);\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n\n    Object obj = method.invoke(new SolrDispatchFilter(), new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir();\n    recurseDelete(tmpDir);\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(Charsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n\n    Object obj = method.invoke(new SolrDispatchFilter(), new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","sourceNew":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir();\n    recurseDelete(tmpDir);\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n\n    Object obj = method.invoke(new SolrDispatchFilter(), new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    recurseDelete(dataDir);\n    File solrHome = new File(dataDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n\n    Object obj = method.invoke(new SolrDispatchFilter(), new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4e85f88536da92df6654f2182f3a477355cc4aae","date":1401284092,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","sourceNew":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir();\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n\n    Object obj = method.invoke(new SolrDispatchFilter(), new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir();\n    recurseDelete(tmpDir);\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n\n    Object obj = method.invoke(new SolrDispatchFilter(), new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","sourceNew":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir().toFile();\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n\n    Object obj = method.invoke(new SolrDispatchFilter(), new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir();\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n\n    Object obj = method.invoke(new SolrDispatchFilter(), new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6784d0cc613dc1ee97030eaaa5e0754edc22d164","date":1420824784,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","sourceNew":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir().toFile();\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n    if (solrDispatchFilter != null) solrDispatchFilter.destroy();\n    solrDispatchFilter = new SolrDispatchFilter();\n    Object obj = method.invoke(solrDispatchFilter, new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir().toFile();\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n\n    Object obj = method.invoke(new SolrDispatchFilter(), new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":["7917a219001fa51c4289d6a8e1a98606995170b7"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e15199583d3635cb940942caed05132dd6c4c7c6","date":1424875551,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","sourceNew":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir().toFile();\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n    if (solrDispatchFilter != null) solrDispatchFilter.destroy();\n    solrDispatchFilter = new SolrDispatchFilter();\n    Object obj = method.invoke(solrDispatchFilter, new SolrResourceLoader(null));\n    cfg = (NodeConfig) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir().toFile();\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n    if (solrDispatchFilter != null) solrDispatchFilter.destroy();\n    solrDispatchFilter = new SolrDispatchFilter();\n    Object obj = method.invoke(solrDispatchFilter, new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9bc766d645fa848f86c381c7f6acf2c881c99399","date":1425549246,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","sourceNew":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir().toFile();\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    Properties props = new Properties();\n    props.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    props.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadNodeConfig\", String.class, Properties.class);\n    method.setAccessible(true);\n    if (solrDispatchFilter != null) solrDispatchFilter.destroy();\n    solrDispatchFilter = new SolrDispatchFilter();\n    Object obj = method.invoke(solrDispatchFilter, solrHome.getAbsolutePath(), props);\n    cfg = (NodeConfig) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir().toFile();\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n    if (solrDispatchFilter != null) solrDispatchFilter.destroy();\n    solrDispatchFilter = new SolrDispatchFilter();\n    Object obj = method.invoke(solrDispatchFilter, new SolrResourceLoader(null));\n    cfg = (NodeConfig) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","sourceNew":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir().toFile();\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    Properties props = new Properties();\n    props.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    props.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadNodeConfig\", String.class, Properties.class);\n    method.setAccessible(true);\n    if (solrDispatchFilter != null) solrDispatchFilter.destroy();\n    solrDispatchFilter = new SolrDispatchFilter();\n    Object obj = method.invoke(solrDispatchFilter, solrHome.getAbsolutePath(), props);\n    cfg = (NodeConfig) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir().toFile();\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    System.setProperty(\"solr.solr.home\", solrHome.getAbsolutePath());\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadConfigSolr\", SolrResourceLoader.class);\n    method.setAccessible(true);\n    if (solrDispatchFilter != null) solrDispatchFilter.destroy();\n    solrDispatchFilter = new SolrDispatchFilter();\n    Object obj = method.invoke(solrDispatchFilter, new SolrResourceLoader(null));\n    cfg = (ConfigSolr) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bcf9886c8ff537aafde14de48ebf744f5673f08b","date":1439041198,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","sourceNew":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir().toFile();\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.nanoTime() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    Properties props = new Properties();\n    props.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    props.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadNodeConfig\", String.class, Properties.class);\n    method.setAccessible(true);\n    if (solrDispatchFilter != null) solrDispatchFilter.destroy();\n    solrDispatchFilter = new SolrDispatchFilter();\n    Object obj = method.invoke(solrDispatchFilter, solrHome.getAbsolutePath(), props);\n    cfg = (NodeConfig) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir().toFile();\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.currentTimeMillis() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    Properties props = new Properties();\n    props.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    props.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadNodeConfig\", String.class, Properties.class);\n    method.setAccessible(true);\n    if (solrDispatchFilter != null) solrDispatchFilter.destroy();\n    solrDispatchFilter = new SolrDispatchFilter();\n    Object obj = method.invoke(solrDispatchFilter, solrHome.getAbsolutePath(), props);\n    cfg = (NodeConfig) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4383b91725e5b335d0a9d5f24b122b813dddd0cc","date":1442106431,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","sourceNew":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir().toFile();\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.nanoTime() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    Properties props = new Properties();\n    props.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    props.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    cfg = SolrDispatchFilter.loadNodeConfig(solrHome.getAbsolutePath(), props);\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir().toFile();\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.nanoTime() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    Properties props = new Properties();\n    props.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    props.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    Method method = SolrDispatchFilter.class.getDeclaredMethod(\"loadNodeConfig\", String.class, Properties.class);\n    method.setAccessible(true);\n    if (solrDispatchFilter != null) solrDispatchFilter.destroy();\n    solrDispatchFilter = new SolrDispatchFilter();\n    Object obj = method.invoke(solrDispatchFilter, solrHome.getAbsolutePath(), props);\n    cfg = (NodeConfig) obj;\n\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","sourceNew":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    Path tmpDir = createTempDir();\n    Path solrHome = tmpDir.resolve(\"home\");\n    copyMinConf(new File(solrHome.toFile(), \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome.toFile(), \"solr.xml\"));\n    }\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.resolve(\"zookeeper\" + System.nanoTime()).resolve(\"server1\").resolve(\"data\").toString();\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    Properties props = new Properties();\n    props.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    props.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    cfg = SolrDispatchFilter.loadNodeConfig(solrHome, props);\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    File tmpDir = createTempDir().toFile();\n    File solrHome = new File(tmpDir, \"home\");\n    copyMinConf(new File(solrHome, \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome, \"solr.xml\"));\n    }\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.getAbsolutePath() + File.separator\n        + \"zookeeper\" + System.nanoTime() + \"/server1/data\";\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    Properties props = new Properties();\n    props.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    props.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    cfg = SolrDispatchFilter.loadNodeConfig(solrHome.getAbsolutePath(), props);\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","sourceNew":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    Path tmpDir = createTempDir();\n    Path solrHome = tmpDir.resolve(\"home\");\n    copyMinConf(new File(solrHome.toFile(), \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome.toFile(), \"solr.xml\"));\n    }\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.resolve(\"zookeeper\" + System.nanoTime()).resolve(\"server1\").resolve(\"data\").toString();\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    zkServer.buildZooKeeper(\"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    Properties props = new Properties();\n    props.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    props.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    cfg = SolrDispatchFilter.loadNodeConfig(solrHome, props);\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    Path tmpDir = createTempDir();\n    Path solrHome = tmpDir.resolve(\"home\");\n    copyMinConf(new File(solrHome.toFile(), \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome.toFile(), \"solr.xml\"));\n    }\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.resolve(\"zookeeper\" + System.nanoTime()).resolve(\"server1\").resolve(\"data\").toString();\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    AbstractZkTestCase.buildZooKeeper(zkServer.getZkHost(),\n        zkServer.getZkAddress(), \"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    Properties props = new Properties();\n    props.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    props.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    cfg = SolrDispatchFilter.loadNodeConfig(solrHome, props);\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":["7917a219001fa51c4289d6a8e1a98606995170b7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1778938cb7fb298e6e07a43e2d5acaf552d61518","date":1559609435,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","sourceNew":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    Path tmpDir = createTempDir();\n    Path solrHome = tmpDir.resolve(\"home\");\n    copyMinConf(new File(solrHome.toFile(), \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome.toFile(), \"solr.xml\"));\n    }\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.resolve(\"zookeeper\" + System.nanoTime()).resolve(\"server1\").resolve(\"data\");\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    zkServer.buildZooKeeper(\"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    Properties props = new Properties();\n    props.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    props.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    cfg = SolrDispatchFilter.loadNodeConfig(solrHome, props);\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    Path tmpDir = createTempDir();\n    Path solrHome = tmpDir.resolve(\"home\");\n    copyMinConf(new File(solrHome.toFile(), \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome.toFile(), \"solr.xml\"));\n    }\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.resolve(\"zookeeper\" + System.nanoTime()).resolve(\"server1\").resolve(\"data\").toString();\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    zkServer.buildZooKeeper(\"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    Properties props = new Properties();\n    props.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    props.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    cfg = SolrDispatchFilter.loadNodeConfig(solrHome, props);\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#setUpZkAndDiskXml(boolean,boolean).mjava","sourceNew":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    Path tmpDir = createTempDir();\n    Path solrHome = tmpDir.resolve(\"home\");\n    copyMinConf(new File(solrHome.toFile(), \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome.toFile(), \"solr.xml\"));\n    }\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.resolve(\"zookeeper\" + System.nanoTime()).resolve(\"server1\").resolve(\"data\");\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    zkServer.buildZooKeeper(\"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    if (log.isInfoEnabled()) {\n      log.info(\"####SETUP_START {}\", getTestName());\n    }\n\n    // set some system properties for use by tests\n    Properties props = new Properties();\n    props.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    props.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    cfg = SolrDispatchFilter.loadNodeConfig(solrHome, props);\n    if (log.isInfoEnabled()) {\n      log.info(\"####SETUP_END {}\", getTestName());\n    }\n  }\n\n","sourceOld":"  private void setUpZkAndDiskXml(boolean toZk, boolean leaveOnLocal) throws Exception {\n    Path tmpDir = createTempDir();\n    Path solrHome = tmpDir.resolve(\"home\");\n    copyMinConf(new File(solrHome.toFile(), \"myCollect\"));\n    if (leaveOnLocal) {\n      FileUtils.copyFile(new File(SolrTestCaseJ4.TEST_HOME(), \"solr-stress-new.xml\"), new File(solrHome.toFile(), \"solr.xml\"));\n    }\n\n    ignoreException(\"No UpdateLog found - cannot sync\");\n    ignoreException(\"No UpdateLog found - cannot recover\");\n\n    System.setProperty(\"zkClientTimeout\", \"8000\");\n\n    zkDir = tmpDir.resolve(\"zookeeper\" + System.nanoTime()).resolve(\"server1\").resolve(\"data\");\n    zkServer = new ZkTestServer(zkDir);\n    zkServer.run();\n    System.setProperty(\"zkHost\", zkServer.getZkAddress());\n    zkServer.buildZooKeeper(\"solrconfig.xml\", \"schema.xml\");\n\n    zkClient = new SolrZkClient(zkServer.getZkAddress(), AbstractZkTestCase.TIMEOUT);\n\n    if (toZk) {\n      zkClient.makePath(\"solr.xml\", XML_FOR_ZK.getBytes(StandardCharsets.UTF_8), true);\n    }\n\n    zkClient.close();\n\n    log.info(\"####SETUP_START \" + getTestName());\n\n    // set some system properties for use by tests\n    Properties props = new Properties();\n    props.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    props.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    cfg = SolrDispatchFilter.loadNodeConfig(solrHome, props);\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","6e1c1455e91339e72d6cdc7518defd3e05a43957"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["7917a219001fa51c4289d6a8e1a98606995170b7"],"4e85f88536da92df6654f2182f3a477355cc4aae":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["6e1c1455e91339e72d6cdc7518defd3e05a43957","5eb2511ababf862ea11e10761c70ee560cd84510"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7917a219001fa51c4289d6a8e1a98606995170b7"],"31d4861802ca404d78ca1d15f4550eec415b9199":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7917a219001fa51c4289d6a8e1a98606995170b7"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["e15199583d3635cb940942caed05132dd6c4c7c6"],"6e1c1455e91339e72d6cdc7518defd3e05a43957":["1416f9d09d016a6894cd17e1caac137dad2bba59"],"7917a219001fa51c4289d6a8e1a98606995170b7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f4abec28b874149a7223e32cc7a01704c27790de":["4e85f88536da92df6654f2182f3a477355cc4aae"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["1778938cb7fb298e6e07a43e2d5acaf552d61518"],"e15199583d3635cb940942caed05132dd6c4c7c6":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["6784d0cc613dc1ee97030eaaa5e0754edc22d164","9bc766d645fa848f86c381c7f6acf2c881c99399"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["4383b91725e5b335d0a9d5f24b122b813dddd0cc"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["7917a219001fa51c4289d6a8e1a98606995170b7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4383b91725e5b335d0a9d5f24b122b813dddd0cc":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"1778938cb7fb298e6e07a43e2d5acaf552d61518":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["f4abec28b874149a7223e32cc7a01704c27790de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["5eb2511ababf862ea11e10761c70ee560cd84510"],"4e85f88536da92df6654f2182f3a477355cc4aae":["f4abec28b874149a7223e32cc7a01704c27790de"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["4e85f88536da92df6654f2182f3a477355cc4aae"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["1778938cb7fb298e6e07a43e2d5acaf552d61518"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"6e1c1455e91339e72d6cdc7518defd3e05a43957":["5eb2511ababf862ea11e10761c70ee560cd84510","2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","bcf9886c8ff537aafde14de48ebf744f5673f08b"],"7917a219001fa51c4289d6a8e1a98606995170b7":["bb1f22cfa77230b5f05b7784feae5367f6bbb488","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","1416f9d09d016a6894cd17e1caac137dad2bba59"],"f4abec28b874149a7223e32cc7a01704c27790de":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e15199583d3635cb940942caed05132dd6c4c7c6":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a626ec4d1c92e59fe390724d6220081047b03ce7":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["6e1c1455e91339e72d6cdc7518defd3e05a43957"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","7917a219001fa51c4289d6a8e1a98606995170b7"],"4383b91725e5b335d0a9d5f24b122b813dddd0cc":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["4383b91725e5b335d0a9d5f24b122b813dddd0cc"],"1778938cb7fb298e6e07a43e2d5acaf552d61518":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["e15199583d3635cb940942caed05132dd6c4c7c6","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}