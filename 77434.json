{"path":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPResponse#toString().mjava","commits":[{"id":"bc6055f4a2e8e9f9caaec2297010c9502480ed69","date":1050060580,"type":0,"author":"cmarschner","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPResponse#toString().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * produces a full list of headers and their values, one per line.\n     *\n     * @return   a string containing the headers\n     */\n    public String toString()\n    {\n        if (!initialized)\n        {\n            try\n            {\n                handleResponse();\n            }\n            catch (Exception e)\n            {\n                if (!(e instanceof InterruptedIOException))\n                {\n                    Log.write(Log.RESP, \"HResp: (\\\"\" + method + \" \" +\n                            OriginalURI.getPathAndQuery() + \"\\\")\");\n                    Log.write(Log.RESP, \"       \", e);\n                }\n                return \"Failed to read headers: \" + e;\n            }\n        }\n\n        String nl = System.getProperty(\"line.separator\", \"\\n\");\n\n        StringBuffer str = new StringBuffer(Version);\n        str.append(' ');\n        str.append(StatusCode);\n        str.append(' ');\n        str.append(ReasonLine);\n        str.append(nl);\n\n        if (EffectiveURI != null)\n        {\n            str.append(\"Effective-URI: \");\n            str.append(EffectiveURI);\n            str.append(nl);\n        }\n\n        Enumeration hdr_list = Headers.keys();\n        while (hdr_list.hasMoreElements())\n        {\n            String hdr = (String) hdr_list.nextElement();\n            str.append(hdr);\n            str.append(\": \");\n            str.append(Headers.get(hdr));\n            str.append(nl);\n        }\n\n        return str.toString();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPResponse#toString().mjava","sourceNew":null,"sourceOld":"    /**\n     * produces a full list of headers and their values, one per line.\n     *\n     * @return   a string containing the headers\n     */\n    public String toString()\n    {\n        if (!initialized)\n        {\n            try\n            {\n                handleResponse();\n            }\n            catch (Exception e)\n            {\n                if (!(e instanceof InterruptedIOException))\n                {\n                    Log.write(Log.RESP, \"HResp: (\\\"\" + method + \" \" +\n                            OriginalURI.getPathAndQuery() + \"\\\")\");\n                    Log.write(Log.RESP, \"       \", e);\n                }\n                return \"Failed to read headers: \" + e;\n            }\n        }\n\n        String nl = System.getProperty(\"line.separator\", \"\\n\");\n\n        StringBuffer str = new StringBuffer(Version);\n        str.append(' ');\n        str.append(StatusCode);\n        str.append(' ');\n        str.append(ReasonLine);\n        str.append(nl);\n\n        if (EffectiveURI != null)\n        {\n            str.append(\"Effective-URI: \");\n            str.append(EffectiveURI);\n            str.append(nl);\n        }\n\n        Enumeration hdr_list = Headers.keys();\n        while (hdr_list.hasMoreElements())\n        {\n            String hdr = (String) hdr_list.nextElement();\n            str.append(hdr);\n            str.append(\": \");\n            str.append(Headers.get(hdr));\n            str.append(nl);\n        }\n\n        return str.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bc6055f4a2e8e9f9caaec2297010c9502480ed69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["bc6055f4a2e8e9f9caaec2297010c9502480ed69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"bc6055f4a2e8e9f9caaec2297010c9502480ed69":["afc16d717d9ed1a8e45371668ca6de674164d624"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bc6055f4a2e8e9f9caaec2297010c9502480ed69"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}