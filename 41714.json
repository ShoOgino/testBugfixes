{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/util/GeoTestUtil#normalizeLongitude(double).mjava","commits":[{"id":"6c1079b0e8cc08b4c818211a4fa79d31f0c66ba9","date":1459176843,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/GeoTestUtil#normalizeLongitude(double).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#normalizeLon(double).mjava","sourceNew":"  /** Puts longitude in range of -180 to +180. */\n  private static double normalizeLongitude(double longitude) {\n    if (longitude >= -180 && longitude <= 180) {\n      return longitude; //common case, and avoids slight double precision shifting\n    }\n    double off = (longitude + 180) % 360;\n    if (off < 0) {\n      return 180 + off;\n    } else if (off == 0 && longitude > 0) {\n      return 180;\n    } else {\n      return -180 + off;\n    }\n  }\n\n","sourceOld":"  /** Puts longitude in range of -180 to +180. */\n  public static double normalizeLon(double lon_deg) {\n    if (lon_deg >= -180 && lon_deg <= 180) {\n      return lon_deg; //common case, and avoids slight double precision shifting\n    }\n    double off = (lon_deg + 180) % 360;\n    if (off < 0) {\n      return 180 + off;\n    } else if (off == 0 && lon_deg > 0) {\n      return 180;\n    } else {\n      return -180 + off;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe","date":1459623422,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/geo/GeoTestUtil#normalizeLongitude(double).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/GeoTestUtil#normalizeLongitude(double).mjava","sourceNew":"  /** Puts longitude in range of -180 to +180. */\n  private static double normalizeLongitude(double longitude) {\n    if (longitude >= -180 && longitude <= 180) {\n      return longitude; //common case, and avoids slight double precision shifting\n    }\n    double off = (longitude + 180) % 360;\n    if (off < 0) {\n      return 180 + off;\n    } else if (off == 0 && longitude > 0) {\n      return 180;\n    } else {\n      return -180 + off;\n    }\n  }\n\n","sourceOld":"  /** Puts longitude in range of -180 to +180. */\n  private static double normalizeLongitude(double longitude) {\n    if (longitude >= -180 && longitude <= 180) {\n      return longitude; //common case, and avoids slight double precision shifting\n    }\n    double off = (longitude + 180) % 360;\n    if (off < 0) {\n      return 180 + off;\n    } else if (off == 0 && longitude > 0) {\n      return 180;\n    } else {\n      return -180 + off;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6c1079b0e8cc08b4c818211a4fa79d31f0c66ba9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe":["6c1079b0e8cc08b4c818211a4fa79d31f0c66ba9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe"]},"commit2Childs":{"6c1079b0e8cc08b4c818211a4fa79d31f0c66ba9":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6c1079b0e8cc08b4c818211a4fa79d31f0c66ba9"],"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}