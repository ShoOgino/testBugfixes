{"path":"solr/src/java/org/apache/solr/util/SolrPluginUtils#explanationToNamedList(Explanation).mjava","commits":[{"id":"5f0737567c7196b3ba1a359c2bdf103a3984a55e","date":1275089164,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/SolrPluginUtils#explanationToNamedList(Explanation).mjava","pathOld":"/dev/null","sourceNew":"  public static NamedList<Object> explanationToNamedList(Explanation e) {\n    NamedList<Object> out = new SimpleOrderedMap<Object>();\n\n    out.add(\"match\", e.isMatch());\n    out.add(\"value\", e.getValue());\n    out.add(\"description\", e.getDescription());\n\n    Explanation[] details = e.getDetails();\n\n    // short circut out\n    if (null == details || 0 == details.length) return out;\n\n    List<NamedList<Object>> kids\n      = new ArrayList<NamedList<Object>>(details.length);\n    for (Explanation d : details) {\n      kids.add(explanationToNamedList(d));\n    }\n    out.add(\"details\", kids);\n\n    return out;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#explanationToNamedList(Explanation).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#explanationToNamedList(Explanation).mjava","sourceNew":"  public static NamedList<Object> explanationToNamedList(Explanation e) {\n    NamedList<Object> out = new SimpleOrderedMap<Object>();\n\n    out.add(\"match\", e.isMatch());\n    out.add(\"value\", e.getValue());\n    out.add(\"description\", e.getDescription());\n\n    Explanation[] details = e.getDetails();\n\n    // short circut out\n    if (null == details || 0 == details.length) return out;\n\n    List<NamedList<Object>> kids\n      = new ArrayList<NamedList<Object>>(details.length);\n    for (Explanation d : details) {\n      kids.add(explanationToNamedList(d));\n    }\n    out.add(\"details\", kids);\n\n    return out;\n  }\n\n","sourceOld":"  public static NamedList<Object> explanationToNamedList(Explanation e) {\n    NamedList<Object> out = new SimpleOrderedMap<Object>();\n\n    out.add(\"match\", e.isMatch());\n    out.add(\"value\", e.getValue());\n    out.add(\"description\", e.getDescription());\n\n    Explanation[] details = e.getDetails();\n\n    // short circut out\n    if (null == details || 0 == details.length) return out;\n\n    List<NamedList<Object>> kids\n      = new ArrayList<NamedList<Object>>(details.length);\n    for (Explanation d : details) {\n      kids.add(explanationToNamedList(d));\n    }\n    out.add(\"details\", kids);\n\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#explanationToNamedList(Explanation).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#explanationToNamedList(Explanation).mjava","sourceNew":"  public static NamedList<Object> explanationToNamedList(Explanation e) {\n    NamedList<Object> out = new SimpleOrderedMap<Object>();\n\n    out.add(\"match\", e.isMatch());\n    out.add(\"value\", e.getValue());\n    out.add(\"description\", e.getDescription());\n\n    Explanation[] details = e.getDetails();\n\n    // short circut out\n    if (null == details || 0 == details.length) return out;\n\n    List<NamedList<Object>> kids\n      = new ArrayList<NamedList<Object>>(details.length);\n    for (Explanation d : details) {\n      kids.add(explanationToNamedList(d));\n    }\n    out.add(\"details\", kids);\n\n    return out;\n  }\n\n","sourceOld":"  public static NamedList<Object> explanationToNamedList(Explanation e) {\n    NamedList<Object> out = new SimpleOrderedMap<Object>();\n\n    out.add(\"match\", e.isMatch());\n    out.add(\"value\", e.getValue());\n    out.add(\"description\", e.getDescription());\n\n    Explanation[] details = e.getDetails();\n\n    // short circut out\n    if (null == details || 0 == details.length) return out;\n\n    List<NamedList<Object>> kids\n      = new ArrayList<NamedList<Object>>(details.length);\n    for (Explanation d : details) {\n      kids.add(explanationToNamedList(d));\n    }\n    out.add(\"details\", kids);\n\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#explanationToNamedList(Explanation).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#explanationToNamedList(Explanation).mjava","sourceNew":"  public static NamedList<Object> explanationToNamedList(Explanation e) {\n    NamedList<Object> out = new SimpleOrderedMap<Object>();\n\n    out.add(\"match\", e.isMatch());\n    out.add(\"value\", e.getValue());\n    out.add(\"description\", e.getDescription());\n\n    Explanation[] details = e.getDetails();\n\n    // short circut out\n    if (null == details || 0 == details.length) return out;\n\n    List<NamedList<Object>> kids\n      = new ArrayList<NamedList<Object>>(details.length);\n    for (Explanation d : details) {\n      kids.add(explanationToNamedList(d));\n    }\n    out.add(\"details\", kids);\n\n    return out;\n  }\n\n","sourceOld":"  public static NamedList<Object> explanationToNamedList(Explanation e) {\n    NamedList<Object> out = new SimpleOrderedMap<Object>();\n\n    out.add(\"match\", e.isMatch());\n    out.add(\"value\", e.getValue());\n    out.add(\"description\", e.getDescription());\n\n    Explanation[] details = e.getDetails();\n\n    // short circut out\n    if (null == details || 0 == details.length) return out;\n\n    List<NamedList<Object>> kids\n      = new ArrayList<NamedList<Object>>(details.length);\n    for (Explanation d : details) {\n      kids.add(explanationToNamedList(d));\n    }\n    out.add(\"details\", kids);\n\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["5f0737567c7196b3ba1a359c2bdf103a3984a55e"],"c26f00b574427b55127e869b935845554afde1fa":["5f0737567c7196b3ba1a359c2bdf103a3984a55e","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["5f0737567c7196b3ba1a359c2bdf103a3984a55e"],"5f0737567c7196b3ba1a359c2bdf103a3984a55e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5f0737567c7196b3ba1a359c2bdf103a3984a55e"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"5f0737567c7196b3ba1a359c2bdf103a3984a55e":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}