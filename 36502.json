{"path":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","commits":[{"id":"6620df8541b174097b1133a4fc370adb2e570524","date":1319544675,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(final AtomicReaderContext context, final Bits acceptDocs) throws IOException {\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return context.reader.termDocsEnum(acceptDocs, fieldName, bytesRef);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final FixedBitSet bits = new FixedBitSet(context.reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = context.reader.termDocsEnum(acceptDocs, fieldName, bytesRef);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.set(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(final AtomicReaderContext context) throws IOException {\n    final Bits liveDocs = context.reader.getLiveDocs();\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return context.reader.termDocsEnum(liveDocs, fieldName, bytesRef);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final FixedBitSet bits = new FixedBitSet(context.reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = context.reader.termDocsEnum(liveDocs, fieldName, bytesRef);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.set(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"872cff1d3a554e0cd64014cd97f88d3002b0f491","date":1323024658,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(final AtomicReaderContext context, final Bits acceptDocs) throws IOException {\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return context.reader.termDocsEnum(acceptDocs, fieldName, bytesRef, false);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final FixedBitSet bits = new FixedBitSet(context.reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = context.reader.termDocsEnum(acceptDocs, fieldName, bytesRef, false);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.set(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(final AtomicReaderContext context, final Bits acceptDocs) throws IOException {\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return context.reader.termDocsEnum(acceptDocs, fieldName, bytesRef);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final FixedBitSet bits = new FixedBitSet(context.reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = context.reader.termDocsEnum(acceptDocs, fieldName, bytesRef);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.set(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b65b350ca9588f9fc76ce7d6804160d06c45ff42","date":1323026297,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(final AtomicReaderContext context, final Bits acceptDocs) throws IOException {\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return context.reader.termDocsEnum(acceptDocs, fieldName, bytesRef, false);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final FixedBitSet bits = new FixedBitSet(context.reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = context.reader.termDocsEnum(acceptDocs, fieldName, bytesRef, false);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.set(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(final AtomicReaderContext context, final Bits acceptDocs) throws IOException {\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return context.reader.termDocsEnum(acceptDocs, fieldName, bytesRef);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final FixedBitSet bits = new FixedBitSet(context.reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = context.reader.termDocsEnum(acceptDocs, fieldName, bytesRef);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.set(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d96de0b570b8114d342279209d469225abe06cf","date":1327855981,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(final AtomicReaderContext context, final Bits acceptDocs) throws IOException {\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return context.reader().termDocsEnum(acceptDocs, fieldName, bytesRef, false);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final FixedBitSet bits = new FixedBitSet(context.reader().maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = context.reader().termDocsEnum(acceptDocs, fieldName, bytesRef, false);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.set(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(final AtomicReaderContext context, final Bits acceptDocs) throws IOException {\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return context.reader.termDocsEnum(acceptDocs, fieldName, bytesRef, false);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final FixedBitSet bits = new FixedBitSet(context.reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = context.reader.termDocsEnum(acceptDocs, fieldName, bytesRef, false);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.set(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(final AtomicReaderContext context, final Bits acceptDocs) throws IOException {\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return context.reader().termDocsEnum(acceptDocs, fieldName, bytesRef, false);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final FixedBitSet bits = new FixedBitSet(context.reader().maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = context.reader().termDocsEnum(acceptDocs, fieldName, bytesRef, false);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.set(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(final AtomicReaderContext context, final Bits acceptDocs) throws IOException {\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return context.reader.termDocsEnum(acceptDocs, fieldName, bytesRef, false);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final FixedBitSet bits = new FixedBitSet(context.reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = context.reader.termDocsEnum(acceptDocs, fieldName, bytesRef, false);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.set(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fb7e38713d15939e085d376c6391e6e6262a81f","date":1329897272,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","sourceNew":null,"sourceOld":"  @Override\n  public DocIdSet getDocIdSet(final AtomicReaderContext context, final Bits acceptDocs) throws IOException {\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return context.reader().termDocsEnum(acceptDocs, fieldName, bytesRef, false);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final FixedBitSet bits = new FixedBitSet(context.reader().maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = context.reader().termDocsEnum(acceptDocs, fieldName, bytesRef, false);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.set(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e47768b261c28e7e6032060e8331475c81057953","date":1331681297,"type":4,"author":"Ryan McKinley","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(AtomicReaderContext,Bits).mjava","sourceNew":null,"sourceOld":"  @Override\n  public DocIdSet getDocIdSet(final AtomicReaderContext context, final Bits acceptDocs) throws IOException {\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return context.reader().termDocsEnum(acceptDocs, fieldName, bytesRef, false);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final FixedBitSet bits = new FixedBitSet(context.reader().maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = context.reader().termDocsEnum(acceptDocs, fieldName, bytesRef, false);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.set(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6620df8541b174097b1133a4fc370adb2e570524":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7d96de0b570b8114d342279209d469225abe06cf":["872cff1d3a554e0cd64014cd97f88d3002b0f491"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":["6620df8541b174097b1133a4fc370adb2e570524","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["6620df8541b174097b1133a4fc370adb2e570524"],"e47768b261c28e7e6032060e8331475c81057953":["5cab9a86bd67202d20b6adc463008c8e982b070a","2fb7e38713d15939e085d376c6391e6e6262a81f"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["872cff1d3a554e0cd64014cd97f88d3002b0f491","7d96de0b570b8114d342279209d469225abe06cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e47768b261c28e7e6032060e8331475c81057953"],"2fb7e38713d15939e085d376c6391e6e6262a81f":["5cab9a86bd67202d20b6adc463008c8e982b070a"]},"commit2Childs":{"6620df8541b174097b1133a4fc370adb2e570524":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"7d96de0b570b8114d342279209d469225abe06cf":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6620df8541b174097b1133a4fc370adb2e570524"],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["7d96de0b570b8114d342279209d469225abe06cf","b65b350ca9588f9fc76ce7d6804160d06c45ff42","5cab9a86bd67202d20b6adc463008c8e982b070a"],"e47768b261c28e7e6032060e8331475c81057953":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["e47768b261c28e7e6032060e8331475c81057953","2fb7e38713d15939e085d376c6391e6e6262a81f"],"2fb7e38713d15939e085d376c6391e6e6262a81f":["e47768b261c28e7e6032060e8331475c81057953"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}