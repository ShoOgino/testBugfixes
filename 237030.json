{"path":"lucene/misc/src/test/org/apache/lucene/index/sorter/TestEarlyTermination#testEarlyTermination().mjava","commits":[{"id":"4d1c249f01722fe2de6d60de2f0aade417fbb638","date":1365517193,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/sorter/TestEarlyTermination#testEarlyTermination().mjava","pathOld":"/dev/null","sourceNew":"  public void testEarlyTermination() throws IOException {\n    createRandomIndexes(5);\n    final int numHits = _TestUtil.nextInt(random(), 1, numDocs / 10);\n    final Sort sort = new Sort(new SortField(\"ndv1\", SortField.Type.LONG, false));\n    final boolean fillFields = random().nextBoolean();\n    final boolean trackDocScores = random().nextBoolean();\n    final boolean trackMaxScore = random().nextBoolean();\n    final boolean inOrder = random().nextBoolean();\n    final TopFieldCollector collector1 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n    final TopFieldCollector collector2 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n\n    final IndexSearcher searcher = newSearcher(reader);\n    final int iters = atLeast(5);\n    for (int i = 0; i < iters; ++i) {\n      final TermQuery query = new TermQuery(new Term(\"s\", RandomPicks.randomFrom(random(), terms)));\n      searcher.search(query, collector1);\n      searcher.search(query, new EarlyTerminatingSortingCollector(collector2, sorter, numHits));\n    }\n    assertTrue(collector1.getTotalHits() >= collector2.getTotalHits());\n    assertTopDocsEquals(collector1.topDocs().scoreDocs, collector2.topDocs().scoreDocs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b31300b5ffd92c482faabff5910228b4cdaa7dde","4637747f71df783fc2014ef1f1e0418466e3bed6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/sorter/TestEarlyTermination#testEarlyTermination().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/sorter/TestEarlyTermination#testEarlyTermination().mjava","sourceNew":"  public void testEarlyTermination() throws IOException {\n    createRandomIndexes(5);\n    final int numHits = TestUtil.nextInt(random(), 1, numDocs / 10);\n    final Sort sort = new Sort(new SortField(\"ndv1\", SortField.Type.LONG, false));\n    final boolean fillFields = random().nextBoolean();\n    final boolean trackDocScores = random().nextBoolean();\n    final boolean trackMaxScore = random().nextBoolean();\n    final boolean inOrder = random().nextBoolean();\n    final TopFieldCollector collector1 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n    final TopFieldCollector collector2 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n\n    final IndexSearcher searcher = newSearcher(reader);\n    final int iters = atLeast(5);\n    for (int i = 0; i < iters; ++i) {\n      final TermQuery query = new TermQuery(new Term(\"s\", RandomPicks.randomFrom(random(), terms)));\n      searcher.search(query, collector1);\n      searcher.search(query, new EarlyTerminatingSortingCollector(collector2, sorter, numHits));\n    }\n    assertTrue(collector1.getTotalHits() >= collector2.getTotalHits());\n    assertTopDocsEquals(collector1.topDocs().scoreDocs, collector2.topDocs().scoreDocs);\n  }\n\n","sourceOld":"  public void testEarlyTermination() throws IOException {\n    createRandomIndexes(5);\n    final int numHits = _TestUtil.nextInt(random(), 1, numDocs / 10);\n    final Sort sort = new Sort(new SortField(\"ndv1\", SortField.Type.LONG, false));\n    final boolean fillFields = random().nextBoolean();\n    final boolean trackDocScores = random().nextBoolean();\n    final boolean trackMaxScore = random().nextBoolean();\n    final boolean inOrder = random().nextBoolean();\n    final TopFieldCollector collector1 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n    final TopFieldCollector collector2 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n\n    final IndexSearcher searcher = newSearcher(reader);\n    final int iters = atLeast(5);\n    for (int i = 0; i < iters; ++i) {\n      final TermQuery query = new TermQuery(new Term(\"s\", RandomPicks.randomFrom(random(), terms)));\n      searcher.search(query, collector1);\n      searcher.search(query, new EarlyTerminatingSortingCollector(collector2, sorter, numHits));\n    }\n    assertTrue(collector1.getTotalHits() >= collector2.getTotalHits());\n    assertTopDocsEquals(collector1.topDocs().scoreDocs, collector2.topDocs().scoreDocs);\n  }\n\n","bugFix":null,"bugIntro":["b31300b5ffd92c482faabff5910228b4cdaa7dde"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b060a9c887ff2c6f4280953afc6fb6000934dae5","date":1394119540,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/sorter/TestEarlyTermination#testEarlyTermination().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/sorter/TestEarlyTermination#testEarlyTermination().mjava","sourceNew":"  public void testEarlyTermination() throws IOException {\n    createRandomIndexes(5);\n    final int numHits = TestUtil.nextInt(random(), 1, numDocs / 10);\n    final Sort sort = new Sort(new SortField(\"ndv1\", SortField.Type.LONG, false));\n    final boolean fillFields = random().nextBoolean();\n    final boolean trackDocScores = random().nextBoolean();\n    final boolean trackMaxScore = random().nextBoolean();\n    final boolean inOrder = random().nextBoolean();\n    final TopFieldCollector collector1 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n    final TopFieldCollector collector2 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n\n    final IndexSearcher searcher = newSearcher(reader);\n    final int iters = atLeast(5);\n    for (int i = 0; i < iters; ++i) {\n      final TermQuery query = new TermQuery(new Term(\"s\", RandomPicks.randomFrom(random(), terms)));\n      searcher.search(query, collector1);\n      searcher.search(query, new EarlyTerminatingSortingCollector(collector2, sort, numHits));\n    }\n    assertTrue(collector1.getTotalHits() >= collector2.getTotalHits());\n    assertTopDocsEquals(collector1.topDocs().scoreDocs, collector2.topDocs().scoreDocs);\n  }\n\n","sourceOld":"  public void testEarlyTermination() throws IOException {\n    createRandomIndexes(5);\n    final int numHits = TestUtil.nextInt(random(), 1, numDocs / 10);\n    final Sort sort = new Sort(new SortField(\"ndv1\", SortField.Type.LONG, false));\n    final boolean fillFields = random().nextBoolean();\n    final boolean trackDocScores = random().nextBoolean();\n    final boolean trackMaxScore = random().nextBoolean();\n    final boolean inOrder = random().nextBoolean();\n    final TopFieldCollector collector1 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n    final TopFieldCollector collector2 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n\n    final IndexSearcher searcher = newSearcher(reader);\n    final int iters = atLeast(5);\n    for (int i = 0; i < iters; ++i) {\n      final TermQuery query = new TermQuery(new Term(\"s\", RandomPicks.randomFrom(random(), terms)));\n      searcher.search(query, collector1);\n      searcher.search(query, new EarlyTerminatingSortingCollector(collector2, sorter, numHits));\n    }\n    assertTrue(collector1.getTotalHits() >= collector2.getTotalHits());\n    assertTopDocsEquals(collector1.topDocs().scoreDocs, collector2.topDocs().scoreDocs);\n  }\n\n","bugFix":null,"bugIntro":["b31300b5ffd92c482faabff5910228b4cdaa7dde"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4637747f71df783fc2014ef1f1e0418466e3bed6","date":1394196311,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/sorter/TestEarlyTermination#testEarlyTermination().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/sorter/TestEarlyTermination#testEarlyTermination().mjava","sourceNew":"  public void testEarlyTermination() throws IOException {\n    createRandomIndexes(5);\n    final int numHits = TestUtil.nextInt(random(), 1, numDocs / 10);\n    final Sort sort = new Sort(new SortField(\"ndv1\", SortField.Type.LONG, false));\n    final boolean fillFields = random().nextBoolean();\n    final boolean trackDocScores = random().nextBoolean();\n    final boolean trackMaxScore = random().nextBoolean();\n    final boolean inOrder = random().nextBoolean();\n    final TopFieldCollector collector1 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n    final TopFieldCollector collector2 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n\n    final IndexSearcher searcher = newSearcher(reader);\n    final int iters = atLeast(5);\n    for (int i = 0; i < iters; ++i) {\n      final TermQuery query = new TermQuery(new Term(\"s\", RandomPicks.randomFrom(random(), terms)));\n      searcher.search(query, collector1);\n      searcher.search(query, new EarlyTerminatingSortingCollector(collector2, sort, numHits));\n    }\n    assertTrue(collector1.getTotalHits() >= collector2.getTotalHits());\n    assertTopDocsEquals(collector1.topDocs().scoreDocs, collector2.topDocs().scoreDocs);\n  }\n\n","sourceOld":"  public void testEarlyTermination() throws IOException {\n    createRandomIndexes(5);\n    final int numHits = TestUtil.nextInt(random(), 1, numDocs / 10);\n    final Sort sort = new Sort(new SortField(\"ndv1\", SortField.Type.LONG, false));\n    final boolean fillFields = random().nextBoolean();\n    final boolean trackDocScores = random().nextBoolean();\n    final boolean trackMaxScore = random().nextBoolean();\n    final boolean inOrder = random().nextBoolean();\n    final TopFieldCollector collector1 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n    final TopFieldCollector collector2 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n\n    final IndexSearcher searcher = newSearcher(reader);\n    final int iters = atLeast(5);\n    for (int i = 0; i < iters; ++i) {\n      final TermQuery query = new TermQuery(new Term(\"s\", RandomPicks.randomFrom(random(), terms)));\n      searcher.search(query, collector1);\n      searcher.search(query, new EarlyTerminatingSortingCollector(collector2, sorter, numHits));\n    }\n    assertTrue(collector1.getTotalHits() >= collector2.getTotalHits());\n    assertTopDocsEquals(collector1.topDocs().scoreDocs, collector2.topDocs().scoreDocs);\n  }\n\n","bugFix":["4d1c249f01722fe2de6d60de2f0aade417fbb638"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"96ea64d994d340044e0d57aeb6a5871539d10ca5","date":1394225445,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/sorter/TestEarlyTermination#testEarlyTermination().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/sorter/TestEarlyTermination#testEarlyTermination().mjava","sourceNew":"  public void testEarlyTermination() throws IOException {\n    createRandomIndexes(5);\n    final int numHits = TestUtil.nextInt(random(), 1, numDocs / 10);\n    final Sort sort = new Sort(new SortField(\"ndv1\", SortField.Type.LONG, false));\n    final boolean fillFields = random().nextBoolean();\n    final boolean trackDocScores = random().nextBoolean();\n    final boolean trackMaxScore = random().nextBoolean();\n    final boolean inOrder = random().nextBoolean();\n    final TopFieldCollector collector1 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n    final TopFieldCollector collector2 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n\n    final IndexSearcher searcher = newSearcher(reader);\n    final int iters = atLeast(5);\n    for (int i = 0; i < iters; ++i) {\n      final TermQuery query = new TermQuery(new Term(\"s\", RandomPicks.randomFrom(random(), terms)));\n      searcher.search(query, collector1);\n      searcher.search(query, new EarlyTerminatingSortingCollector(collector2, sort, numHits));\n    }\n    assertTrue(collector1.getTotalHits() >= collector2.getTotalHits());\n    assertTopDocsEquals(collector1.topDocs().scoreDocs, collector2.topDocs().scoreDocs);\n  }\n\n","sourceOld":"  public void testEarlyTermination() throws IOException {\n    createRandomIndexes(5);\n    final int numHits = TestUtil.nextInt(random(), 1, numDocs / 10);\n    final Sort sort = new Sort(new SortField(\"ndv1\", SortField.Type.LONG, false));\n    final boolean fillFields = random().nextBoolean();\n    final boolean trackDocScores = random().nextBoolean();\n    final boolean trackMaxScore = random().nextBoolean();\n    final boolean inOrder = random().nextBoolean();\n    final TopFieldCollector collector1 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n    final TopFieldCollector collector2 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n\n    final IndexSearcher searcher = newSearcher(reader);\n    final int iters = atLeast(5);\n    for (int i = 0; i < iters; ++i) {\n      final TermQuery query = new TermQuery(new Term(\"s\", RandomPicks.randomFrom(random(), terms)));\n      searcher.search(query, collector1);\n      searcher.search(query, new EarlyTerminatingSortingCollector(collector2, sorter, numHits));\n    }\n    assertTrue(collector1.getTotalHits() >= collector2.getTotalHits());\n    assertTopDocsEquals(collector1.topDocs().scoreDocs, collector2.topDocs().scoreDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b31300b5ffd92c482faabff5910228b4cdaa7dde","date":1398105394,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/index/sorter/TestEarlyTermination#testEarlyTermination().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/sorter/TestEarlyTermination#testEarlyTermination().mjava","sourceNew":"  public void testEarlyTermination() throws IOException {\n    final int iters = atLeast(8);\n    for (int i = 0; i < iters; ++i) {\n      createRandomIndex();\n      for (int j = 0; j < iters; ++j) {\n        final IndexSearcher searcher = newSearcher(reader);\n        final int numHits = TestUtil.nextInt(random(), 1, numDocs);\n        final Sort sort = new Sort(new SortField(\"ndv1\", SortField.Type.LONG, false));\n        final boolean fillFields = random().nextBoolean();\n        final boolean trackDocScores = random().nextBoolean();\n        final boolean trackMaxScore = random().nextBoolean();\n        final boolean inOrder = random().nextBoolean();\n        final TopFieldCollector collector1 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n        final TopFieldCollector collector2 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n\n        final Query query;\n        if (random().nextBoolean()) {\n          query = new TermQuery(new Term(\"s\", RandomPicks.randomFrom(random(), terms)));\n        } else {\n          query = new MatchAllDocsQuery();\n        }\n        searcher.search(query, collector1);\n        searcher.search(query, new EarlyTerminatingSortingCollector(collector2, sort, numHits));\n        assertTrue(collector1.getTotalHits() >= collector2.getTotalHits());\n        assertTopDocsEquals(collector1.topDocs().scoreDocs, collector2.topDocs().scoreDocs);\n      }\n      closeIndex();\n    }\n  }\n\n","sourceOld":"  public void testEarlyTermination() throws IOException {\n    createRandomIndexes(5);\n    final int numHits = TestUtil.nextInt(random(), 1, numDocs / 10);\n    final Sort sort = new Sort(new SortField(\"ndv1\", SortField.Type.LONG, false));\n    final boolean fillFields = random().nextBoolean();\n    final boolean trackDocScores = random().nextBoolean();\n    final boolean trackMaxScore = random().nextBoolean();\n    final boolean inOrder = random().nextBoolean();\n    final TopFieldCollector collector1 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n    final TopFieldCollector collector2 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n\n    final IndexSearcher searcher = newSearcher(reader);\n    final int iters = atLeast(5);\n    for (int i = 0; i < iters; ++i) {\n      final TermQuery query = new TermQuery(new Term(\"s\", RandomPicks.randomFrom(random(), terms)));\n      searcher.search(query, collector1);\n      searcher.search(query, new EarlyTerminatingSortingCollector(collector2, sort, numHits));\n    }\n    assertTrue(collector1.getTotalHits() >= collector2.getTotalHits());\n    assertTopDocsEquals(collector1.topDocs().scoreDocs, collector2.topDocs().scoreDocs);\n  }\n\n","bugFix":["4d1c249f01722fe2de6d60de2f0aade417fbb638","b060a9c887ff2c6f4280953afc6fb6000934dae5","6613659748fe4411a7dcf85266e55db1f95f7315"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e","date":1419346542,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/search/TestEarlyTerminatingSortingCollector#testEarlyTermination().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/index/sorter/TestEarlyTermination#testEarlyTermination().mjava","sourceNew":"  public void testEarlyTermination() throws IOException {\n    final int iters = atLeast(8);\n    for (int i = 0; i < iters; ++i) {\n      createRandomIndex();\n      for (int j = 0; j < iters; ++j) {\n        final IndexSearcher searcher = newSearcher(reader);\n        final int numHits = TestUtil.nextInt(random(), 1, numDocs);\n        final Sort sort = new Sort(new SortField(\"ndv1\", SortField.Type.LONG, false));\n        final boolean fillFields = random().nextBoolean();\n        final boolean trackDocScores = random().nextBoolean();\n        final boolean trackMaxScore = random().nextBoolean();\n        final boolean inOrder = random().nextBoolean();\n        final TopFieldCollector collector1 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n        final TopFieldCollector collector2 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n\n        final Query query;\n        if (random().nextBoolean()) {\n          query = new TermQuery(new Term(\"s\", RandomPicks.randomFrom(random(), terms)));\n        } else {\n          query = new MatchAllDocsQuery();\n        }\n        searcher.search(query, collector1);\n        searcher.search(query, new EarlyTerminatingSortingCollector(collector2, sort, numHits));\n        assertTrue(collector1.getTotalHits() >= collector2.getTotalHits());\n        assertTopDocsEquals(collector1.topDocs().scoreDocs, collector2.topDocs().scoreDocs);\n      }\n      closeIndex();\n    }\n  }\n\n","sourceOld":"  public void testEarlyTermination() throws IOException {\n    final int iters = atLeast(8);\n    for (int i = 0; i < iters; ++i) {\n      createRandomIndex();\n      for (int j = 0; j < iters; ++j) {\n        final IndexSearcher searcher = newSearcher(reader);\n        final int numHits = TestUtil.nextInt(random(), 1, numDocs);\n        final Sort sort = new Sort(new SortField(\"ndv1\", SortField.Type.LONG, false));\n        final boolean fillFields = random().nextBoolean();\n        final boolean trackDocScores = random().nextBoolean();\n        final boolean trackMaxScore = random().nextBoolean();\n        final boolean inOrder = random().nextBoolean();\n        final TopFieldCollector collector1 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n        final TopFieldCollector collector2 = TopFieldCollector.create(sort, numHits, fillFields, trackDocScores, trackMaxScore, inOrder);\n\n        final Query query;\n        if (random().nextBoolean()) {\n          query = new TermQuery(new Term(\"s\", RandomPicks.randomFrom(random(), terms)));\n        } else {\n          query = new MatchAllDocsQuery();\n        }\n        searcher.search(query, collector1);\n        searcher.search(query, new EarlyTerminatingSortingCollector(collector2, sort, numHits));\n        assertTrue(collector1.getTotalHits() >= collector2.getTotalHits());\n        assertTopDocsEquals(collector1.topDocs().scoreDocs, collector2.topDocs().scoreDocs);\n      }\n      closeIndex();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"96ea64d994d340044e0d57aeb6a5871539d10ca5":["6613659748fe4411a7dcf85266e55db1f95f7315","4637747f71df783fc2014ef1f1e0418466e3bed6"],"b060a9c887ff2c6f4280953afc6fb6000934dae5":["6613659748fe4411a7dcf85266e55db1f95f7315"],"6613659748fe4411a7dcf85266e55db1f95f7315":["4d1c249f01722fe2de6d60de2f0aade417fbb638"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d1c249f01722fe2de6d60de2f0aade417fbb638":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e":["b31300b5ffd92c482faabff5910228b4cdaa7dde"],"b31300b5ffd92c482faabff5910228b4cdaa7dde":["4637747f71df783fc2014ef1f1e0418466e3bed6"],"4637747f71df783fc2014ef1f1e0418466e3bed6":["6613659748fe4411a7dcf85266e55db1f95f7315","b060a9c887ff2c6f4280953afc6fb6000934dae5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e"]},"commit2Childs":{"96ea64d994d340044e0d57aeb6a5871539d10ca5":[],"b060a9c887ff2c6f4280953afc6fb6000934dae5":["4637747f71df783fc2014ef1f1e0418466e3bed6"],"6613659748fe4411a7dcf85266e55db1f95f7315":["96ea64d994d340044e0d57aeb6a5871539d10ca5","b060a9c887ff2c6f4280953afc6fb6000934dae5","4637747f71df783fc2014ef1f1e0418466e3bed6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d1c249f01722fe2de6d60de2f0aade417fbb638"],"4d1c249f01722fe2de6d60de2f0aade417fbb638":["6613659748fe4411a7dcf85266e55db1f95f7315"],"82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b31300b5ffd92c482faabff5910228b4cdaa7dde":["82dc51e5dcd7a80b71e40ebe8959b1c43b63f95e"],"4637747f71df783fc2014ef1f1e0418466e3bed6":["96ea64d994d340044e0d57aeb6a5871539d10ca5","b31300b5ffd92c482faabff5910228b4cdaa7dde"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["96ea64d994d340044e0d57aeb6a5871539d10ca5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}