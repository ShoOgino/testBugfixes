{"path":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#verifyDocCounts().mjava","commits":[{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#verifyDocCounts().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndLiveDocs#verifyDocCounts().mjava","sourceNew":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.info.getDocCount();docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.getDocCount();\n    }\n\n    assert info.info.getDocCount() - info.getDelCount() - pendingDeleteCount == count: \"info.docCount=\" + info.info.getDocCount() + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;\n    return true;\n  }\n\n","sourceOld":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.info.getDocCount();docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.getDocCount();\n    }\n\n    assert info.info.getDocCount() - info.getDelCount() - pendingDeleteCount == count: \"info.docCount=\" + info.info.getDocCount() + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0267c69e2456a3477a1ad785723f2135da3117e","date":1425317087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#verifyDocCounts().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#verifyDocCounts().mjava","sourceNew":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.info.maxDoc();docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.maxDoc();\n    }\n\n    assert info.info.maxDoc() - info.getDelCount() - pendingDeleteCount == count: \"info.maxDoc=\" + info.info.maxDoc() + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;\n    return true;\n  }\n\n","sourceOld":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.info.getDocCount();docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.getDocCount();\n    }\n\n    assert info.info.getDocCount() - info.getDelCount() - pendingDeleteCount == count: \"info.docCount=\" + info.info.getDocCount() + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b06445ae1731e049327712db0454e5643ca9b7fe","date":1425329139,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#verifyDocCounts().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#verifyDocCounts().mjava","sourceNew":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.info.maxDoc();docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.maxDoc();\n    }\n\n    assert info.info.maxDoc() - info.getDelCount() - pendingDeleteCount == count: \"info.maxDoc=\" + info.info.maxDoc() + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;\n    return true;\n  }\n\n","sourceOld":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.info.getDocCount();docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.getDocCount();\n    }\n\n    assert info.info.getDocCount() - info.getDelCount() - pendingDeleteCount == count: \"info.docCount=\" + info.info.getDocCount() + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#verifyDocCounts().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#verifyDocCounts().mjava","sourceNew":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.info.maxDoc();docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.maxDoc();\n    }\n\n    assert info.info.maxDoc() - info.getDelCount() - pendingDeleteCount == count: \"info.maxDoc=\" + info.info.maxDoc() + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;\n    return true;\n  }\n\n","sourceOld":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.info.getDocCount();docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.getDocCount();\n    }\n\n    assert info.info.getDocCount() - info.getDelCount() - pendingDeleteCount == count: \"info.docCount=\" + info.info.getDocCount() + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d60c1bb96a28a26d197c36299f7b6c9c5da617a1","date":1522484702,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#verifyDocCounts().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#verifyDocCounts().mjava","sourceNew":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    Bits liveDocs = pendingDeletes.getLiveDocs();\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.info.maxDoc();docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.maxDoc();\n    }\n\n    assert info.info.maxDoc() - info.getDelCount() - pendingDeletes.numPendingDeletes() == count: \"info.maxDoc=\" + info.info.maxDoc() + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeletes=\" + pendingDeletes.numPendingDeletes() + \" count=\" + count;\n    return true;\n  }\n\n","sourceOld":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.info.maxDoc();docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.maxDoc();\n    }\n\n    assert info.info.maxDoc() - info.getDelCount() - pendingDeleteCount == count: \"info.maxDoc=\" + info.info.maxDoc() + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa5e39259dfd4a68287c824d3b7e1bc9097dc895","date":1522505041,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#verifyDocCounts().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#verifyDocCounts().mjava","sourceNew":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    Bits liveDocs = pendingDeletes.getLiveDocs();\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.info.maxDoc();docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.maxDoc();\n    }\n\n    assert info.info.maxDoc() - info.getDelCount() - pendingDeletes.numPendingDeletes() == count: \"info.maxDoc=\" + info.info.maxDoc() + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeletes=\" + pendingDeletes.numPendingDeletes() + \" count=\" + count;\n    return true;\n  }\n\n","sourceOld":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.info.maxDoc();docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.maxDoc();\n    }\n\n    assert info.info.maxDoc() - info.getDelCount() - pendingDeleteCount == count: \"info.maxDoc=\" + info.info.maxDoc() + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeleteCount=\" + pendingDeleteCount + \" count=\" + count;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aef2a94da918b657d107b616a643e1759db43b6a","date":1527706131,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates#verifyDocCounts().mjava","sourceNew":null,"sourceOld":"  // Call only from assert!\n  public synchronized boolean verifyDocCounts() {\n    int count;\n    Bits liveDocs = pendingDeletes.getLiveDocs();\n    if (liveDocs != null) {\n      count = 0;\n      for(int docID=0;docID<info.info.maxDoc();docID++) {\n        if (liveDocs.get(docID)) {\n          count++;\n        }\n      }\n    } else {\n      count = info.info.maxDoc();\n    }\n\n    assert info.info.maxDoc() - info.getDelCount() - pendingDeletes.numPendingDeletes() == count: \"info.maxDoc=\" + info.info.maxDoc() + \" info.getDelCount()=\" + info.getDelCount() + \" pendingDeletes=\" + pendingDeletes.numPendingDeletes() + \" count=\" + count;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","b0267c69e2456a3477a1ad785723f2135da3117e"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b06445ae1731e049327712db0454e5643ca9b7fe":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","b0267c69e2456a3477a1ad785723f2135da3117e"],"b0267c69e2456a3477a1ad785723f2135da3117e":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"aa5e39259dfd4a68287c824d3b7e1bc9097dc895":["b0267c69e2456a3477a1ad785723f2135da3117e","d60c1bb96a28a26d197c36299f7b6c9c5da617a1"],"d60c1bb96a28a26d197c36299f7b6c9c5da617a1":["b0267c69e2456a3477a1ad785723f2135da3117e"],"aef2a94da918b657d107b616a643e1759db43b6a":["aa5e39259dfd4a68287c824d3b7e1bc9097dc895"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aef2a94da918b657d107b616a643e1759db43b6a"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","b0267c69e2456a3477a1ad785723f2135da3117e"],"b06445ae1731e049327712db0454e5643ca9b7fe":[],"b0267c69e2456a3477a1ad785723f2135da3117e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","aa5e39259dfd4a68287c824d3b7e1bc9097dc895","d60c1bb96a28a26d197c36299f7b6c9c5da617a1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"aa5e39259dfd4a68287c824d3b7e1bc9097dc895":["aef2a94da918b657d107b616a643e1759db43b6a"],"d60c1bb96a28a26d197c36299f7b6c9c5da617a1":["aa5e39259dfd4a68287c824d3b7e1bc9097dc895"],"aef2a94da918b657d107b616a643e1759db43b6a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}