{"path":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene45/Lucene45DocValuesConsumer#addSortedSetField(FieldInfo,Iterable[BytesRef],Iterable[Number],Iterable[Number]).mjava","commits":[{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene45/Lucene45DocValuesConsumer#addSortedSetField(FieldInfo,Iterable[BytesRef],Iterable[Number],Iterable[Number]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene45/Lucene45DocValuesConsumer#addSortedSetField(FieldInfo,Iterable[BytesRef],Iterable[Number],Iterable[Number]).mjava","sourceNew":"  @Override\n  public void addSortedSetField(FieldInfo field, Iterable<BytesRef> values, final Iterable<Number> docToOrdCount, final Iterable<Number> ords) throws IOException {\n    checkCanWrite(field);\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene45DocValuesFormat.SORTED_SET);\n\n    if (isSingleValued(docToOrdCount)) {\n      meta.writeVInt(SORTED_SET_SINGLE_VALUED_SORTED);\n      // The field is single-valued, we can encode it as SORTED\n      addSortedField(field, values, singletonView(docToOrdCount, ords, -1L));\n      return;\n    }\n\n    meta.writeVInt(SORTED_SET_WITH_ADDRESSES);\n\n    // write the ord -> byte[] as a binary field\n    addTermsDict(field, values);\n\n    // write the stream of ords as a numeric field\n    // NOTE: we could return an iterator that delta-encodes these within a doc\n    addNumericField(field, ords, false);\n\n    // write the doc -> ord count as a absolute index to the stream\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene45DocValuesFormat.NUMERIC);\n    meta.writeVInt(DELTA_COMPRESSED);\n    meta.writeLong(-1L);\n    meta.writeVInt(PackedInts.VERSION_CURRENT);\n    meta.writeLong(data.getFilePointer());\n    meta.writeVLong(maxDoc);\n    meta.writeVInt(BLOCK_SIZE);\n\n    final MonotonicBlockPackedWriter writer = new MonotonicBlockPackedWriter(data, BLOCK_SIZE);\n    long addr = 0;\n    for (Number v : docToOrdCount) {\n      addr += v.longValue();\n      writer.add(addr);\n    }\n    writer.finish();\n  }\n\n","sourceOld":"  @Override\n  public void addSortedSetField(FieldInfo field, Iterable<BytesRef> values, final Iterable<Number> docToOrdCount, final Iterable<Number> ords) throws IOException {\n    checkCanWrite(field);\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene45DocValuesFormat.SORTED_SET);\n\n    if (isSingleValued(docToOrdCount)) {\n      meta.writeVInt(SORTED_SET_SINGLE_VALUED_SORTED);\n      // The field is single-valued, we can encode it as SORTED\n      addSortedField(field, values, singletonView(docToOrdCount, ords, -1L));\n      return;\n    }\n\n    meta.writeVInt(SORTED_SET_WITH_ADDRESSES);\n\n    // write the ord -> byte[] as a binary field\n    addTermsDict(field, values);\n\n    // write the stream of ords as a numeric field\n    // NOTE: we could return an iterator that delta-encodes these within a doc\n    addNumericField(field, ords, false);\n\n    // write the doc -> ord count as a absolute index to the stream\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene45DocValuesFormat.NUMERIC);\n    meta.writeVInt(DELTA_COMPRESSED);\n    meta.writeLong(-1L);\n    meta.writeVInt(PackedInts.VERSION_CURRENT);\n    meta.writeLong(data.getFilePointer());\n    meta.writeVLong(maxDoc);\n    meta.writeVInt(BLOCK_SIZE);\n\n    final MonotonicBlockPackedWriter writer = new MonotonicBlockPackedWriter(data, BLOCK_SIZE);\n    long addr = 0;\n    for (Number v : docToOrdCount) {\n      addr += v.longValue();\n      writer.add(addr);\n    }\n    writer.finish();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene45/Lucene45DocValuesConsumer#addSortedSetField(FieldInfo,Iterable[BytesRef],Iterable[Number],Iterable[Number]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene45/Lucene45DocValuesConsumer#addSortedSetField(FieldInfo,Iterable[BytesRef],Iterable[Number],Iterable[Number]).mjava","sourceNew":"  @Override\n  public void addSortedSetField(FieldInfo field, Iterable<BytesRef> values, final Iterable<Number> docToOrdCount, final Iterable<Number> ords) throws IOException {\n    checkCanWrite(field);\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene45DocValuesFormat.SORTED_SET);\n\n    if (isSingleValued(docToOrdCount)) {\n      meta.writeVInt(SORTED_SET_SINGLE_VALUED_SORTED);\n      // The field is single-valued, we can encode it as SORTED\n      addSortedField(field, values, singletonView(docToOrdCount, ords, -1L));\n      return;\n    }\n\n    meta.writeVInt(SORTED_SET_WITH_ADDRESSES);\n\n    // write the ord -> byte[] as a binary field\n    addTermsDict(field, values);\n\n    // write the stream of ords as a numeric field\n    // NOTE: we could return an iterator that delta-encodes these within a doc\n    addNumericField(field, ords, false);\n\n    // write the doc -> ord count as a absolute index to the stream\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene45DocValuesFormat.NUMERIC);\n    meta.writeVInt(DELTA_COMPRESSED);\n    meta.writeLong(-1L);\n    meta.writeVInt(PackedInts.VERSION_CURRENT);\n    meta.writeLong(data.getFilePointer());\n    meta.writeVLong(maxDoc);\n    meta.writeVInt(BLOCK_SIZE);\n\n    final MonotonicBlockPackedWriter writer = new MonotonicBlockPackedWriter(data, BLOCK_SIZE);\n    long addr = 0;\n    for (Number v : docToOrdCount) {\n      addr += v.longValue();\n      writer.add(addr);\n    }\n    writer.finish();\n  }\n\n","sourceOld":"  @Override\n  public void addSortedSetField(FieldInfo field, Iterable<BytesRef> values, final Iterable<Number> docToOrdCount, final Iterable<Number> ords) throws IOException {\n    checkCanWrite(field);\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene45DocValuesFormat.SORTED_SET);\n\n    if (isSingleValued(docToOrdCount)) {\n      meta.writeVInt(SORTED_SET_SINGLE_VALUED_SORTED);\n      // The field is single-valued, we can encode it as SORTED\n      addSortedField(field, values, singletonView(docToOrdCount, ords, -1L));\n      return;\n    }\n\n    meta.writeVInt(SORTED_SET_WITH_ADDRESSES);\n\n    // write the ord -> byte[] as a binary field\n    addTermsDict(field, values);\n\n    // write the stream of ords as a numeric field\n    // NOTE: we could return an iterator that delta-encodes these within a doc\n    addNumericField(field, ords, false);\n\n    // write the doc -> ord count as a absolute index to the stream\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene45DocValuesFormat.NUMERIC);\n    meta.writeVInt(DELTA_COMPRESSED);\n    meta.writeLong(-1L);\n    meta.writeVInt(PackedInts.VERSION_CURRENT);\n    meta.writeLong(data.getFilePointer());\n    meta.writeVLong(maxDoc);\n    meta.writeVInt(BLOCK_SIZE);\n\n    final MonotonicBlockPackedWriter writer = new MonotonicBlockPackedWriter(data, BLOCK_SIZE);\n    long addr = 0;\n    for (Number v : docToOrdCount) {\n      addr += v.longValue();\n      writer.add(addr);\n    }\n    writer.finish();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71387d8cb6923eb831b17a8b734608ba2e21c653","date":1414126093,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene45/Lucene45DocValuesConsumer#addSortedSetField(FieldInfo,Iterable[BytesRef],Iterable[Number],Iterable[Number]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void addSortedSetField(FieldInfo field, Iterable<BytesRef> values, final Iterable<Number> docToOrdCount, final Iterable<Number> ords) throws IOException {\n    checkCanWrite(field);\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene45DocValuesFormat.SORTED_SET);\n\n    if (isSingleValued(docToOrdCount)) {\n      meta.writeVInt(SORTED_SET_SINGLE_VALUED_SORTED);\n      // The field is single-valued, we can encode it as SORTED\n      addSortedField(field, values, singletonView(docToOrdCount, ords, -1L));\n      return;\n    }\n\n    meta.writeVInt(SORTED_SET_WITH_ADDRESSES);\n\n    // write the ord -> byte[] as a binary field\n    addTermsDict(field, values);\n\n    // write the stream of ords as a numeric field\n    // NOTE: we could return an iterator that delta-encodes these within a doc\n    addNumericField(field, ords, false);\n\n    // write the doc -> ord count as a absolute index to the stream\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene45DocValuesFormat.NUMERIC);\n    meta.writeVInt(DELTA_COMPRESSED);\n    meta.writeLong(-1L);\n    meta.writeVInt(PackedInts.VERSION_CURRENT);\n    meta.writeLong(data.getFilePointer());\n    meta.writeVLong(maxDoc);\n    meta.writeVInt(BLOCK_SIZE);\n\n    final MonotonicBlockPackedWriter writer = new MonotonicBlockPackedWriter(data, BLOCK_SIZE);\n    long addr = 0;\n    for (Number v : docToOrdCount) {\n      addr += v.longValue();\n      writer.add(addr);\n    }\n    writer.finish();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}