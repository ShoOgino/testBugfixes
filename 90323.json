{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#FacetsCollector(FacetSearchParams,IndexReader,TaxonomyReader).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#FacetsCollector(FacetSearchParams,IndexReader,TaxonomyReader).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#FacetsCollector(FacetSearchParams,IndexReader,TaxonomyReader).mjava","sourceNew":"  /**\n   * Create a collector for accumulating facets while collecting documents\n   * during search.\n   * \n   * @param facetSearchParams\n   *          faceted search parameters defining which facets are required and\n   *          how.\n   * @param indexReader\n   *          searched index.\n   * @param taxonomyReader\n   *          taxonomy containing the facets.\n   */\n  public FacetsCollector(FacetSearchParams facetSearchParams,\n                          IndexReader indexReader, TaxonomyReader taxonomyReader) {\n    facetsAccumulator = initFacetsAccumulator(facetSearchParams, indexReader, taxonomyReader);\n    scoreDocIdCollector = initScoredDocCollector(facetSearchParams, indexReader, taxonomyReader);\n    resultsGuard = new Object();\n  }\n\n","sourceOld":"  /**\n   * Create a collector for accumulating facets while collecting documents\n   * during search.\n   * \n   * @param facetSearchParams\n   *          faceted search parameters defining which facets are required and\n   *          how.\n   * @param indexReader\n   *          searched index.\n   * @param taxonomyReader\n   *          taxonomy containing the facets.\n   */\n  public FacetsCollector(FacetSearchParams facetSearchParams,\n                          IndexReader indexReader, TaxonomyReader taxonomyReader) {\n    facetsAccumulator = initFacetsAccumulator(facetSearchParams, indexReader, taxonomyReader);\n    scoreDocIdCollector = initScoredDocCollector(facetSearchParams, indexReader, taxonomyReader);\n    resultsGuard = new Object();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d","date":1358784296,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/StandardFacetsCollector#StandardFacetsCollector(FacetSearchParams,IndexReader,TaxonomyReader).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#FacetsCollector(FacetSearchParams,IndexReader,TaxonomyReader).mjava","sourceNew":"  /**\n   * Create a collector for accumulating facets while collecting documents\n   * during search.\n   * \n   * @param facetSearchParams\n   *          faceted search parameters defining which facets are required and\n   *          how.\n   * @param indexReader\n   *          searched index.\n   * @param taxonomyReader\n   *          taxonomy containing the facets.\n   */\n  public StandardFacetsCollector(FacetSearchParams facetSearchParams, IndexReader indexReader, TaxonomyReader taxonomyReader) {\n    facetsAccumulator = initFacetsAccumulator(facetSearchParams, indexReader, taxonomyReader);\n    scoreDocIdCollector = initScoredDocCollector(facetSearchParams, indexReader, taxonomyReader);\n    resultsGuard = new Object();\n  }\n\n","sourceOld":"  /**\n   * Create a collector for accumulating facets while collecting documents\n   * during search.\n   * \n   * @param facetSearchParams\n   *          faceted search parameters defining which facets are required and\n   *          how.\n   * @param indexReader\n   *          searched index.\n   * @param taxonomyReader\n   *          taxonomy containing the facets.\n   */\n  public FacetsCollector(FacetSearchParams facetSearchParams,\n                          IndexReader indexReader, TaxonomyReader taxonomyReader) {\n    facetsAccumulator = initFacetsAccumulator(facetSearchParams, indexReader, taxonomyReader);\n    scoreDocIdCollector = initScoredDocCollector(facetSearchParams, indexReader, taxonomyReader);\n    resultsGuard = new Object();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/StandardFacetsCollector#StandardFacetsCollector(FacetSearchParams,IndexReader,TaxonomyReader).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FacetsCollector#FacetsCollector(FacetSearchParams,IndexReader,TaxonomyReader).mjava","sourceNew":"  /**\n   * Create a collector for accumulating facets while collecting documents\n   * during search.\n   * \n   * @param facetSearchParams\n   *          faceted search parameters defining which facets are required and\n   *          how.\n   * @param indexReader\n   *          searched index.\n   * @param taxonomyReader\n   *          taxonomy containing the facets.\n   */\n  public StandardFacetsCollector(FacetSearchParams facetSearchParams, IndexReader indexReader, TaxonomyReader taxonomyReader) {\n    facetsAccumulator = initFacetsAccumulator(facetSearchParams, indexReader, taxonomyReader);\n    scoreDocIdCollector = initScoredDocCollector(facetSearchParams, indexReader, taxonomyReader);\n    resultsGuard = new Object();\n  }\n\n","sourceOld":"  /**\n   * Create a collector for accumulating facets while collecting documents\n   * during search.\n   * \n   * @param facetSearchParams\n   *          faceted search parameters defining which facets are required and\n   *          how.\n   * @param indexReader\n   *          searched index.\n   * @param taxonomyReader\n   *          taxonomy containing the facets.\n   */\n  public FacetsCollector(FacetSearchParams facetSearchParams,\n                          IndexReader indexReader, TaxonomyReader taxonomyReader) {\n    facetsAccumulator = initFacetsAccumulator(facetSearchParams, indexReader, taxonomyReader);\n    scoreDocIdCollector = initScoredDocCollector(facetSearchParams, indexReader, taxonomyReader);\n    resultsGuard = new Object();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"07155cdd910937cdf6877e48884d5782845c8b8b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d"]},"commit2Childs":{"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d":["07155cdd910937cdf6877e48884d5782845c8b8b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d","07155cdd910937cdf6877e48884d5782845c8b8b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"07155cdd910937cdf6877e48884d5782845c8b8b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["07155cdd910937cdf6877e48884d5782845c8b8b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}