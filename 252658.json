{"path":"lucene/src/java/org/apache/lucene/search/CachingCollector#CachingCollector(Collector,double,boolean).mjava","commits":[{"id":"6703e55954db440ab8a2bc2a615c4fa9f66b602b","date":1305691248,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingCollector#CachingCollector(Collector,double,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingCollector#CachingCollector(Collector,boolean,double).mjava","sourceNew":"  // Prevent extension from non-internal classes\n  private CachingCollector(Collector other, double maxRAMMB, boolean cacheScores) {\n    this.other = other;\n    \n    cachedDocs = new ArrayList<int[]>();\n    curDocs = new int[INITIAL_ARRAY_SIZE];\n    cachedDocs.add(curDocs);\n\n    int bytesPerDoc = RamUsageEstimator.NUM_BYTES_INT;\n    if (cacheScores) {\n      bytesPerDoc += RamUsageEstimator.NUM_BYTES_FLOAT;\n    }\n    maxDocsToCache = (int) ((maxRAMMB * 1024 * 1024) / bytesPerDoc);\n  }\n\n","sourceOld":"  public CachingCollector(Collector other, boolean cacheScores, double maxRAMMB) {\n    this.other = other;\n    this.cacheScores = cacheScores;\n    if (cacheScores) {\n      cachedScorer = new CachedScorer();\n      cachedScores = new ArrayList<float[]>();\n      curScores = new float[128];\n      cachedScores.add(curScores);\n    } else {\n      cachedScorer = null;\n      cachedScores = null;\n    }\n    cachedDocs = new ArrayList<int[]>();\n    curDocs = new int[INITIAL_ARRAY_SIZE];\n    cachedDocs.add(curDocs);\n\n    int bytesPerDoc = RamUsageEstimator.NUM_BYTES_INT;\n    if (cacheScores) {\n      bytesPerDoc += RamUsageEstimator.NUM_BYTES_FLOAT;\n    }\n    maxDocsToCache = (int) ((maxRAMMB * 1024 * 1024) / bytesPerDoc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingCollector#CachingCollector(Collector,double,boolean).mjava","pathOld":"/dev/null","sourceNew":"  // Prevent extension from non-internal classes\n  private CachingCollector(Collector other, double maxRAMMB, boolean cacheScores) {\n    this.other = other;\n    \n    cachedDocs = new ArrayList<int[]>();\n    curDocs = new int[INITIAL_ARRAY_SIZE];\n    cachedDocs.add(curDocs);\n\n    int bytesPerDoc = RamUsageEstimator.NUM_BYTES_INT;\n    if (cacheScores) {\n      bytesPerDoc += RamUsageEstimator.NUM_BYTES_FLOAT;\n    }\n    maxDocsToCache = (int) ((maxRAMMB * 1024 * 1024) / bytesPerDoc);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingCollector#CachingCollector(Collector,double,boolean).mjava","pathOld":"/dev/null","sourceNew":"  // Prevent extension from non-internal classes\n  private CachingCollector(Collector other, double maxRAMMB, boolean cacheScores) {\n    this.other = other;\n    \n    cachedDocs = new ArrayList<int[]>();\n    curDocs = new int[INITIAL_ARRAY_SIZE];\n    cachedDocs.add(curDocs);\n\n    int bytesPerDoc = RamUsageEstimator.NUM_BYTES_INT;\n    if (cacheScores) {\n      bytesPerDoc += RamUsageEstimator.NUM_BYTES_FLOAT;\n    }\n    maxDocsToCache = (int) ((maxRAMMB * 1024 * 1024) / bytesPerDoc);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingCollector#CachingCollector(Collector,double,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingCollector#CachingCollector(Collector,double,boolean).mjava","sourceNew":"  // Prevent extension from non-internal classes\n  private CachingCollector(Collector other, double maxRAMMB, boolean cacheScores) {\n    this.other = other;\n    \n    cachedDocs = new ArrayList<int[]>();\n    curDocs = new int[INITIAL_ARRAY_SIZE];\n    cachedDocs.add(curDocs);\n\n    int bytesPerDoc = RamUsageEstimator.NUM_BYTES_INT;\n    if (cacheScores) {\n      bytesPerDoc += RamUsageEstimator.NUM_BYTES_FLOAT;\n    }\n    maxDocsToCache = (int) ((maxRAMMB * 1024 * 1024) / bytesPerDoc);\n  }\n\n","sourceOld":"  // Prevent extension from non-internal classes\n  private CachingCollector(Collector other, double maxRAMMB, boolean cacheScores) {\n    this.other = other;\n    \n    cachedDocs = new ArrayList<int[]>();\n    curDocs = new int[INITIAL_ARRAY_SIZE];\n    cachedDocs.add(curDocs);\n\n    int bytesPerDoc = RamUsageEstimator.NUM_BYTES_INT;\n    if (cacheScores) {\n      bytesPerDoc += RamUsageEstimator.NUM_BYTES_FLOAT;\n    }\n    maxDocsToCache = (int) ((maxRAMMB * 1024 * 1024) / bytesPerDoc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6703e55954db440ab8a2bc2a615c4fa9f66b602b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6703e55954db440ab8a2bc2a615c4fa9f66b602b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["6703e55954db440ab8a2bc2a615c4fa9f66b602b"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6703e55954db440ab8a2bc2a615c4fa9f66b602b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"6703e55954db440ab8a2bc2a615c4fa9f66b602b":["c3a8a449466c1ff7ce2274fe73dab487256964b4","3a119bbc8703c10faa329ec201c654b3a35a1e3e","a3776dccca01c11e7046323cfad46a3b4a471233"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6703e55954db440ab8a2bc2a615c4fa9f66b602b","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}