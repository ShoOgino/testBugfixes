{"path":"src/test/org/apache/lucene/search/TestSort#testRemoteCustomSort().mjava","commits":[{"id":"35c39157e8b6bc585e3a07e703d75db0f2ad56b2","date":1082672595,"type":0,"author":"Tim Jones","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#testRemoteCustomSort().mjava","pathOld":"/dev/null","sourceNew":"\tpublic void testRemoteCustomSort() throws Exception {\n\t\tSearchable searcher = getRemote();\n\t\tMultiSearcher multi = new MultiSearcher (new Searchable[] { searcher });\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparator()));\n\t\tassertMatches (multi, queryX, sort, \"CAIEG\");\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparator(), true));\n\t\tassertMatches (multi, queryY, sort, \"HJDBF\");\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99ee715b9c02dd47d9e69a18607a5192c1ebd82b","date":1085007927,"type":3,"author":"Tim Jones","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#testRemoteCustomSort().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#testRemoteCustomSort().mjava","sourceNew":"\tpublic void testRemoteCustomSort() throws Exception {\n\t\tSearchable searcher = getRemote();\n\t\tMultiSearcher multi = new MultiSearcher (new Searchable[] { searcher });\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource()));\n\t\tassertMatches (multi, queryX, sort, \"CAIEG\");\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource(), true));\n\t\tassertMatches (multi, queryY, sort, \"HJDBF\");\n\t\tSortComparator custom = SampleComparable.getComparator();\n\t\tsort.setSort (new SortField (\"custom\", custom));\n\t\tassertMatches (multi, queryX, sort, \"CAIEG\");\n\t\tsort.setSort (new SortField (\"custom\", custom, true));\n\t\tassertMatches (multi, queryY, sort, \"HJDBF\");\n\t}\n\n","sourceOld":"\tpublic void testRemoteCustomSort() throws Exception {\n\t\tSearchable searcher = getRemote();\n\t\tMultiSearcher multi = new MultiSearcher (new Searchable[] { searcher });\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparator()));\n\t\tassertMatches (multi, queryX, sort, \"CAIEG\");\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparator(), true));\n\t\tassertMatches (multi, queryY, sort, \"HJDBF\");\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba534479820dee396d07f520ba2a55400a1b6e7d","date":1085439102,"type":3,"author":"Tim Jones","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#testRemoteCustomSort().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#testRemoteCustomSort().mjava","sourceNew":"\t// test custom search when remote\n\tpublic void testRemoteCustomSort() throws Exception {\n\t\tSearchable searcher = getRemote();\n\t\tMultiSearcher multi = new MultiSearcher (new Searchable[] { searcher });\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource()));\n\t\tassertMatches (multi, queryX, sort, \"CAIEG\");\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource(), true));\n\t\tassertMatches (multi, queryY, sort, \"HJDBF\");\n\t\tSortComparator custom = SampleComparable.getComparator();\n\t\tsort.setSort (new SortField (\"custom\", custom));\n\t\tassertMatches (multi, queryX, sort, \"CAIEG\");\n\t\tsort.setSort (new SortField (\"custom\", custom, true));\n\t\tassertMatches (multi, queryY, sort, \"HJDBF\");\n\t}\n\n","sourceOld":"\tpublic void testRemoteCustomSort() throws Exception {\n\t\tSearchable searcher = getRemote();\n\t\tMultiSearcher multi = new MultiSearcher (new Searchable[] { searcher });\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource()));\n\t\tassertMatches (multi, queryX, sort, \"CAIEG\");\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource(), true));\n\t\tassertMatches (multi, queryY, sort, \"HJDBF\");\n\t\tSortComparator custom = SampleComparable.getComparator();\n\t\tsort.setSort (new SortField (\"custom\", custom));\n\t\tassertMatches (multi, queryX, sort, \"CAIEG\");\n\t\tsort.setSort (new SortField (\"custom\", custom, true));\n\t\tassertMatches (multi, queryY, sort, \"HJDBF\");\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63bc3238545c6012bd44f5d294077997f236bc4e","date":1233087321,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#testRemoteCustomSort().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#testRemoteCustomSort().mjava","sourceNew":"  // test custom search when remote\n  public void testRemoteCustomSort() throws Exception {\n    Searchable searcher = getRemote();\n    MultiSearcher multi = new MultiSearcher (new Searchable[] { searcher });\n    sort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource()));\n    assertMatches (multi, queryX, sort, \"CAIEG\");\n    sort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource(), true));\n    assertMatches (multi, queryY, sort, \"HJDBF\");\n    SortComparator custom = SampleComparable.getComparator();\n    sort.setSort (new SortField (\"custom\", custom));\n    assertMatches (multi, queryX, sort, \"CAIEG\");\n    sort.setSort (new SortField (\"custom\", custom, true));\n    assertMatches (multi, queryY, sort, \"HJDBF\");\n  }\n\n","sourceOld":"\t// test custom search when remote\n\tpublic void testRemoteCustomSort() throws Exception {\n\t\tSearchable searcher = getRemote();\n\t\tMultiSearcher multi = new MultiSearcher (new Searchable[] { searcher });\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource()));\n\t\tassertMatches (multi, queryX, sort, \"CAIEG\");\n\t\tsort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource(), true));\n\t\tassertMatches (multi, queryY, sort, \"HJDBF\");\n\t\tSortComparator custom = SampleComparable.getComparator();\n\t\tsort.setSort (new SortField (\"custom\", custom));\n\t\tassertMatches (multi, queryX, sort, \"CAIEG\");\n\t\tsort.setSort (new SortField (\"custom\", custom, true));\n\t\tassertMatches (multi, queryY, sort, \"HJDBF\");\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1474a58d42cdf3b9e16ffe07bce31e4abffe5e02","date":1244977984,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#testRemoteCustomSort().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#testRemoteCustomSort().mjava","sourceNew":"  // test custom search when remote\n  public void testRemoteCustomSort() throws Exception {\n    Searchable searcher = getRemote();\n    MultiSearcher multi = new MultiSearcher (new Searchable[] { searcher });\n    sort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource()));\n    assertMatches (multi, queryX, sort, \"CAIEG\");\n    sort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource(), true));\n    assertMatches (multi, queryY, sort, \"HJDBF\");\n    SortComparator custom = SampleComparable.getComparator();\n    sort.setSort (new SortField (\"custom\", custom));\n    assertMatches (multi, queryX, sort, \"CAIEG\");\n    sort.setSort (new SortField (\"custom\", custom, true));\n    assertMatches (multi, queryY, sort, \"HJDBF\");\n  }\n\n","sourceOld":"  // test custom search when remote\n  public void testRemoteCustomSort() throws Exception {\n    Searchable searcher = getRemote();\n    MultiSearcher multi = new MultiSearcher (new Searchable[] { searcher });\n    sort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource()));\n    assertMatches (multi, queryX, sort, \"CAIEG\");\n    sort.setSort (new SortField (\"custom\", SampleComparable.getComparatorSource(), true));\n    assertMatches (multi, queryY, sort, \"HJDBF\");\n    SortComparator custom = SampleComparable.getComparator();\n    sort.setSort (new SortField (\"custom\", custom));\n    assertMatches (multi, queryX, sort, \"CAIEG\");\n    sort.setSort (new SortField (\"custom\", custom, true));\n    assertMatches (multi, queryY, sort, \"HJDBF\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1474a58d42cdf3b9e16ffe07bce31e4abffe5e02":["63bc3238545c6012bd44f5d294077997f236bc4e"],"99ee715b9c02dd47d9e69a18607a5192c1ebd82b":["35c39157e8b6bc585e3a07e703d75db0f2ad56b2"],"35c39157e8b6bc585e3a07e703d75db0f2ad56b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"63bc3238545c6012bd44f5d294077997f236bc4e":["ba534479820dee396d07f520ba2a55400a1b6e7d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1474a58d42cdf3b9e16ffe07bce31e4abffe5e02"],"ba534479820dee396d07f520ba2a55400a1b6e7d":["99ee715b9c02dd47d9e69a18607a5192c1ebd82b"]},"commit2Childs":{"1474a58d42cdf3b9e16ffe07bce31e4abffe5e02":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"99ee715b9c02dd47d9e69a18607a5192c1ebd82b":["ba534479820dee396d07f520ba2a55400a1b6e7d"],"35c39157e8b6bc585e3a07e703d75db0f2ad56b2":["99ee715b9c02dd47d9e69a18607a5192c1ebd82b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["35c39157e8b6bc585e3a07e703d75db0f2ad56b2"],"63bc3238545c6012bd44f5d294077997f236bc4e":["1474a58d42cdf3b9e16ffe07bce31e4abffe5e02"],"ba534479820dee396d07f520ba2a55400a1b6e7d":["63bc3238545c6012bd44f5d294077997f236bc4e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}