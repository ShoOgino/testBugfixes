{"path":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testSetClusterProperty().mjava","commits":[{"id":"3b6398c01b0e06ba3aa3a96d549077877414f9f8","date":1429701153,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testSetClusterProperty().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSetClusterProperty() throws Exception {\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    try {\n      // add property urlScheme=http\n      String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(),\n          \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\", \"-val\", \"http\"};\n      ZkCLI.main(args);\n      assertEquals(\"http\", reader.getClusterProps().get(\"urlScheme\"));\n      \n      // remove it again\n      args = new String[] {\"-zkhost\", zkServer.getZkAddress(),\n          \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\"};\n      ZkCLI.main(args);\n      assertNull(reader.getClusterProps().get(\"urlScheme\"));\n    } finally {\n      reader.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"115923bc88e5b1dc4bef049b1ded8486723052ed","date":1463216796,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testSetClusterProperty().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testSetClusterProperty().mjava","sourceNew":"  @Test\n  public void testSetClusterProperty() throws Exception {\n    ClusterProperties properties = new ClusterProperties(zkClient);\n    // add property urlScheme=http\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(),\n        \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\", \"-val\", \"http\"};\n    ZkCLI.main(args);\n    assertEquals(\"http\", properties.getClusterProperty(\"urlScheme\", \"none\"));\n\n    // remove it again\n    args = new String[] {\"-zkhost\", zkServer.getZkAddress(),\n        \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\"};\n    ZkCLI.main(args);\n    assertNull(properties.getClusterProperty(\"urlScheme\", (String) null));\n\n  }\n\n","sourceOld":"  @Test\n  public void testSetClusterProperty() throws Exception {\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    try {\n      // add property urlScheme=http\n      String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(),\n          \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\", \"-val\", \"http\"};\n      ZkCLI.main(args);\n      assertEquals(\"http\", reader.getClusterProps().get(\"urlScheme\"));\n      \n      // remove it again\n      args = new String[] {\"-zkhost\", zkServer.getZkAddress(),\n          \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\"};\n      ZkCLI.main(args);\n      assertNull(reader.getClusterProps().get(\"urlScheme\"));\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testSetClusterProperty().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testSetClusterProperty().mjava","sourceNew":"  @Test\n  public void testSetClusterProperty() throws Exception {\n    ClusterProperties properties = new ClusterProperties(zkClient);\n    // add property urlScheme=http\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(),\n        \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\", \"-val\", \"http\"};\n    ZkCLI.main(args);\n    assertEquals(\"http\", properties.getClusterProperty(\"urlScheme\", \"none\"));\n\n    // remove it again\n    args = new String[] {\"-zkhost\", zkServer.getZkAddress(),\n        \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\"};\n    ZkCLI.main(args);\n    assertNull(properties.getClusterProperty(\"urlScheme\", (String) null));\n\n  }\n\n","sourceOld":"  @Test\n  public void testSetClusterProperty() throws Exception {\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    try {\n      // add property urlScheme=http\n      String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(),\n          \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\", \"-val\", \"http\"};\n      ZkCLI.main(args);\n      assertEquals(\"http\", reader.getClusterProps().get(\"urlScheme\"));\n      \n      // remove it again\n      args = new String[] {\"-zkhost\", zkServer.getZkAddress(),\n          \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\"};\n      ZkCLI.main(args);\n      assertNull(reader.getClusterProps().get(\"urlScheme\"));\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testSetClusterProperty().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testSetClusterProperty().mjava","sourceNew":"  @Test\n  public void testSetClusterProperty() throws Exception {\n    ClusterProperties properties = new ClusterProperties(zkClient);\n    // add property urlScheme=http\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(),\n        \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\", \"-val\", \"http\"};\n    ZkCLI.main(args);\n    assertEquals(\"http\", properties.getClusterProperty(\"urlScheme\", \"none\"));\n\n    // remove it again\n    args = new String[] {\"-zkhost\", zkServer.getZkAddress(),\n        \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\"};\n    ZkCLI.main(args);\n    assertNull(properties.getClusterProperty(\"urlScheme\", (String) null));\n\n  }\n\n","sourceOld":"  @Test\n  public void testSetClusterProperty() throws Exception {\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    try {\n      // add property urlScheme=http\n      String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(),\n          \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\", \"-val\", \"http\"};\n      ZkCLI.main(args);\n      assertEquals(\"http\", reader.getClusterProps().get(\"urlScheme\"));\n      \n      // remove it again\n      args = new String[] {\"-zkhost\", zkServer.getZkAddress(),\n          \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\"};\n      ZkCLI.main(args);\n      assertNull(reader.getClusterProps().get(\"urlScheme\"));\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testSetClusterProperty().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testSetClusterProperty().mjava","sourceNew":"  @Test\n  public void testSetClusterProperty() throws Exception {\n    ClusterProperties properties = new ClusterProperties(zkClient);\n    // add property urlScheme=http\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(),\n        \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\", \"-val\", \"http\"};\n    ZkCLI.main(args);\n    assertEquals(\"http\", properties.getClusterProperty(\"urlScheme\", \"none\"));\n\n    // remove it again\n    args = new String[] {\"-zkhost\", zkServer.getZkAddress(),\n        \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\"};\n    ZkCLI.main(args);\n    assertNull(properties.getClusterProperty(\"urlScheme\", (String) null));\n\n  }\n\n","sourceOld":"  @Test\n  public void testSetClusterProperty() throws Exception {\n    ZkStateReader reader = new ZkStateReader(zkClient);\n    try {\n      // add property urlScheme=http\n      String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(),\n          \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\", \"-val\", \"http\"};\n      ZkCLI.main(args);\n      assertEquals(\"http\", reader.getClusterProps().get(\"urlScheme\"));\n      \n      // remove it again\n      args = new String[] {\"-zkhost\", zkServer.getZkAddress(),\n          \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\"};\n      ZkCLI.main(args);\n      assertNull(reader.getClusterProps().get(\"urlScheme\"));\n    } finally {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1778938cb7fb298e6e07a43e2d5acaf552d61518","date":1559609435,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testSetClusterProperty().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkCLITest#testSetClusterProperty().mjava","sourceNew":"  @Test\n  public void testSetClusterProperty() throws Exception {\n    ClusterProperties properties = new ClusterProperties(zkClient);\n    // add property urlScheme=http\n    String[] args = new String[]{\"-zkhost\", zkServer.getZkAddress(),\n        \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\", \"-val\", \"http\"};\n    ZkCLI.main(args);\n    assertEquals(\"http\", properties.getClusterProperty(\"urlScheme\", \"none\"));\n\n    // remove it again\n    args = new String[]{\"-zkhost\", zkServer.getZkAddress(),\n        \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\"};\n    ZkCLI.main(args);\n    assertNull(properties.getClusterProperty(\"urlScheme\", (String) null));\n\n  }\n\n","sourceOld":"  @Test\n  public void testSetClusterProperty() throws Exception {\n    ClusterProperties properties = new ClusterProperties(zkClient);\n    // add property urlScheme=http\n    String[] args = new String[] {\"-zkhost\", zkServer.getZkAddress(),\n        \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\", \"-val\", \"http\"};\n    ZkCLI.main(args);\n    assertEquals(\"http\", properties.getClusterProperty(\"urlScheme\", \"none\"));\n\n    // remove it again\n    args = new String[] {\"-zkhost\", zkServer.getZkAddress(),\n        \"-cmd\", \"CLUSTERPROP\", \"-name\", \"urlScheme\"};\n    ZkCLI.main(args);\n    assertNull(properties.getClusterProperty(\"urlScheme\", (String) null));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"115923bc88e5b1dc4bef049b1ded8486723052ed":["3b6398c01b0e06ba3aa3a96d549077877414f9f8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ad30c6a479e764150a3316e57263319775f1df2":["3b6398c01b0e06ba3aa3a96d549077877414f9f8","115923bc88e5b1dc4bef049b1ded8486723052ed"],"1778938cb7fb298e6e07a43e2d5acaf552d61518":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["3b6398c01b0e06ba3aa3a96d549077877414f9f8","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1778938cb7fb298e6e07a43e2d5acaf552d61518"],"3b6398c01b0e06ba3aa3a96d549077877414f9f8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["3b6398c01b0e06ba3aa3a96d549077877414f9f8","0ad30c6a479e764150a3316e57263319775f1df2"]},"commit2Childs":{"115923bc88e5b1dc4bef049b1ded8486723052ed":["0ad30c6a479e764150a3316e57263319775f1df2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b6398c01b0e06ba3aa3a96d549077877414f9f8"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"1778938cb7fb298e6e07a43e2d5acaf552d61518":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b6398c01b0e06ba3aa3a96d549077877414f9f8":["115923bc88e5b1dc4bef049b1ded8486723052ed","0ad30c6a479e764150a3316e57263319775f1df2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["1778938cb7fb298e6e07a43e2d5acaf552d61518","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}