{"path":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/GrowingHeapLatLonWriter#append(int,int,long,int).mjava","commits":[{"id":"4e50a8c6cf9370a926c7efe6aa39429e6a18cf96","date":1433340999,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/GrowingHeapLatLonWriter#append(int,int,long,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void append(int latEnc, int lonEnc, long ord, int docID) {\n    assert ord == nextWrite;\n    if (latEncs.length == nextWrite) {\n      int nextSize = Math.min(maxSize, ArrayUtil.oversize(nextWrite+1, RamUsageEstimator.NUM_BYTES_INT));\n      assert nextSize > nextWrite: \"nextSize=\" + nextSize + \" vs nextWrite=\" + nextWrite;\n      latEncs = growExact(latEncs, nextSize);\n      lonEncs = growExact(lonEncs, nextSize);\n      ords = growExact(ords, nextSize);\n      docIDs = growExact(docIDs, nextSize);\n    }\n    latEncs[nextWrite] = latEnc;\n    lonEncs[nextWrite] = lonEnc;\n    ords[nextWrite] = ord;\n    docIDs[nextWrite] = docID;\n    nextWrite++;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1904709ea0185dc04e3d77ea01c79e909caf2796","date":1447006699,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/GrowingHeapLatLonWriter#append(int,int,long,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void append(int latEnc, int lonEnc, long ord, int docID) {\n    assert ord == nextWrite;\n    if (latEncs.length == nextWrite) {\n      int nextSize = Math.min(maxSize, ArrayUtil.oversize(nextWrite+1, RamUsageEstimator.NUM_BYTES_INT));\n      assert nextSize > nextWrite: \"nextSize=\" + nextSize + \" vs nextWrite=\" + nextWrite;\n      latEncs = growExact(latEncs, nextSize);\n      lonEncs = growExact(lonEncs, nextSize);\n      ords = growExact(ords, nextSize);\n      docIDs = growExact(docIDs, nextSize);\n    }\n    latEncs[nextWrite] = latEnc;\n    lonEncs[nextWrite] = lonEnc;\n    ords[nextWrite] = ord;\n    docIDs[nextWrite] = docID;\n    nextWrite++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1904709ea0185dc04e3d77ea01c79e909caf2796":["4e50a8c6cf9370a926c7efe6aa39429e6a18cf96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"4e50a8c6cf9370a926c7efe6aa39429e6a18cf96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e50a8c6cf9370a926c7efe6aa39429e6a18cf96"],"1904709ea0185dc04e3d77ea01c79e909caf2796":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e50a8c6cf9370a926c7efe6aa39429e6a18cf96":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}