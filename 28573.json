{"path":"lucene/src/test/org/apache/lucene/index/BugReproAnalyzerTokenizer[TestSameTokenSamePosition]#incrementToken().mjava","commits":[{"id":"07972d15a5709171622bbb52bd91e9a35f1e3f26","date":1307194597,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/BugReproAnalyzerTokenizer[TestSameTokenSamePosition]#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (nextTokenIndex < tokenCount) {\n      termAtt.setEmpty().append(terms[nextTokenIndex]);\n      offsetAtt.setOffset(starts[nextTokenIndex], ends[nextTokenIndex]);\n      posIncAtt.setPositionIncrement(incs[nextTokenIndex]);\n      nextTokenIndex++;\n      return true;\t\t\t\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e7c99bd45fa88a3d93a03fdd773053bef72268e","date":1307218088,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/BugReproAnalyzerTokenizer[TestSameTokenSamePosition]#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (nextTokenIndex < tokenCount) {\n      termAtt.setEmpty().append(terms[nextTokenIndex]);\n      offsetAtt.setOffset(starts[nextTokenIndex], ends[nextTokenIndex]);\n      posIncAtt.setPositionIncrement(incs[nextTokenIndex]);\n      nextTokenIndex++;\n      return true;\t\t\t\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/BugReproAnalyzerTokenizer[TestSameTokenSamePosition]#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (nextTokenIndex < tokenCount) {\n      termAtt.setEmpty().append(terms[nextTokenIndex]);\n      offsetAtt.setOffset(starts[nextTokenIndex], ends[nextTokenIndex]);\n      posIncAtt.setPositionIncrement(incs[nextTokenIndex]);\n      nextTokenIndex++;\n      return true;\t\t\t\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/BugReproAnalyzerTokenizer[TestSameTokenSamePosition]#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/BugReproAnalyzerTokenizer[TestSameTokenSamePosition]#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (nextTokenIndex < tokenCount) {\n      termAtt.setEmpty().append(terms[nextTokenIndex]);\n      offsetAtt.setOffset(starts[nextTokenIndex], ends[nextTokenIndex]);\n      posIncAtt.setPositionIncrement(incs[nextTokenIndex]);\n      nextTokenIndex++;\n      return true;\t\t\t\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (nextTokenIndex < tokenCount) {\n      termAtt.setEmpty().append(terms[nextTokenIndex]);\n      offsetAtt.setOffset(starts[nextTokenIndex], ends[nextTokenIndex]);\n      posIncAtt.setPositionIncrement(incs[nextTokenIndex]);\n      nextTokenIndex++;\n      return true;\t\t\t\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"07972d15a5709171622bbb52bd91e9a35f1e3f26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["07972d15a5709171622bbb52bd91e9a35f1e3f26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","07972d15a5709171622bbb52bd91e9a35f1e3f26"],"1e7c99bd45fa88a3d93a03fdd773053bef72268e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","07972d15a5709171622bbb52bd91e9a35f1e3f26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"07972d15a5709171622bbb52bd91e9a35f1e3f26":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","1e7c99bd45fa88a3d93a03fdd773053bef72268e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["07972d15a5709171622bbb52bd91e9a35f1e3f26","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","1e7c99bd45fa88a3d93a03fdd773053bef72268e"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"1e7c99bd45fa88a3d93a03fdd773053bef72268e":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2","1e7c99bd45fa88a3d93a03fdd773053bef72268e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}