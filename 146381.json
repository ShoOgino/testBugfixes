{"path":"solr/solrj/src/java/org/noggit/CharArr.CharArrWriter#write(String,int,int).mjava","commits":[{"id":"ba33781da68babcaa5828121b443d3eb5c9d8480","date":1590595589,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/noggit/CharArr.CharArrWriter#write(String,int,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void write(String s, int stringOffset, int len) {\n      int space = buf.length - end;\n      if (len < space) {\n        s.getChars(stringOffset, stringOffset + len, buf, end);\n        end += len;\n      } else if (len < buf.length) {\n        // if the data to write is small enough, buffer it.\n        s.getChars(stringOffset, stringOffset + space, buf, end);\n        flush();\n        s.getChars(stringOffset + space, stringOffset + len, buf, 0);\n        end = len - space;\n      } else {\n        flush();\n        // don't buffer, just write to sink\n        try {\n          sink.write(s, stringOffset, len);\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ba33781da68babcaa5828121b443d3eb5c9d8480":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba33781da68babcaa5828121b443d3eb5c9d8480"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba33781da68babcaa5828121b443d3eb5c9d8480"],"ba33781da68babcaa5828121b443d3eb5c9d8480":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}