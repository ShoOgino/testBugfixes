{"path":"src/test/org/apache/solr/core/TestJmxMonitoredMap#testPutRemoveClear().mjava","commits":[{"id":"6ec2a01e62b7b206d9466aafaf04d8a9d6aee77b","date":1217355237,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/test/org/apache/solr/core/TestJmxMonitoredMap#testPutRemoveClear().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPutRemoveClear() throws Exception {\n    MockInfoMBean mock = new MockInfoMBean();\n    monitoredMap.put(\"mock\", mock);\n\n    Set<ObjectInstance> objects = mbeanServer.queryMBeans(null, Query.match(\n            Query.attr(\"name\"), Query.value(\"mock\")));\n    assertFalse(\"No MBean for mock object found in MBeanServer\", objects\n            .isEmpty());\n\n    monitoredMap.remove(\"mock\");\n    objects = mbeanServer.queryMBeans(null, Query.match(Query.attr(\"name\"),\n            Query.value(\"mock\")));\n    assertTrue(\"MBean for mock object found in MBeanServer even after removal\",\n            objects.isEmpty());\n\n    monitoredMap.put(\"mock\", mock);\n    monitoredMap.put(\"mock2\", mock);\n    objects = mbeanServer.queryMBeans(null, Query.match(Query.attr(\"name\"),\n            Query.value(\"mock\")));\n    assertFalse(\"No MBean for mock object found in MBeanServer\", objects\n            .isEmpty());\n\n    monitoredMap.clear();\n    objects = mbeanServer.queryMBeans(null, Query.match(Query.attr(\"name\"),\n            Query.value(\"mock\")));\n    assertTrue(\n            \"MBean for mock object found in MBeanServer even after clear has been called\",\n            objects.isEmpty());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e26e75cfb1a17b3f7431fafc9cb3caf5678681a5","e26e75cfb1a17b3f7431fafc9cb3caf5678681a5","e26e75cfb1a17b3f7431fafc9cb3caf5678681a5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestJmxMonitoredMap#testPutRemoveClear().mjava","pathOld":"src/test/org/apache/solr/core/TestJmxMonitoredMap#testPutRemoveClear().mjava","sourceNew":"  @Test\n  public void testPutRemoveClear() throws Exception {\n    MockInfoMBean mock = new MockInfoMBean();\n    monitoredMap.put(\"mock\", mock);\n\n    Set<ObjectInstance> objects = mbeanServer.queryMBeans(null, Query.match(\n            Query.attr(\"name\"), Query.value(\"mock\")));\n    assertFalse(\"No MBean for mock object found in MBeanServer\", objects\n            .isEmpty());\n\n    monitoredMap.remove(\"mock\");\n    objects = mbeanServer.queryMBeans(null, Query.match(Query.attr(\"name\"),\n            Query.value(\"mock\")));\n    assertTrue(\"MBean for mock object found in MBeanServer even after removal\",\n            objects.isEmpty());\n\n    monitoredMap.put(\"mock\", mock);\n    monitoredMap.put(\"mock2\", mock);\n    objects = mbeanServer.queryMBeans(null, Query.match(Query.attr(\"name\"),\n            Query.value(\"mock\")));\n    assertFalse(\"No MBean for mock object found in MBeanServer\", objects\n            .isEmpty());\n\n    monitoredMap.clear();\n    objects = mbeanServer.queryMBeans(null, Query.match(Query.attr(\"name\"),\n            Query.value(\"mock\")));\n    assertTrue(\n            \"MBean for mock object found in MBeanServer even after clear has been called\",\n            objects.isEmpty());\n  }\n\n","sourceOld":"  @Test\n  public void testPutRemoveClear() throws Exception {\n    MockInfoMBean mock = new MockInfoMBean();\n    monitoredMap.put(\"mock\", mock);\n\n    Set<ObjectInstance> objects = mbeanServer.queryMBeans(null, Query.match(\n            Query.attr(\"name\"), Query.value(\"mock\")));\n    assertFalse(\"No MBean for mock object found in MBeanServer\", objects\n            .isEmpty());\n\n    monitoredMap.remove(\"mock\");\n    objects = mbeanServer.queryMBeans(null, Query.match(Query.attr(\"name\"),\n            Query.value(\"mock\")));\n    assertTrue(\"MBean for mock object found in MBeanServer even after removal\",\n            objects.isEmpty());\n\n    monitoredMap.put(\"mock\", mock);\n    monitoredMap.put(\"mock2\", mock);\n    objects = mbeanServer.queryMBeans(null, Query.match(Query.attr(\"name\"),\n            Query.value(\"mock\")));\n    assertFalse(\"No MBean for mock object found in MBeanServer\", objects\n            .isEmpty());\n\n    monitoredMap.clear();\n    objects = mbeanServer.queryMBeans(null, Query.match(Query.attr(\"name\"),\n            Query.value(\"mock\")));\n    assertTrue(\n            \"MBean for mock object found in MBeanServer even after clear has been called\",\n            objects.isEmpty());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"6ec2a01e62b7b206d9466aafaf04d8a9d6aee77b":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["6ec2a01e62b7b206d9466aafaf04d8a9d6aee77b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["6ec2a01e62b7b206d9466aafaf04d8a9d6aee77b"],"6ec2a01e62b7b206d9466aafaf04d8a9d6aee77b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}