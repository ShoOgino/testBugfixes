{"path":"lucene/classification/src/java/org/apache/lucene/classification/utils/DatasetSplitter#DatasetSplitter(double,double).mjava","commits":[{"id":"1d2ec95cdc45879e188017e6e9b00a9a23e5e8c3","date":1354172806,"type":0,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/utils/DatasetSplitter#DatasetSplitter(double,double).mjava","pathOld":"/dev/null","sourceNew":"  public DatasetSplitter(double testRatio, double crossValidationRatio) {\n    this.crossValidationRatio = crossValidationRatio;\n    this.testRatio = testRatio;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0fa897b1924effa702fe36ff25f65aaf7bf0b880","date":1354197571,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/utils/DatasetSplitter#DatasetSplitter(double,double).mjava","pathOld":"lucene/classification/src/java/org/apache/lucene/classification/utils/DatasetSplitter#DatasetSplitter(double,double).mjava","sourceNew":"  /**\n   * Create a {@link DatasetSplitter} by giving test and cross validation IDXs sizes\n   * @param testRatio the ratio of the original index to be used for the test IDX as a <code>double</code> between 0.0 and 1.0\n   * @param crossValidationRatio the ratio of the original index to be used for the c.v. IDX as a <code>double</code> between 0.0 and 1.0\n   */\n  public DatasetSplitter(double testRatio, double crossValidationRatio) {\n    this.crossValidationRatio = crossValidationRatio;\n    this.testRatio = testRatio;\n  }\n\n","sourceOld":"  public DatasetSplitter(double testRatio, double crossValidationRatio) {\n    this.crossValidationRatio = crossValidationRatio;\n    this.testRatio = testRatio;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ed7ede3102ac24a0b96a88dc092416f448696921","date":1355127603,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/utils/DatasetSplitter#DatasetSplitter(double,double).mjava","pathOld":"lucene/classification/src/java/org/apache/lucene/classification/utils/DatasetSplitter#DatasetSplitter(double,double).mjava","sourceNew":"  /**\n   * Create a {@link DatasetSplitter} by giving test and cross validation IDXs sizes\n   *\n   * @param testRatio            the ratio of the original index to be used for the test IDX as a <code>double</code> between 0.0 and 1.0\n   * @param crossValidationRatio the ratio of the original index to be used for the c.v. IDX as a <code>double</code> between 0.0 and 1.0\n   */\n  public DatasetSplitter(double testRatio, double crossValidationRatio) {\n    this.crossValidationRatio = crossValidationRatio;\n    this.testRatio = testRatio;\n  }\n\n","sourceOld":"  /**\n   * Create a {@link DatasetSplitter} by giving test and cross validation IDXs sizes\n   * @param testRatio the ratio of the original index to be used for the test IDX as a <code>double</code> between 0.0 and 1.0\n   * @param crossValidationRatio the ratio of the original index to be used for the c.v. IDX as a <code>double</code> between 0.0 and 1.0\n   */\n  public DatasetSplitter(double testRatio, double crossValidationRatio) {\n    this.crossValidationRatio = crossValidationRatio;\n    this.testRatio = testRatio;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/classification/src/java/org/apache/lucene/classification/utils/DatasetSplitter#DatasetSplitter(double,double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a {@link DatasetSplitter} by giving test and cross validation IDXs sizes\n   *\n   * @param testRatio            the ratio of the original index to be used for the test IDX as a <code>double</code> between 0.0 and 1.0\n   * @param crossValidationRatio the ratio of the original index to be used for the c.v. IDX as a <code>double</code> between 0.0 and 1.0\n   */\n  public DatasetSplitter(double testRatio, double crossValidationRatio) {\n    this.crossValidationRatio = crossValidationRatio;\n    this.testRatio = testRatio;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0fa897b1924effa702fe36ff25f65aaf7bf0b880":["1d2ec95cdc45879e188017e6e9b00a9a23e5e8c3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ed7ede3102ac24a0b96a88dc092416f448696921"],"ed7ede3102ac24a0b96a88dc092416f448696921":["0fa897b1924effa702fe36ff25f65aaf7bf0b880"],"1d2ec95cdc45879e188017e6e9b00a9a23e5e8c3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ed7ede3102ac24a0b96a88dc092416f448696921"]},"commit2Childs":{"0fa897b1924effa702fe36ff25f65aaf7bf0b880":["ed7ede3102ac24a0b96a88dc092416f448696921"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["407687e67faf6e1f02a211ca078d8e3eed631027","1d2ec95cdc45879e188017e6e9b00a9a23e5e8c3"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"ed7ede3102ac24a0b96a88dc092416f448696921":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1d2ec95cdc45879e188017e6e9b00a9a23e5e8c3":["0fa897b1924effa702fe36ff25f65aaf7bf0b880"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}