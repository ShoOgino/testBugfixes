{"path":"src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","commits":[{"id":"149f82651d1e396281d58808b8c03062649c54dd","date":1193047128,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","pathOld":"/dev/null","sourceNew":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      public BitSet bits (IndexReader reader) {\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return bitset;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52ce7e961a8217faac8128e3c8fe67819eefdde9","date":1201979043,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","pathOld":"src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","sourceNew":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      public DocIdSet getDocIdSet (IndexReader reader) {\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","sourceOld":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      public BitSet bits (IndexReader reader) {\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return bitset;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","pathOld":"src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","sourceNew":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (IndexReader reader) {\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","sourceOld":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      public DocIdSet getDocIdSet (IndexReader reader) {\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","pathOld":"src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","sourceNew":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (IndexReader reader) {\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","sourceOld":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (IndexReader reader) {\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["52ce7e961a8217faac8128e3c8fe67819eefdde9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"52ce7e961a8217faac8128e3c8fe67819eefdde9":["149f82651d1e396281d58808b8c03062649c54dd"],"149f82651d1e396281d58808b8c03062649c54dd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1326054a8d3aa66382d49decc7f330955c9c6f71"]},"commit2Childs":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["149f82651d1e396281d58808b8c03062649c54dd"],"52ce7e961a8217faac8128e3c8fe67819eefdde9":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"149f82651d1e396281d58808b8c03062649c54dd":["52ce7e961a8217faac8128e3c8fe67819eefdde9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}