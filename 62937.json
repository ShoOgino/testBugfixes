{"path":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.QueryCommand#setCursorMark(CursorMark).mjava","commits":[{"id":"d5bc8e25f59990525f5beb14afe9c96240dcf4a2","date":1389042945,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.QueryCommand#setCursorMark(CursorMark).mjava","pathOld":"/dev/null","sourceNew":"    public QueryCommand setCursorMark(CursorMark cursorMark) {\n      this.cursorMark = cursorMark;\n      if (null != cursorMark) {\n        // If we're using a cursor then we can't allow queryResult caching because the \n        // cache keys don't know anything about the collector used.\n        //\n        // in theory, we could enhance the cache keys to be aware of the searchAfter\n        // FieldDoc but then there would still be complexity around things like the cache\n        // window size that would need to be worked out\n        //\n        // we *can* however allow the use of checking the filterCache for non-score based\n        // sorts, because that still runs our paging collector over the entire DocSet\n        this.flags |= (NO_CHECK_QCACHE | NO_SET_QCACHE);\n      }\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac9de183adbc9483681f275ac1e2d92ed19f52e1","date":1452414626,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.QueryCommand#setCursorMark(CursorMark).mjava","sourceNew":null,"sourceOld":"    public QueryCommand setCursorMark(CursorMark cursorMark) {\n      this.cursorMark = cursorMark;\n      if (null != cursorMark) {\n        // If we're using a cursor then we can't allow queryResult caching because the \n        // cache keys don't know anything about the collector used.\n        //\n        // in theory, we could enhance the cache keys to be aware of the searchAfter\n        // FieldDoc but then there would still be complexity around things like the cache\n        // window size that would need to be worked out\n        //\n        // we *can* however allow the use of checking the filterCache for non-score based\n        // sorts, because that still runs our paging collector over the entire DocSet\n        this.flags |= (NO_CHECK_QCACHE | NO_SET_QCACHE);\n      }\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d5bc8e25f59990525f5beb14afe9c96240dcf4a2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac9de183adbc9483681f275ac1e2d92ed19f52e1":["d5bc8e25f59990525f5beb14afe9c96240dcf4a2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ac9de183adbc9483681f275ac1e2d92ed19f52e1"]},"commit2Childs":{"d5bc8e25f59990525f5beb14afe9c96240dcf4a2":["ac9de183adbc9483681f275ac1e2d92ed19f52e1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d5bc8e25f59990525f5beb14afe9c96240dcf4a2"],"ac9de183adbc9483681f275ac1e2d92ed19f52e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}