{"path":"solr/core/src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#constructChain(UpdateRequestProcessorChain,ProcessorInfo,SolrCore).mjava","commits":[{"id":"3ee01ed2bbdbfebcda94054cb39b4fac5f06a3bd","date":1426252395,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#constructChain(UpdateRequestProcessorChain,ProcessorInfo,SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  public static UpdateRequestProcessorChain constructChain(UpdateRequestProcessorChain defaultUrp,\n                                                           ProcessorInfo processorInfo, SolrCore core) {\n    LinkedList<UpdateRequestProcessorFactory> urps = new LinkedList(defaultUrp.chain);\n    List<UpdateRequestProcessorFactory> p = getReqProcessors(processorInfo.processor, core);\n    List<UpdateRequestProcessorFactory> post = getReqProcessors(processorInfo.postProcessor, core);\n    //processor are tried to be inserted before LogUpdateprocessor+DistributedUpdateProcessor\n    insertBefore(urps, p, DistributedUpdateProcessorFactory.class, 0);\n    //port-processor is tried to be inserted before RunUpdateProcessor\n    insertBefore(urps, post, RunUpdateProcessorFactory.class, urps.size() - 1);\n    UpdateRequestProcessorChain result = new UpdateRequestProcessorChain(urps, core);\n    if (log.isInfoEnabled()) {\n      ArrayList<String> names = new ArrayList<>(urps.size());\n      for (UpdateRequestProcessorFactory urp : urps) names.add(urp.getClass().getSimpleName());\n      log.info(\"New dynamic chain constructed : \" + StrUtils.join(names, '>'));\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#constructChain(UpdateRequestProcessorChain,ProcessorInfo,SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  public static UpdateRequestProcessorChain constructChain(UpdateRequestProcessorChain defaultUrp,\n                                                           ProcessorInfo processorInfo, SolrCore core) {\n    LinkedList<UpdateRequestProcessorFactory> urps = new LinkedList(defaultUrp.chain);\n    List<UpdateRequestProcessorFactory> p = getReqProcessors(processorInfo.processor, core);\n    List<UpdateRequestProcessorFactory> post = getReqProcessors(processorInfo.postProcessor, core);\n    //processor are tried to be inserted before LogUpdateprocessor+DistributedUpdateProcessor\n    insertBefore(urps, p, DistributedUpdateProcessorFactory.class, 0);\n    //port-processor is tried to be inserted before RunUpdateProcessor\n    insertBefore(urps, post, RunUpdateProcessorFactory.class, urps.size() - 1);\n    UpdateRequestProcessorChain result = new UpdateRequestProcessorChain(urps, core);\n    if (log.isInfoEnabled()) {\n      ArrayList<String> names = new ArrayList<>(urps.size());\n      for (UpdateRequestProcessorFactory urp : urps) names.add(urp.getClass().getSimpleName());\n      log.info(\"New dynamic chain constructed : \" + StrUtils.join(names, '>'));\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d62172dd2fc1195c7e475550ac394a9948a18ae","date":1474974102,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#constructChain(UpdateRequestProcessorChain,ProcessorInfo,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#constructChain(UpdateRequestProcessorChain,ProcessorInfo,SolrCore).mjava","sourceNew":"  public static UpdateRequestProcessorChain constructChain(UpdateRequestProcessorChain defaultUrp,\n                                                           ProcessorInfo processorInfo, SolrCore core) {\n    LinkedList<UpdateRequestProcessorFactory> urps = new LinkedList<>(defaultUrp.chain);\n    List<UpdateRequestProcessorFactory> p = getReqProcessors(processorInfo.processor, core);\n    List<UpdateRequestProcessorFactory> post = getReqProcessors(processorInfo.postProcessor, core);\n    //processor are tried to be inserted before LogUpdateprocessor+DistributedUpdateProcessor\n    insertBefore(urps, p, DistributedUpdateProcessorFactory.class, 0);\n    //port-processor is tried to be inserted before RunUpdateProcessor\n    insertBefore(urps, post, RunUpdateProcessorFactory.class, urps.size() - 1);\n    UpdateRequestProcessorChain result = new UpdateRequestProcessorChain(urps, core);\n    if (log.isInfoEnabled()) {\n      ArrayList<String> names = new ArrayList<>(urps.size());\n      for (UpdateRequestProcessorFactory urp : urps) names.add(urp.getClass().getSimpleName());\n      log.debug(\"New dynamic chain constructed : \" + StrUtils.join(names, '>'));\n    }\n    return result;\n  }\n\n","sourceOld":"  public static UpdateRequestProcessorChain constructChain(UpdateRequestProcessorChain defaultUrp,\n                                                           ProcessorInfo processorInfo, SolrCore core) {\n    LinkedList<UpdateRequestProcessorFactory> urps = new LinkedList(defaultUrp.chain);\n    List<UpdateRequestProcessorFactory> p = getReqProcessors(processorInfo.processor, core);\n    List<UpdateRequestProcessorFactory> post = getReqProcessors(processorInfo.postProcessor, core);\n    //processor are tried to be inserted before LogUpdateprocessor+DistributedUpdateProcessor\n    insertBefore(urps, p, DistributedUpdateProcessorFactory.class, 0);\n    //port-processor is tried to be inserted before RunUpdateProcessor\n    insertBefore(urps, post, RunUpdateProcessorFactory.class, urps.size() - 1);\n    UpdateRequestProcessorChain result = new UpdateRequestProcessorChain(urps, core);\n    if (log.isInfoEnabled()) {\n      ArrayList<String> names = new ArrayList<>(urps.size());\n      for (UpdateRequestProcessorFactory urp : urps) names.add(urp.getClass().getSimpleName());\n      log.info(\"New dynamic chain constructed : \" + StrUtils.join(names, '>'));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#constructChain(UpdateRequestProcessorChain,ProcessorInfo,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#constructChain(UpdateRequestProcessorChain,ProcessorInfo,SolrCore).mjava","sourceNew":"  public static UpdateRequestProcessorChain constructChain(UpdateRequestProcessorChain defaultUrp,\n                                                           ProcessorInfo processorInfo, SolrCore core) {\n    LinkedList<UpdateRequestProcessorFactory> urps = new LinkedList<>(defaultUrp.chain);\n    List<UpdateRequestProcessorFactory> p = getReqProcessors(processorInfo.processor, core);\n    List<UpdateRequestProcessorFactory> post = getReqProcessors(processorInfo.postProcessor, core);\n    //processor are tried to be inserted before LogUpdateprocessor+DistributedUpdateProcessor\n    insertBefore(urps, p, DistributedUpdateProcessorFactory.class, 0);\n    //port-processor is tried to be inserted before RunUpdateProcessor\n    insertBefore(urps, post, RunUpdateProcessorFactory.class, urps.size() - 1);\n    UpdateRequestProcessorChain result = new UpdateRequestProcessorChain(urps, core);\n    if (log.isInfoEnabled()) {\n      ArrayList<String> names = new ArrayList<>(urps.size());\n      for (UpdateRequestProcessorFactory urp : urps) names.add(urp.getClass().getSimpleName());\n      log.debug(\"New dynamic chain constructed : \" + StrUtils.join(names, '>'));\n    }\n    return result;\n  }\n\n","sourceOld":"  public static UpdateRequestProcessorChain constructChain(UpdateRequestProcessorChain defaultUrp,\n                                                           ProcessorInfo processorInfo, SolrCore core) {\n    LinkedList<UpdateRequestProcessorFactory> urps = new LinkedList(defaultUrp.chain);\n    List<UpdateRequestProcessorFactory> p = getReqProcessors(processorInfo.processor, core);\n    List<UpdateRequestProcessorFactory> post = getReqProcessors(processorInfo.postProcessor, core);\n    //processor are tried to be inserted before LogUpdateprocessor+DistributedUpdateProcessor\n    insertBefore(urps, p, DistributedUpdateProcessorFactory.class, 0);\n    //port-processor is tried to be inserted before RunUpdateProcessor\n    insertBefore(urps, post, RunUpdateProcessorFactory.class, urps.size() - 1);\n    UpdateRequestProcessorChain result = new UpdateRequestProcessorChain(urps, core);\n    if (log.isInfoEnabled()) {\n      ArrayList<String> names = new ArrayList<>(urps.size());\n      for (UpdateRequestProcessorFactory urp : urps) names.add(urp.getClass().getSimpleName());\n      log.info(\"New dynamic chain constructed : \" + StrUtils.join(names, '>'));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#constructChain(UpdateRequestProcessorChain,ProcessorInfo,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#constructChain(UpdateRequestProcessorChain,ProcessorInfo,SolrCore).mjava","sourceNew":"  public static UpdateRequestProcessorChain constructChain(UpdateRequestProcessorChain defaultUrp,\n                                                           ProcessorInfo processorInfo, SolrCore core) {\n    LinkedList<UpdateRequestProcessorFactory> urps = new LinkedList<>(defaultUrp.chain);\n    List<UpdateRequestProcessorFactory> p = getReqProcessors(processorInfo.processor, core);\n    List<UpdateRequestProcessorFactory> post = getReqProcessors(processorInfo.postProcessor, core);\n    //processor are tried to be inserted before LogUpdateprocessor+DistributedUpdateProcessor\n    insertBefore(urps, p, DistributedUpdateProcessorFactory.class, 0);\n    //port-processor is tried to be inserted before RunUpdateProcessor\n    insertBefore(urps, post, RunUpdateProcessorFactory.class, urps.size() - 1);\n    UpdateRequestProcessorChain result = new UpdateRequestProcessorChain(urps, core);\n    if (log.isInfoEnabled()) {\n      ArrayList<String> names = new ArrayList<>(urps.size());\n      for (UpdateRequestProcessorFactory urp : urps) names.add(urp.getClass().getSimpleName());\n      log.debug(\"New dynamic chain constructed : \" + StrUtils.join(names, '>'));\n    }\n    return result;\n  }\n\n","sourceOld":"  public static UpdateRequestProcessorChain constructChain(UpdateRequestProcessorChain defaultUrp,\n                                                           ProcessorInfo processorInfo, SolrCore core) {\n    LinkedList<UpdateRequestProcessorFactory> urps = new LinkedList(defaultUrp.chain);\n    List<UpdateRequestProcessorFactory> p = getReqProcessors(processorInfo.processor, core);\n    List<UpdateRequestProcessorFactory> post = getReqProcessors(processorInfo.postProcessor, core);\n    //processor are tried to be inserted before LogUpdateprocessor+DistributedUpdateProcessor\n    insertBefore(urps, p, DistributedUpdateProcessorFactory.class, 0);\n    //port-processor is tried to be inserted before RunUpdateProcessor\n    insertBefore(urps, post, RunUpdateProcessorFactory.class, urps.size() - 1);\n    UpdateRequestProcessorChain result = new UpdateRequestProcessorChain(urps, core);\n    if (log.isInfoEnabled()) {\n      ArrayList<String> names = new ArrayList<>(urps.size());\n      for (UpdateRequestProcessorFactory urp : urps) names.add(urp.getClass().getSimpleName());\n      log.info(\"New dynamic chain constructed : \" + StrUtils.join(names, '>'));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb5fe1ea1e20c7450be523c41001a625ea3c15f5","date":1547007782,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#constructChain(UpdateRequestProcessorChain,ProcessorInfo,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#constructChain(UpdateRequestProcessorChain,ProcessorInfo,SolrCore).mjava","sourceNew":"  public static UpdateRequestProcessorChain constructChain(UpdateRequestProcessorChain defaultUrp,\n                                                           ProcessorInfo processorInfo, SolrCore core) {\n    LinkedList<UpdateRequestProcessorFactory> urps = new LinkedList<>(defaultUrp.chain);\n    List<UpdateRequestProcessorFactory> p = getReqProcessors(processorInfo.processor, core);\n    List<UpdateRequestProcessorFactory> post = getReqProcessors(processorInfo.postProcessor, core);\n    //processor are tried to be inserted before LogUpdateprocessor+DistributedUpdateProcessor\n    insertBefore(urps, p, DistributedUpdateProcessorFactory.class, 0);\n    //port-processor is tried to be inserted before RunUpdateProcessor\n    insertBefore(urps, post, RunUpdateProcessorFactory.class, urps.size() - 1);\n    UpdateRequestProcessorChain result = new UpdateRequestProcessorChain(urps, core);\n    if (log.isDebugEnabled()) {\n      ArrayList<String> names = new ArrayList<>(urps.size());\n      for (UpdateRequestProcessorFactory urp : urps) names.add(urp.getClass().getSimpleName());\n      log.debug(\"New dynamic chain constructed : \" + StrUtils.join(names, '>'));\n    }\n    return result;\n  }\n\n","sourceOld":"  public static UpdateRequestProcessorChain constructChain(UpdateRequestProcessorChain defaultUrp,\n                                                           ProcessorInfo processorInfo, SolrCore core) {\n    LinkedList<UpdateRequestProcessorFactory> urps = new LinkedList<>(defaultUrp.chain);\n    List<UpdateRequestProcessorFactory> p = getReqProcessors(processorInfo.processor, core);\n    List<UpdateRequestProcessorFactory> post = getReqProcessors(processorInfo.postProcessor, core);\n    //processor are tried to be inserted before LogUpdateprocessor+DistributedUpdateProcessor\n    insertBefore(urps, p, DistributedUpdateProcessorFactory.class, 0);\n    //port-processor is tried to be inserted before RunUpdateProcessor\n    insertBefore(urps, post, RunUpdateProcessorFactory.class, urps.size() - 1);\n    UpdateRequestProcessorChain result = new UpdateRequestProcessorChain(urps, core);\n    if (log.isInfoEnabled()) {\n      ArrayList<String> names = new ArrayList<>(urps.size());\n      for (UpdateRequestProcessorFactory urp : urps) names.add(urp.getClass().getSimpleName());\n      log.debug(\"New dynamic chain constructed : \" + StrUtils.join(names, '>'));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"740d649f013f07efbeb73ca854f106c60166e7c0","date":1587431295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#constructChain(UpdateRequestProcessorChain,ProcessorInfo,SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/UpdateRequestProcessorChain#constructChain(UpdateRequestProcessorChain,ProcessorInfo,SolrCore).mjava","sourceNew":"  public static UpdateRequestProcessorChain constructChain(UpdateRequestProcessorChain defaultUrp,\n                                                           ProcessorInfo processorInfo, SolrCore core) {\n    LinkedList<UpdateRequestProcessorFactory> urps = new LinkedList<>(defaultUrp.chain);\n    List<UpdateRequestProcessorFactory> p = getReqProcessors(processorInfo.processor, core);\n    List<UpdateRequestProcessorFactory> post = getReqProcessors(processorInfo.postProcessor, core);\n    //processor are tried to be inserted before LogUpdateprocessor+DistributedUpdateProcessor\n    insertBefore(urps, p, DistributedUpdateProcessorFactory.class, 0);\n    //port-processor is tried to be inserted before RunUpdateProcessor\n    insertBefore(urps, post, RunUpdateProcessorFactory.class, urps.size() - 1);\n    UpdateRequestProcessorChain result = new UpdateRequestProcessorChain(urps, core);\n    if (log.isDebugEnabled()) {\n      ArrayList<String> names = new ArrayList<>(urps.size());\n      for (UpdateRequestProcessorFactory urp : urps) names.add(urp.getClass().getSimpleName());\n      if (log.isDebugEnabled()) {\n        log.debug(\"New dynamic chain constructed : {}\", StrUtils.join(names, '>'));\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  public static UpdateRequestProcessorChain constructChain(UpdateRequestProcessorChain defaultUrp,\n                                                           ProcessorInfo processorInfo, SolrCore core) {\n    LinkedList<UpdateRequestProcessorFactory> urps = new LinkedList<>(defaultUrp.chain);\n    List<UpdateRequestProcessorFactory> p = getReqProcessors(processorInfo.processor, core);\n    List<UpdateRequestProcessorFactory> post = getReqProcessors(processorInfo.postProcessor, core);\n    //processor are tried to be inserted before LogUpdateprocessor+DistributedUpdateProcessor\n    insertBefore(urps, p, DistributedUpdateProcessorFactory.class, 0);\n    //port-processor is tried to be inserted before RunUpdateProcessor\n    insertBefore(urps, post, RunUpdateProcessorFactory.class, urps.size() - 1);\n    UpdateRequestProcessorChain result = new UpdateRequestProcessorChain(urps, core);\n    if (log.isDebugEnabled()) {\n      ArrayList<String> names = new ArrayList<>(urps.size());\n      for (UpdateRequestProcessorFactory urp : urps) names.add(urp.getClass().getSimpleName());\n      log.debug(\"New dynamic chain constructed : \" + StrUtils.join(names, '>'));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3ee01ed2bbdbfebcda94054cb39b4fac5f06a3bd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3ee01ed2bbdbfebcda94054cb39b4fac5f06a3bd"],"740d649f013f07efbeb73ca854f106c60166e7c0":["fb5fe1ea1e20c7450be523c41001a625ea3c15f5"],"fb5fe1ea1e20c7450be523c41001a625ea3c15f5":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"0d62172dd2fc1195c7e475550ac394a9948a18ae":["3ee01ed2bbdbfebcda94054cb39b4fac5f06a3bd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["3ee01ed2bbdbfebcda94054cb39b4fac5f06a3bd","0d62172dd2fc1195c7e475550ac394a9948a18ae"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["3ee01ed2bbdbfebcda94054cb39b4fac5f06a3bd","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["740d649f013f07efbeb73ca854f106c60166e7c0"]},"commit2Childs":{"3ee01ed2bbdbfebcda94054cb39b4fac5f06a3bd":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0d62172dd2fc1195c7e475550ac394a9948a18ae","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"740d649f013f07efbeb73ca854f106c60166e7c0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fb5fe1ea1e20c7450be523c41001a625ea3c15f5":["740d649f013f07efbeb73ca854f106c60166e7c0"],"0d62172dd2fc1195c7e475550ac394a9948a18ae":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3ee01ed2bbdbfebcda94054cb39b4fac5f06a3bd","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["fb5fe1ea1e20c7450be523c41001a625ea3c15f5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}