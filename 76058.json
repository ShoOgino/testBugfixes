{"path":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testLongEncode().mjava","commits":[{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testLongEncode().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestDimensionalRangeQuery#testLongEncode().mjava","sourceNew":"  public void testLongEncode() {\n    for(int i=0;i<10000;i++) {\n      long v = random().nextLong();\n      byte[] tmp = new byte[8];\n      NumericUtils.longToBytes(v, tmp, 0);\n      long v2 = NumericUtils.bytesToLong(tmp, 0);\n      assertEquals(\"got bytes=\" + Arrays.toString(tmp), v, v2);\n    }\n  }\n\n","sourceOld":"  public void testLongEncode() {\n    for(int i=0;i<10000;i++) {\n      long v = random().nextLong();\n      byte[] tmp = new byte[8];\n      NumericUtils.longToBytes(v, tmp, 0);\n      long v2 = NumericUtils.bytesToLong(tmp, 0);\n      assertEquals(\"got bytes=\" + Arrays.toString(tmp), v, v2);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0e7cdd0facd912df00ec53365f98e7c54d6c9bb","date":1457059932,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testLongEncode().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testLongEncode().mjava","sourceNew":"  public void testLongEncode() {\n    for(int i=0;i<10000;i++) {\n      long v = random().nextLong();\n      byte[] tmp = new byte[8];\n      NumericUtils.longToSortableBytes(v, tmp, 0);\n      long v2 = NumericUtils.sortableBytesToLong(tmp, 0);\n      assertEquals(\"got bytes=\" + Arrays.toString(tmp), v, v2);\n    }\n  }\n\n","sourceOld":"  public void testLongEncode() {\n    for(int i=0;i<10000;i++) {\n      long v = random().nextLong();\n      byte[] tmp = new byte[8];\n      NumericUtils.longToBytes(v, tmp, 0);\n      long v2 = NumericUtils.bytesToLong(tmp, 0);\n      assertEquals(\"got bytes=\" + Arrays.toString(tmp), v, v2);\n    }\n  }\n\n","bugFix":["770342641f7b505eaa8dccdc666158bff2419109"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testLongEncode().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testLongEncode().mjava","sourceNew":"  public void testLongEncode() {\n    for(int i=0;i<10000;i++) {\n      long v = random().nextLong();\n      byte[] tmp = new byte[8];\n      NumericUtils.longToSortableBytes(v, tmp, 0);\n      long v2 = NumericUtils.sortableBytesToLong(tmp, 0);\n      assertEquals(\"got bytes=\" + Arrays.toString(tmp), v, v2);\n    }\n  }\n\n","sourceOld":"  public void testLongEncode() {\n    for(int i=0;i<10000;i++) {\n      long v = random().nextLong();\n      byte[] tmp = new byte[8];\n      NumericUtils.longToBytes(v, tmp, 0);\n      long v2 = NumericUtils.bytesToLong(tmp, 0);\n      assertEquals(\"got bytes=\" + Arrays.toString(tmp), v, v2);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cab7a79353f33d1a94cd307bf33aa5148601ebe6","a0e7cdd0facd912df00ec53365f98e7c54d6c9bb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"a0e7cdd0facd912df00ec53365f98e7c54d6c9bb":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"]},"commit2Childs":{"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","a0e7cdd0facd912df00ec53365f98e7c54d6c9bb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7cdd0facd912df00ec53365f98e7c54d6c9bb":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}