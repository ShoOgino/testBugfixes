{"path":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessor#newUpdateComparePasses(Comparable,Comparable,String).mjava","commits":[{"id":"31b9d540ce892a94ad2ad89f9b9cddc9180b6c15","date":1523556268,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessor#newUpdateComparePasses(Comparable,Comparable,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Given two comparable user versions, returns whether the new version is acceptable\n   * to replace the old version.\n   * @param newUserVersion User-specified version on the new version of the document\n   * @param oldUserVersion User-specified version on the old version of the document\n   * @param userVersionFieldName Field name of the user versions being compared\n   * @return True if acceptable, false if not.\n   */\n  protected boolean newUpdateComparePasses(Comparable newUserVersion, Comparable oldUserVersion, String userVersionFieldName) {\n    return newUserVersion.compareTo(oldUserVersion) > 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0f4b03a7701ad6256c4b8946243ae1981931a28","date":1527108277,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessor#newUpdateComparePasses(Comparable,Comparable,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessor#newUpdateComparePasses(Comparable,Comparable,String).mjava","sourceNew":"  /**\n   * Given two comparable user versions, returns whether the new version is acceptable\n   * to replace the old version.\n   * @param newUserVersion User-specified version on the new version of the document\n   * @param oldUserVersion User-specified version on the old version of the document\n   * @param userVersionFieldName Field name of the user versions being compared\n   * @return True if acceptable, false if not.\n   */\n  protected boolean newUpdateComparePasses(Comparable newUserVersion, Comparable oldUserVersion, String userVersionFieldName) {\n    return oldUserVersion.compareTo(newUserVersion) < 0;\n  }\n\n","sourceOld":"  /**\n   * Given two comparable user versions, returns whether the new version is acceptable\n   * to replace the old version.\n   * @param newUserVersion User-specified version on the new version of the document\n   * @param oldUserVersion User-specified version on the old version of the document\n   * @param userVersionFieldName Field name of the user versions being compared\n   * @return True if acceptable, false if not.\n   */\n  protected boolean newUpdateComparePasses(Comparable newUserVersion, Comparable oldUserVersion, String userVersionFieldName) {\n    return newUserVersion.compareTo(oldUserVersion) > 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"018a36ff4088cb91ab12cbe44f696d81d1fadd77","date":1591657414,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessor#newUpdateComparePasses(Comparable,Comparable,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessor#newUpdateComparePasses(Comparable,Comparable,String).mjava","sourceNew":"  /**\n   * Given two comparable user versions, returns whether the new version is acceptable\n   * to replace the old version.\n   * @param newUserVersion User-specified version on the new version of the document\n   * @param oldUserVersion User-specified version on the old version of the document\n   * @param userVersionFieldName Field name of the user versions being compared\n   * @return True if acceptable, false if not.\n   */\n  @SuppressWarnings({\"unchecked\"})\n  protected boolean newUpdateComparePasses(@SuppressWarnings({\"rawtypes\"})Comparable newUserVersion,\n                                           @SuppressWarnings({\"rawtypes\"})Comparable oldUserVersion, String userVersionFieldName) {\n    return oldUserVersion.compareTo(newUserVersion) < 0;\n  }\n\n","sourceOld":"  /**\n   * Given two comparable user versions, returns whether the new version is acceptable\n   * to replace the old version.\n   * @param newUserVersion User-specified version on the new version of the document\n   * @param oldUserVersion User-specified version on the old version of the document\n   * @param userVersionFieldName Field name of the user versions being compared\n   * @return True if acceptable, false if not.\n   */\n  protected boolean newUpdateComparePasses(Comparable newUserVersion, Comparable oldUserVersion, String userVersionFieldName) {\n    return oldUserVersion.compareTo(newUserVersion) < 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"018a36ff4088cb91ab12cbe44f696d81d1fadd77":["d0f4b03a7701ad6256c4b8946243ae1981931a28"],"d0f4b03a7701ad6256c4b8946243ae1981931a28":["31b9d540ce892a94ad2ad89f9b9cddc9180b6c15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"31b9d540ce892a94ad2ad89f9b9cddc9180b6c15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["018a36ff4088cb91ab12cbe44f696d81d1fadd77"]},"commit2Childs":{"018a36ff4088cb91ab12cbe44f696d81d1fadd77":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0f4b03a7701ad6256c4b8946243ae1981931a28":["018a36ff4088cb91ab12cbe44f696d81d1fadd77"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["31b9d540ce892a94ad2ad89f9b9cddc9180b6c15"],"31b9d540ce892a94ad2ad89f9b9cddc9180b6c15":["d0f4b03a7701ad6256c4b8946243ae1981931a28"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}