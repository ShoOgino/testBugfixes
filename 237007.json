{"path":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#addAlias(String,float,Map[String,Float]).mjava","commits":[{"id":"c7e79e31f55cbb444e3023d430a340658755aa31","date":1357666399,"type":1,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#addAlias(String,float,Map[String,Float]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser[ExtendedDismaxQParserPlugin].ExtendedSolrQueryParser#addAlias(String,float,Map[String,Float]).mjava","sourceNew":"    /**\n     * Add an alias to this query parser.\n     *\n     * @param field the field name that should trigger alias mapping\n     * @param fieldBoosts the mapping from fieldname to boost value that\n     *                    should be used to build up the clauses of the\n     *                    DisjunctionMaxQuery.\n     * @param tiebreaker to the tiebreaker to be used in the\n     *                   DisjunctionMaxQuery\n     * @see SolrPluginUtils#parseFieldBoosts\n     */\n    public void addAlias(String field, float tiebreaker,\n        Map<String,Float> fieldBoosts) {\n      Alias a = new Alias();\n      a.tie = tiebreaker;\n      a.fields = fieldBoosts;\n      aliases.put(field, a);\n    }\n\n","sourceOld":"    /**\n     * Add an alias to this query parser.\n     *\n     * @param field the field name that should trigger alias mapping\n     * @param fieldBoosts the mapping from fieldname to boost value that\n     *                    should be used to build up the clauses of the\n     *                    DisjunctionMaxQuery.\n     * @param tiebreaker to the tiebreaker to be used in the\n     *                   DisjunctionMaxQuery\n     * @see SolrPluginUtils#parseFieldBoosts\n     */\n    public void addAlias(String field, float tiebreaker,\n                         Map<String,Float> fieldBoosts) {\n\n      Alias a = new Alias();\n      a.tie = tiebreaker;\n      a.fields = fieldBoosts;\n      aliases.put(field, a);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#addAlias(String,float,Map[String,Float]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser[ExtendedDismaxQParserPlugin].ExtendedSolrQueryParser#addAlias(String,float,Map[String,Float]).mjava","sourceNew":"    /**\n     * Add an alias to this query parser.\n     *\n     * @param field the field name that should trigger alias mapping\n     * @param fieldBoosts the mapping from fieldname to boost value that\n     *                    should be used to build up the clauses of the\n     *                    DisjunctionMaxQuery.\n     * @param tiebreaker to the tiebreaker to be used in the\n     *                   DisjunctionMaxQuery\n     * @see SolrPluginUtils#parseFieldBoosts\n     */\n    public void addAlias(String field, float tiebreaker,\n        Map<String,Float> fieldBoosts) {\n      Alias a = new Alias();\n      a.tie = tiebreaker;\n      a.fields = fieldBoosts;\n      aliases.put(field, a);\n    }\n\n","sourceOld":"    /**\n     * Add an alias to this query parser.\n     *\n     * @param field the field name that should trigger alias mapping\n     * @param fieldBoosts the mapping from fieldname to boost value that\n     *                    should be used to build up the clauses of the\n     *                    DisjunctionMaxQuery.\n     * @param tiebreaker to the tiebreaker to be used in the\n     *                   DisjunctionMaxQuery\n     * @see SolrPluginUtils#parseFieldBoosts\n     */\n    public void addAlias(String field, float tiebreaker,\n                         Map<String,Float> fieldBoosts) {\n\n      Alias a = new Alias();\n      a.tie = tiebreaker;\n      a.fields = fieldBoosts;\n      aliases.put(field, a);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c7e79e31f55cbb444e3023d430a340658755aa31":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c7e79e31f55cbb444e3023d430a340658755aa31"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c7e79e31f55cbb444e3023d430a340658755aa31"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7e79e31f55cbb444e3023d430a340658755aa31","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"c7e79e31f55cbb444e3023d430a340658755aa31":["4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}