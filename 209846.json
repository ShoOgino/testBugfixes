{"path":"solr/core/src/java/org/apache/solr/uninverting/FieldCache#getDocTermOrds(LeafReader,String,BytesRef).mjava","commits":[{"id":"a076c3c721f685b7559308fdc2cd72d91bba67e5","date":1464168992,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/FieldCache#getDocTermOrds(LeafReader,String,BytesRef).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCache#getDocTermOrds(LeafReader,String,BytesRef).mjava","sourceNew":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is found, reads the term values\n   * in <code>field</code> and returns a {@link DocTermOrds} instance, providing a method to retrieve\n   * the terms (as ords) per document.\n   *\n   * @param reader  Used to build a {@link DocTermOrds} instance\n   * @param field   Which field contains the strings.\n   * @param prefix  prefix for a subset of the terms which should be uninverted. Can be null or\n   *                {@link #INT32_TERM_PREFIX} or {@link #INT64_TERM_PREFIX}\n   *                \n   * @return a {@link DocTermOrds} instance\n   * @throws IOException  If any error occurs.\n   */\n  public SortedSetDocValues getDocTermOrds(LeafReader reader, String field, BytesRef prefix) throws IOException;\n\n","sourceOld":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is found, reads the term values\n   * in <code>field</code> and returns a {@link DocTermOrds} instance, providing a method to retrieve\n   * the terms (as ords) per document.\n   *\n   * @param reader  Used to build a {@link DocTermOrds} instance\n   * @param field   Which field contains the strings.\n   * @param prefix  prefix for a subset of the terms which should be uninverted. Can be null or\n   *                {@link #INT32_TERM_PREFIX} or {@link #INT64_TERM_PREFIX}\n   *                \n   * @return a {@link DocTermOrds} instance\n   * @throws IOException  If any error occurs.\n   */\n  public SortedSetDocValues getDocTermOrds(LeafReader reader, String field, BytesRef prefix) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e121d43b5a10f2df530f406f935102656e9c4e8","date":1464198131,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/FieldCache#getDocTermOrds(LeafReader,String,BytesRef).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCache#getDocTermOrds(LeafReader,String,BytesRef).mjava","sourceNew":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is found, reads the term values\n   * in <code>field</code> and returns a {@link DocTermOrds} instance, providing a method to retrieve\n   * the terms (as ords) per document.\n   *\n   * @param reader  Used to build a {@link DocTermOrds} instance\n   * @param field   Which field contains the strings.\n   * @param prefix  prefix for a subset of the terms which should be uninverted. Can be null or\n   *                {@link #INT32_TERM_PREFIX} or {@link #INT64_TERM_PREFIX}\n   *                \n   * @return a {@link DocTermOrds} instance\n   * @throws IOException  If any error occurs.\n   */\n  public SortedSetDocValues getDocTermOrds(LeafReader reader, String field, BytesRef prefix) throws IOException;\n\n","sourceOld":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is found, reads the term values\n   * in <code>field</code> and returns a {@link DocTermOrds} instance, providing a method to retrieve\n   * the terms (as ords) per document.\n   *\n   * @param reader  Used to build a {@link DocTermOrds} instance\n   * @param field   Which field contains the strings.\n   * @param prefix  prefix for a subset of the terms which should be uninverted. Can be null or\n   *                {@link #INT32_TERM_PREFIX} or {@link #INT64_TERM_PREFIX}\n   *                \n   * @return a {@link DocTermOrds} instance\n   * @throws IOException  If any error occurs.\n   */\n  public SortedSetDocValues getDocTermOrds(LeafReader reader, String field, BytesRef prefix) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83870855d82aba6819217abeff5a40779dbb28b4","date":1464291012,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/FieldCache#getDocTermOrds(LeafReader,String,BytesRef).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCache#getDocTermOrds(LeafReader,String,BytesRef).mjava","sourceNew":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is found, reads the term values\n   * in <code>field</code> and returns a {@link DocTermOrds} instance, providing a method to retrieve\n   * the terms (as ords) per document.\n   *\n   * @param reader  Used to build a {@link DocTermOrds} instance\n   * @param field   Which field contains the strings.\n   * @param prefix  prefix for a subset of the terms which should be uninverted. Can be null or\n   *                {@link #INT32_TERM_PREFIX} or {@link #INT64_TERM_PREFIX}\n   *                \n   * @return a {@link DocTermOrds} instance\n   * @throws IOException  If any error occurs.\n   */\n  public SortedSetDocValues getDocTermOrds(LeafReader reader, String field, BytesRef prefix) throws IOException;\n\n","sourceOld":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is found, reads the term values\n   * in <code>field</code> and returns a {@link DocTermOrds} instance, providing a method to retrieve\n   * the terms (as ords) per document.\n   *\n   * @param reader  Used to build a {@link DocTermOrds} instance\n   * @param field   Which field contains the strings.\n   * @param prefix  prefix for a subset of the terms which should be uninverted. Can be null or\n   *                {@link #INT32_TERM_PREFIX} or {@link #INT64_TERM_PREFIX}\n   *                \n   * @return a {@link DocTermOrds} instance\n   * @throws IOException  If any error occurs.\n   */\n  public SortedSetDocValues getDocTermOrds(LeafReader reader, String field, BytesRef prefix) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/FieldCache#getDocTermOrds(LeafReader,String,BytesRef).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCache#getDocTermOrds(LeafReader,String,BytesRef).mjava","sourceNew":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is found, reads the term values\n   * in <code>field</code> and returns a {@link DocTermOrds} instance, providing a method to retrieve\n   * the terms (as ords) per document.\n   *\n   * @param reader  Used to build a {@link DocTermOrds} instance\n   * @param field   Which field contains the strings.\n   * @param prefix  prefix for a subset of the terms which should be uninverted. Can be null or\n   *                {@link #INT32_TERM_PREFIX} or {@link #INT64_TERM_PREFIX}\n   *                \n   * @return a {@link DocTermOrds} instance\n   * @throws IOException  If any error occurs.\n   */\n  public SortedSetDocValues getDocTermOrds(LeafReader reader, String field, BytesRef prefix) throws IOException;\n\n","sourceOld":"  /**\n   * Checks the internal cache for an appropriate entry, and if none is found, reads the term values\n   * in <code>field</code> and returns a {@link DocTermOrds} instance, providing a method to retrieve\n   * the terms (as ords) per document.\n   *\n   * @param reader  Used to build a {@link DocTermOrds} instance\n   * @param field   Which field contains the strings.\n   * @param prefix  prefix for a subset of the terms which should be uninverted. Can be null or\n   *                {@link #INT32_TERM_PREFIX} or {@link #INT64_TERM_PREFIX}\n   *                \n   * @return a {@link DocTermOrds} instance\n   * @throws IOException  If any error occurs.\n   */\n  public SortedSetDocValues getDocTermOrds(LeafReader reader, String field, BytesRef prefix) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a076c3c721f685b7559308fdc2cd72d91bba67e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83870855d82aba6819217abeff5a40779dbb28b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0e121d43b5a10f2df530f406f935102656e9c4e8"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0e121d43b5a10f2df530f406f935102656e9c4e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e121d43b5a10f2df530f406f935102656e9c4e8"]},"commit2Childs":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a076c3c721f685b7559308fdc2cd72d91bba67e5","0e121d43b5a10f2df530f406f935102656e9c4e8","83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"83870855d82aba6819217abeff5a40779dbb28b4":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}