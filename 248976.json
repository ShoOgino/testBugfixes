{"path":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    initAutomata(editDistance);\n    if (automata != null && editDistance < automata.size()) {\n      return new AutomatonFuzzyTermsEnum(automata.get(editDistance), term,\n          reader, minSimilarity, runAutomata.subList(0, editDistance + 1)\n              .toArray(new RunAutomaton[0]), lastTerm);\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acb0ee59cc50caf85402e92d148fdb2af61bc19","date":1272929037,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","sourceNew":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    initAutomata(editDistance);\n    if (runAutomata != null && editDistance < runAutomata.size()) {\n      return new AutomatonFuzzyTermsEnum(runAutomata.subList(0, editDistance + 1)\n          .toArray(new ByteRunAutomaton[0]), lastTerm);\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    initAutomata(editDistance);\n    if (automata != null && editDistance < automata.size()) {\n      return new AutomatonFuzzyTermsEnum(automata.get(editDistance), term,\n          reader, minSimilarity, runAutomata.subList(0, editDistance + 1)\n              .toArray(new RunAutomaton[0]), lastTerm);\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee442305cb676e72c58d48df25e052c4602fc7c1","date":1287577314,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","sourceNew":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<ByteRunAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      return new AutomatonFuzzyTermsEnum(runAutomata.subList(0, editDistance + 1)\n          .toArray(new ByteRunAutomaton[editDistance + 1]), lastTerm);\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    initAutomata(editDistance);\n    if (runAutomata != null && editDistance < runAutomata.size()) {\n      return new AutomatonFuzzyTermsEnum(runAutomata.subList(0, editDistance + 1)\n          .toArray(new ByteRunAutomaton[0]), lastTerm);\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":["95f7ab6c9bc005d456da65d8d74c5338ffc031aa"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","sourceNew":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<ByteRunAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      return new AutomatonFuzzyTermsEnum(runAutomata.subList(0, editDistance + 1)\n          .toArray(new ByteRunAutomaton[editDistance + 1]), lastTerm);\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    initAutomata(editDistance);\n    if (runAutomata != null && editDistance < runAutomata.size()) {\n      return new AutomatonFuzzyTermsEnum(runAutomata.subList(0, editDistance + 1)\n          .toArray(new ByteRunAutomaton[0]), lastTerm);\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","sourceNew":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<ByteRunAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      return new AutomatonFuzzyTermsEnum(runAutomata.subList(0, editDistance + 1)\n          .toArray(new ByteRunAutomaton[editDistance + 1]), lastTerm);\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    initAutomata(editDistance);\n    if (runAutomata != null && editDistance < runAutomata.size()) {\n      return new AutomatonFuzzyTermsEnum(runAutomata.subList(0, editDistance + 1)\n          .toArray(new ByteRunAutomaton[0]), lastTerm);\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"95f7ab6c9bc005d456da65d8d74c5338ffc031aa","date":1297016220,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","sourceNew":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      return new AutomatonFuzzyTermsEnum(runAutomata.subList(0, editDistance + 1)\n          .toArray(new CompiledAutomaton[editDistance + 1]), lastTerm);\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<ByteRunAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      return new AutomatonFuzzyTermsEnum(runAutomata.subList(0, editDistance + 1)\n          .toArray(new ByteRunAutomaton[editDistance + 1]), lastTerm);\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":["ee442305cb676e72c58d48df25e052c4602fc7c1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","sourceNew":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      return new AutomatonFuzzyTermsEnum(runAutomata.subList(0, editDistance + 1)\n          .toArray(new CompiledAutomaton[editDistance + 1]), lastTerm);\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<ByteRunAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      return new AutomatonFuzzyTermsEnum(runAutomata.subList(0, editDistance + 1)\n          .toArray(new ByteRunAutomaton[editDistance + 1]), lastTerm);\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","sourceNew":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      return new AutomatonFuzzyTermsEnum(runAutomata.subList(0, editDistance + 1)\n          .toArray(new CompiledAutomaton[editDistance + 1]), lastTerm);\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<ByteRunAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      return new AutomatonFuzzyTermsEnum(runAutomata.subList(0, editDistance + 1)\n          .toArray(new ByteRunAutomaton[editDistance + 1]), lastTerm);\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","sourceNew":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      //if (BlockTreeTermsWriter.DEBUG) System.out.println(\"FuzzyTE.getAEnum: ed=\" + editDistance + \" lastTerm=\" + (lastTerm==null ? \"null\" : lastTerm.utf8ToString()));\n      final CompiledAutomaton compiled = runAutomata.get(editDistance);\n      return new AutomatonFuzzyTermsEnum(terms.intersect(compiled, lastTerm == null ? null : compiled.floor(lastTerm, new BytesRef())),\n                                         runAutomata.subList(0, editDistance + 1).toArray(new CompiledAutomaton[editDistance + 1]));\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      return new AutomatonFuzzyTermsEnum(runAutomata.subList(0, editDistance + 1)\n          .toArray(new CompiledAutomaton[editDistance + 1]), lastTerm);\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FuzzyTermsEnum#getAutomatonEnum(int,BytesRef).mjava","sourceNew":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      //if (BlockTreeTermsWriter.DEBUG) System.out.println(\"FuzzyTE.getAEnum: ed=\" + editDistance + \" lastTerm=\" + (lastTerm==null ? \"null\" : lastTerm.utf8ToString()));\n      final CompiledAutomaton compiled = runAutomata.get(editDistance);\n      return new AutomatonFuzzyTermsEnum(terms.intersect(compiled, lastTerm == null ? null : compiled.floor(lastTerm, new BytesRef())),\n                                         runAutomata.subList(0, editDistance + 1).toArray(new CompiledAutomaton[editDistance + 1]));\n    } else {\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n   * return an automata-based enum for matching up to editDistance from\n   * lastTerm, if possible\n   */\n  private TermsEnum getAutomatonEnum(int editDistance, BytesRef lastTerm)\n      throws IOException {\n    final List<CompiledAutomaton> runAutomata = initAutomata(editDistance);\n    if (editDistance < runAutomata.size()) {\n      //if (BlockTreeTermsWriter.DEBUG) System.out.println(\"FuzzyTE.getAEnum: ed=\" + editDistance + \" lastTerm=\" + (lastTerm==null ? \"null\" : lastTerm.utf8ToString()));\n      final CompiledAutomaton compiled = runAutomata.get(editDistance);\n      return new AutomatonFuzzyTermsEnum(terms.intersect(compiled, lastTerm == null ? null : compiled.floor(lastTerm, new BytesRef())),\n                                         runAutomata.subList(0, editDistance + 1).toArray(new CompiledAutomaton[editDistance + 1]));\n    } else {\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["95f7ab6c9bc005d456da65d8d74c5338ffc031aa"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","95f7ab6c9bc005d456da65d8d74c5338ffc031aa"],"5acb0ee59cc50caf85402e92d148fdb2af61bc19":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"95f7ab6c9bc005d456da65d8d74c5338ffc031aa":["ee442305cb676e72c58d48df25e052c4602fc7c1"],"ee442305cb676e72c58d48df25e052c4602fc7c1":["5acb0ee59cc50caf85402e92d148fdb2af61bc19"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5acb0ee59cc50caf85402e92d148fdb2af61bc19","ee442305cb676e72c58d48df25e052c4602fc7c1"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["5acb0ee59cc50caf85402e92d148fdb2af61bc19","ee442305cb676e72c58d48df25e052c4602fc7c1"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","95f7ab6c9bc005d456da65d8d74c5338ffc031aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"5acb0ee59cc50caf85402e92d148fdb2af61bc19":["ee442305cb676e72c58d48df25e052c4602fc7c1","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"95f7ab6c9bc005d456da65d8d74c5338ffc031aa":["60ba444201d2570214b6fcf1d15600dc1a01f548","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"ee442305cb676e72c58d48df25e052c4602fc7c1":["95f7ab6c9bc005d456da65d8d74c5338ffc031aa","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["5acb0ee59cc50caf85402e92d148fdb2af61bc19"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}