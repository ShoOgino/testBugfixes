{"path":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath.\", checked > 10 );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","sourceNew":null,"sourceOld":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath.\", checked > 10 );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","pathOld":"src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","sourceNew":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","sourceOld":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc9dbef22d1a1f53bf0820c020e2ee0772c25d6f","date":1287351053,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","pathOld":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","sourceNew":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  @Ignore(\"meddles with unrelated tests\")\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","sourceOld":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36a5c49d9ce09dbf7596ad148562dcd104649f0a","date":1287415606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","pathOld":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","sourceNew":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","sourceOld":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  @Ignore(\"meddles with unrelated tests\")\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"057119d0666f2a2674ad4bba71baca71cb200801","date":1287510147,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","sourceNew":null,"sourceOld":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9077e792550279352dfaab22b394064dc6c62fc","date":1287510928,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51a098488423afe119af66d62c1894509bf917f8","date":1287742777,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","pathOld":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","sourceNew":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  @Ignore // TODO: reenable once SOLR-2160 is fixed\n  public void testCallMBeanInfo() throws Exception {\n//    Object[] init = org.apache.solr.search.QParserPlugin.standardPlugins;\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n }\n\n","sourceOld":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d83c3273a58ab4cb38b37fe3add4874ccc0018c7","date":1307625088,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","pathOld":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","sourceNew":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","sourceOld":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  @Ignore // TODO: reenable once SOLR-2160 is fixed\n  public void testCallMBeanInfo() throws Exception {\n//    Object[] init = org.apache.solr.search.QParserPlugin.standardPlugins;\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","pathOld":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","sourceNew":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","sourceOld":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","pathOld":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","sourceNew":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","sourceOld":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","pathOld":"solr/src/test/org/apache/solr/SolrInfoMBeanTest#testCallMBeanInfo().mjava","sourceNew":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","sourceOld":"  /**\n   * Gets a list of everything we can find in the classpath and makes sure it has\n   * a name, description, etc...\n   */\n  public void testCallMBeanInfo() throws Exception {\n    List<Class> classes = new ArrayList<Class>();\n    classes.addAll(getClassesForPackage(StandardRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));\n    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));\n   // System.out.println(classes);\n    \n    int checked = 0;\n    for( Class clazz : classes ) {\n      if( SolrInfoMBean.class.isAssignableFrom( clazz ) ) {\n        try {\n          SolrInfoMBean info = (SolrInfoMBean)clazz.newInstance();\n          \n          //System.out.println( info.getClass() );\n          assertNotNull( info.getName() );\n          assertNotNull( info.getDescription() );\n          assertNotNull( info.getSource() );\n          assertNotNull( info.getSourceId() );\n          assertNotNull( info.getVersion() );\n          assertNotNull( info.getCategory() );\n\n          if( info instanceof LRUCache ) {\n            continue;\n          }\n          \n          assertNotNull( info.toString() );\n          // increase code coverage...\n          assertNotNull( info.getDocs() + \"\" );\n          assertNotNull( info.getStatistics()+\"\" );\n          checked++;\n        }\n        catch( InstantiationException ex ) {\n          // expected...\n          //System.out.println( \"unable to initalize: \"+clazz );\n        }\n      }\n    }\n    assertTrue( \"there are at least 10 SolrInfoMBean that should be found in the classpath, found \" + checked, checked > 10 );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bc9dbef22d1a1f53bf0820c020e2ee0772c25d6f":["1da8d55113b689b06716246649de6f62430f15c0"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["a9077e792550279352dfaab22b394064dc6c62fc","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"36a5c49d9ce09dbf7596ad148562dcd104649f0a":["bc9dbef22d1a1f53bf0820c020e2ee0772c25d6f"],"51a098488423afe119af66d62c1894509bf917f8":["1da8d55113b689b06716246649de6f62430f15c0"],"a9077e792550279352dfaab22b394064dc6c62fc":["057119d0666f2a2674ad4bba71baca71cb200801"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a9077e792550279352dfaab22b394064dc6c62fc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"057119d0666f2a2674ad4bba71baca71cb200801":["36a5c49d9ce09dbf7596ad148562dcd104649f0a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a9077e792550279352dfaab22b394064dc6c62fc"],"d83c3273a58ab4cb38b37fe3add4874ccc0018c7":["51a098488423afe119af66d62c1894509bf917f8"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"bc9dbef22d1a1f53bf0820c020e2ee0772c25d6f":["36a5c49d9ce09dbf7596ad148562dcd104649f0a"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"1da8d55113b689b06716246649de6f62430f15c0":["bc9dbef22d1a1f53bf0820c020e2ee0772c25d6f","51a098488423afe119af66d62c1894509bf917f8"],"36a5c49d9ce09dbf7596ad148562dcd104649f0a":["057119d0666f2a2674ad4bba71baca71cb200801"],"51a098488423afe119af66d62c1894509bf917f8":["d83c3273a58ab4cb38b37fe3add4874ccc0018c7"],"a9077e792550279352dfaab22b394064dc6c62fc":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"057119d0666f2a2674ad4bba71baca71cb200801":["a9077e792550279352dfaab22b394064dc6c62fc"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"d83c3273a58ab4cb38b37fe3add4874ccc0018c7":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","d83c3273a58ab4cb38b37fe3add4874ccc0018c7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}