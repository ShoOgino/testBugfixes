{"path":"solr/core/src/test/org/apache/solr/analysis/TestPhoneticFilterFactory#testAlgorithms().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestPhoneticFilterFactory#testAlgorithms().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestPhoneticFilterFactory#testAlgorithms().mjava","sourceNew":"  public void testAlgorithms() throws Exception {\n    assertAlgorithm(\"Metaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"B\", \"bbb\", \"KKK\", \"ccc\", \"ESKS\", \"easgasg\" });\n    assertAlgorithm(\"Metaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"B\", \"KKK\", \"ESKS\" });\n    \n    assertAlgorithm(\"DoubleMetaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"PP\", \"bbb\", \"KK\", \"ccc\", \"ASKS\", \"easgasg\" });\n    assertAlgorithm(\"DoubleMetaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"PP\", \"KK\", \"ASKS\" });\n    \n    assertAlgorithm(\"Soundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"aaa\", \"B000\", \"bbb\", \"C000\", \"ccc\", \"E220\", \"easgasg\" });\n    assertAlgorithm(\"Soundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"B000\", \"C000\", \"E220\" });\n    \n    assertAlgorithm(\"RefinedSoundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"aaa\", \"B1\", \"bbb\", \"C3\", \"ccc\", \"E034034\", \"easgasg\" });\n    assertAlgorithm(\"RefinedSoundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"B1\", \"C3\", \"E034034\" });\n    \n    assertAlgorithm(\"Caverphone\", \"true\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"Darda\", \"KLN1111111\", \"Karleen\", \n          \"TTA1111111\", \"Datha\", \"KLN1111111\", \"Carlene\" });\n    assertAlgorithm(\"Caverphone\", \"false\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"KLN1111111\", \"TTA1111111\", \"KLN1111111\" });\n  }\n\n","sourceOld":"  public void testAlgorithms() throws Exception {\n    assertAlgorithm(\"Metaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"B\", \"bbb\", \"KKK\", \"ccc\", \"ESKS\", \"easgasg\" });\n    assertAlgorithm(\"Metaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"B\", \"KKK\", \"ESKS\" });\n    \n    assertAlgorithm(\"DoubleMetaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"PP\", \"bbb\", \"KK\", \"ccc\", \"ASKS\", \"easgasg\" });\n    assertAlgorithm(\"DoubleMetaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"PP\", \"KK\", \"ASKS\" });\n    \n    assertAlgorithm(\"Soundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"aaa\", \"B000\", \"bbb\", \"C000\", \"ccc\", \"E220\", \"easgasg\" });\n    assertAlgorithm(\"Soundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"B000\", \"C000\", \"E220\" });\n    \n    assertAlgorithm(\"RefinedSoundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"aaa\", \"B1\", \"bbb\", \"C3\", \"ccc\", \"E034034\", \"easgasg\" });\n    assertAlgorithm(\"RefinedSoundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"B1\", \"C3\", \"E034034\" });\n    \n    assertAlgorithm(\"Caverphone\", \"true\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"Darda\", \"KLN1111111\", \"Karleen\", \n          \"TTA1111111\", \"Datha\", \"KLN1111111\", \"Carlene\" });\n    assertAlgorithm(\"Caverphone\", \"false\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"KLN1111111\", \"TTA1111111\", \"KLN1111111\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestPhoneticFilterFactory#testAlgorithms().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestPhoneticFilterFactory#testAlgorithms().mjava","sourceNew":"  public void testAlgorithms() throws Exception {\n    assertAlgorithm(\"Metaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"B\", \"bbb\", \"KKK\", \"ccc\", \"ESKS\", \"easgasg\" });\n    assertAlgorithm(\"Metaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"B\", \"KKK\", \"ESKS\" });\n    \n    assertAlgorithm(\"DoubleMetaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"PP\", \"bbb\", \"KK\", \"ccc\", \"ASKS\", \"easgasg\" });\n    assertAlgorithm(\"DoubleMetaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"PP\", \"KK\", \"ASKS\" });\n    \n    assertAlgorithm(\"Soundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"aaa\", \"B000\", \"bbb\", \"C000\", \"ccc\", \"E220\", \"easgasg\" });\n    assertAlgorithm(\"Soundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"B000\", \"C000\", \"E220\" });\n    \n    assertAlgorithm(\"RefinedSoundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"aaa\", \"B1\", \"bbb\", \"C3\", \"ccc\", \"E034034\", \"easgasg\" });\n    assertAlgorithm(\"RefinedSoundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"B1\", \"C3\", \"E034034\" });\n    \n    assertAlgorithm(\"Caverphone\", \"true\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"Darda\", \"KLN1111111\", \"Karleen\", \n          \"TTA1111111\", \"Datha\", \"KLN1111111\", \"Carlene\" });\n    assertAlgorithm(\"Caverphone\", \"false\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"KLN1111111\", \"TTA1111111\", \"KLN1111111\" });\n  }\n\n","sourceOld":"  public void testAlgorithms() throws Exception {\n    assertAlgorithm(\"Metaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"B\", \"bbb\", \"KKK\", \"ccc\", \"ESKS\", \"easgasg\" });\n    assertAlgorithm(\"Metaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"B\", \"KKK\", \"ESKS\" });\n    \n    assertAlgorithm(\"DoubleMetaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"PP\", \"bbb\", \"KK\", \"ccc\", \"ASKS\", \"easgasg\" });\n    assertAlgorithm(\"DoubleMetaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"PP\", \"KK\", \"ASKS\" });\n    \n    assertAlgorithm(\"Soundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"aaa\", \"B000\", \"bbb\", \"C000\", \"ccc\", \"E220\", \"easgasg\" });\n    assertAlgorithm(\"Soundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"B000\", \"C000\", \"E220\" });\n    \n    assertAlgorithm(\"RefinedSoundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"aaa\", \"B1\", \"bbb\", \"C3\", \"ccc\", \"E034034\", \"easgasg\" });\n    assertAlgorithm(\"RefinedSoundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"B1\", \"C3\", \"E034034\" });\n    \n    assertAlgorithm(\"Caverphone\", \"true\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"Darda\", \"KLN1111111\", \"Karleen\", \n          \"TTA1111111\", \"Datha\", \"KLN1111111\", \"Carlene\" });\n    assertAlgorithm(\"Caverphone\", \"false\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"KLN1111111\", \"TTA1111111\", \"KLN1111111\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestPhoneticFilterFactory#testAlgorithms().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestPhoneticFilterFactory#testAlgorithms().mjava","sourceNew":"  public void testAlgorithms() throws Exception {\n    assertAlgorithm(\"Metaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"B\", \"bbb\", \"KKK\", \"ccc\", \"ESKS\", \"easgasg\" });\n    assertAlgorithm(\"Metaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"B\", \"KKK\", \"ESKS\" });\n    \n    assertAlgorithm(\"DoubleMetaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"PP\", \"bbb\", \"KK\", \"ccc\", \"ASKS\", \"easgasg\" });\n    assertAlgorithm(\"DoubleMetaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"PP\", \"KK\", \"ASKS\" });\n    \n    assertAlgorithm(\"Soundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"aaa\", \"B000\", \"bbb\", \"C000\", \"ccc\", \"E220\", \"easgasg\" });\n    assertAlgorithm(\"Soundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"B000\", \"C000\", \"E220\" });\n    \n    assertAlgorithm(\"RefinedSoundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"aaa\", \"B1\", \"bbb\", \"C3\", \"ccc\", \"E034034\", \"easgasg\" });\n    assertAlgorithm(\"RefinedSoundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"B1\", \"C3\", \"E034034\" });\n    \n    assertAlgorithm(\"Caverphone\", \"true\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"Darda\", \"KLN1111111\", \"Karleen\", \n          \"TTA1111111\", \"Datha\", \"KLN1111111\", \"Carlene\" });\n    assertAlgorithm(\"Caverphone\", \"false\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"KLN1111111\", \"TTA1111111\", \"KLN1111111\" });\n  }\n\n","sourceOld":"  public void testAlgorithms() throws Exception {\n    assertAlgorithm(\"Metaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"B\", \"bbb\", \"KKK\", \"ccc\", \"ESKS\", \"easgasg\" });\n    assertAlgorithm(\"Metaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"B\", \"KKK\", \"ESKS\" });\n    \n    assertAlgorithm(\"DoubleMetaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"PP\", \"bbb\", \"KK\", \"ccc\", \"ASKS\", \"easgasg\" });\n    assertAlgorithm(\"DoubleMetaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"PP\", \"KK\", \"ASKS\" });\n    \n    assertAlgorithm(\"Soundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"aaa\", \"B000\", \"bbb\", \"C000\", \"ccc\", \"E220\", \"easgasg\" });\n    assertAlgorithm(\"Soundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"B000\", \"C000\", \"E220\" });\n    \n    assertAlgorithm(\"RefinedSoundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"aaa\", \"B1\", \"bbb\", \"C3\", \"ccc\", \"E034034\", \"easgasg\" });\n    assertAlgorithm(\"RefinedSoundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"B1\", \"C3\", \"E034034\" });\n    \n    assertAlgorithm(\"Caverphone\", \"true\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"Darda\", \"KLN1111111\", \"Karleen\", \n          \"TTA1111111\", \"Datha\", \"KLN1111111\", \"Carlene\" });\n    assertAlgorithm(\"Caverphone\", \"false\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"KLN1111111\", \"TTA1111111\", \"KLN1111111\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae2cc9c0968d7f98c987726279617b99c53129ed","date":1319936406,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestPhoneticFilterFactory#testAlgorithms().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestPhoneticFilterFactory#testAlgorithms().mjava","sourceNew":"  public void testAlgorithms() throws Exception {\n    assertAlgorithm(\"Metaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"B\", \"bbb\", \"KKK\", \"ccc\", \"ESKS\", \"easgasg\" });\n    assertAlgorithm(\"Metaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"B\", \"KKK\", \"ESKS\" });\n    \n    assertAlgorithm(\"DoubleMetaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"PP\", \"bbb\", \"KK\", \"ccc\", \"ASKS\", \"easgasg\" });\n    assertAlgorithm(\"DoubleMetaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"PP\", \"KK\", \"ASKS\" });\n    \n    assertAlgorithm(\"Soundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"aaa\", \"B000\", \"bbb\", \"C000\", \"ccc\", \"E220\", \"easgasg\" });\n    assertAlgorithm(\"Soundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"B000\", \"C000\", \"E220\" });\n    \n    assertAlgorithm(\"RefinedSoundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"aaa\", \"B1\", \"bbb\", \"C3\", \"ccc\", \"E034034\", \"easgasg\" });\n    assertAlgorithm(\"RefinedSoundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"B1\", \"C3\", \"E034034\" });\n    \n    assertAlgorithm(\"Caverphone\", \"true\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"Darda\", \"KLN1111111\", \"Karleen\", \n          \"TTA1111111\", \"Datha\", \"KLN1111111\", \"Carlene\" });\n    assertAlgorithm(\"Caverphone\", \"false\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"KLN1111111\", \"TTA1111111\", \"KLN1111111\" });\n    \n    assertAlgorithm(\"ColognePhonetic\", \"true\", \"Meier Schmitt Meir Schmidt\",\n        new String[] { \"67\", \"Meier\", \"862\", \"Schmitt\", \n          \"67\", \"Meir\", \"862\", \"Schmidt\" });\n    assertAlgorithm(\"ColognePhonetic\", \"false\", \"Meier Schmitt Meir Schmidt\",\n        new String[] { \"67\", \"862\", \"67\", \"862\" });\n  }\n\n","sourceOld":"  public void testAlgorithms() throws Exception {\n    assertAlgorithm(\"Metaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"B\", \"bbb\", \"KKK\", \"ccc\", \"ESKS\", \"easgasg\" });\n    assertAlgorithm(\"Metaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"B\", \"KKK\", \"ESKS\" });\n    \n    assertAlgorithm(\"DoubleMetaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"PP\", \"bbb\", \"KK\", \"ccc\", \"ASKS\", \"easgasg\" });\n    assertAlgorithm(\"DoubleMetaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"PP\", \"KK\", \"ASKS\" });\n    \n    assertAlgorithm(\"Soundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"aaa\", \"B000\", \"bbb\", \"C000\", \"ccc\", \"E220\", \"easgasg\" });\n    assertAlgorithm(\"Soundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"B000\", \"C000\", \"E220\" });\n    \n    assertAlgorithm(\"RefinedSoundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"aaa\", \"B1\", \"bbb\", \"C3\", \"ccc\", \"E034034\", \"easgasg\" });\n    assertAlgorithm(\"RefinedSoundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"B1\", \"C3\", \"E034034\" });\n    \n    assertAlgorithm(\"Caverphone\", \"true\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"Darda\", \"KLN1111111\", \"Karleen\", \n          \"TTA1111111\", \"Datha\", \"KLN1111111\", \"Carlene\" });\n    assertAlgorithm(\"Caverphone\", \"false\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"KLN1111111\", \"TTA1111111\", \"KLN1111111\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3241e06e642196396b80bb293acd9c0814d079e0","date":1343094999,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/phonetic/src/test/org/apache/lucene/analysis/phonetic/TestPhoneticFilterFactory#testAlgorithms().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestPhoneticFilterFactory#testAlgorithms().mjava","sourceNew":"  public void testAlgorithms() throws Exception {\n    assertAlgorithm(\"Metaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"B\", \"bbb\", \"KKK\", \"ccc\", \"ESKS\", \"easgasg\" });\n    assertAlgorithm(\"Metaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"B\", \"KKK\", \"ESKS\" });\n    \n    assertAlgorithm(\"DoubleMetaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"PP\", \"bbb\", \"KK\", \"ccc\", \"ASKS\", \"easgasg\" });\n    assertAlgorithm(\"DoubleMetaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"PP\", \"KK\", \"ASKS\" });\n    \n    assertAlgorithm(\"Soundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"aaa\", \"B000\", \"bbb\", \"C000\", \"ccc\", \"E220\", \"easgasg\" });\n    assertAlgorithm(\"Soundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"B000\", \"C000\", \"E220\" });\n    \n    assertAlgorithm(\"RefinedSoundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"aaa\", \"B1\", \"bbb\", \"C3\", \"ccc\", \"E034034\", \"easgasg\" });\n    assertAlgorithm(\"RefinedSoundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"B1\", \"C3\", \"E034034\" });\n    \n    assertAlgorithm(\"Caverphone\", \"true\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"Darda\", \"KLN1111111\", \"Karleen\", \n          \"TTA1111111\", \"Datha\", \"KLN1111111\", \"Carlene\" });\n    assertAlgorithm(\"Caverphone\", \"false\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"KLN1111111\", \"TTA1111111\", \"KLN1111111\" });\n    \n    assertAlgorithm(\"ColognePhonetic\", \"true\", \"Meier Schmitt Meir Schmidt\",\n        new String[] { \"67\", \"Meier\", \"862\", \"Schmitt\", \n          \"67\", \"Meir\", \"862\", \"Schmidt\" });\n    assertAlgorithm(\"ColognePhonetic\", \"false\", \"Meier Schmitt Meir Schmidt\",\n        new String[] { \"67\", \"862\", \"67\", \"862\" });\n  }\n\n","sourceOld":"  public void testAlgorithms() throws Exception {\n    assertAlgorithm(\"Metaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"B\", \"bbb\", \"KKK\", \"ccc\", \"ESKS\", \"easgasg\" });\n    assertAlgorithm(\"Metaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"B\", \"KKK\", \"ESKS\" });\n    \n    assertAlgorithm(\"DoubleMetaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"PP\", \"bbb\", \"KK\", \"ccc\", \"ASKS\", \"easgasg\" });\n    assertAlgorithm(\"DoubleMetaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"PP\", \"KK\", \"ASKS\" });\n    \n    assertAlgorithm(\"Soundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"aaa\", \"B000\", \"bbb\", \"C000\", \"ccc\", \"E220\", \"easgasg\" });\n    assertAlgorithm(\"Soundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"B000\", \"C000\", \"E220\" });\n    \n    assertAlgorithm(\"RefinedSoundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"aaa\", \"B1\", \"bbb\", \"C3\", \"ccc\", \"E034034\", \"easgasg\" });\n    assertAlgorithm(\"RefinedSoundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"B1\", \"C3\", \"E034034\" });\n    \n    assertAlgorithm(\"Caverphone\", \"true\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"Darda\", \"KLN1111111\", \"Karleen\", \n          \"TTA1111111\", \"Datha\", \"KLN1111111\", \"Carlene\" });\n    assertAlgorithm(\"Caverphone\", \"false\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"KLN1111111\", \"TTA1111111\", \"KLN1111111\" });\n    \n    assertAlgorithm(\"ColognePhonetic\", \"true\", \"Meier Schmitt Meir Schmidt\",\n        new String[] { \"67\", \"Meier\", \"862\", \"Schmitt\", \n          \"67\", \"Meir\", \"862\", \"Schmidt\" });\n    assertAlgorithm(\"ColognePhonetic\", \"false\", \"Meier Schmitt Meir Schmidt\",\n        new String[] { \"67\", \"862\", \"67\", \"862\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/phonetic/src/test/org/apache/lucene/analysis/phonetic/TestPhoneticFilterFactory#testAlgorithms().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestPhoneticFilterFactory#testAlgorithms().mjava","sourceNew":"  public void testAlgorithms() throws Exception {\n    assertAlgorithm(\"Metaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"B\", \"bbb\", \"KKK\", \"ccc\", \"ESKS\", \"easgasg\" });\n    assertAlgorithm(\"Metaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"B\", \"KKK\", \"ESKS\" });\n    \n    assertAlgorithm(\"DoubleMetaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"PP\", \"bbb\", \"KK\", \"ccc\", \"ASKS\", \"easgasg\" });\n    assertAlgorithm(\"DoubleMetaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"PP\", \"KK\", \"ASKS\" });\n    \n    assertAlgorithm(\"Soundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"aaa\", \"B000\", \"bbb\", \"C000\", \"ccc\", \"E220\", \"easgasg\" });\n    assertAlgorithm(\"Soundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"B000\", \"C000\", \"E220\" });\n    \n    assertAlgorithm(\"RefinedSoundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"aaa\", \"B1\", \"bbb\", \"C3\", \"ccc\", \"E034034\", \"easgasg\" });\n    assertAlgorithm(\"RefinedSoundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"B1\", \"C3\", \"E034034\" });\n    \n    assertAlgorithm(\"Caverphone\", \"true\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"Darda\", \"KLN1111111\", \"Karleen\", \n          \"TTA1111111\", \"Datha\", \"KLN1111111\", \"Carlene\" });\n    assertAlgorithm(\"Caverphone\", \"false\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"KLN1111111\", \"TTA1111111\", \"KLN1111111\" });\n    \n    assertAlgorithm(\"ColognePhonetic\", \"true\", \"Meier Schmitt Meir Schmidt\",\n        new String[] { \"67\", \"Meier\", \"862\", \"Schmitt\", \n          \"67\", \"Meir\", \"862\", \"Schmidt\" });\n    assertAlgorithm(\"ColognePhonetic\", \"false\", \"Meier Schmitt Meir Schmidt\",\n        new String[] { \"67\", \"862\", \"67\", \"862\" });\n  }\n\n","sourceOld":"  public void testAlgorithms() throws Exception {\n    assertAlgorithm(\"Metaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"B\", \"bbb\", \"KKK\", \"ccc\", \"ESKS\", \"easgasg\" });\n    assertAlgorithm(\"Metaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"B\", \"KKK\", \"ESKS\" });\n    \n    assertAlgorithm(\"DoubleMetaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"PP\", \"bbb\", \"KK\", \"ccc\", \"ASKS\", \"easgasg\" });\n    assertAlgorithm(\"DoubleMetaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"PP\", \"KK\", \"ASKS\" });\n    \n    assertAlgorithm(\"Soundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"aaa\", \"B000\", \"bbb\", \"C000\", \"ccc\", \"E220\", \"easgasg\" });\n    assertAlgorithm(\"Soundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"B000\", \"C000\", \"E220\" });\n    \n    assertAlgorithm(\"RefinedSoundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"aaa\", \"B1\", \"bbb\", \"C3\", \"ccc\", \"E034034\", \"easgasg\" });\n    assertAlgorithm(\"RefinedSoundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"B1\", \"C3\", \"E034034\" });\n    \n    assertAlgorithm(\"Caverphone\", \"true\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"Darda\", \"KLN1111111\", \"Karleen\", \n          \"TTA1111111\", \"Datha\", \"KLN1111111\", \"Carlene\" });\n    assertAlgorithm(\"Caverphone\", \"false\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"KLN1111111\", \"TTA1111111\", \"KLN1111111\" });\n    \n    assertAlgorithm(\"ColognePhonetic\", \"true\", \"Meier Schmitt Meir Schmidt\",\n        new String[] { \"67\", \"Meier\", \"862\", \"Schmitt\", \n          \"67\", \"Meir\", \"862\", \"Schmidt\" });\n    assertAlgorithm(\"ColognePhonetic\", \"false\", \"Meier Schmitt Meir Schmidt\",\n        new String[] { \"67\", \"862\", \"67\", \"862\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/phonetic/src/test/org/apache/lucene/analysis/phonetic/TestPhoneticFilterFactory#testAlgorithms().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestPhoneticFilterFactory#testAlgorithms().mjava","sourceNew":"  public void testAlgorithms() throws Exception {\n    assertAlgorithm(\"Metaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"B\", \"bbb\", \"KKK\", \"ccc\", \"ESKS\", \"easgasg\" });\n    assertAlgorithm(\"Metaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"B\", \"KKK\", \"ESKS\" });\n    \n    assertAlgorithm(\"DoubleMetaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"PP\", \"bbb\", \"KK\", \"ccc\", \"ASKS\", \"easgasg\" });\n    assertAlgorithm(\"DoubleMetaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"PP\", \"KK\", \"ASKS\" });\n    \n    assertAlgorithm(\"Soundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"aaa\", \"B000\", \"bbb\", \"C000\", \"ccc\", \"E220\", \"easgasg\" });\n    assertAlgorithm(\"Soundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"B000\", \"C000\", \"E220\" });\n    \n    assertAlgorithm(\"RefinedSoundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"aaa\", \"B1\", \"bbb\", \"C3\", \"ccc\", \"E034034\", \"easgasg\" });\n    assertAlgorithm(\"RefinedSoundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"B1\", \"C3\", \"E034034\" });\n    \n    assertAlgorithm(\"Caverphone\", \"true\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"Darda\", \"KLN1111111\", \"Karleen\", \n          \"TTA1111111\", \"Datha\", \"KLN1111111\", \"Carlene\" });\n    assertAlgorithm(\"Caverphone\", \"false\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"KLN1111111\", \"TTA1111111\", \"KLN1111111\" });\n    \n    assertAlgorithm(\"ColognePhonetic\", \"true\", \"Meier Schmitt Meir Schmidt\",\n        new String[] { \"67\", \"Meier\", \"862\", \"Schmitt\", \n          \"67\", \"Meir\", \"862\", \"Schmidt\" });\n    assertAlgorithm(\"ColognePhonetic\", \"false\", \"Meier Schmitt Meir Schmidt\",\n        new String[] { \"67\", \"862\", \"67\", \"862\" });\n  }\n\n","sourceOld":"  public void testAlgorithms() throws Exception {\n    assertAlgorithm(\"Metaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"B\", \"bbb\", \"KKK\", \"ccc\", \"ESKS\", \"easgasg\" });\n    assertAlgorithm(\"Metaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"B\", \"KKK\", \"ESKS\" });\n    \n    assertAlgorithm(\"DoubleMetaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"PP\", \"bbb\", \"KK\", \"ccc\", \"ASKS\", \"easgasg\" });\n    assertAlgorithm(\"DoubleMetaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"PP\", \"KK\", \"ASKS\" });\n    \n    assertAlgorithm(\"Soundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"aaa\", \"B000\", \"bbb\", \"C000\", \"ccc\", \"E220\", \"easgasg\" });\n    assertAlgorithm(\"Soundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"B000\", \"C000\", \"E220\" });\n    \n    assertAlgorithm(\"RefinedSoundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"aaa\", \"B1\", \"bbb\", \"C3\", \"ccc\", \"E034034\", \"easgasg\" });\n    assertAlgorithm(\"RefinedSoundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"B1\", \"C3\", \"E034034\" });\n    \n    assertAlgorithm(\"Caverphone\", \"true\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"Darda\", \"KLN1111111\", \"Karleen\", \n          \"TTA1111111\", \"Datha\", \"KLN1111111\", \"Carlene\" });\n    assertAlgorithm(\"Caverphone\", \"false\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"KLN1111111\", \"TTA1111111\", \"KLN1111111\" });\n    \n    assertAlgorithm(\"ColognePhonetic\", \"true\", \"Meier Schmitt Meir Schmidt\",\n        new String[] { \"67\", \"Meier\", \"862\", \"Schmitt\", \n          \"67\", \"Meir\", \"862\", \"Schmidt\" });\n    assertAlgorithm(\"ColognePhonetic\", \"false\", \"Meier Schmitt Meir Schmidt\",\n        new String[] { \"67\", \"862\", \"67\", \"862\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/phonetic/src/test/org/apache/lucene/analysis/phonetic/TestPhoneticFilterFactory#testAlgorithms().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestPhoneticFilterFactory#testAlgorithms().mjava","sourceNew":"  public void testAlgorithms() throws Exception {\n    assertAlgorithm(\"Metaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"B\", \"bbb\", \"KKK\", \"ccc\", \"ESKS\", \"easgasg\" });\n    assertAlgorithm(\"Metaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"B\", \"KKK\", \"ESKS\" });\n    \n    assertAlgorithm(\"DoubleMetaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"PP\", \"bbb\", \"KK\", \"ccc\", \"ASKS\", \"easgasg\" });\n    assertAlgorithm(\"DoubleMetaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"PP\", \"KK\", \"ASKS\" });\n    \n    assertAlgorithm(\"Soundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"aaa\", \"B000\", \"bbb\", \"C000\", \"ccc\", \"E220\", \"easgasg\" });\n    assertAlgorithm(\"Soundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"B000\", \"C000\", \"E220\" });\n    \n    assertAlgorithm(\"RefinedSoundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"aaa\", \"B1\", \"bbb\", \"C3\", \"ccc\", \"E034034\", \"easgasg\" });\n    assertAlgorithm(\"RefinedSoundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"B1\", \"C3\", \"E034034\" });\n    \n    assertAlgorithm(\"Caverphone\", \"true\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"Darda\", \"KLN1111111\", \"Karleen\", \n          \"TTA1111111\", \"Datha\", \"KLN1111111\", \"Carlene\" });\n    assertAlgorithm(\"Caverphone\", \"false\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"KLN1111111\", \"TTA1111111\", \"KLN1111111\" });\n    \n    assertAlgorithm(\"ColognePhonetic\", \"true\", \"Meier Schmitt Meir Schmidt\",\n        new String[] { \"67\", \"Meier\", \"862\", \"Schmitt\", \n          \"67\", \"Meir\", \"862\", \"Schmidt\" });\n    assertAlgorithm(\"ColognePhonetic\", \"false\", \"Meier Schmitt Meir Schmidt\",\n        new String[] { \"67\", \"862\", \"67\", \"862\" });\n  }\n\n","sourceOld":"  public void testAlgorithms() throws Exception {\n    assertAlgorithm(\"Metaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"B\", \"bbb\", \"KKK\", \"ccc\", \"ESKS\", \"easgasg\" });\n    assertAlgorithm(\"Metaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"B\", \"KKK\", \"ESKS\" });\n    \n    assertAlgorithm(\"DoubleMetaphone\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"aaa\", \"PP\", \"bbb\", \"KK\", \"ccc\", \"ASKS\", \"easgasg\" });\n    assertAlgorithm(\"DoubleMetaphone\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A\", \"PP\", \"KK\", \"ASKS\" });\n    \n    assertAlgorithm(\"Soundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"aaa\", \"B000\", \"bbb\", \"C000\", \"ccc\", \"E220\", \"easgasg\" });\n    assertAlgorithm(\"Soundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A000\", \"B000\", \"C000\", \"E220\" });\n    \n    assertAlgorithm(\"RefinedSoundex\", \"true\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"aaa\", \"B1\", \"bbb\", \"C3\", \"ccc\", \"E034034\", \"easgasg\" });\n    assertAlgorithm(\"RefinedSoundex\", \"false\", \"aaa bbb ccc easgasg\",\n        new String[] { \"A0\", \"B1\", \"C3\", \"E034034\" });\n    \n    assertAlgorithm(\"Caverphone\", \"true\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"Darda\", \"KLN1111111\", \"Karleen\", \n          \"TTA1111111\", \"Datha\", \"KLN1111111\", \"Carlene\" });\n    assertAlgorithm(\"Caverphone\", \"false\", \"Darda Karleen Datha Carlene\",\n        new String[] { \"TTA1111111\", \"KLN1111111\", \"TTA1111111\", \"KLN1111111\" });\n    \n    assertAlgorithm(\"ColognePhonetic\", \"true\", \"Meier Schmitt Meir Schmidt\",\n        new String[] { \"67\", \"Meier\", \"862\", \"Schmitt\", \n          \"67\", \"Meir\", \"862\", \"Schmidt\" });\n    assertAlgorithm(\"ColognePhonetic\", \"false\", \"Meier Schmitt Meir Schmidt\",\n        new String[] { \"67\", \"862\", \"67\", \"862\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["ae2cc9c0968d7f98c987726279617b99c53129ed","5a1a22b1ad88b436661458df567f3fdb446392a4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae2cc9c0968d7f98c987726279617b99c53129ed":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["ae2cc9c0968d7f98c987726279617b99c53129ed","5a1a22b1ad88b436661458df567f3fdb446392a4"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["ae2cc9c0968d7f98c987726279617b99c53129ed","3241e06e642196396b80bb293acd9c0814d079e0"],"3241e06e642196396b80bb293acd9c0814d079e0":["ae2cc9c0968d7f98c987726279617b99c53129ed"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a1a22b1ad88b436661458df567f3fdb446392a4"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"ae2cc9c0968d7f98c987726279617b99c53129ed":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","5a1a22b1ad88b436661458df567f3fdb446392a4","3241e06e642196396b80bb293acd9c0814d079e0"],"c26f00b574427b55127e869b935845554afde1fa":["ae2cc9c0968d7f98c987726279617b99c53129ed"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"5a1a22b1ad88b436661458df567f3fdb446392a4":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3241e06e642196396b80bb293acd9c0814d079e0":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}