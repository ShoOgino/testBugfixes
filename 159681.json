{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestTriggerIntegration.TestLiveNodesListener#onChange(SortedSet[String],SortedSet[String]).mjava","commits":[{"id":"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","date":1513252583,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestTriggerIntegration.TestLiveNodesListener#onChange(SortedSet[String],SortedSet[String]).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void onChange(SortedSet<String> oldLiveNodes, SortedSet<String> newLiveNodes) {\n      onChangeLatch.countDown();\n      Set<String> old = new HashSet<>(oldLiveNodes);\n      old.removeAll(newLiveNodes);\n      if (!old.isEmpty()) {\n        lostNodes.addAll(old);\n      }\n      newLiveNodes.removeAll(oldLiveNodes);\n      if (!newLiveNodes.isEmpty()) {\n        addedNodes.addAll(newLiveNodes);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a6a5c1c40529f15b445e6720dfde1967e139bff1","date":1535375643,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimTriggerIntegration.TestLiveNodesListener#onChange(SortedSet[String],SortedSet[String]).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestTriggerIntegration.TestLiveNodesListener#onChange(SortedSet[String],SortedSet[String]).mjava","sourceNew":"    @Override\n    public void onChange(SortedSet<String> oldLiveNodes, SortedSet<String> newLiveNodes) {\n      onChangeLatch.countDown();\n      Set<String> old = new HashSet<>(oldLiveNodes);\n      old.removeAll(newLiveNodes);\n      if (!old.isEmpty()) {\n        lostNodes.addAll(old);\n      }\n      newLiveNodes.removeAll(oldLiveNodes);\n      if (!newLiveNodes.isEmpty()) {\n        addedNodes.addAll(newLiveNodes);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void onChange(SortedSet<String> oldLiveNodes, SortedSet<String> newLiveNodes) {\n      onChangeLatch.countDown();\n      Set<String> old = new HashSet<>(oldLiveNodes);\n      old.removeAll(newLiveNodes);\n      if (!old.isEmpty()) {\n        lostNodes.addAll(old);\n      }\n      newLiveNodes.removeAll(oldLiveNodes);\n      if (!newLiveNodes.isEmpty()) {\n        addedNodes.addAll(newLiveNodes);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a6a5c1c40529f15b445e6720dfde1967e139bff1":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a6a5c1c40529f15b445e6720dfde1967e139bff1"]},"commit2Childs":{"a6a5c1c40529f15b445e6720dfde1967e139bff1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["a6a5c1c40529f15b445e6720dfde1967e139bff1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}