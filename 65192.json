{"path":"lucene/core/src/java/org/apache/lucene/analysis/Analyzer.TokenStreamComponents#setReader(Reader).mjava","commits":[{"id":"fc706b1e03a539d44d99998108feb684bb44cbb2","date":1342522408,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Analyzer.TokenStreamComponents#setReader(Reader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/Analyzer.TokenStreamComponents#reset(Reader).mjava","sourceNew":"    /**\n     * Resets the encapsulated components with the given reader. If the components\n     * cannot be reset, an Exception should be thrown.\n     * \n     * @param reader\n     *          a reader to reset the source component\n     * @throws IOException\n     *           if the component's reset method throws an {@link IOException}\n     */\n    protected void setReader(final Reader reader) throws IOException {\n      source.setReader(reader);\n    }\n\n","sourceOld":"    /**\n     * Resets the encapsulated components with the given reader. If the components\n     * cannot be reset, an Exception should be thrown.\n     * \n     * @param reader\n     *          a reader to reset the source component\n     * @throws IOException\n     *           if the component's reset method throws an {@link IOException}\n     */\n    protected void reset(final Reader reader) throws IOException {\n      source.setReader(reader);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Analyzer.TokenStreamComponents#setReader(Reader).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Resets the encapsulated components with the given reader. If the components\n     * cannot be reset, an Exception should be thrown.\n     * \n     * @param reader\n     *          a reader to reset the source component\n     * @throws IOException\n     *           if the component's reset method throws an {@link IOException}\n     */\n    protected void setReader(final Reader reader) throws IOException {\n      source.setReader(reader);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Analyzer.TokenStreamComponents#setReader(Reader).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Resets the encapsulated components with the given reader. If the components\n     * cannot be reset, an Exception should be thrown.\n     * \n     * @param reader\n     *          a reader to reset the source component\n     * @throws IOException\n     *           if the component's reset method throws an {@link IOException}\n     */\n    protected void setReader(final Reader reader) throws IOException {\n      source.setReader(reader);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e859719dc778fb66d3d21e7be08cd408fc2bde98","date":1446717611,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Analyzer.TokenStreamComponents#setReader(Reader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/Analyzer.TokenStreamComponents#setReader(Reader).mjava","sourceNew":"    /**\n     * Resets the encapsulated components with the given reader. If the components\n     * cannot be reset, an Exception should be thrown.\n     * \n     * @param reader\n     *          a reader to reset the source component\n     */\n    protected void setReader(final Reader reader) {\n      source.setReader(reader);\n    }\n\n","sourceOld":"    /**\n     * Resets the encapsulated components with the given reader. If the components\n     * cannot be reset, an Exception should be thrown.\n     * \n     * @param reader\n     *          a reader to reset the source component\n     * @throws IOException\n     *           if the component's reset method throws an {@link IOException}\n     */\n    protected void setReader(final Reader reader) throws IOException {\n      source.setReader(reader);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fac252ef8e3d0bbff9303ffbf675e824a729dfaf","date":1537347776,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Analyzer.TokenStreamComponents#setReader(Reader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/Analyzer.TokenStreamComponents#setReader(Reader).mjava","sourceNew":"    /**\n     * Resets the encapsulated components with the given reader. If the components\n     * cannot be reset, an Exception should be thrown.\n     * \n     * @param reader\n     *          a reader to reset the source component\n     */\n    private void setReader(final Reader reader) {\n      source.accept(reader);\n    }\n\n","sourceOld":"    /**\n     * Resets the encapsulated components with the given reader. If the components\n     * cannot be reset, an Exception should be thrown.\n     * \n     * @param reader\n     *          a reader to reset the source component\n     */\n    protected void setReader(final Reader reader) {\n      source.setReader(reader);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fc706b1e03a539d44d99998108feb684bb44cbb2"],"fc706b1e03a539d44d99998108feb684bb44cbb2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fac252ef8e3d0bbff9303ffbf675e824a729dfaf":["e859719dc778fb66d3d21e7be08cd408fc2bde98"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fc706b1e03a539d44d99998108feb684bb44cbb2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e859719dc778fb66d3d21e7be08cd408fc2bde98":["fc706b1e03a539d44d99998108feb684bb44cbb2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fac252ef8e3d0bbff9303ffbf675e824a729dfaf"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fc706b1e03a539d44d99998108feb684bb44cbb2":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","e859719dc778fb66d3d21e7be08cd408fc2bde98"],"fac252ef8e3d0bbff9303ffbf675e824a729dfaf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","fc706b1e03a539d44d99998108feb684bb44cbb2","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"e859719dc778fb66d3d21e7be08cd408fc2bde98":["fac252ef8e3d0bbff9303ffbf675e824a729dfaf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}