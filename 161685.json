{"path":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/Highlighter#getBestFragment(Analyzer,String).mjava","commits":[{"id":"4b4cf21055ce3298c85f04952b1aa208983470c4","date":1108840132,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/Highlighter#getBestFragment(Analyzer,String).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Highlights chosen terms in a text, extracting the most relevant section.\n\t * This is a convenience method that calls\n\t * {@link #getBestFragment(TokenStream, String)}\n\t *\n\t * @param analyzer   the analyzer that will be used to split <code>text</code>\n\t * into chunks  \n\t * @param text text to highlight terms in\n\t *\n\t * @return highlighted text fragment or null if no terms found\n\t */\n\tpublic final String getBestFragment(Analyzer analyzer, String text)\n\t\tthrows IOException\n\t{\n\t\tTokenStream tokenStream = analyzer.tokenStream(\"field\", new StringReader(text));\n\t\treturn getBestFragment(tokenStream, text);\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6521c44a9d5d28a09041959f70607985717c47c3","date":1108842664,"type":5,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/Highlighter#getBestFragment(Analyzer,String,String).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/Highlighter#getBestFragment(Analyzer,String).mjava","sourceNew":"\t/**\n\t * Highlights chosen terms in a text, extracting the most relevant section.\n\t * This is a convenience method that calls\n\t * {@link #getBestFragment(TokenStream, String)}\n\t *\n\t * @param analyzer   the analyzer that will be used to split <code>text</code>\n\t * into chunks  \n\t * @param text text to highlight terms in\n\t * @param fieldName Name of field used to influence analyzer's tokenization policy \n\t *\n\t * @return highlighted text fragment or null if no terms found\n\t */\n\tpublic final String getBestFragment(Analyzer analyzer, String fieldName,String text)\n\t\tthrows IOException\n\t{\n\t\tTokenStream tokenStream = analyzer.tokenStream(fieldName, new StringReader(text));\n\t\treturn getBestFragment(tokenStream, text);\n\t}\n\n","sourceOld":"\t/**\n\t * Highlights chosen terms in a text, extracting the most relevant section.\n\t * This is a convenience method that calls\n\t * {@link #getBestFragment(TokenStream, String)}\n\t *\n\t * @param analyzer   the analyzer that will be used to split <code>text</code>\n\t * into chunks  \n\t * @param text text to highlight terms in\n\t *\n\t * @return highlighted text fragment or null if no terms found\n\t */\n\tpublic final String getBestFragment(Analyzer analyzer, String text)\n\t\tthrows IOException\n\t{\n\t\tTokenStream tokenStream = analyzer.tokenStream(\"field\", new StringReader(text));\n\t\treturn getBestFragment(tokenStream, text);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b4cf21055ce3298c85f04952b1aa208983470c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6521c44a9d5d28a09041959f70607985717c47c3":["4b4cf21055ce3298c85f04952b1aa208983470c4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6521c44a9d5d28a09041959f70607985717c47c3"]},"commit2Childs":{"4b4cf21055ce3298c85f04952b1aa208983470c4":["6521c44a9d5d28a09041959f70607985717c47c3"],"6521c44a9d5d28a09041959f70607985717c47c3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4b4cf21055ce3298c85f04952b1aa208983470c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}