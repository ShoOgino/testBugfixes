{"path":"solr/core/src/test/org/apache/solr/util/hll/BitVectorTest#getSetRegisterTest().mjava","commits":[{"id":"6faa211c4af605e3cf078a76d200c1dc348973f5","date":1437043657,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/hll/BitVectorTest#getSetRegisterTest().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Tests {@link BitVector#getRegister(long)} and {@link BitVector#setRegister(long, long)}.\n     */\n    @Test\n    public void getSetRegisterTest() {\n        { // locally scoped for sanity\n            // NOTE:  registers are only 5bits wide\n            final BitVector vector1 = new BitVector(5/*width*/, 128/*count, 2^7*/);\n            final BitVector vector2 = new BitVector(5/*width*/, 128/*count, 2^7*/);\n            final BitVector vector3 = new BitVector(5/*width*/, 128/*count, 2^7*/);\n            final BitVector vector4 = new BitVector(5/*width*/, 128/*count, 2^7*/);\n\n            for(int i=0; i<128/*2^7*/; i++) {\n                vector1.setRegister(i, 0x1F);\n                vector2.setRegister(i, (i & 0x1F));\n                vector3.setRegister(i, ((127 - i) & 0x1F));\n                vector4.setRegister(i, 0x15);\n            }\n\n            for(int i=0; i<128/*2^7*/; i++) {\n                assertEquals(vector1.getRegister(i), 0x1F);\n                assertEquals(vector2.getRegister(i), (i & 0x1F));\n                assertEquals(vector3.getRegister(i), ((127 - i) & 0x1F));\n                assertEquals(vector4.getRegister(i), 0x15);\n            }\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b5ee4c66244bdfcc4796a114519d47701b2c026","date":1437132013,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/hll/BitVectorTest#getSetRegisterTest().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Tests {@link BitVector#getRegister(long)} and {@link BitVector#setRegister(long, long)}.\n     */\n    @Test\n    public void getSetRegisterTest() {\n        { // locally scoped for sanity\n            // NOTE:  registers are only 5bits wide\n            final BitVector vector1 = new BitVector(5/*width*/, 128/*count, 2^7*/);\n            final BitVector vector2 = new BitVector(5/*width*/, 128/*count, 2^7*/);\n            final BitVector vector3 = new BitVector(5/*width*/, 128/*count, 2^7*/);\n            final BitVector vector4 = new BitVector(5/*width*/, 128/*count, 2^7*/);\n\n            for(int i=0; i<128/*2^7*/; i++) {\n                vector1.setRegister(i, 0x1F);\n                vector2.setRegister(i, (i & 0x1F));\n                vector3.setRegister(i, ((127 - i) & 0x1F));\n                vector4.setRegister(i, 0x15);\n            }\n\n            for(int i=0; i<128/*2^7*/; i++) {\n                assertEquals(vector1.getRegister(i), 0x1F);\n                assertEquals(vector2.getRegister(i), (i & 0x1F));\n                assertEquals(vector3.getRegister(i), ((127 - i) & 0x1F));\n                assertEquals(vector4.getRegister(i), 0x15);\n            }\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6faa211c4af605e3cf078a76d200c1dc348973f5"],"6faa211c4af605e3cf078a76d200c1dc348973f5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b5ee4c66244bdfcc4796a114519d47701b2c026"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b5ee4c66244bdfcc4796a114519d47701b2c026","6faa211c4af605e3cf078a76d200c1dc348973f5"],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6faa211c4af605e3cf078a76d200c1dc348973f5":["3b5ee4c66244bdfcc4796a114519d47701b2c026"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}