{"path":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoArea#getRelationship(GeoShape).mjava","commits":[{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoArea#getRelationship(GeoShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoArea#getRelationship(GeoShape).mjava","sourceNew":"  /**\n   * Find the spatial relationship between a shape and the current geo area.\n   * Note: return value is how the GeoShape relates to the GeoArea, not the\n   * other way around. For example, if this GeoArea is entirely within the\n   * shape, then CONTAINS should be returned.  If the shape is entirely enclosed\n   * by this GeoArea, then WITHIN should be returned.\n   * Note well: When a shape consists of multiple independent overlapping subshapes,\n   * it is sometimes impossible to determine the distinction between\n   * OVERLAPS and CONTAINS.  In that case, OVERLAPS may be returned even\n   * though the proper result would in fact be CONTAINS.  Code accordingly.\n   *\n   * @param shape is the shape to consider.\n   * @return the relationship, from the perspective of the shape.\n   */\n  public int getRelationship(GeoShape shape);\n\n","sourceOld":"  /**\n   * Find the spatial relationship between a shape and the current geo area.\n   * Note: return value is how the GeoShape relates to the GeoArea, not the\n   * other way around. For example, if this GeoArea is entirely within the\n   * shape, then CONTAINS should be returned.  If the shape is entirely enclosed\n   * by this GeoArea, then WITHIN should be returned.\n   * Note well: When a shape consists of multiple independent overlapping subshapes,\n   * it is sometimes impossible to determine the distinction between\n   * OVERLAPS and CONTAINS.  In that case, OVERLAPS may be returned even\n   * though the proper result would in fact be CONTAINS.  Code accordingly.\n   *\n   * @param shape is the shape to consider.\n   * @return the relationship, from the perspective of the shape.\n   */\n  public int getRelationship(GeoShape shape);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f64b7098768253180859cd8faeae6b1a185b06ed","date":1441223971,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoArea#getRelationship(GeoShape).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoArea#getRelationship(GeoShape).mjava","sourceNew":"  /**\n   * Find the spatial relationship between a shape and the current geo area.\n   * Note: return value is how the GeoShape relates to the GeoArea, not the\n   * other way around. For example, if this GeoArea is entirely within the\n   * shape, then CONTAINS should be returned.  If the shape is entirely enclosed\n   * by this GeoArea, then WITHIN should be returned.\n   *\n   * It is permissible to return OVERLAPS instead of WITHIN if the shape\n   * intersects with the area at even a single point.  So, a circle inscribed in\n   * a rectangle could return either OVERLAPS or WITHIN, depending on\n   * implementation.  It is not permissible to return CONTAINS or DISJOINT\n   * in this circumstance, however.\n   *\n   * Similarly, it is permissible to return OVERLAPS instead of CONTAINS\n   * under conditions where the shape consists of multiple independent overlapping\n   * subshapes, and the area overlaps one of the subshapes.  It is not permissible\n   * to return WITHIN or DISJOINT in this circumstance, however.\n   *\n   * @param shape is the shape to consider.\n   * @return the relationship, from the perspective of the shape.\n   */\n  public int getRelationship(GeoShape shape);\n\n","sourceOld":"  /**\n   * Find the spatial relationship between a shape and the current geo area.\n   * Note: return value is how the GeoShape relates to the GeoArea, not the\n   * other way around. For example, if this GeoArea is entirely within the\n   * shape, then CONTAINS should be returned.  If the shape is entirely enclosed\n   * by this GeoArea, then WITHIN should be returned.\n   * Note well: When a shape consists of multiple independent overlapping subshapes,\n   * it is sometimes impossible to determine the distinction between\n   * OVERLAPS and CONTAINS.  In that case, OVERLAPS may be returned even\n   * though the proper result would in fact be CONTAINS.  Code accordingly.\n   *\n   * @param shape is the shape to consider.\n   * @return the relationship, from the perspective of the shape.\n   */\n  public int getRelationship(GeoShape shape);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoArea#getRelationship(GeoShape).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoArea#getRelationship(GeoShape).mjava","sourceNew":"  /**\n   * Find the spatial relationship between a shape and the current geo area.\n   * Note: return value is how the GeoShape relates to the GeoArea, not the\n   * other way around. For example, if this GeoArea is entirely within the\n   * shape, then CONTAINS should be returned.  If the shape is entirely enclosed\n   * by this GeoArea, then WITHIN should be returned.\n   *\n   * It is permissible to return OVERLAPS instead of WITHIN if the shape\n   * intersects with the area at even a single point.  So, a circle inscribed in\n   * a rectangle could return either OVERLAPS or WITHIN, depending on\n   * implementation.  It is not permissible to return CONTAINS or DISJOINT\n   * in this circumstance, however.\n   *\n   * Similarly, it is permissible to return OVERLAPS instead of CONTAINS\n   * under conditions where the shape consists of multiple independent overlapping\n   * subshapes, and the area overlaps one of the subshapes.  It is not permissible\n   * to return WITHIN or DISJOINT in this circumstance, however.\n   *\n   * @param shape is the shape to consider.\n   * @return the relationship, from the perspective of the shape.\n   */\n  public int getRelationship(GeoShape shape);\n\n","sourceOld":"  /**\n   * Find the spatial relationship between a shape and the current geo area.\n   * Note: return value is how the GeoShape relates to the GeoArea, not the\n   * other way around. For example, if this GeoArea is entirely within the\n   * shape, then CONTAINS should be returned.  If the shape is entirely enclosed\n   * by this GeoArea, then WITHIN should be returned.\n   *\n   * It is permissible to return OVERLAPS instead of WITHIN if the shape\n   * intersects with the area at even a single point.  So, a circle inscribed in\n   * a rectangle could return either OVERLAPS or WITHIN, depending on\n   * implementation.  It is not permissible to return CONTAINS or DISJOINT\n   * in this circumstance, however.\n   *\n   * Similarly, it is permissible to return OVERLAPS instead of CONTAINS\n   * under conditions where the shape consists of multiple independent overlapping\n   * subshapes, and the area overlaps one of the subshapes.  It is not permissible\n   * to return WITHIN or DISJOINT in this circumstance, however.\n   *\n   * @param shape is the shape to consider.\n   * @return the relationship, from the perspective of the shape.\n   */\n  public int getRelationship(GeoShape shape);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f64b7098768253180859cd8faeae6b1a185b06ed":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3022be5842502b7c2a57a5124199bbc30236f0a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b4e444678504caf66a8060b1d514383aa4feac0c":["f64b7098768253180859cd8faeae6b1a185b06ed"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4e444678504caf66a8060b1d514383aa4feac0c"]},"commit2Childs":{"f64b7098768253180859cd8faeae6b1a185b06ed":["b4e444678504caf66a8060b1d514383aa4feac0c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["f64b7098768253180859cd8faeae6b1a185b06ed"],"b4e444678504caf66a8060b1d514383aa4feac0c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}