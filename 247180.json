{"path":"backwards/src/java/org/apache/lucene/search/Similarity#idf(int,int).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/search/Similarity#idf(int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(int docFreq, int numDocs);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/Similarity#idf(int,int).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/Similarity#idf(int,int).mjava","sourceNew":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(int docFreq, int numDocs);\n\n","sourceOld":"  /** Computes a score factor based on a term's document frequency (the number\n   * of documents which contain the term).  This value is multiplied by the\n   * {@link #tf(int)} factor for each term in the query and these products are\n   * then summed to form the initial score for a document.\n   *\n   * <p>Terms that occur in fewer documents are better indicators of topic, so\n   * implementations of this method usually return larger values for rare terms,\n   * and smaller values for common terms.\n   *\n   * @param docFreq the number of documents which contain the term\n   * @param numDocs the total number of documents in the collection\n   * @return a score factor based on the term's document frequency\n   */\n  public abstract float idf(int docFreq, int numDocs);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}