{"path":"src/java/org/apache/solr/request/XMLWriter#writeSolrDocumentList(String,SolrDocumentList,Set[String]).mjava","commits":[{"id":"c451686dba22c9c0e2b950b3d4dc9c1cde081887","date":1199826919,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/XMLWriter#writeSolrDocumentList(String,SolrDocumentList,Set[String]).mjava","pathOld":"/dev/null","sourceNew":"  public final void writeSolrDocumentList(String name, final SolrDocumentList docs, Set<String> fields) throws IOException \n  {\n    this.writeDocuments( name, new DocumentListInfo() \n    {  \n      public int getCount() {\n        return docs.size();\n      }\n      \n      public Float getMaxScore() {\n        return docs.getMaxScore();\n      }\n\n      public int getNumFound() {\n        return docs.getNumFound();\n      }\n\n      public int getStart() {\n        return docs.getStart();\n      }\n\n      public void writeDocs(boolean includeScore, Set<String> fields) throws IOException {\n        for( SolrDocument doc : docs ) {\n          writeDoc(null, doc, fields, includeScore);\n        }\n      }\n    }, fields );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17a4a2e432254ad9a50a564dc8ac204f6a50fffb","date":1199891649,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/XMLWriter#writeSolrDocumentList(String,SolrDocumentList,Set[String]).mjava","pathOld":"src/java/org/apache/solr/request/XMLWriter#writeSolrDocumentList(String,SolrDocumentList,Set[String]).mjava","sourceNew":"  public final void writeSolrDocumentList(String name, final SolrDocumentList docs, Set<String> fields) throws IOException \n  {\n    this.writeDocuments( name, new DocumentListInfo() \n    {  \n      public int getCount() {\n        return docs.size();\n      }\n      \n      public Float getMaxScore() {\n        return docs.getMaxScore();\n      }\n\n      public long getNumFound() {\n        return docs.getNumFound();\n      }\n\n      public long getStart() {\n        return docs.getStart();\n      }\n\n      public void writeDocs(boolean includeScore, Set<String> fields) throws IOException {\n        for( SolrDocument doc : docs ) {\n          writeDoc(null, doc, fields, includeScore);\n        }\n      }\n    }, fields );\n  }\n\n","sourceOld":"  public final void writeSolrDocumentList(String name, final SolrDocumentList docs, Set<String> fields) throws IOException \n  {\n    this.writeDocuments( name, new DocumentListInfo() \n    {  \n      public int getCount() {\n        return docs.size();\n      }\n      \n      public Float getMaxScore() {\n        return docs.getMaxScore();\n      }\n\n      public int getNumFound() {\n        return docs.getNumFound();\n      }\n\n      public int getStart() {\n        return docs.getStart();\n      }\n\n      public void writeDocs(boolean includeScore, Set<String> fields) throws IOException {\n        for( SolrDocument doc : docs ) {\n          writeDoc(null, doc, fields, includeScore);\n        }\n      }\n    }, fields );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae7b8ff75c872b3cc70dd939c7368b1327a93ee1","date":1263263734,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/response/XMLWriter#writeSolrDocumentList(String,SolrDocumentList,Set[String]).mjava","pathOld":"src/java/org/apache/solr/request/XMLWriter#writeSolrDocumentList(String,SolrDocumentList,Set[String]).mjava","sourceNew":"  public final void writeSolrDocumentList(String name, final SolrDocumentList docs, Set<String> fields) throws IOException \n  {\n    this.writeDocuments( name, new DocumentListInfo() \n    {  \n      public int getCount() {\n        return docs.size();\n      }\n      \n      public Float getMaxScore() {\n        return docs.getMaxScore();\n      }\n\n      public long getNumFound() {\n        return docs.getNumFound();\n      }\n\n      public long getStart() {\n        return docs.getStart();\n      }\n\n      public void writeDocs(boolean includeScore, Set<String> fields) throws IOException {\n        for( SolrDocument doc : docs ) {\n          writeDoc(null, doc, fields, includeScore);\n        }\n      }\n    }, fields );\n  }\n\n","sourceOld":"  public final void writeSolrDocumentList(String name, final SolrDocumentList docs, Set<String> fields) throws IOException \n  {\n    this.writeDocuments( name, new DocumentListInfo() \n    {  \n      public int getCount() {\n        return docs.size();\n      }\n      \n      public Float getMaxScore() {\n        return docs.getMaxScore();\n      }\n\n      public long getNumFound() {\n        return docs.getNumFound();\n      }\n\n      public long getStart() {\n        return docs.getStart();\n      }\n\n      public void writeDocs(boolean includeScore, Set<String> fields) throws IOException {\n        for( SolrDocument doc : docs ) {\n          writeDoc(null, doc, fields, includeScore);\n        }\n      }\n    }, fields );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ae7b8ff75c872b3cc70dd939c7368b1327a93ee1":["17a4a2e432254ad9a50a564dc8ac204f6a50fffb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"17a4a2e432254ad9a50a564dc8ac204f6a50fffb":["c451686dba22c9c0e2b950b3d4dc9c1cde081887"],"c451686dba22c9c0e2b950b3d4dc9c1cde081887":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ae7b8ff75c872b3cc70dd939c7368b1327a93ee1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["c451686dba22c9c0e2b950b3d4dc9c1cde081887"],"17a4a2e432254ad9a50a564dc8ac204f6a50fffb":["ae7b8ff75c872b3cc70dd939c7368b1327a93ee1"],"c451686dba22c9c0e2b950b3d4dc9c1cde081887":["17a4a2e432254ad9a50a564dc8ac204f6a50fffb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ae7b8ff75c872b3cc70dd939c7368b1327a93ee1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}