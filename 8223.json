{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDeleteByQuery#testDeleteMatchAllDocsQuery().mjava","commits":[{"id":"eda42a68fb3a18d611a6e502bdbb764723a10e7d","date":1427824032,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDeleteByQuery#testDeleteMatchAllDocsQuery().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-6379\n  public void testDeleteMatchAllDocsQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    Document doc = new Document();\n    // Norms are disabled:\n    doc.add(newStringField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    DirectoryReader r = DirectoryReader.open(w, true);\n    FieldInfo fi = MultiFields.getMergedFieldInfos(r).fieldInfo(\"field\");\n    assertNotNull(fi);\n    assertFalse(fi.hasNorms());\n    assertEquals(1, r.numDocs());\n    assertEquals(1, r.maxDoc());\n\n    w.deleteDocuments(new MatchAllDocsQuery());\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    r.close();\n\n    assertNotNull(r2);\n    assertEquals(0, r2.numDocs());\n    assertEquals(0, r2.maxDoc());\n\n    // Confirm the omitNorms bit is in fact no longer set:\n    doc = new Document();\n    // Norms are disabled:\n    doc.add(newTextField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r2);\n    r2.close();\n    assertNotNull(r3);\n    assertEquals(1, r3.numDocs());\n    assertEquals(1, r3.maxDoc());\n\n    // Make sure norms can come back to life for a field after deleting by MatchAllDocsQuery:\n    fi = MultiFields.getMergedFieldInfos(r3).fieldInfo(\"field\");    \n    assertNotNull(fi);\n    assertTrue(fi.hasNorms());\n    r3.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fab172655716b96f7e42376116235017a922de3a","date":1427850611,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDeleteByQuery#testDeleteMatchAllDocsQuery().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-6379\n  public void testDeleteMatchAllDocsQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    Document doc = new Document();\n    // Norms are disabled:\n    doc.add(newStringField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    DirectoryReader r = DirectoryReader.open(w, true);\n    FieldInfo fi = MultiFields.getMergedFieldInfos(r).fieldInfo(\"field\");\n    assertNotNull(fi);\n    assertFalse(fi.hasNorms());\n    assertEquals(1, r.numDocs());\n    assertEquals(1, r.maxDoc());\n\n    w.deleteDocuments(new MatchAllDocsQuery());\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    r.close();\n\n    assertNotNull(r2);\n    assertEquals(0, r2.numDocs());\n    assertEquals(0, r2.maxDoc());\n\n    // Confirm the omitNorms bit is in fact no longer set:\n    doc = new Document();\n    // Norms are disabled:\n    doc.add(newTextField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r2);\n    r2.close();\n    assertNotNull(r3);\n    assertEquals(1, r3.numDocs());\n    assertEquals(1, r3.maxDoc());\n\n    // Make sure norms can come back to life for a field after deleting by MatchAllDocsQuery:\n    fi = MultiFields.getMergedFieldInfos(r3).fieldInfo(\"field\");    \n    assertNotNull(fi);\n    assertTrue(fi.hasNorms());\n    r3.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDeleteByQuery#testDeleteMatchAllDocsQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDeleteByQuery#testDeleteMatchAllDocsQuery().mjava","sourceNew":"  // LUCENE-6379\n  public void testDeleteMatchAllDocsQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    Document doc = new Document();\n    // Norms are disabled:\n    doc.add(newStringField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    DirectoryReader r = DirectoryReader.open(w);\n    FieldInfo fi = MultiFields.getMergedFieldInfos(r).fieldInfo(\"field\");\n    assertNotNull(fi);\n    assertFalse(fi.hasNorms());\n    assertEquals(1, r.numDocs());\n    assertEquals(1, r.maxDoc());\n\n    w.deleteDocuments(new MatchAllDocsQuery());\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    r.close();\n\n    assertNotNull(r2);\n    assertEquals(0, r2.numDocs());\n    assertEquals(0, r2.maxDoc());\n\n    // Confirm the omitNorms bit is in fact no longer set:\n    doc = new Document();\n    // Norms are disabled:\n    doc.add(newTextField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r2);\n    r2.close();\n    assertNotNull(r3);\n    assertEquals(1, r3.numDocs());\n    assertEquals(1, r3.maxDoc());\n\n    // Make sure norms can come back to life for a field after deleting by MatchAllDocsQuery:\n    fi = MultiFields.getMergedFieldInfos(r3).fieldInfo(\"field\");    \n    assertNotNull(fi);\n    assertTrue(fi.hasNorms());\n    r3.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-6379\n  public void testDeleteMatchAllDocsQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    Document doc = new Document();\n    // Norms are disabled:\n    doc.add(newStringField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    DirectoryReader r = DirectoryReader.open(w, true);\n    FieldInfo fi = MultiFields.getMergedFieldInfos(r).fieldInfo(\"field\");\n    assertNotNull(fi);\n    assertFalse(fi.hasNorms());\n    assertEquals(1, r.numDocs());\n    assertEquals(1, r.maxDoc());\n\n    w.deleteDocuments(new MatchAllDocsQuery());\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    r.close();\n\n    assertNotNull(r2);\n    assertEquals(0, r2.numDocs());\n    assertEquals(0, r2.maxDoc());\n\n    // Confirm the omitNorms bit is in fact no longer set:\n    doc = new Document();\n    // Norms are disabled:\n    doc.add(newTextField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r2);\n    r2.close();\n    assertNotNull(r3);\n    assertEquals(1, r3.numDocs());\n    assertEquals(1, r3.maxDoc());\n\n    // Make sure norms can come back to life for a field after deleting by MatchAllDocsQuery:\n    fi = MultiFields.getMergedFieldInfos(r3).fieldInfo(\"field\");    \n    assertNotNull(fi);\n    assertTrue(fi.hasNorms());\n    r3.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34d6426cef006e0c3625cabe7a7ec1c2b08bc501","date":1454683374,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDeleteByQuery#testDeleteMatchAllDocsQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDeleteByQuery#testDeleteMatchAllDocsQuery().mjava","sourceNew":"  // LUCENE-6379\n  public void testDeleteMatchAllDocsQuery() throws Exception {\n    Directory dir = newMaybeVirusCheckingDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    Document doc = new Document();\n    // Norms are disabled:\n    doc.add(newStringField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    DirectoryReader r = DirectoryReader.open(w);\n    FieldInfo fi = MultiFields.getMergedFieldInfos(r).fieldInfo(\"field\");\n    assertNotNull(fi);\n    assertFalse(fi.hasNorms());\n    assertEquals(1, r.numDocs());\n    assertEquals(1, r.maxDoc());\n\n    w.deleteDocuments(new MatchAllDocsQuery());\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    r.close();\n\n    assertNotNull(r2);\n    assertEquals(0, r2.numDocs());\n    assertEquals(0, r2.maxDoc());\n\n    // Confirm the omitNorms bit is in fact no longer set:\n    doc = new Document();\n    // Norms are disabled:\n    doc.add(newTextField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r2);\n    r2.close();\n    assertNotNull(r3);\n    assertEquals(1, r3.numDocs());\n    assertEquals(1, r3.maxDoc());\n\n    // Make sure norms can come back to life for a field after deleting by MatchAllDocsQuery:\n    fi = MultiFields.getMergedFieldInfos(r3).fieldInfo(\"field\");    \n    assertNotNull(fi);\n    assertTrue(fi.hasNorms());\n    r3.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-6379\n  public void testDeleteMatchAllDocsQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    Document doc = new Document();\n    // Norms are disabled:\n    doc.add(newStringField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    DirectoryReader r = DirectoryReader.open(w);\n    FieldInfo fi = MultiFields.getMergedFieldInfos(r).fieldInfo(\"field\");\n    assertNotNull(fi);\n    assertFalse(fi.hasNorms());\n    assertEquals(1, r.numDocs());\n    assertEquals(1, r.maxDoc());\n\n    w.deleteDocuments(new MatchAllDocsQuery());\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    r.close();\n\n    assertNotNull(r2);\n    assertEquals(0, r2.numDocs());\n    assertEquals(0, r2.maxDoc());\n\n    // Confirm the omitNorms bit is in fact no longer set:\n    doc = new Document();\n    // Norms are disabled:\n    doc.add(newTextField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r2);\n    r2.close();\n    assertNotNull(r3);\n    assertEquals(1, r3.numDocs());\n    assertEquals(1, r3.maxDoc());\n\n    // Make sure norms can come back to life for a field after deleting by MatchAllDocsQuery:\n    fi = MultiFields.getMergedFieldInfos(r3).fieldInfo(\"field\");    \n    assertNotNull(fi);\n    assertTrue(fi.hasNorms());\n    r3.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDeleteByQuery#testDeleteMatchAllDocsQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDeleteByQuery#testDeleteMatchAllDocsQuery().mjava","sourceNew":"  // LUCENE-6379\n  public void testDeleteMatchAllDocsQuery() throws Exception {\n    Directory dir = newMaybeVirusCheckingDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    Document doc = new Document();\n    // Norms are disabled:\n    doc.add(newStringField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    DirectoryReader r = DirectoryReader.open(w);\n    FieldInfo fi = MultiFields.getMergedFieldInfos(r).fieldInfo(\"field\");\n    assertNotNull(fi);\n    assertFalse(fi.hasNorms());\n    assertEquals(1, r.numDocs());\n    assertEquals(1, r.maxDoc());\n\n    w.deleteDocuments(new MatchAllDocsQuery());\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    r.close();\n\n    assertNotNull(r2);\n    assertEquals(0, r2.numDocs());\n    assertEquals(0, r2.maxDoc());\n\n    // Confirm the omitNorms bit is in fact no longer set:\n    doc = new Document();\n    // Norms are disabled:\n    doc.add(newTextField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r2);\n    r2.close();\n    assertNotNull(r3);\n    assertEquals(1, r3.numDocs());\n    assertEquals(1, r3.maxDoc());\n\n    // Make sure norms can come back to life for a field after deleting by MatchAllDocsQuery:\n    fi = MultiFields.getMergedFieldInfos(r3).fieldInfo(\"field\");    \n    assertNotNull(fi);\n    assertTrue(fi.hasNorms());\n    r3.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-6379\n  public void testDeleteMatchAllDocsQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    Document doc = new Document();\n    // Norms are disabled:\n    doc.add(newStringField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    DirectoryReader r = DirectoryReader.open(w);\n    FieldInfo fi = MultiFields.getMergedFieldInfos(r).fieldInfo(\"field\");\n    assertNotNull(fi);\n    assertFalse(fi.hasNorms());\n    assertEquals(1, r.numDocs());\n    assertEquals(1, r.maxDoc());\n\n    w.deleteDocuments(new MatchAllDocsQuery());\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    r.close();\n\n    assertNotNull(r2);\n    assertEquals(0, r2.numDocs());\n    assertEquals(0, r2.maxDoc());\n\n    // Confirm the omitNorms bit is in fact no longer set:\n    doc = new Document();\n    // Norms are disabled:\n    doc.add(newTextField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r2);\n    r2.close();\n    assertNotNull(r3);\n    assertEquals(1, r3.numDocs());\n    assertEquals(1, r3.maxDoc());\n\n    // Make sure norms can come back to life for a field after deleting by MatchAllDocsQuery:\n    fi = MultiFields.getMergedFieldInfos(r3).fieldInfo(\"field\");    \n    assertNotNull(fi);\n    assertTrue(fi.hasNorms());\n    r3.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDeleteByQuery#testDeleteMatchAllDocsQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDeleteByQuery#testDeleteMatchAllDocsQuery().mjava","sourceNew":"  // LUCENE-6379\n  public void testDeleteMatchAllDocsQuery() throws Exception {\n    Directory dir = newMaybeVirusCheckingDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    Document doc = new Document();\n    // Norms are disabled:\n    doc.add(newStringField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    DirectoryReader r = DirectoryReader.open(w);\n    FieldInfo fi = MultiFields.getMergedFieldInfos(r).fieldInfo(\"field\");\n    assertNotNull(fi);\n    assertFalse(fi.hasNorms());\n    assertEquals(1, r.numDocs());\n    assertEquals(1, r.maxDoc());\n\n    w.deleteDocuments(new MatchAllDocsQuery());\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    r.close();\n\n    assertNotNull(r2);\n    assertEquals(0, r2.numDocs());\n    assertEquals(0, r2.maxDoc());\n\n    // Confirm the omitNorms bit is in fact no longer set:\n    doc = new Document();\n    // Norms are disabled:\n    doc.add(newTextField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r2);\n    r2.close();\n    assertNotNull(r3);\n    assertEquals(1, r3.numDocs());\n    assertEquals(1, r3.maxDoc());\n\n    // Make sure norms can come back to life for a field after deleting by MatchAllDocsQuery:\n    fi = MultiFields.getMergedFieldInfos(r3).fieldInfo(\"field\");    \n    assertNotNull(fi);\n    assertTrue(fi.hasNorms());\n    r3.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-6379\n  public void testDeleteMatchAllDocsQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    Document doc = new Document();\n    // Norms are disabled:\n    doc.add(newStringField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    DirectoryReader r = DirectoryReader.open(w);\n    FieldInfo fi = MultiFields.getMergedFieldInfos(r).fieldInfo(\"field\");\n    assertNotNull(fi);\n    assertFalse(fi.hasNorms());\n    assertEquals(1, r.numDocs());\n    assertEquals(1, r.maxDoc());\n\n    w.deleteDocuments(new MatchAllDocsQuery());\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    r.close();\n\n    assertNotNull(r2);\n    assertEquals(0, r2.numDocs());\n    assertEquals(0, r2.maxDoc());\n\n    // Confirm the omitNorms bit is in fact no longer set:\n    doc = new Document();\n    // Norms are disabled:\n    doc.add(newTextField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r2);\n    r2.close();\n    assertNotNull(r3);\n    assertEquals(1, r3.numDocs());\n    assertEquals(1, r3.maxDoc());\n\n    // Make sure norms can come back to life for a field after deleting by MatchAllDocsQuery:\n    fi = MultiFields.getMergedFieldInfos(r3).fieldInfo(\"field\");    \n    assertNotNull(fi);\n    assertTrue(fi.hasNorms());\n    r3.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDeleteByQuery#testDeleteMatchAllDocsQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDeleteByQuery#testDeleteMatchAllDocsQuery().mjava","sourceNew":"  // LUCENE-6379\n  public void testDeleteMatchAllDocsQuery() throws Exception {\n    Directory dir = newMaybeVirusCheckingDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    Document doc = new Document();\n    // Norms are disabled:\n    doc.add(newStringField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    DirectoryReader r = DirectoryReader.open(w);\n    FieldInfo fi = MultiFields.getMergedFieldInfos(r).fieldInfo(\"field\");\n    assertNotNull(fi);\n    assertFalse(fi.hasNorms());\n    assertEquals(1, r.numDocs());\n    assertEquals(1, r.maxDoc());\n\n    w.deleteDocuments(new MatchAllDocsQuery());\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    r.close();\n\n    assertNotNull(r2);\n    assertEquals(0, r2.numDocs());\n    assertEquals(0, r2.maxDoc());\n\n    // Confirm the omitNorms bit is in fact no longer set:\n    doc = new Document();\n    // Norms are disabled:\n    doc.add(newTextField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r2);\n    r2.close();\n    assertNotNull(r3);\n    assertEquals(1, r3.numDocs());\n    assertEquals(1, r3.maxDoc());\n\n    // Make sure norms can come back to life for a field after deleting by MatchAllDocsQuery:\n    fi = MultiFields.getMergedFieldInfos(r3).fieldInfo(\"field\");    \n    assertNotNull(fi);\n    assertTrue(fi.hasNorms());\n    r3.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-6379\n  public void testDeleteMatchAllDocsQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    Document doc = new Document();\n    // Norms are disabled:\n    doc.add(newStringField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    DirectoryReader r = DirectoryReader.open(w);\n    FieldInfo fi = MultiFields.getMergedFieldInfos(r).fieldInfo(\"field\");\n    assertNotNull(fi);\n    assertFalse(fi.hasNorms());\n    assertEquals(1, r.numDocs());\n    assertEquals(1, r.maxDoc());\n\n    w.deleteDocuments(new MatchAllDocsQuery());\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    r.close();\n\n    assertNotNull(r2);\n    assertEquals(0, r2.numDocs());\n    assertEquals(0, r2.maxDoc());\n\n    // Confirm the omitNorms bit is in fact no longer set:\n    doc = new Document();\n    // Norms are disabled:\n    doc.add(newTextField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r2);\n    r2.close();\n    assertNotNull(r3);\n    assertEquals(1, r3.numDocs());\n    assertEquals(1, r3.maxDoc());\n\n    // Make sure norms can come back to life for a field after deleting by MatchAllDocsQuery:\n    fi = MultiFields.getMergedFieldInfos(r3).fieldInfo(\"field\");    \n    assertNotNull(fi);\n    assertTrue(fi.hasNorms());\n    r3.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e775de416dd2d8067b10db1c8af975a1d5017e","date":1539906554,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDeleteByQuery#testDeleteMatchAllDocsQuery().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDeleteByQuery#testDeleteMatchAllDocsQuery().mjava","sourceNew":"  // LUCENE-6379\n  public void testDeleteMatchAllDocsQuery() throws Exception {\n    Directory dir = newMaybeVirusCheckingDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    Document doc = new Document();\n    // Norms are disabled:\n    doc.add(newStringField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    DirectoryReader r = DirectoryReader.open(w);\n    FieldInfo fi = FieldInfos.getMergedFieldInfos(r).fieldInfo(\"field\");\n    assertNotNull(fi);\n    assertFalse(fi.hasNorms());\n    assertEquals(1, r.numDocs());\n    assertEquals(1, r.maxDoc());\n\n    w.deleteDocuments(new MatchAllDocsQuery());\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    r.close();\n\n    assertNotNull(r2);\n    assertEquals(0, r2.numDocs());\n    assertEquals(0, r2.maxDoc());\n\n    // Confirm the omitNorms bit is in fact no longer set:\n    doc = new Document();\n    // Norms are disabled:\n    doc.add(newTextField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r2);\n    r2.close();\n    assertNotNull(r3);\n    assertEquals(1, r3.numDocs());\n    assertEquals(1, r3.maxDoc());\n\n    // Make sure norms can come back to life for a field after deleting by MatchAllDocsQuery:\n    fi = FieldInfos.getMergedFieldInfos(r3).fieldInfo(\"field\");\n    assertNotNull(fi);\n    assertTrue(fi.hasNorms());\n    r3.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-6379\n  public void testDeleteMatchAllDocsQuery() throws Exception {\n    Directory dir = newMaybeVirusCheckingDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    Document doc = new Document();\n    // Norms are disabled:\n    doc.add(newStringField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n    DirectoryReader r = DirectoryReader.open(w);\n    FieldInfo fi = MultiFields.getMergedFieldInfos(r).fieldInfo(\"field\");\n    assertNotNull(fi);\n    assertFalse(fi.hasNorms());\n    assertEquals(1, r.numDocs());\n    assertEquals(1, r.maxDoc());\n\n    w.deleteDocuments(new MatchAllDocsQuery());\n    DirectoryReader r2 = DirectoryReader.openIfChanged(r);\n    r.close();\n\n    assertNotNull(r2);\n    assertEquals(0, r2.numDocs());\n    assertEquals(0, r2.maxDoc());\n\n    // Confirm the omitNorms bit is in fact no longer set:\n    doc = new Document();\n    // Norms are disabled:\n    doc.add(newTextField(\"field\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n\n    DirectoryReader r3 = DirectoryReader.openIfChanged(r2);\n    r2.close();\n    assertNotNull(r3);\n    assertEquals(1, r3.numDocs());\n    assertEquals(1, r3.maxDoc());\n\n    // Make sure norms can come back to life for a field after deleting by MatchAllDocsQuery:\n    fi = MultiFields.getMergedFieldInfos(r3).fieldInfo(\"field\");    \n    assertNotNull(fi);\n    assertTrue(fi.hasNorms());\n    r3.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"34d6426cef006e0c3625cabe7a7ec1c2b08bc501":["2a1862266772deb28cdcb7d996b64d2177022687"],"eda42a68fb3a18d611a6e502bdbb764723a10e7d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2a1862266772deb28cdcb7d996b64d2177022687":["eda42a68fb3a18d611a6e502bdbb764723a10e7d"],"5a207d19eac354d649c3f0e2cce070017c78125e":["2a1862266772deb28cdcb7d996b64d2177022687","b470f36a9372c97283360b1304eacbde22df6c0d"],"b470f36a9372c97283360b1304eacbde22df6c0d":["2a1862266772deb28cdcb7d996b64d2177022687","34d6426cef006e0c3625cabe7a7ec1c2b08bc501"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["2a1862266772deb28cdcb7d996b64d2177022687","b470f36a9372c97283360b1304eacbde22df6c0d"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["5a207d19eac354d649c3f0e2cce070017c78125e"],"fab172655716b96f7e42376116235017a922de3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eda42a68fb3a18d611a6e502bdbb764723a10e7d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["04e775de416dd2d8067b10db1c8af975a1d5017e"]},"commit2Childs":{"34d6426cef006e0c3625cabe7a7ec1c2b08bc501":["b470f36a9372c97283360b1304eacbde22df6c0d"],"eda42a68fb3a18d611a6e502bdbb764723a10e7d":["2a1862266772deb28cdcb7d996b64d2177022687","fab172655716b96f7e42376116235017a922de3a"],"2a1862266772deb28cdcb7d996b64d2177022687":["34d6426cef006e0c3625cabe7a7ec1c2b08bc501","5a207d19eac354d649c3f0e2cce070017c78125e","b470f36a9372c97283360b1304eacbde22df6c0d","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"5a207d19eac354d649c3f0e2cce070017c78125e":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eda42a68fb3a18d611a6e502bdbb764723a10e7d","fab172655716b96f7e42376116235017a922de3a"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"04e775de416dd2d8067b10db1c8af975a1d5017e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fab172655716b96f7e42376116235017a922de3a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","fab172655716b96f7e42376116235017a922de3a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}