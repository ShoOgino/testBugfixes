{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CommitIndexTask#doLogic().mjava","commits":[{"id":"c135b907ec07be761fc0f0c3501a038a2a28f3bc","date":1220975801,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CommitIndexTask#doLogic().mjava","pathOld":"/dev/null","sourceNew":"  public int doLogic() throws Exception {\n    IndexWriter iw = getRunData().getIndexWriter();\n    if (iw!=null) {\n      iw.commit();\n    }\n    \n    return 1;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b80ccb202de353e6899aab1bd4436d72171b2798","date":1244999275,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CommitIndexTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CommitIndexTask#doLogic().mjava","sourceNew":"  public int doLogic() throws Exception {\n    IndexWriter iw = getRunData().getIndexWriter();\n    if (iw != null) {\n      if (commitUserData == null) iw.commit();\n      else {\n        Map map = new HashMap();\n        map.put(OpenReaderTask.USER_DATA, commitUserData);\n        iw.commit(map);\n      }\n    }\n    \n    return 1;\n  }\n\n","sourceOld":"  public int doLogic() throws Exception {\n    IndexWriter iw = getRunData().getIndexWriter();\n    if (iw!=null) {\n      iw.commit();\n    }\n    \n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e1ce9be74263e9659aad8a6ee1f213193710b71","date":1256298843,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CommitIndexTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CommitIndexTask#doLogic().mjava","sourceNew":"  public int doLogic() throws Exception {\n    IndexWriter iw = getRunData().getIndexWriter();\n    if (iw != null) {\n      if (commitUserData == null) iw.commit();\n      else {\n        Map<String,String> map = new HashMap<String,String>();\n        map.put(OpenReaderTask.USER_DATA, commitUserData);\n        iw.commit(map);\n      }\n    }\n    \n    return 1;\n  }\n\n","sourceOld":"  public int doLogic() throws Exception {\n    IndexWriter iw = getRunData().getIndexWriter();\n    if (iw != null) {\n      if (commitUserData == null) iw.commit();\n      else {\n        Map map = new HashMap();\n        map.put(OpenReaderTask.USER_DATA, commitUserData);\n        iw.commit(map);\n      }\n    }\n    \n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a2007d6eb60e6999b60ec1ca4e7bee3c2366738","date":1257628302,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CommitIndexTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CommitIndexTask#doLogic().mjava","sourceNew":"  public int doLogic() throws Exception {\n    IndexWriter iw = getRunData().getIndexWriter();\n    if (iw != null) {\n      iw.commit(commitUserData);\n    } else {\n      IndexReader r = getRunData().getIndexReader();\n      if (r != null) {\n        r.commit(commitUserData);\n      } else {\n        throw new IllegalStateException(\"neither IndexWriter nor IndexReader is currently open\");\n      }\n    }\n    \n    return 1;\n  }\n\n","sourceOld":"  public int doLogic() throws Exception {\n    IndexWriter iw = getRunData().getIndexWriter();\n    if (iw != null) {\n      if (commitUserData == null) iw.commit();\n      else {\n        Map<String,String> map = new HashMap<String,String>();\n        map.put(OpenReaderTask.USER_DATA, commitUserData);\n        iw.commit(map);\n      }\n    }\n    \n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CommitIndexTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CommitIndexTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws Exception {\n    IndexWriter iw = getRunData().getIndexWriter();\n    if (iw != null) {\n      iw.commit(commitUserData);\n    } else {\n      IndexReader r = getRunData().getIndexReader();\n      if (r != null) {\n        r.commit(commitUserData);\n      } else {\n        throw new IllegalStateException(\"neither IndexWriter nor IndexReader is currently open\");\n      }\n    }\n    \n    return 1;\n  }\n\n","sourceOld":"  public int doLogic() throws Exception {\n    IndexWriter iw = getRunData().getIndexWriter();\n    if (iw != null) {\n      iw.commit(commitUserData);\n    } else {\n      IndexReader r = getRunData().getIndexReader();\n      if (r != null) {\n        r.commit(commitUserData);\n      } else {\n        throw new IllegalStateException(\"neither IndexWriter nor IndexReader is currently open\");\n      }\n    }\n    \n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3353540ef2debe4c4c017e9d86e2c60f9e784336","date":1258197258,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CommitIndexTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CommitIndexTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws Exception {\n    IndexWriter iw = getRunData().getIndexWriter();\n    if (iw != null) {\n      iw.commit(commitUserData);\n    } else {\n      IndexReader r = getRunData().getIndexReader();\n      if (r != null) {\n        r.commit(commitUserData);\n        r.decRef();\n      } else {\n        throw new IllegalStateException(\"neither IndexWriter nor IndexReader is currently open\");\n      }\n    }\n    \n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws Exception {\n    IndexWriter iw = getRunData().getIndexWriter();\n    if (iw != null) {\n      iw.commit(commitUserData);\n    } else {\n      IndexReader r = getRunData().getIndexReader();\n      if (r != null) {\n        r.commit(commitUserData);\n      } else {\n        throw new IllegalStateException(\"neither IndexWriter nor IndexReader is currently open\");\n      }\n    }\n    \n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CommitIndexTask#doLogic().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/CommitIndexTask#doLogic().mjava","sourceNew":"  @Override\n  public int doLogic() throws Exception {\n    IndexWriter iw = getRunData().getIndexWriter();\n    if (iw != null) {\n      iw.commit(commitUserData);\n    } else {\n      IndexReader r = getRunData().getIndexReader();\n      if (r != null) {\n        r.commit(commitUserData);\n        r.decRef();\n      } else {\n        throw new IllegalStateException(\"neither IndexWriter nor IndexReader is currently open\");\n      }\n    }\n    \n    return 1;\n  }\n\n","sourceOld":"  @Override\n  public int doLogic() throws Exception {\n    IndexWriter iw = getRunData().getIndexWriter();\n    if (iw != null) {\n      iw.commit(commitUserData);\n    } else {\n      IndexReader r = getRunData().getIndexReader();\n      if (r != null) {\n        r.commit(commitUserData);\n        r.decRef();\n      } else {\n        throw new IllegalStateException(\"neither IndexWriter nor IndexReader is currently open\");\n      }\n    }\n    \n    return 1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3353540ef2debe4c4c017e9d86e2c60f9e784336":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"b80ccb202de353e6899aab1bd4436d72171b2798":["c135b907ec07be761fc0f0c3501a038a2a28f3bc"],"4e1ce9be74263e9659aad8a6ee1f213193710b71":["b80ccb202de353e6899aab1bd4436d72171b2798"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["3a2007d6eb60e6999b60ec1ca4e7bee3c2366738"],"3a2007d6eb60e6999b60ec1ca4e7bee3c2366738":["4e1ce9be74263e9659aad8a6ee1f213193710b71"],"c135b907ec07be761fc0f0c3501a038a2a28f3bc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3353540ef2debe4c4c017e9d86e2c60f9e784336"]},"commit2Childs":{"3353540ef2debe4c4c017e9d86e2c60f9e784336":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b80ccb202de353e6899aab1bd4436d72171b2798":["4e1ce9be74263e9659aad8a6ee1f213193710b71"],"4e1ce9be74263e9659aad8a6ee1f213193710b71":["3a2007d6eb60e6999b60ec1ca4e7bee3c2366738"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c135b907ec07be761fc0f0c3501a038a2a28f3bc"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["3353540ef2debe4c4c017e9d86e2c60f9e784336"],"3a2007d6eb60e6999b60ec1ca4e7bee3c2366738":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"c135b907ec07be761fc0f0c3501a038a2a28f3bc":["b80ccb202de353e6899aab1bd4436d72171b2798"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}