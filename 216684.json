{"path":"lucene/facet/src/java/org/apache/lucene/facet/associations/AssociationsPayloadIterator#AssociationsPayloadIterator(IndexReader,String,T).mjava","commits":[{"id":"7a1037d9031f9702ee6912f8751ef1d5320da6d9","date":1357217787,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/associations/AssociationsPayloadIterator#AssociationsPayloadIterator(IndexReader,String,T).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Construct a new associations iterator. The given\n   * {@link CategoryAssociation} is used to deserialize the association values.\n   * It is assumed that all association values can be deserialized with the\n   * given {@link CategoryAssociation}.\n   */\n  public AssociationsPayloadIterator(IndexReader reader, String field, T association) throws IOException {\n    pi = new PayloadIterator(reader, new Term(field, association.getCategoryListID()));\n    hasAssociations = pi.init();\n    this.association = association;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/associations/AssociationsPayloadIterator#AssociationsPayloadIterator(IndexReader,String,T).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Construct a new associations iterator. The given\n   * {@link CategoryAssociation} is used to deserialize the association values.\n   * It is assumed that all association values can be deserialized with the\n   * given {@link CategoryAssociation}.\n   */\n  public AssociationsPayloadIterator(IndexReader reader, String field, T association) throws IOException {\n    pi = new PayloadIterator(reader, new Term(field, association.getCategoryListID()));\n    hasAssociations = pi.init();\n    this.association = association;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42f51b3ab4258ff4623227b0db011b8bb83db5c7","date":1358164991,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/associations/AssociationsPayloadIterator#AssociationsPayloadIterator(String,T).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/associations/AssociationsPayloadIterator#AssociationsPayloadIterator(IndexReader,String,T).mjava","sourceNew":"  /**\n   * Construct a new associations iterator. The given\n   * {@link CategoryAssociation} is used to deserialize the association values.\n   * It is assumed that all association values can be deserialized with the\n   * given {@link CategoryAssociation}.\n   */\n  public AssociationsPayloadIterator(String field, T association) throws IOException {\n    pi = new PayloadIterator(new Term(field, association.getCategoryListID()));\n    this.association = association;\n  }\n\n","sourceOld":"  /**\n   * Construct a new associations iterator. The given\n   * {@link CategoryAssociation} is used to deserialize the association values.\n   * It is assumed that all association values can be deserialized with the\n   * given {@link CategoryAssociation}.\n   */\n  public AssociationsPayloadIterator(IndexReader reader, String field, T association) throws IOException {\n    pi = new PayloadIterator(reader, new Term(field, association.getCategoryListID()));\n    hasAssociations = pi.init();\n    this.association = association;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/associations/AssociationsPayloadIterator#AssociationsPayloadIterator(String,T).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/associations/AssociationsPayloadIterator#AssociationsPayloadIterator(IndexReader,String,T).mjava","sourceNew":"  /**\n   * Construct a new associations iterator. The given\n   * {@link CategoryAssociation} is used to deserialize the association values.\n   * It is assumed that all association values can be deserialized with the\n   * given {@link CategoryAssociation}.\n   */\n  public AssociationsPayloadIterator(String field, T association) throws IOException {\n    pi = new PayloadIterator(new Term(field, association.getCategoryListID()));\n    this.association = association;\n  }\n\n","sourceOld":"  /**\n   * Construct a new associations iterator. The given\n   * {@link CategoryAssociation} is used to deserialize the association values.\n   * It is assumed that all association values can be deserialized with the\n   * given {@link CategoryAssociation}.\n   */\n  public AssociationsPayloadIterator(IndexReader reader, String field, T association) throws IOException {\n    pi = new PayloadIterator(reader, new Term(field, association.getCategoryListID()));\n    hasAssociations = pi.init();\n    this.association = association;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"42f51b3ab4258ff4623227b0db011b8bb83db5c7":["7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","42f51b3ab4258ff4623227b0db011b8bb83db5c7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["42f51b3ab4258ff4623227b0db011b8bb83db5c7"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["8917bfede3b4ca30f4305c1e391e9218959cd723"],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","42f51b3ab4258ff4623227b0db011b8bb83db5c7"],"42f51b3ab4258ff4623227b0db011b8bb83db5c7":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}