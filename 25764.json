{"path":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#getAll(Map[String,Object],String...).mjava","commits":[{"id":"9ebd3a557326ef3eab85b73a8cff781f7d801248","date":1431620752,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#getAll(Map[String,Object],String...).mjava","pathOld":"/dev/null","sourceNew":"  /**Copy all params to the given map or if the given map is null\n   * create a new one\n   */\n  public Map<String, Object> getAll(Map<String, Object> sink, String... params){\n    if(sink == null) sink = new LinkedHashMap<>();\n    for (String param : params) {\n      String[] v = getParams(param);\n      if(v != null && v.length>0 ) {\n        if(v.length == 1) {\n          sink.put(param, v[0]);\n        } else {\n          sink.put(param,v);\n        }\n      }\n    }\n    return sink;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4425aa1103f1abe8e39d220f12e82b94c4f8272a","date":1467268836,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#getAll(Map[String,Object],String...).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#getAll(Map[String,Object],String...).mjava","sourceNew":"  /**Copy all params to the given map or if the given map is null\n   * create a new one\n   */\n  public Map<String, Object> getAll(Map<String, Object> sink, String... params){\n    return getAll(sink, params == null ? Collections.emptyList() : Arrays.asList(params));\n  }\n\n","sourceOld":"  /**Copy all params to the given map or if the given map is null\n   * create a new one\n   */\n  public Map<String, Object> getAll(Map<String, Object> sink, String... params){\n    if(sink == null) sink = new LinkedHashMap<>();\n    for (String param : params) {\n      String[] v = getParams(param);\n      if(v != null && v.length>0 ) {\n        if(v.length == 1) {\n          sink.put(param, v[0]);\n        } else {\n          sink.put(param,v);\n        }\n      }\n    }\n    return sink;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#getAll(Map[String,Object],String...).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#getAll(Map[String,Object],String...).mjava","sourceNew":"  /**Copy all params to the given map or if the given map is null\n   * create a new one\n   */\n  public Map<String, Object> getAll(Map<String, Object> sink, String... params){\n    return getAll(sink, params == null ? Collections.emptyList() : Arrays.asList(params));\n  }\n\n","sourceOld":"  /**Copy all params to the given map or if the given map is null\n   * create a new one\n   */\n  public Map<String, Object> getAll(Map<String, Object> sink, String... params){\n    if(sink == null) sink = new LinkedHashMap<>();\n    for (String param : params) {\n      String[] v = getParams(param);\n      if(v != null && v.length>0 ) {\n        if(v.length == 1) {\n          sink.put(param, v[0]);\n        } else {\n          sink.put(param,v);\n        }\n      }\n    }\n    return sink;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"129e5b874f99ae4e04f39c337c940dda690f2d38","date":1524504409,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#getAll(Map[String,Object],String...).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#getAll(Map[String,Object],String...).mjava","sourceNew":"  /**Copy all params to the given map or if the given map is null\n   * create a new one\n   */\n  @Deprecated\n  public Map<String, Object> getAll(Map<String, Object> sink, String... params){\n    return getAll(sink, params == null ? Collections.emptyList() : Arrays.asList(params));\n  }\n\n","sourceOld":"  /**Copy all params to the given map or if the given map is null\n   * create a new one\n   */\n  public Map<String, Object> getAll(Map<String, Object> sink, String... params){\n    return getAll(sink, params == null ? Collections.emptyList() : Arrays.asList(params));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4425aa1103f1abe8e39d220f12e82b94c4f8272a":["9ebd3a557326ef3eab85b73a8cff781f7d801248"],"129e5b874f99ae4e04f39c337c940dda690f2d38":["4425aa1103f1abe8e39d220f12e82b94c4f8272a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9ebd3a557326ef3eab85b73a8cff781f7d801248":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["9ebd3a557326ef3eab85b73a8cff781f7d801248","4425aa1103f1abe8e39d220f12e82b94c4f8272a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["129e5b874f99ae4e04f39c337c940dda690f2d38"]},"commit2Childs":{"4425aa1103f1abe8e39d220f12e82b94c4f8272a":["129e5b874f99ae4e04f39c337c940dda690f2d38","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"129e5b874f99ae4e04f39c337c940dda690f2d38":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9ebd3a557326ef3eab85b73a8cff781f7d801248"],"9ebd3a557326ef3eab85b73a8cff781f7d801248":["4425aa1103f1abe8e39d220f12e82b94c4f8272a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}