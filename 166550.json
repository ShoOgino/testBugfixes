{"path":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","commits":[{"id":"01f60198ece724a6e96cd0b45f289cf42ff83d4f","date":1286864103,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public synchronized void finish(int docCount) throws IOException {\n      if (datOut != null)\n        datOut.close();\n      if (idxOut != null)\n        idxOut.close();\n      if(pool != null)\n        pool.reset();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ae97ad22c2ae646bfc1c09cab424cb07f9474ca","date":1289932456,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","sourceNew":"    @Override\n    public synchronized void finish(int docCount) throws IOException {\n      if (datOut != null)\n        datOut.close();\n      if (idxOut != null)\n        idxOut.close();\n      if (pool != null)\n        pool.reset();\n    }\n\n","sourceOld":"    @Override\n    public synchronized void finish(int docCount) throws IOException {\n      if (datOut != null)\n        datOut.close();\n      if (idxOut != null)\n        idxOut.close();\n      if(pool != null)\n        pool.reset();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16dc5aef9648bb8fedce2ef55874f52e62c2766d","date":1293994163,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","sourceNew":"    @Override\n    public synchronized void finish(int docCount) throws IOException {\n      try {\n        if (datOut != null)\n          datOut.close();\n      } finally {\n        try {\n          if (idxOut != null)\n            idxOut.close();\n        } finally {\n          if (pool != null)\n            pool.reset();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public synchronized void finish(int docCount) throws IOException {\n      if (datOut != null)\n        datOut.close();\n      if (idxOut != null)\n        idxOut.close();\n      if (pool != null)\n        pool.reset();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9235b9d4454a46c066cda47fed7ca0a34e614529","date":1304414372,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","sourceNew":"    @Override\n    public void finish(int docCount) throws IOException {\n      try {\n        if (datOut != null)\n          datOut.close();\n      } finally {\n        try {\n          if (idxOut != null)\n            idxOut.close();\n        } finally {\n          if (pool != null)\n            pool.reset();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public synchronized void finish(int docCount) throws IOException {\n      try {\n        if (datOut != null)\n          datOut.close();\n      } finally {\n        try {\n          if (idxOut != null)\n            idxOut.close();\n        } finally {\n          if (pool != null)\n            pool.reset();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"763d13ecba7c2e244aa7c7690a878daae26227f6","date":1305814974,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","sourceNew":"    @Override\n    public void finish(int docCount) throws IOException {\n      try {\n          datOut.close();\n      } finally {\n        try {\n          if (idxOut != null)\n            idxOut.close();\n        } finally {\n          if (pool != null)\n            pool.reset();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void finish(int docCount) throws IOException {\n      try {\n        if (datOut != null)\n          datOut.close();\n      } finally {\n        try {\n          if (idxOut != null)\n            idxOut.close();\n        } finally {\n          if (pool != null)\n            pool.reset();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11352ebb2f3f885d30324a3f4684be92642a25ee","date":1306844538,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","sourceNew":"    @Override\n    public void finish(int docCount) throws IOException {\n      try {\n        IOUtils.closeSafely(false, datOut, idxOut);\n      } finally {\n        if (pool != null) {\n          pool.reset();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void finish(int docCount) throws IOException {\n      try {\n          datOut.close();\n      } finally {\n        try {\n          if (idxOut != null)\n            idxOut.close();\n        } finally {\n          if (pool != null)\n            pool.reset();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void finish(int docCount) throws IOException {\n      try {\n        IOUtils.closeSafely(false, datOut, idxOut);\n      } finally {\n        if (pool != null) {\n          pool.reset();\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void finish(int docCount) throws IOException {\n      try {\n        IOUtils.closeSafely(false, datOut, idxOut);\n      } finally {\n        if (pool != null) {\n          pool.reset();\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b7a068f550e13e49517c6899cc3b94c8eeb72e5","date":1309354772,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","sourceNew":"    @Override\n    public abstract void finish(int docCount) throws IOException;\n\n","sourceOld":"    @Override\n    public void finish(int docCount) throws IOException {\n      try {\n        IOUtils.closeSafely(false, datOut, idxOut);\n      } finally {\n        if (pool != null) {\n          pool.reset();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","sourceNew":"    @Override\n    public abstract void finish(int docCount) throws IOException;\n\n","sourceOld":"    @Override\n    public void finish(int docCount) throws IOException {\n      try {\n        IOUtils.closeSafely(false, datOut, idxOut);\n      } finally {\n        if (pool != null) {\n          pool.reset();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","sourceNew":"    @Override\n    public abstract void finish(int docCount) throws IOException;\n\n","sourceOld":"    @Override\n    public void finish(int docCount) throws IOException {\n      try {\n        IOUtils.closeSafely(false, datOut, idxOut);\n      } finally {\n        if (pool != null) {\n          pool.reset();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9efc72acdea22f5285be0a808f8bba51bb8e367","date":1323217280,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/Bytes.BytesWriterBase#finish(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","sourceNew":"    @Override\n    public abstract void finish(int docCount) throws IOException;\n\n","sourceOld":"    @Override\n    public abstract void finish(int docCount) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/Bytes.BytesWriterBase#finish(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesWriterBase#finish(int).mjava","sourceNew":"    @Override\n    public abstract void finish(int docCount) throws IOException;\n\n","sourceOld":"    @Override\n    public abstract void finish(int docCount) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"3b7a068f550e13e49517c6899cc3b94c8eeb72e5":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["3b7a068f550e13e49517c6899cc3b94c8eeb72e5"],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["2e8d7ba2175f47e280231533f7d3016249cea88b","3b7a068f550e13e49517c6899cc3b94c8eeb72e5"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","3b7a068f550e13e49517c6899cc3b94c8eeb72e5"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["3b7a068f550e13e49517c6899cc3b94c8eeb72e5","f9efc72acdea22f5285be0a808f8bba51bb8e367"],"763d13ecba7c2e244aa7c7690a878daae26227f6":["9235b9d4454a46c066cda47fed7ca0a34e614529"],"9235b9d4454a46c066cda47fed7ca0a34e614529":["16dc5aef9648bb8fedce2ef55874f52e62c2766d"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","11352ebb2f3f885d30324a3f4684be92642a25ee"],"11352ebb2f3f885d30324a3f4684be92642a25ee":["763d13ecba7c2e244aa7c7690a878daae26227f6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"16dc5aef9648bb8fedce2ef55874f52e62c2766d":["3ae97ad22c2ae646bfc1c09cab424cb07f9474ca"],"3ae97ad22c2ae646bfc1c09cab424cb07f9474ca":["01f60198ece724a6e96cd0b45f289cf42ff83d4f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d638301ad1cfcae567b681b893bc8781f0ee48a5"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["817d8435e9135b756f08ce6710ab0baac51bdf88"],"3b7a068f550e13e49517c6899cc3b94c8eeb72e5":["f9efc72acdea22f5285be0a808f8bba51bb8e367","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["3ae97ad22c2ae646bfc1c09cab424cb07f9474ca"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"763d13ecba7c2e244aa7c7690a878daae26227f6":["11352ebb2f3f885d30324a3f4684be92642a25ee"],"9235b9d4454a46c066cda47fed7ca0a34e614529":["763d13ecba7c2e244aa7c7690a878daae26227f6"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","3b7a068f550e13e49517c6899cc3b94c8eeb72e5","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"11352ebb2f3f885d30324a3f4684be92642a25ee":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","01f60198ece724a6e96cd0b45f289cf42ff83d4f","2e8d7ba2175f47e280231533f7d3016249cea88b"],"16dc5aef9648bb8fedce2ef55874f52e62c2766d":["9235b9d4454a46c066cda47fed7ca0a34e614529"],"3ae97ad22c2ae646bfc1c09cab424cb07f9474ca":["16dc5aef9648bb8fedce2ef55874f52e62c2766d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}