{"path":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean).mjava","commits":[{"id":"b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469","date":1345037674,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean,boolean).mjava","sourceNew":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name, boolean forceNewDirectory) throws IOException {\n    return new SolrIndexWriter(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), false, core.getSchema(),\n        core.getSolrConfig().indexConfig, core.getDeletionPolicy(), core.getCodec(), forceNewDirectory);\n  }\n\n","sourceOld":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name,\n      boolean removeAllExisting, boolean forceNewDirectory) throws IOException {\n    return new SolrIndexWriter(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), removeAllExisting, core.getSchema(),\n        core.getSolrConfig().indexConfig, core.getDeletionPolicy(), core.getCodec(), forceNewDirectory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70fa1c0f4d75735ff2e1485e059d9bc5efa50598","date":1345296911,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean,boolean).mjava","sourceNew":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name, boolean forceNewDirectory) throws IOException {\n    return new SolrIndexWriter(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), false, core.getSchema(),\n        core.getSolrConfig().indexConfig, core.getDeletionPolicy(), core.getCodec(), forceNewDirectory);\n  }\n\n","sourceOld":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name,\n      boolean removeAllExisting, boolean forceNewDirectory) throws IOException {\n    return new SolrIndexWriter(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), removeAllExisting, core.getSchema(),\n        core.getSolrConfig().indexConfig, core.getDeletionPolicy(), core.getCodec(), forceNewDirectory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"616c1830142ff5c1ddedec1ed898733b73c8e23b","date":1345368925,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean,boolean).mjava","sourceNew":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name, boolean forceNewDirectory) throws IOException {\n    return new SolrIndexWriter(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), false, core.getSchema(),\n        core.getSolrConfig().indexConfig, core.getDeletionPolicy(), core.getCodec(), forceNewDirectory);\n  }\n\n","sourceOld":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name,\n      boolean removeAllExisting, boolean forceNewDirectory) throws IOException {\n    return new SolrIndexWriter(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), removeAllExisting, core.getSchema(),\n        core.getSolrConfig().indexConfig, core.getDeletionPolicy(), core.getCodec(), forceNewDirectory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e4d5fc8284faca306256427bbbb86017a32002cf","date":1347055110,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean).mjava","sourceNew":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name, boolean forceNewDirectory) throws IOException {\n    return SolrIndexWriter.create(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), false, core.getSchema(),\n        core.getSolrConfig().indexConfig, core.getDeletionPolicy(), core.getCodec(), forceNewDirectory);\n  }\n\n","sourceOld":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name, boolean forceNewDirectory) throws IOException {\n    return new SolrIndexWriter(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), false, core.getSchema(),\n        core.getSolrConfig().indexConfig, core.getDeletionPolicy(), core.getCodec(), forceNewDirectory);\n  }\n\n","bugFix":["b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54f9a16329716fa08b653c53f1c3dfc6b284d2cc","date":1363905854,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean).mjava","sourceNew":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name) throws IOException {\n    return SolrIndexWriter.create(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), false, core.getSchema(),\n        core.getSolrConfig().indexConfig, core.getDeletionPolicy(), core.getCodec());\n  }\n\n","sourceOld":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name, boolean forceNewDirectory) throws IOException {\n    return SolrIndexWriter.create(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), false, core.getSchema(),\n        core.getSolrConfig().indexConfig, core.getDeletionPolicy(), core.getCodec(), forceNewDirectory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e4d5fc8284faca306256427bbbb86017a32002cf":["b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"54f9a16329716fa08b653c53f1c3dfc6b284d2cc":["e4d5fc8284faca306256427bbbb86017a32002cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54f9a16329716fa08b653c53f1c3dfc6b284d2cc"],"b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e4d5fc8284faca306256427bbbb86017a32002cf":["54f9a16329716fa08b653c53f1c3dfc6b284d2cc"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":[],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469"],"54f9a16329716fa08b653c53f1c3dfc6b284d2cc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469":["e4d5fc8284faca306256427bbbb86017a32002cf","616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}