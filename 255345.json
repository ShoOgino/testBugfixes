{"path":"lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,String).mjava","sourceNew":"  @Override\n  public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n    final FieldType ft = new FieldType(TextField.TYPE_STORED);\n    ft.setStoreTermVectors(fieldInfo.storeTermVector);\n    ft.setStoreTermVectors(fieldInfo.storeTermVector);\n    ft.setIndexed(fieldInfo.isIndexed);\n    ft.setOmitNorms(fieldInfo.omitNorms);\n    ft.setIndexOptions(fieldInfo.indexOptions);\n    doc.add(new Field(fieldInfo.name, value, ft));\n  }\n\n","sourceOld":"  @Override\n  public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n    final FieldType ft = new FieldType(TextField.TYPE_STORED);\n    ft.setStoreTermVectors(fieldInfo.storeTermVector);\n    ft.setStoreTermVectors(fieldInfo.storeTermVector);\n    ft.setIndexed(fieldInfo.isIndexed);\n    ft.setOmitNorms(fieldInfo.omitNorms);\n    ft.setIndexOptions(fieldInfo.indexOptions);\n    doc.add(new Field(fieldInfo.name, value, ft));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"76923f6a33f2c4bec7f584e3f251261afe7ea276","date":1337149711,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,String).mjava","sourceNew":"  @Override\n  public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n    final FieldType ft = new FieldType(TextField.TYPE_STORED);\n    ft.setStoreTermVectors(fieldInfo.hasVectors());\n    ft.setIndexed(fieldInfo.isIndexed());\n    ft.setOmitNorms(fieldInfo.omitsNorms());\n    ft.setIndexOptions(fieldInfo.getIndexOptions());\n    doc.add(new Field(fieldInfo.name, value, ft));\n  }\n\n","sourceOld":"  @Override\n  public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n    final FieldType ft = new FieldType(TextField.TYPE_STORED);\n    ft.setStoreTermVectors(fieldInfo.storeTermVector);\n    ft.setStoreTermVectors(fieldInfo.storeTermVector);\n    ft.setIndexed(fieldInfo.isIndexed);\n    ft.setOmitNorms(fieldInfo.omitNorms);\n    ft.setIndexOptions(fieldInfo.indexOptions);\n    doc.add(new Field(fieldInfo.name, value, ft));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,String).mjava","sourceNew":"  @Override\n  public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n    final FieldType ft = new FieldType(TextField.TYPE_STORED);\n    ft.setStoreTermVectors(fieldInfo.hasVectors());\n    ft.setIndexed(fieldInfo.isIndexed());\n    ft.setOmitNorms(fieldInfo.omitsNorms());\n    ft.setIndexOptions(fieldInfo.getIndexOptions());\n    doc.add(new Field(fieldInfo.name, value, ft));\n  }\n\n","sourceOld":"  @Override\n  public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n    final FieldType ft = new FieldType(TextField.TYPE_STORED);\n    ft.setStoreTermVectors(fieldInfo.storeTermVector);\n    ft.setStoreTermVectors(fieldInfo.storeTermVector);\n    ft.setIndexed(fieldInfo.isIndexed);\n    ft.setOmitNorms(fieldInfo.omitNorms);\n    ft.setIndexOptions(fieldInfo.indexOptions);\n    doc.add(new Field(fieldInfo.name, value, ft));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a","date":1341524239,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,String).mjava","sourceNew":"  @Override\n  public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n    /*\n    final FieldType ft = new FieldType(TextField.TYPE_STORED);\n    ft.setStoreTermVectors(fieldInfo.hasVectors());\n    ft.setIndexed(fieldInfo.isIndexed());\n    ft.setOmitNorms(fieldInfo.omitsNorms());\n    ft.setIndexOptions(fieldInfo.getIndexOptions());\n    */\n    doc.add(new StoredField(fieldInfo.name, value));\n    //doc.add(new Field(fieldInfo.name, value, ft));\n  }\n\n","sourceOld":"  @Override\n  public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n    final FieldType ft = new FieldType(TextField.TYPE_STORED);\n    ft.setStoreTermVectors(fieldInfo.hasVectors());\n    ft.setIndexed(fieldInfo.isIndexed());\n    ft.setOmitNorms(fieldInfo.omitsNorms());\n    ft.setIndexOptions(fieldInfo.getIndexOptions());\n    doc.add(new Field(fieldInfo.name, value, ft));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4","date":1341839195,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,String).mjava","sourceNew":"  @Override\n  public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n    final FieldType ft = new FieldType(TextField.TYPE_STORED);\n    ft.setStoreTermVectors(fieldInfo.hasVectors());\n    ft.setIndexed(fieldInfo.isIndexed());\n    ft.setOmitNorms(fieldInfo.omitsNorms());\n    ft.setIndexOptions(fieldInfo.getIndexOptions());\n    doc.add(new StoredField(fieldInfo.name, value, ft));\n  }\n\n","sourceOld":"  @Override\n  public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n    /*\n    final FieldType ft = new FieldType(TextField.TYPE_STORED);\n    ft.setStoreTermVectors(fieldInfo.hasVectors());\n    ft.setIndexed(fieldInfo.isIndexed());\n    ft.setOmitNorms(fieldInfo.omitsNorms());\n    ft.setIndexOptions(fieldInfo.getIndexOptions());\n    */\n    doc.add(new StoredField(fieldInfo.name, value));\n    //doc.add(new Field(fieldInfo.name, value, ft));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,String).mjava","sourceNew":"  @Override\n  public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n    final FieldType ft = new FieldType(TextField.TYPE_STORED);\n    ft.setStoreTermVectors(fieldInfo.hasVectors());\n    ft.setIndexed(fieldInfo.isIndexed());\n    ft.setOmitNorms(fieldInfo.omitsNorms());\n    ft.setIndexOptions(fieldInfo.getIndexOptions());\n    doc.add(new StoredField(fieldInfo.name, value, ft));\n  }\n\n","sourceOld":"  @Override\n  public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n    final FieldType ft = new FieldType(TextField.TYPE_STORED);\n    ft.setStoreTermVectors(fieldInfo.hasVectors());\n    ft.setIndexed(fieldInfo.isIndexed());\n    ft.setOmitNorms(fieldInfo.omitsNorms());\n    ft.setIndexOptions(fieldInfo.getIndexOptions());\n    doc.add(new Field(fieldInfo.name, value, ft));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3184874f7f3aca850248483485b4995343066875","date":1413876758,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,String).mjava","sourceNew":"  @Override\n  public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n    final FieldType ft = new FieldType(TextField.TYPE_STORED);\n    ft.setStoreTermVectors(fieldInfo.hasVectors());\n    ft.setOmitNorms(fieldInfo.omitsNorms());\n    ft.setIndexOptions(fieldInfo.getIndexOptions());\n    doc.add(new StoredField(fieldInfo.name, value, ft));\n  }\n\n","sourceOld":"  @Override\n  public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n    final FieldType ft = new FieldType(TextField.TYPE_STORED);\n    ft.setStoreTermVectors(fieldInfo.hasVectors());\n    ft.setIndexed(fieldInfo.isIndexed());\n    ft.setOmitNorms(fieldInfo.omitsNorms());\n    ft.setIndexOptions(fieldInfo.getIndexOptions());\n    doc.add(new StoredField(fieldInfo.name, value, ft));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,String).mjava","sourceNew":"  @Override\n  public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n    final FieldType ft = new FieldType(TextField.TYPE_STORED);\n    ft.setStoreTermVectors(fieldInfo.hasVectors());\n    ft.setOmitNorms(fieldInfo.omitsNorms());\n    ft.setIndexOptions(fieldInfo.getIndexOptions());\n    doc.add(new StoredField(fieldInfo.name, value, ft));\n  }\n\n","sourceOld":"  @Override\n  public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n    final FieldType ft = new FieldType(TextField.TYPE_STORED);\n    ft.setStoreTermVectors(fieldInfo.hasVectors());\n    ft.setIndexed(fieldInfo.isIndexed());\n    ft.setOmitNorms(fieldInfo.omitsNorms());\n    ft.setIndexOptions(fieldInfo.getIndexOptions());\n    doc.add(new StoredField(fieldInfo.name, value, ft));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"399d127639ae13222a8545b50e0ac545a6bcd2d7","date":1428704686,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,byte[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,String).mjava","sourceNew":"  @Override\n  public void stringField(FieldInfo fieldInfo, byte[] value) throws IOException {\n    final FieldType ft = new FieldType(TextField.TYPE_STORED);\n    ft.setStoreTermVectors(fieldInfo.hasVectors());\n    ft.setOmitNorms(fieldInfo.omitsNorms());\n    ft.setIndexOptions(fieldInfo.getIndexOptions());\n    doc.add(new StoredField(fieldInfo.name, new String(value, StandardCharsets.UTF_8), ft));\n  }\n\n","sourceOld":"  @Override\n  public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n    final FieldType ft = new FieldType(TextField.TYPE_STORED);\n    ft.setStoreTermVectors(fieldInfo.hasVectors());\n    ft.setOmitNorms(fieldInfo.omitsNorms());\n    ft.setIndexOptions(fieldInfo.getIndexOptions());\n    doc.add(new StoredField(fieldInfo.name, value, ft));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"500188ac33da6ce742a5b18858f34701ef16c77a","date":1558462722,"type":1,"author":"Namgyu Kim","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/DocumentStoredFieldVisitor#stringField(FieldInfo,byte[]).mjava","sourceNew":"  @Override\n  public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n    final FieldType ft = new FieldType(TextField.TYPE_STORED);\n    ft.setStoreTermVectors(fieldInfo.hasVectors());\n    ft.setOmitNorms(fieldInfo.omitsNorms());\n    ft.setIndexOptions(fieldInfo.getIndexOptions());\n    doc.add(new StoredField(fieldInfo.name, Objects.requireNonNull(value, \"String value should not be null\"), ft));\n  }\n\n","sourceOld":"  @Override\n  public void stringField(FieldInfo fieldInfo, byte[] value) throws IOException {\n    final FieldType ft = new FieldType(TextField.TYPE_STORED);\n    ft.setStoreTermVectors(fieldInfo.hasVectors());\n    ft.setOmitNorms(fieldInfo.omitsNorms());\n    ft.setIndexOptions(fieldInfo.getIndexOptions());\n    doc.add(new StoredField(fieldInfo.name, new String(value, StandardCharsets.UTF_8), ft));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"76923f6a33f2c4bec7f584e3f251261afe7ea276":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4":["33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a"],"1d028314cced5858683a1bb4741423d0f934257b":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","76923f6a33f2c4bec7f584e3f251261afe7ea276"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["1d028314cced5858683a1bb4741423d0f934257b","3184874f7f3aca850248483485b4995343066875"],"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"500188ac33da6ce742a5b18858f34701ef16c77a":["399d127639ae13222a8545b50e0ac545a6bcd2d7"],"399d127639ae13222a8545b50e0ac545a6bcd2d7":["3184874f7f3aca850248483485b4995343066875"],"3184874f7f3aca850248483485b4995343066875":["1d028314cced5858683a1bb4741423d0f934257b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["500188ac33da6ce742a5b18858f34701ef16c77a"]},"commit2Childs":{"76923f6a33f2c4bec7f584e3f251261afe7ea276":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4":["1d028314cced5858683a1bb4741423d0f934257b"],"1d028314cced5858683a1bb4741423d0f934257b":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","3184874f7f3aca850248483485b4995343066875"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["1d028314cced5858683a1bb4741423d0f934257b","33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"33e9fa3b49f4a365a04fdfc8a32dbcd0df798f5a":["8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["76923f6a33f2c4bec7f584e3f251261afe7ea276","615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"500188ac33da6ce742a5b18858f34701ef16c77a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"399d127639ae13222a8545b50e0ac545a6bcd2d7":["500188ac33da6ce742a5b18858f34701ef16c77a"],"3184874f7f3aca850248483485b4995343066875":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","399d127639ae13222a8545b50e0ac545a6bcd2d7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}