{"path":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare(SolrDocumentList,SolrDocumentList,int,Map[String,Integer]).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare(SolrDocumentList,SolrDocumentList,int,Map[String,Integer]).mjava","pathOld":"solr/src/test-framework/org/apache/solr/BaseDistributedSearchTestCase#compare(SolrDocumentList,SolrDocumentList,int,Map[String,Integer]).mjava","sourceNew":"  public static String compare(SolrDocumentList a, SolrDocumentList b, int flags, Map<String, Integer> handle) {\n    boolean ordered = (flags & UNORDERED) == 0;\n\n    String cmp;\n    int f = flags(handle, \"maxScore\");\n    if ((f & SKIPVAL) == 0) {\n      cmp = compare(a.getMaxScore(), b.getMaxScore(), 0, handle);\n      if (cmp != null) return \".maxScore\" + cmp;\n    } else {\n      if (b.getMaxScore() != null) {\n        if (a.getMaxScore() == null) {\n          return \".maxScore missing\";\n        }\n      }\n    }\n\n    cmp = compare(a.getNumFound(), b.getNumFound(), 0, handle);\n    if (cmp != null) return \".numFound\" + cmp;\n\n    cmp = compare(a.getStart(), b.getStart(), 0, handle);\n    if (cmp != null) return \".start\" + cmp;\n\n    cmp = compare(a.size(), b.size(), 0, handle);\n    if (cmp != null) return \".size()\" + cmp;\n\n    // only for completely ordered results (ties might be in a different order)\n    if (ordered) {\n      for (int i = 0; i < a.size(); i++) {\n        cmp = compare(a.get(i), b.get(i), 0, handle);\n        if (cmp != null) return \"[\" + i + \"]\" + cmp;\n      }\n      return null;\n    }\n\n    // unordered case\n    for (int i = 0; i < a.size(); i++) {\n      SolrDocument doc = a.get(i);\n      Object key = doc.getFirstValue(\"id\");\n      SolrDocument docb = null;\n      if (key == null) {\n        // no id field to correlate... must compare ordered\n        docb = b.get(i);\n      } else {\n        for (int j = 0; j < b.size(); j++) {\n          docb = b.get(j);\n          if (key.equals(docb.getFirstValue(\"id\"))) break;\n        }\n      }\n      // if (docb == null) return \"[id=\"+key+\"]\";\n      cmp = compare(doc, docb, 0, handle);\n      if (cmp != null) return \"[id=\" + key + \"]\" + cmp;\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String compare(SolrDocumentList a, SolrDocumentList b, int flags, Map<String, Integer> handle) {\n    boolean ordered = (flags & UNORDERED) == 0;\n\n    String cmp;\n    int f = flags(handle, \"maxScore\");\n    if ((f & SKIPVAL) == 0) {\n      cmp = compare(a.getMaxScore(), b.getMaxScore(), 0, handle);\n      if (cmp != null) return \".maxScore\" + cmp;\n    } else {\n      if (b.getMaxScore() != null) {\n        if (a.getMaxScore() == null) {\n          return \".maxScore missing\";\n        }\n      }\n    }\n\n    cmp = compare(a.getNumFound(), b.getNumFound(), 0, handle);\n    if (cmp != null) return \".numFound\" + cmp;\n\n    cmp = compare(a.getStart(), b.getStart(), 0, handle);\n    if (cmp != null) return \".start\" + cmp;\n\n    cmp = compare(a.size(), b.size(), 0, handle);\n    if (cmp != null) return \".size()\" + cmp;\n\n    // only for completely ordered results (ties might be in a different order)\n    if (ordered) {\n      for (int i = 0; i < a.size(); i++) {\n        cmp = compare(a.get(i), b.get(i), 0, handle);\n        if (cmp != null) return \"[\" + i + \"]\" + cmp;\n      }\n      return null;\n    }\n\n    // unordered case\n    for (int i = 0; i < a.size(); i++) {\n      SolrDocument doc = a.get(i);\n      Object key = doc.getFirstValue(\"id\");\n      SolrDocument docb = null;\n      if (key == null) {\n        // no id field to correlate... must compare ordered\n        docb = b.get(i);\n      } else {\n        for (int j = 0; j < b.size(); j++) {\n          docb = b.get(j);\n          if (key.equals(docb.getFirstValue(\"id\"))) break;\n        }\n      }\n      // if (docb == null) return \"[id=\"+key+\"]\";\n      cmp = compare(doc, docb, 0, handle);\n      if (cmp != null) return \"[id=\" + key + \"]\" + cmp;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare(SolrDocumentList,SolrDocumentList,int,Map[String,Integer]).mjava","pathOld":"solr/src/test-framework/org/apache/solr/BaseDistributedSearchTestCase#compare(SolrDocumentList,SolrDocumentList,int,Map[String,Integer]).mjava","sourceNew":"  public static String compare(SolrDocumentList a, SolrDocumentList b, int flags, Map<String, Integer> handle) {\n    boolean ordered = (flags & UNORDERED) == 0;\n\n    String cmp;\n    int f = flags(handle, \"maxScore\");\n    if ((f & SKIPVAL) == 0) {\n      cmp = compare(a.getMaxScore(), b.getMaxScore(), 0, handle);\n      if (cmp != null) return \".maxScore\" + cmp;\n    } else {\n      if (b.getMaxScore() != null) {\n        if (a.getMaxScore() == null) {\n          return err(\".maxScore missing\");\n        }\n      }\n    }\n\n    cmp = compare(a.getNumFound(), b.getNumFound(), 0, handle);\n    if (cmp != null) return \".numFound\" + cmp;\n\n    cmp = compare(a.getStart(), b.getStart(), 0, handle);\n    if (cmp != null) return \".start\" + cmp;\n\n    cmp = compare(a.size(), b.size(), 0, handle);\n    if (cmp != null) return \".size()\" + cmp;\n\n    // only for completely ordered results (ties might be in a different order)\n    if (ordered) {\n      for (int i = 0; i < a.size(); i++) {\n        cmp = compare(a.get(i), b.get(i), 0, handle);\n        if (cmp != null) return \"[\" + i + \"]\" + cmp;\n      }\n      return null;\n    }\n\n    // unordered case\n    for (int i = 0; i < a.size(); i++) {\n      SolrDocument doc = a.get(i);\n      Object key = doc.getFirstValue(\"id\");\n      SolrDocument docb = null;\n      if (key == null) {\n        // no id field to correlate... must compare ordered\n        docb = b.get(i);\n      } else {\n        for (int j = 0; j < b.size(); j++) {\n          docb = b.get(j);\n          if (key.equals(docb.getFirstValue(\"id\"))) break;\n        }\n      }\n      // if (docb == null) return \"[id=\"+key+\"]\";\n      cmp = compare(doc, docb, 0, handle);\n      if (cmp != null) return \"[id=\" + key + \"]\" + cmp;\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String compare(SolrDocumentList a, SolrDocumentList b, int flags, Map<String, Integer> handle) {\n    boolean ordered = (flags & UNORDERED) == 0;\n\n    String cmp;\n    int f = flags(handle, \"maxScore\");\n    if ((f & SKIPVAL) == 0) {\n      cmp = compare(a.getMaxScore(), b.getMaxScore(), 0, handle);\n      if (cmp != null) return \".maxScore\" + cmp;\n    } else {\n      if (b.getMaxScore() != null) {\n        if (a.getMaxScore() == null) {\n          return err(\".maxScore missing\");\n        }\n      }\n    }\n\n    cmp = compare(a.getNumFound(), b.getNumFound(), 0, handle);\n    if (cmp != null) return \".numFound\" + cmp;\n\n    cmp = compare(a.getStart(), b.getStart(), 0, handle);\n    if (cmp != null) return \".start\" + cmp;\n\n    cmp = compare(a.size(), b.size(), 0, handle);\n    if (cmp != null) return \".size()\" + cmp;\n\n    // only for completely ordered results (ties might be in a different order)\n    if (ordered) {\n      for (int i = 0; i < a.size(); i++) {\n        cmp = compare(a.get(i), b.get(i), 0, handle);\n        if (cmp != null) return \"[\" + i + \"]\" + cmp;\n      }\n      return null;\n    }\n\n    // unordered case\n    for (int i = 0; i < a.size(); i++) {\n      SolrDocument doc = a.get(i);\n      Object key = doc.getFirstValue(\"id\");\n      SolrDocument docb = null;\n      if (key == null) {\n        // no id field to correlate... must compare ordered\n        docb = b.get(i);\n      } else {\n        for (int j = 0; j < b.size(); j++) {\n          docb = b.get(j);\n          if (key.equals(docb.getFirstValue(\"id\"))) break;\n        }\n      }\n      // if (docb == null) return \"[id=\"+key+\"]\";\n      cmp = compare(doc, docb, 0, handle);\n      if (cmp != null) return \"[id=\" + key + \"]\" + cmp;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare(SolrDocumentList,SolrDocumentList,int,Map[String,Integer]).mjava","pathOld":"solr/src/test-framework/org/apache/solr/BaseDistributedSearchTestCase#compare(SolrDocumentList,SolrDocumentList,int,Map[String,Integer]).mjava","sourceNew":"  public static String compare(SolrDocumentList a, SolrDocumentList b, int flags, Map<String, Integer> handle) {\n    boolean ordered = (flags & UNORDERED) == 0;\n\n    String cmp;\n    int f = flags(handle, \"maxScore\");\n    if ((f & SKIPVAL) == 0) {\n      cmp = compare(a.getMaxScore(), b.getMaxScore(), 0, handle);\n      if (cmp != null) return \".maxScore\" + cmp;\n    } else {\n      if (b.getMaxScore() != null) {\n        if (a.getMaxScore() == null) {\n          return \".maxScore missing\";\n        }\n      }\n    }\n\n    cmp = compare(a.getNumFound(), b.getNumFound(), 0, handle);\n    if (cmp != null) return \".numFound\" + cmp;\n\n    cmp = compare(a.getStart(), b.getStart(), 0, handle);\n    if (cmp != null) return \".start\" + cmp;\n\n    cmp = compare(a.size(), b.size(), 0, handle);\n    if (cmp != null) return \".size()\" + cmp;\n\n    // only for completely ordered results (ties might be in a different order)\n    if (ordered) {\n      for (int i = 0; i < a.size(); i++) {\n        cmp = compare(a.get(i), b.get(i), 0, handle);\n        if (cmp != null) return \"[\" + i + \"]\" + cmp;\n      }\n      return null;\n    }\n\n    // unordered case\n    for (int i = 0; i < a.size(); i++) {\n      SolrDocument doc = a.get(i);\n      Object key = doc.getFirstValue(\"id\");\n      SolrDocument docb = null;\n      if (key == null) {\n        // no id field to correlate... must compare ordered\n        docb = b.get(i);\n      } else {\n        for (int j = 0; j < b.size(); j++) {\n          docb = b.get(j);\n          if (key.equals(docb.getFirstValue(\"id\"))) break;\n        }\n      }\n      // if (docb == null) return \"[id=\"+key+\"]\";\n      cmp = compare(doc, docb, 0, handle);\n      if (cmp != null) return \"[id=\" + key + \"]\" + cmp;\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String compare(SolrDocumentList a, SolrDocumentList b, int flags, Map<String, Integer> handle) {\n    boolean ordered = (flags & UNORDERED) == 0;\n\n    String cmp;\n    int f = flags(handle, \"maxScore\");\n    if ((f & SKIPVAL) == 0) {\n      cmp = compare(a.getMaxScore(), b.getMaxScore(), 0, handle);\n      if (cmp != null) return \".maxScore\" + cmp;\n    } else {\n      if (b.getMaxScore() != null) {\n        if (a.getMaxScore() == null) {\n          return err(\".maxScore missing\");\n        }\n      }\n    }\n\n    cmp = compare(a.getNumFound(), b.getNumFound(), 0, handle);\n    if (cmp != null) return \".numFound\" + cmp;\n\n    cmp = compare(a.getStart(), b.getStart(), 0, handle);\n    if (cmp != null) return \".start\" + cmp;\n\n    cmp = compare(a.size(), b.size(), 0, handle);\n    if (cmp != null) return \".size()\" + cmp;\n\n    // only for completely ordered results (ties might be in a different order)\n    if (ordered) {\n      for (int i = 0; i < a.size(); i++) {\n        cmp = compare(a.get(i), b.get(i), 0, handle);\n        if (cmp != null) return \"[\" + i + \"]\" + cmp;\n      }\n      return null;\n    }\n\n    // unordered case\n    for (int i = 0; i < a.size(); i++) {\n      SolrDocument doc = a.get(i);\n      Object key = doc.getFirstValue(\"id\");\n      SolrDocument docb = null;\n      if (key == null) {\n        // no id field to correlate... must compare ordered\n        docb = b.get(i);\n      } else {\n        for (int j = 0; j < b.size(); j++) {\n          docb = b.get(j);\n          if (key.equals(docb.getFirstValue(\"id\"))) break;\n        }\n      }\n      // if (docb == null) return \"[id=\"+key+\"]\";\n      cmp = compare(doc, docb, 0, handle);\n      if (cmp != null) return \"[id=\" + key + \"]\" + cmp;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e8a6094f2ecf9edcd3bb224b087580ac0aa13f2","date":1448513807,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare(SolrDocumentList,SolrDocumentList,int,Map[String,Integer]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#compare(SolrDocumentList,SolrDocumentList,int,Map[String,Integer]).mjava","sourceNew":"  public static String compare(SolrDocumentList a, SolrDocumentList b, int flags, Map<String, Integer> handle) {\n    boolean ordered = (flags & UNORDERED) == 0;\n\n    String cmp;\n    int f = flags(handle, \"maxScore\");\n    if (f == 0) {\n      cmp = compare(a.getMaxScore(), b.getMaxScore(), 0, handle);\n      if (cmp != null) return \".maxScore\" + cmp;\n    } else if ((f & SKIP) == 0) { // so we skip val but otherwise both should be present\n      assert (f & SKIPVAL) != 0;\n      if (b.getMaxScore() != null) {\n        if (a.getMaxScore() == null) {\n          return \".maxScore missing\";\n        }\n      }\n    }\n\n    cmp = compare(a.getNumFound(), b.getNumFound(), 0, handle);\n    if (cmp != null) return \".numFound\" + cmp;\n\n    cmp = compare(a.getStart(), b.getStart(), 0, handle);\n    if (cmp != null) return \".start\" + cmp;\n\n    cmp = compare(a.size(), b.size(), 0, handle);\n    if (cmp != null) return \".size()\" + cmp;\n\n    // only for completely ordered results (ties might be in a different order)\n    if (ordered) {\n      for (int i = 0; i < a.size(); i++) {\n        cmp = compare(a.get(i), b.get(i), 0, handle);\n        if (cmp != null) return \"[\" + i + \"]\" + cmp;\n      }\n      return null;\n    }\n\n    // unordered case\n    for (int i = 0; i < a.size(); i++) {\n      SolrDocument doc = a.get(i);\n      Object key = doc.getFirstValue(\"id\");\n      SolrDocument docb = null;\n      if (key == null) {\n        // no id field to correlate... must compare ordered\n        docb = b.get(i);\n      } else {\n        for (int j = 0; j < b.size(); j++) {\n          docb = b.get(j);\n          if (key.equals(docb.getFirstValue(\"id\"))) break;\n        }\n      }\n      // if (docb == null) return \"[id=\"+key+\"]\";\n      cmp = compare(doc, docb, 0, handle);\n      if (cmp != null) return \"[id=\" + key + \"]\" + cmp;\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String compare(SolrDocumentList a, SolrDocumentList b, int flags, Map<String, Integer> handle) {\n    boolean ordered = (flags & UNORDERED) == 0;\n\n    String cmp;\n    int f = flags(handle, \"maxScore\");\n    if ((f & SKIPVAL) == 0) {\n      cmp = compare(a.getMaxScore(), b.getMaxScore(), 0, handle);\n      if (cmp != null) return \".maxScore\" + cmp;\n    } else {\n      if (b.getMaxScore() != null) {\n        if (a.getMaxScore() == null) {\n          return \".maxScore missing\";\n        }\n      }\n    }\n\n    cmp = compare(a.getNumFound(), b.getNumFound(), 0, handle);\n    if (cmp != null) return \".numFound\" + cmp;\n\n    cmp = compare(a.getStart(), b.getStart(), 0, handle);\n    if (cmp != null) return \".start\" + cmp;\n\n    cmp = compare(a.size(), b.size(), 0, handle);\n    if (cmp != null) return \".size()\" + cmp;\n\n    // only for completely ordered results (ties might be in a different order)\n    if (ordered) {\n      for (int i = 0; i < a.size(); i++) {\n        cmp = compare(a.get(i), b.get(i), 0, handle);\n        if (cmp != null) return \"[\" + i + \"]\" + cmp;\n      }\n      return null;\n    }\n\n    // unordered case\n    for (int i = 0; i < a.size(); i++) {\n      SolrDocument doc = a.get(i);\n      Object key = doc.getFirstValue(\"id\");\n      SolrDocument docb = null;\n      if (key == null) {\n        // no id field to correlate... must compare ordered\n        docb = b.get(i);\n      } else {\n        for (int j = 0; j < b.size(); j++) {\n          docb = b.get(j);\n          if (key.equals(docb.getFirstValue(\"id\"))) break;\n        }\n      }\n      // if (docb == null) return \"[id=\"+key+\"]\";\n      cmp = compare(doc, docb, 0, handle);\n      if (cmp != null) return \"[id=\" + key + \"]\" + cmp;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5e8a6094f2ecf9edcd3bb224b087580ac0aa13f2":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5e8a6094f2ecf9edcd3bb224b087580ac0aa13f2"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["5e8a6094f2ecf9edcd3bb224b087580ac0aa13f2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"5e8a6094f2ecf9edcd3bb224b087580ac0aa13f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}