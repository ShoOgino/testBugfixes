{"path":"lucene/core/src/java/org/apache/lucene/util/SortedVIntList.SortedVIntListBuilder#addInt(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SortedVIntList.SortedVIntListBuilder#addInt(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/SortedVIntList.SortedVIntListBuilder#addInt(int).mjava","sourceNew":"    void addInt(int nextInt) {\n      int diff = nextInt - lastInt;\n      if (diff < 0) {\n        throw new IllegalArgumentException(\n            \"Input not sorted or first element negative.\");\n      }\n  \n      if ((lastBytePos + MAX_BYTES_PER_INT) > bytes.length) {\n        // Biggest possible int does not fit.\n        resizeBytes(ArrayUtil.oversize(lastBytePos + MAX_BYTES_PER_INT, 1));\n      }\n  \n      // See org.apache.lucene.store.IndexOutput.writeVInt()\n      while ((diff & ~VB1) != 0) { // The high bit of the next byte needs to be set.\n        bytes[lastBytePos++] = (byte) ((diff & VB1) | ~VB1);\n        diff >>>= BIT_SHIFT;\n      }\n      bytes[lastBytePos++] = (byte) diff; // Last byte, high bit not set.\n      size++;\n      lastInt = nextInt;\n    }\n\n","sourceOld":"    void addInt(int nextInt) {\n      int diff = nextInt - lastInt;\n      if (diff < 0) {\n        throw new IllegalArgumentException(\n            \"Input not sorted or first element negative.\");\n      }\n  \n      if ((lastBytePos + MAX_BYTES_PER_INT) > bytes.length) {\n        // Biggest possible int does not fit.\n        resizeBytes(ArrayUtil.oversize(lastBytePos + MAX_BYTES_PER_INT, 1));\n      }\n  \n      // See org.apache.lucene.store.IndexOutput.writeVInt()\n      while ((diff & ~VB1) != 0) { // The high bit of the next byte needs to be set.\n        bytes[lastBytePos++] = (byte) ((diff & VB1) | ~VB1);\n        diff >>>= BIT_SHIFT;\n      }\n      bytes[lastBytePos++] = (byte) diff; // Last byte, high bit not set.\n      size++;\n      lastInt = nextInt;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0cca60f93825506352a91503b0a573cb2aa99259","date":1347873764,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/SortedVIntList.SortedVIntListBuilder#addInt(int).mjava","sourceNew":null,"sourceOld":"    void addInt(int nextInt) {\n      int diff = nextInt - lastInt;\n      if (diff < 0) {\n        throw new IllegalArgumentException(\n            \"Input not sorted or first element negative.\");\n      }\n  \n      if ((lastBytePos + MAX_BYTES_PER_INT) > bytes.length) {\n        // Biggest possible int does not fit.\n        resizeBytes(ArrayUtil.oversize(lastBytePos + MAX_BYTES_PER_INT, 1));\n      }\n  \n      // See org.apache.lucene.store.IndexOutput.writeVInt()\n      while ((diff & ~VB1) != 0) { // The high bit of the next byte needs to be set.\n        bytes[lastBytePos++] = (byte) ((diff & VB1) | ~VB1);\n        diff >>>= BIT_SHIFT;\n      }\n      bytes[lastBytePos++] = (byte) diff; // Last byte, high bit not set.\n      size++;\n      lastInt = nextInt;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0cca60f93825506352a91503b0a573cb2aa99259":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0cca60f93825506352a91503b0a573cb2aa99259"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["0cca60f93825506352a91503b0a573cb2aa99259"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"0cca60f93825506352a91503b0a573cb2aa99259":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}