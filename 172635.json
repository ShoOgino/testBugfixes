{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanContainQuery.SpanContainWeight#SpanContainWeight(IndexSearcher,Map[Term,TermContext],SpanCollectorFactory,SpanWeight,SpanWeight).mjava","commits":[{"id":"d4b6308fa66dc96de36abfae5d3e7c92c805e227","date":1432916588,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanContainQuery.SpanContainWeight#SpanContainWeight(IndexSearcher,Map[Term,TermContext],SpanCollectorFactory,SpanWeight,SpanWeight).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanContainQuery.SpanContainWeight#SpanContainWeight(SpanSimilarity,SpanCollectorFactory,SpanWeight,SpanWeight).mjava","sourceNew":"    public SpanContainWeight(IndexSearcher searcher, Map<Term, TermContext> terms, SpanCollectorFactory factory,\n                             SpanWeight bigWeight, SpanWeight littleWeight) throws IOException {\n      super(SpanContainQuery.this, searcher, terms, factory);\n      this.bigWeight = bigWeight;\n      this.littleWeight = littleWeight;\n    }\n\n","sourceOld":"    public SpanContainWeight(SpanSimilarity similarity, SpanCollectorFactory factory,\n                             SpanWeight bigWeight, SpanWeight littleWeight) throws IOException {\n      super(SpanContainQuery.this, similarity, factory);\n      this.bigWeight = bigWeight;\n      this.littleWeight = littleWeight;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29aea3139c4326c0501d75d51059855463220279","date":1433952060,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanContainQuery.SpanContainWeight#SpanContainWeight(IndexSearcher,Map[Term,TermContext],SpanWeight,SpanWeight).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanContainQuery.SpanContainWeight#SpanContainWeight(IndexSearcher,Map[Term,TermContext],SpanCollectorFactory,SpanWeight,SpanWeight).mjava","sourceNew":"    public SpanContainWeight(IndexSearcher searcher, Map<Term, TermContext> terms,\n                             SpanWeight bigWeight, SpanWeight littleWeight) throws IOException {\n      super(SpanContainQuery.this, searcher, terms);\n      this.bigWeight = bigWeight;\n      this.littleWeight = littleWeight;\n    }\n\n","sourceOld":"    public SpanContainWeight(IndexSearcher searcher, Map<Term, TermContext> terms, SpanCollectorFactory factory,\n                             SpanWeight bigWeight, SpanWeight littleWeight) throws IOException {\n      super(SpanContainQuery.this, searcher, terms, factory);\n      this.bigWeight = bigWeight;\n      this.littleWeight = littleWeight;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29aea3139c4326c0501d75d51059855463220279":["d4b6308fa66dc96de36abfae5d3e7c92c805e227"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["29aea3139c4326c0501d75d51059855463220279"],"d4b6308fa66dc96de36abfae5d3e7c92c805e227":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"29aea3139c4326c0501d75d51059855463220279":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4b6308fa66dc96de36abfae5d3e7c92c805e227"],"d4b6308fa66dc96de36abfae5d3e7c92c805e227":["29aea3139c4326c0501d75d51059855463220279"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}