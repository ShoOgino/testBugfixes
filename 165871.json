{"path":"lucene/queries/src/test/org/apache/lucene/queries/function/TestIndexReaderFunctions#assertHits(DoubleValuesSource,float[]).mjava","commits":[{"id":"a38488a55cc52553c9792da5044dd31b15128cd8","date":1510755769,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestIndexReaderFunctions#assertHits(DoubleValuesSource,float[]).mjava","pathOld":"/dev/null","sourceNew":"  void assertHits(DoubleValuesSource vs, float scores[]) throws Exception {\n    Query q = new FunctionScoreQuery(new MatchAllDocsQuery(), vs);\n    ScoreDoc expected[] = new ScoreDoc[scores.length];\n    int expectedDocs[] = new int[scores.length];\n    for (int i = 0; i < expected.length; i++) {\n      expectedDocs[i] = i;\n      expected[i] = new ScoreDoc(i, scores[i]);\n    }\n    TopDocs docs = searcher.search(q, documents.size(),\n        new Sort(new SortField(\"id\", SortField.Type.STRING)), true, false);\n    CheckHits.checkHits(random(), q, \"\", searcher, expectedDocs);\n    CheckHits.checkHitsQuery(q, expected, docs.scoreDocs, expectedDocs);\n    CheckHits.checkExplanations(q, \"\", searcher);\n    assertSort(vs, expected);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81fff83bdb893c1471efd78f6a9a3ce4f98120b9","date":1531895937,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestIndexReaderFunctions#assertHits(DoubleValuesSource,float[]).mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestIndexReaderFunctions#assertHits(DoubleValuesSource,float[]).mjava","sourceNew":"  void assertHits(DoubleValuesSource vs, float scores[]) throws Exception {\n    Query q = new FunctionScoreQuery(new MatchAllDocsQuery(), vs);\n    ScoreDoc expected[] = new ScoreDoc[scores.length];\n    int expectedDocs[] = new int[scores.length];\n    for (int i = 0; i < expected.length; i++) {\n      expectedDocs[i] = i;\n      expected[i] = new ScoreDoc(i, scores[i]);\n    }\n    TopDocs docs = searcher.search(q, documents.size(),\n        new Sort(new SortField(\"id\", SortField.Type.STRING)), true);\n    CheckHits.checkHits(random(), q, \"\", searcher, expectedDocs);\n    CheckHits.checkHitsQuery(q, expected, docs.scoreDocs, expectedDocs);\n    CheckHits.checkExplanations(q, \"\", searcher);\n    assertSort(vs, expected);\n  }\n\n","sourceOld":"  void assertHits(DoubleValuesSource vs, float scores[]) throws Exception {\n    Query q = new FunctionScoreQuery(new MatchAllDocsQuery(), vs);\n    ScoreDoc expected[] = new ScoreDoc[scores.length];\n    int expectedDocs[] = new int[scores.length];\n    for (int i = 0; i < expected.length; i++) {\n      expectedDocs[i] = i;\n      expected[i] = new ScoreDoc(i, scores[i]);\n    }\n    TopDocs docs = searcher.search(q, documents.size(),\n        new Sort(new SortField(\"id\", SortField.Type.STRING)), true, false);\n    CheckHits.checkHits(random(), q, \"\", searcher, expectedDocs);\n    CheckHits.checkHitsQuery(q, expected, docs.scoreDocs, expectedDocs);\n    CheckHits.checkExplanations(q, \"\", searcher);\n    assertSort(vs, expected);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestIndexReaderFunctions#assertHits(DoubleValuesSource,float[]).mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestIndexReaderFunctions#assertHits(DoubleValuesSource,float[]).mjava","sourceNew":"  void assertHits(DoubleValuesSource vs, float scores[]) throws Exception {\n    Query q = new FunctionScoreQuery(new MatchAllDocsQuery(), vs);\n    ScoreDoc expected[] = new ScoreDoc[scores.length];\n    int expectedDocs[] = new int[scores.length];\n    for (int i = 0; i < expected.length; i++) {\n      expectedDocs[i] = i;\n      expected[i] = new ScoreDoc(i, scores[i]);\n    }\n    TopDocs docs = searcher.search(q, documents.size(),\n        new Sort(new SortField(\"id\", SortField.Type.STRING)), true);\n    CheckHits.checkHits(random(), q, \"\", searcher, expectedDocs);\n    CheckHits.checkHitsQuery(q, expected, docs.scoreDocs, expectedDocs);\n    CheckHits.checkExplanations(q, \"\", searcher);\n    assertSort(vs, expected);\n  }\n\n","sourceOld":"  void assertHits(DoubleValuesSource vs, float scores[]) throws Exception {\n    Query q = new FunctionScoreQuery(new MatchAllDocsQuery(), vs);\n    ScoreDoc expected[] = new ScoreDoc[scores.length];\n    int expectedDocs[] = new int[scores.length];\n    for (int i = 0; i < expected.length; i++) {\n      expectedDocs[i] = i;\n      expected[i] = new ScoreDoc(i, scores[i]);\n    }\n    TopDocs docs = searcher.search(q, documents.size(),\n        new Sort(new SortField(\"id\", SortField.Type.STRING)), true, false);\n    CheckHits.checkHits(random(), q, \"\", searcher, expectedDocs);\n    CheckHits.checkHitsQuery(q, expected, docs.scoreDocs, expectedDocs);\n    CheckHits.checkExplanations(q, \"\", searcher);\n    assertSort(vs, expected);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a38488a55cc52553c9792da5044dd31b15128cd8","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["a38488a55cc52553c9792da5044dd31b15128cd8"],"a38488a55cc52553c9792da5044dd31b15128cd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["81fff83bdb893c1471efd78f6a9a3ce4f98120b9"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a38488a55cc52553c9792da5044dd31b15128cd8"],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a38488a55cc52553c9792da5044dd31b15128cd8":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}