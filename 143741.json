{"path":"solr/core/src/test/org/apache/solr/search/TestExtendedDismaxParser#testValidateQueryFields().mjava","commits":[{"id":"4d0ddc75fb2855fca36e3a81b86228b660cbf465","date":1538078006,"type":0,"author":"Charles Sanders","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestExtendedDismaxParser#testValidateQueryFields().mjava","pathOld":"/dev/null","sourceNew":"  /** SOLR-5163 */ \n  @Test\n  public void testValidateQueryFields() throws Exception {\n    // field aliasing covered by test - testAliasing\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"defType\", \"edismax\");\n    params.add(\"df\", \"text\");\n    params.add(\"q\", \"olive AND other\");\n    params.add(\"qf\", \"subject^3 title\");\n    params.add(\"debugQuery\", \"true\");\n    \n    // test valid field names\n    try (SolrQueryRequest req = req(params)) {\n      String response = h.query(req);\n      response.contains(\"+DisjunctionMaxQuery((title:olive | (subject:oliv)^3.0)) +DisjunctionMaxQuery((title:other | (subject:other)^3.0))\");\n    }\n    \n    // test invalid field name\n    params.set(\"qf\", \"subject^3 nosuchfield\");\n    try (SolrQueryRequest req = req(params)) {\n      h.query(req);\n    } catch (Exception e) {\n      Assert.assertEquals(\"org.apache.solr.search.SyntaxError: Query Field 'nosuchfield' is not a valid field name\", e.getMessage());\n    }\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"464e7336798bc8a1281d5cf610c649c5a0784e83","date":1541256496,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestExtendedDismaxParser#testValidateQueryFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestExtendedDismaxParser#testValidateQueryFields().mjava","sourceNew":"  /** SOLR-5163 */\n  @Test\n  public void testValidateQueryFields() throws Exception {\n    // field aliasing covered by test - testAliasing\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"defType\", \"edismax\");\n    params.add(\"df\", \"text\");\n    params.add(\"q\", \"olive AND other\");\n    params.add(\"qf\", \"subject^3 title\");\n    params.add(\"debugQuery\", \"true\");\n\n    // test valid field names\n    try (SolrQueryRequest req = req(params)) {\n      String response = h.query(req);\n      response.contains(\"+DisjunctionMaxQuery((title:olive | (subject:oliv)^3.0)) +DisjunctionMaxQuery((title:other | (subject:other)^3.0))\");\n    }\n\n    // test invalid field name\n    params.set(\"qf\", \"subject^3 nosuchfield\");\n    try (SolrQueryRequest req = req(params)) {\n      h.query(req);\n    } catch (Exception e) {\n      Assert.assertEquals(\"org.apache.solr.search.SyntaxError: Query Field 'nosuchfield' is not a valid field name\", e.getMessage());\n    }\n\n  }\n\n","sourceOld":"  /** SOLR-5163 */ \n  @Test\n  public void testValidateQueryFields() throws Exception {\n    // field aliasing covered by test - testAliasing\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"defType\", \"edismax\");\n    params.add(\"df\", \"text\");\n    params.add(\"q\", \"olive AND other\");\n    params.add(\"qf\", \"subject^3 title\");\n    params.add(\"debugQuery\", \"true\");\n    \n    // test valid field names\n    try (SolrQueryRequest req = req(params)) {\n      String response = h.query(req);\n      response.contains(\"+DisjunctionMaxQuery((title:olive | (subject:oliv)^3.0)) +DisjunctionMaxQuery((title:other | (subject:other)^3.0))\");\n    }\n    \n    // test invalid field name\n    params.set(\"qf\", \"subject^3 nosuchfield\");\n    try (SolrQueryRequest req = req(params)) {\n      h.query(req);\n    } catch (Exception e) {\n      Assert.assertEquals(\"org.apache.solr.search.SyntaxError: Query Field 'nosuchfield' is not a valid field name\", e.getMessage());\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ce58553821a13347ce37f0f99c10c2a57cb08a18","date":1561826882,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestExtendedDismaxParser#testValidateQueryFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestExtendedDismaxParser#testValidateQueryFields().mjava","sourceNew":"  /** SOLR-5163 */\n  @Test\n  public void testValidateQueryFields() throws Exception {\n    // field aliasing covered by test - testAliasing\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"defType\", \"edismax\");\n    params.add(\"df\", \"text\");\n    params.add(\"q\", \"olive AND other\");\n    params.add(\"qf\", \"subject^3 title\");\n    params.add(\"debugQuery\", \"true\");\n\n    // test valid field names\n    String response = h.query(req(params));\n    assertTrue(response.contains(\"+DisjunctionMaxQuery((title:olive | \" +\n        \"(subject:oliv)^3.0)) +DisjunctionMaxQuery((title:other | (subject:other)^3.0))\"));\n\n    // test invalid field name\n    params.set(\"qf\", \"subject^3 nosuchfield\");\n    SolrException exception = expectThrows(SolrException.class, () -> h.query(req(params)));\n    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, exception.code());\n    assertEquals(\"org.apache.solr.search.SyntaxError: Query Field 'nosuchfield' is not a valid field name\",\n        exception.getMessage());\n  }\n\n","sourceOld":"  /** SOLR-5163 */\n  @Test\n  public void testValidateQueryFields() throws Exception {\n    // field aliasing covered by test - testAliasing\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"defType\", \"edismax\");\n    params.add(\"df\", \"text\");\n    params.add(\"q\", \"olive AND other\");\n    params.add(\"qf\", \"subject^3 title\");\n    params.add(\"debugQuery\", \"true\");\n\n    // test valid field names\n    try (SolrQueryRequest req = req(params)) {\n      String response = h.query(req);\n      response.contains(\"+DisjunctionMaxQuery((title:olive | (subject:oliv)^3.0)) +DisjunctionMaxQuery((title:other | (subject:other)^3.0))\");\n    }\n\n    // test invalid field name\n    params.set(\"qf\", \"subject^3 nosuchfield\");\n    try (SolrQueryRequest req = req(params)) {\n      h.query(req);\n    } catch (Exception e) {\n      Assert.assertEquals(\"org.apache.solr.search.SyntaxError: Query Field 'nosuchfield' is not a valid field name\", e.getMessage());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d0ddc75fb2855fca36e3a81b86228b660cbf465":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ce58553821a13347ce37f0f99c10c2a57cb08a18":["464e7336798bc8a1281d5cf610c649c5a0784e83"],"464e7336798bc8a1281d5cf610c649c5a0784e83":["4d0ddc75fb2855fca36e3a81b86228b660cbf465"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ce58553821a13347ce37f0f99c10c2a57cb08a18"]},"commit2Childs":{"4d0ddc75fb2855fca36e3a81b86228b660cbf465":["464e7336798bc8a1281d5cf610c649c5a0784e83"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d0ddc75fb2855fca36e3a81b86228b660cbf465"],"ce58553821a13347ce37f0f99c10c2a57cb08a18":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"464e7336798bc8a1281d5cf610c649c5a0784e83":["ce58553821a13347ce37f0f99c10c2a57cb08a18"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}