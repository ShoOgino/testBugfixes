{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#doSetNextReader(AtomicReaderContext).mjava","commits":[{"id":"ae73da626f97850c922c42736f808d0378e165f0","date":1396625460,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#doSetNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":1,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#doSetNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#doSetNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#doSetNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = DocValues.getSorted(context.reader(), groupField);\n      facetFieldDocTermOrds = DocValues.getSortedSet(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","sourceOld":"    @Override\n    protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#doSetNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#doSetNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = DocValues.getSorted(context.reader(), groupField);\n      facetFieldDocTermOrds = DocValues.getSortedSet(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","sourceOld":"    @Override\n    protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#doSetNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#doSetNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = DocValues.getSorted(context.reader(), groupField);\n      facetFieldDocTermOrds = DocValues.getSortedSet(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","sourceOld":"    @Override\n    protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#doSetNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#doSetNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = DocValues.getSorted(context.reader(), groupField);\n      facetFieldDocTermOrds = DocValues.getSortedSet(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRefBuilder facetEndPrefix = new BytesRefBuilder();\n        facetEndPrefix.append(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix.get());\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","sourceOld":"    @Override\n    protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = DocValues.getSorted(context.reader(), groupField);\n      facetFieldDocTermOrds = DocValues.getSortedSet(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","bugFix":["eee5f2a24465d2c9a5f86ab84b7c35041a30fda8","369f44b665973d5aa5fc7d0f2a75ffad475d21ee"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#doSetNextReader(AtomicReaderContext).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = DocValues.getSorted(context.reader(), groupField);\n      facetFieldDocTermOrds = DocValues.getSortedSet(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRefBuilder facetEndPrefix = new BytesRefBuilder();\n        facetEndPrefix.append(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix.get());\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"93dd449115a9247533e44bab47e8429e5dccbc6d":["ae73da626f97850c922c42736f808d0378e165f0","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ae73da626f97850c922c42736f808d0378e165f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ae73da626f97850c922c42736f808d0378e165f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["ae73da626f97850c922c42736f808d0378e165f0"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"56572ec06f1407c066d6b7399413178b33176cd8":["ae73da626f97850c922c42736f808d0378e165f0","93dd449115a9247533e44bab47e8429e5dccbc6d"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"93dd449115a9247533e44bab47e8429e5dccbc6d":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","56572ec06f1407c066d6b7399413178b33176cd8"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","ae73da626f97850c922c42736f808d0378e165f0"],"ae73da626f97850c922c42736f808d0378e165f0":["93dd449115a9247533e44bab47e8429e5dccbc6d","15e323346eac5e4685c0a9f2df85eb96b4239bbb","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}