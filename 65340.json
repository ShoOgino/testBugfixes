{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/processors/QueryNodeProcessorImpl#setChildrenOrder(List[QueryNode]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/processors/QueryNodeProcessorImpl#setChildrenOrder(List[QueryNode]).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/processors/QueryNodeProcessorImpl#setChildrenOrder(List[QueryNode]).mjava","sourceNew":"  /**\n   * This method is invoked for every node that has at least on child. It's\n   * invoked right before {@link #postProcessNode(QueryNode)} is invoked.\n   * \n   * @param children\n   *          the list containing all current node's children\n   * \n   * @return a new list containing all children that should be set to the\n   *         current node\n   * \n   * @throws QueryNodeException\n   *           if something goes wrong during the query node processing\n   */\n  abstract protected List<QueryNode> setChildrenOrder(List<QueryNode> children)\n      throws QueryNodeException;\n\n","sourceOld":"  /**\n   * This method is invoked for every node that has at least on child. It's\n   * invoked right before {@link #postProcessNode(QueryNode)} is invoked.\n   * \n   * @param children\n   *          the list containing all current node's children\n   * \n   * @return a new list containing all children that should be set to the\n   *         current node\n   * \n   * @throws QueryNodeException\n   *           if something goes wrong during the query node processing\n   */\n  abstract protected List<QueryNode> setChildrenOrder(List<QueryNode> children)\n      throws QueryNodeException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}