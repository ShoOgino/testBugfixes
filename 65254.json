{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestLegacyGeoPointQuery#radiusQueryCanBeWrong(double,double,double,double,double).mjava","commits":[{"id":"f68e65f04a6bec2d9a08a7d70811205341af74db","date":1458618250,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestLegacyGeoPointQuery#radiusQueryCanBeWrong(double,double,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  private static boolean radiusQueryCanBeWrong(double centerLat, double centerLon, double ptLon, double ptLat,\n                                               final double radius) {\n    final long hashedCntr = GeoEncodingUtils.mortonHash(centerLon, centerLat);\n    centerLon = GeoEncodingUtils.mortonUnhashLon(hashedCntr);\n    centerLat = GeoEncodingUtils.mortonUnhashLat(hashedCntr);\n    final long hashedPt = GeoEncodingUtils.mortonHash(ptLon, ptLat);\n    ptLon = GeoEncodingUtils.mortonUnhashLon(hashedPt);\n    ptLat = GeoEncodingUtils.mortonUnhashLat(hashedPt);\n\n    double ptDistance = SloppyMath.haversinMeters(centerLat, centerLon, ptLat, ptLon);\n    double delta = StrictMath.abs(ptDistance - radius);\n\n    // if its within the distance error then it can be wrong\n    return delta < (ptDistance*DISTANCE_PCT_ERR);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec996bf2daff09d61a876319e8fae4aebbea58e3","date":1458661946,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestLegacyGeoPointQuery#radiusQueryCanBeWrong(double,double,double,double,double).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestLegacyGeoPointQuery#radiusQueryCanBeWrong(double,double,double,double,double).mjava","sourceNew":"  private static boolean radiusQueryCanBeWrong(double centerLat, double centerLon, double ptLon, double ptLat,\n                                               final double radius) {\n    final long hashedCntr = GeoEncodingUtils.mortonHash(centerLat, centerLon);\n    centerLon = GeoEncodingUtils.mortonUnhashLon(hashedCntr);\n    centerLat = GeoEncodingUtils.mortonUnhashLat(hashedCntr);\n    final long hashedPt = GeoEncodingUtils.mortonHash(ptLat, ptLon);\n    ptLon = GeoEncodingUtils.mortonUnhashLon(hashedPt);\n    ptLat = GeoEncodingUtils.mortonUnhashLat(hashedPt);\n\n    double ptDistance = SloppyMath.haversinMeters(centerLat, centerLon, ptLat, ptLon);\n    double delta = StrictMath.abs(ptDistance - radius);\n\n    // if its within the distance error then it can be wrong\n    return delta < (ptDistance*DISTANCE_PCT_ERR);\n  }\n\n","sourceOld":"  private static boolean radiusQueryCanBeWrong(double centerLat, double centerLon, double ptLon, double ptLat,\n                                               final double radius) {\n    final long hashedCntr = GeoEncodingUtils.mortonHash(centerLon, centerLat);\n    centerLon = GeoEncodingUtils.mortonUnhashLon(hashedCntr);\n    centerLat = GeoEncodingUtils.mortonUnhashLat(hashedCntr);\n    final long hashedPt = GeoEncodingUtils.mortonHash(ptLon, ptLat);\n    ptLon = GeoEncodingUtils.mortonUnhashLon(hashedPt);\n    ptLat = GeoEncodingUtils.mortonUnhashLat(hashedPt);\n\n    double ptDistance = SloppyMath.haversinMeters(centerLat, centerLon, ptLat, ptLon);\n    double delta = StrictMath.abs(ptDistance - radius);\n\n    // if its within the distance error then it can be wrong\n    return delta < (ptDistance*DISTANCE_PCT_ERR);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb4875e9db9b77346c36b7fe0d4b8759a1e095d3","date":1458680048,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestLegacyGeoPointQuery#radiusQueryCanBeWrong(double,double,double,double,double).mjava","sourceNew":null,"sourceOld":"  private static boolean radiusQueryCanBeWrong(double centerLat, double centerLon, double ptLon, double ptLat,\n                                               final double radius) {\n    final long hashedCntr = GeoEncodingUtils.mortonHash(centerLat, centerLon);\n    centerLon = GeoEncodingUtils.mortonUnhashLon(hashedCntr);\n    centerLat = GeoEncodingUtils.mortonUnhashLat(hashedCntr);\n    final long hashedPt = GeoEncodingUtils.mortonHash(ptLat, ptLon);\n    ptLon = GeoEncodingUtils.mortonUnhashLon(hashedPt);\n    ptLat = GeoEncodingUtils.mortonUnhashLat(hashedPt);\n\n    double ptDistance = SloppyMath.haversinMeters(centerLat, centerLon, ptLat, ptLon);\n    double delta = StrictMath.abs(ptDistance - radius);\n\n    // if its within the distance error then it can be wrong\n    return delta < (ptDistance*DISTANCE_PCT_ERR);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f68e65f04a6bec2d9a08a7d70811205341af74db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ec996bf2daff09d61a876319e8fae4aebbea58e3":["f68e65f04a6bec2d9a08a7d70811205341af74db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cb4875e9db9b77346c36b7fe0d4b8759a1e095d3":["ec996bf2daff09d61a876319e8fae4aebbea58e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cb4875e9db9b77346c36b7fe0d4b8759a1e095d3"]},"commit2Childs":{"f68e65f04a6bec2d9a08a7d70811205341af74db":["ec996bf2daff09d61a876319e8fae4aebbea58e3"],"ec996bf2daff09d61a876319e8fae4aebbea58e3":["cb4875e9db9b77346c36b7fe0d4b8759a1e095d3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f68e65f04a6bec2d9a08a7d70811205341af74db"],"cb4875e9db9b77346c36b7fe0d4b8759a1e095d3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}