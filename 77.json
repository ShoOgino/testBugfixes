{"path":"lucene/src/test/org/apache/lucene/index/TestGlobalFieldNumbers#buildRandomIndex(String[],int,IndexWriterConfig).mjava","commits":[{"id":"1224a4027481acce15495b03bce9b48b93b42722","date":1300792329,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestGlobalFieldNumbers#buildRandomIndex(String[],int,IndexWriterConfig).mjava","pathOld":"/dev/null","sourceNew":"  private final Directory buildRandomIndex(String[] fieldNames, int numDocs,\n      IndexWriterConfig conf) throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      final int numFields = 1 + random.nextInt(fieldNames.length);\n      for (int j = 0; j < numFields; j++) {\n        doc.add(newField(fieldNames[random.nextInt(fieldNames.length)],\n            _TestUtil.randomRealisticUnicodeString(random),\n            Index.toIndex(true, random.nextBoolean(), random.nextBoolean())));\n\n      }\n      writer.addDocument(doc);\n      if (random.nextInt(20) == 0) {\n        writer.commit();\n      }\n    }\n    writer.close();\n    return dir;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestGlobalFieldNumbers#buildRandomIndex(String[],int,IndexWriterConfig).mjava","pathOld":"/dev/null","sourceNew":"  private final Directory buildRandomIndex(String[] fieldNames, int numDocs,\n      IndexWriterConfig conf) throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      final int numFields = 1 + random.nextInt(fieldNames.length);\n      for (int j = 0; j < numFields; j++) {\n        doc.add(newField(fieldNames[random.nextInt(fieldNames.length)],\n            _TestUtil.randomRealisticUnicodeString(random),\n            Index.toIndex(true, random.nextBoolean(), random.nextBoolean())));\n\n      }\n      writer.addDocument(doc);\n      if (random.nextInt(20) == 0) {\n        writer.commit();\n      }\n    }\n    writer.close();\n    return dir;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestGlobalFieldNumbers#buildRandomIndex(String[],int,IndexWriterConfig).mjava","pathOld":"/dev/null","sourceNew":"  private final Directory buildRandomIndex(String[] fieldNames, int numDocs,\n      IndexWriterConfig conf) throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      final int numFields = 1 + random.nextInt(fieldNames.length);\n      for (int j = 0; j < numFields; j++) {\n        doc.add(newField(fieldNames[random.nextInt(fieldNames.length)],\n            _TestUtil.randomRealisticUnicodeString(random),\n            Index.toIndex(true, random.nextBoolean(), random.nextBoolean())));\n\n      }\n      writer.addDocument(doc);\n      if (random.nextInt(20) == 0) {\n        writer.commit();\n      }\n    }\n    writer.close();\n    return dir;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestGlobalFieldNumbers#buildRandomIndex(String[],int,IndexWriterConfig).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestGlobalFieldNumbers#buildRandomIndex(String[],int,IndexWriterConfig).mjava","sourceNew":"  private final Directory buildRandomIndex(String[] fieldNames, int numDocs,\n      IndexWriterConfig conf) throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      final int numFields = 1 + random.nextInt(fieldNames.length);\n      for (int j = 0; j < numFields; j++) {\n        FieldType customType = new FieldType();\n        customType.setIndexed(true);\n        customType.setTokenized(random.nextBoolean());\n        customType.setOmitNorms(random.nextBoolean());\n        doc.add(newField(fieldNames[random.nextInt(fieldNames.length)],\n            _TestUtil.randomRealisticUnicodeString(random),\n            customType));\n\n      }\n      writer.addDocument(doc);\n      if (random.nextInt(20) == 0) {\n        writer.commit();\n      }\n    }\n    writer.close();\n    return dir;\n  }\n\n","sourceOld":"  private final Directory buildRandomIndex(String[] fieldNames, int numDocs,\n      IndexWriterConfig conf) throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      final int numFields = 1 + random.nextInt(fieldNames.length);\n      for (int j = 0; j < numFields; j++) {\n        doc.add(newField(fieldNames[random.nextInt(fieldNames.length)],\n            _TestUtil.randomRealisticUnicodeString(random),\n            Index.toIndex(true, random.nextBoolean(), random.nextBoolean())));\n\n      }\n      writer.addDocument(doc);\n      if (random.nextInt(20) == 0) {\n        writer.commit();\n      }\n    }\n    writer.close();\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"319624eb66a10b717d3e66af448543e7dc5c479d","date":1322741556,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestGlobalFieldNumbers#buildRandomIndex(String[],int,IndexWriterConfig).mjava","sourceNew":null,"sourceOld":"  private final Directory buildRandomIndex(String[] fieldNames, int numDocs,\n      IndexWriterConfig conf) throws CorruptIndexException,\n      LockObtainFailedException, IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n    for (int i = 0; i < numDocs; i++) {\n      Document doc = new Document();\n      final int numFields = 1 + random.nextInt(fieldNames.length);\n      for (int j = 0; j < numFields; j++) {\n        FieldType customType = new FieldType();\n        customType.setIndexed(true);\n        customType.setTokenized(random.nextBoolean());\n        customType.setOmitNorms(random.nextBoolean());\n        doc.add(newField(fieldNames[random.nextInt(fieldNames.length)],\n            _TestUtil.randomRealisticUnicodeString(random),\n            customType));\n\n      }\n      writer.addDocument(doc);\n      if (random.nextInt(20) == 0) {\n        writer.commit();\n      }\n    }\n    writer.close();\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1224a4027481acce15495b03bce9b48b93b42722"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1224a4027481acce15495b03bce9b48b93b42722"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"319624eb66a10b717d3e66af448543e7dc5c479d":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["1224a4027481acce15495b03bce9b48b93b42722"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["319624eb66a10b717d3e66af448543e7dc5c479d"],"1224a4027481acce15495b03bce9b48b93b42722":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","1224a4027481acce15495b03bce9b48b93b42722"],"319624eb66a10b717d3e66af448543e7dc5c479d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["319624eb66a10b717d3e66af448543e7dc5c479d"],"1224a4027481acce15495b03bce9b48b93b42722":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}