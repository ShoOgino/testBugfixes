{"path":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(String[],boolean).mjava","commits":[{"id":"c79a056cc0ebc0f62e4a01c20808260cc4c70074","date":1198809971,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(String[],boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   *\n   * @param stopwords The stopwords to use\n   * @param replaceInvalidAcronym Set to true if this analyzer should replace mischaracterized acronyms in the StandardTokenizer\n   *\n   * See https://issues.apache.org/jira/browse/LUCENE-1068\n   *\n   * @deprecated Remove in 3.X and make true the only valid value\n   */\n  public StandardAnalyzer(String [] stopwords, boolean replaceInvalidAcronym) throws IOException{\n    this(stopwords);\n    this.replaceInvalidAcronym = replaceInvalidAcronym;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54c106a73719ede69e08f8b0ffe2950cc9ebfa07","date":1244055085,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(String[],boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(String[],boolean).mjava","sourceNew":"  /**\n   *\n   * @param stopwords The stopwords to use\n   * @param replaceInvalidAcronym Set to true if this analyzer should replace mischaracterized acronyms in the StandardTokenizer\n   *\n   * See https://issues.apache.org/jira/browse/LUCENE-1068\n   *\n   * @deprecated Remove in 3.X and make true the only valid value\n   */\n  public StandardAnalyzer(String [] stopwords, boolean replaceInvalidAcronym) throws IOException{\n    this(stopwords);\n    this.replaceInvalidAcronym = replaceInvalidAcronym;\n    useDefaultStopPositionIncrements = true;\n  }\n\n","sourceOld":"  /**\n   *\n   * @param stopwords The stopwords to use\n   * @param replaceInvalidAcronym Set to true if this analyzer should replace mischaracterized acronyms in the StandardTokenizer\n   *\n   * See https://issues.apache.org/jira/browse/LUCENE-1068\n   *\n   * @deprecated Remove in 3.X and make true the only valid value\n   */\n  public StandardAnalyzer(String [] stopwords, boolean replaceInvalidAcronym) throws IOException{\n    this(stopwords);\n    this.replaceInvalidAcronym = replaceInvalidAcronym;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1322761c4c1bce8324005ba020f3c3e72a4529a7","date":1245100743,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(String[],boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(String[],boolean).mjava","sourceNew":"  /**\n   *\n   * @param stopwords The stopwords to use\n   * @param replaceInvalidAcronym Set to true if this analyzer should replace mischaracterized acronyms in the StandardTokenizer\n   *\n   * See https://issues.apache.org/jira/browse/LUCENE-1068\n   *\n   * @deprecated Remove in 3.X and make true the only valid value\n   */\n  public StandardAnalyzer(String [] stopwords, boolean replaceInvalidAcronym) throws IOException{\n    this(Version.LUCENE_24, stopwords);\n    this.replaceInvalidAcronym = replaceInvalidAcronym;\n  }\n\n","sourceOld":"  /**\n   *\n   * @param stopwords The stopwords to use\n   * @param replaceInvalidAcronym Set to true if this analyzer should replace mischaracterized acronyms in the StandardTokenizer\n   *\n   * See https://issues.apache.org/jira/browse/LUCENE-1068\n   *\n   * @deprecated Remove in 3.X and make true the only valid value\n   */\n  public StandardAnalyzer(String [] stopwords, boolean replaceInvalidAcronym) throws IOException{\n    this(stopwords);\n    this.replaceInvalidAcronym = replaceInvalidAcronym;\n    useDefaultStopPositionIncrements = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c881464041e282c06fdb34e91f883b83b8d97968","date":1247607562,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(String[],boolean).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(String[],boolean).mjava","sourceNew":"  /**\n   *\n   * @param stopwords The stopwords to use\n   * @param replaceInvalidAcronym Set to true if this analyzer should replace mischaracterized acronyms in the StandardTokenizer\n   *\n   * See https://issues.apache.org/jira/browse/LUCENE-1068\n   *\n   * @deprecated Remove in 3.X and make true the only valid value\n   */\n  public StandardAnalyzer(String [] stopwords, boolean replaceInvalidAcronym) throws IOException{\n    this(Version.LUCENE_24, StopFilter.makeStopSet(stopwords));\n    this.replaceInvalidAcronym = replaceInvalidAcronym;\n  }\n\n","sourceOld":"  /**\n   *\n   * @param stopwords The stopwords to use\n   * @param replaceInvalidAcronym Set to true if this analyzer should replace mischaracterized acronyms in the StandardTokenizer\n   *\n   * See https://issues.apache.org/jira/browse/LUCENE-1068\n   *\n   * @deprecated Remove in 3.X and make true the only valid value\n   */\n  public StandardAnalyzer(String [] stopwords, boolean replaceInvalidAcronym) throws IOException{\n    this(Version.LUCENE_24, stopwords);\n    this.replaceInvalidAcronym = replaceInvalidAcronym;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardAnalyzer#StandardAnalyzer(String[],boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   *\n   * @param stopwords The stopwords to use\n   * @param replaceInvalidAcronym Set to true if this analyzer should replace mischaracterized acronyms in the StandardTokenizer\n   *\n   * See https://issues.apache.org/jira/browse/LUCENE-1068\n   *\n   * @deprecated Remove in 3.X and make true the only valid value\n   */\n  public StandardAnalyzer(String [] stopwords, boolean replaceInvalidAcronym) throws IOException{\n    this(Version.LUCENE_24, StopFilter.makeStopSet(stopwords));\n    this.replaceInvalidAcronym = replaceInvalidAcronym;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c79a056cc0ebc0f62e4a01c20808260cc4c70074":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c881464041e282c06fdb34e91f883b83b8d97968":["1322761c4c1bce8324005ba020f3c3e72a4529a7"],"1322761c4c1bce8324005ba020f3c3e72a4529a7":["54c106a73719ede69e08f8b0ffe2950cc9ebfa07"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["c881464041e282c06fdb34e91f883b83b8d97968"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"54c106a73719ede69e08f8b0ffe2950cc9ebfa07":["c79a056cc0ebc0f62e4a01c20808260cc4c70074"]},"commit2Childs":{"c79a056cc0ebc0f62e4a01c20808260cc4c70074":["54c106a73719ede69e08f8b0ffe2950cc9ebfa07"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c79a056cc0ebc0f62e4a01c20808260cc4c70074"],"c881464041e282c06fdb34e91f883b83b8d97968":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"1322761c4c1bce8324005ba020f3c3e72a4529a7":["c881464041e282c06fdb34e91f883b83b8d97968"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"54c106a73719ede69e08f8b0ffe2950cc9ebfa07":["1322761c4c1bce8324005ba020f3c3e72a4529a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}