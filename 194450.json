{"path":"src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","commits":[{"id":"04ec3320f0c14445c62d0eeff30995f8704138b7","date":1218250215,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","pathOld":"/dev/null","sourceNew":"  // sometime if the config referes to old things, it must be replaced with new stuff\r\n  public void testAutomaticDeprecationSupport()\r\n  {\r\n    // make sure the \"admin/file\" handler is registered\r\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler( \"admin/file\" );\r\n    assertTrue( \"file handler should have been automatically registered\", handler!=null );\r\n\r\n    //System.out.println( handler.getHiddenFiles() );\r\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\r\n    assertFalse( handler.getHiddenFiles().contains( \"scheam.xml\".toUpperCase() ) );\r\n    assertTrue( handler.getHiddenFiles().contains( \"PROTWORDS.TXT\" ) );\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bea7ae6fc3e93bacf4b7a43a70b6b58ab138c968"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bea7ae6fc3e93bacf4b7a43a70b6b58ab138c968","date":1220054712,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","pathOld":"src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","sourceNew":"  // sometime if the config referes to old things, it must be replaced with new stuff\r\n  public void testAutomaticDeprecationSupport()\r\n  {\r\n    // make sure the \"admin/file\" handler is registered\r\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler( \"/admin/file\" );\r\n    assertTrue( \"file handler should have been automatically registered\", handler!=null );\r\n\r\n    //System.out.println( handler.getHiddenFiles() );\r\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\r\n    assertFalse( handler.getHiddenFiles().contains( \"scheam.xml\".toUpperCase() ) );\r\n    assertTrue( handler.getHiddenFiles().contains( \"PROTWORDS.TXT\" ) );\r\n  }\r\n\n","sourceOld":"  // sometime if the config referes to old things, it must be replaced with new stuff\r\n  public void testAutomaticDeprecationSupport()\r\n  {\r\n    // make sure the \"admin/file\" handler is registered\r\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler( \"admin/file\" );\r\n    assertTrue( \"file handler should have been automatically registered\", handler!=null );\r\n\r\n    //System.out.println( handler.getHiddenFiles() );\r\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\r\n    assertFalse( handler.getHiddenFiles().contains( \"scheam.xml\".toUpperCase() ) );\r\n    assertTrue( handler.getHiddenFiles().contains( \"PROTWORDS.TXT\" ) );\r\n  }\r\n\n","bugFix":["04ec3320f0c14445c62d0eeff30995f8704138b7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aacbd58e1cc0b6a0cd2e2b615e9775fe114a93d5","date":1252758462,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","pathOld":"src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","sourceNew":"  // sometime if the config referes to old things, it must be replaced with new stuff\r\n  public void testAutomaticDeprecationSupport() {\r\n    // make sure the \"admin/file\" handler is registered\r\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\r\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\r\n\r\n    //System.out.println( handler.getHiddenFiles() );\r\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\r\n    assertFalse(handler.getHiddenFiles().contains(\"scheam.xml\".toUpperCase()));\r\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\r\n  }\r\n\n","sourceOld":"  // sometime if the config referes to old things, it must be replaced with new stuff\r\n  public void testAutomaticDeprecationSupport()\r\n  {\r\n    // make sure the \"admin/file\" handler is registered\r\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler( \"/admin/file\" );\r\n    assertTrue( \"file handler should have been automatically registered\", handler!=null );\r\n\r\n    //System.out.println( handler.getHiddenFiles() );\r\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\r\n    assertFalse( handler.getHiddenFiles().contains( \"scheam.xml\".toUpperCase() ) );\r\n    assertTrue( handler.getHiddenFiles().contains( \"PROTWORDS.TXT\" ) );\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5dc524639edfdfa4edfb67ae889c2b6029f9314c","date":1255358511,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","pathOld":"src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","sourceNew":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n    //System.out.println( handler.getHiddenFiles() );\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\n    assertFalse(handler.getHiddenFiles().contains(\"scheam.xml\".toUpperCase()));\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\n  }\n\n","sourceOld":"  // sometime if the config referes to old things, it must be replaced with new stuff\r\n  public void testAutomaticDeprecationSupport() {\r\n    // make sure the \"admin/file\" handler is registered\r\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\r\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\r\n\r\n    //System.out.println( handler.getHiddenFiles() );\r\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\r\n    assertFalse(handler.getHiddenFiles().contains(\"scheam.xml\".toUpperCase()));\r\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\r\n  }\r\n\n","bugFix":null,"bugIntro":["5900dae52fbe93ce3a6f08ebe51bc74e04e783fd","5900dae52fbe93ce3a6f08ebe51bc74e04e783fd","5900dae52fbe93ce3a6f08ebe51bc74e04e783fd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","pathOld":"src/test/org/apache/solr/core/TestConfig#testAutomaticDeprecationSupport().mjava","sourceNew":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n    //System.out.println( handler.getHiddenFiles() );\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\n    assertFalse(handler.getHiddenFiles().contains(\"scheam.xml\".toUpperCase()));\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\n  }\n\n","sourceOld":"  // sometime if the config referes to old things, it must be replaced with new stuff\n  public void testAutomaticDeprecationSupport() {\n    // make sure the \"admin/file\" handler is registered\n    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler(\"/admin/file\");\n    assertTrue(\"file handler should have been automatically registered\", handler != null);\n\n    //System.out.println( handler.getHiddenFiles() );\n    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>\n    assertFalse(handler.getHiddenFiles().contains(\"scheam.xml\".toUpperCase()));\n    assertTrue(handler.getHiddenFiles().contains(\"PROTWORDS.TXT\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5dc524639edfdfa4edfb67ae889c2b6029f9314c":["aacbd58e1cc0b6a0cd2e2b615e9775fe114a93d5"],"bea7ae6fc3e93bacf4b7a43a70b6b58ab138c968":["04ec3320f0c14445c62d0eeff30995f8704138b7"],"ad94625fb8d088209f46650c8097196fec67f00c":["5dc524639edfdfa4edfb67ae889c2b6029f9314c"],"aacbd58e1cc0b6a0cd2e2b615e9775fe114a93d5":["bea7ae6fc3e93bacf4b7a43a70b6b58ab138c968"],"04ec3320f0c14445c62d0eeff30995f8704138b7":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["04ec3320f0c14445c62d0eeff30995f8704138b7"],"5dc524639edfdfa4edfb67ae889c2b6029f9314c":["ad94625fb8d088209f46650c8097196fec67f00c"],"bea7ae6fc3e93bacf4b7a43a70b6b58ab138c968":["aacbd58e1cc0b6a0cd2e2b615e9775fe114a93d5"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"aacbd58e1cc0b6a0cd2e2b615e9775fe114a93d5":["5dc524639edfdfa4edfb67ae889c2b6029f9314c"],"04ec3320f0c14445c62d0eeff30995f8704138b7":["bea7ae6fc3e93bacf4b7a43a70b6b58ab138c968"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}