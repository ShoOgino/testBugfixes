{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellTernarySearchTrie#recursiveNodeCalculator(TSTNode,boolean,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellTernarySearchTrie#recursiveNodeCalculator(TSTNode,boolean,int).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellTernarySearchTrie#recursiveNodeCalculator(TSTNode,boolean,int).mjava","sourceNew":"  /**\n   * Recursivelly visists each node to calculate the number of nodes.\n   * \n   *@param currentNode\n   *          The current node.\n   *@param checkData\n   *          If true we check the data to be different of <code>null</code>.\n   *@param numNodes2\n   *          The number of nodes so far.\n   *@return The number of nodes accounted.\n   */\n  private int recursiveNodeCalculator(TSTNode currentNode, boolean checkData,\n          int numNodes2) {\n    if (currentNode == null) {\n      return numNodes2;\n    }\n    int numNodes = recursiveNodeCalculator(\n            currentNode.relatives[TSTNode.LOKID], checkData, numNodes2);\n    numNodes = recursiveNodeCalculator(currentNode.relatives[TSTNode.EQKID],\n            checkData, numNodes);\n    numNodes = recursiveNodeCalculator(currentNode.relatives[TSTNode.HIKID],\n            checkData, numNodes);\n    if (checkData) {\n      if (currentNode.data != null) {\n        numNodes++;\n      }\n    } else {\n      numNodes++;\n    }\n    return numNodes;\n  }\n\n","sourceOld":"  /**\n   * Recursivelly visists each node to calculate the number of nodes.\n   * \n   *@param currentNode\n   *          The current node.\n   *@param checkData\n   *          If true we check the data to be different of <code>null</code>.\n   *@param numNodes2\n   *          The number of nodes so far.\n   *@return The number of nodes accounted.\n   */\n  private int recursiveNodeCalculator(TSTNode currentNode, boolean checkData,\n          int numNodes2) {\n    if (currentNode == null) {\n      return numNodes2;\n    }\n    int numNodes = recursiveNodeCalculator(\n            currentNode.relatives[TSTNode.LOKID], checkData, numNodes2);\n    numNodes = recursiveNodeCalculator(currentNode.relatives[TSTNode.EQKID],\n            checkData, numNodes);\n    numNodes = recursiveNodeCalculator(currentNode.relatives[TSTNode.HIKID],\n            checkData, numNodes);\n    if (checkData) {\n      if (currentNode.data != null) {\n        numNodes++;\n      }\n    } else {\n      numNodes++;\n    }\n    return numNodes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}