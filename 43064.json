{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/IntersectBlockReader.AutomatonNextTermCalculator#backtrack(int).mjava","commits":[{"id":"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89","date":1567784912,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/IntersectBlockReader.AutomatonNextTermCalculator#backtrack(int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Attempts to backtrack thru the string after encountering a dead end\n     * at some given position. Returns false if no more possible strings\n     * can match.\n     *\n     * @param position current position in the input String\n     * @return {@code position >= 0} if more possible solutions exist for the DFA\n     */\n    protected int backtrack(int position) {\n      while (position-- > 0) {\n        int nextChar = seekBytesRef.byteAt(position) & 0xff;\n        // if a character is 0xff it's a dead-end too,\n        // because there is no higher character in binary sort order.\n        if (nextChar++ != 0xff) {\n          seekBytesRef.setByteAt(position, (byte) nextChar);\n          seekBytesRef.setLength(position+1);\n          return position;\n        }\n      }\n      return -1; /* all solutions exhausted */\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23fcccd57316410c404dd37307a496ab850efa9c","date":1582897939,"type":3,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/IntersectBlockReader.AutomatonNextTermCalculator#backtrack(int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/IntersectBlockReader.AutomatonNextTermCalculator#backtrack(int).mjava","sourceNew":"    /**\n     * Attempts to backtrack thru the string after encountering a dead end\n     * at some given position. Returns false if no more possible strings\n     * can match.\n     *\n     * @param position current position in the input String\n     * @return {@code position >= 0} if more possible solutions exist for the DFA\n     */\n    protected int backtrack(int position) {\n      while (position-- > 0) {\n        int nextChar = seekBytesRef.byteAt(position) & 0xff;\n        // if a character is 0xff it's a dead-end too,\n        // because there is no higher character in binary sort order.\n        if (nextChar++ != 0xff) {\n          seekBytesRef.setByteAt(position, (byte) nextChar);\n          seekBytesRef.setLength(position + 1);\n          return position;\n        }\n      }\n      return -1; /* all solutions exhausted */\n    }\n\n","sourceOld":"    /**\n     * Attempts to backtrack thru the string after encountering a dead end\n     * at some given position. Returns false if no more possible strings\n     * can match.\n     *\n     * @param position current position in the input String\n     * @return {@code position >= 0} if more possible solutions exist for the DFA\n     */\n    protected int backtrack(int position) {\n      while (position-- > 0) {\n        int nextChar = seekBytesRef.byteAt(position) & 0xff;\n        // if a character is 0xff it's a dead-end too,\n        // because there is no higher character in binary sort order.\n        if (nextChar++ != 0xff) {\n          seekBytesRef.setByteAt(position, (byte) nextChar);\n          seekBytesRef.setLength(position+1);\n          return position;\n        }\n      }\n      return -1; /* all solutions exhausted */\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"23fcccd57316410c404dd37307a496ab850efa9c":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23fcccd57316410c404dd37307a496ab850efa9c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["23fcccd57316410c404dd37307a496ab850efa9c"],"23fcccd57316410c404dd37307a496ab850efa9c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}