{"path":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,SortedDocValues,SchemaField,SchemaField,int).mjava","commits":[{"id":"9d7e5f3aa5935964617824d1f9b2599ddb334464","date":1353762831,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,SortedDocValues,SchemaField,SchemaField,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,FieldCache.DocTermsIndex,SchemaField,SchemaField,int).mjava","sourceNew":"  public FieldFacetStats(String name, SortedDocValues si, SchemaField field_sf, SchemaField facet_sf, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.field_sf = field_sf;\n    this.facet_sf = facet_sf;\n    this.numStatsTerms = numStatsTerms;\n\n    startTermIndex = 0;\n    endTermIndex = si.getValueCount();\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","sourceOld":"  public FieldFacetStats(String name, FieldCache.DocTermsIndex si, SchemaField field_sf, SchemaField facet_sf, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.field_sf = field_sf;\n    this.facet_sf = facet_sf;\n    this.numStatsTerms = numStatsTerms;\n\n    startTermIndex = 0;\n    endTermIndex = si.numOrd();\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,SortedDocValues,SchemaField,SchemaField,int).mjava","pathOld":"/dev/null","sourceNew":"  public FieldFacetStats(String name, SortedDocValues si, SchemaField field_sf, SchemaField facet_sf, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.field_sf = field_sf;\n    this.facet_sf = facet_sf;\n    this.numStatsTerms = numStatsTerms;\n\n    startTermIndex = 0;\n    endTermIndex = si.getValueCount();\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73bb5a57dc75b54a39494f99986599cae7dff417","date":1361040620,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,SortedDocValues,SchemaField,SchemaField,int).mjava","sourceNew":null,"sourceOld":"  public FieldFacetStats(String name, SortedDocValues si, SchemaField field_sf, SchemaField facet_sf, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.field_sf = field_sf;\n    this.facet_sf = facet_sf;\n    this.numStatsTerms = numStatsTerms;\n\n    startTermIndex = 0;\n    endTermIndex = si.getValueCount();\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,SortedDocValues,SchemaField,SchemaField,int).mjava","sourceNew":null,"sourceOld":"  public FieldFacetStats(String name, SortedDocValues si, SchemaField field_sf, SchemaField facet_sf, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.field_sf = field_sf;\n    this.facet_sf = facet_sf;\n    this.numStatsTerms = numStatsTerms;\n\n    startTermIndex = 0;\n    endTermIndex = si.getValueCount();\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9d7e5f3aa5935964617824d1f9b2599ddb334464"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":["d4d69c535930b5cce125cff868d40f6373dc27d4","73bb5a57dc75b54a39494f99986599cae7dff417"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73bb5a57dc75b54a39494f99986599cae7dff417"],"73bb5a57dc75b54a39494f99986599cae7dff417":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["95303ff3749680c743b9425f9cf99e6e4065e8a8","73bb5a57dc75b54a39494f99986599cae7dff417"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","9d7e5f3aa5935964617824d1f9b2599ddb334464"],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"73bb5a57dc75b54a39494f99986599cae7dff417":["95303ff3749680c743b9425f9cf99e6e4065e8a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["95303ff3749680c743b9425f9cf99e6e4065e8a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}