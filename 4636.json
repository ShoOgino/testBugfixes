{"path":"lucene/core/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries.PolygonValidator#testWithinPolygon(Component2D,Polygon).mjava","commits":[{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries.PolygonValidator#testWithinPolygon(Component2D,Polygon).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries.PolygonValidator#testWithinPolygon(Component2D,Polygon).mjava","sourceNew":"    private boolean testWithinPolygon(Component2D component2D, Polygon shape) {\n      List<Tessellator.Triangle> tessellation = Tessellator.tessellate(shape);\n      Component2D.WithinRelation answer = Component2D.WithinRelation.DISJOINT;\n      for (Tessellator.Triangle t : tessellation) {\n        ShapeField.DecodedTriangle qTriangle = encoder.encodeDecodeTriangle(t.getX(0), t.getY(0), t.isEdgefromPolygon(0),\n            t.getX(1), t.getY(1), t.isEdgefromPolygon(1),\n            t.getX(2), t.getY(2), t.isEdgefromPolygon(2));\n        Component2D.WithinRelation relation = component2D.withinTriangle(encoder.decodeX(qTriangle.aX), encoder.decodeY(qTriangle.aY), qTriangle.ab,\n            encoder.decodeX(qTriangle.bX), encoder.decodeY(qTriangle.bY), qTriangle.bc,\n            encoder.decodeX(qTriangle.cX), encoder.decodeY(qTriangle.cY), qTriangle.ca);\n        if (relation == Component2D.WithinRelation.NOTWITHIN) {\n          return false;\n        } else if (relation == Component2D.WithinRelation.CANDIDATE) {\n          answer = Component2D.WithinRelation.CANDIDATE;\n        }\n      }\n      return answer == Component2D.WithinRelation.CANDIDATE;\n    }\n\n","sourceOld":"    private boolean testWithinPolygon(Component2D component2D, Polygon shape) {\n      List<Tessellator.Triangle> tessellation = Tessellator.tessellate(shape);\n      Component2D.WithinRelation answer = Component2D.WithinRelation.DISJOINT;\n      for (Tessellator.Triangle t : tessellation) {\n        ShapeField.DecodedTriangle qTriangle = encoder.encodeDecodeTriangle(t.getX(0), t.getY(0), t.isEdgefromPolygon(0),\n            t.getX(1), t.getY(1), t.isEdgefromPolygon(1),\n            t.getX(2), t.getY(2), t.isEdgefromPolygon(2));\n        Component2D.WithinRelation relation = component2D.withinTriangle(encoder.decodeX(qTriangle.aX), encoder.decodeY(qTriangle.aY), qTriangle.ab,\n            encoder.decodeX(qTriangle.bX), encoder.decodeY(qTriangle.bY), qTriangle.bc,\n            encoder.decodeX(qTriangle.cX), encoder.decodeY(qTriangle.cY), qTriangle.ca);\n        if (relation == Component2D.WithinRelation.NOTWITHIN) {\n          return false;\n        } else if (relation == Component2D.WithinRelation.CANDIDATE) {\n          answer = Component2D.WithinRelation.CANDIDATE;\n        }\n      }\n      return answer == Component2D.WithinRelation.CANDIDATE;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85e78a520ab9228dc6353193f15d2c86ca717ae0","date":1584944808,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries.PolygonValidator#testWithinPolygon(Component2D,Polygon).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries.PolygonValidator#testWithinPolygon(Component2D,Polygon).mjava","sourceNew":"    protected Component2D.WithinRelation testWithinPolygon(Component2D component2D, Polygon shape) {\n      List<Tessellator.Triangle> tessellation = Tessellator.tessellate(shape);\n      Component2D.WithinRelation answer = Component2D.WithinRelation.DISJOINT;\n      for (Tessellator.Triangle t : tessellation) {\n        ShapeField.DecodedTriangle qTriangle = encoder.encodeDecodeTriangle(t.getX(0), t.getY(0), t.isEdgefromPolygon(0),\n            t.getX(1), t.getY(1), t.isEdgefromPolygon(1),\n            t.getX(2), t.getY(2), t.isEdgefromPolygon(2));\n        Component2D.WithinRelation relation = component2D.withinTriangle(encoder.decodeX(qTriangle.aX), encoder.decodeY(qTriangle.aY), qTriangle.ab,\n            encoder.decodeX(qTriangle.bX), encoder.decodeY(qTriangle.bY), qTriangle.bc,\n            encoder.decodeX(qTriangle.cX), encoder.decodeY(qTriangle.cY), qTriangle.ca);\n        if (relation == Component2D.WithinRelation.NOTWITHIN) {\n          return relation;\n        } else if (relation == Component2D.WithinRelation.CANDIDATE) {\n          answer = Component2D.WithinRelation.CANDIDATE;\n        }\n      }\n      return answer;\n    }\n\n","sourceOld":"    private boolean testWithinPolygon(Component2D component2D, Polygon shape) {\n      List<Tessellator.Triangle> tessellation = Tessellator.tessellate(shape);\n      Component2D.WithinRelation answer = Component2D.WithinRelation.DISJOINT;\n      for (Tessellator.Triangle t : tessellation) {\n        ShapeField.DecodedTriangle qTriangle = encoder.encodeDecodeTriangle(t.getX(0), t.getY(0), t.isEdgefromPolygon(0),\n            t.getX(1), t.getY(1), t.isEdgefromPolygon(1),\n            t.getX(2), t.getY(2), t.isEdgefromPolygon(2));\n        Component2D.WithinRelation relation = component2D.withinTriangle(encoder.decodeX(qTriangle.aX), encoder.decodeY(qTriangle.aY), qTriangle.ab,\n            encoder.decodeX(qTriangle.bX), encoder.decodeY(qTriangle.bY), qTriangle.bc,\n            encoder.decodeX(qTriangle.cX), encoder.decodeY(qTriangle.cY), qTriangle.ca);\n        if (relation == Component2D.WithinRelation.NOTWITHIN) {\n          return false;\n        } else if (relation == Component2D.WithinRelation.CANDIDATE) {\n          answer = Component2D.WithinRelation.CANDIDATE;\n        }\n      }\n      return answer == Component2D.WithinRelation.CANDIDATE;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c568a1e2a5125c2245150eebb030a81baa158b31","date":1587403489,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries.PolygonValidator#testWithinPolygon(Component2D,Polygon).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries.PolygonValidator#testWithinPolygon(Component2D,Polygon).mjava","sourceNew":"    protected Component2D.WithinRelation testWithinPolygon(Component2D query, Polygon polygon) {\n      return testWithinQuery(query, LatLonShape.createIndexableFields(\"dummy\", polygon));\n    }\n\n","sourceOld":"    protected Component2D.WithinRelation testWithinPolygon(Component2D component2D, Polygon shape) {\n      List<Tessellator.Triangle> tessellation = Tessellator.tessellate(shape);\n      Component2D.WithinRelation answer = Component2D.WithinRelation.DISJOINT;\n      for (Tessellator.Triangle t : tessellation) {\n        ShapeField.DecodedTriangle qTriangle = encoder.encodeDecodeTriangle(t.getX(0), t.getY(0), t.isEdgefromPolygon(0),\n            t.getX(1), t.getY(1), t.isEdgefromPolygon(1),\n            t.getX(2), t.getY(2), t.isEdgefromPolygon(2));\n        Component2D.WithinRelation relation = component2D.withinTriangle(encoder.decodeX(qTriangle.aX), encoder.decodeY(qTriangle.aY), qTriangle.ab,\n            encoder.decodeX(qTriangle.bX), encoder.decodeY(qTriangle.bY), qTriangle.bc,\n            encoder.decodeX(qTriangle.cX), encoder.decodeY(qTriangle.cY), qTriangle.ca);\n        if (relation == Component2D.WithinRelation.NOTWITHIN) {\n          return relation;\n        } else if (relation == Component2D.WithinRelation.CANDIDATE) {\n          answer = Component2D.WithinRelation.CANDIDATE;\n        }\n      }\n      return answer;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c568a1e2a5125c2245150eebb030a81baa158b31":["85e78a520ab9228dc6353193f15d2c86ca717ae0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"85e78a520ab9228dc6353193f15d2c86ca717ae0":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c568a1e2a5125c2245150eebb030a81baa158b31"]},"commit2Childs":{"c568a1e2a5125c2245150eebb030a81baa158b31":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["85e78a520ab9228dc6353193f15d2c86ca717ae0"],"85e78a520ab9228dc6353193f15d2c86ca717ae0":["c568a1e2a5125c2245150eebb030a81baa158b31"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}