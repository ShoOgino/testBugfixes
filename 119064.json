{"path":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/util/BinaryDictionaryWriter#writePosDict(Path).mjava","commits":[{"id":"05feb7eb5e91cb64742ce32b2ca3f02433530446","date":1561602840,"type":1,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/util/BinaryDictionaryWriter#writePosDict(Path).mjava","pathOld":"lucene/analysis/kuromoji/src/tools/java/org/apache/lucene/analysis/ja/util/BinaryDictionaryWriter#writePosDict(String).mjava","sourceNew":"  private void writePosDict(Path path) throws IOException {\n    Files.createDirectories(path.getParent());\n    try (OutputStream os = Files.newOutputStream(path);\n         OutputStream bos = new BufferedOutputStream(os)) {\n      final DataOutput out = new OutputStreamDataOutput(bos);\n      CodecUtil.writeHeader(out, BinaryDictionary.POSDICT_HEADER, BinaryDictionary.VERSION);\n      out.writeVInt(posDict.size());\n      for (String s : posDict) {\n        if (s == null) {\n          out.writeByte((byte)0);\n          out.writeByte((byte)0);\n          out.writeByte((byte)0);\n        } else {\n          String[] data = CSVUtil.parse(s);\n          if (data.length != 3) {\n            throw new IllegalArgumentException(\"Malformed pos/inflection: \" + s + \"; expected 3 characters\");\n          }\n          out.writeString(data[0]);\n          out.writeString(data[1]);\n          out.writeString(data[2]);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  protected void writePosDict(String filename) throws IOException {\n    new File(filename).getParentFile().mkdirs();\n    OutputStream os = new FileOutputStream(filename);\n    try {\n      os = new BufferedOutputStream(os);\n      final DataOutput out = new OutputStreamDataOutput(os);\n      CodecUtil.writeHeader(out, BinaryDictionary.POSDICT_HEADER, BinaryDictionary.VERSION);\n      out.writeVInt(posDict.size());\n      for (String s : posDict) {\n        if (s == null) {\n          out.writeByte((byte)0);\n          out.writeByte((byte)0);\n          out.writeByte((byte)0);\n        } else {\n          String data[] = CSVUtil.parse(s);\n          if (data.length != 3) {\n            throw new IllegalArgumentException(\"Malformed pos/inflection: \" + s + \"; expected 3 characters\");\n          }\n          out.writeString(data[0]);\n          out.writeString(data[1]);\n          out.writeString(data[2]);\n        }\n      }\n    } finally {\n      os.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"05feb7eb5e91cb64742ce32b2ca3f02433530446":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05feb7eb5e91cb64742ce32b2ca3f02433530446"]},"commit2Childs":{"05feb7eb5e91cb64742ce32b2ca3f02433530446":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05feb7eb5e91cb64742ce32b2ca3f02433530446"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}