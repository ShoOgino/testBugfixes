{"path":"sandbox/contributions/indyo/src/java/com/relevanz/indyo/SearchConfiguration#getChildPropertyAttributeValues(String,String).mjava","commits":[{"id":"3fce85454a250d21604a63955fa07ab2da7a43fa","date":1030730633,"type":0,"author":"Kelvin Tan","isMerge":false,"pathNew":"sandbox/contributions/indyo/src/java/com/relevanz/indyo/SearchConfiguration#getChildPropertyAttributeValues(String,String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Return attribute values for all child nodes.\n     */\n    private String[] getChildPropertyAttributeValues(String parent,\n                                                     String attributeName)\n    {\n        String[] nodeName = parseNodeName(parent);\n        Element element = doc.getRootElement();\n        for (int i = 0; i < nodeName.length; i++)\n        {\n            element = element.getChild(nodeName[i]);\n            if (element == null)\n            {\n                return new String[]{};\n            }\n        }\n        List children = element.getChildren();\n        int childCount = children.size();\n        String[] childrenAttributeValue = new String[childCount];\n        for (int i = 0; i < childCount; i++)\n        {\n            childrenAttributeValue[i] =\n                    ((Element) children.get(i)).getAttributeValue(attributeName);\n        }\n        return childrenAttributeValue;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3461c2f9e7fbdbc35cc20710cf75a221d2898e90","date":1051838935,"type":4,"author":"Kelvin Tan","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/indyo/src/java/com/relevanz/indyo/SearchConfiguration#getChildPropertyAttributeValues(String,String).mjava","sourceNew":null,"sourceOld":"    /**\n     * Return attribute values for all child nodes.\n     */\n    private String[] getChildPropertyAttributeValues(String parent,\n                                                     String attributeName)\n    {\n        String[] nodeName = parseNodeName(parent);\n        Element element = doc.getRootElement();\n        for (int i = 0; i < nodeName.length; i++)\n        {\n            element = element.getChild(nodeName[i]);\n            if (element == null)\n            {\n                return new String[]{};\n            }\n        }\n        List children = element.getChildren();\n        int childCount = children.size();\n        String[] childrenAttributeValue = new String[childCount];\n        for (int i = 0; i < childCount; i++)\n        {\n            childrenAttributeValue[i] =\n                    ((Element) children.get(i)).getAttributeValue(attributeName);\n        }\n        return childrenAttributeValue;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3fce85454a250d21604a63955fa07ab2da7a43fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3461c2f9e7fbdbc35cc20710cf75a221d2898e90":["3fce85454a250d21604a63955fa07ab2da7a43fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3461c2f9e7fbdbc35cc20710cf75a221d2898e90"]},"commit2Childs":{"3fce85454a250d21604a63955fa07ab2da7a43fa":["3461c2f9e7fbdbc35cc20710cf75a221d2898e90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3fce85454a250d21604a63955fa07ab2da7a43fa"],"3461c2f9e7fbdbc35cc20710cf75a221d2898e90":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}