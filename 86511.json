{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7f8e68717c68517265937c911e1ce9f25750247","date":1274071103,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","sourceNew":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new MockAnalyzer(MockTokenizer.WHITESPACE, false), IndexWriter.MaxFieldLength.UNLIMITED);\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","sourceNew":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory(random);\n    IndexWriter modifier = new IndexWriter(dir, new MockAnalyzer(MockTokenizer.WHITESPACE, false), IndexWriter.MaxFieldLength.UNLIMITED);\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new MockAnalyzer(MockTokenizer.WHITESPACE, false), IndexWriter.MaxFieldLength.UNLIMITED);\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","sourceNew":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new MockAnalyzer(MockTokenizer.WHITESPACE, false), IndexWriter.MaxFieldLength.UNLIMITED);\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory(random);\n    IndexWriter modifier = new IndexWriter(dir, new MockAnalyzer(MockTokenizer.WHITESPACE, false), IndexWriter.MaxFieldLength.UNLIMITED);\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","sourceNew":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new MockAnalyzer(MockTokenizer.WHITESPACE, false), IndexWriter.MaxFieldLength.UNLIMITED);\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","sourceNew":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new MockAnalyzer(MockTokenizer.WHITESPACE, false), IndexWriter.MaxFieldLength.UNLIMITED);\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","sourceNew":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new MockAnalyzer(MockTokenizer.WHITESPACE, false), IndexWriter.MaxFieldLength.UNLIMITED);\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","sourceNew":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","sourceNew":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","sourceNew":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","sourceNew":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testDeleteNullQuery().mjava","sourceNew":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeleteNullQuery() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter modifier = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)));\n\n    for (int i = 0; i < 5; i++) {\n      addDoc(modifier, i, 2*i);\n    }\n\n    modifier.deleteDocuments(new TermQuery(new Term(\"nada\", \"nada\")));\n    modifier.commit();\n    assertEquals(5, modifier.numDocs());\n    modifier.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["c7f8e68717c68517265937c911e1ce9f25750247"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["3bb13258feba31ab676502787ab2e1779f129b7a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c7f8e68717c68517265937c911e1ce9f25750247":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["c7f8e68717c68517265937c911e1ce9f25750247","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["4e8cc373c801e54cec75daf9f52792cb4b17f536","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3bb13258feba31ab676502787ab2e1779f129b7a":["1f653cfcf159baeaafe5d01682a911e95bba4012","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["1f653cfcf159baeaafe5d01682a911e95bba4012"]},"commit2Childs":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["c7f8e68717c68517265937c911e1ce9f25750247"],"c7f8e68717c68517265937c911e1ce9f25750247":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"3bb13258feba31ab676502787ab2e1779f129b7a":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}