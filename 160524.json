{"path":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer#getSortedSetTable(FieldInfo,SortedSetEntry).mjava","commits":[{"id":"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262","date":1475755647,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer#getSortedSetTable(FieldInfo,SortedSetEntry).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer#getSortedSetTable(FieldInfo,SortedSetEntry).mjava","sourceNew":"  private SortedSetDocValues getSortedSetTable(FieldInfo field, SortedSetEntry ss) throws IOException {\n    final long valueCount = binaries.get(field.name).count;\n    final LongBinaryDocValues binary = (LongBinaryDocValues) getLegacyBinary(field);\n    final NumericEntry ordinalsEntry = ords.get(field.name);\n    final LongValues ordinals = getNumeric(ordinalsEntry);\n\n    final long[] table = ss.table;\n    final int[] offsets = ss.tableOffsets;\n\n    return new LegacySortedSetDocValuesWrapper(new LegacySortedSetDocValues() {\n\n      int offset, startOffset, endOffset;\n\n      @Override\n      public void setDocument(int docID) {\n        final int ord = (int) ordinals.get(docID);\n        offset = startOffset = offsets[ord];\n        endOffset = offsets[ord + 1];\n      }\n\n      @Override\n      public long nextOrd() {\n        if (offset == endOffset) {\n          return NO_MORE_ORDS;\n        } else {\n          return table[offset++];\n        }\n      }\n\n      @Override\n      public BytesRef lookupOrd(long ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public long getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public long lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).lookupTerm(key);\n        } else {\n          return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n      }, maxDoc);\n  }\n\n","sourceOld":"  private SortedSetDocValues getSortedSetTable(FieldInfo field, SortedSetEntry ss) throws IOException {\n    final long valueCount = binaries.get(field.name).count;\n    final LongBinaryDocValues binary = (LongBinaryDocValues) getLegacyBinary(field);\n    final NumericEntry ordinalsEntry = ords.get(field.name);\n    final LongValues ordinals = getNumeric(ordinalsEntry);\n\n    final long[] table = ss.table;\n    final int[] offsets = ss.tableOffsets;\n\n    return new LegacySortedSetDocValuesWrapper(new LegacySortedSetDocValues() {\n\n      int offset, startOffset, endOffset;\n\n      @Override\n      public void setDocument(int docID) {\n        final int ord = (int) ordinals.get(docID);\n        offset = startOffset = offsets[ord];\n        endOffset = offsets[ord + 1];\n      }\n\n      @Override\n      public long nextOrd() {\n        if (offset == endOffset) {\n          return NO_MORE_ORDS;\n        } else {\n          return table[offset++];\n        }\n      }\n\n      @Override\n      public BytesRef lookupOrd(long ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public long getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public long lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).lookupTerm(key);\n        } else {\n          return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n      }, maxDoc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23e44daeaa8b89694d10df5999956c8e14a7dd09","date":1476689300,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer#getSortedSetTable(FieldInfo,SortedSetEntry).mjava","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer#getSortedSetTable(FieldInfo,SortedSetEntry).mjava","sourceNew":"  private SortedSetDocValues getSortedSetTable(FieldInfo field, SortedSetEntry ss) throws IOException {\n    final long valueCount = binaries.get(field.name).count;\n    final LongBinaryDocValues binary = (LongBinaryDocValues) getLegacyBinary(field);\n    final NumericEntry ordinalsEntry = ords.get(field.name);\n    final LongValues ordinals = getNumeric(ordinalsEntry);\n\n    final long[] table = ss.table;\n    final int[] offsets = ss.tableOffsets;\n\n    return new LegacySortedSetDocValuesWrapper(new LegacySortedSetDocValues() {\n\n      int offset, startOffset, endOffset;\n\n      @Override\n      public void setDocument(int docID) {\n        final int ord = (int) ordinals.get(docID);\n        offset = startOffset = offsets[ord];\n        endOffset = offsets[ord + 1];\n      }\n\n      @Override\n      public long nextOrd() {\n        if (offset == endOffset) {\n          return NO_MORE_ORDS;\n        } else {\n          return table[offset++];\n        }\n      }\n\n      @Override\n      public BytesRef lookupOrd(long ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public long getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public long lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).lookupTerm(key);\n        } else {\n          return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() throws IOException {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n      }, maxDoc);\n  }\n\n","sourceOld":"  private SortedSetDocValues getSortedSetTable(FieldInfo field, SortedSetEntry ss) throws IOException {\n    final long valueCount = binaries.get(field.name).count;\n    final LongBinaryDocValues binary = (LongBinaryDocValues) getLegacyBinary(field);\n    final NumericEntry ordinalsEntry = ords.get(field.name);\n    final LongValues ordinals = getNumeric(ordinalsEntry);\n\n    final long[] table = ss.table;\n    final int[] offsets = ss.tableOffsets;\n\n    return new LegacySortedSetDocValuesWrapper(new LegacySortedSetDocValues() {\n\n      int offset, startOffset, endOffset;\n\n      @Override\n      public void setDocument(int docID) {\n        final int ord = (int) ordinals.get(docID);\n        offset = startOffset = offsets[ord];\n        endOffset = offsets[ord + 1];\n      }\n\n      @Override\n      public long nextOrd() {\n        if (offset == endOffset) {\n          return NO_MORE_ORDS;\n        } else {\n          return table[offset++];\n        }\n      }\n\n      @Override\n      public BytesRef lookupOrd(long ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public long getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public long lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).lookupTerm(key);\n        } else {\n          return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n      }, maxDoc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer#getSortedSetTable(FieldInfo,SortedSetEntry).mjava","pathOld":"/dev/null","sourceNew":"  private SortedSetDocValues getSortedSetTable(FieldInfo field, SortedSetEntry ss) throws IOException {\n    final long valueCount = binaries.get(field.name).count;\n    final LongBinaryDocValues binary = (LongBinaryDocValues) getLegacyBinary(field);\n    final NumericEntry ordinalsEntry = ords.get(field.name);\n    final LongValues ordinals = getNumeric(ordinalsEntry);\n\n    final long[] table = ss.table;\n    final int[] offsets = ss.tableOffsets;\n\n    return new LegacySortedSetDocValuesWrapper(new LegacySortedSetDocValues() {\n\n      int offset, startOffset, endOffset;\n\n      @Override\n      public void setDocument(int docID) {\n        final int ord = (int) ordinals.get(docID);\n        offset = startOffset = offsets[ord];\n        endOffset = offsets[ord + 1];\n      }\n\n      @Override\n      public long nextOrd() {\n        if (offset == endOffset) {\n          return NO_MORE_ORDS;\n        } else {\n          return table[offset++];\n        }\n      }\n\n      @Override\n      public BytesRef lookupOrd(long ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public long getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public long lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).lookupTerm(key);\n        } else {\n          return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() throws IOException {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n      }, maxDoc);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85b9829d27224bda451a373a47f081afb1c664b8","date":1498846708,"type":4,"author":"Anshum Gupta","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer#getSortedSetTable(FieldInfo,SortedSetEntry).mjava","sourceNew":null,"sourceOld":"  private SortedSetDocValues getSortedSetTable(FieldInfo field, SortedSetEntry ss) throws IOException {\n    final long valueCount = binaries.get(field.name).count;\n    final LongBinaryDocValues binary = (LongBinaryDocValues) getLegacyBinary(field);\n    final NumericEntry ordinalsEntry = ords.get(field.name);\n    final LongValues ordinals = getNumeric(ordinalsEntry);\n\n    final long[] table = ss.table;\n    final int[] offsets = ss.tableOffsets;\n\n    return new LegacySortedSetDocValuesWrapper(new LegacySortedSetDocValues() {\n\n      int offset, startOffset, endOffset;\n\n      @Override\n      public void setDocument(int docID) {\n        final int ord = (int) ordinals.get(docID);\n        offset = startOffset = offsets[ord];\n        endOffset = offsets[ord + 1];\n      }\n\n      @Override\n      public long nextOrd() {\n        if (offset == endOffset) {\n          return NO_MORE_ORDS;\n        } else {\n          return table[offset++];\n        }\n      }\n\n      @Override\n      public BytesRef lookupOrd(long ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public long getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public long lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).lookupTerm(key);\n        } else {\n          return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() throws IOException {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n      }, maxDoc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc018b79379c67835b40b1259cd3dc931df60944","date":1499109112,"type":4,"author":"Anshum Gupta","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer#getSortedSetTable(FieldInfo,SortedSetEntry).mjava","sourceNew":null,"sourceOld":"  private SortedSetDocValues getSortedSetTable(FieldInfo field, SortedSetEntry ss) throws IOException {\n    final long valueCount = binaries.get(field.name).count;\n    final LongBinaryDocValues binary = (LongBinaryDocValues) getLegacyBinary(field);\n    final NumericEntry ordinalsEntry = ords.get(field.name);\n    final LongValues ordinals = getNumeric(ordinalsEntry);\n\n    final long[] table = ss.table;\n    final int[] offsets = ss.tableOffsets;\n\n    return new LegacySortedSetDocValuesWrapper(new LegacySortedSetDocValues() {\n\n      int offset, startOffset, endOffset;\n\n      @Override\n      public void setDocument(int docID) {\n        final int ord = (int) ordinals.get(docID);\n        offset = startOffset = offsets[ord];\n        endOffset = offsets[ord + 1];\n      }\n\n      @Override\n      public long nextOrd() {\n        if (offset == endOffset) {\n          return NO_MORE_ORDS;\n        } else {\n          return table[offset++];\n        }\n      }\n\n      @Override\n      public BytesRef lookupOrd(long ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public long getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public long lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).lookupTerm(key);\n        } else {\n          return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() throws IOException {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n      }, maxDoc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene54/Lucene54DocValuesProducer#getSortedSetTable(FieldInfo,SortedSetEntry).mjava","sourceNew":null,"sourceOld":"  private SortedSetDocValues getSortedSetTable(FieldInfo field, SortedSetEntry ss) throws IOException {\n    final long valueCount = binaries.get(field.name).count;\n    final LongBinaryDocValues binary = (LongBinaryDocValues) getLegacyBinary(field);\n    final NumericEntry ordinalsEntry = ords.get(field.name);\n    final LongValues ordinals = getNumeric(ordinalsEntry);\n\n    final long[] table = ss.table;\n    final int[] offsets = ss.tableOffsets;\n\n    return new LegacySortedSetDocValuesWrapper(new LegacySortedSetDocValues() {\n\n      int offset, startOffset, endOffset;\n\n      @Override\n      public void setDocument(int docID) {\n        final int ord = (int) ordinals.get(docID);\n        offset = startOffset = offsets[ord];\n        endOffset = offsets[ord + 1];\n      }\n\n      @Override\n      public long nextOrd() {\n        if (offset == endOffset) {\n          return NO_MORE_ORDS;\n        } else {\n          return table[offset++];\n        }\n      }\n\n      @Override\n      public BytesRef lookupOrd(long ord) {\n        return binary.get(ord);\n      }\n\n      @Override\n      public long getValueCount() {\n        return valueCount;\n      }\n\n      @Override\n      public long lookupTerm(BytesRef key) {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).lookupTerm(key);\n        } else {\n          return super.lookupTerm(key);\n        }\n      }\n\n      @Override\n      public TermsEnum termsEnum() throws IOException {\n        if (binary instanceof CompressedBinaryDocValues) {\n          return ((CompressedBinaryDocValues) binary).getTermsEnum();\n        } else {\n          return super.termsEnum();\n        }\n      }\n      }, maxDoc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"23e44daeaa8b89694d10df5999956c8e14a7dd09":["7f3090f7e0cab5b1f5acf12d21f31f00fe74a262"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cc018b79379c67835b40b1259cd3dc931df60944":["23e44daeaa8b89694d10df5999956c8e14a7dd09","85b9829d27224bda451a373a47f081afb1c664b8"],"30c8e5574b55d57947e989443dfde611646530ee":["23e44daeaa8b89694d10df5999956c8e14a7dd09","cc018b79379c67835b40b1259cd3dc931df60944"],"85b9829d27224bda451a373a47f081afb1c664b8":["23e44daeaa8b89694d10df5999956c8e14a7dd09"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","23e44daeaa8b89694d10df5999956c8e14a7dd09"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cc018b79379c67835b40b1259cd3dc931df60944"]},"commit2Childs":{"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262":["23e44daeaa8b89694d10df5999956c8e14a7dd09"],"23e44daeaa8b89694d10df5999956c8e14a7dd09":["cc018b79379c67835b40b1259cd3dc931df60944","30c8e5574b55d57947e989443dfde611646530ee","85b9829d27224bda451a373a47f081afb1c664b8","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7f3090f7e0cab5b1f5acf12d21f31f00fe74a262","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cc018b79379c67835b40b1259cd3dc931df60944":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"30c8e5574b55d57947e989443dfde611646530ee":[],"85b9829d27224bda451a373a47f081afb1c664b8":["cc018b79379c67835b40b1259cd3dc931df60944"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}