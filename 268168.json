{"path":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser#escapeUserQuery(List[Clause]).mjava","commits":[{"id":"c7e79e31f55cbb444e3023d430a340658755aa31","date":1357666399,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser#escapeUserQuery(List[Clause]).mjava","pathOld":"/dev/null","sourceNew":"  private String escapeUserQuery(List<Clause> clauses) {\n    StringBuilder sb = new StringBuilder();\n    for (Clause clause : clauses) {\n      \n      boolean doQuote = clause.isPhrase;\n      \n      String s=clause.val;\n      if (!clause.isPhrase && (\"OR\".equals(s) || \"AND\".equals(s) || \"NOT\".equals(s))) {\n        doQuote=true;\n      }\n      \n      if (clause.must != 0) {\n        sb.append(clause.must);\n      }\n      if (clause.field != null) {\n        sb.append(clause.field);\n        sb.append(':');\n      }\n      if (doQuote) {\n        sb.append('\"');\n      }\n      sb.append(clause.val);\n      if (doQuote) {\n        sb.append('\"');\n      }\n      if (clause.field != null) {\n        // Add the default user field boost, if any\n        Float boost = config.userFields.getBoost(clause.field);\n        if(boost != null)\n          sb.append(\"^\").append(boost);\n      }\n      sb.append(' ');\n    }\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser#escapeUserQuery(List[Clause]).mjava","pathOld":"/dev/null","sourceNew":"  private String escapeUserQuery(List<Clause> clauses) {\n    StringBuilder sb = new StringBuilder();\n    for (Clause clause : clauses) {\n      \n      boolean doQuote = clause.isPhrase;\n      \n      String s=clause.val;\n      if (!clause.isPhrase && (\"OR\".equals(s) || \"AND\".equals(s) || \"NOT\".equals(s))) {\n        doQuote=true;\n      }\n      \n      if (clause.must != 0) {\n        sb.append(clause.must);\n      }\n      if (clause.field != null) {\n        sb.append(clause.field);\n        sb.append(':');\n      }\n      if (doQuote) {\n        sb.append('\"');\n      }\n      sb.append(clause.val);\n      if (doQuote) {\n        sb.append('\"');\n      }\n      if (clause.field != null) {\n        // Add the default user field boost, if any\n        Float boost = config.userFields.getBoost(clause.field);\n        if(boost != null)\n          sb.append(\"^\").append(boost);\n      }\n      sb.append(' ');\n    }\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c7e79e31f55cbb444e3023d430a340658755aa31":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c7e79e31f55cbb444e3023d430a340658755aa31"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c7e79e31f55cbb444e3023d430a340658755aa31"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7e79e31f55cbb444e3023d430a340658755aa31","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"c7e79e31f55cbb444e3023d430a340658755aa31":["4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}