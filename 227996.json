{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#getPerThreadsIterator(int).mjava","commits":[{"id":"f64b5c281a42c5a4634b39a4fcb8f21a0cba1600","date":1329061481,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#getPerThreadsIterator(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#getPerThreadsIterator(int).mjava","sourceNew":"  private Iterator<ThreadState> getPerThreadsIterator(final int upto) {\n    return new Iterator<ThreadState>() {\n      int i = 0;\n\n      public boolean hasNext() {\n        return i < upto;\n      }\n\n      public ThreadState next() {\n        return perThreadPool.getThreadState(i++);\n      }\n\n      public void remove() {\n        throw new UnsupportedOperationException(\"remove() not supported.\");\n      }\n    };\n  }\n\n","sourceOld":"  private Iterator<ThreadState> getPerThreadsIterator(final int upto) {\n    return new Iterator<ThreadState>() {\n      int i = 0;\n\n      public boolean hasNext() {\n        return i < upto;\n      }\n\n      public ThreadState next() {\n        return perThreads[i++];\n      }\n\n      public void remove() {\n        throw new UnsupportedOperationException(\"remove() not supported.\");\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#getPerThreadsIterator(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#getPerThreadsIterator(int).mjava","sourceNew":"  private Iterator<ThreadState> getPerThreadsIterator(final int upto) {\n    return new Iterator<ThreadState>() {\n      int i = 0;\n\n      @Override\n      public boolean hasNext() {\n        return i < upto;\n      }\n\n      @Override\n      public ThreadState next() {\n        return perThreadPool.getThreadState(i++);\n      }\n\n      @Override\n      public void remove() {\n        throw new UnsupportedOperationException(\"remove() not supported.\");\n      }\n    };\n  }\n\n","sourceOld":"  private Iterator<ThreadState> getPerThreadsIterator(final int upto) {\n    return new Iterator<ThreadState>() {\n      int i = 0;\n\n      public boolean hasNext() {\n        return i < upto;\n      }\n\n      public ThreadState next() {\n        return perThreadPool.getThreadState(i++);\n      }\n\n      public void remove() {\n        throw new UnsupportedOperationException(\"remove() not supported.\");\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#getPerThreadsIterator(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#getPerThreadsIterator(int).mjava","sourceNew":"  private Iterator<ThreadState> getPerThreadsIterator(final int upto) {\n    return new Iterator<ThreadState>() {\n      int i = 0;\n\n      @Override\n      public boolean hasNext() {\n        return i < upto;\n      }\n\n      @Override\n      public ThreadState next() {\n        return perThreadPool.getThreadState(i++);\n      }\n\n      @Override\n      public void remove() {\n        throw new UnsupportedOperationException(\"remove() not supported.\");\n      }\n    };\n  }\n\n","sourceOld":"  private Iterator<ThreadState> getPerThreadsIterator(final int upto) {\n    return new Iterator<ThreadState>() {\n      int i = 0;\n\n      public boolean hasNext() {\n        return i < upto;\n      }\n\n      public ThreadState next() {\n        return perThreadPool.getThreadState(i++);\n      }\n\n      public void remove() {\n        throw new UnsupportedOperationException(\"remove() not supported.\");\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"264935965977b4a9e2f3920420647072c9c49176","date":1586600626,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#getPerThreadsIterator(int).mjava","sourceNew":null,"sourceOld":"  private Iterator<ThreadState> getPerThreadsIterator(final int upto) {\n    return new Iterator<ThreadState>() {\n      int i = 0;\n\n      @Override\n      public boolean hasNext() {\n        return i < upto;\n      }\n\n      @Override\n      public ThreadState next() {\n        return perThreadPool.getThreadState(i++);\n      }\n\n      @Override\n      public void remove() {\n        throw new UnsupportedOperationException(\"remove() not supported.\");\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["f64b5c281a42c5a4634b39a4fcb8f21a0cba1600","7530de27b87b961b51f01bd1299b7004d46e8823"],"264935965977b4a9e2f3920420647072c9c49176":["7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["f64b5c281a42c5a4634b39a4fcb8f21a0cba1600"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["264935965977b4a9e2f3920420647072c9c49176"],"f64b5c281a42c5a4634b39a4fcb8f21a0cba1600":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"264935965977b4a9e2f3920420647072c9c49176":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f64b5c281a42c5a4634b39a4fcb8f21a0cba1600"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","264935965977b4a9e2f3920420647072c9c49176"],"f64b5c281a42c5a4634b39a4fcb8f21a0cba1600":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}