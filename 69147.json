{"path":"lucene/core/src/java/org/apache/lucene/analysis/Token#reinit(Token).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Token#reinit(Token).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/Token#reinit(Token).mjava","sourceNew":"  /**\n   * Copy the prototype token's fields into this one. Note: Payloads are shared.\n   * @param prototype\n   */\n  public void reinit(Token prototype) {\n    copyBuffer(prototype.buffer(), 0, prototype.length());\n    positionIncrement = prototype.positionIncrement;\n    flags = prototype.flags;\n    startOffset = prototype.startOffset;\n    endOffset = prototype.endOffset;\n    type = prototype.type;\n    payload =  prototype.payload;\n  }\n\n","sourceOld":"  /**\n   * Copy the prototype token's fields into this one. Note: Payloads are shared.\n   * @param prototype\n   */\n  public void reinit(Token prototype) {\n    copyBuffer(prototype.buffer(), 0, prototype.length());\n    positionIncrement = prototype.positionIncrement;\n    flags = prototype.flags;\n    startOffset = prototype.startOffset;\n    endOffset = prototype.endOffset;\n    type = prototype.type;\n    payload =  prototype.payload;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Token#reinit(Token).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/Token#reinit(Token).mjava","sourceNew":"  /**\n   * Copy the prototype token's fields into this one. Note: Payloads are shared.\n   * @param prototype source Token to copy fields from\n   */\n  public void reinit(Token prototype) {\n    copyBuffer(prototype.buffer(), 0, prototype.length());\n    positionIncrement = prototype.positionIncrement;\n    flags = prototype.flags;\n    startOffset = prototype.startOffset;\n    endOffset = prototype.endOffset;\n    type = prototype.type;\n    payload =  prototype.payload;\n  }\n\n","sourceOld":"  /**\n   * Copy the prototype token's fields into this one. Note: Payloads are shared.\n   * @param prototype\n   */\n  public void reinit(Token prototype) {\n    copyBuffer(prototype.buffer(), 0, prototype.length());\n    positionIncrement = prototype.positionIncrement;\n    flags = prototype.flags;\n    startOffset = prototype.startOffset;\n    endOffset = prototype.endOffset;\n    type = prototype.type;\n    payload =  prototype.payload;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b01ceb41370c7281988f8a8b6ae62fc15d5d8de1","date":1399070016,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Token#reinit(Token).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/Token#reinit(Token).mjava","sourceNew":"  /**\n   * Copy the prototype token's fields into this one. Note: Payloads are shared.\n   * @param prototype source Token to copy fields from\n   */\n  public void reinit(Token prototype) {\n    copyBuffer(prototype.buffer(), 0, prototype.length());\n    positionIncrement = prototype.positionIncrement;\n    positionLength = prototype.positionLength;\n    flags = prototype.flags;\n    startOffset = prototype.startOffset;\n    endOffset = prototype.endOffset;\n    type = prototype.type;\n    payload =  prototype.payload;\n  }\n\n","sourceOld":"  /**\n   * Copy the prototype token's fields into this one. Note: Payloads are shared.\n   * @param prototype source Token to copy fields from\n   */\n  public void reinit(Token prototype) {\n    copyBuffer(prototype.buffer(), 0, prototype.length());\n    positionIncrement = prototype.positionIncrement;\n    flags = prototype.flags;\n    startOffset = prototype.startOffset;\n    endOffset = prototype.endOffset;\n    type = prototype.type;\n    payload =  prototype.payload;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93124590c6e2a8b45898cbae46f96c3a05d9bce0","date":1399415098,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Token#reinit(Token).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/Token#reinit(Token).mjava","sourceNew":"  /**\n   * Copy the prototype token's fields into this one. Note: Payloads are shared.\n   * @param prototype source Token to copy fields from\n   */\n  public void reinit(Token prototype) {\n    // this is a bad hack to emulate no cloning of payload!\n    prototype.copyToWithoutPayloadClone(this);\n  }\n\n","sourceOld":"  /**\n   * Copy the prototype token's fields into this one. Note: Payloads are shared.\n   * @param prototype source Token to copy fields from\n   */\n  public void reinit(Token prototype) {\n    copyBuffer(prototype.buffer(), 0, prototype.length());\n    positionIncrement = prototype.positionIncrement;\n    positionLength = prototype.positionLength;\n    flags = prototype.flags;\n    startOffset = prototype.startOffset;\n    endOffset = prototype.endOffset;\n    type = prototype.type;\n    payload =  prototype.payload;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f1a421c5a6934704db5f8be705bc74f42e679ba","date":1498207865,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/Token#reinit(Token).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/Token#reinit(Token).mjava","sourceNew":"  /**\n   * Copy the prototype token's fields into this one. Note: Payloads are shared.\n   * @param prototype source Token to copy fields from\n   */\n  public void reinit(Token prototype) {\n    // this is a bad hack to emulate no cloning of payload!\n    prototype.copyToWithoutPayloadClone(this);\n  }\n\n","sourceOld":"  /**\n   * Copy the prototype token's fields into this one. Note: Payloads are shared.\n   * @param prototype source Token to copy fields from\n   */\n  public void reinit(Token prototype) {\n    // this is a bad hack to emulate no cloning of payload!\n    prototype.copyToWithoutPayloadClone(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":5,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/Token#reinit(Token).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/Token#reinit(Token).mjava","sourceNew":"  /**\n   * Copy the prototype token's fields into this one. Note: Payloads are shared.\n   * @param prototype source Token to copy fields from\n   */\n  public void reinit(Token prototype) {\n    // this is a bad hack to emulate no cloning of payload!\n    prototype.copyToWithoutPayloadClone(this);\n  }\n\n","sourceOld":"  /**\n   * Copy the prototype token's fields into this one. Note: Payloads are shared.\n   * @param prototype source Token to copy fields from\n   */\n  public void reinit(Token prototype) {\n    // this is a bad hack to emulate no cloning of payload!\n    prototype.copyToWithoutPayloadClone(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/Token#reinit(Token).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/Token#reinit(Token).mjava","sourceNew":"  /**\n   * Copy the prototype token's fields into this one. Note: Payloads are shared.\n   * @param prototype source Token to copy fields from\n   */\n  public void reinit(Token prototype) {\n    // this is a bad hack to emulate no cloning of payload!\n    prototype.copyToWithoutPayloadClone(this);\n  }\n\n","sourceOld":"  /**\n   * Copy the prototype token's fields into this one. Note: Payloads are shared.\n   * @param prototype source Token to copy fields from\n   */\n  public void reinit(Token prototype) {\n    // this is a bad hack to emulate no cloning of payload!\n    prototype.copyToWithoutPayloadClone(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"93124590c6e2a8b45898cbae46f96c3a05d9bce0":["b01ceb41370c7281988f8a8b6ae62fc15d5d8de1"],"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1f1a421c5a6934704db5f8be705bc74f42e679ba":["93124590c6e2a8b45898cbae46f96c3a05d9bce0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b01ceb41370c7281988f8a8b6ae62fc15d5d8de1":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["93124590c6e2a8b45898cbae46f96c3a05d9bce0","1f1a421c5a6934704db5f8be705bc74f42e679ba"],"28288370235ed02234a64753cdbf0c6ec096304a":["93124590c6e2a8b45898cbae46f96c3a05d9bce0","1f1a421c5a6934704db5f8be705bc74f42e679ba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"93124590c6e2a8b45898cbae46f96c3a05d9bce0":["1f1a421c5a6934704db5f8be705bc74f42e679ba","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["b01ceb41370c7281988f8a8b6ae62fc15d5d8de1"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"1f1a421c5a6934704db5f8be705bc74f42e679ba":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b01ceb41370c7281988f8a8b6ae62fc15d5d8de1":["93124590c6e2a8b45898cbae46f96c3a05d9bce0"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}