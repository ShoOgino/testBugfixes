{"path":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene42/Lucene42FieldInfosWriter#docValuesByte(DocValuesType).mjava","commits":[{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene42/Lucene42FieldInfosWriter#docValuesByte(DocValuesType).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene42/Lucene42FieldInfosWriter#docValuesByte(DocValuesType).mjava","sourceNew":"  private static byte docValuesByte(DocValuesType type) {\n    if (type == null) {\n      return 0;\n    } else if (type == DocValuesType.NUMERIC) {\n      return 1;\n    } else if (type == DocValuesType.BINARY) {\n      return 2;\n    } else if (type == DocValuesType.SORTED) {\n      return 3;\n    } else if (type == DocValuesType.SORTED_SET) {\n      return 4;\n    } else {\n      throw new AssertionError();\n    }\n  }  \n\n","sourceOld":"  private static byte docValuesByte(DocValuesType type) {\n    if (type == null) {\n      return 0;\n    } else if (type == DocValuesType.NUMERIC) {\n      return 1;\n    } else if (type == DocValuesType.BINARY) {\n      return 2;\n    } else if (type == DocValuesType.SORTED) {\n      return 3;\n    } else if (type == DocValuesType.SORTED_SET) {\n      return 4;\n    } else {\n      throw new AssertionError();\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene42/Lucene42FieldInfosWriter#docValuesByte(DocValuesType).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene42/Lucene42FieldInfosWriter#docValuesByte(DocValuesType).mjava","sourceNew":"  private static byte docValuesByte(DocValuesType type) {\n    if (type == null) {\n      return 0;\n    } else if (type == DocValuesType.NUMERIC) {\n      return 1;\n    } else if (type == DocValuesType.BINARY) {\n      return 2;\n    } else if (type == DocValuesType.SORTED) {\n      return 3;\n    } else if (type == DocValuesType.SORTED_SET) {\n      return 4;\n    } else {\n      throw new AssertionError();\n    }\n  }  \n\n","sourceOld":"  private static byte docValuesByte(DocValuesType type) {\n    if (type == null) {\n      return 0;\n    } else if (type == DocValuesType.NUMERIC) {\n      return 1;\n    } else if (type == DocValuesType.BINARY) {\n      return 2;\n    } else if (type == DocValuesType.SORTED) {\n      return 3;\n    } else if (type == DocValuesType.SORTED_SET) {\n      return 4;\n    } else {\n      throw new AssertionError();\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2fe60a17a7a0cfd101b1169acf089221bc6c166","date":1412767493,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene42/Lucene42RWFieldInfosFormat#docValuesByte(DocValuesType).mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene42/Lucene42FieldInfosWriter#docValuesByte(DocValuesType).mjava","sourceNew":"  private static byte docValuesByte(DocValuesType type) {\n    if (type == null) {\n      return 0;\n    } else if (type == DocValuesType.NUMERIC) {\n      return 1;\n    } else if (type == DocValuesType.BINARY) {\n      return 2;\n    } else if (type == DocValuesType.SORTED) {\n      return 3;\n    } else if (type == DocValuesType.SORTED_SET) {\n      return 4;\n    } else {\n      throw new AssertionError();\n    }\n  }  \n\n","sourceOld":"  private static byte docValuesByte(DocValuesType type) {\n    if (type == null) {\n      return 0;\n    } else if (type == DocValuesType.NUMERIC) {\n      return 1;\n    } else if (type == DocValuesType.BINARY) {\n      return 2;\n    } else if (type == DocValuesType.SORTED) {\n      return 3;\n    } else if (type == DocValuesType.SORTED_SET) {\n      return 4;\n    } else {\n      throw new AssertionError();\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene42/Lucene42RWFieldInfosFormat#docValuesByte(DocValuesType).mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene42/Lucene42FieldInfosWriter#docValuesByte(DocValuesType).mjava","sourceNew":"  private static byte docValuesByte(DocValuesType type) {\n    if (type == null) {\n      return 0;\n    } else if (type == DocValuesType.NUMERIC) {\n      return 1;\n    } else if (type == DocValuesType.BINARY) {\n      return 2;\n    } else if (type == DocValuesType.SORTED) {\n      return 3;\n    } else if (type == DocValuesType.SORTED_SET) {\n      return 4;\n    } else {\n      throw new AssertionError();\n    }\n  }  \n\n","sourceOld":"  private static byte docValuesByte(DocValuesType type) {\n    if (type == null) {\n      return 0;\n    } else if (type == DocValuesType.NUMERIC) {\n      return 1;\n    } else if (type == DocValuesType.BINARY) {\n      return 2;\n    } else if (type == DocValuesType.SORTED) {\n      return 3;\n    } else if (type == DocValuesType.SORTED_SET) {\n      return 4;\n    } else {\n      throw new AssertionError();\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e2fe60a17a7a0cfd101b1169acf089221bc6c166":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"55980207f1977bd1463465de1659b821347e2fa8":["402ad3ddc9da7b70da1b167667a60ece6a1381fb","e2fe60a17a7a0cfd101b1169acf089221bc6c166"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e2fe60a17a7a0cfd101b1169acf089221bc6c166"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"e2fe60a17a7a0cfd101b1169acf089221bc6c166":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"55980207f1977bd1463465de1659b821347e2fa8":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["e2fe60a17a7a0cfd101b1169acf089221bc6c166","55980207f1977bd1463465de1659b821347e2fa8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}