{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#doSplitPossessive(int,String,String...).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#doSplitPossessive(int,String,String...).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#doSplitPossessive(int,String,String...).mjava","sourceNew":"  public void doSplitPossessive(int stemPossessive, final String input, final String... output) throws Exception {\n    int flags = GENERATE_WORD_PARTS | GENERATE_NUMBER_PARTS | SPLIT_ON_CASE_CHANGE | SPLIT_ON_NUMERICS;\n    flags |= (stemPossessive == 1) ? STEM_ENGLISH_POSSESSIVE : 0;\n    WordDelimiterFilter wdf = new WordDelimiterFilter(new MockTokenizer(\n        new StringReader(input), MockTokenizer.KEYWORD, false), flags, null);\n\n    assertTokenStreamContents(wdf, output);\n  }\n\n","sourceOld":"  public void doSplitPossessive(int stemPossessive, final String input, final String... output) throws Exception {\n    int flags = GENERATE_WORD_PARTS | GENERATE_NUMBER_PARTS | SPLIT_ON_CASE_CHANGE | SPLIT_ON_NUMERICS;\n    flags |= (stemPossessive == 1) ? STEM_ENGLISH_POSSESSIVE : 0;\n    WordDelimiterFilter wdf = new WordDelimiterFilter(new MockTokenizer(\n        new StringReader(input), MockTokenizer.KEYWORD, false), flags, null);\n\n    assertTokenStreamContents(wdf, output);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#doSplitPossessive(int,String,String...).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#doSplitPossessive(int,String,String...).mjava","sourceNew":"  public void doSplitPossessive(int stemPossessive, final String input, final String... output) throws Exception {\n    int flags = GENERATE_WORD_PARTS | GENERATE_NUMBER_PARTS | SPLIT_ON_CASE_CHANGE | SPLIT_ON_NUMERICS;\n    flags |= (stemPossessive == 1) ? STEM_ENGLISH_POSSESSIVE : 0;\n    WordDelimiterFilter wdf = new WordDelimiterFilter(keywordMockTokenizer(input), flags, null);\n\n    assertTokenStreamContents(wdf, output);\n  }\n\n","sourceOld":"  public void doSplitPossessive(int stemPossessive, final String input, final String... output) throws Exception {\n    int flags = GENERATE_WORD_PARTS | GENERATE_NUMBER_PARTS | SPLIT_ON_CASE_CHANGE | SPLIT_ON_NUMERICS;\n    flags |= (stemPossessive == 1) ? STEM_ENGLISH_POSSESSIVE : 0;\n    WordDelimiterFilter wdf = new WordDelimiterFilter(new MockTokenizer(\n        new StringReader(input), MockTokenizer.KEYWORD, false), flags, null);\n\n    assertTokenStreamContents(wdf, output);\n  }\n\n","bugFix":null,"bugIntro":["c85fa43e6918808743daa7847ba0264373af687f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c85fa43e6918808743daa7847ba0264373af687f","date":1395166336,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#doSplitPossessive(int,String,String...).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#doSplitPossessive(int,String,String...).mjava","sourceNew":"  public void doSplitPossessive(int stemPossessive, final String input, final String... output) throws Exception {\n    int flags = GENERATE_WORD_PARTS | GENERATE_NUMBER_PARTS | SPLIT_ON_CASE_CHANGE | SPLIT_ON_NUMERICS;\n    flags |= (stemPossessive == 1) ? STEM_ENGLISH_POSSESSIVE : 0;\n    WordDelimiterFilter wdf = new WordDelimiterFilter(TEST_VERSION_CURRENT, keywordMockTokenizer(input), flags, null);\n\n    assertTokenStreamContents(wdf, output);\n  }\n\n","sourceOld":"  public void doSplitPossessive(int stemPossessive, final String input, final String... output) throws Exception {\n    int flags = GENERATE_WORD_PARTS | GENERATE_NUMBER_PARTS | SPLIT_ON_CASE_CHANGE | SPLIT_ON_NUMERICS;\n    flags |= (stemPossessive == 1) ? STEM_ENGLISH_POSSESSIVE : 0;\n    WordDelimiterFilter wdf = new WordDelimiterFilter(keywordMockTokenizer(input), flags, null);\n\n    assertTokenStreamContents(wdf, output);\n  }\n\n","bugFix":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#doSplitPossessive(int,String,String...).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestWordDelimiterFilter#doSplitPossessive(int,String,String...).mjava","sourceNew":"  public void doSplitPossessive(int stemPossessive, final String input, final String... output) throws Exception {\n    int flags = GENERATE_WORD_PARTS | GENERATE_NUMBER_PARTS | SPLIT_ON_CASE_CHANGE | SPLIT_ON_NUMERICS;\n    flags |= (stemPossessive == 1) ? STEM_ENGLISH_POSSESSIVE : 0;\n    WordDelimiterFilter wdf = new WordDelimiterFilter(keywordMockTokenizer(input), flags, null);\n\n    assertTokenStreamContents(wdf, output);\n  }\n\n","sourceOld":"  public void doSplitPossessive(int stemPossessive, final String input, final String... output) throws Exception {\n    int flags = GENERATE_WORD_PARTS | GENERATE_NUMBER_PARTS | SPLIT_ON_CASE_CHANGE | SPLIT_ON_NUMERICS;\n    flags |= (stemPossessive == 1) ? STEM_ENGLISH_POSSESSIVE : 0;\n    WordDelimiterFilter wdf = new WordDelimiterFilter(TEST_VERSION_CURRENT, keywordMockTokenizer(input), flags, null);\n\n    assertTokenStreamContents(wdf, output);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["c85fa43e6918808743daa7847ba0264373af687f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c85fa43e6918808743daa7847ba0264373af687f":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["379db3ad24c4f0214f30a122265a6d6be003a99d"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["c85fa43e6918808743daa7847ba0264373af687f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c85fa43e6918808743daa7847ba0264373af687f":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}