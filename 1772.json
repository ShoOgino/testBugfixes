{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction#getSuggester(Policy.Session,TriggerEvent,ClusterDataProvider).mjava","commits":[{"id":"c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac","date":1503580177,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction#getSuggester(Policy.Session,TriggerEvent,ClusterDataProvider).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction#getSuggester(Policy.Session,TriggerEvent,ZkStateReader).mjava","sourceNew":"  protected Policy.Suggester getSuggester(Policy.Session session, TriggerEvent event, ClusterDataProvider cdp) {\n    Policy.Suggester suggester;\n    switch (event.getEventType()) {\n      case NODEADDED:\n        suggester = session.getSuggester(CollectionParams.CollectionAction.MOVEREPLICA)\n            .hint(Policy.Suggester.Hint.TARGET_NODE, event.getProperty(TriggerEvent.NODE_NAMES));\n        log.debug(\"Created suggester with targetNode: {}\", event.getProperty(TriggerEvent.NODE_NAMES));\n        break;\n      case NODELOST:\n        suggester = session.getSuggester(CollectionParams.CollectionAction.MOVEREPLICA)\n            .hint(Policy.Suggester.Hint.SRC_NODE, event.getProperty(TriggerEvent.NODE_NAMES));\n        log.debug(\"Created suggester with srcNode: {}\", event.getProperty(TriggerEvent.NODE_NAMES));\n        break;\n      default:\n        throw new UnsupportedOperationException(\"No support for events other than nodeAdded and nodeLost, received: \" + event.getEventType());\n    }\n    return suggester;\n  }\n\n","sourceOld":"  protected Policy.Suggester getSuggester(Policy.Session session, TriggerEvent event, ZkStateReader zkStateReader) {\n    Policy.Suggester suggester;\n    switch (event.getEventType()) {\n      case NODEADDED:\n        suggester = session.getSuggester(CollectionParams.CollectionAction.MOVEREPLICA)\n            .hint(Policy.Suggester.Hint.TARGET_NODE, event.getProperty(TriggerEvent.NODE_NAMES));\n        log.debug(\"Created suggester with targetNode: {}\", event.getProperty(TriggerEvent.NODE_NAMES));\n        break;\n      case NODELOST:\n        suggester = session.getSuggester(CollectionParams.CollectionAction.MOVEREPLICA)\n            .hint(Policy.Suggester.Hint.SRC_NODE, event.getProperty(TriggerEvent.NODE_NAMES));\n        log.debug(\"Created suggester with srcNode: {}\", event.getProperty(TriggerEvent.NODE_NAMES));\n        break;\n      default:\n        throw new UnsupportedOperationException(\"No support for events other than nodeAdded and nodeLost, received: \" + event.getEventType());\n    }\n    return suggester;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b869898f50ca80263bac2e3ae0949f7700e5c977","date":1503580229,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction#getSuggester(Policy.Session,TriggerEvent,ZkStateReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction#getSuggester(Policy.Session,TriggerEvent,ClusterDataProvider).mjava","sourceNew":"  protected Policy.Suggester getSuggester(Policy.Session session, TriggerEvent event, ZkStateReader zkStateReader) {\n    Policy.Suggester suggester;\n    switch (event.getEventType()) {\n      case NODEADDED:\n        suggester = session.getSuggester(CollectionParams.CollectionAction.MOVEREPLICA)\n            .hint(Policy.Suggester.Hint.TARGET_NODE, event.getProperty(TriggerEvent.NODE_NAMES));\n        log.debug(\"Created suggester with targetNode: {}\", event.getProperty(TriggerEvent.NODE_NAMES));\n        break;\n      case NODELOST:\n        suggester = session.getSuggester(CollectionParams.CollectionAction.MOVEREPLICA)\n            .hint(Policy.Suggester.Hint.SRC_NODE, event.getProperty(TriggerEvent.NODE_NAMES));\n        log.debug(\"Created suggester with srcNode: {}\", event.getProperty(TriggerEvent.NODE_NAMES));\n        break;\n      default:\n        throw new UnsupportedOperationException(\"No support for events other than nodeAdded and nodeLost, received: \" + event.getEventType());\n    }\n    return suggester;\n  }\n\n","sourceOld":"  protected Policy.Suggester getSuggester(Policy.Session session, TriggerEvent event, ClusterDataProvider cdp) {\n    Policy.Suggester suggester;\n    switch (event.getEventType()) {\n      case NODEADDED:\n        suggester = session.getSuggester(CollectionParams.CollectionAction.MOVEREPLICA)\n            .hint(Policy.Suggester.Hint.TARGET_NODE, event.getProperty(TriggerEvent.NODE_NAMES));\n        log.debug(\"Created suggester with targetNode: {}\", event.getProperty(TriggerEvent.NODE_NAMES));\n        break;\n      case NODELOST:\n        suggester = session.getSuggester(CollectionParams.CollectionAction.MOVEREPLICA)\n            .hint(Policy.Suggester.Hint.SRC_NODE, event.getProperty(TriggerEvent.NODE_NAMES));\n        log.debug(\"Created suggester with srcNode: {}\", event.getProperty(TriggerEvent.NODE_NAMES));\n        break;\n      default:\n        throw new UnsupportedOperationException(\"No support for events other than nodeAdded and nodeLost, received: \" + event.getEventType());\n    }\n    return suggester;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b869898f50ca80263bac2e3ae0949f7700e5c977":["c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac":["b869898f50ca80263bac2e3ae0949f7700e5c977"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b869898f50ca80263bac2e3ae0949f7700e5c977":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b869898f50ca80263bac2e3ae0949f7700e5c977","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}