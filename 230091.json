{"path":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAfterRestart().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAfterRestart().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAfterRestart().mjava","sourceNew":"  /**\n   * Attempts to index another 1 document.\n   * \n   * @throws IOException\n   */\n  private void indexAfterRestart() throws IOException {\n    Directory realDirectory = newFSDirectory(path);\n            \n    // LUCENE-3627 (before the fix): this line fails because\n    // it doesn't know what to do with the created but empty\n    // segments_2 file\n    IndexWriter indexWriter = new IndexWriter(realDirectory,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n            \n    // currently the test fails above.\n    // however, to test the fix, the following lines should pass as well.\n    indexWriter.addDocument(getDocument());\n    indexWriter.close();\n    assertFalse(realDirectory.fileExists(\"segments_2\"));\n    realDirectory.close();\n  }\n\n","sourceOld":"  /**\n   * Attempts to index another 1 document.\n   * \n   * @throws IOException\n   */\n  private void indexAfterRestart() throws IOException {\n    Directory realDirectory = newFSDirectory(path);\n            \n    // LUCENE-3627 (before the fix): this line fails because\n    // it doesn't know what to do with the created but empty\n    // segments_2 file\n    IndexWriter indexWriter = new IndexWriter(realDirectory,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n            \n    // currently the test fails above.\n    // however, to test the fix, the following lines should pass as well.\n    indexWriter.addDocument(getDocument());\n    indexWriter.close();\n    assertFalse(realDirectory.fileExists(\"segments_2\"));\n    realDirectory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAfterRestart().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAfterRestart().mjava","sourceNew":"  /**\n   * Attempts to index another 1 document.\n   * \n   * @throws IOException\n   */\n  private void indexAfterRestart() throws IOException {\n    Directory realDirectory = newFSDirectory(path);\n            \n    // LUCENE-3627 (before the fix): this line fails because\n    // it doesn't know what to do with the created but empty\n    // segments_2 file\n    IndexWriter indexWriter = new IndexWriter(realDirectory,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n            \n    // currently the test fails above.\n    // however, to test the fix, the following lines should pass as well.\n    indexWriter.addDocument(getDocument());\n    indexWriter.close();\n    assertFalse(realDirectory.fileExists(\"segments_2\"));\n    realDirectory.close();\n  }\n\n","sourceOld":"  /**\n   * Attempts to index another 1 document.\n   * \n   * @throws IOException\n   */\n  private void indexAfterRestart() throws IOException {\n    Directory realDirectory = newFSDirectory(path);\n            \n    // LUCENE-3627 (before the fix): this line fails because\n    // it doesn't know what to do with the created but empty\n    // segments_2 file\n    IndexWriter indexWriter = new IndexWriter(realDirectory,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n            \n    // currently the test fails above.\n    // however, to test the fix, the following lines should pass as well.\n    indexWriter.addDocument(getDocument());\n    indexWriter.close();\n    assertFalse(realDirectory.fileExists(\"segments_2\"));\n    realDirectory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAfterRestart().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAfterRestart().mjava","sourceNew":"  /**\n   * Attempts to index another 1 document.\n   */\n  private void indexAfterRestart() throws IOException {\n    Directory realDirectory = newFSDirectory(path);\n            \n    // LUCENE-3627 (before the fix): this line fails because\n    // it doesn't know what to do with the created but empty\n    // segments_2 file\n    IndexWriter indexWriter = new IndexWriter(realDirectory,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n            \n    // currently the test fails above.\n    // however, to test the fix, the following lines should pass as well.\n    indexWriter.addDocument(getDocument());\n    indexWriter.close();\n    assertFalse(realDirectory.fileExists(\"segments_2\"));\n    realDirectory.close();\n  }\n\n","sourceOld":"  /**\n   * Attempts to index another 1 document.\n   * \n   * @throws IOException\n   */\n  private void indexAfterRestart() throws IOException {\n    Directory realDirectory = newFSDirectory(path);\n            \n    // LUCENE-3627 (before the fix): this line fails because\n    // it doesn't know what to do with the created but empty\n    // segments_2 file\n    IndexWriter indexWriter = new IndexWriter(realDirectory,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n            \n    // currently the test fails above.\n    // however, to test the fix, the following lines should pass as well.\n    indexWriter.addDocument(getDocument());\n    indexWriter.close();\n    assertFalse(realDirectory.fileExists(\"segments_2\"));\n    realDirectory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cd4e13d997cf4fb810398a20a299c2c5a9f6b796","date":1395594336,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAfterRestart().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAfterRestart().mjava","sourceNew":"  /**\n   * Attempts to index another 1 document.\n   */\n  private void indexAfterRestart() throws IOException {\n    Directory realDirectory = newFSDirectory(path);\n            \n    // LUCENE-3627 (before the fix): this line fails because\n    // it doesn't know what to do with the created but empty\n    // segments_2 file\n    IndexWriter indexWriter = new IndexWriter(realDirectory,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n            \n    // currently the test fails above.\n    // however, to test the fix, the following lines should pass as well.\n    indexWriter.addDocument(getDocument());\n    indexWriter.close();\n    assertFalse(slowFileExists(realDirectory, \"segments_2\"));\n    realDirectory.close();\n  }\n\n","sourceOld":"  /**\n   * Attempts to index another 1 document.\n   */\n  private void indexAfterRestart() throws IOException {\n    Directory realDirectory = newFSDirectory(path);\n            \n    // LUCENE-3627 (before the fix): this line fails because\n    // it doesn't know what to do with the created but empty\n    // segments_2 file\n    IndexWriter indexWriter = new IndexWriter(realDirectory,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n            \n    // currently the test fails above.\n    // however, to test the fix, the following lines should pass as well.\n    indexWriter.addDocument(getDocument());\n    indexWriter.close();\n    assertFalse(realDirectory.fileExists(\"segments_2\"));\n    realDirectory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAfterRestart().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAfterRestart().mjava","sourceNew":"  /**\n   * Attempts to index another 1 document.\n   */\n  private void indexAfterRestart() throws IOException {\n    Directory realDirectory = newFSDirectory(path);\n            \n    // LUCENE-3627 (before the fix): this line fails because\n    // it doesn't know what to do with the created but empty\n    // segments_2 file\n    IndexWriter indexWriter = new IndexWriter(realDirectory,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n            \n    // currently the test fails above.\n    // however, to test the fix, the following lines should pass as well.\n    indexWriter.addDocument(getDocument());\n    indexWriter.shutdown();\n    assertFalse(slowFileExists(realDirectory, \"segments_2\"));\n    realDirectory.close();\n  }\n\n","sourceOld":"  /**\n   * Attempts to index another 1 document.\n   */\n  private void indexAfterRestart() throws IOException {\n    Directory realDirectory = newFSDirectory(path);\n            \n    // LUCENE-3627 (before the fix): this line fails because\n    // it doesn't know what to do with the created but empty\n    // segments_2 file\n    IndexWriter indexWriter = new IndexWriter(realDirectory,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n            \n    // currently the test fails above.\n    // however, to test the fix, the following lines should pass as well.\n    indexWriter.addDocument(getDocument());\n    indexWriter.close();\n    assertFalse(slowFileExists(realDirectory, \"segments_2\"));\n    realDirectory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAfterRestart().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAfterRestart().mjava","sourceNew":"  /**\n   * Attempts to index another 1 document.\n   */\n  private void indexAfterRestart() throws IOException {\n    Directory realDirectory = newFSDirectory(path);\n            \n    // LUCENE-3627 (before the fix): this line fails because\n    // it doesn't know what to do with the created but empty\n    // segments_2 file\n    IndexWriter indexWriter = new IndexWriter(realDirectory,\n                                              newIndexWriterConfig(new MockAnalyzer(random())));\n            \n    // currently the test fails above.\n    // however, to test the fix, the following lines should pass as well.\n    indexWriter.addDocument(getDocument());\n    indexWriter.shutdown();\n    assertFalse(slowFileExists(realDirectory, \"segments_2\"));\n    realDirectory.close();\n  }\n\n","sourceOld":"  /**\n   * Attempts to index another 1 document.\n   */\n  private void indexAfterRestart() throws IOException {\n    Directory realDirectory = newFSDirectory(path);\n            \n    // LUCENE-3627 (before the fix): this line fails because\n    // it doesn't know what to do with the created but empty\n    // segments_2 file\n    IndexWriter indexWriter = new IndexWriter(realDirectory,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n            \n    // currently the test fails above.\n    // however, to test the fix, the following lines should pass as well.\n    indexWriter.addDocument(getDocument());\n    indexWriter.shutdown();\n    assertFalse(slowFileExists(realDirectory, \"segments_2\"));\n    realDirectory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAfterRestart().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAfterRestart().mjava","sourceNew":"  /**\n   * Attempts to index another 1 document.\n   */\n  private void indexAfterRestart() throws IOException {\n    Directory realDirectory = newFSDirectory(path);\n            \n    // LUCENE-3627 (before the fix): this line fails because\n    // it doesn't know what to do with the created but empty\n    // segments_2 file\n    IndexWriter indexWriter = new IndexWriter(realDirectory,\n                                              newIndexWriterConfig(new MockAnalyzer(random())));\n            \n    // currently the test fails above.\n    // however, to test the fix, the following lines should pass as well.\n    indexWriter.addDocument(getDocument());\n    indexWriter.close();\n    assertFalse(slowFileExists(realDirectory, \"segments_2\"));\n    realDirectory.close();\n  }\n\n","sourceOld":"  /**\n   * Attempts to index another 1 document.\n   */\n  private void indexAfterRestart() throws IOException {\n    Directory realDirectory = newFSDirectory(path);\n            \n    // LUCENE-3627 (before the fix): this line fails because\n    // it doesn't know what to do with the created but empty\n    // segments_2 file\n    IndexWriter indexWriter = new IndexWriter(realDirectory,\n                                              newIndexWriterConfig(new MockAnalyzer(random())));\n            \n    // currently the test fails above.\n    // however, to test the fix, the following lines should pass as well.\n    indexWriter.addDocument(getDocument());\n    indexWriter.shutdown();\n    assertFalse(slowFileExists(realDirectory, \"segments_2\"));\n    realDirectory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd4e13d997cf4fb810398a20a299c2c5a9f6b796":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["cd4e13d997cf4fb810398a20a299c2c5a9f6b796"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["cd4e13d997cf4fb810398a20a299c2c5a9f6b796"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd4e13d997cf4fb810398a20a299c2c5a9f6b796":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}