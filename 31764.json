{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/Zipper#supplyNextChild(Iterator[Map[String,Object]]).mjava","commits":[{"id":"4ae7b4adfa274da5f5fdc865e127928b25e5e929","date":1417607786,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/Zipper#supplyNextChild(Iterator[Map[String,Object]]).mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n  public Map<String,Object> supplyNextChild(\n      Iterator<Map<String,Object>> rowIterator) {\n    preparePeeker(rowIterator);\n      \n    while(peeker.hasNext()){\n      Map<String,Object> current = peeker.peek();\n      Comparable childId = (Comparable) current.get(relation.primaryKey);\n      \n      if(lastChildId!=null && lastChildId.compareTo(childId)>0){\n        throw new IllegalArgumentException(\"expect increasing foreign keys for \"+relation+\n            \" got: \"+lastChildId+\",\"+childId);\n      }\n      lastChildId = childId;\n      int cmp = childId.compareTo(parentId);\n      if(cmp==0){\n        Map<String,Object> child = peeker.next();\n        assert child==current: \"peeker should be right but \"+current+\" != \" + child;\n        log.trace(\"yeild child {} entry {}\",relation, current);\n        return child;// TODO it's for one->many for many->one it should be just peek() \n      }else{\n        if(cmp<0){ // child belongs to 10th and parent is 20th, skip for the next one\n          Map<String,Object> child = peeker.next();\n          assert child==current: \"peeker should be right but \"+current+\" != \" + child;\n          log.trace(\"skip child {}, {} > {}\",relation, parentId, childId);\n        }else{ // child belongs to 20th and  parent is 10th, no more children, go to next parent\n          log.trace(\"childen is over {}, {} < {}\", relation, parentId, current);\n          return null;\n        }\n      }\n    }\n    \n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/Zipper#supplyNextChild(Iterator[Map[String,Object]]).mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n  public Map<String,Object> supplyNextChild(\n      Iterator<Map<String,Object>> rowIterator) {\n    preparePeeker(rowIterator);\n      \n    while(peeker.hasNext()){\n      Map<String,Object> current = peeker.peek();\n      Comparable childId = (Comparable) current.get(relation.primaryKey);\n      \n      if(lastChildId!=null && lastChildId.compareTo(childId)>0){\n        throw new IllegalArgumentException(\"expect increasing foreign keys for \"+relation+\n            \" got: \"+lastChildId+\",\"+childId);\n      }\n      lastChildId = childId;\n      int cmp = childId.compareTo(parentId);\n      if(cmp==0){\n        Map<String,Object> child = peeker.next();\n        assert child==current: \"peeker should be right but \"+current+\" != \" + child;\n        log.trace(\"yeild child {} entry {}\",relation, current);\n        return child;// TODO it's for one->many for many->one it should be just peek() \n      }else{\n        if(cmp<0){ // child belongs to 10th and parent is 20th, skip for the next one\n          Map<String,Object> child = peeker.next();\n          assert child==current: \"peeker should be right but \"+current+\" != \" + child;\n          log.trace(\"skip child {}, {} > {}\",relation, parentId, childId);\n        }else{ // child belongs to 20th and  parent is 10th, no more children, go to next parent\n          log.trace(\"childen is over {}, {} < {}\", relation, parentId, current);\n          return null;\n        }\n      }\n    }\n    \n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ae7b4adfa274da5f5fdc865e127928b25e5e929":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["4ae7b4adfa274da5f5fdc865e127928b25e5e929"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"4ae7b4adfa274da5f5fdc865e127928b25e5e929":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ae7b4adfa274da5f5fdc865e127928b25e5e929"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}