{"path":"lucene/test-framework/src/java/org/apache/lucene/search/BulkScorerWrapperScorer#iterator().mjava","commits":[{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/BulkScorerWrapperScorer#iterator().mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/BaseGlobalOrdinalScorer#asTwoPhaseIterator().mjava","sourceNew":"  @Override\n  public DocIdSetIterator iterator() {\n    return new DocIdSetIterator() {\n      @Override\n      public int docID() {\n        return doc;\n      }\n\n      @Override\n      public int nextDoc() throws IOException {\n        return advance(docID() + 1);\n      }\n\n      @Override\n      public int advance(int target) throws IOException {\n        if (bufferLength == 0 || docs[bufferLength - 1] < target) {\n          refill(target);\n        }\n\n        i = Arrays.binarySearch(docs, i + 1, bufferLength, target);\n        if (i < 0) {\n          i = -1 - i;\n        }\n        if (i == bufferLength) {\n          return doc = DocIdSetIterator.NO_MORE_DOCS;\n        }\n        return doc = docs[i];\n      }\n\n      @Override\n      public long cost() {\n        return scorer.cost();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public TwoPhaseIterator asTwoPhaseIterator() {\n    final DocIdSetIterator approximation = new DocIdSetIterator() {\n      @Override\n      public int docID() {\n        return approximationScorer.docID();\n      }\n\n      @Override\n      public int nextDoc() throws IOException {\n        return approximationScorer.nextDoc();\n      }\n\n      @Override\n      public int advance(int target) throws IOException {\n        return approximationScorer.advance(target);\n      }\n\n      @Override\n      public long cost() {\n        return approximationScorer.cost();\n      }\n    };\n    return createTwoPhaseIterator(approximation);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dd748bb245633a8195281556bb0e68a6ea97d18":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dd748bb245633a8195281556bb0e68a6ea97d18"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}