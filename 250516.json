{"path":"lucene/src/java/org/apache/lucene/index/IndexWriter#doWait().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#doWait().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#doWait().mjava","sourceNew":"  private synchronized void doWait() {\n    // NOTE: the callers of this method should in theory\n    // be able to do simply wait(), but, as a defense\n    // against thread timing hazards where notifyAll()\n    // falls to be called, we wait for at most 1 second\n    // and then return so caller can check if wait\n    // conditions are satisfied:\n    try {\n      wait(1000);\n    } catch (InterruptedException ie) {\n      throw new ThreadInterruptedException(ie);\n    }\n  }\n\n","sourceOld":"  private synchronized void doWait() {\n    // NOTE: the callers of this method should in theory\n    // be able to do simply wait(), but, as a defense\n    // against thread timing hazards where notifyAll()\n    // falls to be called, we wait for at most 1 second\n    // and then return so caller can check if wait\n    // conditions are satisfied:\n    try {\n      wait(1000);\n    } catch (InterruptedException ie) {\n      throw new ThreadInterruptedException(ie);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4a6f8353fee316a974fc251efb3c804599621cb","date":1295367252,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#doWait().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#doWait().mjava","sourceNew":"  private synchronized void doWait() {\n    // NOTE: the callers of this method should in theory\n    // be able to do simply wait(), but, as a defense\n    // against thread timing hazards where notifyAll()\n    // fails to be called, we wait for at most 1 second\n    // and then return so caller can check if wait\n    // conditions are satisfied:\n    try {\n      wait(1000);\n    } catch (InterruptedException ie) {\n      throw new ThreadInterruptedException(ie);\n    }\n  }\n\n","sourceOld":"  private synchronized void doWait() {\n    // NOTE: the callers of this method should in theory\n    // be able to do simply wait(), but, as a defense\n    // against thread timing hazards where notifyAll()\n    // falls to be called, we wait for at most 1 second\n    // and then return so caller can check if wait\n    // conditions are satisfied:\n    try {\n      wait(1000);\n    } catch (InterruptedException ie) {\n      throw new ThreadInterruptedException(ie);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#doWait().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#doWait().mjava","sourceNew":"  private synchronized void doWait() {\n    // NOTE: the callers of this method should in theory\n    // be able to do simply wait(), but, as a defense\n    // against thread timing hazards where notifyAll()\n    // fails to be called, we wait for at most 1 second\n    // and then return so caller can check if wait\n    // conditions are satisfied:\n    try {\n      wait(1000);\n    } catch (InterruptedException ie) {\n      throw new ThreadInterruptedException(ie);\n    }\n  }\n\n","sourceOld":"  private synchronized void doWait() {\n    // NOTE: the callers of this method should in theory\n    // be able to do simply wait(), but, as a defense\n    // against thread timing hazards where notifyAll()\n    // falls to be called, we wait for at most 1 second\n    // and then return so caller can check if wait\n    // conditions are satisfied:\n    try {\n      wait(1000);\n    } catch (InterruptedException ie) {\n      throw new ThreadInterruptedException(ie);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#doWait().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#doWait().mjava","sourceNew":"  private synchronized void doWait() {\n    // NOTE: the callers of this method should in theory\n    // be able to do simply wait(), but, as a defense\n    // against thread timing hazards where notifyAll()\n    // fails to be called, we wait for at most 1 second\n    // and then return so caller can check if wait\n    // conditions are satisfied:\n    try {\n      wait(1000);\n    } catch (InterruptedException ie) {\n      throw new ThreadInterruptedException(ie);\n    }\n  }\n\n","sourceOld":"  private synchronized void doWait() {\n    // NOTE: the callers of this method should in theory\n    // be able to do simply wait(), but, as a defense\n    // against thread timing hazards where notifyAll()\n    // falls to be called, we wait for at most 1 second\n    // and then return so caller can check if wait\n    // conditions are satisfied:\n    try {\n      wait(1000);\n    } catch (InterruptedException ie) {\n      throw new ThreadInterruptedException(ie);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#doWait().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#doWait().mjava","sourceNew":"  private synchronized void doWait() {\n    // NOTE: the callers of this method should in theory\n    // be able to do simply wait(), but, as a defense\n    // against thread timing hazards where notifyAll()\n    // fails to be called, we wait for at most 1 second\n    // and then return so caller can check if wait\n    // conditions are satisfied:\n    try {\n      wait(1000);\n    } catch (InterruptedException ie) {\n      throw new ThreadInterruptedException(ie);\n    }\n  }\n\n","sourceOld":"  private synchronized void doWait() {\n    // NOTE: the callers of this method should in theory\n    // be able to do simply wait(), but, as a defense\n    // against thread timing hazards where notifyAll()\n    // fails to be called, we wait for at most 1 second\n    // and then return so caller can check if wait\n    // conditions are satisfied:\n    try {\n      wait(1000);\n    } catch (InterruptedException ie) {\n      throw new ThreadInterruptedException(ie);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["9454a6510e2db155fb01faa5c049b06ece95fab9","d4a6f8353fee316a974fc251efb3c804599621cb"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d4a6f8353fee316a974fc251efb3c804599621cb"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["9454a6510e2db155fb01faa5c049b06ece95fab9","d4a6f8353fee316a974fc251efb3c804599621cb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d4a6f8353fee316a974fc251efb3c804599621cb":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d4a6f8353fee316a974fc251efb3c804599621cb":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","3a119bbc8703c10faa329ec201c654b3a35a1e3e","29ef99d61cda9641b6250bf9567329a6e65f901d"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","29ef99d61cda9641b6250bf9567329a6e65f901d","d4a6f8353fee316a974fc251efb3c804599621cb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}