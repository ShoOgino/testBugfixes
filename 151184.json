{"path":"modules/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","commits":[{"id":"d15f7215dbedf8f3258d977583979d3164ae8cf9","date":1298994434,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","pathOld":"/dev/null","sourceNew":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = randomLocale(random);\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      assertThreadSafe(new ICUCollationKeyAnalyzer(TEST_VERSION_CURRENT, collator));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","pathOld":"/dev/null","sourceNew":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = randomLocale(random);\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      assertThreadSafe(new ICUCollationKeyAnalyzer(TEST_VERSION_CURRENT, collator));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","pathOld":"/dev/null","sourceNew":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = randomLocale(random);\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      assertThreadSafe(new ICUCollationKeyAnalyzer(TEST_VERSION_CURRENT, collator));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"048cad1ce12b3a0447b467a839e6a6ff52747d11","date":1304337794,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","pathOld":"modules/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","sourceNew":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = Locale.GERMAN;\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      assertThreadSafe(new ICUCollationKeyAnalyzer(TEST_VERSION_CURRENT, collator));\n    }\n  }\n\n","sourceOld":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = randomLocale(random);\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      assertThreadSafe(new ICUCollationKeyAnalyzer(TEST_VERSION_CURRENT, collator));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1f0e2f00b4449f4f1fc7473a8287cb532d631e","date":1304347497,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","pathOld":"modules/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","sourceNew":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = Locale.GERMAN;\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      assertThreadSafe(new ICUCollationKeyAnalyzer(TEST_VERSION_CURRENT, collator));\n    }\n  }\n\n","sourceOld":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = randomLocale(random);\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      assertThreadSafe(new ICUCollationKeyAnalyzer(TEST_VERSION_CURRENT, collator));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","pathOld":"modules/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","sourceNew":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = Locale.GERMAN;\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      assertThreadSafe(new ICUCollationKeyAnalyzer(TEST_VERSION_CURRENT, collator));\n    }\n  }\n\n","sourceOld":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = randomLocale(random);\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      assertThreadSafe(new ICUCollationKeyAnalyzer(TEST_VERSION_CURRENT, collator));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","pathOld":"modules/analysis/icu/src/test/org/apache/lucene/collation/TestICUCollationKeyAnalyzer#testThreadSafe().mjava","sourceNew":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = Locale.GERMAN;\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      assertThreadSafe(new ICUCollationKeyAnalyzer(TEST_VERSION_CURRENT, collator));\n    }\n  }\n\n","sourceOld":"  public void testThreadSafe() throws Exception {\n    int iters = 20 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < iters; i++) {\n      Locale locale = Locale.GERMAN;\n      Collator collator = Collator.getInstance(locale);\n      collator.setStrength(Collator.IDENTICAL);\n      assertThreadSafe(new ICUCollationKeyAnalyzer(TEST_VERSION_CURRENT, collator));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["048cad1ce12b3a0447b467a839e6a6ff52747d11"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d15f7215dbedf8f3258d977583979d3164ae8cf9"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d15f7215dbedf8f3258d977583979d3164ae8cf9"],"a3776dccca01c11e7046323cfad46a3b4a471233":["d15f7215dbedf8f3258d977583979d3164ae8cf9","048cad1ce12b3a0447b467a839e6a6ff52747d11"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ba1f0e2f00b4449f4f1fc7473a8287cb532d631e":["d619839baa8ce5503e496b94a9e42ad6f079293f","048cad1ce12b3a0447b467a839e6a6ff52747d11"],"048cad1ce12b3a0447b467a839e6a6ff52747d11":["d15f7215dbedf8f3258d977583979d3164ae8cf9"],"d15f7215dbedf8f3258d977583979d3164ae8cf9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":["ba1f0e2f00b4449f4f1fc7473a8287cb532d631e"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","d15f7215dbedf8f3258d977583979d3164ae8cf9"],"ba1f0e2f00b4449f4f1fc7473a8287cb532d631e":[],"048cad1ce12b3a0447b467a839e6a6ff52747d11":["b89678825b68eccaf09e6ab71675fc0b0af1e099","a3776dccca01c11e7046323cfad46a3b4a471233","ba1f0e2f00b4449f4f1fc7473a8287cb532d631e"],"d15f7215dbedf8f3258d977583979d3164ae8cf9":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","a3776dccca01c11e7046323cfad46a3b4a471233","048cad1ce12b3a0447b467a839e6a6ff52747d11"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","a3776dccca01c11e7046323cfad46a3b4a471233","ba1f0e2f00b4449f4f1fc7473a8287cb532d631e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}