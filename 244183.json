{"path":"lucene/core/src/java/org/apache/lucene/document/Field#setDoubleValue(double).mjava","commits":[{"id":"a78a90fc9701e511308346ea29f4f5e548bb39fe","date":1329489995,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setDoubleValue(double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setValue(double).mjava","sourceNew":"  public void setDoubleValue(double value) {\n    if (!(fieldsData instanceof Double)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to Double\");\n    }\n    if (numericTokenStream != null) {\n      numericTokenStream.setDoubleValue(value);\n    }\n    fieldsData = Double.valueOf(value);\n  }\n\n","sourceOld":"  public void setValue(double value) {\n    if (!(fieldsData instanceof Double)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to Double\");\n    }\n    if (numericTokenStream != null) {\n      numericTokenStream.setDoubleValue(value);\n    }\n    fieldsData = Double.valueOf(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b7d23fd7761cfb5055ce47fc02aee3e155ac202","date":1345553007,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setDoubleValue(double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setDoubleValue(double).mjava","sourceNew":"  public void setDoubleValue(double value) {\n    if (!(fieldsData instanceof Double)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to Double\");\n    }\n    fieldsData = Double.valueOf(value);\n  }\n\n","sourceOld":"  public void setDoubleValue(double value) {\n    if (!(fieldsData instanceof Double)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to Double\");\n    }\n    if (numericTokenStream != null) {\n      numericTokenStream.setDoubleValue(value);\n    }\n    fieldsData = Double.valueOf(value);\n  }\n\n","bugFix":["fa0f44f887719e97183771e977cfc4bfb485b766"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setDoubleValue(double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setDoubleValue(double).mjava","sourceNew":"  public void setDoubleValue(double value) {\n    if (!(fieldsData instanceof Double)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to Double\");\n    }\n    fieldsData = Double.valueOf(value);\n  }\n\n","sourceOld":"  public void setDoubleValue(double value) {\n    if (!(fieldsData instanceof Double)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to Double\");\n    }\n    if (numericTokenStream != null) {\n      numericTokenStream.setDoubleValue(value);\n    }\n    fieldsData = Double.valueOf(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c19721aa3bad7ccd93aa898c543e98a67fff7958","date":1346108798,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setDoubleValue(double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setDoubleValue(double).mjava","sourceNew":"  /**\n   * Expert: change the value of this field. See \n   * {@link #setStringValue(String)}.\n   */\n  public void setDoubleValue(double value) {\n    if (!(fieldsData instanceof Double)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to Double\");\n    }\n    fieldsData = Double.valueOf(value);\n  }\n\n","sourceOld":"  public void setDoubleValue(double value) {\n    if (!(fieldsData instanceof Double)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to Double\");\n    }\n    fieldsData = Double.valueOf(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setDoubleValue(double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setDoubleValue(double).mjava","sourceNew":"  /**\n   * Expert: change the value of this field. See \n   * {@link #setStringValue(String)}.\n   */\n  public void setDoubleValue(double value) {\n    if (!(fieldsData instanceof Double)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to Double\");\n    }\n    fieldsData = Double.valueOf(value);\n  }\n\n","sourceOld":"  public void setDoubleValue(double value) {\n    if (!(fieldsData instanceof Double)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to Double\");\n    }\n    fieldsData = Double.valueOf(value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["a78a90fc9701e511308346ea29f4f5e548bb39fe","2b7d23fd7761cfb5055ce47fc02aee3e155ac202"],"a78a90fc9701e511308346ea29f4f5e548bb39fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2b7d23fd7761cfb5055ce47fc02aee3e155ac202":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["001b25b42373b22a52f399dbf072f1224632e8e6","c19721aa3bad7ccd93aa898c543e98a67fff7958"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c19721aa3bad7ccd93aa898c543e98a67fff7958"],"c19721aa3bad7ccd93aa898c543e98a67fff7958":["2b7d23fd7761cfb5055ce47fc02aee3e155ac202"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":["05a14b2611ead08655a2b2bdc61632eb31316e57"],"a78a90fc9701e511308346ea29f4f5e548bb39fe":["001b25b42373b22a52f399dbf072f1224632e8e6","2b7d23fd7761cfb5055ce47fc02aee3e155ac202"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"2b7d23fd7761cfb5055ce47fc02aee3e155ac202":["001b25b42373b22a52f399dbf072f1224632e8e6","c19721aa3bad7ccd93aa898c543e98a67fff7958"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"c19721aa3bad7ccd93aa898c543e98a67fff7958":["05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}