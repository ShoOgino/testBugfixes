{"path":"lucene/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#PayloadTermSpanScorer(TermSpans,Weight,Similarity,byte[]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#PayloadTermSpanScorer(TermSpans,Weight,Similarity,byte[]).mjava","pathOld":"src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#PayloadTermSpanScorer(TermSpans,Weight,Similarity,byte[]).mjava","sourceNew":"      public PayloadTermSpanScorer(TermSpans spans, Weight weight,\n          Similarity similarity, byte[] norms) throws IOException {\n        super(spans, weight, similarity, norms);\n        positions = spans.getPositions();\n      }\n\n","sourceOld":"      public PayloadTermSpanScorer(TermSpans spans, Weight weight,\n          Similarity similarity, byte[] norms) throws IOException {\n        super(spans, weight, similarity, norms);\n        positions = spans.getPositions();\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#PayloadTermSpanScorer(TermSpans,Weight,Similarity,byte[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#PayloadTermSpanScorer(TermSpans,Weight,Similarity,byte[]).mjava","sourceNew":"      public PayloadTermSpanScorer(TermSpans spans, Weight weight,\n          Similarity similarity, byte[] norms) throws IOException {\n        super(spans, weight, similarity, norms);\n        termSpans = spans;\n      }\n\n","sourceOld":"      public PayloadTermSpanScorer(TermSpans spans, Weight weight,\n          Similarity similarity, byte[] norms) throws IOException {\n        super(spans, weight, similarity, norms);\n        positions = spans.getPositions();\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f3cee3d20b0c786e6fca20539454262e29edcab","date":1310101685,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#PayloadTermSpanScorer(TermSpans,Weight,Similarity,Similarity.SloppyDocScorer).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#PayloadTermSpanScorer(TermSpans,Weight,Similarity,byte[]).mjava","sourceNew":"      public PayloadTermSpanScorer(TermSpans spans, Weight weight,\n          Similarity similarity, Similarity.SloppyDocScorer docScorer) throws IOException {\n        super(spans, weight, similarity, docScorer);\n        termSpans = spans;\n      }\n\n","sourceOld":"      public PayloadTermSpanScorer(TermSpans spans, Weight weight,\n          Similarity similarity, byte[] norms) throws IOException {\n        super(spans, weight, similarity, norms);\n        termSpans = spans;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#PayloadTermSpanScorer(TermSpans,Weight,Similarity,Similarity.SloppyDocScorer).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#PayloadTermSpanScorer(TermSpans,Weight,Similarity,byte[]).mjava","sourceNew":"      public PayloadTermSpanScorer(TermSpans spans, Weight weight,\n          Similarity similarity, Similarity.SloppyDocScorer docScorer) throws IOException {\n        super(spans, weight, similarity, docScorer);\n        termSpans = spans;\n      }\n\n","sourceOld":"      public PayloadTermSpanScorer(TermSpans spans, Weight weight,\n          Similarity similarity, byte[] norms) throws IOException {\n        super(spans, weight, similarity, norms);\n        termSpans = spans;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#PayloadTermSpanScorer(TermSpans,Weight,Similarity,Similarity.SloppyDocScorer).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#PayloadTermSpanScorer(TermSpans,Weight,Similarity,byte[]).mjava","sourceNew":"      public PayloadTermSpanScorer(TermSpans spans, Weight weight,\n          Similarity similarity, Similarity.SloppyDocScorer docScorer) throws IOException {\n        super(spans, weight, similarity, docScorer);\n        termSpans = spans;\n      }\n\n","sourceOld":"      public PayloadTermSpanScorer(TermSpans spans, Weight weight,\n          Similarity similarity, byte[] norms) throws IOException {\n        super(spans, weight, similarity, norms);\n        termSpans = spans;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1291e4568eb7d9463d751627596ef14baf4c1603":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","0f3cee3d20b0c786e6fca20539454262e29edcab"],"0f3cee3d20b0c786e6fca20539454262e29edcab":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","0f3cee3d20b0c786e6fca20539454262e29edcab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f3cee3d20b0c786e6fca20539454262e29edcab"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1291e4568eb7d9463d751627596ef14baf4c1603":[],"0f3cee3d20b0c786e6fca20539454262e29edcab":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["1291e4568eb7d9463d751627596ef14baf4c1603","0f3cee3d20b0c786e6fca20539454262e29edcab","f0b9507caf22f292ac0e5e59f62db4275adf4511"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}