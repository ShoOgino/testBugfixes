{"path":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#_persistToFile(Path,String,ByteBuffer,ByteBuffer).mjava","commits":[{"id":"d218decf811b7a0a4d86218c54c79c74a962374b","date":1578632144,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#_persistToFile(Path,String,ByteBuffer,ByteBuffer).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Internal API\n   */\n  public static void _persistToFile(Path solrHome, String path, ByteBuffer data, ByteBuffer meta) throws IOException {\n    Path realpath = _getRealPath(path, solrHome);\n    File file = realpath.toFile();\n    File parent = file.getParentFile();\n    if (!parent.exists()) {\n      parent.mkdirs();\n    }\n    Map m = (Map) Utils.fromJSON(meta.array(), meta.arrayOffset(), meta.limit());\n    if (m == null || m.isEmpty()) {\n      throw new SolrException(SERVER_ERROR, \"invalid metadata , discarding : \" + path);\n    }\n\n\n    File metdataFile = _getRealPath(_getMetapath(path), solrHome).toFile();\n\n    try (FileOutputStream fos = new FileOutputStream(metdataFile)) {\n      fos.write(meta.array(), 0, meta.limit());\n    }\n    IOUtils.fsync(metdataFile.toPath(), false);\n\n    try (FileOutputStream fos = new FileOutputStream(file)) {\n      fos.write(data.array(), 0, data.limit());\n    }\n    IOUtils.fsync(file.toPath(), false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8f0a7504661c8e51be5c63e87f9d79a36d9116c","date":1578657638,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#_persistToFile(Path,String,ByteBuffer,ByteBuffer).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Internal API\n   */\n  public static void _persistToFile(Path solrHome, String path, ByteBuffer data, ByteBuffer meta) throws IOException {\n    Path realpath = _getRealPath(path, solrHome);\n    File file = realpath.toFile();\n    File parent = file.getParentFile();\n    if (!parent.exists()) {\n      parent.mkdirs();\n    }\n    Map m = (Map) Utils.fromJSON(meta.array(), meta.arrayOffset(), meta.limit());\n    if (m == null || m.isEmpty()) {\n      throw new SolrException(SERVER_ERROR, \"invalid metadata , discarding : \" + path);\n    }\n\n\n    File metdataFile = _getRealPath(_getMetapath(path), solrHome).toFile();\n\n    try (FileOutputStream fos = new FileOutputStream(metdataFile)) {\n      fos.write(meta.array(), 0, meta.limit());\n    }\n    IOUtils.fsync(metdataFile.toPath(), false);\n\n    try (FileOutputStream fos = new FileOutputStream(file)) {\n      fos.write(data.array(), 0, data.limit());\n    }\n    IOUtils.fsync(file.toPath(), false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd25fa3647fa73152703b8dccb4fb5f43633de20","date":1592060458,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#_persistToFile(Path,String,ByteBuffer,ByteBuffer).mjava","pathOld":"solr/core/src/java/org/apache/solr/filestore/DistribPackageStore#_persistToFile(Path,String,ByteBuffer,ByteBuffer).mjava","sourceNew":"  /**\n   * Internal API\n   */\n  public static void _persistToFile(Path solrHome, String path, ByteBuffer data, ByteBuffer meta) throws IOException {\n    Path realpath = _getRealPath(path, solrHome);\n    File file = realpath.toFile();\n    File parent = file.getParentFile();\n    if (!parent.exists()) {\n      parent.mkdirs();\n    }\n    @SuppressWarnings({\"rawtypes\"})\n    Map m = (Map) Utils.fromJSON(meta.array(), meta.arrayOffset(), meta.limit());\n    if (m == null || m.isEmpty()) {\n      throw new SolrException(SERVER_ERROR, \"invalid metadata , discarding : \" + path);\n    }\n\n\n    File metdataFile = _getRealPath(_getMetapath(path), solrHome).toFile();\n\n    try (FileOutputStream fos = new FileOutputStream(metdataFile)) {\n      fos.write(meta.array(), 0, meta.limit());\n    }\n    IOUtils.fsync(metdataFile.toPath(), false);\n\n    try (FileOutputStream fos = new FileOutputStream(file)) {\n      fos.write(data.array(), 0, data.limit());\n    }\n    IOUtils.fsync(file.toPath(), false);\n  }\n\n","sourceOld":"  /**\n   * Internal API\n   */\n  public static void _persistToFile(Path solrHome, String path, ByteBuffer data, ByteBuffer meta) throws IOException {\n    Path realpath = _getRealPath(path, solrHome);\n    File file = realpath.toFile();\n    File parent = file.getParentFile();\n    if (!parent.exists()) {\n      parent.mkdirs();\n    }\n    Map m = (Map) Utils.fromJSON(meta.array(), meta.arrayOffset(), meta.limit());\n    if (m == null || m.isEmpty()) {\n      throw new SolrException(SERVER_ERROR, \"invalid metadata , discarding : \" + path);\n    }\n\n\n    File metdataFile = _getRealPath(_getMetapath(path), solrHome).toFile();\n\n    try (FileOutputStream fos = new FileOutputStream(metdataFile)) {\n      fos.write(meta.array(), 0, meta.limit());\n    }\n    IOUtils.fsync(metdataFile.toPath(), false);\n\n    try (FileOutputStream fos = new FileOutputStream(file)) {\n      fos.write(data.array(), 0, data.limit());\n    }\n    IOUtils.fsync(file.toPath(), false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b8f0a7504661c8e51be5c63e87f9d79a36d9116c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d218decf811b7a0a4d86218c54c79c74a962374b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d218decf811b7a0a4d86218c54c79c74a962374b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bd25fa3647fa73152703b8dccb4fb5f43633de20":["d218decf811b7a0a4d86218c54c79c74a962374b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bd25fa3647fa73152703b8dccb4fb5f43633de20"]},"commit2Childs":{"b8f0a7504661c8e51be5c63e87f9d79a36d9116c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b8f0a7504661c8e51be5c63e87f9d79a36d9116c","d218decf811b7a0a4d86218c54c79c74a962374b"],"d218decf811b7a0a4d86218c54c79c74a962374b":["b8f0a7504661c8e51be5c63e87f9d79a36d9116c","bd25fa3647fa73152703b8dccb4fb5f43633de20"],"bd25fa3647fa73152703b8dccb4fb5f43633de20":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b8f0a7504661c8e51be5c63e87f9d79a36d9116c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}