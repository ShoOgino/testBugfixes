{"path":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testInvalidVersions2().mjava","commits":[{"id":"9299079153fd7895bf3cf6835cf7019af2ba89b3","date":1417813477,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testInvalidVersions2().mjava","pathOld":"/dev/null","sourceNew":"  public void testInvalidVersions2() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    // Long.MAX_VALUE:\n    doc.add(new StringAndPayloadField(\"id\", \"id\", new BytesRef(new byte[] {(byte)0x7f, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff})));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    try {\n      w.addDocument(doc);\n      fail(\"should have hit exc\");\n    } catch (AlreadyClosedException ace) {\n      // expected\n    }\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testInvalidVersions2().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testInvalidVersions2().mjava","sourceNew":"  public void testInvalidVersions2() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    // Long.MAX_VALUE:\n    doc.add(new StringAndPayloadField(\"id\", \"id\", new BytesRef(new byte[] {(byte)0x7f, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff})));\n    expectThrows(IllegalArgumentException.class, () -> {\n      w.addDocument(doc);\n      w.commit();\n    });\n    expectThrows(AlreadyClosedException.class, () -> {\n      w.addDocument(doc);\n    });\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testInvalidVersions2() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    // Long.MAX_VALUE:\n    doc.add(new StringAndPayloadField(\"id\", \"id\", new BytesRef(new byte[] {(byte)0x7f, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff})));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n    try {\n      w.addDocument(doc);\n      fail(\"should have hit exc\");\n    } catch (AlreadyClosedException ace) {\n      // expected\n    }\n    dir.close();\n  }\n\n","bugFix":["9299079153fd7895bf3cf6835cf7019af2ba89b3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ee0394b8176abd7c90a4be8c05465be1879db79","date":1522842314,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testInvalidVersions2().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testInvalidVersions2().mjava","sourceNew":"  public void testInvalidVersions2() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc, false);\n    Document doc = new Document();\n    // Long.MAX_VALUE:\n    doc.add(new StringAndPayloadField(\"id\", \"id\", new BytesRef(new byte[] {(byte)0x7f, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff})));\n    expectThrows(IllegalArgumentException.class, () -> {\n      w.addDocument(doc);\n      w.commit();\n    });\n    expectThrows(AlreadyClosedException.class, () -> {\n      w.addDocument(doc);\n    });\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testInvalidVersions2() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    // Long.MAX_VALUE:\n    doc.add(new StringAndPayloadField(\"id\", \"id\", new BytesRef(new byte[] {(byte)0x7f, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff})));\n    expectThrows(IllegalArgumentException.class, () -> {\n      w.addDocument(doc);\n      w.commit();\n    });\n    expectThrows(AlreadyClosedException.class, () -> {\n      w.addDocument(doc);\n    });\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d59cbb7ede458d7746f9afba3f2b397956091d2d","date":1552684700,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testInvalidVersions2().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testInvalidVersions2().mjava","sourceNew":"  public void testInvalidVersions2() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc, false);\n    Document doc = new Document();\n    // Long.MAX_VALUE:\n    doc.add(new StringAndPayloadField(\"id\", \"id\", new BytesRef(new byte[] {(byte)0x7f, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff})));\n    expectThrows(IllegalArgumentException.class, () -> {\n      w.addDocument(doc);\n      w.commit(false);\n    });\n    expectThrows(AlreadyClosedException.class, () -> {\n      w.addDocument(doc);\n    });\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testInvalidVersions2() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc, false);\n    Document doc = new Document();\n    // Long.MAX_VALUE:\n    doc.add(new StringAndPayloadField(\"id\", \"id\", new BytesRef(new byte[] {(byte)0x7f, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff})));\n    expectThrows(IllegalArgumentException.class, () -> {\n      w.addDocument(doc);\n      w.commit();\n    });\n    expectThrows(AlreadyClosedException.class, () -> {\n      w.addDocument(doc);\n    });\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5ee0394b8176abd7c90a4be8c05465be1879db79":["05fe562aa248790944d43cdd478f512572835ba0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["9299079153fd7895bf3cf6835cf7019af2ba89b3"],"9299079153fd7895bf3cf6835cf7019af2ba89b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d59cbb7ede458d7746f9afba3f2b397956091d2d"],"d59cbb7ede458d7746f9afba3f2b397956091d2d":["5ee0394b8176abd7c90a4be8c05465be1879db79"]},"commit2Childs":{"5ee0394b8176abd7c90a4be8c05465be1879db79":["d59cbb7ede458d7746f9afba3f2b397956091d2d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9299079153fd7895bf3cf6835cf7019af2ba89b3"],"05fe562aa248790944d43cdd478f512572835ba0":["5ee0394b8176abd7c90a4be8c05465be1879db79"],"9299079153fd7895bf3cf6835cf7019af2ba89b3":["05fe562aa248790944d43cdd478f512572835ba0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d59cbb7ede458d7746f9afba3f2b397956091d2d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}