{"path":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#randomTimeZone(Random).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#randomTimeZone(Random).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#randomTimeZone(Random).mjava","sourceNew":"  /** return a random TimeZone from the available timezones on the system */\n  public static TimeZone randomTimeZone(Random random) {\n    String tzIds[] = TimeZone.getAvailableIDs();\n    return TimeZone.getTimeZone(tzIds[random.nextInt(tzIds.length)]);\n  }\n\n","sourceOld":"  /** return a random TimeZone from the available timezones on the system */\n  public static TimeZone randomTimeZone(Random random) {\n    String tzIds[] = TimeZone.getAvailableIDs();\n    return TimeZone.getTimeZone(tzIds[random.nextInt(tzIds.length)]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81118fd68df3f6e9f79307e6e294d4842748388e","date":1335306627,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#randomTimeZone(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#randomTimeZone(Random).mjava","sourceNew":"  /** \n   * Return a random TimeZone from the available timezones on the system\n   * @see \"https://issues.apache.org/jira/browse/LUCENE-4020\" \n   */\n  public static TimeZone randomTimeZone(Random random) {\n    String tzIds[] = TimeZone.getAvailableIDs();\n    return TimeZone.getTimeZone(tzIds[random.nextInt(tzIds.length)]);\n  }\n\n","sourceOld":"  /** return a random TimeZone from the available timezones on the system */\n  public static TimeZone randomTimeZone(Random random) {\n    String tzIds[] = TimeZone.getAvailableIDs();\n    return TimeZone.getTimeZone(tzIds[random.nextInt(tzIds.length)]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1eb427f2c6beed80d1724555fc1db003ccf3030","date":1417137397,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#randomTimeZone(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#randomTimeZone(Random).mjava","sourceNew":"  /** \n   * Return a random TimeZone from the available timezones on the system\n   * @see <a href=\"https://issues.apache.org/jira/browse/LUCENE-4020\">LUCENE-4020</a>\n   */\n  public static TimeZone randomTimeZone(Random random) {\n    String tzIds[] = TimeZone.getAvailableIDs();\n    return TimeZone.getTimeZone(tzIds[random.nextInt(tzIds.length)]);\n  }\n\n","sourceOld":"  /** \n   * Return a random TimeZone from the available timezones on the system\n   * @see \"https://issues.apache.org/jira/browse/LUCENE-4020\" \n   */\n  public static TimeZone randomTimeZone(Random random) {\n    String tzIds[] = TimeZone.getAvailableIDs();\n    return TimeZone.getTimeZone(tzIds[random.nextInt(tzIds.length)]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#randomTimeZone(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#randomTimeZone(Random).mjava","sourceNew":"  /** \n   * Return a random TimeZone from the available timezones on the system\n   * @see \"https://issues.apache.org/jira/browse/LUCENE-4020\" \n   */\n  public static TimeZone randomTimeZone(Random random) {\n    String tzIds[] = TimeZone.getAvailableIDs();\n    return TimeZone.getTimeZone(tzIds[random.nextInt(tzIds.length)]);\n  }\n\n","sourceOld":"  /** \n   * Return a random TimeZone from the available timezones on the system\n   * @see <a href=\"https://issues.apache.org/jira/browse/LUCENE-4020\">LUCENE-4020</a>\n   */\n  public static TimeZone randomTimeZone(Random random) {\n    String tzIds[] = TimeZone.getAvailableIDs();\n    return TimeZone.getTimeZone(tzIds[random.nextInt(tzIds.length)]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e751f0825193ec36baed7631f081f4eb102facf","date":1423236294,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#randomTimeZone(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#randomTimeZone(Random).mjava","sourceNew":"  /** \n   * Return a random TimeZone from the available timezones on the system\n   * see \"https://issues.apache.org/jira/browse/LUCENE-4020\"\n   */\n  public static TimeZone randomTimeZone(Random random) {\n    String tzIds[] = TimeZone.getAvailableIDs();\n    return TimeZone.getTimeZone(tzIds[random.nextInt(tzIds.length)]);\n  }\n\n","sourceOld":"  /** \n   * Return a random TimeZone from the available timezones on the system\n   * @see \"https://issues.apache.org/jira/browse/LUCENE-4020\" \n   */\n  public static TimeZone randomTimeZone(Random random) {\n    String tzIds[] = TimeZone.getAvailableIDs();\n    return TimeZone.getTimeZone(tzIds[random.nextInt(tzIds.length)]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe356cb55f5248f03cdb026492f9674eacc5c6cf","date":1425652893,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#randomTimeZone(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#randomTimeZone(Random).mjava","sourceNew":"  /** \n   * Return a random TimeZone from the available timezones on the system\n   * @see <a href=\"http://issues.apache.org/jira/browse/LUCENE-4020\">LUCENE-4020</a>\n   */\n  public static TimeZone randomTimeZone(Random random) {\n    String tzIds[] = TimeZone.getAvailableIDs();\n    return TimeZone.getTimeZone(tzIds[random.nextInt(tzIds.length)]);\n  }\n\n","sourceOld":"  /** \n   * Return a random TimeZone from the available timezones on the system\n   * see \"https://issues.apache.org/jira/browse/LUCENE-4020\"\n   */\n  public static TimeZone randomTimeZone(Random random) {\n    String tzIds[] = TimeZone.getAvailableIDs();\n    return TimeZone.getTimeZone(tzIds[random.nextInt(tzIds.length)]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#randomTimeZone(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#randomTimeZone(Random).mjava","sourceNew":"  /** \n   * Return a random TimeZone from the available timezones on the system\n   * @see <a href=\"http://issues.apache.org/jira/browse/LUCENE-4020\">LUCENE-4020</a>\n   */\n  public static TimeZone randomTimeZone(Random random) {\n    String tzIds[] = TimeZone.getAvailableIDs();\n    return TimeZone.getTimeZone(tzIds[random.nextInt(tzIds.length)]);\n  }\n\n","sourceOld":"  /** \n   * Return a random TimeZone from the available timezones on the system\n   * see \"https://issues.apache.org/jira/browse/LUCENE-4020\"\n   */\n  public static TimeZone randomTimeZone(Random random) {\n    String tzIds[] = TimeZone.getAvailableIDs();\n    return TimeZone.getTimeZone(tzIds[random.nextInt(tzIds.length)]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"81118fd68df3f6e9f79307e6e294d4842748388e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b1eb427f2c6beed80d1724555fc1db003ccf3030":["81118fd68df3f6e9f79307e6e294d4842748388e"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["0e751f0825193ec36baed7631f081f4eb102facf","fe356cb55f5248f03cdb026492f9674eacc5c6cf"],"0e751f0825193ec36baed7631f081f4eb102facf":["51f5280f31484820499077f41fcdfe92d527d9dc"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe356cb55f5248f03cdb026492f9674eacc5c6cf":["0e751f0825193ec36baed7631f081f4eb102facf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"51f5280f31484820499077f41fcdfe92d527d9dc":["b1eb427f2c6beed80d1724555fc1db003ccf3030"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fe356cb55f5248f03cdb026492f9674eacc5c6cf"]},"commit2Childs":{"81118fd68df3f6e9f79307e6e294d4842748388e":["b1eb427f2c6beed80d1724555fc1db003ccf3030"],"b1eb427f2c6beed80d1724555fc1db003ccf3030":["51f5280f31484820499077f41fcdfe92d527d9dc"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"0e751f0825193ec36baed7631f081f4eb102facf":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","fe356cb55f5248f03cdb026492f9674eacc5c6cf"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["81118fd68df3f6e9f79307e6e294d4842748388e"],"fe356cb55f5248f03cdb026492f9674eacc5c6cf":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"51f5280f31484820499077f41fcdfe92d527d9dc":["0e751f0825193ec36baed7631f081f4eb102facf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}