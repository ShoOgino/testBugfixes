{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(Map[String,Object]).mjava","commits":[{"id":"16a22f8085bb46850c91784e94f7714345011404","date":1533741843,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  ReplicaInfo(Map<String, Object> map) {\n    this.name = map.keySet().iterator().next();\n    Map details = (Map) map.get(name);\n    details = Utils.getDeepCopy(details, 4);\n    this.collection = (String) details.remove(\"collection\");\n    this.shard = (String) details.remove(\"shard\");\n    this.core = (String) details.remove(\"core\");\n    this.node = (String) details.remove(\"node_name\");\n    this.isLeader = Boolean.parseBoolean((String) details.getOrDefault(\"leader\", \"false\"));\n    details.remove(\"leader\");\n    type = Replica.Type.valueOf((String) details.getOrDefault(\"type\", \"NRT\"));\n    details.remove(\"type\");\n    this.variables.putAll(details);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"edf5b262a72d10530eb2f01dc8f19060355b213e","date":1557765866,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(Map[String,Object]).mjava","sourceNew":"  public ReplicaInfo(Map<String, Object> map) {\n    this.name = map.keySet().iterator().next();\n    Map details = (Map) map.get(name);\n    details = Utils.getDeepCopy(details, 4);\n    this.collection = (String) details.remove(\"collection\");\n    this.shard = (String) details.remove(\"shard\");\n    this.core = (String) details.remove(\"core\");\n    this.node = (String) details.remove(\"node_name\");\n    this.isLeader = Boolean.parseBoolean((String) details.getOrDefault(\"leader\", \"false\"));\n    details.remove(\"leader\");\n    type = Replica.Type.valueOf((String) details.getOrDefault(\"type\", \"NRT\"));\n    details.remove(\"type\");\n    this.variables.putAll(details);\n  }\n\n","sourceOld":"  ReplicaInfo(Map<String, Object> map) {\n    this.name = map.keySet().iterator().next();\n    Map details = (Map) map.get(name);\n    details = Utils.getDeepCopy(details, 4);\n    this.collection = (String) details.remove(\"collection\");\n    this.shard = (String) details.remove(\"shard\");\n    this.core = (String) details.remove(\"core\");\n    this.node = (String) details.remove(\"node_name\");\n    this.isLeader = Boolean.parseBoolean((String) details.getOrDefault(\"leader\", \"false\"));\n    details.remove(\"leader\");\n    type = Replica.Type.valueOf((String) details.getOrDefault(\"type\", \"NRT\"));\n    details.remove(\"type\");\n    this.variables.putAll(details);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ea07d22cef2406e950de111f8aa7bc2edb91d56","date":1581094599,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(Map[String,Object]).mjava","sourceNew":"  public ReplicaInfo(Map<String, Object> map) {\n    this.name = map.keySet().iterator().next();\n    Map details = (Map) map.get(name);\n    details = Utils.getDeepCopy(details, 4);\n    this.collection = (String) details.remove(\"collection\");\n    this.shard = (String) details.remove(\"shard\");\n    this.core = (String) details.remove(\"core\");\n    this.node = (String) details.remove(\"node_name\");\n    this.isLeader = Boolean.parseBoolean((String) details.getOrDefault(\"leader\", \"false\"));\n    details.remove(\"leader\");\n    type = Replica.Type.valueOf((String) details.getOrDefault(\"type\", \"NRT\"));\n    details.remove(\"type\");\n    this.variables.putAll(details);\n    validate();\n  }\n\n","sourceOld":"  public ReplicaInfo(Map<String, Object> map) {\n    this.name = map.keySet().iterator().next();\n    Map details = (Map) map.get(name);\n    details = Utils.getDeepCopy(details, 4);\n    this.collection = (String) details.remove(\"collection\");\n    this.shard = (String) details.remove(\"shard\");\n    this.core = (String) details.remove(\"core\");\n    this.node = (String) details.remove(\"node_name\");\n    this.isLeader = Boolean.parseBoolean((String) details.getOrDefault(\"leader\", \"false\"));\n    details.remove(\"leader\");\n    type = Replica.Type.valueOf((String) details.getOrDefault(\"type\", \"NRT\"));\n    details.remove(\"type\");\n    this.variables.putAll(details);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"527adea7ce767368d7317339023e18e39702132e","date":1592163810,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(Map[String,Object]).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  public ReplicaInfo(Map<String, Object> map) {\n    this.name = map.keySet().iterator().next();\n    @SuppressWarnings({\"rawtypes\"})Map details = (Map) map.get(name);\n    details = Utils.getDeepCopy(details, 4);\n    this.collection = (String) details.remove(\"collection\");\n    this.shard = (String) details.remove(\"shard\");\n    this.core = (String) details.remove(\"core\");\n    this.node = (String) details.remove(\"node_name\");\n    this.isLeader = Boolean.parseBoolean((String) details.getOrDefault(\"leader\", \"false\"));\n    details.remove(\"leader\");\n    type = Replica.Type.valueOf((String) details.getOrDefault(\"type\", \"NRT\"));\n    details.remove(\"type\");\n    this.variables.putAll(details);\n    validate();\n  }\n\n","sourceOld":"  public ReplicaInfo(Map<String, Object> map) {\n    this.name = map.keySet().iterator().next();\n    Map details = (Map) map.get(name);\n    details = Utils.getDeepCopy(details, 4);\n    this.collection = (String) details.remove(\"collection\");\n    this.shard = (String) details.remove(\"shard\");\n    this.core = (String) details.remove(\"core\");\n    this.node = (String) details.remove(\"node_name\");\n    this.isLeader = Boolean.parseBoolean((String) details.getOrDefault(\"leader\", \"false\"));\n    details.remove(\"leader\");\n    type = Replica.Type.valueOf((String) details.getOrDefault(\"type\", \"NRT\"));\n    details.remove(\"type\");\n    this.variables.putAll(details);\n    validate();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd","date":1594731683,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(Map[String,Object]).mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings({\"unchecked\"})\n  public ReplicaInfo(Map<String, Object> map) {\n    this.name = map.keySet().iterator().next();\n    @SuppressWarnings({\"rawtypes\"})Map details = (Map) map.get(name);\n    details = Utils.getDeepCopy(details, 4);\n    this.collection = (String) details.remove(\"collection\");\n    this.shard = (String) details.remove(\"shard\");\n    this.core = (String) details.remove(\"core\");\n    this.node = (String) details.remove(\"node_name\");\n    this.isLeader = Boolean.parseBoolean((String) details.getOrDefault(\"leader\", \"false\"));\n    details.remove(\"leader\");\n    type = Replica.Type.valueOf((String) details.getOrDefault(\"type\", \"NRT\"));\n    details.remove(\"type\");\n    this.variables.putAll(details);\n    validate();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd":["527adea7ce767368d7317339023e18e39702132e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"527adea7ce767368d7317339023e18e39702132e":["3ea07d22cef2406e950de111f8aa7bc2edb91d56"],"edf5b262a72d10530eb2f01dc8f19060355b213e":["16a22f8085bb46850c91784e94f7714345011404"],"3ea07d22cef2406e950de111f8aa7bc2edb91d56":["edf5b262a72d10530eb2f01dc8f19060355b213e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd"],"16a22f8085bb46850c91784e94f7714345011404":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["16a22f8085bb46850c91784e94f7714345011404"],"527adea7ce767368d7317339023e18e39702132e":["7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd"],"edf5b262a72d10530eb2f01dc8f19060355b213e":["3ea07d22cef2406e950de111f8aa7bc2edb91d56"],"3ea07d22cef2406e950de111f8aa7bc2edb91d56":["527adea7ce767368d7317339023e18e39702132e"],"16a22f8085bb46850c91784e94f7714345011404":["edf5b262a72d10530eb2f01dc8f19060355b213e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}