{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig.TriggerConfig#TriggerConfig(String,Map[String,Object]).mjava","commits":[{"id":"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25","date":1499961129,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig.TriggerConfig#TriggerConfig(String,Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"    public TriggerConfig(String name, Map<String, Object> properties) {\n      this.name = name;\n      if (properties != null) {\n        this.properties = Collections.unmodifiableMap(new HashMap<>(properties));\n      } else {\n        this.properties = Collections.emptyMap();\n      }\n      String event = (String) this.properties.get(AutoScalingParams.EVENT);\n      if (event != null) {\n        TriggerEventType type = null;\n        try {\n          type = TriggerEventType.valueOf(event.toUpperCase(Locale.ROOT));\n        } catch (Exception e) {\n        }\n        if (type == null) {\n          this.event = TriggerEventType.INVALID;\n        } else {\n          this.event = type;\n        }\n      } else {\n        this.event = TriggerEventType.INVALID;\n      }\n      enabled = Boolean.parseBoolean(String.valueOf(this.properties.getOrDefault(\"enabled\", \"true\")));\n\n      List<Map<String, Object>> newActions = (List<Map<String, Object>>)this.properties.get(\"actions\");\n      if (newActions != null) {\n        this.actions = newActions.stream().map(ActionConfig::new).collect(collectingAndThen(toList(), Collections::unmodifiableList));\n      } else {\n        this.actions = Collections.emptyList();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["25d862725cffd5d4d62fd002b5dc320f92c53365"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig.TriggerConfig#TriggerConfig(String,Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"    public TriggerConfig(String name, Map<String, Object> properties) {\n      this.name = name;\n      if (properties != null) {\n        this.properties = Collections.unmodifiableMap(new HashMap<>(properties));\n      } else {\n        this.properties = Collections.emptyMap();\n      }\n      String event = (String) this.properties.get(AutoScalingParams.EVENT);\n      if (event != null) {\n        TriggerEventType type = null;\n        try {\n          type = TriggerEventType.valueOf(event.toUpperCase(Locale.ROOT));\n        } catch (Exception e) {\n        }\n        if (type == null) {\n          this.event = TriggerEventType.INVALID;\n        } else {\n          this.event = type;\n        }\n      } else {\n        this.event = TriggerEventType.INVALID;\n      }\n      enabled = Boolean.parseBoolean(String.valueOf(this.properties.getOrDefault(\"enabled\", \"true\")));\n\n      List<Map<String, Object>> newActions = (List<Map<String, Object>>)this.properties.get(\"actions\");\n      if (newActions != null) {\n        this.actions = newActions.stream().map(ActionConfig::new).collect(collectingAndThen(toList(), Collections::unmodifiableList));\n      } else {\n        this.actions = Collections.emptyList();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig.TriggerConfig#TriggerConfig(String,Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"    public TriggerConfig(String name, Map<String, Object> properties) {\n      this.name = name;\n      if (properties != null) {\n        this.properties = Collections.unmodifiableMap(new HashMap<>(properties));\n      } else {\n        this.properties = Collections.emptyMap();\n      }\n      String event = (String) this.properties.get(AutoScalingParams.EVENT);\n      if (event != null) {\n        TriggerEventType type = null;\n        try {\n          type = TriggerEventType.valueOf(event.toUpperCase(Locale.ROOT));\n        } catch (Exception e) {\n        }\n        if (type == null) {\n          this.event = TriggerEventType.INVALID;\n        } else {\n          this.event = type;\n        }\n      } else {\n        this.event = TriggerEventType.INVALID;\n      }\n      enabled = Boolean.parseBoolean(String.valueOf(this.properties.getOrDefault(\"enabled\", \"true\")));\n\n      List<Map<String, Object>> newActions = (List<Map<String, Object>>)this.properties.get(\"actions\");\n      if (newActions != null) {\n        this.actions = newActions.stream().map(ActionConfig::new).collect(collectingAndThen(toList(), Collections::unmodifiableList));\n      } else {\n        this.actions = Collections.emptyList();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"25d862725cffd5d4d62fd002b5dc320f92c53365","date":1534448650,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig.TriggerConfig#TriggerConfig(String,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig.TriggerConfig#TriggerConfig(String,Map[String,Object]).mjava","sourceNew":"    public TriggerConfig(String name, Map<String, Object> properties) {\n      this.name = name;\n      if (properties != null) {\n        this.properties = Collections.unmodifiableMap(new LinkedHashMap<>(properties));\n      } else {\n        this.properties = Collections.emptyMap();\n      }\n      String event = (String) this.properties.get(AutoScalingParams.EVENT);\n      if (event != null) {\n        TriggerEventType type = null;\n        try {\n          type = TriggerEventType.valueOf(event.toUpperCase(Locale.ROOT));\n        } catch (Exception e) {\n        }\n        if (type == null) {\n          this.event = TriggerEventType.INVALID;\n        } else {\n          this.event = type;\n        }\n      } else {\n        this.event = TriggerEventType.INVALID;\n      }\n      enabled = Boolean.parseBoolean(String.valueOf(this.properties.getOrDefault(\"enabled\", \"true\")));\n\n      List<Map<String, Object>> newActions = (List<Map<String, Object>>)this.properties.get(\"actions\");\n      if (newActions != null) {\n        this.actions = newActions.stream().map(ActionConfig::new).collect(collectingAndThen(toList(), Collections::unmodifiableList));\n      } else {\n        this.actions = Collections.emptyList();\n      }\n    }\n\n","sourceOld":"    public TriggerConfig(String name, Map<String, Object> properties) {\n      this.name = name;\n      if (properties != null) {\n        this.properties = Collections.unmodifiableMap(new HashMap<>(properties));\n      } else {\n        this.properties = Collections.emptyMap();\n      }\n      String event = (String) this.properties.get(AutoScalingParams.EVENT);\n      if (event != null) {\n        TriggerEventType type = null;\n        try {\n          type = TriggerEventType.valueOf(event.toUpperCase(Locale.ROOT));\n        } catch (Exception e) {\n        }\n        if (type == null) {\n          this.event = TriggerEventType.INVALID;\n        } else {\n          this.event = type;\n        }\n      } else {\n        this.event = TriggerEventType.INVALID;\n      }\n      enabled = Boolean.parseBoolean(String.valueOf(this.properties.getOrDefault(\"enabled\", \"true\")));\n\n      List<Map<String, Object>> newActions = (List<Map<String, Object>>)this.properties.get(\"actions\");\n      if (newActions != null) {\n        this.actions = newActions.stream().map(ActionConfig::new).collect(collectingAndThen(toList(), Collections::unmodifiableList));\n      } else {\n        this.actions = Collections.emptyList();\n      }\n    }\n\n","bugFix":["219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"527adea7ce767368d7317339023e18e39702132e","date":1592163810,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig.TriggerConfig#TriggerConfig(String,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig.TriggerConfig#TriggerConfig(String,Map[String,Object]).mjava","sourceNew":"    public TriggerConfig(String name, Map<String, Object> properties) {\n      this.name = name;\n      if (properties != null) {\n        this.properties = Collections.unmodifiableMap(new LinkedHashMap<>(properties));\n      } else {\n        this.properties = Collections.emptyMap();\n      }\n      String event = (String) this.properties.get(AutoScalingParams.EVENT);\n      if (event != null) {\n        TriggerEventType type = null;\n        try {\n          type = TriggerEventType.valueOf(event.toUpperCase(Locale.ROOT));\n        } catch (Exception e) {\n        }\n        if (type == null) {\n          this.event = TriggerEventType.INVALID;\n        } else {\n          this.event = type;\n        }\n      } else {\n        this.event = TriggerEventType.INVALID;\n      }\n      enabled = Boolean.parseBoolean(String.valueOf(this.properties.getOrDefault(\"enabled\", \"true\")));\n\n      @SuppressWarnings({\"unchecked\"})\n      List<Map<String, Object>> newActions = (List<Map<String, Object>>)this.properties.get(\"actions\");\n      if (newActions != null) {\n        this.actions = newActions.stream().map(ActionConfig::new).collect(collectingAndThen(toList(), Collections::unmodifiableList));\n      } else {\n        this.actions = Collections.emptyList();\n      }\n    }\n\n","sourceOld":"    public TriggerConfig(String name, Map<String, Object> properties) {\n      this.name = name;\n      if (properties != null) {\n        this.properties = Collections.unmodifiableMap(new LinkedHashMap<>(properties));\n      } else {\n        this.properties = Collections.emptyMap();\n      }\n      String event = (String) this.properties.get(AutoScalingParams.EVENT);\n      if (event != null) {\n        TriggerEventType type = null;\n        try {\n          type = TriggerEventType.valueOf(event.toUpperCase(Locale.ROOT));\n        } catch (Exception e) {\n        }\n        if (type == null) {\n          this.event = TriggerEventType.INVALID;\n        } else {\n          this.event = type;\n        }\n      } else {\n        this.event = TriggerEventType.INVALID;\n      }\n      enabled = Boolean.parseBoolean(String.valueOf(this.properties.getOrDefault(\"enabled\", \"true\")));\n\n      List<Map<String, Object>> newActions = (List<Map<String, Object>>)this.properties.get(\"actions\");\n      if (newActions != null) {\n        this.actions = newActions.stream().map(ActionConfig::new).collect(collectingAndThen(toList(), Collections::unmodifiableList));\n      } else {\n        this.actions = Collections.emptyList();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig.TriggerConfig#TriggerConfig(String,Map[String,Object]).mjava","sourceNew":null,"sourceOld":"    public TriggerConfig(String name, Map<String, Object> properties) {\n      this.name = name;\n      if (properties != null) {\n        this.properties = Collections.unmodifiableMap(new LinkedHashMap<>(properties));\n      } else {\n        this.properties = Collections.emptyMap();\n      }\n      String event = (String) this.properties.get(AutoScalingParams.EVENT);\n      if (event != null) {\n        TriggerEventType type = null;\n        try {\n          type = TriggerEventType.valueOf(event.toUpperCase(Locale.ROOT));\n        } catch (Exception e) {\n        }\n        if (type == null) {\n          this.event = TriggerEventType.INVALID;\n        } else {\n          this.event = type;\n        }\n      } else {\n        this.event = TriggerEventType.INVALID;\n      }\n      enabled = Boolean.parseBoolean(String.valueOf(this.properties.getOrDefault(\"enabled\", \"true\")));\n\n      @SuppressWarnings({\"unchecked\"})\n      List<Map<String, Object>> newActions = (List<Map<String, Object>>)this.properties.get(\"actions\");\n      if (newActions != null) {\n        this.actions = newActions.stream().map(ActionConfig::new).collect(collectingAndThen(toList(), Collections::unmodifiableList));\n      } else {\n        this.actions = Collections.emptyList();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25"],"3f504512a03d978990cbff30db0522b354e846db":["527adea7ce767368d7317339023e18e39702132e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"527adea7ce767368d7317339023e18e39702132e":["25d862725cffd5d4d62fd002b5dc320f92c53365"],"560c18d71dad43d675158783c3840f8c80d6d39c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"25d862725cffd5d4d62fd002b5dc320f92c53365":["560c18d71dad43d675158783c3840f8c80d6d39c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c304e97e7c1d472bc70e801b35ee78583916c6cd","560c18d71dad43d675158783c3840f8c80d6d39c","219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25"],"527adea7ce767368d7317339023e18e39702132e":["3f504512a03d978990cbff30db0522b354e846db"],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"560c18d71dad43d675158783c3840f8c80d6d39c":["25d862725cffd5d4d62fd002b5dc320f92c53365"],"25d862725cffd5d4d62fd002b5dc320f92c53365":["527adea7ce767368d7317339023e18e39702132e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}