{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#markTaskAsRunning(QueueEvent,String,String,ZkNodeProps).mjava","commits":[{"id":"8ff2ea054f72177967223fb032d708ad8020e80a","date":1401922976,"type":1,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#markTaskAsRunning(QueueEvent,String,String,ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#markTaskAsRunning(QueueEvent,String,String).mjava","sourceNew":"  private void markTaskAsRunning(QueueEvent head, String collectionName,\n                                 String asyncId, ZkNodeProps message)\n      throws KeeperException, InterruptedException {\n    synchronized (runningZKTasks) {\n      runningZKTasks.add(head.getId());\n    }\n\n    synchronized (runningTasks) {\n      runningTasks.add(head.getId());\n    }\n    if(!CLUSTERSTATUS.isEqual(message.getStr(Overseer.QUEUE_OPERATION)) && collectionName != null) {\n      synchronized (collectionWip) {\n        collectionWip.add(collectionName);\n      }\n    }\n\n    if(asyncId != null)\n      runningMap.put(asyncId, null);\n  }\n\n","sourceOld":"  private void markTaskAsRunning(QueueEvent head, String collectionName,String asyncId)\n      throws KeeperException, InterruptedException {\n    synchronized (runningZKTasks) {\n      runningZKTasks.add(head.getId());\n    }\n\n    synchronized (runningTasks) {\n      runningTasks.add(head.getId());\n    }\n    if(collectionName != null) {\n      synchronized (collectionWip) {\n        collectionWip.add(collectionName);\n      }\n    }\n\n    if(asyncId != null)\n      runningMap.put(asyncId, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c688f7052130cef7bd419c85e3c5be214f7b9e","date":1411018984,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#markTaskAsRunning(QueueEvent,String,String,ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#markTaskAsRunning(QueueEvent,String,String,ZkNodeProps).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void markTaskAsRunning(QueueEvent head, String collectionName,\n                                 String asyncId, ZkNodeProps message)\n      throws KeeperException, InterruptedException {\n    synchronized (runningZKTasks) {\n      runningZKTasks.add(head.getId());\n    }\n\n    synchronized (runningTasks) {\n      runningTasks.add(head.getId());\n    }\n    if(!CLUSTERSTATUS.isEqual(message.getStr(Overseer.QUEUE_OPERATION)) && collectionName != null) {\n      synchronized (collectionWip) {\n        collectionWip.add(collectionName);\n      }\n    }\n\n    if(asyncId != null)\n      runningMap.put(asyncId, null);\n  }\n\n","sourceOld":"  private void markTaskAsRunning(QueueEvent head, String collectionName,\n                                 String asyncId, ZkNodeProps message)\n      throws KeeperException, InterruptedException {\n    synchronized (runningZKTasks) {\n      runningZKTasks.add(head.getId());\n    }\n\n    synchronized (runningTasks) {\n      runningTasks.add(head.getId());\n    }\n    if(!CLUSTERSTATUS.isEqual(message.getStr(Overseer.QUEUE_OPERATION)) && collectionName != null) {\n      synchronized (collectionWip) {\n        collectionWip.add(collectionName);\n      }\n    }\n\n    if(asyncId != null)\n      runningMap.put(asyncId, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85f6ce3af19fc13abaaade6799a6e8c192e9b8e2","date":1433415299,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#markTaskAsRunning(QueueEvent,String,String,ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#markTaskAsRunning(QueueEvent,String,String,ZkNodeProps).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void markTaskAsRunning(QueueEvent head, String collectionName,\n                                 String asyncId, ZkNodeProps message)\n      throws KeeperException, InterruptedException {\n    synchronized (runningZKTasks) {\n      runningZKTasks.add(head.getId());\n    }\n\n    synchronized (runningTasks) {\n      runningTasks.add(head.getId());\n    }\n    //TODO deprecated remove this check .\n    if (!CLUSTERSTATUS.isEqual(message.getStr(Overseer.QUEUE_OPERATION)) && collectionName != null) {\n      synchronized (collectionWip) {\n        collectionWip.add(collectionName);\n      }\n    }\n\n    if(asyncId != null)\n      runningMap.put(asyncId, null);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void markTaskAsRunning(QueueEvent head, String collectionName,\n                                 String asyncId, ZkNodeProps message)\n      throws KeeperException, InterruptedException {\n    synchronized (runningZKTasks) {\n      runningZKTasks.add(head.getId());\n    }\n\n    synchronized (runningTasks) {\n      runningTasks.add(head.getId());\n    }\n    if(!CLUSTERSTATUS.isEqual(message.getStr(Overseer.QUEUE_OPERATION)) && collectionName != null) {\n      synchronized (collectionWip) {\n        collectionWip.add(collectionName);\n      }\n    }\n\n    if(asyncId != null)\n      runningMap.put(asyncId, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":6,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#markExclusiveTask(String,ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#markTaskAsRunning(QueueEvent,String,String,ZkNodeProps).mjava","sourceNew":"  @Override\n  public void markExclusiveTask(String collectionName, ZkNodeProps message) {\n    //TODO deprecated remove this check .\n    if (!CLUSTERSTATUS.isEqual(message.getStr(Overseer.QUEUE_OPERATION)) && collectionName != null) {\n      synchronized (collectionWip) {\n        collectionWip.add(collectionName);\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void markTaskAsRunning(QueueEvent head, String collectionName,\n                                 String asyncId, ZkNodeProps message)\n      throws KeeperException, InterruptedException {\n    synchronized (runningZKTasks) {\n      runningZKTasks.add(head.getId());\n    }\n\n    synchronized (runningTasks) {\n      runningTasks.add(head.getId());\n    }\n    //TODO deprecated remove this check .\n    if (!CLUSTERSTATUS.isEqual(message.getStr(Overseer.QUEUE_OPERATION)) && collectionName != null) {\n      synchronized (collectionWip) {\n        collectionWip.add(collectionName);\n      }\n    }\n\n    if(asyncId != null)\n      runningMap.put(asyncId, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":5,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerProcessor#markTaskAsRunning(OverseerMessageHandler,QueueEvent,String,String,ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#markTaskAsRunning(QueueEvent,String,String,ZkNodeProps).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void markTaskAsRunning(OverseerMessageHandler messageHandler, QueueEvent head, String taskKey,\n                                 String asyncId, ZkNodeProps message)\n      throws KeeperException, InterruptedException {\n    synchronized (runningZKTasks) {\n      runningZKTasks.add(head.getId());\n    }\n\n    synchronized (runningTasks) {\n      runningTasks.add(head.getId());\n    }\n\n    messageHandler.markExclusiveTask(taskKey, message);\n\n    if(asyncId != null)\n      runningMap.put(asyncId, null);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void markTaskAsRunning(QueueEvent head, String collectionName,\n                                 String asyncId, ZkNodeProps message)\n      throws KeeperException, InterruptedException {\n    synchronized (runningZKTasks) {\n      runningZKTasks.add(head.getId());\n    }\n\n    synchronized (runningTasks) {\n      runningTasks.add(head.getId());\n    }\n    //TODO deprecated remove this check .\n    if (!CLUSTERSTATUS.isEqual(message.getStr(Overseer.QUEUE_OPERATION)) && collectionName != null) {\n      synchronized (collectionWip) {\n        collectionWip.add(collectionName);\n      }\n    }\n\n    if(asyncId != null)\n      runningMap.put(asyncId, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"85f6ce3af19fc13abaaade6799a6e8c192e9b8e2":["30c688f7052130cef7bd419c85e3c5be214f7b9e"],"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["85f6ce3af19fc13abaaade6799a6e8c192e9b8e2"],"8ff2ea054f72177967223fb032d708ad8020e80a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c688f7052130cef7bd419c85e3c5be214f7b9e":["8ff2ea054f72177967223fb032d708ad8020e80a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"]},"commit2Childs":{"85f6ce3af19fc13abaaade6799a6e8c192e9b8e2":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8ff2ea054f72177967223fb032d708ad8020e80a":["30c688f7052130cef7bd419c85e3c5be214f7b9e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8ff2ea054f72177967223fb032d708ad8020e80a"],"30c688f7052130cef7bd419c85e3c5be214f7b9e":["85f6ce3af19fc13abaaade6799a6e8c192e9b8e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}