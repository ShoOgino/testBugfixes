{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(List[byte[]],int,int,int[],long[],int[],int,int,boolean).mjava","commits":[{"id":"416f9e28900210be57b69bc12e2954fb98ed7ebe","date":1458479803,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(List[byte[]],int,int,int[],long[],int[],int,int,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(List[byte[]],int,int,int[],long[],int[],int,int).mjava","sourceNew":"  HeapPointReader(List<byte[]> blocks, int valuesPerBlock, int packedBytesLength, int[] ords, long[] ordsLong, int[] docIDs, int start, int end, boolean singleValuePerDoc) {\n    this.blocks = blocks;\n    this.valuesPerBlock = valuesPerBlock;\n    this.singleValuePerDoc = singleValuePerDoc;\n    this.ords = ords;\n    this.ordsLong = ordsLong;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n    scratch = new byte[packedBytesLength];\n  }\n\n","sourceOld":"  HeapPointReader(List<byte[]> blocks, int valuesPerBlock, int packedBytesLength, int[] ords, long[] ordsLong, int[] docIDs, int start, int end) {\n    this.blocks = blocks;\n    this.valuesPerBlock = valuesPerBlock;\n    this.ords = ords;\n    this.ordsLong = ordsLong;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n    scratch = new byte[packedBytesLength];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fc0d60683b47b5d922124c31f57c8b34734f9e6","date":1480846684,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(List[byte[]],int,int,int[],long[],int[],int,int,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(List[byte[]],int,int,int[],long[],int[],int,int,boolean).mjava","sourceNew":"  public HeapPointReader(List<byte[]> blocks, int valuesPerBlock, int packedBytesLength, int[] ords, long[] ordsLong, int[] docIDs, int start, int end, boolean singleValuePerDoc) {\n    this.blocks = blocks;\n    this.valuesPerBlock = valuesPerBlock;\n    this.singleValuePerDoc = singleValuePerDoc;\n    this.ords = ords;\n    this.ordsLong = ordsLong;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n    scratch = new byte[packedBytesLength];\n  }\n\n","sourceOld":"  HeapPointReader(List<byte[]> blocks, int valuesPerBlock, int packedBytesLength, int[] ords, long[] ordsLong, int[] docIDs, int start, int end, boolean singleValuePerDoc) {\n    this.blocks = blocks;\n    this.valuesPerBlock = valuesPerBlock;\n    this.singleValuePerDoc = singleValuePerDoc;\n    this.ords = ords;\n    this.ordsLong = ordsLong;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n    scratch = new byte[packedBytesLength];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(List[byte[]],int,int,int[],long[],int[],int,int,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(List[byte[]],int,int,int[],long[],int[],int,int,boolean).mjava","sourceNew":"  public HeapPointReader(List<byte[]> blocks, int valuesPerBlock, int packedBytesLength, int[] ords, long[] ordsLong, int[] docIDs, int start, int end, boolean singleValuePerDoc) {\n    this.blocks = blocks;\n    this.valuesPerBlock = valuesPerBlock;\n    this.singleValuePerDoc = singleValuePerDoc;\n    this.ords = ords;\n    this.ordsLong = ordsLong;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n    scratch = new byte[packedBytesLength];\n  }\n\n","sourceOld":"  HeapPointReader(List<byte[]> blocks, int valuesPerBlock, int packedBytesLength, int[] ords, long[] ordsLong, int[] docIDs, int start, int end, boolean singleValuePerDoc) {\n    this.blocks = blocks;\n    this.valuesPerBlock = valuesPerBlock;\n    this.singleValuePerDoc = singleValuePerDoc;\n    this.ords = ords;\n    this.ordsLong = ordsLong;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n    scratch = new byte[packedBytesLength];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78bdc7d6906146edb12a1a6c1f765ba680ed5124","date":1549523533,"type":5,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(List[byte[]],int,int,int[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(List[byte[]],int,int,int[],long[],int[],int,int,boolean).mjava","sourceNew":"  public HeapPointReader(List<byte[]> blocks, int valuesPerBlock, int packedBytesLength, int[] docIDs, int start, int end) {\n    this.blocks = blocks;\n    this.valuesPerBlock = valuesPerBlock;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n  }\n\n","sourceOld":"  public HeapPointReader(List<byte[]> blocks, int valuesPerBlock, int packedBytesLength, int[] ords, long[] ordsLong, int[] docIDs, int start, int end, boolean singleValuePerDoc) {\n    this.blocks = blocks;\n    this.valuesPerBlock = valuesPerBlock;\n    this.singleValuePerDoc = singleValuePerDoc;\n    this.ords = ords;\n    this.ordsLong = ordsLong;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n    scratch = new byte[packedBytesLength];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9fc0d60683b47b5d922124c31f57c8b34734f9e6":["416f9e28900210be57b69bc12e2954fb98ed7ebe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78bdc7d6906146edb12a1a6c1f765ba680ed5124":["9fc0d60683b47b5d922124c31f57c8b34734f9e6"],"416f9e28900210be57b69bc12e2954fb98ed7ebe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9856095f7afb5a607bf5e65077615ed91273508c":["416f9e28900210be57b69bc12e2954fb98ed7ebe","9fc0d60683b47b5d922124c31f57c8b34734f9e6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["78bdc7d6906146edb12a1a6c1f765ba680ed5124"]},"commit2Childs":{"9fc0d60683b47b5d922124c31f57c8b34734f9e6":["78bdc7d6906146edb12a1a6c1f765ba680ed5124","9856095f7afb5a607bf5e65077615ed91273508c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["416f9e28900210be57b69bc12e2954fb98ed7ebe"],"78bdc7d6906146edb12a1a6c1f765ba680ed5124":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"416f9e28900210be57b69bc12e2954fb98ed7ebe":["9fc0d60683b47b5d922124c31f57c8b34734f9e6","9856095f7afb5a607bf5e65077615ed91273508c"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}