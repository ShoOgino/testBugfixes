{"path":"src/java/org/apache/lucene/store/FSDirectory#getLockPrefix().mjava","commits":[{"id":"16df95df890d76f133a069351e752080aada6c46","date":1054239498,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSDirectory#getLockPrefix().mjava","pathOld":"/dev/null","sourceNew":"  private StringBuffer getLockPrefix() {\n    String dirName;                               // name to be hashed\n    try {\n      dirName = directory.getCanonicalPath();\n    } catch (IOException e) {\n      throw new RuntimeException(e.toString());\n    }\n    \n    byte digest[];\n    synchronized (DIGESTER) {\n      digest = DIGESTER.digest(dirName.getBytes());\n    }\n    StringBuffer buf = new StringBuffer();\n    buf.append(\"lucene-\");\n    for (int i = 0; i < digest.length; i++) {\n      int b = digest[i];\n      buf.append(HEX_DIGITS[(b >> 4) & 0xf]);\n      buf.append(HEX_DIGITS[b & 0xf]);\n    }\n\n    return buf;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1e538cbd7f572f646f36c73053aea561d95c2cb2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"09627d3c8ba7784d4c31705fe1e8ea4d7b697ad4","date":1079639085,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSDirectory#getLockPrefix().mjava","pathOld":"src/java/org/apache/lucene/store/FSDirectory#getLockPrefix().mjava","sourceNew":"  private StringBuffer getLockPrefix() {\n    String dirName;                               // name to be hashed\n    try {\n      dirName = directory.getCanonicalPath();\n    } catch (IOException e) {\n      throw new RuntimeException(e.toString());\n    }\n\n    byte digest[];\n    synchronized (DIGESTER) {\n      digest = DIGESTER.digest(dirName.getBytes());\n    }\n    StringBuffer buf = new StringBuffer();\n    buf.append(\"lucene-\");\n    for (int i = 0; i < digest.length; i++) {\n      int b = digest[i];\n      buf.append(HEX_DIGITS[(b >> 4) & 0xf]);\n      buf.append(HEX_DIGITS[b & 0xf]);\n    }\n\n    return buf;\n  }\n\n","sourceOld":"  private StringBuffer getLockPrefix() {\n    String dirName;                               // name to be hashed\n    try {\n      dirName = directory.getCanonicalPath();\n    } catch (IOException e) {\n      throw new RuntimeException(e.toString());\n    }\n    \n    byte digest[];\n    synchronized (DIGESTER) {\n      digest = DIGESTER.digest(dirName.getBytes());\n    }\n    StringBuffer buf = new StringBuffer();\n    buf.append(\"lucene-\");\n    for (int i = 0; i < digest.length; i++) {\n      int b = digest[i];\n      buf.append(HEX_DIGITS[(b >> 4) & 0xf]);\n      buf.append(HEX_DIGITS[b & 0xf]);\n    }\n\n    return buf;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d61f4c23cc2cce8021776edaf50078c935f8d4aa","date":1147464779,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSDirectory#getLockPrefix().mjava","pathOld":"src/java/org/apache/lucene/store/FSDirectory#getLockPrefix().mjava","sourceNew":"  private StringBuffer getLockPrefix() {\n    String dirName;                               // name to be hashed\n    try {\n      dirName = directory.getCanonicalPath();\n    } catch (IOException e) {\n      throw new RuntimeException(e.toString(), e);\n    }\n\n    byte digest[];\n    synchronized (DIGESTER) {\n      digest = DIGESTER.digest(dirName.getBytes());\n    }\n    StringBuffer buf = new StringBuffer();\n    buf.append(\"lucene-\");\n    for (int i = 0; i < digest.length; i++) {\n      int b = digest[i];\n      buf.append(HEX_DIGITS[(b >> 4) & 0xf]);\n      buf.append(HEX_DIGITS[b & 0xf]);\n    }\n\n    return buf;\n  }\n\n","sourceOld":"  private StringBuffer getLockPrefix() {\n    String dirName;                               // name to be hashed\n    try {\n      dirName = directory.getCanonicalPath();\n    } catch (IOException e) {\n      throw new RuntimeException(e.toString());\n    }\n\n    byte digest[];\n    synchronized (DIGESTER) {\n      digest = DIGESTER.digest(dirName.getBytes());\n    }\n    StringBuffer buf = new StringBuffer();\n    buf.append(\"lucene-\");\n    for (int i = 0; i < digest.length; i++) {\n      int b = digest[i];\n      buf.append(HEX_DIGITS[(b >> 4) & 0xf]);\n      buf.append(HEX_DIGITS[b & 0xf]);\n    }\n\n    return buf;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5c6bd70b660528bcf8dd3216ea1f7565ac220a20","date":1156813990,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSDirectory#getLockID().mjava","pathOld":"src/java/org/apache/lucene/store/FSDirectory#getLockPrefix().mjava","sourceNew":"  public String getLockID() {\n    String dirName;                               // name to be hashed\n    try {\n      dirName = directory.getCanonicalPath();\n    } catch (IOException e) {\n      throw new RuntimeException(e.toString(), e);\n    }\n\n    byte digest[];\n    synchronized (DIGESTER) {\n      digest = DIGESTER.digest(dirName.getBytes());\n    }\n    StringBuffer buf = new StringBuffer();\n    buf.append(\"lucene-\");\n    for (int i = 0; i < digest.length; i++) {\n      int b = digest[i];\n      buf.append(HEX_DIGITS[(b >> 4) & 0xf]);\n      buf.append(HEX_DIGITS[b & 0xf]);\n    }\n\n    return buf.toString();\n  }\n\n","sourceOld":"  private StringBuffer getLockPrefix() {\n    String dirName;                               // name to be hashed\n    try {\n      dirName = directory.getCanonicalPath();\n    } catch (IOException e) {\n      throw new RuntimeException(e.toString(), e);\n    }\n\n    byte digest[];\n    synchronized (DIGESTER) {\n      digest = DIGESTER.digest(dirName.getBytes());\n    }\n    StringBuffer buf = new StringBuffer();\n    buf.append(\"lucene-\");\n    for (int i = 0; i < digest.length; i++) {\n      int b = digest[i];\n      buf.append(HEX_DIGITS[(b >> 4) & 0xf]);\n      buf.append(HEX_DIGITS[b & 0xf]);\n    }\n\n    return buf;\n  }\n\n","bugFix":null,"bugIntro":["1e538cbd7f572f646f36c73053aea561d95c2cb2"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"16df95df890d76f133a069351e752080aada6c46":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5c6bd70b660528bcf8dd3216ea1f7565ac220a20":["d61f4c23cc2cce8021776edaf50078c935f8d4aa"],"09627d3c8ba7784d4c31705fe1e8ea4d7b697ad4":["16df95df890d76f133a069351e752080aada6c46"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d61f4c23cc2cce8021776edaf50078c935f8d4aa":["09627d3c8ba7784d4c31705fe1e8ea4d7b697ad4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c6bd70b660528bcf8dd3216ea1f7565ac220a20"]},"commit2Childs":{"16df95df890d76f133a069351e752080aada6c46":["09627d3c8ba7784d4c31705fe1e8ea4d7b697ad4"],"5c6bd70b660528bcf8dd3216ea1f7565ac220a20":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"09627d3c8ba7784d4c31705fe1e8ea4d7b697ad4":["d61f4c23cc2cce8021776edaf50078c935f8d4aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["16df95df890d76f133a069351e752080aada6c46"],"d61f4c23cc2cce8021776edaf50078c935f8d4aa":["5c6bd70b660528bcf8dd3216ea1f7565ac220a20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}