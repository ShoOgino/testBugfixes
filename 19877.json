{"path":"lucene/core/src/java/org/apache/lucene/document/Field#setValue(String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setValue(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/Field#setValue(String).mjava","sourceNew":"  /**\n   * <p>\n   * Expert: change the value of this field. This can be used during indexing to\n   * re-use a single Field instance to improve indexing speed by avoiding GC\n   * cost of new'ing and reclaiming Field instances. Typically a single\n   * {@link Document} instance is re-used as well. This helps most on small\n   * documents.\n   * </p>\n   * \n   * <p>\n   * Each Field instance should only be used once within a single\n   * {@link Document} instance. See <a\n   * href=\"http://wiki.apache.org/lucene-java/ImproveIndexingSpeed\"\n   * >ImproveIndexingSpeed</a> for details.\n   * </p>\n   */\n  public void setValue(String value) {\n    if (!(fieldsData instanceof String)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to String\");\n    }\n    fieldsData = value;\n  }\n\n","sourceOld":"  /**\n   * <p>\n   * Expert: change the value of this field. This can be used during indexing to\n   * re-use a single Field instance to improve indexing speed by avoiding GC\n   * cost of new'ing and reclaiming Field instances. Typically a single\n   * {@link Document} instance is re-used as well. This helps most on small\n   * documents.\n   * </p>\n   * \n   * <p>\n   * Each Field instance should only be used once within a single\n   * {@link Document} instance. See <a\n   * href=\"http://wiki.apache.org/lucene-java/ImproveIndexingSpeed\"\n   * >ImproveIndexingSpeed</a> for details.\n   * </p>\n   */\n  public void setValue(String value) {\n    if (!(fieldsData instanceof String)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to String\");\n    }\n    fieldsData = value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a78a90fc9701e511308346ea29f4f5e548bb39fe","date":1329489995,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setStringValue(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/Field#setValue(String).mjava","sourceNew":"  /**\n   * <p>\n   * Expert: change the value of this field. This can be used during indexing to\n   * re-use a single Field instance to improve indexing speed by avoiding GC\n   * cost of new'ing and reclaiming Field instances. Typically a single\n   * {@link Document} instance is re-used as well. This helps most on small\n   * documents.\n   * </p>\n   * \n   * <p>\n   * Each Field instance should only be used once within a single\n   * {@link Document} instance. See <a\n   * href=\"http://wiki.apache.org/lucene-java/ImproveIndexingSpeed\"\n   * >ImproveIndexingSpeed</a> for details.\n   * </p>\n   */\n  public void setStringValue(String value) {\n    if (!(fieldsData instanceof String)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to String\");\n    }\n    fieldsData = value;\n  }\n\n","sourceOld":"  /**\n   * <p>\n   * Expert: change the value of this field. This can be used during indexing to\n   * re-use a single Field instance to improve indexing speed by avoiding GC\n   * cost of new'ing and reclaiming Field instances. Typically a single\n   * {@link Document} instance is re-used as well. This helps most on small\n   * documents.\n   * </p>\n   * \n   * <p>\n   * Each Field instance should only be used once within a single\n   * {@link Document} instance. See <a\n   * href=\"http://wiki.apache.org/lucene-java/ImproveIndexingSpeed\"\n   * >ImproveIndexingSpeed</a> for details.\n   * </p>\n   */\n  public void setValue(String value) {\n    if (!(fieldsData instanceof String)) {\n      throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to String\");\n    }\n    fieldsData = value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a78a90fc9701e511308346ea29f4f5e548bb39fe":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a78a90fc9701e511308346ea29f4f5e548bb39fe"]},"commit2Childs":{"a78a90fc9701e511308346ea29f4f5e548bb39fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}