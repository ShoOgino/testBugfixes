{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testKnnStream().mjava","commits":[{"id":"876a7de1b2da8fe9fa734ac0aba2c979a1c3daab","date":1495627141,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testKnnStream().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testKnnStream() throws Exception {\n\n    UpdateRequest update = new UpdateRequest();\n\n    update.add(id, \"1\", \"a_t\", \"hello world have a very nice day blah\");\n    update.add(id, \"2\", \"a_t\", \"hello world have a very nice day fancy sky\");\n    update.add(id, \"3\", \"a_t\", \"hello world have a very nice bug out\");\n    update.add(id, \"4\", \"a_t\", \"hello world have a very streaming is fun\");\n\n\n    update.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamExpression expression;\n    TupleStream stream;\n\n    StreamFactory factory = new StreamFactory()\n        .withCollectionZkHost(COLLECTIONORALIAS, cluster.getZkServer().getZkAddress())\n        .withFunctionName(\"random\", RandomStream.class);\n\n\n    StreamContext context = new StreamContext();\n    SolrClientCache cache = new SolrClientCache();\n    try {\n      context.setSolrClientCache(cache);\n\n      ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id\\\")\");\n      JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n      SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n      System.out.println(\"## Tuples:\"+tuples.size());\n      assertTrue(tuples.size() == 4);\n\n    } finally {\n      cache.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2ba44d45f2704113ff8310af030b2f03a4c8bec","date":1495627141,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testKnnStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testKnnStream().mjava","sourceNew":"  @Test\n  public void testKnnStream() throws Exception {\n\n    UpdateRequest update = new UpdateRequest();\n    update.add(id, \"1\", \"a_t\", \"hello world have a very nice day blah\");\n    update.add(id, \"4\", \"a_t\", \"hello world have a very streaming is fun\");\n    update.add(id, \"3\", \"a_t\", \"hello world have a very nice bug out\");\n    update.add(id, \"2\", \"a_t\", \"hello world have a very nice day fancy sky\");\n    update.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext context = new StreamContext();\n    SolrClientCache cache = new SolrClientCache();\n    try {\n      context.setSolrClientCache(cache);\n      ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n      SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 3);\n      assertOrder(tuples,2,3,4);\n    } finally {\n      cache.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testKnnStream() throws Exception {\n\n    UpdateRequest update = new UpdateRequest();\n\n    update.add(id, \"1\", \"a_t\", \"hello world have a very nice day blah\");\n    update.add(id, \"2\", \"a_t\", \"hello world have a very nice day fancy sky\");\n    update.add(id, \"3\", \"a_t\", \"hello world have a very nice bug out\");\n    update.add(id, \"4\", \"a_t\", \"hello world have a very streaming is fun\");\n\n\n    update.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamExpression expression;\n    TupleStream stream;\n\n    StreamFactory factory = new StreamFactory()\n        .withCollectionZkHost(COLLECTIONORALIAS, cluster.getZkServer().getZkAddress())\n        .withFunctionName(\"random\", RandomStream.class);\n\n\n    StreamContext context = new StreamContext();\n    SolrClientCache cache = new SolrClientCache();\n    try {\n      context.setSolrClientCache(cache);\n\n      ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id\\\")\");\n      JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n      SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n      System.out.println(\"## Tuples:\"+tuples.size());\n      assertTrue(tuples.size() == 4);\n\n    } finally {\n      cache.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bff7132ef3fbfc7f72a041ba6adbcac141cf2b36","date":1495627142,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testKnnStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testKnnStream().mjava","sourceNew":"  @Test\n  public void testKnnStream() throws Exception {\n\n    UpdateRequest update = new UpdateRequest();\n    update.add(id, \"1\", \"a_t\", \"hello world have a very nice day blah\");\n    update.add(id, \"4\", \"a_t\", \"hello world have a very streaming is fun\");\n    update.add(id, \"3\", \"a_t\", \"hello world have a very nice bug out\");\n    update.add(id, \"2\", \"a_t\", \"hello world have a very nice day fancy sky\");\n    update.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext context = new StreamContext();\n    SolrClientCache cache = new SolrClientCache();\n    try {\n      context.setSolrClientCache(cache);\n      ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n      SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 3);\n      assertOrder(tuples, 2, 3, 4);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxdf=\\\"0\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxwl=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", minwl=\\\"20\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n    } finally {\n      cache.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testKnnStream() throws Exception {\n\n    UpdateRequest update = new UpdateRequest();\n    update.add(id, \"1\", \"a_t\", \"hello world have a very nice day blah\");\n    update.add(id, \"4\", \"a_t\", \"hello world have a very streaming is fun\");\n    update.add(id, \"3\", \"a_t\", \"hello world have a very nice bug out\");\n    update.add(id, \"2\", \"a_t\", \"hello world have a very nice day fancy sky\");\n    update.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext context = new StreamContext();\n    SolrClientCache cache = new SolrClientCache();\n    try {\n      context.setSolrClientCache(cache);\n      ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n      SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 3);\n      assertOrder(tuples,2,3,4);\n    } finally {\n      cache.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34baf73cdd1bea04fd3629715a17f5bf3f424c17","date":1495670683,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testKnnStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testKnnStream().mjava","sourceNew":"  @Test\n  public void testKnnStream() throws Exception {\n\n    UpdateRequest update = new UpdateRequest();\n    update.add(id, \"1\", \"a_t\", \"hello world have a very nice day blah\");\n    update.add(id, \"4\", \"a_t\", \"hello world have a very streaming is fun\");\n    update.add(id, \"3\", \"a_t\", \"hello world have a very nice bug out\");\n    update.add(id, \"2\", \"a_t\", \"hello world have a very nice day fancy sky\");\n    update.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext context = new StreamContext();\n    SolrClientCache cache = new SolrClientCache();\n    try {\n      context.setSolrClientCache(cache);\n      ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n      SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 3);\n      assertOrder(tuples, 2, 3, 4);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", k=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 2);\n      assertOrder(tuples, 2, 3);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxdf=\\\"0\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxwl=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", r=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", minwl=\\\"20\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n    } finally {\n      cache.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testKnnStream() throws Exception {\n\n    UpdateRequest update = new UpdateRequest();\n    update.add(id, \"1\", \"a_t\", \"hello world have a very nice day blah\");\n    update.add(id, \"4\", \"a_t\", \"hello world have a very streaming is fun\");\n    update.add(id, \"3\", \"a_t\", \"hello world have a very nice bug out\");\n    update.add(id, \"2\", \"a_t\", \"hello world have a very nice day fancy sky\");\n    update.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext context = new StreamContext();\n    SolrClientCache cache = new SolrClientCache();\n    try {\n      context.setSolrClientCache(cache);\n      ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n      SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 3);\n      assertOrder(tuples, 2, 3, 4);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxdf=\\\"0\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxwl=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", minwl=\\\"20\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n    } finally {\n      cache.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08528c23e122ea429fd0fa606d96c9a4285cfc27","date":1495671620,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testKnnStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testKnnStream().mjava","sourceNew":"  @Test\n  public void testKnnStream() throws Exception {\n\n    UpdateRequest update = new UpdateRequest();\n    update.add(id, \"1\", \"a_t\", \"hello world have a very nice day blah\");\n    update.add(id, \"4\", \"a_t\", \"hello world have a very streaming is fun\");\n    update.add(id, \"3\", \"a_t\", \"hello world have a very nice bug out\");\n    update.add(id, \"2\", \"a_t\", \"hello world have a very nice day fancy sky\");\n    update.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext context = new StreamContext();\n    SolrClientCache cache = new SolrClientCache();\n    try {\n      context.setSolrClientCache(cache);\n      ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n      SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 3);\n      assertOrder(tuples, 2, 3, 4);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", k=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 2);\n      assertOrder(tuples, 2, 3);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxdf=\\\"0\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxwl=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", minwl=\\\"20\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n    } finally {\n      cache.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testKnnStream() throws Exception {\n\n    UpdateRequest update = new UpdateRequest();\n    update.add(id, \"1\", \"a_t\", \"hello world have a very nice day blah\");\n    update.add(id, \"4\", \"a_t\", \"hello world have a very streaming is fun\");\n    update.add(id, \"3\", \"a_t\", \"hello world have a very nice bug out\");\n    update.add(id, \"2\", \"a_t\", \"hello world have a very nice day fancy sky\");\n    update.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext context = new StreamContext();\n    SolrClientCache cache = new SolrClientCache();\n    try {\n      context.setSolrClientCache(cache);\n      ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n      SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 3);\n      assertOrder(tuples, 2, 3, 4);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", k=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 2);\n      assertOrder(tuples, 2, 3);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxdf=\\\"0\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxwl=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", r=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", minwl=\\\"20\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n    } finally {\n      cache.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testKnnStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testKnnStream().mjava","sourceNew":"  @Test\n  public void testKnnStream() throws Exception {\n\n    UpdateRequest update = new UpdateRequest();\n    update.add(id, \"1\", \"a_t\", \"hello world have a very nice day blah\");\n    update.add(id, \"4\", \"a_t\", \"hello world have a very streaming is fun\");\n    update.add(id, \"3\", \"a_t\", \"hello world have a very nice bug out\");\n    update.add(id, \"2\", \"a_t\", \"hello world have a very nice day fancy sky\");\n    update.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext context = new StreamContext();\n    SolrClientCache cache = new SolrClientCache();\n    try {\n      context.setSolrClientCache(cache);\n      ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n      SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 3);\n      assertOrder(tuples, 2, 3, 4);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", k=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 2);\n      assertOrder(tuples, 2, 3);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxdf=\\\"0\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxwl=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", minwl=\\\"20\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n    } finally {\n      cache.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testKnnStream() throws Exception {\n\n    UpdateRequest update = new UpdateRequest();\n    update.add(id, \"1\", \"a_t\", \"hello world have a very nice day blah\");\n    update.add(id, \"4\", \"a_t\", \"hello world have a very streaming is fun\");\n    update.add(id, \"3\", \"a_t\", \"hello world have a very nice bug out\");\n    update.add(id, \"2\", \"a_t\", \"hello world have a very nice day fancy sky\");\n    update.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext context = new StreamContext();\n    SolrClientCache cache = new SolrClientCache();\n    try {\n      context.setSolrClientCache(cache);\n      ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n      SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 3);\n      assertOrder(tuples, 2, 3, 4);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxdf=\\\"0\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxwl=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", minwl=\\\"20\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n    } finally {\n      cache.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testKnnStream().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testKnnStream() throws Exception {\n\n    UpdateRequest update = new UpdateRequest();\n    update.add(id, \"1\", \"a_t\", \"hello world have a very nice day blah\");\n    update.add(id, \"4\", \"a_t\", \"hello world have a very streaming is fun\");\n    update.add(id, \"3\", \"a_t\", \"hello world have a very nice bug out\");\n    update.add(id, \"2\", \"a_t\", \"hello world have a very nice day fancy sky\");\n    update.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext context = new StreamContext();\n    SolrClientCache cache = new SolrClientCache();\n    try {\n      context.setSolrClientCache(cache);\n      ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n      SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 3);\n      assertOrder(tuples, 2, 3, 4);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", k=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 2);\n      assertOrder(tuples, 2, 3);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxdf=\\\"0\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxwl=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", minwl=\\\"20\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n    } finally {\n      cache.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6fe6699bcc60bb2640032c2682f07a108b1f757","date":1516148439,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testKnnSearchStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testKnnStream().mjava","sourceNew":"  @Test\n  public void testKnnSearchStream() throws Exception {\n\n    UpdateRequest update = new UpdateRequest();\n    update.add(id, \"1\", \"a_t\", \"hello world have a very nice day blah\");\n    update.add(id, \"4\", \"a_t\", \"hello world have a very streaming is fun\");\n    update.add(id, \"3\", \"a_t\", \"hello world have a very nice bug out\");\n    update.add(id, \"2\", \"a_t\", \"hello world have a very nice day fancy sky\");\n    update.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext context = new StreamContext();\n    SolrClientCache cache = new SolrClientCache();\n    try {\n      context.setSolrClientCache(cache);\n      ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knnSearch(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n      SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 3);\n      assertOrder(tuples, 2, 3, 4);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knnSearch(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", k=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 2);\n      assertOrder(tuples, 2, 3);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knnSearch(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxdf=\\\"0\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knnSearch(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxwl=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knnSearch(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", minwl=\\\"20\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n    } finally {\n      cache.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testKnnStream() throws Exception {\n\n    UpdateRequest update = new UpdateRequest();\n    update.add(id, \"1\", \"a_t\", \"hello world have a very nice day blah\");\n    update.add(id, \"4\", \"a_t\", \"hello world have a very streaming is fun\");\n    update.add(id, \"3\", \"a_t\", \"hello world have a very nice bug out\");\n    update.add(id, \"2\", \"a_t\", \"hello world have a very nice day fancy sky\");\n    update.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext context = new StreamContext();\n    SolrClientCache cache = new SolrClientCache();\n    try {\n      context.setSolrClientCache(cache);\n      ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n      SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 3);\n      assertOrder(tuples, 2, 3, 4);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", k=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 2);\n      assertOrder(tuples, 2, 3);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxdf=\\\"0\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxwl=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", minwl=\\\"20\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n    } finally {\n      cache.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testKnnStream().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testKnnStream() throws Exception {\n\n    UpdateRequest update = new UpdateRequest();\n    update.add(id, \"1\", \"a_t\", \"hello world have a very nice day blah\");\n    update.add(id, \"4\", \"a_t\", \"hello world have a very streaming is fun\");\n    update.add(id, \"3\", \"a_t\", \"hello world have a very nice bug out\");\n    update.add(id, \"2\", \"a_t\", \"hello world have a very nice day fancy sky\");\n    update.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    StreamContext context = new StreamContext();\n    SolrClientCache cache = new SolrClientCache();\n    try {\n      context.setSolrClientCache(cache);\n      ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n      SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 3);\n      assertOrder(tuples, 2, 3, 4);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", k=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 2);\n      assertOrder(tuples, 2, 3);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxdf=\\\"0\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"4\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", maxwl=\\\"1\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n      sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT, \"/stream\"));\n      sParams.add(\"expr\", \"knn(\" + COLLECTIONORALIAS + \", id=\\\"1\\\", qf=\\\"a_t\\\", rows=\\\"2\\\", fl=\\\"id, score\\\", mintf=\\\"1\\\", minwl=\\\"20\\\")\");\n      solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\", sParams);\n      tuples = getTuples(solrStream);\n      assertTrue(tuples.size() == 0);\n\n    } finally {\n      cache.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["d1f5728f32a4a256b36cfabd7a2636452f599bb9","a6fe6699bcc60bb2640032c2682f07a108b1f757"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","08528c23e122ea429fd0fa606d96c9a4285cfc27"],"08528c23e122ea429fd0fa606d96c9a4285cfc27":["34baf73cdd1bea04fd3629715a17f5bf3f424c17"],"a6fe6699bcc60bb2640032c2682f07a108b1f757":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"876a7de1b2da8fe9fa734ac0aba2c979a1c3daab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bff7132ef3fbfc7f72a041ba6adbcac141cf2b36":["e2ba44d45f2704113ff8310af030b2f03a4c8bec"],"34baf73cdd1bea04fd3629715a17f5bf3f424c17":["bff7132ef3fbfc7f72a041ba6adbcac141cf2b36"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e2ba44d45f2704113ff8310af030b2f03a4c8bec":["876a7de1b2da8fe9fa734ac0aba2c979a1c3daab"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["bff7132ef3fbfc7f72a041ba6adbcac141cf2b36","08528c23e122ea429fd0fa606d96c9a4285cfc27"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a6fe6699bcc60bb2640032c2682f07a108b1f757":["b94236357aaa22b76c10629851fe4e376e0cea82"],"08528c23e122ea429fd0fa606d96c9a4285cfc27":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"876a7de1b2da8fe9fa734ac0aba2c979a1c3daab":["e2ba44d45f2704113ff8310af030b2f03a4c8bec"],"34baf73cdd1bea04fd3629715a17f5bf3f424c17":["08528c23e122ea429fd0fa606d96c9a4285cfc27"],"bff7132ef3fbfc7f72a041ba6adbcac141cf2b36":["34baf73cdd1bea04fd3629715a17f5bf3f424c17","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","876a7de1b2da8fe9fa734ac0aba2c979a1c3daab"],"e2ba44d45f2704113ff8310af030b2f03a4c8bec":["bff7132ef3fbfc7f72a041ba6adbcac141cf2b36"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["b94236357aaa22b76c10629851fe4e376e0cea82","a6fe6699bcc60bb2640032c2682f07a108b1f757"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}