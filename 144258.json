{"path":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/DistanceQueryBuilder#DistanceQueryBuilder(double,double,double,String,String,boolean,int,int).mjava","commits":[{"id":"e470e29caa5c5200b096b6e282e9e657bc591bfb","date":1269888021,"type":1,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/DistanceQueryBuilder#DistanceQueryBuilder(double,double,double,String,String,boolean,int,int).mjava","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/DistanceQueryBuilder#DistanceQueryBuilder(double,double,double,String,String,boolean).mjava","sourceNew":"  /**\n   * Create a distance query using\n   * a boundary box wrapper around a more precise\n   * DistanceFilter.\n   * \n   * @param lat\n   * @param lng\n   * @param miles\n   */\n  public DistanceQueryBuilder (double lat, double lng, double miles, \n      String geoHashFieldPrefix, String tierFieldPrefix, boolean needPrecise,  int minTierIndexed, int maxTierIndexed){\n\n    this.lat = lat;\n    this.lng = lng;\n    this.miles = miles;\n    \n    CartesianPolyFilterBuilder cpf = new CartesianPolyFilterBuilder(tierFieldPrefix, minTierIndexed, maxTierIndexed);\n    Filter cartesianFilter = cpf.getBoundingArea(lat, lng, miles);\n\n    /* create precise distance filter */\n    if (needPrecise) {\n      filter = distanceFilter = new GeoHashDistanceFilter(cartesianFilter, lat, lng, miles, geoHashFieldPrefix);\n    } else {\n      filter = cartesianFilter;\n      distanceFilter = null;\n    }\n  }\n\n","sourceOld":"  /**\n   * Create a distance query using\n   * a boundary box wrapper around a more precise\n   * DistanceFilter.\n   * \n   * @param lat\n   * @param lng\n   * @param miles\n   */\n  public DistanceQueryBuilder (double lat, double lng, double miles, \n      String geoHashFieldPrefix, String tierFieldPrefix, boolean needPrecise){\n\n    this.lat = lat;\n    this.lng = lng;\n    this.miles = miles;\n    \n    CartesianPolyFilterBuilder cpf = new CartesianPolyFilterBuilder(tierFieldPrefix);\n    Filter cartesianFilter = cpf.getBoundingArea(lat, lng, miles);\n\n    /* create precise distance filter */\n    if (needPrecise) {\n      filter = distanceFilter = new GeoHashDistanceFilter(cartesianFilter, lat, lng, miles, geoHashFieldPrefix);\n    } else {\n      filter = cartesianFilter;\n      distanceFilter = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fb7e38713d15939e085d376c6391e6e6262a81f","date":1329897272,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/DistanceQueryBuilder#DistanceQueryBuilder(double,double,double,String,String,boolean,int,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Create a distance query using\n   * a boundary box wrapper around a more precise\n   * DistanceFilter.\n   * \n   * @param lat\n   * @param lng\n   * @param miles\n   */\n  public DistanceQueryBuilder (double lat, double lng, double miles, \n      String geoHashFieldPrefix, String tierFieldPrefix, boolean needPrecise,  int minTierIndexed, int maxTierIndexed){\n\n    this.lat = lat;\n    this.lng = lng;\n    this.miles = miles;\n    \n    CartesianPolyFilterBuilder cpf = new CartesianPolyFilterBuilder(tierFieldPrefix, minTierIndexed, maxTierIndexed);\n    Filter cartesianFilter = cpf.getBoundingArea(lat, lng, miles);\n\n    /* create precise distance filter */\n    if (needPrecise) {\n      filter = distanceFilter = new GeoHashDistanceFilter(cartesianFilter, lat, lng, miles, geoHashFieldPrefix);\n    } else {\n      filter = cartesianFilter;\n      distanceFilter = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e47768b261c28e7e6032060e8331475c81057953","date":1331681297,"type":4,"author":"Ryan McKinley","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/DistanceQueryBuilder#DistanceQueryBuilder(double,double,double,String,String,boolean,int,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Create a distance query using\n   * a boundary box wrapper around a more precise\n   * DistanceFilter.\n   * \n   * @param lat\n   * @param lng\n   * @param miles\n   */\n  public DistanceQueryBuilder (double lat, double lng, double miles, \n      String geoHashFieldPrefix, String tierFieldPrefix, boolean needPrecise,  int minTierIndexed, int maxTierIndexed){\n\n    this.lat = lat;\n    this.lng = lng;\n    this.miles = miles;\n    \n    CartesianPolyFilterBuilder cpf = new CartesianPolyFilterBuilder(tierFieldPrefix, minTierIndexed, maxTierIndexed);\n    Filter cartesianFilter = cpf.getBoundingArea(lat, lng, miles);\n\n    /* create precise distance filter */\n    if (needPrecise) {\n      filter = distanceFilter = new GeoHashDistanceFilter(cartesianFilter, lat, lng, miles, geoHashFieldPrefix);\n    } else {\n      filter = cartesianFilter;\n      distanceFilter = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e470e29caa5c5200b096b6e282e9e657bc591bfb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e47768b261c28e7e6032060e8331475c81057953":["e470e29caa5c5200b096b6e282e9e657bc591bfb","2fb7e38713d15939e085d376c6391e6e6262a81f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e47768b261c28e7e6032060e8331475c81057953"],"2fb7e38713d15939e085d376c6391e6e6262a81f":["e470e29caa5c5200b096b6e282e9e657bc591bfb"]},"commit2Childs":{"e470e29caa5c5200b096b6e282e9e657bc591bfb":["e47768b261c28e7e6032060e8331475c81057953","2fb7e38713d15939e085d376c6391e6e6262a81f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e470e29caa5c5200b096b6e282e9e657bc591bfb"],"e47768b261c28e7e6032060e8331475c81057953":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2fb7e38713d15939e085d376c6391e6e6262a81f":["e47768b261c28e7e6032060e8331475c81057953"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}