{"path":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/blocktree/Lucene40Stats#toString().mjava","commits":[{"id":"0628077afea69a2955260949478afabab8e500d8","date":1413915332,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/blocktree/Lucene40Stats#toString().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String toString() {\n    final ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    PrintStream out;\n    try {\n      out = new PrintStream(bos, false, IOUtils.UTF_8);\n    } catch (UnsupportedEncodingException bogus) {\n      throw new RuntimeException(bogus);\n    }\n      \n    out.println(\"  index FST:\");\n    out.println(\"    \" + indexNodeCount + \" nodes\");\n    out.println(\"    \" + indexArcCount + \" arcs\");\n    out.println(\"    \" + indexNumBytes + \" bytes\");\n    out.println(\"  terms:\");\n    out.println(\"    \" + totalTermCount + \" terms\");\n    out.println(\"    \" + totalTermBytes + \" bytes\" + (totalTermCount != 0 ? \" (\" + String.format(Locale.ROOT, \"%.1f\", ((double) totalTermBytes)/totalTermCount) + \" bytes/term)\" : \"\"));\n    out.println(\"  blocks:\");\n    out.println(\"    \" + totalBlockCount + \" blocks\");\n    out.println(\"    \" + termsOnlyBlockCount + \" terms-only blocks\");\n    out.println(\"    \" + subBlocksOnlyBlockCount + \" sub-block-only blocks\");\n    out.println(\"    \" + mixedBlockCount + \" mixed blocks\");\n    out.println(\"    \" + floorBlockCount + \" floor blocks\");\n    out.println(\"    \" + (totalBlockCount-floorSubBlockCount) + \" non-floor blocks\");\n    out.println(\"    \" + floorSubBlockCount + \" floor sub-blocks\");\n    out.println(\"    \" + totalBlockSuffixBytes + \" term suffix bytes\" + (totalBlockCount != 0 ? \" (\" + String.format(Locale.ROOT, \"%.1f\", ((double) totalBlockSuffixBytes)/totalBlockCount) + \" suffix-bytes/block)\" : \"\"));\n    out.println(\"    \" + totalBlockStatsBytes + \" term stats bytes\" + (totalBlockCount != 0 ? \" (\" + String.format(Locale.ROOT, \"%.1f\", ((double) totalBlockStatsBytes)/totalBlockCount) + \" stats-bytes/block)\" : \"\"));\n    out.println(\"    \" + totalBlockOtherBytes + \" other bytes\" + (totalBlockCount != 0 ? \" (\" + String.format(Locale.ROOT, \"%.1f\", ((double) totalBlockOtherBytes)/totalBlockCount) + \" other-bytes/block)\" : \"\"));\n    if (totalBlockCount != 0) {\n      out.println(\"    by prefix length:\");\n      int total = 0;\n      for(int prefix=0;prefix<blockCountByPrefixLen.length;prefix++) {\n        final int blockCount = blockCountByPrefixLen[prefix];\n        total += blockCount;\n        if (blockCount != 0) {\n          out.println(\"      \" + String.format(Locale.ROOT, \"%2d\", prefix) + \": \" + blockCount);\n        }\n      }\n      assert totalBlockCount == total;\n    }\n\n    try {\n      return bos.toString(IOUtils.UTF_8);\n    } catch (UnsupportedEncodingException bogus) {\n      throw new RuntimeException(bogus);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/blocktree/Lucene40Stats#toString().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String toString() {\n    final ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    PrintStream out;\n    try {\n      out = new PrintStream(bos, false, IOUtils.UTF_8);\n    } catch (UnsupportedEncodingException bogus) {\n      throw new RuntimeException(bogus);\n    }\n      \n    out.println(\"  index FST:\");\n    out.println(\"    \" + indexNodeCount + \" nodes\");\n    out.println(\"    \" + indexArcCount + \" arcs\");\n    out.println(\"    \" + indexNumBytes + \" bytes\");\n    out.println(\"  terms:\");\n    out.println(\"    \" + totalTermCount + \" terms\");\n    out.println(\"    \" + totalTermBytes + \" bytes\" + (totalTermCount != 0 ? \" (\" + String.format(Locale.ROOT, \"%.1f\", ((double) totalTermBytes)/totalTermCount) + \" bytes/term)\" : \"\"));\n    out.println(\"  blocks:\");\n    out.println(\"    \" + totalBlockCount + \" blocks\");\n    out.println(\"    \" + termsOnlyBlockCount + \" terms-only blocks\");\n    out.println(\"    \" + subBlocksOnlyBlockCount + \" sub-block-only blocks\");\n    out.println(\"    \" + mixedBlockCount + \" mixed blocks\");\n    out.println(\"    \" + floorBlockCount + \" floor blocks\");\n    out.println(\"    \" + (totalBlockCount-floorSubBlockCount) + \" non-floor blocks\");\n    out.println(\"    \" + floorSubBlockCount + \" floor sub-blocks\");\n    out.println(\"    \" + totalBlockSuffixBytes + \" term suffix bytes\" + (totalBlockCount != 0 ? \" (\" + String.format(Locale.ROOT, \"%.1f\", ((double) totalBlockSuffixBytes)/totalBlockCount) + \" suffix-bytes/block)\" : \"\"));\n    out.println(\"    \" + totalBlockStatsBytes + \" term stats bytes\" + (totalBlockCount != 0 ? \" (\" + String.format(Locale.ROOT, \"%.1f\", ((double) totalBlockStatsBytes)/totalBlockCount) + \" stats-bytes/block)\" : \"\"));\n    out.println(\"    \" + totalBlockOtherBytes + \" other bytes\" + (totalBlockCount != 0 ? \" (\" + String.format(Locale.ROOT, \"%.1f\", ((double) totalBlockOtherBytes)/totalBlockCount) + \" other-bytes/block)\" : \"\"));\n    if (totalBlockCount != 0) {\n      out.println(\"    by prefix length:\");\n      int total = 0;\n      for(int prefix=0;prefix<blockCountByPrefixLen.length;prefix++) {\n        final int blockCount = blockCountByPrefixLen[prefix];\n        total += blockCount;\n        if (blockCount != 0) {\n          out.println(\"      \" + String.format(Locale.ROOT, \"%2d\", prefix) + \": \" + blockCount);\n        }\n      }\n      assert totalBlockCount == total;\n    }\n\n    try {\n      return bos.toString(IOUtils.UTF_8);\n    } catch (UnsupportedEncodingException bogus) {\n      throw new RuntimeException(bogus);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71387d8cb6923eb831b17a8b734608ba2e21c653","date":1414126093,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/blocktree/Lucene40Stats#toString().mjava","sourceNew":null,"sourceOld":"  @Override\n  public String toString() {\n    final ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);\n    PrintStream out;\n    try {\n      out = new PrintStream(bos, false, IOUtils.UTF_8);\n    } catch (UnsupportedEncodingException bogus) {\n      throw new RuntimeException(bogus);\n    }\n      \n    out.println(\"  index FST:\");\n    out.println(\"    \" + indexNodeCount + \" nodes\");\n    out.println(\"    \" + indexArcCount + \" arcs\");\n    out.println(\"    \" + indexNumBytes + \" bytes\");\n    out.println(\"  terms:\");\n    out.println(\"    \" + totalTermCount + \" terms\");\n    out.println(\"    \" + totalTermBytes + \" bytes\" + (totalTermCount != 0 ? \" (\" + String.format(Locale.ROOT, \"%.1f\", ((double) totalTermBytes)/totalTermCount) + \" bytes/term)\" : \"\"));\n    out.println(\"  blocks:\");\n    out.println(\"    \" + totalBlockCount + \" blocks\");\n    out.println(\"    \" + termsOnlyBlockCount + \" terms-only blocks\");\n    out.println(\"    \" + subBlocksOnlyBlockCount + \" sub-block-only blocks\");\n    out.println(\"    \" + mixedBlockCount + \" mixed blocks\");\n    out.println(\"    \" + floorBlockCount + \" floor blocks\");\n    out.println(\"    \" + (totalBlockCount-floorSubBlockCount) + \" non-floor blocks\");\n    out.println(\"    \" + floorSubBlockCount + \" floor sub-blocks\");\n    out.println(\"    \" + totalBlockSuffixBytes + \" term suffix bytes\" + (totalBlockCount != 0 ? \" (\" + String.format(Locale.ROOT, \"%.1f\", ((double) totalBlockSuffixBytes)/totalBlockCount) + \" suffix-bytes/block)\" : \"\"));\n    out.println(\"    \" + totalBlockStatsBytes + \" term stats bytes\" + (totalBlockCount != 0 ? \" (\" + String.format(Locale.ROOT, \"%.1f\", ((double) totalBlockStatsBytes)/totalBlockCount) + \" stats-bytes/block)\" : \"\"));\n    out.println(\"    \" + totalBlockOtherBytes + \" other bytes\" + (totalBlockCount != 0 ? \" (\" + String.format(Locale.ROOT, \"%.1f\", ((double) totalBlockOtherBytes)/totalBlockCount) + \" other-bytes/block)\" : \"\"));\n    if (totalBlockCount != 0) {\n      out.println(\"    by prefix length:\");\n      int total = 0;\n      for(int prefix=0;prefix<blockCountByPrefixLen.length;prefix++) {\n        final int blockCount = blockCountByPrefixLen[prefix];\n        total += blockCount;\n        if (blockCount != 0) {\n          out.println(\"      \" + String.format(Locale.ROOT, \"%2d\", prefix) + \": \" + blockCount);\n        }\n      }\n      assert totalBlockCount == total;\n    }\n\n    try {\n      return bos.toString(IOUtils.UTF_8);\n    } catch (UnsupportedEncodingException bogus) {\n      throw new RuntimeException(bogus);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0628077afea69a2955260949478afabab8e500d8"],"0628077afea69a2955260949478afabab8e500d8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71387d8cb6923eb831b17a8b734608ba2e21c653"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238","0628077afea69a2955260949478afabab8e500d8"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"0628077afea69a2955260949478afabab8e500d8":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}