{"path":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#parameters().mjava","commits":[{"id":"3661d6742eed69ff6cc30ea2538d572624a7cdf8","date":1472676864,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#parameters().mjava","pathOld":"/dev/null","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    // wrap each enum val in an Object[] and return as Iterable\n    return () -> Arrays.stream(FacetField.FacetMethod.values()).map(it -> new Object[]{it}).iterator();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc8f206328a706450934717bec7ccc22ad166fc0","date":1473142172,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#parameters().mjava","pathOld":"/dev/null","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    // wrap each enum val in an Object[] and return as Iterable\n    return () -> Arrays.stream(FacetField.FacetMethod.values()).map(it -> new Object[]{it}).iterator();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#parameters().mjava","pathOld":"/dev/null","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    // wrap each enum val in an Object[] and return as Iterable\n    return () -> Arrays.stream(FacetField.FacetMethod.values()).map(it -> new Object[]{it}).iterator();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#parameters().mjava","pathOld":"/dev/null","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    // wrap each enum val in an Object[] and return as Iterable\n    return () -> Arrays.stream(FacetField.FacetMethod.values()).map(it -> new Object[]{it}).iterator();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd6d549522dba74ecfaf6104137279c657460200","date":1498176149,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#parameters().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#parameters().mjava","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    // wrap each enum val in an Object[] and return as Iterable\n    return () -> Arrays.stream(FacetField.FacetMethod.values())\n        .map(it -> new Object[]{it}).iterator();\n  }\n\n","sourceOld":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    // wrap each enum val in an Object[] and return as Iterable\n    return () -> Arrays.stream(FacetField.FacetMethod.values())\n        .filter(m -> m == FacetField.FacetMethod.ENUM)\n        .map(it -> new Object[]{it}).iterator();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0138536655ed6adafa2e07c09cd3c9572112922f","date":1497930179,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#parameters().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#parameters().mjava","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    // wrap each enum val in an Object[] and return as Iterable\n    return () -> Arrays.stream(FacetField.FacetMethod.values())\n        .filter(m -> m == FacetField.FacetMethod.ENUM)\n        .map(it -> new Object[]{it}).iterator();\n  }\n\n","sourceOld":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    // wrap each enum val in an Object[] and return as Iterable\n    return () -> Arrays.stream(FacetField.FacetMethod.values()).map(it -> new Object[]{it}).iterator();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#parameters().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#parameters().mjava","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    // wrap each enum val in an Object[] and return as Iterable\n    return () -> Arrays.stream(FacetField.FacetMethod.values())\n        .filter(m -> m == FacetField.FacetMethod.ENUM)\n        .map(it -> new Object[]{it}).iterator();\n  }\n\n","sourceOld":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    // wrap each enum val in an Object[] and return as Iterable\n    return () -> Arrays.stream(FacetField.FacetMethod.values()).map(it -> new Object[]{it}).iterator();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#parameters().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#parameters().mjava","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    // wrap each enum val in an Object[] and return as Iterable\n    return () -> Arrays.stream(FacetField.FacetMethod.values())\n        .map(it -> new Object[]{it}).iterator();\n  }\n\n","sourceOld":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    // wrap each enum val in an Object[] and return as Iterable\n    return () -> Arrays.stream(FacetField.FacetMethod.values())\n        .filter(m -> m == FacetField.FacetMethod.ENUM)\n        .map(it -> new Object[]{it}).iterator();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#parameters().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#parameters().mjava","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    // wrap each enum val in an Object[] and return as Iterable\n    return () -> Arrays.stream(FacetField.FacetMethod.values())\n        .map(it -> new Object[]{it}).iterator();\n  }\n\n","sourceOld":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    // wrap each enum val in an Object[] and return as Iterable\n    return () -> Arrays.stream(FacetField.FacetMethod.values()).map(it -> new Object[]{it}).iterator();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94ce69d020f939568b84a1dbbfbd11bfd9907b73","date":1543618146,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#parameters().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#parameters().mjava","sourceNew":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    if (null != TEST_ONLY_ONE_FACET_METHOD) {\n      return Arrays.<Object[]>asList(new Object[] { TEST_ONLY_ONE_FACET_METHOD });\n    }\n    \n    // wrap each enum val in an Object[] and return as Iterable\n    return () -> Arrays.stream(FacetField.FacetMethod.values())\n      .map(it -> new Object[]{it}).iterator();\n  }\n\n","sourceOld":"  @ParametersFactory\n  public static Iterable<Object[]> parameters() {\n    // wrap each enum val in an Object[] and return as Iterable\n    return () -> Arrays.stream(FacetField.FacetMethod.values())\n        .map(it -> new Object[]{it}).iterator();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bd6d549522dba74ecfaf6104137279c657460200":["0138536655ed6adafa2e07c09cd3c9572112922f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3661d6742eed69ff6cc30ea2538d572624a7cdf8"],"0138536655ed6adafa2e07c09cd3c9572112922f":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"3661d6742eed69ff6cc30ea2538d572624a7cdf8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bc8f206328a706450934717bec7ccc22ad166fc0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3661d6742eed69ff6cc30ea2538d572624a7cdf8"],"94ce69d020f939568b84a1dbbfbd11bfd9907b73":["28288370235ed02234a64753cdbf0c6ec096304a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","bd6d549522dba74ecfaf6104137279c657460200"],"28288370235ed02234a64753cdbf0c6ec096304a":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","bd6d549522dba74ecfaf6104137279c657460200"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","0138536655ed6adafa2e07c09cd3c9572112922f"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["94ce69d020f939568b84a1dbbfbd11bfd9907b73"]},"commit2Childs":{"bd6d549522dba74ecfaf6104137279c657460200":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"0138536655ed6adafa2e07c09cd3c9572112922f":["bd6d549522dba74ecfaf6104137279c657460200","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","3661d6742eed69ff6cc30ea2538d572624a7cdf8","bc8f206328a706450934717bec7ccc22ad166fc0","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["0138536655ed6adafa2e07c09cd3c9572112922f","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"3661d6742eed69ff6cc30ea2538d572624a7cdf8":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","bc8f206328a706450934717bec7ccc22ad166fc0"],"bc8f206328a706450934717bec7ccc22ad166fc0":[],"94ce69d020f939568b84a1dbbfbd11bfd9907b73":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["94ce69d020f939568b84a1dbbfbd11bfd9907b73"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["bc8f206328a706450934717bec7ccc22ad166fc0","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}