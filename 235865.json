{"path":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#testMissingFieldFunctionBehavior().mjava","commits":[{"id":"8495d1696be6631b1d4dbd7ea88c52ffbefba022","date":1378920924,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#testMissingFieldFunctionBehavior().mjava","pathOld":"/dev/null","sourceNew":"  public void testMissingFieldFunctionBehavior() throws Exception {\n    clearIndex();\n    // add a doc that has no values in any interesting fields\n    assertU(adoc(\"id\", \"1\"));\n    assertU(commit());\n\n    // it's important that these functions not only use fields that\n    // out doc have no values for, but also that that no other doc ever added\n    // to the index might have ever had a value for, so that the segment\n    // term metadata doesn't exist\n    \n    for (String suffix : new String[] {\"s\", \"b\", \"dt\", \"tdt\",\n                                       \"i\", \"l\", \"f\", \"d\", \n                                       \"pi\", \"pl\", \"pf\", \"pd\",\n                                       \"ti\", \"tl\", \"tf\", \"td\"    }) {\n      final String field = \"no__vals____\" + suffix;\n      assertQ(req(\"q\",\"id:1\",\n                  \"fl\",\"noval_if:if(\"+field+\",42,-99)\",\n                  \"fl\",\"noval_def:def(\"+field+\",-99)\",\n                  \"fl\",\"noval_not:not(\"+field+\")\",\n                  \"fl\",\"noval_exists:exists(\"+field+\")\"),\n              \"//long[@name='noval_if']='-99'\",\n              \"//long[@name='noval_def']='-99'\",\n              \"//bool[@name='noval_not']='true'\",\n              \"//bool[@name='noval_exists']='false'\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2106271e380c198349e0f6eac0395bb462913fab","date":1397072894,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#testMissingFieldFunctionBehavior().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#testMissingFieldFunctionBehavior().mjava","sourceNew":"  public void testMissingFieldFunctionBehavior() throws Exception {\n    clearIndex();\n    // add a doc that has no values in any interesting fields\n    assertU(adoc(\"id\", \"1\"));\n    assertU(commit());\n\n    // it's important that these functions not only use fields that\n    // out doc have no values for, but also that that no other doc ever added\n    // to the index might have ever had a value for, so that the segment\n    // term metadata doesn't exist\n    \n    for (String suffix : new String[] {\"s\", \"b\", \"dt\", \"tdt\",\n                                       \"i\", \"l\", \"f\", \"d\", \n                                       \"ti\", \"tl\", \"tf\", \"td\"    }) {\n      final String field = \"no__vals____\" + suffix;\n      assertQ(req(\"q\",\"id:1\",\n                  \"fl\",\"noval_if:if(\"+field+\",42,-99)\",\n                  \"fl\",\"noval_def:def(\"+field+\",-99)\",\n                  \"fl\",\"noval_not:not(\"+field+\")\",\n                  \"fl\",\"noval_exists:exists(\"+field+\")\"),\n              \"//long[@name='noval_if']='-99'\",\n              \"//long[@name='noval_def']='-99'\",\n              \"//bool[@name='noval_not']='true'\",\n              \"//bool[@name='noval_exists']='false'\");\n    }\n  }\n\n","sourceOld":"  public void testMissingFieldFunctionBehavior() throws Exception {\n    clearIndex();\n    // add a doc that has no values in any interesting fields\n    assertU(adoc(\"id\", \"1\"));\n    assertU(commit());\n\n    // it's important that these functions not only use fields that\n    // out doc have no values for, but also that that no other doc ever added\n    // to the index might have ever had a value for, so that the segment\n    // term metadata doesn't exist\n    \n    for (String suffix : new String[] {\"s\", \"b\", \"dt\", \"tdt\",\n                                       \"i\", \"l\", \"f\", \"d\", \n                                       \"pi\", \"pl\", \"pf\", \"pd\",\n                                       \"ti\", \"tl\", \"tf\", \"td\"    }) {\n      final String field = \"no__vals____\" + suffix;\n      assertQ(req(\"q\",\"id:1\",\n                  \"fl\",\"noval_if:if(\"+field+\",42,-99)\",\n                  \"fl\",\"noval_def:def(\"+field+\",-99)\",\n                  \"fl\",\"noval_not:not(\"+field+\")\",\n                  \"fl\",\"noval_exists:exists(\"+field+\")\"),\n              \"//long[@name='noval_if']='-99'\",\n              \"//long[@name='noval_def']='-99'\",\n              \"//bool[@name='noval_not']='true'\",\n              \"//bool[@name='noval_exists']='false'\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03d1c7f08294f7d7e9ecf082aa1459f38d77f277","date":1493688929,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#testMissingFieldFunctionBehavior().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#testMissingFieldFunctionBehavior().mjava","sourceNew":"  public void testMissingFieldFunctionBehavior() throws Exception {\n    clearIndex();\n    // add a doc that has no values in any interesting fields\n    assertU(adoc(\"id\", \"1\"));\n    assertU(commit());\n\n    // it's important that these functions not only use fields that\n    // our doc has no values for, but also that no other doc ever added\n    // to the index might have ever had a value for, so that the segment\n    // term metadata doesn't exist\n    \n    for (String suffix : new String[] {\"s\", \"b\", \"dt\", \"tdt\",\n                                       \"i\", \"l\", \"f\", \"d\", \n                                       \"ti\", \"tl\", \"tf\", \"td\"    }) {\n      final String field = \"no__vals____\" + suffix;\n      assertQ(req(\"q\",\"id:1\",\n                  \"fl\",\"noval_if:if(\"+field+\",42,-99)\",\n                  \"fl\",\"noval_def:def(\"+field+\",-99)\",\n                  \"fl\",\"noval_not:not(\"+field+\")\",\n                  \"fl\",\"noval_exists:exists(\"+field+\")\"),\n              \"//long[@name='noval_if']='-99'\",\n              \"//long[@name='noval_def']='-99'\",\n              \"//bool[@name='noval_not']='true'\",\n              \"//bool[@name='noval_exists']='false'\");\n    }\n  }\n\n","sourceOld":"  public void testMissingFieldFunctionBehavior() throws Exception {\n    clearIndex();\n    // add a doc that has no values in any interesting fields\n    assertU(adoc(\"id\", \"1\"));\n    assertU(commit());\n\n    // it's important that these functions not only use fields that\n    // out doc have no values for, but also that that no other doc ever added\n    // to the index might have ever had a value for, so that the segment\n    // term metadata doesn't exist\n    \n    for (String suffix : new String[] {\"s\", \"b\", \"dt\", \"tdt\",\n                                       \"i\", \"l\", \"f\", \"d\", \n                                       \"ti\", \"tl\", \"tf\", \"td\"    }) {\n      final String field = \"no__vals____\" + suffix;\n      assertQ(req(\"q\",\"id:1\",\n                  \"fl\",\"noval_if:if(\"+field+\",42,-99)\",\n                  \"fl\",\"noval_def:def(\"+field+\",-99)\",\n                  \"fl\",\"noval_not:not(\"+field+\")\",\n                  \"fl\",\"noval_exists:exists(\"+field+\")\"),\n              \"//long[@name='noval_if']='-99'\",\n              \"//long[@name='noval_def']='-99'\",\n              \"//bool[@name='noval_not']='true'\",\n              \"//bool[@name='noval_exists']='false'\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#testMissingFieldFunctionBehavior().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#testMissingFieldFunctionBehavior().mjava","sourceNew":"  public void testMissingFieldFunctionBehavior() throws Exception {\n    clearIndex();\n    // add a doc that has no values in any interesting fields\n    assertU(adoc(\"id\", \"1\"));\n    assertU(commit());\n\n    // it's important that these functions not only use fields that\n    // our doc has no values for, but also that no other doc ever added\n    // to the index might have ever had a value for, so that the segment\n    // term metadata doesn't exist\n    \n    for (String suffix : new String[] {\"s\", \"b\", \"dt\", \"tdt\",\n                                       \"i\", \"l\", \"f\", \"d\", \n                                       \"ti\", \"tl\", \"tf\", \"td\"    }) {\n      final String field = \"no__vals____\" + suffix;\n      assertQ(req(\"q\",\"id:1\",\n                  \"fl\",\"noval_if:if(\"+field+\",42,-99)\",\n                  \"fl\",\"noval_def:def(\"+field+\",-99)\",\n                  \"fl\",\"noval_not:not(\"+field+\")\",\n                  \"fl\",\"noval_exists:exists(\"+field+\")\"),\n              \"//long[@name='noval_if']='-99'\",\n              \"//long[@name='noval_def']='-99'\",\n              \"//bool[@name='noval_not']='true'\",\n              \"//bool[@name='noval_exists']='false'\");\n    }\n  }\n\n","sourceOld":"  public void testMissingFieldFunctionBehavior() throws Exception {\n    clearIndex();\n    // add a doc that has no values in any interesting fields\n    assertU(adoc(\"id\", \"1\"));\n    assertU(commit());\n\n    // it's important that these functions not only use fields that\n    // out doc have no values for, but also that that no other doc ever added\n    // to the index might have ever had a value for, so that the segment\n    // term metadata doesn't exist\n    \n    for (String suffix : new String[] {\"s\", \"b\", \"dt\", \"tdt\",\n                                       \"i\", \"l\", \"f\", \"d\", \n                                       \"ti\", \"tl\", \"tf\", \"td\"    }) {\n      final String field = \"no__vals____\" + suffix;\n      assertQ(req(\"q\",\"id:1\",\n                  \"fl\",\"noval_if:if(\"+field+\",42,-99)\",\n                  \"fl\",\"noval_def:def(\"+field+\",-99)\",\n                  \"fl\",\"noval_not:not(\"+field+\")\",\n                  \"fl\",\"noval_exists:exists(\"+field+\")\"),\n              \"//long[@name='noval_if']='-99'\",\n              \"//long[@name='noval_def']='-99'\",\n              \"//bool[@name='noval_not']='true'\",\n              \"//bool[@name='noval_exists']='false'\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ce7dfc22caf6e50ab1097d37e7d3bcd9990aa1b","date":1509468032,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#testMissingFieldFunctionBehavior().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#testMissingFieldFunctionBehavior().mjava","sourceNew":"  @Test\n  public void testMissingFieldFunctionBehavior() throws Exception {\n    clearIndex();\n    // add a doc that has no values in any interesting fields\n    assertU(adoc(\"id\", \"1\"));\n    assertU(commit());\n\n    // it's important that these functions not only use fields that\n    // our doc has no values for, but also that no other doc ever added\n    // to the index might have ever had a value for, so that the segment\n    // term metadata doesn't exist\n    \n    for (String suffix : new String[] {\"s\", \"b\", \"dt\", \"tdt\",\n                                       \"i\", \"l\", \"f\", \"d\", \n                                       \"ti\", \"tl\", \"tf\", \"td\"    }) {\n      final String field = \"no__vals____\" + suffix;\n      assertQ(req(\"q\",\"id:1\",\n                  \"fl\",\"noval_if:if(\"+field+\",42,-99)\",\n                  \"fl\",\"noval_def:def(\"+field+\",-99)\",\n                  \"fl\",\"noval_not:not(\"+field+\")\",\n                  \"fl\",\"noval_exists:exists(\"+field+\")\"),\n              \"//long[@name='noval_if']='-99'\",\n              \"//long[@name='noval_def']='-99'\",\n              \"//bool[@name='noval_not']='true'\",\n              \"//bool[@name='noval_exists']='false'\");\n    }\n  }\n\n","sourceOld":"  public void testMissingFieldFunctionBehavior() throws Exception {\n    clearIndex();\n    // add a doc that has no values in any interesting fields\n    assertU(adoc(\"id\", \"1\"));\n    assertU(commit());\n\n    // it's important that these functions not only use fields that\n    // our doc has no values for, but also that no other doc ever added\n    // to the index might have ever had a value for, so that the segment\n    // term metadata doesn't exist\n    \n    for (String suffix : new String[] {\"s\", \"b\", \"dt\", \"tdt\",\n                                       \"i\", \"l\", \"f\", \"d\", \n                                       \"ti\", \"tl\", \"tf\", \"td\"    }) {\n      final String field = \"no__vals____\" + suffix;\n      assertQ(req(\"q\",\"id:1\",\n                  \"fl\",\"noval_if:if(\"+field+\",42,-99)\",\n                  \"fl\",\"noval_def:def(\"+field+\",-99)\",\n                  \"fl\",\"noval_not:not(\"+field+\")\",\n                  \"fl\",\"noval_exists:exists(\"+field+\")\"),\n              \"//long[@name='noval_if']='-99'\",\n              \"//long[@name='noval_def']='-99'\",\n              \"//bool[@name='noval_not']='true'\",\n              \"//bool[@name='noval_exists']='false'\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["2106271e380c198349e0f6eac0395bb462913fab","03d1c7f08294f7d7e9ecf082aa1459f38d77f277"],"8495d1696be6631b1d4dbd7ea88c52ffbefba022":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2106271e380c198349e0f6eac0395bb462913fab":["8495d1696be6631b1d4dbd7ea88c52ffbefba022"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1ce7dfc22caf6e50ab1097d37e7d3bcd9990aa1b":["03d1c7f08294f7d7e9ecf082aa1459f38d77f277"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1ce7dfc22caf6e50ab1097d37e7d3bcd9990aa1b"],"03d1c7f08294f7d7e9ecf082aa1459f38d77f277":["2106271e380c198349e0f6eac0395bb462913fab"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"8495d1696be6631b1d4dbd7ea88c52ffbefba022":["2106271e380c198349e0f6eac0395bb462913fab"],"2106271e380c198349e0f6eac0395bb462913fab":["e9017cf144952056066919f1ebc7897ff9bd71b1","03d1c7f08294f7d7e9ecf082aa1459f38d77f277"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8495d1696be6631b1d4dbd7ea88c52ffbefba022"],"1ce7dfc22caf6e50ab1097d37e7d3bcd9990aa1b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"03d1c7f08294f7d7e9ecf082aa1459f38d77f277":["e9017cf144952056066919f1ebc7897ff9bd71b1","1ce7dfc22caf6e50ab1097d37e7d3bcd9990aa1b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}