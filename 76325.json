{"path":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[],int[],QueryRelation).mjava","commits":[{"id":"c286b0d8c507a88b289407e2fe161effa275c6b0","date":1562615977,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[],int[],QueryRelation).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[],int[],LatLonShape.QueryRelation).mjava","sourceNew":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t, int[] scratchTriangle, QueryRelation queryRelation) {\n    // decode indexed triangle\n    ShapeField.decodeTriangle(t, scratchTriangle);\n\n    int aY = scratchTriangle[0];\n    int aX = scratchTriangle[1];\n    int bY = scratchTriangle[2];\n    int bX = scratchTriangle[3];\n    int cY = scratchTriangle[4];\n    int cX = scratchTriangle[5];\n\n    if (queryRelation == QueryRelation.WITHIN) {\n      return rectangle2D.containsTriangle(aX, aY, bX, bY, cX, cY);\n    }\n    return rectangle2D.intersectsTriangle(aX, aY, bX, bY, cX, cY);\n  }\n\n","sourceOld":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t, int[] scratchTriangle, LatLonShape.QueryRelation queryRelation) {\n    // decode indexed triangle\n    LatLonShape.decodeTriangle(t, scratchTriangle);\n\n    int aY = scratchTriangle[0];\n    int aX = scratchTriangle[1];\n    int bY = scratchTriangle[2];\n    int bX = scratchTriangle[3];\n    int cY = scratchTriangle[4];\n    int cX = scratchTriangle[5];\n\n    if (queryRelation == LatLonShape.QueryRelation.WITHIN) {\n      return rectangle2D.containsTriangle(aX, aY, bX, bY, cX, cY);\n    }\n    return rectangle2D.intersectsTriangle(aX, aY, bX, bY, cX, cY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ed90f8ba7e7be13d155f954862178b23a324125","date":1568020603,"type":5,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[],ShapeField.DecodedTriangle,QueryRelation).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[],int[],QueryRelation).mjava","sourceNew":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t, ShapeField.DecodedTriangle scratchTriangle, QueryRelation queryRelation) {\n    // decode indexed triangle\n    ShapeField.decodeTriangle(t, scratchTriangle);\n\n    int aY = scratchTriangle.aY;\n    int aX = scratchTriangle.aX;\n    int bY = scratchTriangle.bY;\n    int bX = scratchTriangle.bX;\n    int cY = scratchTriangle.cY;\n    int cX = scratchTriangle.cX;\n\n    if (queryRelation == QueryRelation.WITHIN) {\n      return rectangle2D.containsTriangle(aX, aY, bX, bY, cX, cY);\n    }\n    return rectangle2D.intersectsTriangle(aX, aY, bX, bY, cX, cY);\n  }\n\n","sourceOld":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t, int[] scratchTriangle, QueryRelation queryRelation) {\n    // decode indexed triangle\n    ShapeField.decodeTriangle(t, scratchTriangle);\n\n    int aY = scratchTriangle[0];\n    int aX = scratchTriangle[1];\n    int bY = scratchTriangle[2];\n    int bX = scratchTriangle[3];\n    int cY = scratchTriangle[4];\n    int cX = scratchTriangle[5];\n\n    if (queryRelation == QueryRelation.WITHIN) {\n      return rectangle2D.containsTriangle(aX, aY, bX, bY, cX, cY);\n    }\n    return rectangle2D.intersectsTriangle(aX, aY, bX, bY, cX, cY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ed90f8ba7e7be13d155f954862178b23a324125","date":1568020603,"type":6,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/XYShapeBoundingBoxQuery#queryMatches(byte[],ShapeField.DecodedTriangle,QueryRelation).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[],int[],QueryRelation).mjava","sourceNew":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t, ShapeField.DecodedTriangle scratchTriangle, QueryRelation queryRelation) {\n    // decode indexed triangle\n    ShapeField.decodeTriangle(t, scratchTriangle);\n\n    int aY = scratchTriangle.aY;\n    int aX = scratchTriangle.aX;\n    int bY = scratchTriangle.bY;\n    int bX = scratchTriangle.bX;\n    int cY = scratchTriangle.cY;\n    int cX = scratchTriangle.cX;\n\n    if (queryRelation == QueryRelation.WITHIN) {\n      return rectangle2D.containsTriangle(aX, aY, bX, bY, cX, cY);\n    }\n    return rectangle2D.intersectsTriangle(aX, aY, bX, bY, cX, cY);\n  }\n\n","sourceOld":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t, int[] scratchTriangle, QueryRelation queryRelation) {\n    // decode indexed triangle\n    ShapeField.decodeTriangle(t, scratchTriangle);\n\n    int aY = scratchTriangle[0];\n    int aX = scratchTriangle[1];\n    int bY = scratchTriangle[2];\n    int bX = scratchTriangle[3];\n    int cY = scratchTriangle[4];\n    int cX = scratchTriangle[5];\n\n    if (queryRelation == QueryRelation.WITHIN) {\n      return rectangle2D.containsTriangle(aX, aY, bX, bY, cX, cY);\n    }\n    return rectangle2D.intersectsTriangle(aX, aY, bX, bY, cX, cY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c286b0d8c507a88b289407e2fe161effa275c6b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5ed90f8ba7e7be13d155f954862178b23a324125":["c286b0d8c507a88b289407e2fe161effa275c6b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5ed90f8ba7e7be13d155f954862178b23a324125"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c286b0d8c507a88b289407e2fe161effa275c6b0"],"c286b0d8c507a88b289407e2fe161effa275c6b0":["5ed90f8ba7e7be13d155f954862178b23a324125"],"5ed90f8ba7e7be13d155f954862178b23a324125":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}