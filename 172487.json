{"path":"lucene/src/java/org/apache/lucene/search/similarities/BM25Similarity#idfExplain(CollectionStatistics,TermStatistics).mjava","commits":[{"id":"9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d","date":1320398636,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/similarities/BM25Similarity#idfExplain(CollectionStatistics,TermStatistics).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/BM25Similarity#idfExplain(TermContext,IndexSearcher).mjava","sourceNew":"  public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats) {\n    final int df = termStats.docFreq();\n    final int max = collectionStats.maxDoc();\n    final float idf = idf(df, max);\n    return new Explanation(idf, \"idf(docFreq=\" + df + \", maxDocs=\" + max + \")\");\n  }\n\n","sourceOld":"  public Explanation idfExplain(TermContext stats, final IndexSearcher searcher) throws IOException {\n    final int df = stats.docFreq();\n    final int max = searcher.maxDoc();\n    final float idf = idf(df, max);\n    return new Explanation(idf, \"idf(docFreq=\" + df + \", maxDocs=\" + max + \")\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64aaeb7d6606aeec15dd381453d66caedda7888b","date":1327669445,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/similarities/BM25Similarity#idfExplain(CollectionStatistics,TermStatistics).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/BM25Similarity#idfExplain(CollectionStatistics,TermStatistics).mjava","sourceNew":"  public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats) {\n    final long df = termStats.docFreq();\n    final long max = collectionStats.maxDoc();\n    final float idf = idf(df, max);\n    return new Explanation(idf, \"idf(docFreq=\" + df + \", maxDocs=\" + max + \")\");\n  }\n\n","sourceOld":"  public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats) {\n    final int df = termStats.docFreq();\n    final int max = collectionStats.maxDoc();\n    final float idf = idf(df, max);\n    return new Explanation(idf, \"idf(docFreq=\" + df + \", maxDocs=\" + max + \")\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78a55f24d9b493c2a1cecf79f1d78279062b545b","date":1327688152,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/similarities/BM25Similarity#idfExplain(CollectionStatistics,TermStatistics).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/BM25Similarity#idfExplain(CollectionStatistics,TermStatistics).mjava","sourceNew":"  public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats) {\n    final long df = termStats.docFreq();\n    final long max = collectionStats.maxDoc();\n    final float idf = idf(df, max);\n    return new Explanation(idf, \"idf(docFreq=\" + df + \", maxDocs=\" + max + \")\");\n  }\n\n","sourceOld":"  public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats) {\n    final int df = termStats.docFreq();\n    final int max = collectionStats.maxDoc();\n    final float idf = idf(df, max);\n    return new Explanation(idf, \"idf(docFreq=\" + df + \", maxDocs=\" + max + \")\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd92b8bcc88e969302510acf77bd6970da3994c4","date":1327839530,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/similarities/BM25Similarity#idfExplain(CollectionStatistics,TermStatistics).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/BM25Similarity#idfExplain(CollectionStatistics,TermStatistics).mjava","sourceNew":"  public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats) {\n    final long df = termStats.docFreq();\n    final long max = collectionStats.maxDoc();\n    final float idf = idf(df, max);\n    return new Explanation(idf, \"idf(docFreq=\" + df + \", maxDocs=\" + max + \")\");\n  }\n\n","sourceOld":"  public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats) {\n    final int df = termStats.docFreq();\n    final int max = collectionStats.maxDoc();\n    final float idf = idf(df, max);\n    return new Explanation(idf, \"idf(docFreq=\" + df + \", maxDocs=\" + max + \")\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#idfExplain(CollectionStatistics,TermStatistics).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/similarities/BM25Similarity#idfExplain(CollectionStatistics,TermStatistics).mjava","sourceNew":"  public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats) {\n    final long df = termStats.docFreq();\n    final long max = collectionStats.maxDoc();\n    final float idf = idf(df, max);\n    return new Explanation(idf, \"idf(docFreq=\" + df + \", maxDocs=\" + max + \")\");\n  }\n\n","sourceOld":"  public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats) {\n    final long df = termStats.docFreq();\n    final long max = collectionStats.maxDoc();\n    final float idf = idf(df, max);\n    return new Explanation(idf, \"idf(docFreq=\" + df + \", maxDocs=\" + max + \")\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"78a55f24d9b493c2a1cecf79f1d78279062b545b":["9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d","64aaeb7d6606aeec15dd381453d66caedda7888b"],"64aaeb7d6606aeec15dd381453d66caedda7888b":["9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d"],"9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["64aaeb7d6606aeec15dd381453d66caedda7888b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd92b8bcc88e969302510acf77bd6970da3994c4":["9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d","64aaeb7d6606aeec15dd381453d66caedda7888b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"78a55f24d9b493c2a1cecf79f1d78279062b545b":[],"64aaeb7d6606aeec15dd381453d66caedda7888b":["78a55f24d9b493c2a1cecf79f1d78279062b545b","3a119bbc8703c10faa329ec201c654b3a35a1e3e","fd92b8bcc88e969302510acf77bd6970da3994c4"],"9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d":["78a55f24d9b493c2a1cecf79f1d78279062b545b","64aaeb7d6606aeec15dd381453d66caedda7888b","fd92b8bcc88e969302510acf77bd6970da3994c4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d"],"fd92b8bcc88e969302510acf77bd6970da3994c4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["78a55f24d9b493c2a1cecf79f1d78279062b545b","fd92b8bcc88e969302510acf77bd6970da3994c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}