{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Lookup#build(Dictionary).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Lookup#build(Dictionary).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/Lookup#build(Dictionary).mjava","sourceNew":"  /** Build lookup from a dictionary. Some implementations may require sorted\n   * or unsorted keys from the dictionary's iterator - use\n   * {@link SortedTermFreqIteratorWrapper} or\n   * {@link UnsortedTermFreqIteratorWrapper} in such case.\n   */\n  public void build(Dictionary dict) throws IOException {\n    BytesRefIterator it = dict.getWordsIterator();\n    TermFreqIterator tfit;\n    if (it instanceof TermFreqIterator) {\n      tfit = (TermFreqIterator)it;\n    } else {\n      tfit = new TermFreqIterator.TermFreqIteratorWrapper(it);\n    }\n    build(tfit);\n  }\n\n","sourceOld":"  /** Build lookup from a dictionary. Some implementations may require sorted\n   * or unsorted keys from the dictionary's iterator - use\n   * {@link SortedTermFreqIteratorWrapper} or\n   * {@link UnsortedTermFreqIteratorWrapper} in such case.\n   */\n  public void build(Dictionary dict) throws IOException {\n    BytesRefIterator it = dict.getWordsIterator();\n    TermFreqIterator tfit;\n    if (it instanceof TermFreqIterator) {\n      tfit = (TermFreqIterator)it;\n    } else {\n      tfit = new TermFreqIterator.TermFreqIteratorWrapper(it);\n    }\n    build(tfit);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ada2f7352a7f964fe49bccd13227c4ec38563d39","date":1381659982,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Lookup#build(Dictionary).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Lookup#build(Dictionary).mjava","sourceNew":"  /** Build lookup from a dictionary. Some implementations may require sorted\n   * or unsorted keys from the dictionary's iterator - use\n   * {@link SortedTermFreqPayloadIteratorWrapper} or\n   * {@link UnsortedTermFreqPayloadIteratorWrapper} in such case.\n   */\n  public void build(Dictionary dict) throws IOException {\n    BytesRefIterator it = dict.getWordsIterator();\n    TermFreqPayloadIterator tfit;\n    if (it instanceof TermFreqPayloadIterator) {\n      tfit = (TermFreqPayloadIterator)it;\n    } else {\n      tfit = new TermFreqPayloadIterator.TermFreqPayloadIteratorWrapper(it);\n    }\n    build(tfit);\n  }\n\n","sourceOld":"  /** Build lookup from a dictionary. Some implementations may require sorted\n   * or unsorted keys from the dictionary's iterator - use\n   * {@link SortedTermFreqIteratorWrapper} or\n   * {@link UnsortedTermFreqIteratorWrapper} in such case.\n   */\n  public void build(Dictionary dict) throws IOException {\n    BytesRefIterator it = dict.getWordsIterator();\n    TermFreqIterator tfit;\n    if (it instanceof TermFreqIterator) {\n      tfit = (TermFreqIterator)it;\n    } else {\n      tfit = new TermFreqIterator.TermFreqIteratorWrapper(it);\n    }\n    build(tfit);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41aee74b5f91a096e3fd950f4a336bc763f0e7a7","date":1381772070,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Lookup#build(Dictionary).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Lookup#build(Dictionary).mjava","sourceNew":"  /** Build lookup from a dictionary. Some implementations may require sorted\n   * or unsorted keys from the dictionary's iterator - use\n   * {@link SortedInputIterator} or\n   * {@link UnsortedInputIterator} in such case.\n   */\n  public void build(Dictionary dict) throws IOException {\n    BytesRefIterator it = dict.getWordsIterator();\n    InputIterator tfit;\n    if (it instanceof InputIterator) {\n      tfit = (InputIterator)it;\n    } else {\n      tfit = new InputIterator.InputIteratorWrapper(it);\n    }\n    build(tfit);\n  }\n\n","sourceOld":"  /** Build lookup from a dictionary. Some implementations may require sorted\n   * or unsorted keys from the dictionary's iterator - use\n   * {@link SortedTermFreqPayloadIteratorWrapper} or\n   * {@link UnsortedTermFreqPayloadIteratorWrapper} in such case.\n   */\n  public void build(Dictionary dict) throws IOException {\n    BytesRefIterator it = dict.getWordsIterator();\n    TermFreqPayloadIterator tfit;\n    if (it instanceof TermFreqPayloadIterator) {\n      tfit = (TermFreqPayloadIterator)it;\n    } else {\n      tfit = new TermFreqPayloadIterator.TermFreqPayloadIteratorWrapper(it);\n    }\n    build(tfit);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a645276cbaf5dc96a42fd473b9019bde352996c8","date":1391806699,"type":3,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Lookup#build(Dictionary).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Lookup#build(Dictionary).mjava","sourceNew":"  /** Build lookup from a dictionary. Some implementations may require sorted\n   * or unsorted keys from the dictionary's iterator - use\n   * {@link SortedInputIterator} or\n   * {@link UnsortedInputIterator} in such case.\n   */\n  public void build(Dictionary dict) throws IOException {\n    build(dict.getEntryIterator());\n  }\n\n","sourceOld":"  /** Build lookup from a dictionary. Some implementations may require sorted\n   * or unsorted keys from the dictionary's iterator - use\n   * {@link SortedInputIterator} or\n   * {@link UnsortedInputIterator} in such case.\n   */\n  public void build(Dictionary dict) throws IOException {\n    BytesRefIterator it = dict.getWordsIterator();\n    InputIterator tfit;\n    if (it instanceof InputIterator) {\n      tfit = (InputIterator)it;\n    } else {\n      tfit = new InputIterator.InputIteratorWrapper(it);\n    }\n    build(tfit);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a645276cbaf5dc96a42fd473b9019bde352996c8":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a645276cbaf5dc96a42fd473b9019bde352996c8"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["a645276cbaf5dc96a42fd473b9019bde352996c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a645276cbaf5dc96a42fd473b9019bde352996c8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}