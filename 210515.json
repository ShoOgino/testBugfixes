{"path":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","pathOld":"/dev/null","sourceNew":"    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      this.abortOnConfigurationError = abortOnConfigurationError;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","sourceNew":null,"sourceOld":"    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      this.abortOnConfigurationError = abortOnConfigurationError;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","pathOld":"src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","sourceNew":"    /** Note for no good reason what so ever, this method has only ever\n     * influenced the default behavior of \"single core\" mode.  when using\n     * solr.xml values specified this way are ignored, and false is the default.\n     * initialize() will modify this value.\n     */\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      this.abortOnConfigurationError = abortOnConfigurationError;\n    }\n\n","sourceOld":"    /** Note for no good reason what so ever, this method has only ever\n     * influenced the default behavior of \"single core\" mode.  when using\n     * solr.xml values specified this way are ignored, and false is the default.\n     * initialize() will modify this value.\n     */\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      this.abortOnConfigurationError = abortOnConfigurationError;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","pathOld":"/dev/null","sourceNew":"    /** Note for no good reason what so ever, this method has only ever\n     * influenced the default behavior of \"single core\" mode.  when using\n     * solr.xml values specified this way are ignored, and false is the default.\n     * initialize() will modify this value.\n     */\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      this.abortOnConfigurationError = abortOnConfigurationError;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0aea57ab530d174e645bf6e14d04db1e243e13d7","date":1274216848,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","sourceNew":"    /**\n     * @exception generates an error if you attempt to set this value to false\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","sourceOld":"    /** Note for no good reason what so ever, this method has only ever\n     * influenced the default behavior of \"single core\" mode.  when using\n     * solr.xml values specified this way are ignored, and false is the default.\n     * initialize() will modify this value.\n     */\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      this.abortOnConfigurationError = abortOnConfigurationError;\n    }\n\n","bugFix":["e90d4b14ac52c437faaf05e0b0523f83bc4cf65f","4926b5318ba4167d360445a0c5f3fc8af2cf8c49"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f7e3e91f914e6265ed09a3208cc60c9ba2a477d","date":1286157263,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","sourceNew":"    /**\n     * @exception generates an error if you attempt to set this value to false\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","sourceOld":"    /**\n     * @exception generates an error if you attempt to set this value to false\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","sourceNew":"    /**\n     * @exception generates an error if you attempt to set this value to false\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","sourceOld":"    /**\n     * @exception generates an error if you attempt to set this value to false\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","sourceNew":"    /**\n     * @exception generates an error if you attempt to set this value to false\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","sourceOld":"    /**\n     * @exception generates an error if you attempt to set this value to false\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","sourceNew":"    /**\n     * @exception generates an error if you attempt to set this value to false\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","sourceOld":"    /**\n     * @exception generates an error if you attempt to set this value to false\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#setAbortOnConfigurationError(boolean).mjava","sourceNew":"    /**\n     * @exception generates an error if you attempt to set this value to false\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","sourceOld":"    /**\n     * @exception generates an error if you attempt to set this value to false\n     * @deprecated all cores now abort on configuration error regardless of configuration\n     */\n    @Deprecated\n    public void setAbortOnConfigurationError(boolean abortOnConfigurationError) {\n      if (false == abortOnConfigurationError)\n        throw new SolrException\n          (SolrException.ErrorCode.SERVER_ERROR,\n           \"Setting abortOnConfigurationError==false is no longer supported\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f7e3e91f914e6265ed09a3208cc60c9ba2a477d":["0aea57ab530d174e645bf6e14d04db1e243e13d7"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["3f7e3e91f914e6265ed09a3208cc60c9ba2a477d","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["0aea57ab530d174e645bf6e14d04db1e243e13d7","3f7e3e91f914e6265ed09a3208cc60c9ba2a477d"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"0aea57ab530d174e645bf6e14d04db1e243e13d7":["1da8d55113b689b06716246649de6f62430f15c0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["3f7e3e91f914e6265ed09a3208cc60c9ba2a477d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["3f7e3e91f914e6265ed09a3208cc60c9ba2a477d"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"3f7e3e91f914e6265ed09a3208cc60c9ba2a477d":["c26f00b574427b55127e869b935845554afde1fa","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"1da8d55113b689b06716246649de6f62430f15c0":["0aea57ab530d174e645bf6e14d04db1e243e13d7"],"0aea57ab530d174e645bf6e14d04db1e243e13d7":["3f7e3e91f914e6265ed09a3208cc60c9ba2a477d","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}