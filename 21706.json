{"path":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTreeTermsWriter.PendingBlock#append(Builder[BytesRef],FST[BytesRef]).mjava","commits":[{"id":"6d01ed6d1df51191983f4dd157aedf5f4650e2b3","date":1376572546,"type":1,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTreeTermsWriter.PendingBlock#append(Builder[BytesRef],FST[BytesRef]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTermsWriter.PendingBlock#append(Builder[BytesRef],FST[BytesRef]).mjava","sourceNew":"    // TODO: maybe we could add bulk-add method to\n    // Builder?  Takes FST and unions it w/ current\n    // FST.\n    private void append(Builder<BytesRef> builder, FST<BytesRef> subIndex) throws IOException {\n      final BytesRefFSTEnum<BytesRef> subIndexEnum = new BytesRefFSTEnum<BytesRef>(subIndex);\n      BytesRefFSTEnum.InputOutput<BytesRef> indexEnt;\n      while((indexEnt = subIndexEnum.next()) != null) {\n        //if (DEBUG) {\n        //  System.out.println(\"      add sub=\" + indexEnt.input + \" \" + indexEnt.input + \" output=\" + indexEnt.output);\n        //}\n        builder.add(Util.toIntsRef(indexEnt.input, scratchIntsRef), indexEnt.output);\n      }\n    }\n\n","sourceOld":"    // TODO: maybe we could add bulk-add method to\n    // Builder?  Takes FST and unions it w/ current\n    // FST.\n    private void append(Builder<BytesRef> builder, FST<BytesRef> subIndex) throws IOException {\n      final BytesRefFSTEnum<BytesRef> subIndexEnum = new BytesRefFSTEnum<BytesRef>(subIndex);\n      BytesRefFSTEnum.InputOutput<BytesRef> indexEnt;\n      while((indexEnt = subIndexEnum.next()) != null) {\n        //if (DEBUG) {\n        //  System.out.println(\"      add sub=\" + indexEnt.input + \" \" + indexEnt.input + \" output=\" + indexEnt.output);\n        //}\n        builder.add(Util.toIntsRef(indexEnt.input, scratchIntsRef), indexEnt.output);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTreeTermsWriter.PendingBlock#append(Builder[BytesRef],FST[BytesRef]).mjava","sourceNew":null,"sourceOld":"    // TODO: maybe we could add bulk-add method to\n    // Builder?  Takes FST and unions it w/ current\n    // FST.\n    private void append(Builder<BytesRef> builder, FST<BytesRef> subIndex) throws IOException {\n      final BytesRefFSTEnum<BytesRef> subIndexEnum = new BytesRefFSTEnum<BytesRef>(subIndex);\n      BytesRefFSTEnum.InputOutput<BytesRef> indexEnt;\n      while((indexEnt = subIndexEnum.next()) != null) {\n        //if (DEBUG) {\n        //  System.out.println(\"      add sub=\" + indexEnt.input + \" \" + indexEnt.input + \" output=\" + indexEnt.output);\n        //}\n        builder.add(Util.toIntsRef(indexEnt.input, scratchIntsRef), indexEnt.output);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["6d01ed6d1df51191983f4dd157aedf5f4650e2b3"],"6d01ed6d1df51191983f4dd157aedf5f4650e2b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6d01ed6d1df51191983f4dd157aedf5f4650e2b3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"6d01ed6d1df51191983f4dd157aedf5f4650e2b3":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}