{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageCoreController#forceWrite().mjava","commits":[{"id":"5d43e216d757e2276d180eba8a192e300c4bfadb","date":1149717385,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageCoreController#forceWrite().mjava","pathOld":"/dev/null","sourceNew":"    /** \n     * @throws IOException \n     * @throws StorageException \n     */ \n    public void forceWrite()throws IOException, StorageException{ \n        this.modifier.forceWrite(); \n    } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52754a40a1550056d5637c8992b4076b5ed77328","date":1151345693,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageCoreController#forceWrite().mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageCoreController#forceWrite().mjava","sourceNew":"    /**\n     * Forces the StorageModifier to write all buffered changes.\n     * \n     * @throws IOException -\n     *             if an IO exception occures\n     * \n     */\n    public void forceWrite() throws IOException {\n        this.modifier.forceWrite();\n    }\n\n","sourceOld":"    /** \n     * @throws IOException \n     * @throws StorageException \n     */ \n    public void forceWrite()throws IOException, StorageException{ \n        this.modifier.forceWrite(); \n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02a7f04a7293ea604e17892ba0bded7341adf3af","date":1151695892,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageCoreController#forceWrite().mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageCoreController#forceWrite().mjava","sourceNew":"    /**\n     * Forces the StorageModifier to write all buffered changes.\n     * \n     * @throws IOException -\n     *             if an IO exception occures\n     * \n     */\n    public void forceWrite() throws IOException {\n    \tif(this.isClosed.get())\n    \t\tthrow new IllegalStateException(\"StorageController is already closed -- server is shutting down\");\n        this.modifier.forceWrite();\n    }\n\n","sourceOld":"    /**\n     * Forces the StorageModifier to write all buffered changes.\n     * \n     * @throws IOException -\n     *             if an IO exception occures\n     * \n     */\n    public void forceWrite() throws IOException {\n        this.modifier.forceWrite();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09fe963da2613c724ffe82353b4ca2364a1f93c6","date":1155249160,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageCoreController#forceWrite().mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageCoreController#forceWrite().mjava","sourceNew":"    /**\n     * Forces the StorageModifier to write all buffered changes.\n     * \n     * @throws IOException -\n     *             if an IO exception occurs\n     * \n     */\n    public void forceWrite() throws IOException {\n    \tif(this.isClosed.get())\n    \t\tthrow new IllegalStateException(\"StorageController is already closed -- server is shutting down\");\n        this.modifier.forceWrite();\n    }\n\n","sourceOld":"    /**\n     * Forces the StorageModifier to write all buffered changes.\n     * \n     * @throws IOException -\n     *             if an IO exception occures\n     * \n     */\n    public void forceWrite() throws IOException {\n    \tif(this.isClosed.get())\n    \t\tthrow new IllegalStateException(\"StorageController is already closed -- server is shutting down\");\n        this.modifier.forceWrite();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/lucenestorage/StorageCoreController#forceWrite().mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageCoreController#forceWrite().mjava","sourceNew":"    /**\n     * Forces the StorageModifier to write all buffered changes.\n     * \n     * @throws IOException -\n     *             if an IO exception occurs\n     * \n     */\n    public void forceWrite() throws IOException {\n    \tif(this.isClosed.get())\n    \t\tthrow new IllegalStateException(\"StorageController is already closed -- server is shutting down\");\n        this.modifier.forceWrite();\n    }\n\n","sourceOld":"    /**\n     * Forces the StorageModifier to write all buffered changes.\n     * \n     * @throws IOException -\n     *             if an IO exception occurs\n     * \n     */\n    public void forceWrite() throws IOException {\n    \tif(this.isClosed.get())\n    \t\tthrow new IllegalStateException(\"StorageController is already closed -- server is shutting down\");\n        this.modifier.forceWrite();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"02a7f04a7293ea604e17892ba0bded7341adf3af":["52754a40a1550056d5637c8992b4076b5ed77328"],"09fe963da2613c724ffe82353b4ca2364a1f93c6":["02a7f04a7293ea604e17892ba0bded7341adf3af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"52754a40a1550056d5637c8992b4076b5ed77328":["5d43e216d757e2276d180eba8a192e300c4bfadb"]},"commit2Childs":{"02a7f04a7293ea604e17892ba0bded7341adf3af":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"09fe963da2613c724ffe82353b4ca2364a1f93c6":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d43e216d757e2276d180eba8a192e300c4bfadb"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["52754a40a1550056d5637c8992b4076b5ed77328"],"52754a40a1550056d5637c8992b4076b5ed77328":["02a7f04a7293ea604e17892ba0bded7341adf3af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}