{"path":"lucene/facet/src/java/org/apache/lucene/facet/index/params/PerDimensionIndexingParams#getAllCategoryListParams().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/PerDimensionIndexingParams#getAllCategoryListParams().mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/index/params/PerDimensionIndexingParams#getAllCategoryListParams().mjava","sourceNew":"  /**\n   * Get all the categoryListParams, including the default.\n   */\n  @Override\n  public Iterable<CategoryListParams> getAllCategoryListParams() {\n    ArrayList<CategoryListParams> vals = \n      new ArrayList<CategoryListParams>(clParamsMap.values());\n    for (CategoryListParams clp : super.getAllCategoryListParams()) {\n      vals.add(clp);\n    }\n    return vals;\n  }\n\n","sourceOld":"  /**\n   * Get all the categoryListParams, including the default.\n   */\n  @Override\n  public Iterable<CategoryListParams> getAllCategoryListParams() {\n    ArrayList<CategoryListParams> vals = \n      new ArrayList<CategoryListParams>(clParamsMap.values());\n    for (CategoryListParams clp : super.getAllCategoryListParams()) {\n      vals.add(clp);\n    }\n    return vals;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4c6c7f3cda7a0595cabd16e5e9107ca29852708","date":1355402234,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/PerDimensionIndexingParams#getAllCategoryListParams().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/PerDimensionIndexingParams#getAllCategoryListParams().mjava","sourceNew":"  @Override\n  public List<CategoryListParams> getAllCategoryListParams() {\n    ArrayList<CategoryListParams> vals = new ArrayList<CategoryListParams>(clParamsMap.values());\n    vals.add(clParams); // add the default too\n    return vals;\n  }\n\n","sourceOld":"  /**\n   * Get all the categoryListParams, including the default.\n   */\n  @Override\n  public Iterable<CategoryListParams> getAllCategoryListParams() {\n    ArrayList<CategoryListParams> vals = \n      new ArrayList<CategoryListParams>(clParamsMap.values());\n    for (CategoryListParams clp : super.getAllCategoryListParams()) {\n      vals.add(clp);\n    }\n    return vals;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/PerDimensionIndexingParams#getAllCategoryListParams().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/PerDimensionIndexingParams#getAllCategoryListParams().mjava","sourceNew":"  @Override\n  public List<CategoryListParams> getAllCategoryListParams() {\n    ArrayList<CategoryListParams> vals = new ArrayList<CategoryListParams>(clParamsMap.values());\n    vals.add(clParams); // add the default too\n    return vals;\n  }\n\n","sourceOld":"  /**\n   * Get all the categoryListParams, including the default.\n   */\n  @Override\n  public Iterable<CategoryListParams> getAllCategoryListParams() {\n    ArrayList<CategoryListParams> vals = \n      new ArrayList<CategoryListParams>(clParamsMap.values());\n    for (CategoryListParams clp : super.getAllCategoryListParams()) {\n      vals.add(clp);\n    }\n    return vals;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/params/PerDimensionIndexingParams#getAllCategoryListParams().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/PerDimensionIndexingParams#getAllCategoryListParams().mjava","sourceNew":"  @Override\n  public List<CategoryListParams> getAllCategoryListParams() {\n    ArrayList<CategoryListParams> vals = new ArrayList<CategoryListParams>(clParamsMap.values());\n    vals.add(clParams); // add the default too\n    return vals;\n  }\n\n","sourceOld":"  @Override\n  public List<CategoryListParams> getAllCategoryListParams() {\n    ArrayList<CategoryListParams> vals = new ArrayList<CategoryListParams>(clParamsMap.values());\n    vals.add(clParams); // add the default too\n    return vals;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"607428da722dcb3e86bbd11c63de8986e6275c36":["d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["607428da722dcb3e86bbd11c63de8986e6275c36"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"607428da722dcb3e86bbd11c63de8986e6275c36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","607428da722dcb3e86bbd11c63de8986e6275c36"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}