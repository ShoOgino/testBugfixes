{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleDocValuesProducer#getBinary(FieldInfo).mjava","commits":[{"id":"68acf69be1b41192ae2278afc452bb66f6349cba","date":1357657311,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleDocValuesProducer#getBinary(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    BinaryEntry bytes = binaries.get(field.number);\n    if (bytes.minLength == bytes.maxLength) {\n      return getFixedBinary(field, bytes);\n    } else {\n      return getVariableBinary(field, bytes);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7a738ebbf9537051521dcc7e49f69208f91e2fc","date":1358194026,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/diskdv/DiskDocValuesProducer#getBinary(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleDocValuesProducer#getBinary(FieldInfo).mjava","sourceNew":"  @Override\n  public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    BinaryEntry bytes = binaries.get(field.number);\n    if (bytes.minLength == bytes.maxLength) {\n      return getFixedBinary(field, bytes);\n    } else {\n      return getVariableBinary(field, bytes);\n    }\n  }\n\n","sourceOld":"  @Override\n  public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    BinaryEntry bytes = binaries.get(field.number);\n    if (bytes.minLength == bytes.maxLength) {\n      return getFixedBinary(field, bytes);\n    } else {\n      return getVariableBinary(field, bytes);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96b29edfb831f9c0aeeca88ad2293b2a9cd529f6","date":1358196500,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleDocValuesProducer#getBinary(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleNormsProducer#getBinary(FieldInfo).mjava","sourceNew":"  @Override\n  public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    throw new AssertionError();\n  }\n\n","sourceOld":"  @Override\n  public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    throw new AssertionError();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b70b267afb5dd221d0389bd4ac1f148661fb827","date":1358203204,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleDocValuesProducer#getBinary(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleDocValuesProducer#getBinary(FieldInfo).mjava","sourceNew":"  @Override\n  public synchronized BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    BinaryDocValues instance = binaryInstances.get(field.number);\n    if (instance == null) {\n      instance = loadBinary(field);\n      binaryInstances.put(field.number, instance);\n    }\n    return instance;\n  }\n\n","sourceOld":"  @Override\n  public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    throw new AssertionError();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7bf953a8ab9ae7d92835bdf9cbe5a268448868f","date":1358522034,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41DocValuesProducer#getBinary(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleDocValuesProducer#getBinary(FieldInfo).mjava","sourceNew":"  @Override\n  public synchronized BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    BinaryDocValues instance = binaryInstances.get(field.number);\n    if (instance == null) {\n      instance = loadBinary(field);\n      binaryInstances.put(field.number, instance);\n    }\n    return instance;\n  }\n\n","sourceOld":"  @Override\n  public synchronized BinaryDocValues getBinary(FieldInfo field) throws IOException {\n    BinaryDocValues instance = binaryInstances.get(field.number);\n    if (instance == null) {\n      instance = loadBinary(field);\n      binaryInstances.put(field.number, instance);\n    }\n    return instance;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"68acf69be1b41192ae2278afc452bb66f6349cba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5b70b267afb5dd221d0389bd4ac1f148661fb827":["96b29edfb831f9c0aeeca88ad2293b2a9cd529f6"],"d7bf953a8ab9ae7d92835bdf9cbe5a268448868f":["5b70b267afb5dd221d0389bd4ac1f148661fb827"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"96b29edfb831f9c0aeeca88ad2293b2a9cd529f6":["d7a738ebbf9537051521dcc7e49f69208f91e2fc"],"d7a738ebbf9537051521dcc7e49f69208f91e2fc":["68acf69be1b41192ae2278afc452bb66f6349cba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"68acf69be1b41192ae2278afc452bb66f6349cba":["d7a738ebbf9537051521dcc7e49f69208f91e2fc"],"5b70b267afb5dd221d0389bd4ac1f148661fb827":["d7bf953a8ab9ae7d92835bdf9cbe5a268448868f"],"d7bf953a8ab9ae7d92835bdf9cbe5a268448868f":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["68acf69be1b41192ae2278afc452bb66f6349cba","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"96b29edfb831f9c0aeeca88ad2293b2a9cd529f6":["5b70b267afb5dd221d0389bd4ac1f148661fb827"],"d7a738ebbf9537051521dcc7e49f69208f91e2fc":["96b29edfb831f9c0aeeca88ad2293b2a9cd529f6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d7bf953a8ab9ae7d92835bdf9cbe5a268448868f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}