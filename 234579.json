{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseHS#compare(SolrQueryRequest,String,Object,Map[Comparable,Doc]).mjava","commits":[{"id":"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","date":1426480823,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseHS#compare(SolrQueryRequest,String,Object,Map[Comparable,Doc]).mjava","pathOld":"/dev/null","sourceNew":"  public static void compare(SolrQueryRequest req, String path, Object model, Map<Comparable, Doc> fullModel) throws Exception {\n    String strResponse = h.query(req);\n\n    Object realResponse = ObjectBuilder.fromJSON(strResponse);\n    String err = JSONTestUtil.matchObj(path, realResponse, model);\n    if (err != null) {\n      log.error(\"RESPONSE MISMATCH: \" + err\n              + \"\\n\\trequest=\"+req\n              + \"\\n\\tresult=\"+strResponse\n              + \"\\n\\texpected=\"+ JSONUtil.toJSON(model)\n              + \"\\n\\tmodel=\"+ fullModel\n      );\n\n      // re-execute the request... good for putting a breakpoint here for debugging\n      String rsp = h.query(req);\n\n      fail(err);\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseHS#compare(SolrQueryRequest,String,Object,Map[Comparable,Doc]).mjava","pathOld":"/dev/null","sourceNew":"  public static void compare(SolrQueryRequest req, String path, Object model, Map<Comparable, Doc> fullModel) throws Exception {\n    String strResponse = h.query(req);\n\n    Object realResponse = ObjectBuilder.fromJSON(strResponse);\n    String err = JSONTestUtil.matchObj(path, realResponse, model);\n    if (err != null) {\n      log.error(\"RESPONSE MISMATCH: \" + err\n              + \"\\n\\trequest=\"+req\n              + \"\\n\\tresult=\"+strResponse\n              + \"\\n\\texpected=\"+ JSONUtil.toJSON(model)\n              + \"\\n\\tmodel=\"+ fullModel\n      );\n\n      // re-execute the request... good for putting a breakpoint here for debugging\n      String rsp = h.query(req);\n\n      fail(err);\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseHS#compare(SolrQueryRequest,String,Object,Map[Comparable,Doc]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseHS#compare(SolrQueryRequest,String,Object,Map[Comparable,Doc]).mjava","sourceNew":"  public static void compare(SolrQueryRequest req, String path, Object model, Map<Comparable, Doc> fullModel) throws Exception {\n    String strResponse = h.query(req);\n\n    Object realResponse = ObjectBuilder.fromJSON(strResponse);\n    String err = JSONTestUtil.matchObj(path, realResponse, model);\n    if (err != null) {\n      log.error(\"RESPONSE MISMATCH: {}\\n\\trequest={}\\n\\tresult={}\" +\n          \"\\n\\texpected={}\\n\\tmodel={}\"\n          , err, req, strResponse, JSONUtil.toJSON(model), fullModel);\n\n      // re-execute the request... good for putting a breakpoint here for debugging\n      String rsp = h.query(req);\n\n      fail(err);\n    }\n\n  }\n\n","sourceOld":"  public static void compare(SolrQueryRequest req, String path, Object model, Map<Comparable, Doc> fullModel) throws Exception {\n    String strResponse = h.query(req);\n\n    Object realResponse = ObjectBuilder.fromJSON(strResponse);\n    String err = JSONTestUtil.matchObj(path, realResponse, model);\n    if (err != null) {\n      log.error(\"RESPONSE MISMATCH: \" + err\n              + \"\\n\\trequest=\"+req\n              + \"\\n\\tresult=\"+strResponse\n              + \"\\n\\texpected=\"+ JSONUtil.toJSON(model)\n              + \"\\n\\tmodel=\"+ fullModel\n      );\n\n      // re-execute the request... good for putting a breakpoint here for debugging\n      String rsp = h.query(req);\n\n      fail(err);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6809a6d7924df2c864d6a5863944aff9dfeb372c","date":1591826750,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseHS#compare(SolrQueryRequest,String,Object,Map[Comparable,Doc]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseHS#compare(SolrQueryRequest,String,Object,Map[Comparable,Doc]).mjava","sourceNew":"  public static void compare(SolrQueryRequest req, String path, Object model,\n                             @SuppressWarnings({\"rawtypes\"})Map<Comparable, Doc> fullModel) throws Exception {\n    String strResponse = h.query(req);\n\n    Object realResponse = ObjectBuilder.fromJSON(strResponse);\n    String err = JSONTestUtil.matchObj(path, realResponse, model);\n    if (err != null) {\n      log.error(\"RESPONSE MISMATCH: {}\\n\\trequest={}\\n\\tresult={}\" +\n          \"\\n\\texpected={}\\n\\tmodel={}\"\n          , err, req, strResponse, JSONUtil.toJSON(model), fullModel);\n\n      // re-execute the request... good for putting a breakpoint here for debugging\n      String rsp = h.query(req);\n\n      fail(err);\n    }\n\n  }\n\n","sourceOld":"  public static void compare(SolrQueryRequest req, String path, Object model, Map<Comparable, Doc> fullModel) throws Exception {\n    String strResponse = h.query(req);\n\n    Object realResponse = ObjectBuilder.fromJSON(strResponse);\n    String err = JSONTestUtil.matchObj(path, realResponse, model);\n    if (err != null) {\n      log.error(\"RESPONSE MISMATCH: {}\\n\\trequest={}\\n\\tresult={}\" +\n          \"\\n\\texpected={}\\n\\tmodel={}\"\n          , err, req, strResponse, JSONUtil.toJSON(model), fullModel);\n\n      // re-execute the request... good for putting a breakpoint here for debugging\n      String rsp = h.query(req);\n\n      fail(err);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6809a6d7924df2c864d6a5863944aff9dfeb372c":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6809a6d7924df2c864d6a5863944aff9dfeb372c"]},"commit2Childs":{"6809a6d7924df2c864d6a5863944aff9dfeb372c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a966532d92cf9ba2856f15a8140151bb6b518e4b"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["6809a6d7924df2c864d6a5863944aff9dfeb372c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}