{"path":"lucene/core/src/java/org/apache/lucene/index/StoredDocument#getBinaryValue(String).mjava","commits":[{"id":"409324b31a1419d7c05a38211168cf317e39be77","date":1344866765,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StoredDocument#getBinaryValue(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/document/StoredDocument#getBinaryValue(String).mjava","sourceNew":"   /**\n   * Returns an array of bytes for the first (or only) field that has the name\n   * specified as the method parameter. This method will return <code>null</code>\n   * if no binary fields with the specified name are available.\n   * There may be non-binary fields with the same name.\n   *\n   * @param name the name of the field.\n   * @return a <code>byte[]</code> containing the binary field value or <code>null</code>\n   */\n   public final BytesRef getBinaryValue(String name) {\n     for (StorableField field : fields) {\n       if (field.name().equals(name)) {\n         final BytesRef bytes = field.binaryValue();\n         if (bytes != null) {\n           return bytes;\n         }\n       }\n     }\n     return null;\n   }\n\n","sourceOld":"   /**\n   * Returns an array of bytes for the first (or only) field that has the name\n   * specified as the method parameter. This method will return <code>null</code>\n   * if no binary fields with the specified name are available.\n   * There may be non-binary fields with the same name.\n   *\n   * @param name the name of the field.\n   * @return a <code>byte[]</code> containing the binary field value or <code>null</code>\n   */\n   public final BytesRef getBinaryValue(String name) {\n     for (StorableField field : fields) {\n       if (field.name().equals(name)) {\n         final BytesRef bytes = field.binaryValue();\n         if (bytes != null) {\n           return bytes;\n         }\n       }\n     }\n     return null;\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StoredDocument#getBinaryValue(String).mjava","pathOld":"/dev/null","sourceNew":"   /**\n   * Returns an array of bytes for the first (or only) field that has the name\n   * specified as the method parameter. This method will return <code>null</code>\n   * if no binary fields with the specified name are available.\n   * There may be non-binary fields with the same name.\n   *\n   * @param name the name of the field.\n   * @return a <code>byte[]</code> containing the binary field value or <code>null</code>\n   */\n   public final BytesRef getBinaryValue(String name) {\n     for (StorableField field : fields) {\n       if (field.name().equals(name)) {\n         final BytesRef bytes = field.binaryValue();\n         if (bytes != null) {\n           return bytes;\n         }\n       }\n     }\n     return null;\n   }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7700602b07ba0daa0256f95affa493eb41629722","date":1347547529,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StoredDocument#getBinaryValue(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StoredDocument#getBinaryValue(String).mjava","sourceNew":"   /**\n   * Returns an array of bytes for the first (or only) field that has the name\n   * specified as the method parameter. This method will return <code>null</code>\n   * if no binary fields with the specified name are available.\n   * There may be non-binary fields with the same name.\n   *\n   * @param name the name of the field.\n   * @return a <code>BytesRef</code> containing the binary field value or <code>null</code>\n   */\n   public final BytesRef getBinaryValue(String name) {\n     for (StorableField field : fields) {\n       if (field.name().equals(name)) {\n         final BytesRef bytes = field.binaryValue();\n         if (bytes != null) {\n           return bytes;\n         }\n       }\n     }\n     return null;\n   }\n\n","sourceOld":"   /**\n   * Returns an array of bytes for the first (or only) field that has the name\n   * specified as the method parameter. This method will return <code>null</code>\n   * if no binary fields with the specified name are available.\n   * There may be non-binary fields with the same name.\n   *\n   * @param name the name of the field.\n   * @return a <code>byte[]</code> containing the binary field value or <code>null</code>\n   */\n   public final BytesRef getBinaryValue(String name) {\n     for (StorableField field : fields) {\n       if (field.name().equals(name)) {\n         final BytesRef bytes = field.binaryValue();\n         if (bytes != null) {\n           return bytes;\n         }\n       }\n     }\n     return null;\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/StoredDocument#getBinaryValue(String).mjava","sourceNew":null,"sourceOld":"   /**\n   * Returns an array of bytes for the first (or only) field that has the name\n   * specified as the method parameter. This method will return <code>null</code>\n   * if no binary fields with the specified name are available.\n   * There may be non-binary fields with the same name.\n   *\n   * @param name the name of the field.\n   * @return a <code>BytesRef</code> containing the binary field value or <code>null</code>\n   */\n   public final BytesRef getBinaryValue(String name) {\n     for (StorableField field : fields) {\n       if (field.name().equals(name)) {\n         final BytesRef bytes = field.binaryValue();\n         if (bytes != null) {\n           return bytes;\n         }\n       }\n     }\n     return null;\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"409324b31a1419d7c05a38211168cf317e39be77":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1d028314cced5858683a1bb4741423d0f934257b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","409324b31a1419d7c05a38211168cf317e39be77"],"7700602b07ba0daa0256f95affa493eb41629722":["1d028314cced5858683a1bb4741423d0f934257b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["7700602b07ba0daa0256f95affa493eb41629722"]},"commit2Childs":{"409324b31a1419d7c05a38211168cf317e39be77":["1d028314cced5858683a1bb4741423d0f934257b"],"1d028314cced5858683a1bb4741423d0f934257b":["7700602b07ba0daa0256f95affa493eb41629722"],"7700602b07ba0daa0256f95affa493eb41629722":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["409324b31a1419d7c05a38211168cf317e39be77","1d028314cced5858683a1bb4741423d0f934257b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}