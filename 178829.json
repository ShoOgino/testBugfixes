{"path":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#parseHostPortList(String).mjava","commits":[{"id":"2c30e4c1cee08b3b229a77991882594fe7250b66","date":1344448871,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#parseHostPortList(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#parseHostPortList(String).mjava","sourceNew":"  public static List<HostPort> parseHostPortList(String hplist) {\n    ArrayList<HostPort> alist = new ArrayList<HostPort>();\n    for (String hp : hplist.split(\",\")) {\n      int idx = hp.lastIndexOf(':');\n      String host = hp.substring(0, idx);\n      int port;\n      try {\n        port = Integer.parseInt(hp.substring(idx + 1));\n      } catch (RuntimeException e) {\n        throw new RuntimeException(\"Problem parsing \" + hp + e.toString());\n      }\n      alist.add(new HostPort(host, port));\n    }\n    return alist;\n  }\n\n","sourceOld":"  public static List<HostPort> parseHostPortList(String hplist) {\n    ArrayList<HostPort> alist = new ArrayList<HostPort>();\n    for (String hp : hplist.split(\",\")) {\n      int idx = hp.lastIndexOf(':');\n      String host = hp.substring(0, idx);\n      int port;\n      try {\n        port = Integer.parseInt(hp.substring(idx + 1));\n      } catch (RuntimeException e) {\n        throw new RuntimeException(\"Problem parsing \" + hp + e.toString());\n      }\n      alist.add(new HostPort(host, port));\n    }\n    return alist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#parseHostPortList(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#parseHostPortList(String).mjava","sourceNew":"  public static List<HostPort> parseHostPortList(String hplist) {\n    ArrayList<HostPort> alist = new ArrayList<HostPort>();\n    for (String hp : hplist.split(\",\")) {\n      int idx = hp.lastIndexOf(':');\n      String host = hp.substring(0, idx);\n      int port;\n      try {\n        port = Integer.parseInt(hp.substring(idx + 1));\n      } catch (RuntimeException e) {\n        throw new RuntimeException(\"Problem parsing \" + hp + e.toString());\n      }\n      alist.add(new HostPort(host, port));\n    }\n    return alist;\n  }\n\n","sourceOld":"  public static List<HostPort> parseHostPortList(String hplist) {\n    ArrayList<HostPort> alist = new ArrayList<HostPort>();\n    for (String hp : hplist.split(\",\")) {\n      int idx = hp.lastIndexOf(':');\n      String host = hp.substring(0, idx);\n      int port;\n      try {\n        port = Integer.parseInt(hp.substring(idx + 1));\n      } catch (RuntimeException e) {\n        throw new RuntimeException(\"Problem parsing \" + hp + e.toString());\n      }\n      alist.add(new HostPort(host, port));\n    }\n    return alist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#parseHostPortList(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#parseHostPortList(String).mjava","sourceNew":"  public static List<HostPort> parseHostPortList(String hplist) {\n    ArrayList<HostPort> alist = new ArrayList<HostPort>();\n    for (String hp : hplist.split(\",\")) {\n      int idx = hp.lastIndexOf(':');\n      String host = hp.substring(0, idx);\n      int port;\n      try {\n        port = Integer.parseInt(hp.substring(idx + 1));\n      } catch (RuntimeException e) {\n        throw new RuntimeException(\"Problem parsing \" + hp + e.toString());\n      }\n      alist.add(new HostPort(host, port));\n    }\n    return alist;\n  }\n\n","sourceOld":"  public static List<HostPort> parseHostPortList(String hplist) {\n    ArrayList<HostPort> alist = new ArrayList<HostPort>();\n    for (String hp : hplist.split(\",\")) {\n      int idx = hp.lastIndexOf(':');\n      String host = hp.substring(0, idx);\n      int port;\n      try {\n        port = Integer.parseInt(hp.substring(idx + 1));\n      } catch (RuntimeException e) {\n        throw new RuntimeException(\"Problem parsing \" + hp + e.toString());\n      }\n      alist.add(new HostPort(host, port));\n    }\n    return alist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#parseHostPortList(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#parseHostPortList(String).mjava","sourceNew":"  public static List<HostPort> parseHostPortList(String hplist) {\n    ArrayList<HostPort> alist = new ArrayList<>();\n    for (String hp : hplist.split(\",\")) {\n      int idx = hp.lastIndexOf(':');\n      String host = hp.substring(0, idx);\n      int port;\n      try {\n        port = Integer.parseInt(hp.substring(idx + 1));\n      } catch (RuntimeException e) {\n        throw new RuntimeException(\"Problem parsing \" + hp + e.toString());\n      }\n      alist.add(new HostPort(host, port));\n    }\n    return alist;\n  }\n\n","sourceOld":"  public static List<HostPort> parseHostPortList(String hplist) {\n    ArrayList<HostPort> alist = new ArrayList<HostPort>();\n    for (String hp : hplist.split(\",\")) {\n      int idx = hp.lastIndexOf(':');\n      String host = hp.substring(0, idx);\n      int port;\n      try {\n        port = Integer.parseInt(hp.substring(idx + 1));\n      } catch (RuntimeException e) {\n        throw new RuntimeException(\"Problem parsing \" + hp + e.toString());\n      }\n      alist.add(new HostPort(host, port));\n    }\n    return alist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#parseHostPortList(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#parseHostPortList(String).mjava","sourceNew":"  public static List<HostPort> parseHostPortList(String hplist) {\n    log.info(\"parse host and port list: \" + hplist);\n    ArrayList<HostPort> alist = new ArrayList<>();\n    for (String hp : hplist.split(\",\")) {\n      int idx = hp.lastIndexOf(':');\n      String host = hp.substring(0, idx);\n      int port;\n      try {\n        port = Integer.parseInt(hp.substring(idx + 1));\n      } catch (RuntimeException e) {\n        throw new RuntimeException(\"Problem parsing \" + hp + e.toString());\n      }\n      alist.add(new HostPort(host, port));\n    }\n    return alist;\n  }\n\n","sourceOld":"  public static List<HostPort> parseHostPortList(String hplist) {\n    ArrayList<HostPort> alist = new ArrayList<>();\n    for (String hp : hplist.split(\",\")) {\n      int idx = hp.lastIndexOf(':');\n      String host = hp.substring(0, idx);\n      int port;\n      try {\n        port = Integer.parseInt(hp.substring(idx + 1));\n      } catch (RuntimeException e) {\n        throw new RuntimeException(\"Problem parsing \" + hp + e.toString());\n      }\n      alist.add(new HostPort(host, port));\n    }\n    return alist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#parseHostPortList(String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#parseHostPortList(String).mjava","sourceNew":"  public static List<HostPort> parseHostPortList(String hplist) {\n    log.info(\"parse host and port list: {}\", hplist);\n    ArrayList<HostPort> alist = new ArrayList<>();\n    for (String hp : hplist.split(\",\")) {\n      int idx = hp.lastIndexOf(':');\n      String host = hp.substring(0, idx);\n      int port;\n      try {\n        port = Integer.parseInt(hp.substring(idx + 1));\n      } catch (RuntimeException e) {\n        throw new RuntimeException(\"Problem parsing \" + hp + e.toString());\n      }\n      alist.add(new HostPort(host, port));\n    }\n    return alist;\n  }\n\n","sourceOld":"  public static List<HostPort> parseHostPortList(String hplist) {\n    log.info(\"parse host and port list: \" + hplist);\n    ArrayList<HostPort> alist = new ArrayList<>();\n    for (String hp : hplist.split(\",\")) {\n      int idx = hp.lastIndexOf(':');\n      String host = hp.substring(0, idx);\n      int port;\n      try {\n        port = Integer.parseInt(hp.substring(idx + 1));\n      } catch (RuntimeException e) {\n        throw new RuntimeException(\"Problem parsing \" + hp + e.toString());\n      }\n      alist.add(new HostPort(host, port));\n    }\n    return alist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["2c30e4c1cee08b3b229a77991882594fe7250b66"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","2c30e4c1cee08b3b229a77991882594fe7250b66"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}