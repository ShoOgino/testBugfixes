{"path":"src/test-deprecated/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","commits":[{"id":"5b5461affe637a07375542c763a4805300802be8","date":1102270918,"type":0,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/test-deprecated/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"/dev/null","sourceNew":"    private void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException\n    {\n        TermDocs tdocs = null;\n\n        try {\n            tdocs = reader.termDocs(term);\n            assertNotNull(msg + \", null TermDocs\", tdocs);\n            int count = 0;\n            while(tdocs.next()) {\n                count++;\n            }\n            assertEquals(msg + \", count mismatch\", expected, count);\n\n        } finally {\n            if (tdocs != null)\n                try { tdocs.close(); } catch (Exception e) { }\n        }\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test-deprecated/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":null,"sourceOld":"    private void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException\n    {\n        TermDocs tdocs = null;\n\n        try {\n            tdocs = reader.termDocs(term);\n            assertNotNull(msg + \", null TermDocs\", tdocs);\n            int count = 0;\n            while(tdocs.next()) {\n                count++;\n            }\n            assertEquals(msg + \", count mismatch\", expected, count);\n\n        } finally {\n            if (tdocs != null)\n                try { tdocs.close(); } catch (Exception e) { }\n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5b5461affe637a07375542c763a4805300802be8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["5b5461affe637a07375542c763a4805300802be8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"]},"commit2Childs":{"5b5461affe637a07375542c763a4805300802be8":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b5461affe637a07375542c763a4805300802be8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}