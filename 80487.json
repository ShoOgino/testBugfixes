{"path":"lucene/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#[T]_createSecondPassCollector(FirstPassGroupingCollector,Sort,Sort,int,int,boolean).mjava","commits":[{"id":"1d3f7ab1a502671bbdb03bcced21e764d2483221","date":1532329609,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#[T]_createSecondPassCollector(FirstPassGroupingCollector,Sort,Sort,int,int,boolean).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/TestGrouping#[T]_createSecondPassCollector(FirstPassGroupingCollector,Sort,Sort,int,int,boolean,boolean).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  private <T> TopGroupsCollector<T> createSecondPassCollector(FirstPassGroupingCollector firstPassGroupingCollector,\n                                                                       Sort groupSort,\n                                                                       Sort sortWithinGroup,\n                                                                       int groupOffset,\n                                                                       int maxDocsPerGroup,\n                                                                       boolean getMaxScores) throws IOException {\n\n    Collection<SearchGroup<T>> searchGroups = firstPassGroupingCollector.getTopGroups(groupOffset);\n    return new TopGroupsCollector<>(firstPassGroupingCollector.getGroupSelector(), searchGroups, groupSort, sortWithinGroup, maxDocsPerGroup, getMaxScores);\n  }\n\n","sourceOld":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  private <T> TopGroupsCollector<T> createSecondPassCollector(FirstPassGroupingCollector firstPassGroupingCollector,\n                                                                       Sort groupSort,\n                                                                       Sort sortWithinGroup,\n                                                                       int groupOffset,\n                                                                       int maxDocsPerGroup,\n                                                                       boolean getScores,\n                                                                       boolean getMaxScores) throws IOException {\n\n    Collection<SearchGroup<T>> searchGroups = firstPassGroupingCollector.getTopGroups(groupOffset);\n    return new TopGroupsCollector<>(firstPassGroupingCollector.getGroupSelector(), searchGroups, groupSort, sortWithinGroup, maxDocsPerGroup, getScores, getMaxScores);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d3f7ab1a502671bbdb03bcced21e764d2483221"],"1d3f7ab1a502671bbdb03bcced21e764d2483221":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d3f7ab1a502671bbdb03bcced21e764d2483221"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"1d3f7ab1a502671bbdb03bcced21e764d2483221":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}