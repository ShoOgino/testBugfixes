{"path":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillSideways#buildFacetsResult(SimpleFacetsCollector,SimpleFacetsCollector[],String[]).mjava","commits":[{"id":"28ac5cee8abf30398e12bc016a5ce9d441831a63","date":1384691298,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillSideways#buildFacetsResult(SimpleFacetsCollector,SimpleFacetsCollector[],String[]).mjava","pathOld":"/dev/null","sourceNew":"  /** Subclass can override to customize per-dim Facets\n   *  impl. */\n  protected Facets buildFacetsResult(SimpleFacetsCollector drillDowns, SimpleFacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n\n    Facets drillDownFacets = new TaxonomyFacetCounts(taxoReader, facetsConfig, drillDowns);\n\n    if (drillSideways == null) {\n      return drillDownFacets;\n    } else {\n      Map<String,Facets> drillSidewaysFacets = new HashMap<String,Facets>();\n      for(int i=0;i<drillSideways.length;i++) {\n        drillSidewaysFacets.put(drillSidewaysDims[i],\n                                new TaxonomyFacetCounts(taxoReader, facetsConfig, drillSideways[i]));\n      }\n      return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"798b82b2c9877fae10a0a7d2025c05cac832bda2","date":1384710991,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillSideways#buildFacetsResult(SimpleFacetsCollector,SimpleFacetsCollector[],String[]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillSideways#buildFacetsResult(SimpleFacetsCollector,SimpleFacetsCollector[],String[]).mjava","sourceNew":"  /** Subclass can override to customize per-dim Facets\n   *  impl. */\n  protected Facets buildFacetsResult(SimpleFacetsCollector drillDowns, SimpleFacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n\n    Facets drillDownFacets = new FastTaxonomyFacetCounts(taxoReader, facetsConfig, drillDowns);\n\n    if (drillSideways == null) {\n      return drillDownFacets;\n    } else {\n      Map<String,Facets> drillSidewaysFacets = new HashMap<String,Facets>();\n      for(int i=0;i<drillSideways.length;i++) {\n        drillSidewaysFacets.put(drillSidewaysDims[i],\n                                new FastTaxonomyFacetCounts(taxoReader, facetsConfig, drillSideways[i]));\n      }\n      return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n    }\n  }\n\n","sourceOld":"  /** Subclass can override to customize per-dim Facets\n   *  impl. */\n  protected Facets buildFacetsResult(SimpleFacetsCollector drillDowns, SimpleFacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n\n    Facets drillDownFacets = new TaxonomyFacetCounts(taxoReader, facetsConfig, drillDowns);\n\n    if (drillSideways == null) {\n      return drillDownFacets;\n    } else {\n      Map<String,Facets> drillSidewaysFacets = new HashMap<String,Facets>();\n      for(int i=0;i<drillSideways.length;i++) {\n        drillSidewaysFacets.put(drillSidewaysDims[i],\n                                new TaxonomyFacetCounts(taxoReader, facetsConfig, drillSideways[i]));\n      }\n      return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fdb15e93058f718a65d564872aadbed5ca78296","date":1384720267,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillSideways#buildFacetsResult(SimpleFacetsCollector,SimpleFacetsCollector[],String[]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillSideways#buildFacetsResult(SimpleFacetsCollector,SimpleFacetsCollector[],String[]).mjava","sourceNew":"  /** Subclass can override to customize per-dim Facets\n   *  impl. */\n  protected Facets buildFacetsResult(SimpleFacetsCollector drillDowns, SimpleFacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n\n    Facets drillDownFacets = new FastTaxonomyFacetCounts(taxoReader, config, drillDowns);\n\n    if (drillSideways == null) {\n      return drillDownFacets;\n    } else {\n      Map<String,Facets> drillSidewaysFacets = new HashMap<String,Facets>();\n      for(int i=0;i<drillSideways.length;i++) {\n        drillSidewaysFacets.put(drillSidewaysDims[i],\n                                new FastTaxonomyFacetCounts(taxoReader, config, drillSideways[i]));\n      }\n      return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n    }\n  }\n\n","sourceOld":"  /** Subclass can override to customize per-dim Facets\n   *  impl. */\n  protected Facets buildFacetsResult(SimpleFacetsCollector drillDowns, SimpleFacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n\n    Facets drillDownFacets = new FastTaxonomyFacetCounts(taxoReader, facetsConfig, drillDowns);\n\n    if (drillSideways == null) {\n      return drillDownFacets;\n    } else {\n      Map<String,Facets> drillSidewaysFacets = new HashMap<String,Facets>();\n      for(int i=0;i<drillSideways.length;i++) {\n        drillSidewaysFacets.put(drillSidewaysDims[i],\n                                new FastTaxonomyFacetCounts(taxoReader, facetsConfig, drillSideways[i]));\n      }\n      return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19f5022544a8fc895776356d1b35a4b46d05945c","date":1385063323,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillSideways#buildFacetsResult(SimpleFacetsCollector,SimpleFacetsCollector[],String[]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillSideways#buildFacetsResult(SimpleFacetsCollector,SimpleFacetsCollector[],String[]).mjava","sourceNew":"  /** Subclass can override to customize per-dim Facets\n   *  impl. */\n  protected Facets buildFacetsResult(SimpleFacetsCollector drillDowns, SimpleFacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n\n    if (taxoReader != null) {\n      Facets drillDownFacets = new FastTaxonomyFacetCounts(taxoReader, config, drillDowns);\n      if (drillSideways == null) {\n        return drillDownFacets;\n      } else {\n        Map<String,Facets> drillSidewaysFacets = new HashMap<String,Facets>();\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new FastTaxonomyFacetCounts(taxoReader, config, drillSideways[i]));\n        }\n        return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n      }\n    } else {\n      Facets drillDownFacets = new SortedSetDocValuesFacetCounts(state, drillDowns);\n      if (drillSideways == null) {\n        return drillDownFacets;\n      } else {\n        Map<String,Facets> drillSidewaysFacets = new HashMap<String,Facets>();\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new SortedSetDocValuesFacetCounts(state, drillSideways[i]));\n        }\n        return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n      }\n    }\n  }\n\n","sourceOld":"  /** Subclass can override to customize per-dim Facets\n   *  impl. */\n  protected Facets buildFacetsResult(SimpleFacetsCollector drillDowns, SimpleFacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n\n    Facets drillDownFacets = new FastTaxonomyFacetCounts(taxoReader, config, drillDowns);\n\n    if (drillSideways == null) {\n      return drillDownFacets;\n    } else {\n      Map<String,Facets> drillSidewaysFacets = new HashMap<String,Facets>();\n      for(int i=0;i<drillSideways.length;i++) {\n        drillSidewaysFacets.put(drillSidewaysDims[i],\n                                new FastTaxonomyFacetCounts(taxoReader, config, drillSideways[i]));\n      }\n      return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ce7aff7772c162c15d520e31af46c555f60d5c3b","date":1385135519,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillSideways#buildFacetsResult(SimpleFacetsCollector,SimpleFacetsCollector[],String[]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillSideways#buildFacetsResult(SimpleFacetsCollector,SimpleFacetsCollector[],String[]).mjava","sourceNew":"  /** Subclass can override to customize per-dim Facets\n   *  impl. */\n  protected Facets buildFacetsResult(SimpleFacetsCollector drillDowns, SimpleFacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n\n    Facets drillDownFacets;\n    Map<String,Facets> drillSidewaysFacets = new HashMap<String,Facets>();\n\n    if (taxoReader != null) {\n      drillDownFacets = new FastTaxonomyFacetCounts(taxoReader, config, drillDowns);\n      if (drillSideways != null) {\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new FastTaxonomyFacetCounts(taxoReader, config, drillSideways[i]));\n        }\n      }\n    } else {\n      drillDownFacets = new SortedSetDocValuesFacetCounts(state, drillDowns);\n      if (drillSideways != null) {\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new SortedSetDocValuesFacetCounts(state, drillSideways[i]));\n        }\n      }\n    }\n\n    if (drillSidewaysFacets.isEmpty()) {\n      return drillDownFacets;\n    } else {\n      return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n    }\n  }\n\n","sourceOld":"  /** Subclass can override to customize per-dim Facets\n   *  impl. */\n  protected Facets buildFacetsResult(SimpleFacetsCollector drillDowns, SimpleFacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n\n    if (taxoReader != null) {\n      Facets drillDownFacets = new FastTaxonomyFacetCounts(taxoReader, config, drillDowns);\n      if (drillSideways == null) {\n        return drillDownFacets;\n      } else {\n        Map<String,Facets> drillSidewaysFacets = new HashMap<String,Facets>();\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new FastTaxonomyFacetCounts(taxoReader, config, drillSideways[i]));\n        }\n        return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n      }\n    } else {\n      Facets drillDownFacets = new SortedSetDocValuesFacetCounts(state, drillDowns);\n      if (drillSideways == null) {\n        return drillDownFacets;\n      } else {\n        Map<String,Facets> drillSidewaysFacets = new HashMap<String,Facets>();\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new SortedSetDocValuesFacetCounts(state, drillSideways[i]));\n        }\n        return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillSideways#buildFacetsResult(FacetsCollector,FacetsCollector[],String[]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillSideways#buildFacetsResult(SimpleFacetsCollector,SimpleFacetsCollector[],String[]).mjava","sourceNew":"  /** Subclass can override to customize per-dim Facets\n   *  impl. */\n  protected Facets buildFacetsResult(FacetsCollector drillDowns, FacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n\n    Facets drillDownFacets;\n    Map<String,Facets> drillSidewaysFacets = new HashMap<String,Facets>();\n\n    if (taxoReader != null) {\n      drillDownFacets = new FastTaxonomyFacetCounts(taxoReader, config, drillDowns);\n      if (drillSideways != null) {\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new FastTaxonomyFacetCounts(taxoReader, config, drillSideways[i]));\n        }\n      }\n    } else {\n      drillDownFacets = new SortedSetDocValuesFacetCounts(state, drillDowns);\n      if (drillSideways != null) {\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new SortedSetDocValuesFacetCounts(state, drillSideways[i]));\n        }\n      }\n    }\n\n    if (drillSidewaysFacets.isEmpty()) {\n      return drillDownFacets;\n    } else {\n      return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n    }\n  }\n\n","sourceOld":"  /** Subclass can override to customize per-dim Facets\n   *  impl. */\n  protected Facets buildFacetsResult(SimpleFacetsCollector drillDowns, SimpleFacetsCollector[] drillSideways, String[] drillSidewaysDims) throws IOException {\n\n    Facets drillDownFacets;\n    Map<String,Facets> drillSidewaysFacets = new HashMap<String,Facets>();\n\n    if (taxoReader != null) {\n      drillDownFacets = new FastTaxonomyFacetCounts(taxoReader, config, drillDowns);\n      if (drillSideways != null) {\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new FastTaxonomyFacetCounts(taxoReader, config, drillSideways[i]));\n        }\n      }\n    } else {\n      drillDownFacets = new SortedSetDocValuesFacetCounts(state, drillDowns);\n      if (drillSideways != null) {\n        for(int i=0;i<drillSideways.length;i++) {\n          drillSidewaysFacets.put(drillSidewaysDims[i],\n                                  new SortedSetDocValuesFacetCounts(state, drillSideways[i]));\n        }\n      }\n    }\n\n    if (drillSidewaysFacets.isEmpty()) {\n      return drillDownFacets;\n    } else {\n      return new MultiFacets(drillSidewaysFacets, drillDownFacets);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"28ac5cee8abf30398e12bc016a5ce9d441831a63":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9fdb15e93058f718a65d564872aadbed5ca78296":["798b82b2c9877fae10a0a7d2025c05cac832bda2"],"19f5022544a8fc895776356d1b35a4b46d05945c":["9fdb15e93058f718a65d564872aadbed5ca78296"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"798b82b2c9877fae10a0a7d2025c05cac832bda2":["28ac5cee8abf30398e12bc016a5ce9d441831a63"],"21d36d0db865f7b84026b447bec653469a6e66df":["ce7aff7772c162c15d520e31af46c555f60d5c3b"],"ce7aff7772c162c15d520e31af46c555f60d5c3b":["19f5022544a8fc895776356d1b35a4b46d05945c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"28ac5cee8abf30398e12bc016a5ce9d441831a63":["798b82b2c9877fae10a0a7d2025c05cac832bda2"],"9fdb15e93058f718a65d564872aadbed5ca78296":["19f5022544a8fc895776356d1b35a4b46d05945c"],"19f5022544a8fc895776356d1b35a4b46d05945c":["ce7aff7772c162c15d520e31af46c555f60d5c3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["28ac5cee8abf30398e12bc016a5ce9d441831a63","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"798b82b2c9877fae10a0a7d2025c05cac832bda2":["9fdb15e93058f718a65d564872aadbed5ca78296"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"ce7aff7772c162c15d520e31af46c555f60d5c3b":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}