{"path":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldAndTerm#equals(Object).mjava","commits":[{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldAndTerm#equals(Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsReader.FieldAndTerm#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object _other) {\n      FieldAndTerm other = (FieldAndTerm) _other;\n      return other.field == field && term.bytesEquals(other.term);\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object _other) {\n      FieldAndTerm other = (FieldAndTerm) _other;\n      return other.field == field && term.bytesEquals(other.term);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd1bfe3cedf815c14939d170d53031c88eb5c444","date":1295896578,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldAndTerm#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public boolean equals(Object _other) {\n      FieldAndTerm other = (FieldAndTerm) _other;\n      return other.field == field && term.bytesEquals(other.term);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldAndTerm#equals(Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsReader.FieldAndTerm#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object _other) {\n      FieldAndTerm other = (FieldAndTerm) _other;\n      return other.field == field && term.bytesEquals(other.term);\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object _other) {\n      FieldAndTerm other = (FieldAndTerm) _other;\n      return other.field == field && term.bytesEquals(other.term);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153","date":1308670974,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldAndTerm#equals(Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldAndTerm#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object _other) {\n      FieldAndTerm other = (FieldAndTerm) _other;\n      return other.field.equals(field) && term.bytesEquals(other.term);\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object _other) {\n      FieldAndTerm other = (FieldAndTerm) _other;\n      return other.field == field && term.bytesEquals(other.term);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldAndTerm#equals(Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldAndTerm#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object _other) {\n      FieldAndTerm other = (FieldAndTerm) _other;\n      return other.field.equals(field) && term.bytesEquals(other.term);\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object _other) {\n      FieldAndTerm other = (FieldAndTerm) _other;\n      return other.field == field && term.bytesEquals(other.term);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldAndTerm#equals(Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldAndTerm#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object _other) {\n      FieldAndTerm other = (FieldAndTerm) _other;\n      return other.field.equals(field) && term.bytesEquals(other.term);\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object _other) {\n      FieldAndTerm other = (FieldAndTerm) _other;\n      return other.field == field && term.bytesEquals(other.term);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/BlockTermsReader.FieldAndTerm#equals(Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldAndTerm#equals(Object).mjava","sourceNew":"    @Override\n    public boolean equals(Object _other) {\n      FieldAndTerm other = (FieldAndTerm) _other;\n      return other.field.equals(field) && term.bytesEquals(other.term);\n    }\n\n","sourceOld":"    @Override\n    public boolean equals(Object _other) {\n      FieldAndTerm other = (FieldAndTerm) _other;\n      return other.field.equals(field) && term.bytesEquals(other.term);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fd1bfe3cedf815c14939d170d53031c88eb5c444":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153":["b1add9ddc0005b07550d4350720aac22dc9886b3"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b1add9ddc0005b07550d4350720aac22dc9886b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b1add9ddc0005b07550d4350720aac22dc9886b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2553b00f699380c64959ccb27991289aae87be2e":["b1add9ddc0005b07550d4350720aac22dc9886b3","fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["b1add9ddc0005b07550d4350720aac22dc9886b3","fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"fd1bfe3cedf815c14939d170d53031c88eb5c444":[],"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153":["2553b00f699380c64959ccb27991289aae87be2e","a0ae5e3ed1232483b7b8a014f175a5fe43595982","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fd1bfe3cedf815c14939d170d53031c88eb5c444","29ef99d61cda9641b6250bf9567329a6e65f901d","b1add9ddc0005b07550d4350720aac22dc9886b3"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["fafef7c83fe8e0b3ca9298d5d75d6b943dc28153","29ef99d61cda9641b6250bf9567329a6e65f901d","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"2553b00f699380c64959ccb27991289aae87be2e":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fd1bfe3cedf815c14939d170d53031c88eb5c444","29ef99d61cda9641b6250bf9567329a6e65f901d","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}