{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/JSONTupleStream#create(SolrClient,SolrParams).mjava","commits":[{"id":"f00f1c5fad501b66705121feb623f8cfbb6712f9","date":1431347838,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/JSONTupleStream#create(SolrClient,SolrParams).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/JSONTupleStream#create(SolrClient,SolrParams).mjava","sourceNew":"  // temporary...\n  public static JSONTupleStream create(SolrClient server, SolrParams requestParams) throws IOException, SolrServerException {\n    String p = requestParams.get(\"qt\");\n    if(p != null) {\n      ModifiableSolrParams modifiableSolrParams = (ModifiableSolrParams) requestParams;\n      modifiableSolrParams.remove(\"qt\");\n    }\n\n    QueryRequest query = new QueryRequest( requestParams );\n    query.setPath(p);\n    query.setResponseParser(new InputStreamResponseParser(\"json\"));\n    query.setMethod(SolrRequest.METHOD.POST);\n    NamedList<Object> genericResponse = server.request(query);\n    InputStream stream = (InputStream)genericResponse.get(\"stream\");\n    InputStreamReader reader = new InputStreamReader(stream, \"UTF-8\");\n    return new JSONTupleStream(reader);\n  }\n\n","sourceOld":"  // temporary...\n  public static JSONTupleStream create(SolrClient server, SolrParams requestParams) throws IOException, SolrServerException {\n    String p = requestParams.get(\"qt\");\n    if(p != null) {\n      ModifiableSolrParams modifiableSolrParams = (ModifiableSolrParams) requestParams;\n      modifiableSolrParams.remove(\"qt\");\n    }\n\n    QueryRequest query = new QueryRequest( requestParams );\n    query.setPath(p);\n    query.setResponseParser(new InputStreamResponseParser(\"json\"));\n    query.setMethod(SolrRequest.METHOD.POST);\n    NamedList<Object> genericResponse = server.request(query);\n    InputStream stream = (InputStream)genericResponse.get(\"stream\");\n    InputStreamReader reader = new InputStreamReader(stream, \"UTF-8\");\n    return new JSONTupleStream(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe214d6e09deed3001159c1ad5173f9c8fc4a7f5","date":1563597632,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/JSONTupleStream#create(SolrClient,SolrParams).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/JSONTupleStream#create(SolrClient,SolrParams).mjava","sourceNew":"  // temporary...\n  public static JSONTupleStream create(SolrClient server, SolrParams requestParams) throws IOException, SolrServerException {\n    String p = requestParams.get(\"qt\");\n    if(p != null) {\n      ModifiableSolrParams modifiableSolrParams = (ModifiableSolrParams) requestParams;\n      modifiableSolrParams.remove(\"qt\");\n    }\n\n    QueryRequest query = new QueryRequest( requestParams );\n    query.setPath(p);\n    query.setResponseParser(new InputStreamResponseParser(\"json\"));\n    query.setMethod(SolrRequest.METHOD.POST);\n    NamedList<Object> genericResponse = server.request(query);\n    InputStream stream = (InputStream)genericResponse.get(\"stream\");\n    InputStreamReader reader = new InputStreamReader(stream, StandardCharsets.UTF_8);\n    return new JSONTupleStream(reader);\n  }\n\n","sourceOld":"  // temporary...\n  public static JSONTupleStream create(SolrClient server, SolrParams requestParams) throws IOException, SolrServerException {\n    String p = requestParams.get(\"qt\");\n    if(p != null) {\n      ModifiableSolrParams modifiableSolrParams = (ModifiableSolrParams) requestParams;\n      modifiableSolrParams.remove(\"qt\");\n    }\n\n    QueryRequest query = new QueryRequest( requestParams );\n    query.setPath(p);\n    query.setResponseParser(new InputStreamResponseParser(\"json\"));\n    query.setMethod(SolrRequest.METHOD.POST);\n    NamedList<Object> genericResponse = server.request(query);\n    InputStream stream = (InputStream)genericResponse.get(\"stream\");\n    InputStreamReader reader = new InputStreamReader(stream, \"UTF-8\");\n    return new JSONTupleStream(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f00f1c5fad501b66705121feb623f8cfbb6712f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe214d6e09deed3001159c1ad5173f9c8fc4a7f5":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fe214d6e09deed3001159c1ad5173f9c8fc4a7f5"]},"commit2Childs":{"f00f1c5fad501b66705121feb623f8cfbb6712f9":["fe214d6e09deed3001159c1ad5173f9c8fc4a7f5"],"fe214d6e09deed3001159c1ad5173f9c8fc4a7f5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}