{"path":"lucene/queries/src/test/org/apache/lucene/queries/intervals/TestIntervals#assertGaps(IntervalsSource,int,String,int[]).mjava","commits":[{"id":"97ee2282ff806e9bc9d705f389cf40451ab81c3e","date":1561721333,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/intervals/TestIntervals#assertGaps(IntervalsSource,int,String,int[]).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestIntervals#assertGaps(IntervalsSource,int,String,int[]).mjava","sourceNew":"  private void assertGaps(IntervalsSource source, int doc, String field, int[] expectedGaps) throws IOException {\n    int ord = ReaderUtil.subIndex(doc, searcher.getIndexReader().leaves());\n    LeafReaderContext ctx = searcher.getIndexReader().leaves().get(ord);\n    IntervalIterator it = source.intervals(field, ctx);\n    doc = doc - ctx.docBase;\n    assertEquals(doc, it.advance(doc));\n    for (int expectedGap : expectedGaps) {\n      if (it.nextInterval() == IntervalIterator.NO_MORE_INTERVALS) {\n        fail(\"Unexpected interval \" + it);\n      }\n      assertEquals(expectedGap, it.gaps());\n    }\n  }\n\n","sourceOld":"  private void assertGaps(IntervalsSource source, int doc, String field, int[] expectedGaps) throws IOException {\n    int ord = ReaderUtil.subIndex(doc, searcher.getIndexReader().leaves());\n    LeafReaderContext ctx = searcher.getIndexReader().leaves().get(ord);\n    IntervalIterator it = source.intervals(field, ctx);\n    doc = doc - ctx.docBase;\n    assertEquals(doc, it.advance(doc));\n    for (int expectedGap : expectedGaps) {\n      if (it.nextInterval() == IntervalIterator.NO_MORE_INTERVALS) {\n        fail(\"Unexpected interval \" + it);\n      }\n      assertEquals(expectedGap, it.gaps());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"]},"commit2Childs":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}