{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrServer#httpUriRequest(SolrRequest,ResponseParser).mjava","commits":[{"id":"fee8f787196eb664b953b851d18c52f0d8c9e157","date":1395630304,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrServer#httpUriRequest(SolrRequest,ResponseParser).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @lucene.experimental\n   */\n  public HttpUriRequestResponse httpUriRequest(final SolrRequest request, final ResponseParser processor) throws SolrServerException, IOException {\n    HttpUriRequestResponse mrr = new HttpUriRequestResponse();\n    final HttpRequestBase method = createMethod(request);\n    ExecutorService pool = Executors.newFixedThreadPool(1);\n    try {\n      mrr.future = pool.submit(new Callable<NamedList<Object>>(){\n\n        @Override\n        public NamedList<Object> call() throws Exception {\n          return executeMethod(method, processor);\n        }});\n \n    } finally {\n      pool.shutdownNow();\n    }\n    assert method != null;\n    mrr.httpUriRequest = method;\n    return mrr;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56adbf0a7e41e340242f7a731b5c491f6805246e","date":1395636713,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrServer#httpUriRequest(SolrRequest,ResponseParser).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrServer#httpUriRequest(SolrRequest,ResponseParser).mjava","sourceNew":"  /**\n   * @lucene.experimental\n   */\n  public HttpUriRequestResponse httpUriRequest(final SolrRequest request, final ResponseParser processor) throws SolrServerException, IOException {\n    HttpUriRequestResponse mrr = new HttpUriRequestResponse();\n    final HttpRequestBase method = createMethod(request);\n    ExecutorService pool = Executors.newFixedThreadPool(1, new SolrjNamedThreadFactory(\"httpUriRequest\"));\n    try {\n      mrr.future = pool.submit(new Callable<NamedList<Object>>(){\n\n        @Override\n        public NamedList<Object> call() throws Exception {\n          return executeMethod(method, processor);\n        }});\n \n    } finally {\n      pool.shutdown();\n    }\n    assert method != null;\n    mrr.httpUriRequest = method;\n    return mrr;\n  }\n\n","sourceOld":"  /**\n   * @lucene.experimental\n   */\n  public HttpUriRequestResponse httpUriRequest(final SolrRequest request, final ResponseParser processor) throws SolrServerException, IOException {\n    HttpUriRequestResponse mrr = new HttpUriRequestResponse();\n    final HttpRequestBase method = createMethod(request);\n    ExecutorService pool = Executors.newFixedThreadPool(1);\n    try {\n      mrr.future = pool.submit(new Callable<NamedList<Object>>(){\n\n        @Override\n        public NamedList<Object> call() throws Exception {\n          return executeMethod(method, processor);\n        }});\n \n    } finally {\n      pool.shutdownNow();\n    }\n    assert method != null;\n    mrr.httpUriRequest = method;\n    return mrr;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#httpUriRequest(SolrRequest,ResponseParser).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrServer#httpUriRequest(SolrRequest,ResponseParser).mjava","sourceNew":"  /**\n   * @lucene.experimental\n   */\n  public HttpUriRequestResponse httpUriRequest(final SolrRequest request, final ResponseParser processor) throws SolrServerException, IOException {\n    HttpUriRequestResponse mrr = new HttpUriRequestResponse();\n    final HttpRequestBase method = createMethod(request);\n    ExecutorService pool = Executors.newFixedThreadPool(1, new SolrjNamedThreadFactory(\"httpUriRequest\"));\n    try {\n      mrr.future = pool.submit(new Callable<NamedList<Object>>(){\n\n        @Override\n        public NamedList<Object> call() throws Exception {\n          return executeMethod(method, processor);\n        }});\n \n    } finally {\n      pool.shutdown();\n    }\n    assert method != null;\n    mrr.httpUriRequest = method;\n    return mrr;\n  }\n\n","sourceOld":"  /**\n   * @lucene.experimental\n   */\n  public HttpUriRequestResponse httpUriRequest(final SolrRequest request, final ResponseParser processor) throws SolrServerException, IOException {\n    HttpUriRequestResponse mrr = new HttpUriRequestResponse();\n    final HttpRequestBase method = createMethod(request);\n    ExecutorService pool = Executors.newFixedThreadPool(1, new SolrjNamedThreadFactory(\"httpUriRequest\"));\n    try {\n      mrr.future = pool.submit(new Callable<NamedList<Object>>(){\n\n        @Override\n        public NamedList<Object> call() throws Exception {\n          return executeMethod(method, processor);\n        }});\n \n    } finally {\n      pool.shutdown();\n    }\n    assert method != null;\n    mrr.httpUriRequest = method;\n    return mrr;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56adbf0a7e41e340242f7a731b5c491f6805246e":["fee8f787196eb664b953b851d18c52f0d8c9e157"],"fee8f787196eb664b953b851d18c52f0d8c9e157":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["56adbf0a7e41e340242f7a731b5c491f6805246e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"56adbf0a7e41e340242f7a731b5c491f6805246e":["bafca15d8e408346a67f4282ad1143b88023893b"],"fee8f787196eb664b953b851d18c52f0d8c9e157":["56adbf0a7e41e340242f7a731b5c491f6805246e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fee8f787196eb664b953b851d18c52f0d8c9e157"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}