{"path":"lucene/facet/src/java/org/apache/lucene/facet/sortedset/SortedSetDocValuesFacetCounts#SortedSetDocValuesFacetCounts(SortedSetDocValuesReaderState,FacetsCollector).mjava","commits":[{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/sortedset/SortedSetDocValuesFacetCounts#SortedSetDocValuesFacetCounts(SortedSetDocValuesReaderState,FacetsCollector).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/SortedSetDocValuesFacetCounts#SortedSetDocValuesFacetCounts(SortedSetDocValuesReaderState,FacetsCollector).mjava","sourceNew":"  /** Sparse faceting: returns any dimension that had any\n   *  hits, topCount labels per dimension. */\n  public SortedSetDocValuesFacetCounts(SortedSetDocValuesReaderState state, FacetsCollector hits)\n      throws IOException {\n    this.state = state;\n    this.field = state.getField();\n    counts = new int[state.getSize()];\n    dv = state.getDocValues();\n    //System.out.println(\"field=\" + field);\n    count(hits.getMatchingDocs());\n  }\n\n","sourceOld":"  /** Sparse faceting: returns any dimension that had any\n   *  hits, topCount labels per dimension. */\n  public SortedSetDocValuesFacetCounts(SortedSetDocValuesReaderState state, FacetsCollector hits)\n      throws IOException {\n    this.state = state;\n    this.field = state.getField();\n    counts = new int[state.getSize()];\n    dv = state.getDocValues();\n    //System.out.println(\"field=\" + field);\n    count(hits.getMatchingDocs());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/sortedset/SortedSetDocValuesFacetCounts#SortedSetDocValuesFacetCounts(SortedSetDocValuesReaderState,FacetsCollector).mjava","pathOld":"/dev/null","sourceNew":"  /** Sparse faceting: returns any dimension that had any\n   *  hits, topCount labels per dimension. */\n  public SortedSetDocValuesFacetCounts(SortedSetDocValuesReaderState state, FacetsCollector hits)\n      throws IOException {\n    this.state = state;\n    this.field = state.getField();\n    counts = new int[state.getSize()];\n    dv = state.getDocValues();\n    //System.out.println(\"field=\" + field);\n    count(hits.getMatchingDocs());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30fc8c22124fdcf9d76449bd2fa04decbe74e2e2","date":1391685460,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/sortedset/SortedSetDocValuesFacetCounts#SortedSetDocValuesFacetCounts(SortedSetDocValuesReaderState,FacetsCollector).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/sortedset/SortedSetDocValuesFacetCounts#SortedSetDocValuesFacetCounts(SortedSetDocValuesReaderState,FacetsCollector).mjava","sourceNew":"  /** Sparse faceting: returns any dimension that had any\n   *  hits, topCount labels per dimension. */\n  public SortedSetDocValuesFacetCounts(SortedSetDocValuesReaderState state, FacetsCollector hits)\n      throws IOException {\n    this.state = state;\n    this.field = state.getField();\n    dv = state.getDocValues();    \n    counts = new int[state.getSize()];\n    //System.out.println(\"field=\" + field);\n    count(hits.getMatchingDocs());\n  }\n\n","sourceOld":"  /** Sparse faceting: returns any dimension that had any\n   *  hits, topCount labels per dimension. */\n  public SortedSetDocValuesFacetCounts(SortedSetDocValuesReaderState state, FacetsCollector hits)\n      throws IOException {\n    this.state = state;\n    this.field = state.getField();\n    counts = new int[state.getSize()];\n    dv = state.getDocValues();\n    //System.out.println(\"field=\" + field);\n    count(hits.getMatchingDocs());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8cfd1df435f04d4287925cca73cf22120f723892","date":1493925365,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/sortedset/SortedSetDocValuesFacetCounts#SortedSetDocValuesFacetCounts(SortedSetDocValuesReaderState,FacetsCollector).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/sortedset/SortedSetDocValuesFacetCounts#SortedSetDocValuesFacetCounts(SortedSetDocValuesReaderState,FacetsCollector).mjava","sourceNew":"  /** Counts all facet dimensions across the provided hits. */\n  public SortedSetDocValuesFacetCounts(SortedSetDocValuesReaderState state, FacetsCollector hits)\n      throws IOException {\n    this.state = state;\n    this.field = state.getField();\n    dv = state.getDocValues();    \n    counts = new int[state.getSize()];\n    if (hits == null) {\n      // browse only\n      countAll();\n    } else {\n      count(hits.getMatchingDocs());\n    }\n  }\n\n","sourceOld":"  /** Sparse faceting: returns any dimension that had any\n   *  hits, topCount labels per dimension. */\n  public SortedSetDocValuesFacetCounts(SortedSetDocValuesReaderState state, FacetsCollector hits)\n      throws IOException {\n    this.state = state;\n    this.field = state.getField();\n    dv = state.getDocValues();    \n    counts = new int[state.getSize()];\n    //System.out.println(\"field=\" + field);\n    count(hits.getMatchingDocs());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/sortedset/SortedSetDocValuesFacetCounts#SortedSetDocValuesFacetCounts(SortedSetDocValuesReaderState,FacetsCollector).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/sortedset/SortedSetDocValuesFacetCounts#SortedSetDocValuesFacetCounts(SortedSetDocValuesReaderState,FacetsCollector).mjava","sourceNew":"  /** Counts all facet dimensions across the provided hits. */\n  public SortedSetDocValuesFacetCounts(SortedSetDocValuesReaderState state, FacetsCollector hits)\n      throws IOException {\n    this.state = state;\n    this.field = state.getField();\n    dv = state.getDocValues();    \n    counts = new int[state.getSize()];\n    if (hits == null) {\n      // browse only\n      countAll();\n    } else {\n      count(hits.getMatchingDocs());\n    }\n  }\n\n","sourceOld":"  /** Sparse faceting: returns any dimension that had any\n   *  hits, topCount labels per dimension. */\n  public SortedSetDocValuesFacetCounts(SortedSetDocValuesReaderState state, FacetsCollector hits)\n      throws IOException {\n    this.state = state;\n    this.field = state.getField();\n    dv = state.getDocValues();    \n    counts = new int[state.getSize()];\n    //System.out.println(\"field=\" + field);\n    count(hits.getMatchingDocs());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8cfd1df435f04d4287925cca73cf22120f723892":["30fc8c22124fdcf9d76449bd2fa04decbe74e2e2"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["30fc8c22124fdcf9d76449bd2fa04decbe74e2e2","8cfd1df435f04d4287925cca73cf22120f723892"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"30fc8c22124fdcf9d76449bd2fa04decbe74e2e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4edc984f0f4ac77c37e48ace2932f780f888453c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8cfd1df435f04d4287925cca73cf22120f723892"]},"commit2Childs":{"8cfd1df435f04d4287925cca73cf22120f723892":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4edc984f0f4ac77c37e48ace2932f780f888453c","3cc728b07df73b197e6d940d27f9b08b63918f13"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"30fc8c22124fdcf9d76449bd2fa04decbe74e2e2":["8cfd1df435f04d4287925cca73cf22120f723892","e9017cf144952056066919f1ebc7897ff9bd71b1"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["30fc8c22124fdcf9d76449bd2fa04decbe74e2e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}