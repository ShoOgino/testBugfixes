{"path":"lucene/src/java/org/apache/lucene/index/SegmentInfos#files(Directory,boolean).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfos#files(Directory,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfos#files(Directory,boolean).mjava","sourceNew":"  /** Returns all file names referenced by SegmentInfo\n   *  instances matching the provided Directory (ie files\n   *  associated with any \"external\" segments are skipped).\n   *  The returned collection is recomputed on each\n   *  invocation.  */\n  public Collection<String> files(Directory dir, boolean includeSegmentsFile) throws IOException {\n    HashSet<String> files = new HashSet<String>();\n    if (includeSegmentsFile) {\n      files.add(getCurrentSegmentFileName());\n    }\n    final int size = size();\n    for(int i=0;i<size;i++) {\n      final SegmentInfo info = info(i);\n      if (info.dir == dir) {\n        files.addAll(info(i).files());\n      }\n    }\n    return files;\n  }\n\n","sourceOld":"  /** Returns all file names referenced by SegmentInfo\n   *  instances matching the provided Directory (ie files\n   *  associated with any \"external\" segments are skipped).\n   *  The returned collection is recomputed on each\n   *  invocation.  */\n  public Collection<String> files(Directory dir, boolean includeSegmentsFile) throws IOException {\n    HashSet<String> files = new HashSet<String>();\n    if (includeSegmentsFile) {\n      files.add(getCurrentSegmentFileName());\n    }\n    final int size = size();\n    for(int i=0;i<size;i++) {\n      final SegmentInfo info = info(i);\n      if (info.dir == dir) {\n        files.addAll(info(i).files());\n      }\n    }\n    return files;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1224a4027481acce15495b03bce9b48b93b42722","date":1300792329,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfos#files(Directory,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#files(Directory,boolean).mjava","sourceNew":"  /** Returns all file names referenced by SegmentInfo\n   *  instances matching the provided Directory (ie files\n   *  associated with any \"external\" segments are skipped).\n   *  The returned collection is recomputed on each\n   *  invocation.  */\n  public Collection<String> files(Directory dir, boolean includeSegmentsFile) throws IOException {\n    HashSet<String> files = new HashSet<String>();\n    if (includeSegmentsFile) {\n      final String segmentFileName = getCurrentSegmentFileName();\n      if (segmentFileName != null) {\n        /*\n         * TODO: if lastGen == -1 we get might get null here it seems wrong to\n         * add null to the files set\n         */\n        files.add(segmentFileName);\n      }\n      if (lastGlobalFieldMapVersion > 0) {\n        files.add(getGlobalFieldNumberName(lastGlobalFieldMapVersion));\n      }\n    }\n    final int size = size();\n    for(int i=0;i<size;i++) {\n      final SegmentInfo info = info(i);\n      if (info.dir == dir) {\n        files.addAll(info(i).files());\n      }\n    }\n    return files;\n  }\n\n","sourceOld":"  /** Returns all file names referenced by SegmentInfo\n   *  instances matching the provided Directory (ie files\n   *  associated with any \"external\" segments are skipped).\n   *  The returned collection is recomputed on each\n   *  invocation.  */\n  public Collection<String> files(Directory dir, boolean includeSegmentsFile) throws IOException {\n    HashSet<String> files = new HashSet<String>();\n    if (includeSegmentsFile) {\n      files.add(getCurrentSegmentFileName());\n    }\n    final int size = size();\n    for(int i=0;i<size;i++) {\n      final SegmentInfo info = info(i);\n      if (info.dir == dir) {\n        files.addAll(info(i).files());\n      }\n    }\n    return files;\n  }\n\n","bugFix":null,"bugIntro":["47d5b6b2c183bf4deaffb52b7cb8dec16c8dcf0f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfos#files(Directory,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#files(Directory,boolean).mjava","sourceNew":"  /** Returns all file names referenced by SegmentInfo\n   *  instances matching the provided Directory (ie files\n   *  associated with any \"external\" segments are skipped).\n   *  The returned collection is recomputed on each\n   *  invocation.  */\n  public Collection<String> files(Directory dir, boolean includeSegmentsFile) throws IOException {\n    HashSet<String> files = new HashSet<String>();\n    if (includeSegmentsFile) {\n      final String segmentFileName = getCurrentSegmentFileName();\n      if (segmentFileName != null) {\n        /*\n         * TODO: if lastGen == -1 we get might get null here it seems wrong to\n         * add null to the files set\n         */\n        files.add(segmentFileName);\n      }\n      if (lastGlobalFieldMapVersion > 0) {\n        files.add(getGlobalFieldNumberName(lastGlobalFieldMapVersion));\n      }\n    }\n    final int size = size();\n    for(int i=0;i<size;i++) {\n      final SegmentInfo info = info(i);\n      if (info.dir == dir) {\n        files.addAll(info(i).files());\n      }\n    }\n    return files;\n  }\n\n","sourceOld":"  /** Returns all file names referenced by SegmentInfo\n   *  instances matching the provided Directory (ie files\n   *  associated with any \"external\" segments are skipped).\n   *  The returned collection is recomputed on each\n   *  invocation.  */\n  public Collection<String> files(Directory dir, boolean includeSegmentsFile) throws IOException {\n    HashSet<String> files = new HashSet<String>();\n    if (includeSegmentsFile) {\n      files.add(getCurrentSegmentFileName());\n    }\n    final int size = size();\n    for(int i=0;i<size;i++) {\n      final SegmentInfo info = info(i);\n      if (info.dir == dir) {\n        files.addAll(info(i).files());\n      }\n    }\n    return files;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfos#files(Directory,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#files(Directory,boolean).mjava","sourceNew":"  /** Returns all file names referenced by SegmentInfo\n   *  instances matching the provided Directory (ie files\n   *  associated with any \"external\" segments are skipped).\n   *  The returned collection is recomputed on each\n   *  invocation.  */\n  public Collection<String> files(Directory dir, boolean includeSegmentsFile) throws IOException {\n    HashSet<String> files = new HashSet<String>();\n    if (includeSegmentsFile) {\n      final String segmentFileName = getCurrentSegmentFileName();\n      if (segmentFileName != null) {\n        /*\n         * TODO: if lastGen == -1 we get might get null here it seems wrong to\n         * add null to the files set\n         */\n        files.add(segmentFileName);\n      }\n      if (lastGlobalFieldMapVersion > 0) {\n        files.add(getGlobalFieldNumberName(lastGlobalFieldMapVersion));\n      }\n    }\n    final int size = size();\n    for(int i=0;i<size;i++) {\n      final SegmentInfo info = info(i);\n      if (info.dir == dir) {\n        files.addAll(info(i).files());\n      }\n    }\n    return files;\n  }\n\n","sourceOld":"  /** Returns all file names referenced by SegmentInfo\n   *  instances matching the provided Directory (ie files\n   *  associated with any \"external\" segments are skipped).\n   *  The returned collection is recomputed on each\n   *  invocation.  */\n  public Collection<String> files(Directory dir, boolean includeSegmentsFile) throws IOException {\n    HashSet<String> files = new HashSet<String>();\n    if (includeSegmentsFile) {\n      files.add(getCurrentSegmentFileName());\n    }\n    final int size = size();\n    for(int i=0;i<size;i++) {\n      final SegmentInfo info = info(i);\n      if (info.dir == dir) {\n        files.addAll(info(i).files());\n      }\n    }\n    return files;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"47d5b6b2c183bf4deaffb52b7cb8dec16c8dcf0f","date":1322512504,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfos#files(Directory,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#files(Directory,boolean).mjava","sourceNew":"  /** Returns all file names referenced by SegmentInfo\n   *  instances matching the provided Directory (ie files\n   *  associated with any \"external\" segments are skipped).\n   *  The returned collection is recomputed on each\n   *  invocation.  */\n  public Collection<String> files(Directory dir, boolean includeSegmentsFile) throws IOException {\n    HashSet<String> files = new HashSet<String>();\n    if (includeSegmentsFile) {\n      final String segmentFileName = getCurrentSegmentFileName();\n      if (segmentFileName != null) {\n        /*\n         * TODO: if lastGen == -1 we get might get null here it seems wrong to\n         * add null to the files set\n         */\n        files.add(segmentFileName);\n      }\n    }\n    if (lastGlobalFieldMapVersion > 0) {\n      files.add(getGlobalFieldNumberName(lastGlobalFieldMapVersion));\n    }\n    final int size = size();\n    for(int i=0;i<size;i++) {\n      final SegmentInfo info = info(i);\n      if (info.dir == dir) {\n        files.addAll(info(i).files());\n      }\n    }\n    return files;\n  }\n\n","sourceOld":"  /** Returns all file names referenced by SegmentInfo\n   *  instances matching the provided Directory (ie files\n   *  associated with any \"external\" segments are skipped).\n   *  The returned collection is recomputed on each\n   *  invocation.  */\n  public Collection<String> files(Directory dir, boolean includeSegmentsFile) throws IOException {\n    HashSet<String> files = new HashSet<String>();\n    if (includeSegmentsFile) {\n      final String segmentFileName = getCurrentSegmentFileName();\n      if (segmentFileName != null) {\n        /*\n         * TODO: if lastGen == -1 we get might get null here it seems wrong to\n         * add null to the files set\n         */\n        files.add(segmentFileName);\n      }\n      if (lastGlobalFieldMapVersion > 0) {\n        files.add(getGlobalFieldNumberName(lastGlobalFieldMapVersion));\n      }\n    }\n    final int size = size();\n    for(int i=0;i<size;i++) {\n      final SegmentInfo info = info(i);\n      if (info.dir == dir) {\n        files.addAll(info(i).files());\n      }\n    }\n    return files;\n  }\n\n","bugFix":["1224a4027481acce15495b03bce9b48b93b42722"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"319624eb66a10b717d3e66af448543e7dc5c479d","date":1322741556,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfos#files(Directory,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#files(Directory,boolean).mjava","sourceNew":"  /** Returns all file names referenced by SegmentInfo\n   *  instances matching the provided Directory (ie files\n   *  associated with any \"external\" segments are skipped).\n   *  The returned collection is recomputed on each\n   *  invocation.  */\n  public Collection<String> files(Directory dir, boolean includeSegmentsFile) throws IOException {\n    HashSet<String> files = new HashSet<String>();\n    if (includeSegmentsFile) {\n      final String segmentFileName = getCurrentSegmentFileName();\n      if (segmentFileName != null) {\n        /*\n         * TODO: if lastGen == -1 we get might get null here it seems wrong to\n         * add null to the files set\n         */\n        files.add(segmentFileName);\n      }\n    }\n    final int size = size();\n    for(int i=0;i<size;i++) {\n      final SegmentInfo info = info(i);\n      if (info.dir == dir) {\n        files.addAll(info(i).files());\n      }\n    }\n    return files;\n  }\n\n","sourceOld":"  /** Returns all file names referenced by SegmentInfo\n   *  instances matching the provided Directory (ie files\n   *  associated with any \"external\" segments are skipped).\n   *  The returned collection is recomputed on each\n   *  invocation.  */\n  public Collection<String> files(Directory dir, boolean includeSegmentsFile) throws IOException {\n    HashSet<String> files = new HashSet<String>();\n    if (includeSegmentsFile) {\n      final String segmentFileName = getCurrentSegmentFileName();\n      if (segmentFileName != null) {\n        /*\n         * TODO: if lastGen == -1 we get might get null here it seems wrong to\n         * add null to the files set\n         */\n        files.add(segmentFileName);\n      }\n    }\n    if (lastGlobalFieldMapVersion > 0) {\n      files.add(getGlobalFieldNumberName(lastGlobalFieldMapVersion));\n    }\n    final int size = size();\n    for(int i=0;i<size;i++) {\n      final SegmentInfo info = info(i);\n      if (info.dir == dir) {\n        files.addAll(info(i).files());\n      }\n    }\n    return files;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#files(Directory,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#files(Directory,boolean).mjava","sourceNew":"  /** Returns all file names referenced by SegmentInfo\n   *  instances matching the provided Directory (ie files\n   *  associated with any \"external\" segments are skipped).\n   *  The returned collection is recomputed on each\n   *  invocation.  */\n  public Collection<String> files(Directory dir, boolean includeSegmentsFile) throws IOException {\n    HashSet<String> files = new HashSet<String>();\n    if (includeSegmentsFile) {\n      final String segmentFileName = getCurrentSegmentFileName();\n      if (segmentFileName != null) {\n        /*\n         * TODO: if lastGen == -1 we get might get null here it seems wrong to\n         * add null to the files set\n         */\n        files.add(segmentFileName);\n      }\n    }\n    final int size = size();\n    for(int i=0;i<size;i++) {\n      final SegmentInfo info = info(i);\n      if (info.dir == dir) {\n        files.addAll(info(i).files());\n      }\n    }\n    return files;\n  }\n\n","sourceOld":"  /** Returns all file names referenced by SegmentInfo\n   *  instances matching the provided Directory (ie files\n   *  associated with any \"external\" segments are skipped).\n   *  The returned collection is recomputed on each\n   *  invocation.  */\n  public Collection<String> files(Directory dir, boolean includeSegmentsFile) throws IOException {\n    HashSet<String> files = new HashSet<String>();\n    if (includeSegmentsFile) {\n      final String segmentFileName = getCurrentSegmentFileName();\n      if (segmentFileName != null) {\n        /*\n         * TODO: if lastGen == -1 we get might get null here it seems wrong to\n         * add null to the files set\n         */\n        files.add(segmentFileName);\n      }\n    }\n    final int size = size();\n    for(int i=0;i<size;i++) {\n      final SegmentInfo info = info(i);\n      if (info.dir == dir) {\n        files.addAll(info(i).files());\n      }\n    }\n    return files;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["9454a6510e2db155fb01faa5c049b06ece95fab9","1224a4027481acce15495b03bce9b48b93b42722"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["9454a6510e2db155fb01faa5c049b06ece95fab9","1224a4027481acce15495b03bce9b48b93b42722"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["319624eb66a10b717d3e66af448543e7dc5c479d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"319624eb66a10b717d3e66af448543e7dc5c479d":["47d5b6b2c183bf4deaffb52b7cb8dec16c8dcf0f"],"47d5b6b2c183bf4deaffb52b7cb8dec16c8dcf0f":["1224a4027481acce15495b03bce9b48b93b42722"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1224a4027481acce15495b03bce9b48b93b42722":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"319624eb66a10b717d3e66af448543e7dc5c479d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"47d5b6b2c183bf4deaffb52b7cb8dec16c8dcf0f":["319624eb66a10b717d3e66af448543e7dc5c479d"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","1224a4027481acce15495b03bce9b48b93b42722"],"1224a4027481acce15495b03bce9b48b93b42722":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","47d5b6b2c183bf4deaffb52b7cb8dec16c8dcf0f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}