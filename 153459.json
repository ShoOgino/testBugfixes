{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/FSTDictionary#write(DataOutput,BlockEncoder).mjava","commits":[{"id":"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89","date":1567784912,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/FSTDictionary#write(DataOutput,BlockEncoder).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void write(DataOutput output, BlockEncoder blockEncoder) throws IOException {\n    if (blockEncoder == null) {\n      dictionary.save(output);\n    } else {\n      ByteBuffersDataOutput bytesDataOutput = ByteBuffersDataOutput.newResettableInstance();\n      dictionary.save(bytesDataOutput);\n      BlockEncoder.WritableBytes encodedBytes = blockEncoder.encode(bytesDataOutput.toDataInput(), bytesDataOutput.size());\n      output.writeVLong(encodedBytes.size());\n      encodedBytes.writeTo(output);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97ee06ea0335fd2077527d81c4c993c86e06f0da","date":1583768142,"type":3,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/FSTDictionary#write(DataOutput,BlockEncoder).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/FSTDictionary#write(DataOutput,BlockEncoder).mjava","sourceNew":"  @Override\n  public void write(DataOutput output, BlockEncoder blockEncoder) throws IOException {\n    if (blockEncoder == null) {\n      fst.save(output);\n    } else {\n      ByteBuffersDataOutput bytesDataOutput = ByteBuffersDataOutput.newResettableInstance();\n      fst.save(bytesDataOutput);\n      BlockEncoder.WritableBytes encodedBytes = blockEncoder.encode(bytesDataOutput.toDataInput(), bytesDataOutput.size());\n      output.writeVLong(encodedBytes.size());\n      encodedBytes.writeTo(output);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(DataOutput output, BlockEncoder blockEncoder) throws IOException {\n    if (blockEncoder == null) {\n      dictionary.save(output);\n    } else {\n      ByteBuffersDataOutput bytesDataOutput = ByteBuffersDataOutput.newResettableInstance();\n      dictionary.save(bytesDataOutput);\n      BlockEncoder.WritableBytes encodedBytes = blockEncoder.encode(bytesDataOutput.toDataInput(), bytesDataOutput.size());\n      output.writeVLong(encodedBytes.size());\n      encodedBytes.writeTo(output);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99f06f5dd087b1829e7b4139e4d014c786b92572","date":1592312728,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/FSTDictionary#write(DataOutput,BlockEncoder).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/FSTDictionary#write(DataOutput,BlockEncoder).mjava","sourceNew":"  @Override\n  public void write(DataOutput output, BlockEncoder blockEncoder) throws IOException {\n    if (blockEncoder == null) {\n      fst.save(output, output);\n    } else {\n      ByteBuffersDataOutput bytesDataOutput = ByteBuffersDataOutput.newResettableInstance();\n      fst.save(bytesDataOutput, bytesDataOutput);\n      BlockEncoder.WritableBytes encodedBytes = blockEncoder.encode(bytesDataOutput.toDataInput(), bytesDataOutput.size());\n      output.writeVLong(encodedBytes.size());\n      encodedBytes.writeTo(output);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(DataOutput output, BlockEncoder blockEncoder) throws IOException {\n    if (blockEncoder == null) {\n      fst.save(output);\n    } else {\n      ByteBuffersDataOutput bytesDataOutput = ByteBuffersDataOutput.newResettableInstance();\n      fst.save(bytesDataOutput);\n      BlockEncoder.WritableBytes encodedBytes = blockEncoder.encode(bytesDataOutput.toDataInput(), bytesDataOutput.size());\n      output.writeVLong(encodedBytes.size());\n      encodedBytes.writeTo(output);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee06ea0335fd2077527d81c4c993c86e06f0da":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"99f06f5dd087b1829e7b4139e4d014c786b92572":["97ee06ea0335fd2077527d81c4c993c86e06f0da"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["99f06f5dd087b1829e7b4139e4d014c786b92572"]},"commit2Childs":{"97ee06ea0335fd2077527d81c4c993c86e06f0da":["99f06f5dd087b1829e7b4139e4d014c786b92572"],"99f06f5dd087b1829e7b4139e4d014c786b92572":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["97ee06ea0335fd2077527d81c4c993c86e06f0da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}