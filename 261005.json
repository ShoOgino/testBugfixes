{"path":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,boolean,Type).mjava","commits":[{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,boolean,Type).mjava","pathOld":"/dev/null","sourceNew":"  FieldInfo(String na, boolean tk, int nu, boolean storeTermVector, \n            boolean storePositionWithTermVector,  boolean storeOffsetWithTermVector, \n            boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, Type docValues) {\n    name = na;\n    isIndexed = tk;\n    number = nu;\n    this.docValues = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storeOffsetWithTermVector = storeOffsetWithTermVector;\n      this.storePositionWithTermVector = storePositionWithTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.omitTermFreqAndPositions = omitTermFreqAndPositions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storeOffsetWithTermVector = false;\n      this.storePositionWithTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.omitTermFreqAndPositions = false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,boolean,Type).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,boolean,Type).mjava","sourceNew":"  FieldInfo(String na, boolean tk, int nu, boolean storeTermVector, \n            boolean storePositionWithTermVector,  boolean storeOffsetWithTermVector, \n            boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, Type docValues) {\n    name = na;\n    isIndexed = tk;\n    number = nu;\n    this.docValues = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storeOffsetWithTermVector = storeOffsetWithTermVector;\n      this.storePositionWithTermVector = storePositionWithTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.omitTermFreqAndPositions = omitTermFreqAndPositions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storeOffsetWithTermVector = false;\n      this.storePositionWithTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.omitTermFreqAndPositions = false;\n    }\n    assert !omitTermFreqAndPositions || !storePayloads;\n  }\n\n","sourceOld":"  FieldInfo(String na, boolean tk, int nu, boolean storeTermVector, \n            boolean storePositionWithTermVector,  boolean storeOffsetWithTermVector, \n            boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, Type docValues) {\n    name = na;\n    isIndexed = tk;\n    number = nu;\n    this.docValues = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storeOffsetWithTermVector = storeOffsetWithTermVector;\n      this.storePositionWithTermVector = storePositionWithTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.omitTermFreqAndPositions = omitTermFreqAndPositions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storeOffsetWithTermVector = false;\n      this.storePositionWithTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.omitTermFreqAndPositions = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39d51e9acac1e629cffe47855e85dc6dedc4754d","date":1305711497,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,boolean,ValueType).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,boolean,boolean,boolean,Type).mjava","sourceNew":"  FieldInfo(String na, boolean tk, int nu, boolean storeTermVector, \n            boolean storePositionWithTermVector,  boolean storeOffsetWithTermVector, \n            boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, ValueType docValues) {\n    name = na;\n    isIndexed = tk;\n    number = nu;\n    this.docValues = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storeOffsetWithTermVector = storeOffsetWithTermVector;\n      this.storePositionWithTermVector = storePositionWithTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.omitTermFreqAndPositions = omitTermFreqAndPositions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storeOffsetWithTermVector = false;\n      this.storePositionWithTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.omitTermFreqAndPositions = false;\n    }\n    assert !omitTermFreqAndPositions || !storePayloads;\n  }\n\n","sourceOld":"  FieldInfo(String na, boolean tk, int nu, boolean storeTermVector, \n            boolean storePositionWithTermVector,  boolean storeOffsetWithTermVector, \n            boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions, Type docValues) {\n    name = na;\n    isIndexed = tk;\n    number = nu;\n    this.docValues = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storeOffsetWithTermVector = storeOffsetWithTermVector;\n      this.storePositionWithTermVector = storePositionWithTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.omitTermFreqAndPositions = omitTermFreqAndPositions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storeOffsetWithTermVector = false;\n      this.storePositionWithTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.omitTermFreqAndPositions = false;\n    }\n    assert !omitTermFreqAndPositions || !storePayloads;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"39d51e9acac1e629cffe47855e85dc6dedc4754d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["d619839baa8ce5503e496b94a9e42ad6f079293f","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"39d51e9acac1e629cffe47855e85dc6dedc4754d":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["39d51e9acac1e629cffe47855e85dc6dedc4754d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d619839baa8ce5503e496b94a9e42ad6f079293f","135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["39d51e9acac1e629cffe47855e85dc6dedc4754d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}