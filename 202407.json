{"path":"src/java/org/apache/lucene/search/MultiSearcher#searcherIndex(int).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/MultiSearcher#searcherIndex(int).mjava","pathOld":"/dev/null","sourceNew":"  // replace w/ call to Arrays.binarySearch in Java 1.2\n  private final int searcherIndex(int n) {\t  // find searcher for doc n:\n    int lo = 0;\t\t\t\t\t  // search starts array\n    int hi = searchers.length - 1;\t\t  // for first element less\n\t\t\t\t\t\t  // than n, return its index\n    while (hi >= lo) {\n      int mid = (lo + hi) >> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n\thi = mid - 1;\n      else if (n > midValue)\n\tlo = mid + 1;\n      else\n\treturn mid;\n    }\n    return hi;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf4e1d12af525a2fb396e59a2d3aa7140cb727a1","date":1001444615,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/MultiSearcher#searcherIndex(int).mjava","pathOld":"src/java/org/apache/lucene/search/MultiSearcher#searcherIndex(int).mjava","sourceNew":"  /** For use by {@link HitCollector} implementations to identify the\n   * index of the sub-searcher that a particular hit came from. */\n  public final int searcherIndex(int n) {\t  // find searcher for doc n:\n    // replace w/ call to Arrays.binarySearch in Java 1.2\n    int lo = 0;\t\t\t\t\t  // search starts array\n    int hi = searchers.length - 1;\t\t  // for first element less\n\t\t\t\t\t\t  // than n, return its index\n    while (hi >= lo) {\n      int mid = (lo + hi) >> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n\thi = mid - 1;\n      else if (n > midValue)\n\tlo = mid + 1;\n      else\n\treturn mid;\n    }\n    return hi;\n  }\n\n","sourceOld":"  // replace w/ call to Arrays.binarySearch in Java 1.2\n  private final int searcherIndex(int n) {\t  // find searcher for doc n:\n    int lo = 0;\t\t\t\t\t  // search starts array\n    int hi = searchers.length - 1;\t\t  // for first element less\n\t\t\t\t\t\t  // than n, return its index\n    while (hi >= lo) {\n      int mid = (lo + hi) >> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n\thi = mid - 1;\n      else if (n > midValue)\n\tlo = mid + 1;\n      else\n\treturn mid;\n    }\n    return hi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c7454619ea6a0710272c1dd947345cee64489f6","date":1026927484,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/MultiSearcher#searcherIndex(int).mjava","pathOld":"src/java/org/apache/lucene/search/MultiSearcher#searcherIndex(int).mjava","sourceNew":"  /** For use by {@link HitCollector} implementations to identify the\n   * index of the sub-searcher that a particular hit came from. */\n  public int searcherIndex(int n) {               // find searcher for doc n:\n    // replace w/ call to Arrays.binarySearch in Java 1.2\n    int lo = 0;\t\t\t\t\t  // search starts array\n    int hi = searchables.length - 1;\t\t  // for first element less\n\t\t\t\t\t\t  // than n, return its index\n    while (hi >= lo) {\n      int mid = (lo + hi) >> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n\thi = mid - 1;\n      else if (n > midValue)\n\tlo = mid + 1;\n      else\n\treturn mid;\n    }\n    return hi;\n  }\n\n","sourceOld":"  /** For use by {@link HitCollector} implementations to identify the\n   * index of the sub-searcher that a particular hit came from. */\n  public final int searcherIndex(int n) {\t  // find searcher for doc n:\n    // replace w/ call to Arrays.binarySearch in Java 1.2\n    int lo = 0;\t\t\t\t\t  // search starts array\n    int hi = searchers.length - 1;\t\t  // for first element less\n\t\t\t\t\t\t  // than n, return its index\n    while (hi >= lo) {\n      int mid = (lo + hi) >> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n\thi = mid - 1;\n      else if (n > midValue)\n\tlo = mid + 1;\n      else\n\treturn mid;\n    }\n    return hi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a93e3315d6745a15e035a53c8ea1b80c08eff45","date":1032542713,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/MultiSearcher#searcherIndex(int).mjava","pathOld":"src/java/org/apache/lucene/search/MultiSearcher#searcherIndex(int).mjava","sourceNew":"  /** For use by {@link HitCollector} implementations to identify the\n   * index of the sub-searcher that a particular hit came from. */\n  public int searcherIndex(int n) {               // find searcher for doc n:\n    // replace w/ call to Arrays.binarySearch in Java 1.2\n    int lo = 0;\t\t\t\t\t  // search starts array\n    int hi = searchables.length - 1;\t\t  // for first element less\n\t\t\t\t\t\t  // than n, return its index\n    while (hi >= lo) {\n      int mid = (lo + hi) >> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n\thi = mid - 1;\n      else if (n > midValue)\n\tlo = mid + 1;\n      else {                                      // found a match\n        while (mid+1 < searchables.length && starts[mid+1] == midValue) {\n          mid++;                                  // scan to last match\n        }\n\treturn mid;\n      }\n    }\n    return hi;\n  }\n\n","sourceOld":"  /** For use by {@link HitCollector} implementations to identify the\n   * index of the sub-searcher that a particular hit came from. */\n  public int searcherIndex(int n) {               // find searcher for doc n:\n    // replace w/ call to Arrays.binarySearch in Java 1.2\n    int lo = 0;\t\t\t\t\t  // search starts array\n    int hi = searchables.length - 1;\t\t  // for first element less\n\t\t\t\t\t\t  // than n, return its index\n    while (hi >= lo) {\n      int mid = (lo + hi) >> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n\thi = mid - 1;\n      else if (n > midValue)\n\tlo = mid + 1;\n      else\n\treturn mid;\n    }\n    return hi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15b63976d8de97abe14baba7ecc050f2399a063e","date":1038257415,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/MultiSearcher#searcherIndex(int).mjava","pathOld":"src/java/org/apache/lucene/search/MultiSearcher#searcherIndex(int).mjava","sourceNew":"  /** Call {@link #subSearcher} instead.\n   * @deprecated\n   */\n  public int searcherIndex(int n) {\n    return subSearcher(n);\n  }\n\n","sourceOld":"  /** For use by {@link HitCollector} implementations to identify the\n   * index of the sub-searcher that a particular hit came from. */\n  public int searcherIndex(int n) {               // find searcher for doc n:\n    // replace w/ call to Arrays.binarySearch in Java 1.2\n    int lo = 0;\t\t\t\t\t  // search starts array\n    int hi = searchables.length - 1;\t\t  // for first element less\n\t\t\t\t\t\t  // than n, return its index\n    while (hi >= lo) {\n      int mid = (lo + hi) >> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n\thi = mid - 1;\n      else if (n > midValue)\n\tlo = mid + 1;\n      else {                                      // found a match\n        while (mid+1 < searchables.length && starts[mid+1] == midValue) {\n          mid++;                                  // scan to last match\n        }\n\treturn mid;\n      }\n    }\n    return hi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/MultiSearcher#searcherIndex(int).mjava","sourceNew":null,"sourceOld":"  /** Call {@link #subSearcher} instead.\n   * @deprecated\n   */\n  public int searcherIndex(int n) {\n    return subSearcher(n);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"15b63976d8de97abe14baba7ecc050f2399a063e":["7a93e3315d6745a15e035a53c8ea1b80c08eff45"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["15b63976d8de97abe14baba7ecc050f2399a063e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9c7454619ea6a0710272c1dd947345cee64489f6":["bf4e1d12af525a2fb396e59a2d3aa7140cb727a1"],"7a93e3315d6745a15e035a53c8ea1b80c08eff45":["9c7454619ea6a0710272c1dd947345cee64489f6"],"bf4e1d12af525a2fb396e59a2d3aa7140cb727a1":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"]},"commit2Childs":{"15b63976d8de97abe14baba7ecc050f2399a063e":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["bf4e1d12af525a2fb396e59a2d3aa7140cb727a1"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"9c7454619ea6a0710272c1dd947345cee64489f6":["7a93e3315d6745a15e035a53c8ea1b80c08eff45"],"7a93e3315d6745a15e035a53c8ea1b80c08eff45":["15b63976d8de97abe14baba7ecc050f2399a063e"],"bf4e1d12af525a2fb396e59a2d3aa7140cb727a1":["9c7454619ea6a0710272c1dd947345cee64489f6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}