{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/TermGroupFacetCollector.SV.SegmentResult#SegmentResult(int[],int,TermsEnum,int,int).mjava","commits":[{"id":"7ae958a739da1866696f442384393ba2f13e33e5","date":1491819018,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/TermGroupFacetCollector.SV.SegmentResult#SegmentResult(int[],int,TermsEnum,int,int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.SV.SegmentResult#SegmentResult(int[],int,TermsEnum,int,int).mjava","sourceNew":"      SegmentResult(int[] counts, int total, TermsEnum tenum, int startFacetOrd, int endFacetOrd) throws IOException {\n        super(counts, total - counts[0], counts[0], endFacetOrd+1);\n        this.tenum = tenum;\n        this.mergePos = startFacetOrd == -1 ? 1 : startFacetOrd+1;\n        if (mergePos < maxTermPos) {\n          assert tenum != null;\n          tenum.seekExact(startFacetOrd == -1 ? 0 : startFacetOrd);\n          mergeTerm = tenum.term();\n        }\n      }\n\n","sourceOld":"      SegmentResult(int[] counts, int total, TermsEnum tenum, int startFacetOrd, int endFacetOrd) throws IOException {\n        super(counts, total - counts[0], counts[0], endFacetOrd+1);\n        this.tenum = tenum;\n        this.mergePos = startFacetOrd == -1 ? 1 : startFacetOrd+1;\n        if (mergePos < maxTermPos) {\n          assert tenum != null;\n          tenum.seekExact(startFacetOrd == -1 ? 0 : startFacetOrd);\n          mergeTerm = tenum.term();\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/TermGroupFacetCollector.SV.SegmentResult#SegmentResult(int[],int,TermsEnum,int,int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.SV.SegmentResult#SegmentResult(int[],int,TermsEnum,int,int).mjava","sourceNew":"      SegmentResult(int[] counts, int total, TermsEnum tenum, int startFacetOrd, int endFacetOrd) throws IOException {\n        super(counts, total - counts[0], counts[0], endFacetOrd+1);\n        this.tenum = tenum;\n        this.mergePos = startFacetOrd == -1 ? 1 : startFacetOrd+1;\n        if (mergePos < maxTermPos) {\n          assert tenum != null;\n          tenum.seekExact(startFacetOrd == -1 ? 0 : startFacetOrd);\n          mergeTerm = tenum.term();\n        }\n      }\n\n","sourceOld":"      SegmentResult(int[] counts, int total, TermsEnum tenum, int startFacetOrd, int endFacetOrd) throws IOException {\n        super(counts, total - counts[0], counts[0], endFacetOrd+1);\n        this.tenum = tenum;\n        this.mergePos = startFacetOrd == -1 ? 1 : startFacetOrd+1;\n        if (mergePos < maxTermPos) {\n          assert tenum != null;\n          tenum.seekExact(startFacetOrd == -1 ? 0 : startFacetOrd);\n          mergeTerm = tenum.term();\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7ae958a739da1866696f442384393ba2f13e33e5"],"7ae958a739da1866696f442384393ba2f13e33e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","7ae958a739da1866696f442384393ba2f13e33e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7ae958a739da1866696f442384393ba2f13e33e5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}