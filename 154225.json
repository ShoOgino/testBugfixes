{"path":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkCollectionIsNotCreated(String).mjava","commits":[{"id":"0eff89b16ebd0046c839c5d02ee44500be5c7886","date":1355766557,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkCollectionIsNotCreated(String).mjava","pathOld":"/dev/null","sourceNew":"  private void checkCollectionIsNotCreated(String collectionName)\n    throws Exception {\n    // TODO: REMOVE THIS SLEEP WHEN WE HAVE COLLECTION API RESPONSES\n    Thread.sleep(10000);\n    assertFalse(collectionName + \" not supposed to exist\", getCommonCloudSolrServer().getZkStateReader().getClusterState().getCollections().contains(collectionName));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkCollectionIsNotCreated(String).mjava","pathOld":"/dev/null","sourceNew":"  private void checkCollectionIsNotCreated(String collectionName)\n    throws Exception {\n    // TODO: REMOVE THIS SLEEP WHEN WE HAVE COLLECTION API RESPONSES\n    Thread.sleep(10000);\n    assertFalse(collectionName + \" not supposed to exist\", getCommonCloudSolrServer().getZkStateReader().getClusterState().getCollections().contains(collectionName));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe999fc2d95d6fea71f960bf9556858387ba21f5","date":1363294860,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkCollectionIsNotCreated(String).mjava","sourceNew":null,"sourceOld":"  private void checkCollectionIsNotCreated(String collectionName)\n    throws Exception {\n    // TODO: REMOVE THIS SLEEP WHEN WE HAVE COLLECTION API RESPONSES\n    Thread.sleep(10000);\n    assertFalse(collectionName + \" not supposed to exist\", getCommonCloudSolrServer().getZkStateReader().getClusterState().getCollections().contains(collectionName));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0eff89b16ebd0046c839c5d02ee44500be5c7886"],"fe999fc2d95d6fea71f960bf9556858387ba21f5":["0eff89b16ebd0046c839c5d02ee44500be5c7886"],"0eff89b16ebd0046c839c5d02ee44500be5c7886":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fe999fc2d95d6fea71f960bf9556858387ba21f5"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"fe999fc2d95d6fea71f960bf9556858387ba21f5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","0eff89b16ebd0046c839c5d02ee44500be5c7886"],"0eff89b16ebd0046c839c5d02ee44500be5c7886":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","fe999fc2d95d6fea71f960bf9556858387ba21f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}