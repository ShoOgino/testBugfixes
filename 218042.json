{"path":"lucene/core/src/test/org/apache/lucene/search/TestTopFieldCollectorEarlyTermination#assertTopDocsEquals(ScoreDoc[],ScoreDoc[]).mjava","commits":[{"id":"404d1ab7f6f396235047017c88d545fec15dafb7","date":1511975378,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTopFieldCollectorEarlyTermination#assertTopDocsEquals(ScoreDoc[],ScoreDoc[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestEarlyTerminatingSortingCollector#assertTopDocsEquals(ScoreDoc[],ScoreDoc[]).mjava","sourceNew":"  private static void assertTopDocsEquals(ScoreDoc[] scoreDocs1, ScoreDoc[] scoreDocs2) {\n    assertEquals(scoreDocs1.length, scoreDocs2.length);\n    for (int i = 0; i < scoreDocs1.length; ++i) {\n      final ScoreDoc scoreDoc1 = scoreDocs1[i];\n      final ScoreDoc scoreDoc2 = scoreDocs2[i];\n      assertEquals(scoreDoc1.doc, scoreDoc2.doc);\n      assertEquals(scoreDoc1.score, scoreDoc2.score, 0f);\n    }\n  }\n\n","sourceOld":"  private static void assertTopDocsEquals(ScoreDoc[] scoreDocs1, ScoreDoc[] scoreDocs2) {\n    assertEquals(scoreDocs1.length, scoreDocs2.length);\n    for (int i = 0; i < scoreDocs1.length; ++i) {\n      final ScoreDoc scoreDoc1 = scoreDocs1[i];\n      final ScoreDoc scoreDoc2 = scoreDocs2[i];\n      assertEquals(scoreDoc1.doc, scoreDoc2.doc);\n      assertEquals(scoreDoc1.score, scoreDoc2.score, 0.001f);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1aad05eeff7818b0833c02ac6b743aa72054963b","date":1512093122,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTopFieldCollectorEarlyTermination#assertTopDocsEquals(ScoreDoc[],ScoreDoc[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestEarlyTerminatingSortingCollector#assertTopDocsEquals(ScoreDoc[],ScoreDoc[]).mjava","sourceNew":"  private static void assertTopDocsEquals(ScoreDoc[] scoreDocs1, ScoreDoc[] scoreDocs2) {\n    assertEquals(scoreDocs1.length, scoreDocs2.length);\n    for (int i = 0; i < scoreDocs1.length; ++i) {\n      final ScoreDoc scoreDoc1 = scoreDocs1[i];\n      final ScoreDoc scoreDoc2 = scoreDocs2[i];\n      assertEquals(scoreDoc1.doc, scoreDoc2.doc);\n      assertEquals(scoreDoc1.score, scoreDoc2.score, 0f);\n    }\n  }\n\n","sourceOld":"  private static void assertTopDocsEquals(ScoreDoc[] scoreDocs1, ScoreDoc[] scoreDocs2) {\n    assertEquals(scoreDocs1.length, scoreDocs2.length);\n    for (int i = 0; i < scoreDocs1.length; ++i) {\n      final ScoreDoc scoreDoc1 = scoreDocs1[i];\n      final ScoreDoc scoreDoc2 = scoreDocs2[i];\n      assertEquals(scoreDoc1.doc, scoreDoc2.doc);\n      assertEquals(scoreDoc1.score, scoreDoc2.score, 0.001f);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0726aad62c56adb2afd66930b9cc49f0c1e00ffe","date":1564077580,"type":4,"author":"Atri Sharma","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTopFieldCollectorEarlyTermination#assertTopDocsEquals(ScoreDoc[],ScoreDoc[]).mjava","sourceNew":null,"sourceOld":"  private static void assertTopDocsEquals(ScoreDoc[] scoreDocs1, ScoreDoc[] scoreDocs2) {\n    assertEquals(scoreDocs1.length, scoreDocs2.length);\n    for (int i = 0; i < scoreDocs1.length; ++i) {\n      final ScoreDoc scoreDoc1 = scoreDocs1[i];\n      final ScoreDoc scoreDoc2 = scoreDocs2[i];\n      assertEquals(scoreDoc1.doc, scoreDoc2.doc);\n      assertEquals(scoreDoc1.score, scoreDoc2.score, 0f);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1aad05eeff7818b0833c02ac6b743aa72054963b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","404d1ab7f6f396235047017c88d545fec15dafb7"],"404d1ab7f6f396235047017c88d545fec15dafb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0726aad62c56adb2afd66930b9cc49f0c1e00ffe":["1aad05eeff7818b0833c02ac6b743aa72054963b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0726aad62c56adb2afd66930b9cc49f0c1e00ffe"]},"commit2Childs":{"1aad05eeff7818b0833c02ac6b743aa72054963b":["0726aad62c56adb2afd66930b9cc49f0c1e00ffe"],"404d1ab7f6f396235047017c88d545fec15dafb7":["1aad05eeff7818b0833c02ac6b743aa72054963b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1aad05eeff7818b0833c02ac6b743aa72054963b","404d1ab7f6f396235047017c88d545fec15dafb7"],"0726aad62c56adb2afd66930b9cc49f0c1e00ffe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}