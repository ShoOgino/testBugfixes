{"path":"lucene/core/src/java/org/apache/lucene/index/FilteredTermsEnum#seekExact(BytesRef,boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FilteredTermsEnum#seekExact(BytesRef,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FilteredTermsEnum#seekExact(BytesRef,boolean).mjava","sourceNew":"  /** This enum does not support seeking!\n   * @throws UnsupportedOperationException\n   */\n  @Override\n  public boolean seekExact(BytesRef term, boolean useCache) throws IOException {\n    throw new UnsupportedOperationException(getClass().getName()+\" does not support seeking\");\n  }\n\n","sourceOld":"  /** This enum does not support seeking!\n   * @throws UnsupportedOperationException\n   */\n  @Override\n  public boolean seekExact(BytesRef term, boolean useCache) throws IOException {\n    throw new UnsupportedOperationException(getClass().getName()+\" does not support seeking\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FilteredTermsEnum#seekExact(BytesRef,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FilteredTermsEnum#seekExact(BytesRef,boolean).mjava","sourceNew":"  /** This enum does not support seeking!\n   * @throws UnsupportedOperationException In general, subclasses do not\n   *         support seeking.\n   */\n  @Override\n  public boolean seekExact(BytesRef term, boolean useCache) throws IOException {\n    throw new UnsupportedOperationException(getClass().getName()+\" does not support seeking\");\n  }\n\n","sourceOld":"  /** This enum does not support seeking!\n   * @throws UnsupportedOperationException\n   */\n  @Override\n  public boolean seekExact(BytesRef term, boolean useCache) throws IOException {\n    throw new UnsupportedOperationException(getClass().getName()+\" does not support seeking\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8","date":1373996650,"type":6,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FilteredTermsEnum#seekCeil(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FilteredTermsEnum#seekExact(BytesRef,boolean).mjava","sourceNew":"  /** This enum does not support seeking!\n   * @throws UnsupportedOperationException In general, subclasses do not\n   *         support seeking.\n   */\n  @Override\n  public SeekStatus seekCeil(BytesRef term) throws IOException {\n    throw new UnsupportedOperationException(getClass().getName()+\" does not support seeking\");\n  }\n\n","sourceOld":"  /** This enum does not support seeking!\n   * @throws UnsupportedOperationException In general, subclasses do not\n   *         support seeking.\n   */\n  @Override\n  public boolean seekExact(BytesRef term, boolean useCache) throws IOException {\n    throw new UnsupportedOperationException(getClass().getName()+\" does not support seeking\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8","date":1373996650,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FilteredTermsEnum#seekExact(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FilteredTermsEnum#seekExact(BytesRef,boolean).mjava","sourceNew":"  /** This enum does not support seeking!\n   * @throws UnsupportedOperationException In general, subclasses do not\n   *         support seeking.\n   */\n  @Override\n  public boolean seekExact(BytesRef term) throws IOException {\n    throw new UnsupportedOperationException(getClass().getName()+\" does not support seeking\");\n  }\n\n","sourceOld":"  /** This enum does not support seeking!\n   * @throws UnsupportedOperationException In general, subclasses do not\n   *         support seeking.\n   */\n  @Override\n  public boolean seekExact(BytesRef term, boolean useCache) throws IOException {\n    throw new UnsupportedOperationException(getClass().getName()+\" does not support seeking\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FilteredTermsEnum#seekCeil(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FilteredTermsEnum#seekExact(BytesRef,boolean).mjava","sourceNew":"  /** This enum does not support seeking!\n   * @throws UnsupportedOperationException In general, subclasses do not\n   *         support seeking.\n   */\n  @Override\n  public SeekStatus seekCeil(BytesRef term) throws IOException {\n    throw new UnsupportedOperationException(getClass().getName()+\" does not support seeking\");\n  }\n\n","sourceOld":"  /** This enum does not support seeking!\n   * @throws UnsupportedOperationException In general, subclasses do not\n   *         support seeking.\n   */\n  @Override\n  public boolean seekExact(BytesRef term, boolean useCache) throws IOException {\n    throw new UnsupportedOperationException(getClass().getName()+\" does not support seeking\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":6,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FilteredTermsEnum#seekExact(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FilteredTermsEnum#seekExact(BytesRef,boolean).mjava","sourceNew":"  /** This enum does not support seeking!\n   * @throws UnsupportedOperationException In general, subclasses do not\n   *         support seeking.\n   */\n  @Override\n  public boolean seekExact(BytesRef term) throws IOException {\n    throw new UnsupportedOperationException(getClass().getName()+\" does not support seeking\");\n  }\n\n","sourceOld":"  /** This enum does not support seeking!\n   * @throws UnsupportedOperationException In general, subclasses do not\n   *         support seeking.\n   */\n  @Override\n  public boolean seekExact(BytesRef term, boolean useCache) throws IOException {\n    throw new UnsupportedOperationException(getClass().getName()+\" does not support seeking\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}