{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","commits":[{"id":"07ef6935eaaefebe92999fbdd19780d4af12bedf","date":1454066190,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","pathOld":"/dev/null","sourceNew":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n    assertEquals(2, s.count(ExactPointQuery.new1DIntExact(\"int1\", 17)));\n    assertEquals(2, s.count(ExactPointQuery.new1DIntExact(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d15e34266d75e4e8b95da046cd0afc812367b38","date":1454246129,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","pathOld":"/dev/null","sourceNew":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n    assertEquals(2, s.count(ExactPointQuery.new1DIntExact(\"int1\", 17)));\n    assertEquals(2, s.count(ExactPointQuery.new1DIntExact(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","pathOld":"/dev/null","sourceNew":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n    assertEquals(2, s.count(ExactPointQuery.new1DIntExact(\"int1\", 17)));\n    assertEquals(2, s.count(ExactPointQuery.new1DIntExact(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86cab68ee900a31d093b114182b488ea8e85c59d","date":1456171815,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","sourceNew":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n    assertEquals(2, s.count(PointRangeQuery.newIntExact(\"int1\", 17)));\n    assertEquals(2, s.count(PointRangeQuery.newIntExact(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n    assertEquals(2, s.count(ExactPointQuery.new1DIntExact(\"int1\", 17)));\n    assertEquals(2, s.count(ExactPointQuery.new1DIntExact(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"419a8f52c6635419beb951255cacbbb281044c57","date":1456189353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","sourceNew":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n    assertEquals(2, s.count(PointRangeQuery.newIntExact(\"int1\", 17)));\n    assertEquals(2, s.count(PointRangeQuery.newIntExact(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n    assertEquals(2, s.count(ExactPointQuery.new1DIntExact(\"int1\", 17)));\n    assertEquals(2, s.count(ExactPointQuery.new1DIntExact(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3104a6ba367dfb690806b227c5ef17c42c6107b","date":1456265035,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","sourceNew":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n    assertEquals(2, s.count(IntPoint.newExactQuery(\"int1\", 17)));\n    assertEquals(2, s.count(IntPoint.newExactQuery(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n    assertEquals(2, s.count(PointRangeQuery.newIntExact(\"int1\", 17)));\n    assertEquals(2, s.count(PointRangeQuery.newIntExact(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f36bbdca4e65638f33c3e8f2fbe46a64dd06cd5","date":1456265720,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","sourceNew":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n    assertEquals(2, s.count(IntPoint.newExactQuery(\"int1\", 17)));\n    assertEquals(2, s.count(IntPoint.newExactQuery(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n    assertEquals(2, s.count(PointRangeQuery.newIntExact(\"int1\", 17)));\n    assertEquals(2, s.count(PointRangeQuery.newIntExact(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5296efc4b319f5647b606629c093a94b23692c6","date":1456267155,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","sourceNew":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n    assertEquals(2, s.count(IntPoint.newExactQuery(\"int1\", 17)));\n    assertEquals(2, s.count(IntPoint.newExactQuery(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n    assertEquals(2, s.count(PointRangeQuery.newIntExact(\"int1\", 17)));\n    assertEquals(2, s.count(PointRangeQuery.newIntExact(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ff4a3d0540c1b0f828f19adccd01d1b33c996a6","date":1456306182,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","sourceNew":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n    assertEquals(2, s.count(IntPoint.newExactQuery(\"int1\", 17)));\n    assertEquals(2, s.count(IntPoint.newExactQuery(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n    assertEquals(2, s.count(PointRangeQuery.newIntExact(\"int1\", 17)));\n    assertEquals(2, s.count(PointRangeQuery.newIntExact(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"adc9dc8ef0ce617b940a039fd12f79e8b098cc7f","date":1456936072,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","sourceNew":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(2, s.count(IntPoint.newExactQuery(\"int1\", 17)));\n    assertEquals(2, s.count(IntPoint.newExactQuery(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n    assertEquals(2, s.count(IntPoint.newExactQuery(\"int1\", 17)));\n    assertEquals(2, s.count(IntPoint.newExactQuery(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","sourceNew":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(2, s.count(IntPoint.newExactQuery(\"int1\", 17)));\n    assertEquals(2, s.count(IntPoint.newExactQuery(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r);\n    assertEquals(2, s.count(IntPoint.newExactQuery(\"int1\", 17)));\n    assertEquals(2, s.count(IntPoint.newExactQuery(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4522ffca5a1f420c6a02198c9332d7c596a30ca5","date":1457270822,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointsFormatTestCase#testAddIndexes().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BasePointFormatTestCase#testAddIndexes().mjava","sourceNew":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(2, s.count(IntPoint.newExactQuery(\"int1\", 17)));\n    assertEquals(2, s.count(IntPoint.newExactQuery(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  public void testAddIndexes() throws IOException {\n    Directory dir1 = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir1);\n    Document doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    w.close();\n\n    // Different field number assigments:\n    Directory dir2 = newDirectory();\n    w = new RandomIndexWriter(random(), dir2);\n    doc = new Document();\n    doc.add(new IntPoint(\"int2\", 42));\n    w.addDocument(doc);\n    doc = new Document();\n    doc.add(new IntPoint(\"int1\", 17));\n    w.addDocument(doc);\n    w.close();\n\n    Directory dir = newDirectory();\n    w = new RandomIndexWriter(random(), dir);\n    w.addIndexes(new Directory[] {dir1, dir2});\n    w.forceMerge(1);\n\n    DirectoryReader r = w.getReader();\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(2, s.count(IntPoint.newExactQuery(\"int1\", 17)));\n    assertEquals(2, s.count(IntPoint.newExactQuery(\"int2\", 42)));\n    r.close();\n    w.close();\n    dir.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8d15e34266d75e4e8b95da046cd0afc812367b38"],"419a8f52c6635419beb951255cacbbb281044c57":["8d15e34266d75e4e8b95da046cd0afc812367b38","86cab68ee900a31d093b114182b488ea8e85c59d"],"1ff4a3d0540c1b0f828f19adccd01d1b33c996a6":["419a8f52c6635419beb951255cacbbb281044c57","a5296efc4b319f5647b606629c093a94b23692c6"],"adc9dc8ef0ce617b940a039fd12f79e8b098cc7f":["1ff4a3d0540c1b0f828f19adccd01d1b33c996a6"],"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"d3104a6ba367dfb690806b227c5ef17c42c6107b":["419a8f52c6635419beb951255cacbbb281044c57"],"07ef6935eaaefebe92999fbdd19780d4af12bedf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7f36bbdca4e65638f33c3e8f2fbe46a64dd06cd5":["419a8f52c6635419beb951255cacbbb281044c57","d3104a6ba367dfb690806b227c5ef17c42c6107b"],"a5296efc4b319f5647b606629c093a94b23692c6":["419a8f52c6635419beb951255cacbbb281044c57","d3104a6ba367dfb690806b227c5ef17c42c6107b"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["1ff4a3d0540c1b0f828f19adccd01d1b33c996a6","adc9dc8ef0ce617b940a039fd12f79e8b098cc7f"],"86cab68ee900a31d093b114182b488ea8e85c59d":["8d15e34266d75e4e8b95da046cd0afc812367b38"],"8d15e34266d75e4e8b95da046cd0afc812367b38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","07ef6935eaaefebe92999fbdd19780d4af12bedf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"]},"commit2Childs":{"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"419a8f52c6635419beb951255cacbbb281044c57":["1ff4a3d0540c1b0f828f19adccd01d1b33c996a6","d3104a6ba367dfb690806b227c5ef17c42c6107b","7f36bbdca4e65638f33c3e8f2fbe46a64dd06cd5","a5296efc4b319f5647b606629c093a94b23692c6"],"1ff4a3d0540c1b0f828f19adccd01d1b33c996a6":["adc9dc8ef0ce617b940a039fd12f79e8b098cc7f","cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"adc9dc8ef0ce617b940a039fd12f79e8b098cc7f":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d3104a6ba367dfb690806b227c5ef17c42c6107b":["7f36bbdca4e65638f33c3e8f2fbe46a64dd06cd5","a5296efc4b319f5647b606629c093a94b23692c6"],"07ef6935eaaefebe92999fbdd19780d4af12bedf":["8d15e34266d75e4e8b95da046cd0afc812367b38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","07ef6935eaaefebe92999fbdd19780d4af12bedf","8d15e34266d75e4e8b95da046cd0afc812367b38"],"7f36bbdca4e65638f33c3e8f2fbe46a64dd06cd5":[],"a5296efc4b319f5647b606629c093a94b23692c6":["1ff4a3d0540c1b0f828f19adccd01d1b33c996a6"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"86cab68ee900a31d093b114182b488ea8e85c59d":["419a8f52c6635419beb951255cacbbb281044c57"],"8d15e34266d75e4e8b95da046cd0afc812367b38":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","419a8f52c6635419beb951255cacbbb281044c57","86cab68ee900a31d093b114182b488ea8e85c59d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","7f36bbdca4e65638f33c3e8f2fbe46a64dd06cd5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}