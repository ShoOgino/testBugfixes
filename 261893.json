{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","commits":[{"id":"9faa42f41b6adb98daf009cf99a4ee239189e469","date":1376648738,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    return core.getDocsWithField(field);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    return core.getDocsWithField(field);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    return core.getDocsWithField(field);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e072d0b1fc19e0533d8ce432eed245196bca6fde","date":1379265112,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","sourceNew":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    FieldInfo fi = core.fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n\n    DocValuesProducer dvProducer = dvProducers.get(field);\n    assert dvProducer != null;\n\n    Map<String,Bits> dvFields = docsWithFieldLocal.get();\n\n    Bits dvs = dvFields.get(field);\n    if (dvs == null) {\n      dvs = dvProducer.getDocsWithField(fi);\n      dvFields.put(field, dvs);\n    }\n\n    return dvs;\n  }\n\n","sourceOld":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    return core.getDocsWithField(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8435160e9702b19398118ddf76b61c846612b6a4","date":1380349140,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","sourceNew":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n\n    DocValuesProducer dvProducer = dvProducers.get(field);\n    assert dvProducer != null;\n\n    Map<String,Bits> dvFields = docsWithFieldLocal.get();\n\n    Bits dvs = dvFields.get(field);\n    if (dvs == null) {\n      dvs = dvProducer.getDocsWithField(fi);\n      dvFields.put(field, dvs);\n    }\n\n    return dvs;\n  }\n\n","sourceOld":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    FieldInfo fi = core.fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n\n    DocValuesProducer dvProducer = dvProducers.get(field);\n    assert dvProducer != null;\n\n    Map<String,Bits> dvFields = docsWithFieldLocal.get();\n\n    Bits dvs = dvFields.get(field);\n    if (dvs == null) {\n      dvs = dvProducer.getDocsWithField(fi);\n      dvFields.put(field, dvs);\n    }\n\n    return dvs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","sourceNew":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n\n    Map<String,Bits> dvFields = docsWithFieldLocal.get();\n\n    Bits dvs = dvFields.get(field);\n    if (dvs == null) {\n      DocValuesProducer dvProducer = dvProducersByField.get(field);\n      assert dvProducer != null;\n      dvs = dvProducer.getDocsWithField(fi);\n      dvFields.put(field, dvs);\n    }\n\n    return dvs;\n  }\n\n","sourceOld":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n\n    DocValuesProducer dvProducer = dvProducers.get(field);\n    assert dvProducer != null;\n\n    Map<String,Bits> dvFields = docsWithFieldLocal.get();\n\n    Bits dvs = dvFields.get(field);\n    if (dvs == null) {\n      dvs = dvProducer.getDocsWithField(fi);\n      dvFields.put(field, dvs);\n    }\n\n    return dvs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","sourceNew":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n\n    Map<String,Bits> dvFields = docsWithFieldLocal.get();\n\n    Bits dvs = dvFields.get(field);\n    if (dvs == null) {\n      DocValuesProducer dvProducer = dvProducersByField.get(field);\n      assert dvProducer != null;\n      dvs = dvProducer.getDocsWithField(fi);\n      dvFields.put(field, dvs);\n    }\n\n    return dvs;\n  }\n\n","sourceOld":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n\n    DocValuesProducer dvProducer = dvProducers.get(field);\n    assert dvProducer != null;\n\n    Map<String,Bits> dvFields = docsWithFieldLocal.get();\n\n    Bits dvs = dvFields.get(field);\n    if (dvs == null) {\n      dvs = dvProducer.getDocsWithField(fi);\n      dvFields.put(field, dvs);\n    }\n\n    return dvs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93f724123ee2d5ffea549b41729efe1b2386a815","date":1400842169,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","sourceNew":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    Map<String,Bits> dvFields = docsWithFieldLocal.get();\n\n    Bits previous = dvFields.get(field);\n    if (previous != null) {\n      return previous;\n    } else {\n      FieldInfo fi = fieldInfos.fieldInfo(field);\n      if (fi == null) {\n        // Field does not exist\n        return null;\n      }\n      if (fi.getDocValuesType() == null) {\n        // Field was not indexed with doc values\n        return null;\n      }\n      DocValuesProducer dvProducer = dvProducersByField.get(field);\n      assert dvProducer != null;\n      Bits dv = dvProducer.getDocsWithField(fi);\n      dvFields.put(field, dv);\n      return dv;\n    }\n  }\n\n","sourceOld":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    FieldInfo fi = fieldInfos.fieldInfo(field);\n    if (fi == null) {\n      // Field does not exist\n      return null;\n    }\n    if (fi.getDocValuesType() == null) {\n      // Field was not indexed with doc values\n      return null;\n    }\n\n    Map<String,Bits> dvFields = docsWithFieldLocal.get();\n\n    Bits dvs = dvFields.get(field);\n    if (dvs == null) {\n      DocValuesProducer dvProducer = dvProducersByField.get(field);\n      assert dvProducer != null;\n      dvs = dvProducer.getDocsWithField(fi);\n      dvFields.put(field, dvs);\n    }\n\n    return dvs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22a2e66dfda83847e80095b8693c660742ab3e9c","date":1408628796,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","sourceNew":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    Map<String,Bits> dvFields = docsWithFieldLocal.get();\n\n    Bits previous = dvFields.get(field);\n    if (previous != null) {\n      return previous;\n    } else {\n      FieldInfo fi = fieldInfos.fieldInfo(field);\n      if (fi == null) {\n        // Field does not exist\n        return null;\n      }\n      if (fi.getDocValuesType() == null) {\n        // Field was not indexed with doc values\n        return null;\n      }\n      Bits dv = docValuesProducer.getDocsWithField(fi);\n      dvFields.put(field, dv);\n      return dv;\n    }\n  }\n\n","sourceOld":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    Map<String,Bits> dvFields = docsWithFieldLocal.get();\n\n    Bits previous = dvFields.get(field);\n    if (previous != null) {\n      return previous;\n    } else {\n      FieldInfo fi = fieldInfos.fieldInfo(field);\n      if (fi == null) {\n        // Field does not exist\n        return null;\n      }\n      if (fi.getDocValuesType() == null) {\n        // Field was not indexed with doc values\n        return null;\n      }\n      DocValuesProducer dvProducer = dvProducersByField.get(field);\n      assert dvProducer != null;\n      Bits dv = dvProducer.getDocsWithField(fi);\n      dvFields.put(field, dv);\n      return dv;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2bb2842e561df4e8e9ad89010605fc86ac265465","date":1414768208,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","sourceNew":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    Map<String,Bits> dvFields = docsWithFieldLocal.get();\n\n    Bits previous = dvFields.get(field);\n    if (previous != null) {\n      return previous;\n    } else {\n      FieldInfo fi = fieldInfos.fieldInfo(field);\n      if (fi == null) {\n        // Field does not exist\n        return null;\n      }\n      if (fi.getDocValuesType() == DocValuesType.NO) {\n        // Field was not indexed with doc values\n        return null;\n      }\n      Bits dv = docValuesProducer.getDocsWithField(fi);\n      dvFields.put(field, dv);\n      return dv;\n    }\n  }\n\n","sourceOld":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    Map<String,Bits> dvFields = docsWithFieldLocal.get();\n\n    Bits previous = dvFields.get(field);\n    if (previous != null) {\n      return previous;\n    } else {\n      FieldInfo fi = fieldInfos.fieldInfo(field);\n      if (fi == null) {\n        // Field does not exist\n        return null;\n      }\n      if (fi.getDocValuesType() == null) {\n        // Field was not indexed with doc values\n        return null;\n      }\n      Bits dv = docValuesProducer.getDocsWithField(fi);\n      dvFields.put(field, dv);\n      return dv;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f95ce1375367b92d411a06175eab3915fe93c6bc","date":1414788502,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","sourceNew":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    Map<String,Bits> dvFields = docsWithFieldLocal.get();\n\n    Bits previous = dvFields.get(field);\n    if (previous != null) {\n      return previous;\n    } else {\n      FieldInfo fi = fieldInfos.fieldInfo(field);\n      if (fi == null) {\n        // Field does not exist\n        return null;\n      }\n      if (fi.getDocValuesType() == DocValuesType.NONE) {\n        // Field was not indexed with doc values\n        return null;\n      }\n      Bits dv = docValuesProducer.getDocsWithField(fi);\n      dvFields.put(field, dv);\n      return dv;\n    }\n  }\n\n","sourceOld":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    Map<String,Bits> dvFields = docsWithFieldLocal.get();\n\n    Bits previous = dvFields.get(field);\n    if (previous != null) {\n      return previous;\n    } else {\n      FieldInfo fi = fieldInfos.fieldInfo(field);\n      if (fi == null) {\n        // Field does not exist\n        return null;\n      }\n      if (fi.getDocValuesType() == DocValuesType.NO) {\n        // Field was not indexed with doc values\n        return null;\n      }\n      Bits dv = docValuesProducer.getDocsWithField(fi);\n      dvFields.put(field, dv);\n      return dv;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"505bff044e47a553f461b6f4484d1d08faf4ac85","date":1420728783,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CodecReader#getDocsWithField(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getDocsWithField(String).mjava","sourceNew":"  @Override\n  public final Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    Map<String,Bits> dvFields = docsWithFieldLocal.get();\n\n    Bits previous = dvFields.get(field);\n    if (previous != null) {\n      return previous;\n    } else {\n      FieldInfo fi = getFieldInfos().fieldInfo(field);\n      if (fi == null) {\n        // Field does not exist\n        return null;\n      }\n      if (fi.getDocValuesType() == DocValuesType.NONE) {\n        // Field was not indexed with doc values\n        return null;\n      }\n      Bits dv = getDocValuesReader().getDocsWithField(fi);\n      dvFields.put(field, dv);\n      return dv;\n    }\n  }\n\n","sourceOld":"  @Override\n  public Bits getDocsWithField(String field) throws IOException {\n    ensureOpen();\n    Map<String,Bits> dvFields = docsWithFieldLocal.get();\n\n    Bits previous = dvFields.get(field);\n    if (previous != null) {\n      return previous;\n    } else {\n      FieldInfo fi = fieldInfos.fieldInfo(field);\n      if (fi == null) {\n        // Field does not exist\n        return null;\n      }\n      if (fi.getDocValuesType() == DocValuesType.NONE) {\n        // Field was not indexed with doc values\n        return null;\n      }\n      Bits dv = docValuesProducer.getDocsWithField(fi);\n      dvFields.put(field, dv);\n      return dv;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e072d0b1fc19e0533d8ce432eed245196bca6fde":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"5eb2511ababf862ea11e10761c70ee560cd84510":["8435160e9702b19398118ddf76b61c846612b6a4","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["8435160e9702b19398118ddf76b61c846612b6a4"],"9faa42f41b6adb98daf009cf99a4ee239189e469":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"8435160e9702b19398118ddf76b61c846612b6a4":["e072d0b1fc19e0533d8ce432eed245196bca6fde"],"2bb2842e561df4e8e9ad89010605fc86ac265465":["22a2e66dfda83847e80095b8693c660742ab3e9c"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9faa42f41b6adb98daf009cf99a4ee239189e469"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["f95ce1375367b92d411a06175eab3915fe93c6bc"],"f95ce1375367b92d411a06175eab3915fe93c6bc":["2bb2842e561df4e8e9ad89010605fc86ac265465"],"93f724123ee2d5ffea549b41729efe1b2386a815":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22a2e66dfda83847e80095b8693c660742ab3e9c":["93f724123ee2d5ffea549b41729efe1b2386a815"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["505bff044e47a553f461b6f4484d1d08faf4ac85"]},"commit2Childs":{"e072d0b1fc19e0533d8ce432eed245196bca6fde":["8435160e9702b19398118ddf76b61c846612b6a4"],"5eb2511ababf862ea11e10761c70ee560cd84510":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","93f724123ee2d5ffea549b41729efe1b2386a815"],"9faa42f41b6adb98daf009cf99a4ee239189e469":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"8435160e9702b19398118ddf76b61c846612b6a4":["5eb2511ababf862ea11e10761c70ee560cd84510","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"2bb2842e561df4e8e9ad89010605fc86ac265465":["f95ce1375367b92d411a06175eab3915fe93c6bc"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["e072d0b1fc19e0533d8ce432eed245196bca6fde","3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f95ce1375367b92d411a06175eab3915fe93c6bc":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"93f724123ee2d5ffea549b41729efe1b2386a815":["22a2e66dfda83847e80095b8693c660742ab3e9c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9faa42f41b6adb98daf009cf99a4ee239189e469","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"22a2e66dfda83847e80095b8693c660742ab3e9c":["2bb2842e561df4e8e9ad89010605fc86ac265465"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}