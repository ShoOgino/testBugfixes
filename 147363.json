{"path":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentInfo info1 = DocHelper.writeDoc(random, merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfo info2 = DocHelper.writeDoc(random, merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, DirectoryReader.DEFAULT_TERMS_INDEX_DIVISOR, newIOContext(random));\n    reader2 = new SegmentReader(info2, DirectoryReader.DEFAULT_TERMS_INDEX_DIVISOR, newIOContext(random));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentInfo info1 = DocHelper.writeDoc(random, merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfo info2 = DocHelper.writeDoc(random, merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, DirectoryReader.DEFAULT_TERMS_INDEX_DIVISOR, newIOContext(random));\n    reader2 = new SegmentReader(info2, DirectoryReader.DEFAULT_TERMS_INDEX_DIVISOR, newIOContext(random));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentInfo info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfo info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, DirectoryReader.DEFAULT_TERMS_INDEX_DIVISOR, newIOContext(random()));\n    reader2 = new SegmentReader(info2, DirectoryReader.DEFAULT_TERMS_INDEX_DIVISOR, newIOContext(random()));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentInfo info1 = DocHelper.writeDoc(random, merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfo info2 = DocHelper.writeDoc(random, merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, DirectoryReader.DEFAULT_TERMS_INDEX_DIVISOR, newIOContext(random));\n    reader2 = new SegmentReader(info2, DirectoryReader.DEFAULT_TERMS_INDEX_DIVISOR, newIOContext(random));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d153abcf92dc5329d98571a8c3035df9bd80648","date":1337702630,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentInfoPerCommit info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfoPerCommit info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, DirectoryReader.DEFAULT_TERMS_INDEX_DIVISOR, newIOContext(random()));\n    reader2 = new SegmentReader(info2, DirectoryReader.DEFAULT_TERMS_INDEX_DIVISOR, newIOContext(random()));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentInfo info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfo info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, DirectoryReader.DEFAULT_TERMS_INDEX_DIVISOR, newIOContext(random()));\n    reader2 = new SegmentReader(info2, DirectoryReader.DEFAULT_TERMS_INDEX_DIVISOR, newIOContext(random()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentInfoPerCommit info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfoPerCommit info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, DirectoryReader.DEFAULT_TERMS_INDEX_DIVISOR, newIOContext(random()));\n    reader2 = new SegmentReader(info2, DirectoryReader.DEFAULT_TERMS_INDEX_DIVISOR, newIOContext(random()));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentInfo info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfo info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, DirectoryReader.DEFAULT_TERMS_INDEX_DIVISOR, newIOContext(random()));\n    reader2 = new SegmentReader(info2, DirectoryReader.DEFAULT_TERMS_INDEX_DIVISOR, newIOContext(random()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a45bec74b98f6fc05f52770cfb425739e6563960","date":1375119292,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentInfoPerCommit info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfoPerCommit info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, newIOContext(random()));\n    reader2 = new SegmentReader(info2, newIOContext(random()));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentInfoPerCommit info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfoPerCommit info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, DirectoryReader.DEFAULT_TERMS_INDEX_DIVISOR, newIOContext(random()));\n    reader2 = new SegmentReader(info2, DirectoryReader.DEFAULT_TERMS_INDEX_DIVISOR, newIOContext(random()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentInfoPerCommit info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfoPerCommit info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, newIOContext(random()));\n    reader2 = new SegmentReader(info2, newIOContext(random()));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentInfoPerCommit info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfoPerCommit info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, DirectoryReader.DEFAULT_TERMS_INDEX_DIVISOR, newIOContext(random()));\n    reader2 = new SegmentReader(info2, DirectoryReader.DEFAULT_TERMS_INDEX_DIVISOR, newIOContext(random()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentCommitInfo info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentCommitInfo info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, newIOContext(random()));\n    reader2 = new SegmentReader(info2, newIOContext(random()));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentInfoPerCommit info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentInfoPerCommit info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, newIOContext(random()));\n    reader2 = new SegmentReader(info2, newIOContext(random()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31741cf1390044e38a2ec3127cf302ba841bfd75","date":1491292636,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentCommitInfo info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentCommitInfo info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, Version.LATEST.major, newIOContext(random()));\n    reader2 = new SegmentReader(info2, Version.LATEST.major, newIOContext(random()));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentCommitInfo info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentCommitInfo info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, newIOContext(random()));\n    reader2 = new SegmentReader(info2, newIOContext(random()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92212fd254551a0b1156aafc3a1a6ed1a43932ad","date":1491296431,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentCommitInfo info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentCommitInfo info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, Version.LATEST.major, newIOContext(random()));\n    reader2 = new SegmentReader(info2, Version.LATEST.major, newIOContext(random()));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentCommitInfo info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentCommitInfo info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, newIOContext(random()));\n    reader2 = new SegmentReader(info2, newIOContext(random()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"790693f23f4e88a59fbb25e47cc25f6d493b03cb","date":1553077690,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentCommitInfo info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentCommitInfo info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, Version.LATEST.major, false, newIOContext(random()));\n    reader2 = new SegmentReader(info2, Version.LATEST.major, false, newIOContext(random()));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentCommitInfo info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentCommitInfo info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, Version.LATEST.major, newIOContext(random()));\n    reader2 = new SegmentReader(info2, Version.LATEST.major, newIOContext(random()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"763da4a9605e47013078edc323b9d4b608f0f9e0","date":1555353576,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentCommitInfo info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentCommitInfo info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, Version.LATEST.major, false, newIOContext(random()), Collections.emptyMap());\n    reader2 = new SegmentReader(info2, Version.LATEST.major, false, newIOContext(random()), Collections.emptyMap());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentCommitInfo info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentCommitInfo info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, Version.LATEST.major, false, newIOContext(random()));\n    reader2 = new SegmentReader(info2, Version.LATEST.major, false, newIOContext(random()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4e83191a3e02851a0b67e5335e6922f3e9ea86d","date":1583489709,"type":3,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentCommitInfo info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentCommitInfo info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, Version.LATEST.major, false, newIOContext(random()));\n    reader2 = new SegmentReader(info2, Version.LATEST.major, false, newIOContext(random()));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentCommitInfo info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentCommitInfo info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, Version.LATEST.major, false, newIOContext(random()), Collections.emptyMap());\n    reader2 = new SegmentReader(info2, Version.LATEST.major, false, newIOContext(random()), Collections.emptyMap());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bec68e7c41fed133827595747d853cad504e481e","date":1583501052,"type":3,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSegmentMerger#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentCommitInfo info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentCommitInfo info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, Version.LATEST.major, newIOContext(random()));\n    reader2 = new SegmentReader(info2, Version.LATEST.major, newIOContext(random()));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    mergedDir = newDirectory();\n    merge1Dir = newDirectory();\n    merge2Dir = newDirectory();\n    DocHelper.setupDoc(doc1);\n    SegmentCommitInfo info1 = DocHelper.writeDoc(random(), merge1Dir, doc1);\n    DocHelper.setupDoc(doc2);\n    SegmentCommitInfo info2 = DocHelper.writeDoc(random(), merge2Dir, doc2);\n    reader1 = new SegmentReader(info1, Version.LATEST.major, false, newIOContext(random()));\n    reader2 = new SegmentReader(info2, Version.LATEST.major, false, newIOContext(random()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"790693f23f4e88a59fbb25e47cc25f6d493b03cb":["31741cf1390044e38a2ec3127cf302ba841bfd75"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["a45bec74b98f6fc05f52770cfb425739e6563960"],"763da4a9605e47013078edc323b9d4b608f0f9e0":["790693f23f4e88a59fbb25e47cc25f6d493b03cb"],"a45bec74b98f6fc05f52770cfb425739e6563960":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9d153abcf92dc5329d98571a8c3035df9bd80648":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"bec68e7c41fed133827595747d853cad504e481e":["a4e83191a3e02851a0b67e5335e6922f3e9ea86d"],"a4e83191a3e02851a0b67e5335e6922f3e9ea86d":["763da4a9605e47013078edc323b9d4b608f0f9e0"],"31741cf1390044e38a2ec3127cf302ba841bfd75":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","9d153abcf92dc5329d98571a8c3035df9bd80648"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bec68e7c41fed133827595747d853cad504e481e"]},"commit2Childs":{"790693f23f4e88a59fbb25e47cc25f6d493b03cb":["763da4a9605e47013078edc323b9d4b608f0f9e0"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["31741cf1390044e38a2ec3127cf302ba841bfd75","92212fd254551a0b1156aafc3a1a6ed1a43932ad"],"a45bec74b98f6fc05f52770cfb425739e6563960":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"763da4a9605e47013078edc323b9d4b608f0f9e0":["a4e83191a3e02851a0b67e5335e6922f3e9ea86d"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"9d153abcf92dc5329d98571a8c3035df9bd80648":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"bec68e7c41fed133827595747d853cad504e481e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"31741cf1390044e38a2ec3127cf302ba841bfd75":["790693f23f4e88a59fbb25e47cc25f6d493b03cb"],"a4e83191a3e02851a0b67e5335e6922f3e9ea86d":["bec68e7c41fed133827595747d853cad504e481e"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["a45bec74b98f6fc05f52770cfb425739e6563960","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["9d153abcf92dc5329d98571a8c3035df9bd80648","615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","92212fd254551a0b1156aafc3a1a6ed1a43932ad","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}