{"path":"solr/core/src/java/org/apache/solr/search/LuceneQParser[LuceneQParserPlugin]#parse().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/LuceneQParser[LuceneQParserPlugin]#parse().mjava","pathOld":"solr/src/java/org/apache/solr/search/LuceneQParser[LuceneQParserPlugin]#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws ParseException {\n    String qstr = getString();\n    if (qstr == null) return null;\n\n    String defaultField = getParam(CommonParams.DF);\n    if (defaultField==null) {\n      defaultField = getReq().getSchema().getDefaultSearchFieldName();\n    }\n    lparser = new SolrQueryParser(this, defaultField);\n\n    lparser.setDefaultOperator\n      (QueryParsing.getQueryParserDefaultOperator(getReq().getSchema(), \n                                                  getParam(QueryParsing.OP)));\n\n    return lparser.parse(qstr);\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws ParseException {\n    String qstr = getString();\n    if (qstr == null) return null;\n\n    String defaultField = getParam(CommonParams.DF);\n    if (defaultField==null) {\n      defaultField = getReq().getSchema().getDefaultSearchFieldName();\n    }\n    lparser = new SolrQueryParser(this, defaultField);\n\n    lparser.setDefaultOperator\n      (QueryParsing.getQueryParserDefaultOperator(getReq().getSchema(), \n                                                  getParam(QueryParsing.OP)));\n\n    return lparser.parse(qstr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/LuceneQParser[LuceneQParserPlugin]#parse().mjava","pathOld":"solr/src/java/org/apache/solr/search/LuceneQParser[LuceneQParserPlugin]#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws ParseException {\n    String qstr = getString();\n    if (qstr == null) return null;\n\n    String defaultField = getParam(CommonParams.DF);\n    if (defaultField==null) {\n      defaultField = getReq().getSchema().getDefaultSearchFieldName();\n    }\n    lparser = new SolrQueryParser(this, defaultField);\n\n    lparser.setDefaultOperator\n      (QueryParsing.getQueryParserDefaultOperator(getReq().getSchema(), \n                                                  getParam(QueryParsing.OP)));\n\n    return lparser.parse(qstr);\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws ParseException {\n    String qstr = getString();\n    if (qstr == null) return null;\n\n    String defaultField = getParam(CommonParams.DF);\n    if (defaultField==null) {\n      defaultField = getReq().getSchema().getDefaultSearchFieldName();\n    }\n    lparser = new SolrQueryParser(this, defaultField);\n\n    lparser.setDefaultOperator\n      (QueryParsing.getQueryParserDefaultOperator(getReq().getSchema(), \n                                                  getParam(QueryParsing.OP)));\n\n    return lparser.parse(qstr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/LuceneQParser[LuceneQParserPlugin]#parse().mjava","pathOld":"solr/src/java/org/apache/solr/search/LuceneQParser[LuceneQParserPlugin]#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws ParseException {\n    String qstr = getString();\n    if (qstr == null) return null;\n\n    String defaultField = getParam(CommonParams.DF);\n    if (defaultField==null) {\n      defaultField = getReq().getSchema().getDefaultSearchFieldName();\n    }\n    lparser = new SolrQueryParser(this, defaultField);\n\n    lparser.setDefaultOperator\n      (QueryParsing.getQueryParserDefaultOperator(getReq().getSchema(), \n                                                  getParam(QueryParsing.OP)));\n\n    return lparser.parse(qstr);\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws ParseException {\n    String qstr = getString();\n    if (qstr == null) return null;\n\n    String defaultField = getParam(CommonParams.DF);\n    if (defaultField==null) {\n      defaultField = getReq().getSchema().getDefaultSearchFieldName();\n    }\n    lparser = new SolrQueryParser(this, defaultField);\n\n    lparser.setDefaultOperator\n      (QueryParsing.getQueryParserDefaultOperator(getReq().getSchema(), \n                                                  getParam(QueryParsing.OP)));\n\n    return lparser.parse(qstr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7c87c58d71fb9a6f5bc4ae8247339ecbbf67edc","date":1332908462,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/LuceneQParser[LuceneQParserPlugin]#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/LuceneQParser[LuceneQParserPlugin]#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws ParseException {\n    String qstr = getString();\n    if (qstr == null || qstr.length()==0) return null;\n\n    String defaultField = getParam(CommonParams.DF);\n    if (defaultField==null) {\n      defaultField = getReq().getSchema().getDefaultSearchFieldName();\n    }\n    lparser = new SolrQueryParser(this, defaultField);\n\n    lparser.setDefaultOperator\n      (QueryParsing.getQueryParserDefaultOperator(getReq().getSchema(), \n                                                  getParam(QueryParsing.OP)));\n\n    return lparser.parse(qstr);\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws ParseException {\n    String qstr = getString();\n    if (qstr == null) return null;\n\n    String defaultField = getParam(CommonParams.DF);\n    if (defaultField==null) {\n      defaultField = getReq().getSchema().getDefaultSearchFieldName();\n    }\n    lparser = new SolrQueryParser(this, defaultField);\n\n    lparser.setDefaultOperator\n      (QueryParsing.getQueryParserDefaultOperator(getReq().getSchema(), \n                                                  getParam(QueryParsing.OP)));\n\n    return lparser.parse(qstr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15cacbf46c73bd5b0e47b57128be8852cb236160","date":1332942979,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/LuceneQParser[LuceneQParserPlugin]#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/LuceneQParser[LuceneQParserPlugin]#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws ParseException {\n    String qstr = getString();\n    if (qstr == null) return null;\n\n    String defaultField = getParam(CommonParams.DF);\n    if (defaultField==null) {\n      defaultField = getReq().getSchema().getDefaultSearchFieldName();\n    }\n    lparser = new SolrQueryParser(this, defaultField);\n\n    lparser.setDefaultOperator\n      (QueryParsing.getQueryParserDefaultOperator(getReq().getSchema(), \n                                                  getParam(QueryParsing.OP)));\n\n    return lparser.parse(qstr);\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws ParseException {\n    String qstr = getString();\n    if (qstr == null || qstr.length()==0) return null;\n\n    String defaultField = getParam(CommonParams.DF);\n    if (defaultField==null) {\n      defaultField = getReq().getSchema().getDefaultSearchFieldName();\n    }\n    lparser = new SolrQueryParser(this, defaultField);\n\n    lparser.setDefaultOperator\n      (QueryParsing.getQueryParserDefaultOperator(getReq().getSchema(), \n                                                  getParam(QueryParsing.OP)));\n\n    return lparser.parse(qstr);\n  }\n\n","bugFix":null,"bugIntro":["738199265d7244d0d494cdc76ad36c750d9a1bcd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"738199265d7244d0d494cdc76ad36c750d9a1bcd","date":1333253180,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/LuceneQParser[LuceneQParserPlugin]#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/LuceneQParser[LuceneQParserPlugin]#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws ParseException {\n    String qstr = getString();\n    if (qstr == null || qstr.length()==0) return null;\n\n    String defaultField = getParam(CommonParams.DF);\n    if (defaultField==null) {\n      defaultField = getReq().getSchema().getDefaultSearchFieldName();\n    }\n    lparser = new SolrQueryParser(this, defaultField);\n\n    lparser.setDefaultOperator\n      (QueryParsing.getQueryParserDefaultOperator(getReq().getSchema(), \n                                                  getParam(QueryParsing.OP)));\n\n    return lparser.parse(qstr);\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws ParseException {\n    String qstr = getString();\n    if (qstr == null) return null;\n\n    String defaultField = getParam(CommonParams.DF);\n    if (defaultField==null) {\n      defaultField = getReq().getSchema().getDefaultSearchFieldName();\n    }\n    lparser = new SolrQueryParser(this, defaultField);\n\n    lparser.setDefaultOperator\n      (QueryParsing.getQueryParserDefaultOperator(getReq().getSchema(), \n                                                  getParam(QueryParsing.OP)));\n\n    return lparser.parse(qstr);\n  }\n\n","bugFix":["15cacbf46c73bd5b0e47b57128be8852cb236160"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/LuceneQParser[LuceneQParserPlugin]#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/LuceneQParser[LuceneQParserPlugin]#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws SyntaxError {\n    String qstr = getString();\n    if (qstr == null || qstr.length()==0) return null;\n\n    String defaultField = getParam(CommonParams.DF);\n    if (defaultField==null) {\n      defaultField = getReq().getSchema().getDefaultSearchFieldName();\n    }\n    lparser = new SolrQueryParser(this, defaultField);\n\n    lparser.setDefaultOperator\n      (QueryParsing.getQueryParserDefaultOperator(getReq().getSchema(), \n                                                  getParam(QueryParsing.OP)));\n\n    return lparser.parse(qstr);\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws ParseException {\n    String qstr = getString();\n    if (qstr == null || qstr.length()==0) return null;\n\n    String defaultField = getParam(CommonParams.DF);\n    if (defaultField==null) {\n      defaultField = getReq().getSchema().getDefaultSearchFieldName();\n    }\n    lparser = new SolrQueryParser(this, defaultField);\n\n    lparser.setDefaultOperator\n      (QueryParsing.getQueryParserDefaultOperator(getReq().getSchema(), \n                                                  getParam(QueryParsing.OP)));\n\n    return lparser.parse(qstr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/LuceneQParser[LuceneQParserPlugin]#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/LuceneQParser[LuceneQParserPlugin]#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws SyntaxError {\n    String qstr = getString();\n    if (qstr == null || qstr.length()==0) return null;\n\n    String defaultField = getParam(CommonParams.DF);\n    if (defaultField==null) {\n      defaultField = getReq().getSchema().getDefaultSearchFieldName();\n    }\n    lparser = new SolrQueryParser(this, defaultField);\n\n    lparser.setDefaultOperator\n      (QueryParsing.getQueryParserDefaultOperator(getReq().getSchema(), \n                                                  getParam(QueryParsing.OP)));\n\n    return lparser.parse(qstr);\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws ParseException {\n    String qstr = getString();\n    if (qstr == null || qstr.length()==0) return null;\n\n    String defaultField = getParam(CommonParams.DF);\n    if (defaultField==null) {\n      defaultField = getReq().getSchema().getDefaultSearchFieldName();\n    }\n    lparser = new SolrQueryParser(this, defaultField);\n\n    lparser.setDefaultOperator\n      (QueryParsing.getQueryParserDefaultOperator(getReq().getSchema(), \n                                                  getParam(QueryParsing.OP)));\n\n    return lparser.parse(qstr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f5903abb79d712ebf0242a2f3060b1ae075c6abd","date":1367653479,"type":5,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/LuceneQParser#parse().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/LuceneQParser[LuceneQParserPlugin]#parse().mjava","sourceNew":"  @Override\n  public Query parse() throws SyntaxError {\n    String qstr = getString();\n    if (qstr == null || qstr.length()==0) return null;\n\n    String defaultField = getParam(CommonParams.DF);\n    if (defaultField==null) {\n      defaultField = getReq().getSchema().getDefaultSearchFieldName();\n    }\n    lparser = new SolrQueryParser(this, defaultField);\n\n    lparser.setDefaultOperator\n      (QueryParsing.getQueryParserDefaultOperator(getReq().getSchema(),\n                                                  getParam(QueryParsing.OP)));\n\n    return lparser.parse(qstr);\n  }\n\n","sourceOld":"  @Override\n  public Query parse() throws SyntaxError {\n    String qstr = getString();\n    if (qstr == null || qstr.length()==0) return null;\n\n    String defaultField = getParam(CommonParams.DF);\n    if (defaultField==null) {\n      defaultField = getReq().getSchema().getDefaultSearchFieldName();\n    }\n    lparser = new SolrQueryParser(this, defaultField);\n\n    lparser.setDefaultOperator\n      (QueryParsing.getQueryParserDefaultOperator(getReq().getSchema(), \n                                                  getParam(QueryParsing.OP)));\n\n    return lparser.parse(qstr);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f5903abb79d712ebf0242a2f3060b1ae075c6abd":["3cdb67100dc016748799a77218aa409478372d79"],"15cacbf46c73bd5b0e47b57128be8852cb236160":["d7c87c58d71fb9a6f5bc4ae8247339ecbbf67edc"],"3cdb67100dc016748799a77218aa409478372d79":["738199265d7244d0d494cdc76ad36c750d9a1bcd"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"d7c87c58d71fb9a6f5bc4ae8247339ecbbf67edc":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["738199265d7244d0d494cdc76ad36c750d9a1bcd","3cdb67100dc016748799a77218aa409478372d79"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f5903abb79d712ebf0242a2f3060b1ae075c6abd"],"738199265d7244d0d494cdc76ad36c750d9a1bcd":["15cacbf46c73bd5b0e47b57128be8852cb236160"]},"commit2Childs":{"f5903abb79d712ebf0242a2f3060b1ae075c6abd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"15cacbf46c73bd5b0e47b57128be8852cb236160":["738199265d7244d0d494cdc76ad36c750d9a1bcd"],"3cdb67100dc016748799a77218aa409478372d79":["f5903abb79d712ebf0242a2f3060b1ae075c6abd","407687e67faf6e1f02a211ca078d8e3eed631027"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["d7c87c58d71fb9a6f5bc4ae8247339ecbbf67edc"],"d7c87c58d71fb9a6f5bc4ae8247339ecbbf67edc":["15cacbf46c73bd5b0e47b57128be8852cb236160"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"738199265d7244d0d494cdc76ad36c750d9a1bcd":["3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}