{"path":"sandbox/projects/appex/src/java/search/FSDataSource#loadDataFromFiles(File,List).mjava","commits":[{"id":"e3074d05d861bc1436ee03619fdee547f9c51d22","date":1020526983,"type":0,"author":"Andrew C. Oliver","isMerge":false,"pathNew":"sandbox/projects/appex/src/java/search/FSDataSource#loadDataFromFiles(File,List).mjava","pathOld":"/dev/null","sourceNew":"    private void loadDataFromFiles(File f, List list)\n    {\n        if (f.isDirectory())\n        {\n            File[] directoryTree = f.listFiles();\n            for (int i = 0; i < directoryTree.length; i++)\n            {\n                loadDataFromFiles(directoryTree[i], list);\n            }\n        }\n        else\n        {\n            Map dataMap = new HashMap();\n            dataMap.put(\"filePath\", f.getPath());\n            list.add(dataMap);\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"066e7c650bc6be15a2046e12740179ac678d667f","date":1020873157,"type":3,"author":"Kelvin Tan","isMerge":false,"pathNew":"sandbox/projects/appex/src/java/search/FSDataSource#loadDataFromFiles(File,List).mjava","pathOld":"sandbox/projects/appex/src/java/search/FSDataSource#loadDataFromFiles(File,List).mjava","sourceNew":"    private void loadDataFromFiles(File f, List list)\n    {\n        if (f.isDirectory())\n        {\n            File[] directoryTree = f.listFiles();\n            for (int i = 0; i < directoryTree.length; i++)\n            {\n                loadDataFromFiles(directoryTree[i], list);\n            }\n        }\n        else\n        {\n            Map dataMap = new HashMap();\n            dataMap.put(FILE_PATH_FIELD, f.getPath());\n            dataMap.put(FILE_NAME_FIELD, f.getName());\n            dataMap.put(FILE_LAST_MODIFIED_DATE_FIELD,\n                        DateField.timeToString(f.lastModified()));\n            dataMap.put(FILE_SIZE_FIELD, String.valueOf(f.length()));\n            dataMap.put(FILE_FORMAT_FIELD,\n                        IOUtils.getFileExtension(f));\n            addFileContents(f, dataMap);\n            list.add(dataMap);\n        }\n    }\n\n","sourceOld":"    private void loadDataFromFiles(File f, List list)\n    {\n        if (f.isDirectory())\n        {\n            File[] directoryTree = f.listFiles();\n            for (int i = 0; i < directoryTree.length; i++)\n            {\n                loadDataFromFiles(directoryTree[i], list);\n            }\n        }\n        else\n        {\n            Map dataMap = new HashMap();\n            dataMap.put(\"filePath\", f.getPath());\n            list.add(dataMap);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f35ba86e9cc568fdc800d780c620749584b1d5bc","date":1051838861,"type":4,"author":"Kelvin Tan","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/projects/appex/src/java/search/FSDataSource#loadDataFromFiles(File,List).mjava","sourceNew":null,"sourceOld":"    private void loadDataFromFiles(File f, List list)\n    {\n        if (f.isDirectory())\n        {\n            File[] directoryTree = f.listFiles();\n            for (int i = 0; i < directoryTree.length; i++)\n            {\n                loadDataFromFiles(directoryTree[i], list);\n            }\n        }\n        else\n        {\n            Map dataMap = new HashMap();\n            dataMap.put(FILE_PATH_FIELD, f.getPath());\n            dataMap.put(FILE_NAME_FIELD, f.getName());\n            dataMap.put(FILE_LAST_MODIFIED_DATE_FIELD,\n                        DateField.timeToString(f.lastModified()));\n            dataMap.put(FILE_SIZE_FIELD, String.valueOf(f.length()));\n            dataMap.put(FILE_FORMAT_FIELD,\n                        IOUtils.getFileExtension(f));\n            addFileContents(f, dataMap);\n            list.add(dataMap);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f35ba86e9cc568fdc800d780c620749584b1d5bc":["066e7c650bc6be15a2046e12740179ac678d667f"],"e3074d05d861bc1436ee03619fdee547f9c51d22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f35ba86e9cc568fdc800d780c620749584b1d5bc"],"066e7c650bc6be15a2046e12740179ac678d667f":["e3074d05d861bc1436ee03619fdee547f9c51d22"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3074d05d861bc1436ee03619fdee547f9c51d22"],"f35ba86e9cc568fdc800d780c620749584b1d5bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e3074d05d861bc1436ee03619fdee547f9c51d22":["066e7c650bc6be15a2046e12740179ac678d667f"],"066e7c650bc6be15a2046e12740179ac678d667f":["f35ba86e9cc568fdc800d780c620749584b1d5bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}