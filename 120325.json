{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testReloadCoreAfterFailure().mjava","commits":[{"id":"1d48ddeb7e5d775a58702f6c2aaf0d501b12f0e6","date":1487814396,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testReloadCoreAfterFailure().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testReloadCoreAfterFailure() throws Exception {\n    cores.shutdown();\n    useFactory(null); // use FS factory\n\n    try {\n      cores = CoreContainer.createAndLoad(SOLR_HOME, getSolrXml());\n\n      String ddir = CoreAdminRequest.getCoreStatus(\"core0\", getSolrCore0()).getDataDirectory();\n      Path data = Paths.get(ddir, \"index\");\n      assumeTrue(\"test can't handle relative data directory paths (yet?)\", data.isAbsolute());\n\n      getSolrCore0().add(new SolrInputDocument(\"id\", \"core0-1\"));\n      getSolrCore0().commit();\n\n      cores.shutdown();\n\n      // destroy the index\n      Files.move(data.resolve(\"_0.si\"), data.resolve(\"backup\"));\n      cores = CoreContainer.createAndLoad(SOLR_HOME, getSolrXml());\n\n      // Need to run a query to confirm that the core couldn't load\n      expectThrows(SolrException.class, () -> getSolrCore0().query(new SolrQuery(\"*:*\")));\n\n      // We didn't fix anything, so should still throw\n      expectThrows(SolrException.class, () -> CoreAdminRequest.reloadCore(\"core0\", getSolrCore0()));\n\n      Files.move(data.resolve(\"backup\"), data.resolve(\"_0.si\"));\n      CoreAdminRequest.reloadCore(\"core0\", getSolrCore0());\n      assertEquals(1, getSolrCore0().query(new SolrQuery(\"*:*\")).getResults().getNumFound());\n    } finally {\n      resetFactory();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1d48ddeb7e5d775a58702f6c2aaf0d501b12f0e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d48ddeb7e5d775a58702f6c2aaf0d501b12f0e6"]},"commit2Childs":{"1d48ddeb7e5d775a58702f6c2aaf0d501b12f0e6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d48ddeb7e5d775a58702f6c2aaf0d501b12f0e6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}