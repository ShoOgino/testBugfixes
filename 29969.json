{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/CartesianProductStream#toExplanation(StreamFactory).mjava","commits":[{"id":"d492b24eb91b29b3fb6bca5b158bec326fbc12df","date":1490042446,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/CartesianProductStream#toExplanation(StreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Explanation toExplanation(StreamFactory factory) throws IOException {\n\n    Explanation explanation = new StreamExplanation(getStreamNodeId().toString())\n      .withChildren(new Explanation[]{\n        stream.toExplanation(factory)\n      })\n      .withFunctionName(factory.getFunctionName(this.getClass()))\n      .withImplementingClass(this.getClass().getName())\n      .withExpressionType(ExpressionType.STREAM_DECORATOR)\n      .withExpression(toExpression(factory, false).toString());   \n    \n    for(NamedEvaluator evaluator : evaluators){\n      explanation.addHelper(evaluator.getEvaluator().toExplanation(factory));\n    }\n    \n    explanation.addHelper(orderBy.toExplanation(factory));\n    \n    return explanation;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"869bbd0c59fee20268facd5a2e0d3c77e34500ed","date":1490280012,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/CartesianProductStream#toExplanation(StreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Explanation toExplanation(StreamFactory factory) throws IOException {\n\n    Explanation explanation = new StreamExplanation(getStreamNodeId().toString())\n      .withChildren(new Explanation[]{\n        stream.toExplanation(factory)\n      })\n      .withFunctionName(factory.getFunctionName(this.getClass()))\n      .withImplementingClass(this.getClass().getName())\n      .withExpressionType(ExpressionType.STREAM_DECORATOR)\n      .withExpression(toExpression(factory, false).toString());   \n    \n    for(NamedEvaluator evaluator : evaluators){\n      explanation.addHelper(evaluator.getEvaluator().toExplanation(factory));\n    }\n    \n    explanation.addHelper(orderBy.toExplanation(factory));\n    \n    return explanation;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"baf04c45aeaeb6cec230c739293db582af6852af","date":1497024448,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/CartesianProductStream#toExplanation(StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/CartesianProductStream#toExplanation(StreamFactory).mjava","sourceNew":"  @Override\n  public Explanation toExplanation(StreamFactory factory) throws IOException {\n\n    Explanation explanation = new StreamExplanation(getStreamNodeId().toString())\n      .withChildren(new Explanation[]{\n        stream.toExplanation(factory)\n      })\n      .withFunctionName(factory.getFunctionName(this.getClass()))\n      .withImplementingClass(this.getClass().getName())\n      .withExpressionType(ExpressionType.STREAM_DECORATOR)\n      .withExpression(toExpression(factory, false).toString());   \n    \n    for(NamedEvaluator evaluator : evaluators){\n      explanation.addHelper(evaluator.getEvaluator().toExplanation(factory));\n    }\n\n    if(orderBy != null) {\n      explanation.addHelper(orderBy.toExplanation(factory));\n    }\n    \n    return explanation;\n  }\n\n","sourceOld":"  @Override\n  public Explanation toExplanation(StreamFactory factory) throws IOException {\n\n    Explanation explanation = new StreamExplanation(getStreamNodeId().toString())\n      .withChildren(new Explanation[]{\n        stream.toExplanation(factory)\n      })\n      .withFunctionName(factory.getFunctionName(this.getClass()))\n      .withImplementingClass(this.getClass().getName())\n      .withExpressionType(ExpressionType.STREAM_DECORATOR)\n      .withExpression(toExpression(factory, false).toString());   \n    \n    for(NamedEvaluator evaluator : evaluators){\n      explanation.addHelper(evaluator.getEvaluator().toExplanation(factory));\n    }\n    \n    explanation.addHelper(orderBy.toExplanation(factory));\n    \n    return explanation;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/CartesianProductStream#toExplanation(StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/CartesianProductStream#toExplanation(StreamFactory).mjava","sourceNew":"  @Override\n  public Explanation toExplanation(StreamFactory factory) throws IOException {\n\n    Explanation explanation = new StreamExplanation(getStreamNodeId().toString())\n      .withChildren(new Explanation[]{\n        stream.toExplanation(factory)\n      })\n      .withFunctionName(factory.getFunctionName(this.getClass()))\n      .withImplementingClass(this.getClass().getName())\n      .withExpressionType(ExpressionType.STREAM_DECORATOR)\n      .withExpression(toExpression(factory, false).toString());   \n    \n    for(NamedEvaluator evaluator : evaluators){\n      explanation.addHelper(evaluator.getEvaluator().toExplanation(factory));\n    }\n\n    if(orderBy != null) {\n      explanation.addHelper(orderBy.toExplanation(factory));\n    }\n    \n    return explanation;\n  }\n\n","sourceOld":"  @Override\n  public Explanation toExplanation(StreamFactory factory) throws IOException {\n\n    Explanation explanation = new StreamExplanation(getStreamNodeId().toString())\n      .withChildren(new Explanation[]{\n        stream.toExplanation(factory)\n      })\n      .withFunctionName(factory.getFunctionName(this.getClass()))\n      .withImplementingClass(this.getClass().getName())\n      .withExpressionType(ExpressionType.STREAM_DECORATOR)\n      .withExpression(toExpression(factory, false).toString());   \n    \n    for(NamedEvaluator evaluator : evaluators){\n      explanation.addHelper(evaluator.getEvaluator().toExplanation(factory));\n    }\n    \n    explanation.addHelper(orderBy.toExplanation(factory));\n    \n    return explanation;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/CartesianProductStream#toExplanation(StreamFactory).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/CartesianProductStream#toExplanation(StreamFactory).mjava","sourceNew":"  @Override\n  public Explanation toExplanation(StreamFactory factory) throws IOException {\n\n    Explanation explanation = new StreamExplanation(getStreamNodeId().toString())\n      .withChildren(new Explanation[]{\n        stream.toExplanation(factory)\n      })\n      .withFunctionName(factory.getFunctionName(this.getClass()))\n      .withImplementingClass(this.getClass().getName())\n      .withExpressionType(ExpressionType.STREAM_DECORATOR)\n      .withExpression(toExpression(factory, false).toString());   \n    \n    for(NamedEvaluator evaluator : evaluators){\n      explanation.addHelper(evaluator.getEvaluator().toExplanation(factory));\n    }\n\n    if(orderBy != null) {\n      explanation.addHelper(orderBy.toExplanation(factory));\n    }\n    \n    return explanation;\n  }\n\n","sourceOld":"  @Override\n  public Explanation toExplanation(StreamFactory factory) throws IOException {\n\n    Explanation explanation = new StreamExplanation(getStreamNodeId().toString())\n      .withChildren(new Explanation[]{\n        stream.toExplanation(factory)\n      })\n      .withFunctionName(factory.getFunctionName(this.getClass()))\n      .withImplementingClass(this.getClass().getName())\n      .withExpressionType(ExpressionType.STREAM_DECORATOR)\n      .withExpression(toExpression(factory, false).toString());   \n    \n    for(NamedEvaluator evaluator : evaluators){\n      explanation.addHelper(evaluator.getEvaluator().toExplanation(factory));\n    }\n    \n    explanation.addHelper(orderBy.toExplanation(factory));\n    \n    return explanation;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"869bbd0c59fee20268facd5a2e0d3c77e34500ed":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d492b24eb91b29b3fb6bca5b158bec326fbc12df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"baf04c45aeaeb6cec230c739293db582af6852af":["d492b24eb91b29b3fb6bca5b158bec326fbc12df"],"28288370235ed02234a64753cdbf0c6ec096304a":["d492b24eb91b29b3fb6bca5b158bec326fbc12df","baf04c45aeaeb6cec230c739293db582af6852af"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["869bbd0c59fee20268facd5a2e0d3c77e34500ed","baf04c45aeaeb6cec230c739293db582af6852af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"869bbd0c59fee20268facd5a2e0d3c77e34500ed":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["869bbd0c59fee20268facd5a2e0d3c77e34500ed","d492b24eb91b29b3fb6bca5b158bec326fbc12df"],"d492b24eb91b29b3fb6bca5b158bec326fbc12df":["baf04c45aeaeb6cec230c739293db582af6852af","28288370235ed02234a64753cdbf0c6ec096304a"],"baf04c45aeaeb6cec230c739293db582af6852af":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}