{"path":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestNumericQueryParser#setFieldValues(NumberType,HashMap[String,NumericField]).mjava","commits":[{"id":"a7e86426ca0513cfc495c3a2c0bb0c7abe03988d","date":1310245513,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestNumericQueryParser#setFieldValues(NumberType,HashMap[String,NumericField]).mjava","pathOld":"/dev/null","sourceNew":"  private static void setFieldValues(NumberType numberType,\n      HashMap<String,NumericField> numericFieldMap) {\n    \n    Number number = getNumberType(numberType, NumericField.DataType.DOUBLE\n        .name());\n    numericFieldMap.get(NumericField.DataType.DOUBLE.name()).setDoubleValue(\n        number.doubleValue());\n    \n    number = getNumberType(numberType, NumericField.DataType.INT.name());\n    numericFieldMap.get(NumericField.DataType.INT.name()).setIntValue(\n        number.intValue());\n    \n    number = getNumberType(numberType, NumericField.DataType.LONG.name());\n    numericFieldMap.get(NumericField.DataType.LONG.name()).setLongValue(\n        number.longValue());\n    \n    number = getNumberType(numberType, NumericField.DataType.FLOAT.name());\n    numericFieldMap.get(NumericField.DataType.FLOAT.name()).setFloatValue(\n        number.floatValue());\n    \n    number = getNumberType(numberType, DATE_FIELD_NAME);\n    numericFieldMap.get(DATE_FIELD_NAME).setLongValue(number.longValue());\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["fa0f44f887719e97183771e977cfc4bfb485b766"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","date":1310612214,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestNumericQueryParser#setFieldValues(NumberType,HashMap[String,NumericField]).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestNumericQueryParser#setFieldValues(NumberType,HashMap[String,NumericField]).mjava","sourceNew":"  private static void setFieldValues(NumberType numberType,\n      HashMap<String,NumericField> numericFieldMap) {\n    \n    Number number = getNumberType(numberType, NumericField.DataType.DOUBLE\n        .name());\n    numericFieldMap.get(NumericField.DataType.DOUBLE.name()).setDoubleValue(\n        number.doubleValue());\n    \n    number = getNumberType(numberType, NumericField.DataType.INT.name());\n    numericFieldMap.get(NumericField.DataType.INT.name()).setIntValue(\n        number.intValue());\n    \n    number = getNumberType(numberType, NumericField.DataType.LONG.name());\n    numericFieldMap.get(NumericField.DataType.LONG.name()).setLongValue(\n        number.longValue());\n    \n    number = getNumberType(numberType, NumericField.DataType.FLOAT.name());\n    numericFieldMap.get(NumericField.DataType.FLOAT.name()).setFloatValue(\n        number.floatValue());\n    \n    number = getNumberType(numberType, DATE_FIELD_NAME);\n    numericFieldMap.get(DATE_FIELD_NAME).setLongValue(number.longValue());\n    \n  }\n\n","sourceOld":"  private static void setFieldValues(NumberType numberType,\n      HashMap<String,NumericField> numericFieldMap) {\n    \n    Number number = getNumberType(numberType, NumericField.DataType.DOUBLE\n        .name());\n    numericFieldMap.get(NumericField.DataType.DOUBLE.name()).setDoubleValue(\n        number.doubleValue());\n    \n    number = getNumberType(numberType, NumericField.DataType.INT.name());\n    numericFieldMap.get(NumericField.DataType.INT.name()).setIntValue(\n        number.intValue());\n    \n    number = getNumberType(numberType, NumericField.DataType.LONG.name());\n    numericFieldMap.get(NumericField.DataType.LONG.name()).setLongValue(\n        number.longValue());\n    \n    number = getNumberType(numberType, NumericField.DataType.FLOAT.name());\n    numericFieldMap.get(NumericField.DataType.FLOAT.name()).setFloatValue(\n        number.floatValue());\n    \n    number = getNumberType(numberType, DATE_FIELD_NAME);\n    numericFieldMap.get(DATE_FIELD_NAME).setLongValue(number.longValue());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["a7e86426ca0513cfc495c3a2c0bb0c7abe03988d"],"a7e86426ca0513cfc495c3a2c0bb0c7abe03988d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"]},"commit2Childs":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a7e86426ca0513cfc495c3a2c0bb0c7abe03988d":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a7e86426ca0513cfc495c3a2c0bb0c7abe03988d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}