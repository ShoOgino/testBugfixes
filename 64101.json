{"path":"solr/core/src/java/org/apache/solr/core/CoreMaps#getCoreNames(SolrCore).mjava","commits":[{"id":"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0","date":1366659310,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreMaps#getCoreNames(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreMaps[CoreContainer]#getCoreNames(SolrCore).mjava","sourceNew":"  List<String> getCoreNames(SolrCore core) {\n    List<String> lst = new ArrayList<String>();\n\n    synchronized (locker) {\n      for (Map.Entry<String, SolrCore> entry : cores.entrySet()) {\n        if (core == entry.getValue()) {\n          lst.add(entry.getKey());\n        }\n      }\n      for (Map.Entry<String, SolrCore> entry : transientCores.entrySet()) {\n        if (core == entry.getValue()) {\n          lst.add(entry.getKey());\n        }\n      }\n    }\n    return lst;\n  }\n\n","sourceOld":"  List<String> getCoreNames(SolrCore core) {\n    List<String> lst = new ArrayList<String>();\n\n    synchronized (locker) {\n      for (Map.Entry<String, SolrCore> entry : cores.entrySet()) {\n        if (core == entry.getValue()) {\n          lst.add(entry.getKey());\n        }\n      }\n      for (Map.Entry<String, SolrCore> entry : transientCores.entrySet()) {\n        if (core == entry.getValue()) {\n          lst.add(entry.getKey());\n        }\n      }\n    }\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9409650933cc688e77e565092a25e58adfc2e18d","date":1366663164,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#getCoreNames(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreMaps#getCoreNames(SolrCore).mjava","sourceNew":"  List<String> getCoreNames(SolrCore core) {\n    List<String> lst = new ArrayList<String>();\n\n    synchronized (modifyLock) {\n      for (Map.Entry<String, SolrCore> entry : cores.entrySet()) {\n        if (core == entry.getValue()) {\n          lst.add(entry.getKey());\n        }\n      }\n      for (Map.Entry<String, SolrCore> entry : transientCores.entrySet()) {\n        if (core == entry.getValue()) {\n          lst.add(entry.getKey());\n        }\n      }\n    }\n    return lst;\n  }\n\n","sourceOld":"  List<String> getCoreNames(SolrCore core) {\n    List<String> lst = new ArrayList<String>();\n\n    synchronized (locker) {\n      for (Map.Entry<String, SolrCore> entry : cores.entrySet()) {\n        if (core == entry.getValue()) {\n          lst.add(entry.getKey());\n        }\n      }\n      for (Map.Entry<String, SolrCore> entry : transientCores.entrySet()) {\n        if (core == entry.getValue()) {\n          lst.add(entry.getKey());\n        }\n      }\n    }\n    return lst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9409650933cc688e77e565092a25e58adfc2e18d":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9409650933cc688e77e565092a25e58adfc2e18d"]},"commit2Childs":{"9409650933cc688e77e565092a25e58adfc2e18d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0":["9409650933cc688e77e565092a25e58adfc2e18d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}