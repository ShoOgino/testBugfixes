{"path":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.GroupExpandCollector#GroupExpandCollector(SortedDocValues,FixedBitSet,IntHashSet,int,Sort).mjava","commits":[{"id":"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87","date":1440409984,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.GroupExpandCollector#GroupExpandCollector(SortedDocValues,FixedBitSet,IntHashSet,int,Sort).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.GroupExpandCollector#GroupExpandCollector(SortedDocValues,FixedBitSet,IntOpenHashSet,int,Sort).mjava","sourceNew":"    public GroupExpandCollector(SortedDocValues docValues, FixedBitSet groupBits, IntHashSet collapsedSet, int limit, Sort sort) throws IOException {\n      int numGroups = collapsedSet.size();\n      groups = new LongObjectHashMap<>(numGroups);\n      DocIdSetIterator iterator = new BitSetIterator(groupBits, 0); // cost is not useful here\n      int group;\n      while ((group = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        Collector collector = (sort == null) ? TopScoreDocCollector.create(limit) : TopFieldCollector.create(sort, limit, false, false, false);\n        groups.put(group, collector);\n      }\n\n      this.collapsedSet = collapsedSet;\n      this.groupBits = groupBits;\n      this.docValues = docValues;\n      if(docValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)docValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n    }\n\n","sourceOld":"    public GroupExpandCollector(SortedDocValues docValues, FixedBitSet groupBits, IntOpenHashSet collapsedSet, int limit, Sort sort) throws IOException {\n      int numGroups = collapsedSet.size();\n      groups = new LongObjectOpenHashMap<>(numGroups * 2);\n      DocIdSetIterator iterator = new BitSetIterator(groupBits, 0); // cost is not useful here\n      int group;\n      while ((group = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        Collector collector = (sort == null) ? TopScoreDocCollector.create(limit) : TopFieldCollector.create(sort, limit, false, false, false);\n        groups.put(group, collector);\n      }\n\n      this.collapsedSet = collapsedSet;\n      this.groupBits = groupBits;\n      this.docValues = docValues;\n      if(docValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)docValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"404d1ab7f6f396235047017c88d545fec15dafb7","date":1511975378,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.GroupExpandCollector#GroupExpandCollector(SortedDocValues,FixedBitSet,IntHashSet,int,Sort).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.GroupExpandCollector#GroupExpandCollector(SortedDocValues,FixedBitSet,IntHashSet,int,Sort).mjava","sourceNew":"    public GroupExpandCollector(SortedDocValues docValues, FixedBitSet groupBits, IntHashSet collapsedSet, int limit, Sort sort) throws IOException {\n      int numGroups = collapsedSet.size();\n      groups = new LongObjectHashMap<>(numGroups);\n      DocIdSetIterator iterator = new BitSetIterator(groupBits, 0); // cost is not useful here\n      int group;\n      while ((group = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        Collector collector = (sort == null) ? TopScoreDocCollector.create(limit) : TopFieldCollector.create(sort, limit, false, false, false, true);\n        groups.put(group, collector);\n      }\n\n      this.collapsedSet = collapsedSet;\n      this.groupBits = groupBits;\n      this.docValues = docValues;\n      if(docValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)docValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n    }\n\n","sourceOld":"    public GroupExpandCollector(SortedDocValues docValues, FixedBitSet groupBits, IntHashSet collapsedSet, int limit, Sort sort) throws IOException {\n      int numGroups = collapsedSet.size();\n      groups = new LongObjectHashMap<>(numGroups);\n      DocIdSetIterator iterator = new BitSetIterator(groupBits, 0); // cost is not useful here\n      int group;\n      while ((group = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        Collector collector = (sort == null) ? TopScoreDocCollector.create(limit) : TopFieldCollector.create(sort, limit, false, false, false);\n        groups.put(group, collector);\n      }\n\n      this.collapsedSet = collapsedSet;\n      this.groupBits = groupBits;\n      this.docValues = docValues;\n      if(docValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)docValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1aad05eeff7818b0833c02ac6b743aa72054963b","date":1512093122,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.GroupExpandCollector#GroupExpandCollector(SortedDocValues,FixedBitSet,IntHashSet,int,Sort).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.GroupExpandCollector#GroupExpandCollector(SortedDocValues,FixedBitSet,IntHashSet,int,Sort).mjava","sourceNew":"    public GroupExpandCollector(SortedDocValues docValues, FixedBitSet groupBits, IntHashSet collapsedSet, int limit, Sort sort) throws IOException {\n      int numGroups = collapsedSet.size();\n      groups = new LongObjectHashMap<>(numGroups);\n      DocIdSetIterator iterator = new BitSetIterator(groupBits, 0); // cost is not useful here\n      int group;\n      while ((group = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        Collector collector = (sort == null) ? TopScoreDocCollector.create(limit) : TopFieldCollector.create(sort, limit, false, false, false, true);\n        groups.put(group, collector);\n      }\n\n      this.collapsedSet = collapsedSet;\n      this.groupBits = groupBits;\n      this.docValues = docValues;\n      if(docValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)docValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n    }\n\n","sourceOld":"    public GroupExpandCollector(SortedDocValues docValues, FixedBitSet groupBits, IntHashSet collapsedSet, int limit, Sort sort) throws IOException {\n      int numGroups = collapsedSet.size();\n      groups = new LongObjectHashMap<>(numGroups);\n      DocIdSetIterator iterator = new BitSetIterator(groupBits, 0); // cost is not useful here\n      int group;\n      while ((group = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        Collector collector = (sort == null) ? TopScoreDocCollector.create(limit) : TopFieldCollector.create(sort, limit, false, false, false);\n        groups.put(group, collector);\n      }\n\n      this.collapsedSet = collapsedSet;\n      this.groupBits = groupBits;\n      this.docValues = docValues;\n      if(docValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)docValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81fff83bdb893c1471efd78f6a9a3ce4f98120b9","date":1531895937,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.GroupExpandCollector#GroupExpandCollector(SortedDocValues,FixedBitSet,IntHashSet,int,Sort).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.GroupExpandCollector#GroupExpandCollector(SortedDocValues,FixedBitSet,IntHashSet,int,Sort).mjava","sourceNew":"    public GroupExpandCollector(SortedDocValues docValues, FixedBitSet groupBits, IntHashSet collapsedSet, int limit, Sort sort) throws IOException {\n      int numGroups = collapsedSet.size();\n      groups = new LongObjectHashMap<>(numGroups);\n      DocIdSetIterator iterator = new BitSetIterator(groupBits, 0); // cost is not useful here\n      int group;\n      while ((group = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        Collector collector = (sort == null) ? TopScoreDocCollector.create(limit) : TopFieldCollector.create(sort, limit, false, false, true);\n        groups.put(group, collector);\n      }\n\n      this.collapsedSet = collapsedSet;\n      this.groupBits = groupBits;\n      this.docValues = docValues;\n      if(docValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)docValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n    }\n\n","sourceOld":"    public GroupExpandCollector(SortedDocValues docValues, FixedBitSet groupBits, IntHashSet collapsedSet, int limit, Sort sort) throws IOException {\n      int numGroups = collapsedSet.size();\n      groups = new LongObjectHashMap<>(numGroups);\n      DocIdSetIterator iterator = new BitSetIterator(groupBits, 0); // cost is not useful here\n      int group;\n      while ((group = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        Collector collector = (sort == null) ? TopScoreDocCollector.create(limit) : TopFieldCollector.create(sort, limit, false, false, false, true);\n        groups.put(group, collector);\n      }\n\n      this.collapsedSet = collapsedSet;\n      this.groupBits = groupBits;\n      this.docValues = docValues;\n      if(docValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)docValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.GroupExpandCollector#GroupExpandCollector(SortedDocValues,FixedBitSet,IntHashSet,int,Sort).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.GroupExpandCollector#GroupExpandCollector(SortedDocValues,FixedBitSet,IntHashSet,int,Sort).mjava","sourceNew":"    public GroupExpandCollector(SortedDocValues docValues, FixedBitSet groupBits, IntHashSet collapsedSet, int limit, Sort sort) throws IOException {\n      int numGroups = collapsedSet.size();\n      groups = new LongObjectHashMap<>(numGroups);\n      DocIdSetIterator iterator = new BitSetIterator(groupBits, 0); // cost is not useful here\n      int group;\n      while ((group = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        Collector collector = (sort == null) ? TopScoreDocCollector.create(limit) : TopFieldCollector.create(sort, limit, false, false, true);\n        groups.put(group, collector);\n      }\n\n      this.collapsedSet = collapsedSet;\n      this.groupBits = groupBits;\n      this.docValues = docValues;\n      if(docValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)docValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n    }\n\n","sourceOld":"    public GroupExpandCollector(SortedDocValues docValues, FixedBitSet groupBits, IntHashSet collapsedSet, int limit, Sort sort) throws IOException {\n      int numGroups = collapsedSet.size();\n      groups = new LongObjectHashMap<>(numGroups);\n      DocIdSetIterator iterator = new BitSetIterator(groupBits, 0); // cost is not useful here\n      int group;\n      while ((group = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        Collector collector = (sort == null) ? TopScoreDocCollector.create(limit) : TopFieldCollector.create(sort, limit, false, false, false, true);\n        groups.put(group, collector);\n      }\n\n      this.collapsedSet = collapsedSet;\n      this.groupBits = groupBits;\n      this.docValues = docValues;\n      if(docValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)docValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04c370507e5521b2eb998530736f1c19b851ed5a","date":1531911305,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.GroupExpandCollector#GroupExpandCollector(SortedDocValues,FixedBitSet,IntHashSet,int,Sort).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.GroupExpandCollector#GroupExpandCollector(SortedDocValues,FixedBitSet,IntHashSet,int,Sort).mjava","sourceNew":"    public GroupExpandCollector(SortedDocValues docValues, FixedBitSet groupBits, IntHashSet collapsedSet, int limit, Sort sort) throws IOException {\n      int numGroups = collapsedSet.size();\n      groups = new LongObjectHashMap<>(numGroups);\n      DocIdSetIterator iterator = new BitSetIterator(groupBits, 0); // cost is not useful here\n      int group;\n      while ((group = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        Collector collector = (sort == null) ? TopScoreDocCollector.create(limit) : TopFieldCollector.create(sort, limit, false, true);\n        groups.put(group, collector);\n      }\n\n      this.collapsedSet = collapsedSet;\n      this.groupBits = groupBits;\n      this.docValues = docValues;\n      if(docValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)docValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n    }\n\n","sourceOld":"    public GroupExpandCollector(SortedDocValues docValues, FixedBitSet groupBits, IntHashSet collapsedSet, int limit, Sort sort) throws IOException {\n      int numGroups = collapsedSet.size();\n      groups = new LongObjectHashMap<>(numGroups);\n      DocIdSetIterator iterator = new BitSetIterator(groupBits, 0); // cost is not useful here\n      int group;\n      while ((group = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        Collector collector = (sort == null) ? TopScoreDocCollector.create(limit) : TopFieldCollector.create(sort, limit, false, false, true);\n        groups.put(group, collector);\n      }\n\n      this.collapsedSet = collapsedSet;\n      this.groupBits = groupBits;\n      this.docValues = docValues;\n      if(docValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)docValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d3f7ab1a502671bbdb03bcced21e764d2483221","date":1532329609,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.GroupExpandCollector#GroupExpandCollector(SortedDocValues,FixedBitSet,IntHashSet,int,Sort).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.GroupExpandCollector#GroupExpandCollector(SortedDocValues,FixedBitSet,IntHashSet,int,Sort).mjava","sourceNew":"    public GroupExpandCollector(SortedDocValues docValues, FixedBitSet groupBits, IntHashSet collapsedSet, int limit, Sort sort) throws IOException {\n      int numGroups = collapsedSet.size();\n      groups = new LongObjectHashMap<>(numGroups);\n      DocIdSetIterator iterator = new BitSetIterator(groupBits, 0); // cost is not useful here\n      int group;\n      while ((group = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        Collector collector = (sort == null) ? TopScoreDocCollector.create(limit) : TopFieldCollector.create(sort, limit, true);\n        groups.put(group, collector);\n      }\n\n      this.collapsedSet = collapsedSet;\n      this.groupBits = groupBits;\n      this.docValues = docValues;\n      if(docValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)docValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n    }\n\n","sourceOld":"    public GroupExpandCollector(SortedDocValues docValues, FixedBitSet groupBits, IntHashSet collapsedSet, int limit, Sort sort) throws IOException {\n      int numGroups = collapsedSet.size();\n      groups = new LongObjectHashMap<>(numGroups);\n      DocIdSetIterator iterator = new BitSetIterator(groupBits, 0); // cost is not useful here\n      int group;\n      while ((group = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        Collector collector = (sort == null) ? TopScoreDocCollector.create(limit) : TopFieldCollector.create(sort, limit, false, true);\n        groups.put(group, collector);\n      }\n\n      this.collapsedSet = collapsedSet;\n      this.groupBits = groupBits;\n      this.docValues = docValues;\n      if(docValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)docValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe3c6364bed04a73ad0884b05401d80ce96027a9","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.GroupExpandCollector#GroupExpandCollector(SortedDocValues,FixedBitSet,IntHashSet,int,Sort).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.GroupExpandCollector#GroupExpandCollector(SortedDocValues,FixedBitSet,IntHashSet,int,Sort).mjava","sourceNew":"    public GroupExpandCollector(SortedDocValues docValues, FixedBitSet groupBits, IntHashSet collapsedSet, int limit, Sort sort) throws IOException {\n      int numGroups = collapsedSet.size();\n      groups = new LongObjectHashMap<>(numGroups);\n      DocIdSetIterator iterator = new BitSetIterator(groupBits, 0); // cost is not useful here\n      int group;\n      while ((group = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        Collector collector = (sort == null) ? TopScoreDocCollector.create(limit, Integer.MAX_VALUE) : TopFieldCollector.create(sort, limit, Integer.MAX_VALUE);\n        groups.put(group, collector);\n      }\n\n      this.collapsedSet = collapsedSet;\n      this.groupBits = groupBits;\n      this.docValues = docValues;\n      if(docValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)docValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n    }\n\n","sourceOld":"    public GroupExpandCollector(SortedDocValues docValues, FixedBitSet groupBits, IntHashSet collapsedSet, int limit, Sort sort) throws IOException {\n      int numGroups = collapsedSet.size();\n      groups = new LongObjectHashMap<>(numGroups);\n      DocIdSetIterator iterator = new BitSetIterator(groupBits, 0); // cost is not useful here\n      int group;\n      while ((group = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        Collector collector = (sort == null) ? TopScoreDocCollector.create(limit) : TopFieldCollector.create(sort, limit, true);\n        groups.put(group, collector);\n      }\n\n      this.collapsedSet = collapsedSet;\n      this.groupBits = groupBits;\n      this.docValues = docValues;\n      if(docValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)docValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93c255ee5a354a24c9d163acebc0457234aed8db","date":1584503584,"type":3,"author":"ameliahenderson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.GroupExpandCollector#GroupExpandCollector(SortedDocValues,FixedBitSet,IntHashSet,int,Sort).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.GroupExpandCollector#GroupExpandCollector(SortedDocValues,FixedBitSet,IntHashSet,int,Sort).mjava","sourceNew":"    public GroupExpandCollector(SortedDocValues docValues, FixedBitSet groupBits, IntHashSet collapsedSet, int limit, Sort sort) throws IOException {\n      int numGroups = collapsedSet.size();\n      groups = new LongObjectHashMap<>(numGroups);\n      DocIdSetIterator iterator = new BitSetIterator(groupBits, 0); // cost is not useful here\n      int group;\n      while ((group = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        groups.put(group, getCollector(limit, sort));\n      }\n\n      this.collapsedSet = collapsedSet;\n      this.groupBits = groupBits;\n      this.docValues = docValues;\n      if(docValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)docValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n    }\n\n","sourceOld":"    public GroupExpandCollector(SortedDocValues docValues, FixedBitSet groupBits, IntHashSet collapsedSet, int limit, Sort sort) throws IOException {\n      int numGroups = collapsedSet.size();\n      groups = new LongObjectHashMap<>(numGroups);\n      DocIdSetIterator iterator = new BitSetIterator(groupBits, 0); // cost is not useful here\n      int group;\n      while ((group = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        Collector collector = (sort == null) ? TopScoreDocCollector.create(limit, Integer.MAX_VALUE) : TopFieldCollector.create(sort, limit, Integer.MAX_VALUE);\n        groups.put(group, collector);\n      }\n\n      this.collapsedSet = collapsedSet;\n      this.groupBits = groupBits;\n      this.docValues = docValues;\n      if(docValues instanceof MultiDocValues.MultiSortedDocValues) {\n        this.multiSortedDocValues = (MultiDocValues.MultiSortedDocValues)docValues;\n        this.ordinalMap = multiSortedDocValues.mapping;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1aad05eeff7818b0833c02ac6b743aa72054963b":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87","404d1ab7f6f396235047017c88d545fec15dafb7"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["1aad05eeff7818b0833c02ac6b743aa72054963b","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"404d1ab7f6f396235047017c88d545fec15dafb7":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87"],"93c255ee5a354a24c9d163acebc0457234aed8db":["fe3c6364bed04a73ad0884b05401d80ce96027a9"],"04c370507e5521b2eb998530736f1c19b851ed5a":["81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["1aad05eeff7818b0833c02ac6b743aa72054963b"],"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93c255ee5a354a24c9d163acebc0457234aed8db"],"fe3c6364bed04a73ad0884b05401d80ce96027a9":["1d3f7ab1a502671bbdb03bcced21e764d2483221"],"1d3f7ab1a502671bbdb03bcced21e764d2483221":["04c370507e5521b2eb998530736f1c19b851ed5a"]},"commit2Childs":{"1aad05eeff7818b0833c02ac6b743aa72054963b":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"404d1ab7f6f396235047017c88d545fec15dafb7":["1aad05eeff7818b0833c02ac6b743aa72054963b"],"93c255ee5a354a24c9d163acebc0457234aed8db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"04c370507e5521b2eb998530736f1c19b851ed5a":["1d3f7ab1a502671bbdb03bcced21e764d2483221"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87"],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","04c370507e5521b2eb998530736f1c19b851ed5a"],"1fcee2c3acd9aa64a73a3b441b3f6cb492af0b87":["1aad05eeff7818b0833c02ac6b743aa72054963b","404d1ab7f6f396235047017c88d545fec15dafb7"],"fe3c6364bed04a73ad0884b05401d80ce96027a9":["93c255ee5a354a24c9d163acebc0457234aed8db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"1d3f7ab1a502671bbdb03bcced21e764d2483221":["fe3c6364bed04a73ad0884b05401d80ce96027a9"]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}