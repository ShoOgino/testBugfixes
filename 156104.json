{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#buildParams(List[Preference],List[Clause],Map[String,List[Clause]]).mjava","commits":[{"id":"1990cb8f4b4d0baefb0c50068ea6e458876b0fe5","date":1507143200,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#buildParams(List[Preference],List[Clause],Map[String,List[Clause]]).mjava","pathOld":"/dev/null","sourceNew":"  private List<String> buildParams(List<Preference> preferences, List<Clause> policy, Map<String, List<Clause>> policies) {\n    final SortedSet<String> paramsOfInterest = new TreeSet<>();\n    preferences.forEach(p -> {\n      if (paramsOfInterest.contains(p.name.name())) {\n        throw new RuntimeException(p.name + \" is repeated\");\n      }\n      paramsOfInterest.add(p.name.toString());\n    });\n    List<String> newParams = new ArrayList<>(paramsOfInterest);\n    policy.forEach(c -> {\n      c.addTags(newParams);\n    });\n    policies.values().forEach(clauses -> clauses.forEach(c -> c.addTags(newParams)));\n    return newParams;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7859b8e6a469429413db808a609e8468be14c03","date":1507222263,"type":0,"author":"tballison","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#buildParams(List[Preference],List[Clause],Map[String,List[Clause]]).mjava","pathOld":"/dev/null","sourceNew":"  private List<String> buildParams(List<Preference> preferences, List<Clause> policy, Map<String, List<Clause>> policies) {\n    final SortedSet<String> paramsOfInterest = new TreeSet<>();\n    preferences.forEach(p -> {\n      if (paramsOfInterest.contains(p.name.name())) {\n        throw new RuntimeException(p.name + \" is repeated\");\n      }\n      paramsOfInterest.add(p.name.toString());\n    });\n    List<String> newParams = new ArrayList<>(paramsOfInterest);\n    policy.forEach(c -> {\n      c.addTags(newParams);\n    });\n    policies.values().forEach(clauses -> clauses.forEach(c -> c.addTags(newParams)));\n    return newParams;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33ae23947c41339ea2b352422bb762dfb4a17077","date":1524235117,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#buildParams(List[Preference],List[Clause],Map[String,List[Clause]]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#buildParams(List[Preference],List[Clause],Map[String,List[Clause]]).mjava","sourceNew":"  private List<String> buildParams(List<Preference> preferences, List<Clause> policy, Map<String, List<Clause>> policies) {\n    final SortedSet<String> paramsOfInterest = new TreeSet<>();\n    preferences.forEach(p -> {\n      if (paramsOfInterest.contains(p.name.name())) {\n        throw new RuntimeException(p.name + \" is repeated\");\n      }\n      paramsOfInterest.add(p.name.toString());\n    });\n    List<String> newParams = new ArrayList<>(paramsOfInterest);\n    policy.forEach(c -> c.addTags(newParams));\n    policies.values().forEach(clauses -> clauses.forEach(c -> c.addTags(newParams)));\n    return newParams;\n  }\n\n","sourceOld":"  private List<String> buildParams(List<Preference> preferences, List<Clause> policy, Map<String, List<Clause>> policies) {\n    final SortedSet<String> paramsOfInterest = new TreeSet<>();\n    preferences.forEach(p -> {\n      if (paramsOfInterest.contains(p.name.name())) {\n        throw new RuntimeException(p.name + \" is repeated\");\n      }\n      paramsOfInterest.add(p.name.toString());\n    });\n    List<String> newParams = new ArrayList<>(paramsOfInterest);\n    policy.forEach(c -> {\n      c.addTags(newParams);\n    });\n    policies.values().forEach(clauses -> clauses.forEach(c -> c.addTags(newParams)));\n    return newParams;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy#buildParams(List[Preference],List[Clause],Map[String,List[Clause]]).mjava","sourceNew":null,"sourceOld":"  private List<String> buildParams(List<Preference> preferences, List<Clause> policy, Map<String, List<Clause>> policies) {\n    final SortedSet<String> paramsOfInterest = new TreeSet<>();\n    preferences.forEach(p -> {\n      if (paramsOfInterest.contains(p.name.name())) {\n        throw new RuntimeException(p.name + \" is repeated\");\n      }\n      paramsOfInterest.add(p.name.toString());\n    });\n    List<String> newParams = new ArrayList<>(paramsOfInterest);\n    policy.forEach(c -> c.addTags(newParams));\n    policies.values().forEach(clauses -> clauses.forEach(c -> c.addTags(newParams)));\n    return newParams;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1990cb8f4b4d0baefb0c50068ea6e458876b0fe5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3f504512a03d978990cbff30db0522b354e846db":["33ae23947c41339ea2b352422bb762dfb4a17077"],"d7859b8e6a469429413db808a609e8468be14c03":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1990cb8f4b4d0baefb0c50068ea6e458876b0fe5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"33ae23947c41339ea2b352422bb762dfb4a17077":["1990cb8f4b4d0baefb0c50068ea6e458876b0fe5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"1990cb8f4b4d0baefb0c50068ea6e458876b0fe5":["d7859b8e6a469429413db808a609e8468be14c03","33ae23947c41339ea2b352422bb762dfb4a17077"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d7859b8e6a469429413db808a609e8468be14c03":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1990cb8f4b4d0baefb0c50068ea6e458876b0fe5","d7859b8e6a469429413db808a609e8468be14c03"],"33ae23947c41339ea2b352422bb762dfb4a17077":["3f504512a03d978990cbff30db0522b354e846db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d7859b8e6a469429413db808a609e8468be14c03","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}