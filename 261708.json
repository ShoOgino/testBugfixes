{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#combinedCommitData(Map[String,String]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#combinedCommitData(Map[String,String]).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#combinedCommitData(Map[String,String]).mjava","sourceNew":"  /**\n   * Combine original user data with that of the taxonomy creation time\n   */\n  private Map<String,String> combinedCommitData(Map<String,String> userData) {\n    Map<String,String> m = new HashMap<String, String>();\n    if (userData != null) {\n      m.putAll(userData);\n    }\n    if (createTime != null) {\n      m.put(INDEX_CREATE_TIME, createTime);\n    }\n    return m;\n  }\n\n","sourceOld":"  /**\n   * Combine original user data with that of the taxonomy creation time\n   */\n  private Map<String,String> combinedCommitData(Map<String,String> userData) {\n    Map<String,String> m = new HashMap<String, String>();\n    if (userData != null) {\n      m.putAll(userData);\n    }\n    if (createTime != null) {\n      m.put(INDEX_CREATE_TIME, createTime);\n    }\n    return m;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78e3613d9274c0d98ca67d976e415c82e9f9cf46","date":1352285414,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#combinedCommitData(Map[String,String]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#combinedCommitData(Map[String,String]).mjava","sourceNew":"  /**\n   * Combine original user data with that of the taxonomy creation time\n   */\n  private Map<String,String> combinedCommitData(Map<String,String> userData) {\n    Map<String,String> m = new HashMap<String, String>();\n    if (userData != null) {\n      m.putAll(userData);\n    }\n    m.put(INDEX_EPOCH, Long.toString(indexEpoch));\n    return m;\n  }\n\n","sourceOld":"  /**\n   * Combine original user data with that of the taxonomy creation time\n   */\n  private Map<String,String> combinedCommitData(Map<String,String> userData) {\n    Map<String,String> m = new HashMap<String, String>();\n    if (userData != null) {\n      m.putAll(userData);\n    }\n    if (createTime != null) {\n      m.put(INDEX_CREATE_TIME, createTime);\n    }\n    return m;\n  }\n\n","bugFix":["e26e3b5080bfb6fcabdc46d0072efe441de1a21b"],"bugIntro":["d8a0be2353a06d1424e3eeafc4c72455204ce92d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b47e1512544568a22b82c96169d466fae8a4b79e","date":1354519309,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#combinedCommitData(Map[String,String]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#combinedCommitData(Map[String,String]).mjava","sourceNew":"  /** Combine original user data with the taxonomy epoch. */\n  private Map<String,String> combinedCommitData(Map<String,String> commitData) {\n    Map<String,String> m = new HashMap<String, String>();\n    if (commitData != null) {\n      m.putAll(commitData);\n    }\n    m.put(INDEX_EPOCH, Long.toString(indexEpoch));\n    return m;\n  }\n\n","sourceOld":"  /**\n   * Combine original user data with that of the taxonomy creation time\n   */\n  private Map<String,String> combinedCommitData(Map<String,String> userData) {\n    Map<String,String> m = new HashMap<String, String>();\n    if (userData != null) {\n      m.putAll(userData);\n    }\n    m.put(INDEX_EPOCH, Long.toString(indexEpoch));\n    return m;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#combinedCommitData(Map[String,String]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#combinedCommitData(Map[String,String]).mjava","sourceNew":"  /** Combine original user data with the taxonomy epoch. */\n  private Map<String,String> combinedCommitData(Map<String,String> commitData) {\n    Map<String,String> m = new HashMap<String, String>();\n    if (commitData != null) {\n      m.putAll(commitData);\n    }\n    m.put(INDEX_EPOCH, Long.toString(indexEpoch));\n    return m;\n  }\n\n","sourceOld":"  /**\n   * Combine original user data with that of the taxonomy creation time\n   */\n  private Map<String,String> combinedCommitData(Map<String,String> userData) {\n    Map<String,String> m = new HashMap<String, String>();\n    if (userData != null) {\n      m.putAll(userData);\n    }\n    m.put(INDEX_EPOCH, Long.toString(indexEpoch));\n    return m;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8a0be2353a06d1424e3eeafc4c72455204ce92d","date":1367553170,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#combinedCommitData(Map[String,String]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#combinedCommitData(Map[String,String]).mjava","sourceNew":"  /** Combine original user data with the taxonomy epoch. */\n  private Map<String,String> combinedCommitData(Map<String,String> commitData) {\n    Map<String,String> m = new HashMap<String, String>();\n    if (commitData != null) {\n      m.putAll(commitData);\n    }\n    m.put(INDEX_EPOCH, Long.toString(indexEpoch, 16));\n    return m;\n  }\n\n","sourceOld":"  /** Combine original user data with the taxonomy epoch. */\n  private Map<String,String> combinedCommitData(Map<String,String> commitData) {\n    Map<String,String> m = new HashMap<String, String>();\n    if (commitData != null) {\n      m.putAll(commitData);\n    }\n    m.put(INDEX_EPOCH, Long.toString(indexEpoch));\n    return m;\n  }\n\n","bugFix":["78e3613d9274c0d98ca67d976e415c82e9f9cf46"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#combinedCommitData(Map[String,String]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#combinedCommitData(Map[String,String]).mjava","sourceNew":"  /** Combine original user data with the taxonomy epoch. */\n  private Map<String,String> combinedCommitData(Map<String,String> commitData) {\n    Map<String,String> m = new HashMap<>();\n    if (commitData != null) {\n      m.putAll(commitData);\n    }\n    m.put(INDEX_EPOCH, Long.toString(indexEpoch, 16));\n    return m;\n  }\n\n","sourceOld":"  /** Combine original user data with the taxonomy epoch. */\n  private Map<String,String> combinedCommitData(Map<String,String> commitData) {\n    Map<String,String> m = new HashMap<String, String>();\n    if (commitData != null) {\n      m.putAll(commitData);\n    }\n    m.put(INDEX_EPOCH, Long.toString(indexEpoch, 16));\n    return m;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71e1a70f18d64b93db3ef618e606d6df5062f747","date":1466156390,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#combinedCommitData(Iterable[Map.Entry[String,String]]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#combinedCommitData(Map[String,String]).mjava","sourceNew":"  /** Combine original user data with the taxonomy epoch. */\n  private Iterable<Map.Entry<String,String>> combinedCommitData(Iterable<Map.Entry<String,String>> commitData) {\n    Map<String,String> m = new HashMap<>();\n    if (commitData != null) {\n      for(Map.Entry<String,String> ent : commitData) {\n        m.put(ent.getKey(), ent.getValue());\n      }\n    }\n    m.put(INDEX_EPOCH, Long.toString(indexEpoch, 16));\n    return m.entrySet();\n  }\n\n","sourceOld":"  /** Combine original user data with the taxonomy epoch. */\n  private Map<String,String> combinedCommitData(Map<String,String> commitData) {\n    Map<String,String> m = new HashMap<>();\n    if (commitData != null) {\n      m.putAll(commitData);\n    }\n    m.put(INDEX_EPOCH, Long.toString(indexEpoch, 16));\n    return m;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#combinedCommitData(Map[String,String]).mjava","sourceNew":null,"sourceOld":"  /** Combine original user data with the taxonomy epoch. */\n  private Map<String,String> combinedCommitData(Map<String,String> commitData) {\n    Map<String,String> m = new HashMap<>();\n    if (commitData != null) {\n      m.putAll(commitData);\n    }\n    m.put(INDEX_EPOCH, Long.toString(indexEpoch, 16));\n    return m;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d8a0be2353a06d1424e3eeafc4c72455204ce92d"],"d8a0be2353a06d1424e3eeafc4c72455204ce92d":["b47e1512544568a22b82c96169d466fae8a4b79e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"71e1a70f18d64b93db3ef618e606d6df5062f747":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"78e3613d9274c0d98ca67d976e415c82e9f9cf46":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["78e3613d9274c0d98ca67d976e415c82e9f9cf46","b47e1512544568a22b82c96169d466fae8a4b79e"],"b47e1512544568a22b82c96169d466fae8a4b79e":["78e3613d9274c0d98ca67d976e415c82e9f9cf46"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","71e1a70f18d64b93db3ef618e606d6df5062f747"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71e1a70f18d64b93db3ef618e606d6df5062f747"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["71e1a70f18d64b93db3ef618e606d6df5062f747","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"d8a0be2353a06d1424e3eeafc4c72455204ce92d":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["78e3613d9274c0d98ca67d976e415c82e9f9cf46"],"71e1a70f18d64b93db3ef618e606d6df5062f747":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"78e3613d9274c0d98ca67d976e415c82e9f9cf46":["407687e67faf6e1f02a211ca078d8e3eed631027","b47e1512544568a22b82c96169d466fae8a4b79e"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"b47e1512544568a22b82c96169d466fae8a4b79e":["d8a0be2353a06d1424e3eeafc4c72455204ce92d","407687e67faf6e1f02a211ca078d8e3eed631027"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}