{"path":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#rehash().mjava","commits":[{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#rehash().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocFieldProcessor#rehash().mjava","sourceNew":"  private void rehash() {\n    int newHashSize = (fieldHash.length*2);\n    assert newHashSize > fieldHash.length;\n\n    PerField newHashArray[] = new PerField[newHashSize];\n\n    // Rehash\n    int newHashMask = newHashSize-1;\n    for(int j=0;j<fieldHash.length;j++) {\n      PerField fp0 = fieldHash[j];\n      while(fp0 != null) {\n        final int hashPos2 = fp0.fieldInfo.name.hashCode() & newHashMask;\n        PerField nextFP0 = fp0.next;\n        fp0.next = newHashArray[hashPos2];\n        newHashArray[hashPos2] = fp0;\n        fp0 = nextFP0;\n      }\n    }\n\n    fieldHash = newHashArray;\n    hashMask = newHashMask;\n  }\n\n","sourceOld":"  private void rehash() {\n    final int newHashSize = (fieldHash.length*2);\n    assert newHashSize > fieldHash.length;\n\n    final DocFieldProcessorPerField newHashArray[] = new DocFieldProcessorPerField[newHashSize];\n\n    // Rehash\n    int newHashMask = newHashSize-1;\n    for(int j=0;j<fieldHash.length;j++) {\n      DocFieldProcessorPerField fp0 = fieldHash[j];\n      while(fp0 != null) {\n        final int hashPos2 = fp0.fieldInfo.name.hashCode() & newHashMask;\n        DocFieldProcessorPerField nextFP0 = fp0.next;\n        fp0.next = newHashArray[hashPos2];\n        newHashArray[hashPos2] = fp0;\n        fp0 = nextFP0;\n      }\n    }\n\n    fieldHash = newHashArray;\n    hashMask = newHashMask;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#rehash().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocFieldProcessor#rehash().mjava","sourceNew":"  private void rehash() {\n    int newHashSize = (fieldHash.length*2);\n    assert newHashSize > fieldHash.length;\n\n    PerField newHashArray[] = new PerField[newHashSize];\n\n    // Rehash\n    int newHashMask = newHashSize-1;\n    for(int j=0;j<fieldHash.length;j++) {\n      PerField fp0 = fieldHash[j];\n      while(fp0 != null) {\n        final int hashPos2 = fp0.fieldInfo.name.hashCode() & newHashMask;\n        PerField nextFP0 = fp0.next;\n        fp0.next = newHashArray[hashPos2];\n        newHashArray[hashPos2] = fp0;\n        fp0 = nextFP0;\n      }\n    }\n\n    fieldHash = newHashArray;\n    hashMask = newHashMask;\n  }\n\n","sourceOld":"  private void rehash() {\n    final int newHashSize = (fieldHash.length*2);\n    assert newHashSize > fieldHash.length;\n\n    final DocFieldProcessorPerField newHashArray[] = new DocFieldProcessorPerField[newHashSize];\n\n    // Rehash\n    int newHashMask = newHashSize-1;\n    for(int j=0;j<fieldHash.length;j++) {\n      DocFieldProcessorPerField fp0 = fieldHash[j];\n      while(fp0 != null) {\n        final int hashPos2 = fp0.fieldInfo.name.hashCode() & newHashMask;\n        DocFieldProcessorPerField nextFP0 = fp0.next;\n        fp0.next = newHashArray[hashPos2];\n        newHashArray[hashPos2] = fp0;\n        fp0 = nextFP0;\n      }\n    }\n\n    fieldHash = newHashArray;\n    hashMask = newHashMask;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":1,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#rehash().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocFieldProcessor#rehash().mjava","sourceNew":"  private void rehash() {\n    int newHashSize = (fieldHash.length*2);\n    assert newHashSize > fieldHash.length;\n\n    PerField newHashArray[] = new PerField[newHashSize];\n\n    // Rehash\n    int newHashMask = newHashSize-1;\n    for(int j=0;j<fieldHash.length;j++) {\n      PerField fp0 = fieldHash[j];\n      while(fp0 != null) {\n        final int hashPos2 = fp0.fieldInfo.name.hashCode() & newHashMask;\n        PerField nextFP0 = fp0.next;\n        fp0.next = newHashArray[hashPos2];\n        newHashArray[hashPos2] = fp0;\n        fp0 = nextFP0;\n      }\n    }\n\n    fieldHash = newHashArray;\n    hashMask = newHashMask;\n  }\n\n","sourceOld":"  private void rehash() {\n    final int newHashSize = (fieldHash.length*2);\n    assert newHashSize > fieldHash.length;\n\n    final DocFieldProcessorPerField newHashArray[] = new DocFieldProcessorPerField[newHashSize];\n\n    // Rehash\n    int newHashMask = newHashSize-1;\n    for(int j=0;j<fieldHash.length;j++) {\n      DocFieldProcessorPerField fp0 = fieldHash[j];\n      while(fp0 != null) {\n        final int hashPos2 = fp0.fieldInfo.name.hashCode() & newHashMask;\n        DocFieldProcessorPerField nextFP0 = fp0.next;\n        fp0.next = newHashArray[hashPos2];\n        newHashArray[hashPos2] = fp0;\n        fp0 = nextFP0;\n      }\n    }\n\n    fieldHash = newHashArray;\n    hashMask = newHashMask;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a6f8af01d9b3067b143bbdc0a492720e2af97cf","date":1600157724,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexingChain#rehash().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#rehash().mjava","sourceNew":"  private void rehash() {\n    int newHashSize = (fieldHash.length*2);\n    assert newHashSize > fieldHash.length;\n\n    PerField newHashArray[] = new PerField[newHashSize];\n\n    // Rehash\n    int newHashMask = newHashSize-1;\n    for(int j=0;j<fieldHash.length;j++) {\n      PerField fp0 = fieldHash[j];\n      while(fp0 != null) {\n        final int hashPos2 = fp0.fieldInfo.name.hashCode() & newHashMask;\n        PerField nextFP0 = fp0.next;\n        fp0.next = newHashArray[hashPos2];\n        newHashArray[hashPos2] = fp0;\n        fp0 = nextFP0;\n      }\n    }\n\n    fieldHash = newHashArray;\n    hashMask = newHashMask;\n  }\n\n","sourceOld":"  private void rehash() {\n    int newHashSize = (fieldHash.length*2);\n    assert newHashSize > fieldHash.length;\n\n    PerField newHashArray[] = new PerField[newHashSize];\n\n    // Rehash\n    int newHashMask = newHashSize-1;\n    for(int j=0;j<fieldHash.length;j++) {\n      PerField fp0 = fieldHash[j];\n      while(fp0 != null) {\n        final int hashPos2 = fp0.fieldInfo.name.hashCode() & newHashMask;\n        PerField nextFP0 = fp0.next;\n        fp0.next = newHashArray[hashPos2];\n        newHashArray[hashPos2] = fp0;\n        fp0 = nextFP0;\n      }\n    }\n\n    fieldHash = newHashArray;\n    hashMask = newHashMask;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"680b6449f09827f58fe987aff279e014c311d966","date":1600247985,"type":5,"author":"noblepaul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexingChain#rehash().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#rehash().mjava","sourceNew":"  private void rehash() {\n    int newHashSize = (fieldHash.length*2);\n    assert newHashSize > fieldHash.length;\n\n    PerField newHashArray[] = new PerField[newHashSize];\n\n    // Rehash\n    int newHashMask = newHashSize-1;\n    for(int j=0;j<fieldHash.length;j++) {\n      PerField fp0 = fieldHash[j];\n      while(fp0 != null) {\n        final int hashPos2 = fp0.fieldInfo.name.hashCode() & newHashMask;\n        PerField nextFP0 = fp0.next;\n        fp0.next = newHashArray[hashPos2];\n        newHashArray[hashPos2] = fp0;\n        fp0 = nextFP0;\n      }\n    }\n\n    fieldHash = newHashArray;\n    hashMask = newHashMask;\n  }\n\n","sourceOld":"  private void rehash() {\n    int newHashSize = (fieldHash.length*2);\n    assert newHashSize > fieldHash.length;\n\n    PerField newHashArray[] = new PerField[newHashSize];\n\n    // Rehash\n    int newHashMask = newHashSize-1;\n    for(int j=0;j<fieldHash.length;j++) {\n      PerField fp0 = fieldHash[j];\n      while(fp0 != null) {\n        final int hashPos2 = fp0.fieldInfo.name.hashCode() & newHashMask;\n        PerField nextFP0 = fp0.next;\n        fp0.next = newHashArray[hashPos2];\n        newHashArray[hashPos2] = fp0;\n        fp0 = nextFP0;\n      }\n    }\n\n    fieldHash = newHashArray;\n    hashMask = newHashMask;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","52c7e49be259508735752fba88085255014a6ecf"],"680b6449f09827f58fe987aff279e014c311d966":["3394716f52b34ab259ad5247e7595d9f9db6e935","7a6f8af01d9b3067b143bbdc0a492720e2af97cf"],"7a6f8af01d9b3067b143bbdc0a492720e2af97cf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3394716f52b34ab259ad5247e7595d9f9db6e935"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"52c7e49be259508735752fba88085255014a6ecf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["680b6449f09827f58fe987aff279e014c311d966"]},"commit2Childs":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["680b6449f09827f58fe987aff279e014c311d966","7a6f8af01d9b3067b143bbdc0a492720e2af97cf","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe"],"680b6449f09827f58fe987aff279e014c311d966":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7a6f8af01d9b3067b143bbdc0a492720e2af97cf":["680b6449f09827f58fe987aff279e014c311d966"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3394716f52b34ab259ad5247e7595d9f9db6e935","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","52c7e49be259508735752fba88085255014a6ecf"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}