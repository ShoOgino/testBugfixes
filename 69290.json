{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#finishGetReaderMerge(AtomicBoolean,Map[String,SegmentReader],Map[String,SegmentReader],SegmentInfos,boolean,boolean,MergePolicy.MergeSpecification,long).mjava","commits":[{"id":"3f354ba79a5a3e8491ec2953f14f365a02c058ac","date":1598293148,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#finishGetReaderMerge(AtomicBoolean,Map[String,SegmentReader],Map[String,SegmentReader],SegmentInfos,boolean,boolean,MergePolicy.MergeSpecification,long).mjava","pathOld":"/dev/null","sourceNew":"  private StandardDirectoryReader finishGetReaderMerge(AtomicBoolean stopCollectingMergedReaders, Map<String, SegmentReader> mergedReaders,\n                                                       Map<String, SegmentReader> openedReadOnlyClones, SegmentInfos openingSegmentInfos,\n                                                       boolean applyAllDeletes, boolean writeAllDeletes,\n                                                       MergePolicy.MergeSpecification pointInTimeMerges, long maxCommitMergeWaitMillis) throws IOException {\n    assert openingSegmentInfos != null;\n    mergeScheduler.merge(mergeSource, MergeTrigger.GET_READER);\n    pointInTimeMerges.await(maxCommitMergeWaitMillis, TimeUnit.MILLISECONDS);\n    synchronized (this) {\n      stopCollectingMergedReaders.set(true);\n      StandardDirectoryReader reader = maybeReopenMergedNRTReader(mergedReaders, openedReadOnlyClones, openingSegmentInfos,\n          applyAllDeletes, writeAllDeletes);\n      IOUtils.close(mergedReaders.values());\n      mergedReaders.clear();\n      return reader;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3f354ba79a5a3e8491ec2953f14f365a02c058ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f354ba79a5a3e8491ec2953f14f365a02c058ac"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3f354ba79a5a3e8491ec2953f14f365a02c058ac"],"3f354ba79a5a3e8491ec2953f14f365a02c058ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}