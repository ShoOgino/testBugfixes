{"path":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#queryAndCompare(SolrParams,SolrServer...).mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#queryAndCompare(SolrParams,SolrServer...).mjava","pathOld":"/dev/null","sourceNew":"  public QueryResponse queryAndCompare(SolrParams params, SolrServer... servers) throws SolrServerException {\n    QueryResponse first = null;\n    for (SolrServer server : servers) {\n      QueryResponse rsp = server.query(new ModifiableSolrParams(params));\n      if (first == null) {\n        first = rsp;\n      } else {\n        compareResponses(first, rsp);\n      }\n    }\n\n    return first;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#queryAndCompare(SolrParams,SolrServer...).mjava","pathOld":"/dev/null","sourceNew":"  public QueryResponse queryAndCompare(SolrParams params, SolrServer... servers) throws SolrServerException {\n    QueryResponse first = null;\n    for (SolrServer server : servers) {\n      QueryResponse rsp = server.query(new ModifiableSolrParams(params));\n      if (first == null) {\n        first = rsp;\n      } else {\n        compareResponses(first, rsp);\n      }\n    }\n\n    return first;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#queryAndCompare(SolrParams,SolrServer...).mjava","pathOld":"/dev/null","sourceNew":"  public QueryResponse queryAndCompare(SolrParams params, SolrServer... servers) throws SolrServerException {\n    QueryResponse first = null;\n    for (SolrServer server : servers) {\n      QueryResponse rsp = server.query(new ModifiableSolrParams(params));\n      if (first == null) {\n        first = rsp;\n      } else {\n        compareResponses(first, rsp);\n      }\n    }\n\n    return first;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9","date":1371479482,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#queryAndCompare(SolrParams,SolrServer...).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#queryAndCompare(SolrParams,SolrServer...).mjava","sourceNew":"  public QueryResponse queryAndCompare(SolrParams params, SolrServer... servers) throws SolrServerException {\n    return queryAndCompare(params, Arrays.<SolrServer>asList(servers));\n  }\n\n","sourceOld":"  public QueryResponse queryAndCompare(SolrParams params, SolrServer... servers) throws SolrServerException {\n    QueryResponse first = null;\n    for (SolrServer server : servers) {\n      QueryResponse rsp = server.query(new ModifiableSolrParams(params));\n      if (first == null) {\n        first = rsp;\n      } else {\n        compareResponses(first, rsp);\n      }\n    }\n\n    return first;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#queryAndCompare(SolrParams,SolrServer...).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#queryAndCompare(SolrParams,SolrServer...).mjava","sourceNew":"  public QueryResponse queryAndCompare(SolrParams params, SolrServer... servers) throws SolrServerException {\n    return queryAndCompare(params, Arrays.<SolrServer>asList(servers));\n  }\n\n","sourceOld":"  public QueryResponse queryAndCompare(SolrParams params, SolrServer... servers) throws SolrServerException {\n    QueryResponse first = null;\n    for (SolrServer server : servers) {\n      QueryResponse rsp = server.query(new ModifiableSolrParams(params));\n      if (first == null) {\n        first = rsp;\n      } else {\n        compareResponses(first, rsp);\n      }\n    }\n\n    return first;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#queryAndCompare(SolrParams,SolrServer...).mjava","sourceNew":null,"sourceOld":"  public QueryResponse queryAndCompare(SolrParams params, SolrServer... servers) throws SolrServerException {\n    return queryAndCompare(params, Arrays.<SolrServer>asList(servers));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f","2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bafca15d8e408346a67f4282ad1143b88023893b":["2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9":["37a0f60745e53927c4c876cfe5b5a58170f0646c","bafca15d8e408346a67f4282ad1143b88023893b"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["0d22ac6a4146774c1bc8400160fc0b6150294e92","2a4f729cab8ab6d4bf8365940c6ee4e17a0cfdd9","37a0f60745e53927c4c876cfe5b5a58170f0646c","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","37a0f60745e53927c4c876cfe5b5a58170f0646c","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}