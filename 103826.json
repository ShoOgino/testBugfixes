{"path":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","sourceNew":"  /**\n   * Transcode from Unicode to GB2312\n   * \n   * @param ch input character in Unicode, or character in Basic Latin range.\n   * @return position in GB2312\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // Should be a two-byte character\n        return -1;\n      }\n      int b0 = (int) (buffer[0] & 0x0FF) - 161; // 编码从A1开始，因此减去0xA1=161\n      int b1 = (int) (buffer[1] & 0x0FF) - 161; // 第一个字符和最后一个字符没有汉字，因此每个区只收16*6-2=94个汉字\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    }\n    return -1;\n  }\n\n","sourceOld":"  /**\n   * Transcode from Unicode to GB2312\n   * \n   * @param ch input character in Unicode, or character in Basic Latin range.\n   * @return position in GB2312\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // Should be a two-byte character\n        return -1;\n      }\n      int b0 = (int) (buffer[0] & 0x0FF) - 161; // 编码从A1开始，因此减去0xA1=161\n      int b1 = (int) (buffer[1] & 0x0FF) - 161; // 第一个字符和最后一个字符没有汉字，因此每个区只收16*6-2=94个汉字\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    }\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55fa7b85159e79f79dfdca119db7f0f4cb6a2a74","date":1254579885,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","pathOld":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","sourceNew":"  /**\n   * Transcode from Unicode to GB2312\n   * \n   * @param ch input character in Unicode, or character in Basic Latin range.\n   * @return position in GB2312\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // Should be a two-byte character\n        return -1;\n      }\n      int b0 = (int) (buffer[0] & 0x0FF) - 161; // Code starts from A1, therefore subtract 0xA1=161\n      int b1 = (int) (buffer[1] & 0x0FF) - 161; // There is no Chinese char for the first and last symbol. \n      \t\t\t\t\t\t\t\t\t\t\t// Therefore, each code page only has 16*6-2=94 characters.\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    }\n    return -1;\n  }\n\n","sourceOld":"  /**\n   * Transcode from Unicode to GB2312\n   * \n   * @param ch input character in Unicode, or character in Basic Latin range.\n   * @return position in GB2312\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // Should be a two-byte character\n        return -1;\n      }\n      int b0 = (int) (buffer[0] & 0x0FF) - 161; // 编码从A1开始，因此减去0xA1=161\n      int b1 = (int) (buffer[1] & 0x0FF) - 161; // 第一个字符和最后一个字符没有汉字，因此每个区只收16*6-2=94个汉字\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    }\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","pathOld":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","sourceNew":"  /**\n   * Transcode from Unicode to GB2312\n   * \n   * @param ch input character in Unicode, or character in Basic Latin range.\n   * @return position in GB2312\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // Should be a two-byte character\n        return -1;\n      }\n      int b0 = (int) (buffer[0] & 0x0FF) - 161; // Code starts from A1, therefore subtract 0xA1=161\n      int b1 = (int) (buffer[1] & 0x0FF) - 161; // There is no Chinese char for the first and last symbol. \n      \t\t\t\t\t\t\t\t\t\t\t// Therefore, each code page only has 16*6-2=94 characters.\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    }\n    return -1;\n  }\n\n","sourceOld":"  /**\n   * Transcode from Unicode to GB2312\n   * \n   * @param ch input character in Unicode, or character in Basic Latin range.\n   * @return position in GB2312\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // Should be a two-byte character\n        return -1;\n      }\n      int b0 = (int) (buffer[0] & 0x0FF) - 161; // Code starts from A1, therefore subtract 0xA1=161\n      int b1 = (int) (buffer[1] & 0x0FF) - 161; // There is no Chinese char for the first and last symbol. \n      \t\t\t\t\t\t\t\t\t\t\t// Therefore, each code page only has 16*6-2=94 characters.\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    }\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"55fa7b85159e79f79dfdca119db7f0f4cb6a2a74":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["55fa7b85159e79f79dfdca119db7f0f4cb6a2a74"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["55fa7b85159e79f79dfdca119db7f0f4cb6a2a74"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"55fa7b85159e79f79dfdca119db7f0f4cb6a2a74":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}