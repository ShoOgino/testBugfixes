{"path":"backwards/src/java/org/apache/lucene/index/IndexWriter#setMaxMergeDocs(int).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/index/IndexWriter#setMaxMergeDocs(int).mjava","pathOld":"/dev/null","sourceNew":"  /** <p>Determines the largest segment (measured by\n   * document count) that may be merged with other segments.\n   * Small values (e.g., less than 10,000) are best for\n   * interactive indexing, as this limits the length of\n   * pauses while indexing to a few seconds.  Larger values\n   * are best for batched indexing and speedier\n   * searches.</p>\n   *\n   * <p>The default value is {@link Integer#MAX_VALUE}.</p>\n   *\n   * <p>Note that this method is a convenience method: it\n   * just calls mergePolicy.setMaxMergeDocs as long as\n   * mergePolicy is an instance of {@link LogMergePolicy}.\n   * Otherwise an IllegalArgumentException is thrown.</p>\n   *\n   * <p>The default merge policy ({@link\n   * LogByteSizeMergePolicy}) also allows you to set this\n   * limit by net size (in MB) of the segment, using {@link\n   * LogByteSizeMergePolicy#setMaxMergeMB}.</p>\n   */\n  public void setMaxMergeDocs(int maxMergeDocs) {\n    getLogMergePolicy().setMaxMergeDocs(maxMergeDocs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/IndexWriter#setMaxMergeDocs(int).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/IndexWriter#setMaxMergeDocs(int).mjava","sourceNew":"  /** <p>Determines the largest segment (measured by\n   * document count) that may be merged with other segments.\n   * Small values (e.g., less than 10,000) are best for\n   * interactive indexing, as this limits the length of\n   * pauses while indexing to a few seconds.  Larger values\n   * are best for batched indexing and speedier\n   * searches.</p>\n   *\n   * <p>The default value is {@link Integer#MAX_VALUE}.</p>\n   *\n   * <p>Note that this method is a convenience method: it\n   * just calls mergePolicy.setMaxMergeDocs as long as\n   * mergePolicy is an instance of {@link LogMergePolicy}.\n   * Otherwise an IllegalArgumentException is thrown.</p>\n   *\n   * <p>The default merge policy ({@link\n   * LogByteSizeMergePolicy}) also allows you to set this\n   * limit by net size (in MB) of the segment, using {@link\n   * LogByteSizeMergePolicy#setMaxMergeMB}.</p>\n   */\n  public void setMaxMergeDocs(int maxMergeDocs) {\n    getLogMergePolicy().setMaxMergeDocs(maxMergeDocs);\n  }\n\n","sourceOld":"  /** <p>Determines the largest segment (measured by\n   * document count) that may be merged with other segments.\n   * Small values (e.g., less than 10,000) are best for\n   * interactive indexing, as this limits the length of\n   * pauses while indexing to a few seconds.  Larger values\n   * are best for batched indexing and speedier\n   * searches.</p>\n   *\n   * <p>The default value is {@link Integer#MAX_VALUE}.</p>\n   *\n   * <p>Note that this method is a convenience method: it\n   * just calls mergePolicy.setMaxMergeDocs as long as\n   * mergePolicy is an instance of {@link LogMergePolicy}.\n   * Otherwise an IllegalArgumentException is thrown.</p>\n   *\n   * <p>The default merge policy ({@link\n   * LogByteSizeMergePolicy}) also allows you to set this\n   * limit by net size (in MB) of the segment, using {@link\n   * LogByteSizeMergePolicy#setMaxMergeMB}.</p>\n   */\n  public void setMaxMergeDocs(int maxMergeDocs) {\n    getLogMergePolicy().setMaxMergeDocs(maxMergeDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}