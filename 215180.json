{"path":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#docs(Bits,DocsEnum).mjava","commits":[{"id":"cfd7f00f3dbc4c50d336540f063493fc0f7d830f","date":1322850565,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#docs(Bits,DocsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultTermVectorsReader.TVTermsEnum#docs(Bits,DocsEnum).mjava","sourceNew":"    @Override\n    public DocsEnum docs(Bits liveDocs, DocsEnum reuse) throws IOException {\n      TVDocsEnum docsEnum;\n      if (reuse != null && reuse instanceof TVDocsEnum) {\n        docsEnum = (TVDocsEnum) reuse;\n      } else {\n        docsEnum = new TVDocsEnum();\n      }\n      docsEnum.reset(liveDocs, freq);\n      return docsEnum;\n    }\n\n","sourceOld":"    @Override\n    public DocsEnum docs(Bits liveDocs, DocsEnum reuse) throws IOException {\n      TVDocsEnum docsEnum;\n      if (reuse != null && reuse instanceof TVDocsEnum) {\n        docsEnum = (TVDocsEnum) reuse;\n      } else {\n        docsEnum = new TVDocsEnum();\n      }\n      docsEnum.reset(liveDocs, freq);\n      return docsEnum;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"872cff1d3a554e0cd64014cd97f88d3002b0f491","date":1323024658,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#docs(Bits,DocsEnum,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#docs(Bits,DocsEnum).mjava","sourceNew":"    @Override\n    public DocsEnum docs(Bits liveDocs, DocsEnum reuse, boolean needsFreqs /* ignored */) throws IOException {\n      TVDocsEnum docsEnum;\n      if (reuse != null && reuse instanceof TVDocsEnum) {\n        docsEnum = (TVDocsEnum) reuse;\n      } else {\n        docsEnum = new TVDocsEnum();\n      }\n      docsEnum.reset(liveDocs, freq);\n      return docsEnum;\n    }\n\n","sourceOld":"    @Override\n    public DocsEnum docs(Bits liveDocs, DocsEnum reuse) throws IOException {\n      TVDocsEnum docsEnum;\n      if (reuse != null && reuse instanceof TVDocsEnum) {\n        docsEnum = (TVDocsEnum) reuse;\n      } else {\n        docsEnum = new TVDocsEnum();\n      }\n      docsEnum.reset(liveDocs, freq);\n      return docsEnum;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b65b350ca9588f9fc76ce7d6804160d06c45ff42","date":1323026297,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#docs(Bits,DocsEnum,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#docs(Bits,DocsEnum).mjava","sourceNew":"    @Override\n    public DocsEnum docs(Bits liveDocs, DocsEnum reuse, boolean needsFreqs /* ignored */) throws IOException {\n      TVDocsEnum docsEnum;\n      if (reuse != null && reuse instanceof TVDocsEnum) {\n        docsEnum = (TVDocsEnum) reuse;\n      } else {\n        docsEnum = new TVDocsEnum();\n      }\n      docsEnum.reset(liveDocs, freq);\n      return docsEnum;\n    }\n\n","sourceOld":"    @Override\n    public DocsEnum docs(Bits liveDocs, DocsEnum reuse) throws IOException {\n      TVDocsEnum docsEnum;\n      if (reuse != null && reuse instanceof TVDocsEnum) {\n        docsEnum = (TVDocsEnum) reuse;\n      } else {\n        docsEnum = new TVDocsEnum();\n      }\n      docsEnum.reset(liveDocs, freq);\n      return docsEnum;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cfd7f00f3dbc4c50d336540f063493fc0f7d830f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["872cff1d3a554e0cd64014cd97f88d3002b0f491"]},"commit2Childs":{"cfd7f00f3dbc4c50d336540f063493fc0f7d830f":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}