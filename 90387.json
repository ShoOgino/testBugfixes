{"path":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testBufferOverflow().mjava","commits":[{"id":"e3a908bacd530957eaa6d2dfebdd534afd9ac60e","date":1327209646,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testBufferOverflow().mjava","pathOld":"/dev/null","sourceNew":"  public void testBufferOverflow() throws Exception {\n    StringBuilder testBuilder = new StringBuilder(LegacyHTMLStripCharFilter.DEFAULT_READ_AHEAD + 50);\n    testBuilder.append(\"ah<?> ??????\");\n    appendChars(testBuilder, LegacyHTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    processBuffer(testBuilder.toString(), \"Failed on pseudo proc. instr.\");//processing instructions\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<!--\");//comments\n    appendChars(testBuilder, 3*LegacyHTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);//comments have two lookaheads\n\n    testBuilder.append(\"-->foo\");\n    processBuffer(testBuilder.toString(), \"Failed w/ comment\");\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<?\");\n    appendChars(testBuilder, LegacyHTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"?>\");\n    processBuffer(testBuilder.toString(), \"Failed with proc. instr.\");\n    \n    testBuilder.setLength(0);\n    testBuilder.append(\"<b \");\n    appendChars(testBuilder, LegacyHTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"/>\");\n    processBuffer(testBuilder.toString(), \"Failed on tag\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"579dc30b5d3235c34cda518b2b6018d71a61879c","date":1327235122,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testBufferOverflow().mjava","pathOld":"/dev/null","sourceNew":"  public void testBufferOverflow() throws Exception {\n    StringBuilder testBuilder = new StringBuilder(LegacyHTMLStripCharFilter.DEFAULT_READ_AHEAD + 50);\n    testBuilder.append(\"ah<?> ??????\");\n    appendChars(testBuilder, LegacyHTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    processBuffer(testBuilder.toString(), \"Failed on pseudo proc. instr.\");//processing instructions\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<!--\");//comments\n    appendChars(testBuilder, 3*LegacyHTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);//comments have two lookaheads\n\n    testBuilder.append(\"-->foo\");\n    processBuffer(testBuilder.toString(), \"Failed w/ comment\");\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<?\");\n    appendChars(testBuilder, LegacyHTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"?>\");\n    processBuffer(testBuilder.toString(), \"Failed with proc. instr.\");\n    \n    testBuilder.setLength(0);\n    testBuilder.append(\"<b \");\n    appendChars(testBuilder, LegacyHTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"/>\");\n    processBuffer(testBuilder.toString(), \"Failed on tag\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testBufferOverflow().mjava","pathOld":"/dev/null","sourceNew":"  public void testBufferOverflow() throws Exception {\n    StringBuilder testBuilder = new StringBuilder(LegacyHTMLStripCharFilter.DEFAULT_READ_AHEAD + 50);\n    testBuilder.append(\"ah<?> ??????\");\n    appendChars(testBuilder, LegacyHTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    processBuffer(testBuilder.toString(), \"Failed on pseudo proc. instr.\");//processing instructions\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<!--\");//comments\n    appendChars(testBuilder, 3*LegacyHTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);//comments have two lookaheads\n\n    testBuilder.append(\"-->foo\");\n    processBuffer(testBuilder.toString(), \"Failed w/ comment\");\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<?\");\n    appendChars(testBuilder, LegacyHTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"?>\");\n    processBuffer(testBuilder.toString(), \"Failed with proc. instr.\");\n    \n    testBuilder.setLength(0);\n    testBuilder.append(\"<b \");\n    appendChars(testBuilder, LegacyHTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"/>\");\n    processBuffer(testBuilder.toString(), \"Failed on tag\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fc9f4a33c8fefeb1260aea04273a36b0d32378e","date":1421852764,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest#testBufferOverflow().mjava","sourceNew":null,"sourceOld":"  public void testBufferOverflow() throws Exception {\n    StringBuilder testBuilder = new StringBuilder(LegacyHTMLStripCharFilter.DEFAULT_READ_AHEAD + 50);\n    testBuilder.append(\"ah<?> ??????\");\n    appendChars(testBuilder, LegacyHTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    processBuffer(testBuilder.toString(), \"Failed on pseudo proc. instr.\");//processing instructions\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<!--\");//comments\n    appendChars(testBuilder, 3*LegacyHTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);//comments have two lookaheads\n\n    testBuilder.append(\"-->foo\");\n    processBuffer(testBuilder.toString(), \"Failed w/ comment\");\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<?\");\n    appendChars(testBuilder, LegacyHTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"?>\");\n    processBuffer(testBuilder.toString(), \"Failed with proc. instr.\");\n    \n    testBuilder.setLength(0);\n    testBuilder.append(\"<b \");\n    appendChars(testBuilder, LegacyHTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"/>\");\n    processBuffer(testBuilder.toString(), \"Failed on tag\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["e3a908bacd530957eaa6d2dfebdd534afd9ac60e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e3a908bacd530957eaa6d2dfebdd534afd9ac60e"],"e3a908bacd530957eaa6d2dfebdd534afd9ac60e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"579dc30b5d3235c34cda518b2b6018d71a61879c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e3a908bacd530957eaa6d2dfebdd534afd9ac60e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e"]},"commit2Childs":{"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","e3a908bacd530957eaa6d2dfebdd534afd9ac60e","579dc30b5d3235c34cda518b2b6018d71a61879c"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"e3a908bacd530957eaa6d2dfebdd534afd9ac60e":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","579dc30b5d3235c34cda518b2b6018d71a61879c"],"579dc30b5d3235c34cda518b2b6018d71a61879c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","579dc30b5d3235c34cda518b2b6018d71a61879c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}