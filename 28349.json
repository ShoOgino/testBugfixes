{"path":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#toTokenList().mjava","commits":[{"id":"05ff0cc6e864c7d71a48579f2acfca4f58943568","date":1242295762,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#toTokenList().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * 将Map中存储的所有Token按照起始位置从小到大的方式组成一个列表\n   * \n   * @return\n   */\n  public List toTokenList() {\n    List result = new ArrayList();\n    int s = -1, count = 0, size = tokenListTable.size();\n    List tokenList;\n\n    while (count < size) {\n      if (isStartExist(s)) {\n        tokenList = (List) tokenListTable.get(new Integer(s));\n        for (Iterator iter = tokenList.iterator(); iter.hasNext();) {\n          SegToken st = (SegToken) iter.next();\n          result.add(st);\n        }\n        count++;\n      }\n      s++;\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be5ef2f970a6c1141562b06dd26ed04c3dc29d70","date":1246444343,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#toTokenList().mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#toTokenList().mjava","sourceNew":"  /**\n   * Return a {@link List} of all tokens in the map, ordered by startOffset.\n   * \n   * @return {@link List} of all tokens in the map.\n   */\n  public List toTokenList() {\n    List result = new ArrayList();\n    int s = -1, count = 0, size = tokenListTable.size();\n    List tokenList;\n\n    while (count < size) {\n      if (isStartExist(s)) {\n        tokenList = (List) tokenListTable.get(new Integer(s));\n        for (Iterator iter = tokenList.iterator(); iter.hasNext();) {\n          SegToken st = (SegToken) iter.next();\n          result.add(st);\n        }\n        count++;\n      }\n      s++;\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * 将Map中存储的所有Token按照起始位置从小到大的方式组成一个列表\n   * \n   * @return\n   */\n  public List toTokenList() {\n    List result = new ArrayList();\n    int s = -1, count = 0, size = tokenListTable.size();\n    List tokenList;\n\n    while (count < size) {\n      if (isStartExist(s)) {\n        tokenList = (List) tokenListTable.get(new Integer(s));\n        for (Iterator iter = tokenList.iterator(); iter.hasNext();) {\n          SegToken st = (SegToken) iter.next();\n          result.add(st);\n        }\n        count++;\n      }\n      s++;\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#toTokenList().mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/SegGraph#toTokenList().mjava","sourceNew":"  /**\n   * Return a {@link List} of all tokens in the map, ordered by startOffset.\n   * \n   * @return {@link List} of all tokens in the map.\n   */\n  public List toTokenList() {\n    List result = new ArrayList();\n    int s = -1, count = 0, size = tokenListTable.size();\n    List tokenList;\n\n    while (count < size) {\n      if (isStartExist(s)) {\n        tokenList = (List) tokenListTable.get(new Integer(s));\n        for (Iterator iter = tokenList.iterator(); iter.hasNext();) {\n          SegToken st = (SegToken) iter.next();\n          result.add(st);\n        }\n        count++;\n      }\n      s++;\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Return a {@link List} of all tokens in the map, ordered by startOffset.\n   * \n   * @return {@link List} of all tokens in the map.\n   */\n  public List toTokenList() {\n    List result = new ArrayList();\n    int s = -1, count = 0, size = tokenListTable.size();\n    List tokenList;\n\n    while (count < size) {\n      if (isStartExist(s)) {\n        tokenList = (List) tokenListTable.get(new Integer(s));\n        for (Iterator iter = tokenList.iterator(); iter.hasNext();) {\n          SegToken st = (SegToken) iter.next();\n          result.add(st);\n        }\n        count++;\n      }\n      s++;\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"be5ef2f970a6c1141562b06dd26ed04c3dc29d70":["05ff0cc6e864c7d71a48579f2acfca4f58943568"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["be5ef2f970a6c1141562b06dd26ed04c3dc29d70"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05ff0cc6e864c7d71a48579f2acfca4f58943568":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"be5ef2f970a6c1141562b06dd26ed04c3dc29d70":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05ff0cc6e864c7d71a48579f2acfca4f58943568"],"05ff0cc6e864c7d71a48579f2acfca4f58943568":["be5ef2f970a6c1141562b06dd26ed04c3dc29d70"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}