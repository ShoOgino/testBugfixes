{"path":"solr/core/src/java/org/apache/solr/servlet/ZookeeperInfoServlet.PagedCollectionSupport#getCollections(SolrZkClient).mjava","commits":[{"id":"d69bac0909e90a1213b0850137b00ac371f866e1","date":1419979130,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/ZookeeperInfoServlet.PagedCollectionSupport#getCollections(SolrZkClient).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Create a merged view of all collections (internal from /clusterstate.json and external from /collections/?/state.json \n     */\n    private synchronized List<String> getCollections(SolrZkClient zkClient) throws KeeperException, InterruptedException {\n      if (cachedCollections == null) {\n        // cache is stale, rebuild the full list ...\n        cachedCollections = new ArrayList<String>();\n        \n        List<String> fromZk = zkClient.getChildren(\"/collections\", this, true);\n        if (fromZk != null)\n          cachedCollections.addAll(fromZk);\n                \n        // sort the final merged set of collections\n        Collections.sort(cachedCollections, this);\n      }\n      \n      return cachedCollections;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80ebe5b1d946f7c2ed9c46206b0c7254dc21206a","date":1443442239,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ZookeeperInfoHandler.PagedCollectionSupport#getCollections(SolrZkClient).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/ZookeeperInfoServlet.PagedCollectionSupport#getCollections(SolrZkClient).mjava","sourceNew":"    /**\n     * Create a merged view of all collections (internal from /clusterstate.json and external from /collections/?/state.json\n     */\n    private synchronized List<String> getCollections(SolrZkClient zkClient) throws KeeperException, InterruptedException {\n      if (cachedCollections == null) {\n        // cache is stale, rebuild the full list ...\n        cachedCollections = new ArrayList<String>();\n\n        List<String> fromZk = zkClient.getChildren(\"/collections\", this, true);\n        if (fromZk != null)\n          cachedCollections.addAll(fromZk);\n\n        // sort the final merged set of collections\n        Collections.sort(cachedCollections, this);\n      }\n\n      return cachedCollections;\n    }\n\n","sourceOld":"    /**\n     * Create a merged view of all collections (internal from /clusterstate.json and external from /collections/?/state.json \n     */\n    private synchronized List<String> getCollections(SolrZkClient zkClient) throws KeeperException, InterruptedException {\n      if (cachedCollections == null) {\n        // cache is stale, rebuild the full list ...\n        cachedCollections = new ArrayList<String>();\n        \n        List<String> fromZk = zkClient.getChildren(\"/collections\", this, true);\n        if (fromZk != null)\n          cachedCollections.addAll(fromZk);\n                \n        // sort the final merged set of collections\n        Collections.sort(cachedCollections, this);\n      }\n      \n      return cachedCollections;\n    }\n\n","bugFix":null,"bugIntro":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"80ebe5b1d946f7c2ed9c46206b0c7254dc21206a":["d69bac0909e90a1213b0850137b00ac371f866e1"],"d69bac0909e90a1213b0850137b00ac371f866e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["80ebe5b1d946f7c2ed9c46206b0c7254dc21206a"]},"commit2Childs":{"80ebe5b1d946f7c2ed9c46206b0c7254dc21206a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d69bac0909e90a1213b0850137b00ac371f866e1":["80ebe5b1d946f7c2ed9c46206b0c7254dc21206a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d69bac0909e90a1213b0850137b00ac371f866e1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}