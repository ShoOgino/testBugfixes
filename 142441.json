{"path":"solr/core/src/java/org/apache/solr/schema/AbstractEnumField#toNativeType(Object).mjava","commits":[{"id":"cc6ea03c48e3dd8f3c9df5245b798c26a2e137f5","date":1554375088,"type":0,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractEnumField#toNativeType(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object toNativeType(Object val) {\n    if (val instanceof CharSequence || val instanceof String) {\n      final String str = val.toString();\n      return new EnumFieldValue(enumMapping.enumStringToIntMap.get(str), str);\n    } else if(val instanceof Number) {\n      final int num = ((Number)val).intValue();\n      return new EnumFieldValue(num, enumMapping.enumIntToStringMap.get(num));\n    }\n    return super.toNativeType(val);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3410226a028f816905a3fd92a2c82bf92d4a4efc","date":1561985634,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractEnumField#toNativeType(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractEnumField#toNativeType(Object).mjava","sourceNew":"  @Override\n  public Object toNativeType(Object val) {\n    if (val instanceof CharSequence || val instanceof String) {\n      final String str = val.toString();\n      final Integer entry = enumMapping.enumStringToIntMap.get(str);\n      if (entry != null) {\n        return new EnumFieldValue(entry, str);\n      } else if (NumberUtils.isCreatable(str)) {\n        final int num = Integer.parseInt(str);\n        return new EnumFieldValue(num, enumMapping.enumIntToStringMap.get(num));\n      }\n    } else if (val instanceof Number) {\n      final int num = ((Number) val).intValue();\n      return new EnumFieldValue(num, enumMapping.enumIntToStringMap.get(num));\n    }\n\n    return super.toNativeType(val);\n  }\n\n","sourceOld":"  @Override\n  public Object toNativeType(Object val) {\n    if (val instanceof CharSequence || val instanceof String) {\n      final String str = val.toString();\n      return new EnumFieldValue(enumMapping.enumStringToIntMap.get(str), str);\n    } else if(val instanceof Number) {\n      final int num = ((Number)val).intValue();\n      return new EnumFieldValue(num, enumMapping.enumIntToStringMap.get(num));\n    }\n    return super.toNativeType(val);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48e8ac7cfc90f7c0fda473a9f14ad608260e5099","date":1562301792,"type":3,"author":"S N Munendra","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/AbstractEnumField#toNativeType(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/AbstractEnumField#toNativeType(Object).mjava","sourceNew":"  @Override\n  public Object toNativeType(Object val) {\n    if (val instanceof CharSequence) {\n      final String str = val.toString();\n      final Integer entry = enumMapping.enumStringToIntMap.get(str);\n      if (entry != null) {\n        return new EnumFieldValue(entry, str);\n      } else if (NumberUtils.isCreatable(str)) {\n        final int num = Integer.parseInt(str);\n        return new EnumFieldValue(num, enumMapping.enumIntToStringMap.get(num));\n      }\n    } else if (val instanceof Number) {\n      final int num = ((Number) val).intValue();\n      return new EnumFieldValue(num, enumMapping.enumIntToStringMap.get(num));\n    }\n\n    return super.toNativeType(val);\n  }\n\n","sourceOld":"  @Override\n  public Object toNativeType(Object val) {\n    if (val instanceof CharSequence || val instanceof String) {\n      final String str = val.toString();\n      final Integer entry = enumMapping.enumStringToIntMap.get(str);\n      if (entry != null) {\n        return new EnumFieldValue(entry, str);\n      } else if (NumberUtils.isCreatable(str)) {\n        final int num = Integer.parseInt(str);\n        return new EnumFieldValue(num, enumMapping.enumIntToStringMap.get(num));\n      }\n    } else if (val instanceof Number) {\n      final int num = ((Number) val).intValue();\n      return new EnumFieldValue(num, enumMapping.enumIntToStringMap.get(num));\n    }\n\n    return super.toNativeType(val);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cc6ea03c48e3dd8f3c9df5245b798c26a2e137f5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"48e8ac7cfc90f7c0fda473a9f14ad608260e5099":["3410226a028f816905a3fd92a2c82bf92d4a4efc"],"3410226a028f816905a3fd92a2c82bf92d4a4efc":["cc6ea03c48e3dd8f3c9df5245b798c26a2e137f5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["48e8ac7cfc90f7c0fda473a9f14ad608260e5099"]},"commit2Childs":{"cc6ea03c48e3dd8f3c9df5245b798c26a2e137f5":["3410226a028f816905a3fd92a2c82bf92d4a4efc"],"48e8ac7cfc90f7c0fda473a9f14ad608260e5099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3410226a028f816905a3fd92a2c82bf92d4a4efc":["48e8ac7cfc90f7c0fda473a9f14ad608260e5099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cc6ea03c48e3dd8f3c9df5245b798c26a2e137f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}