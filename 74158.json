{"path":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin.OtherCoreJoinQuery#createWeight(IndexSearcher,boolean,float).mjava","commits":[{"id":"54dc69c8c21d9664fe311e6f3667a7cda0d8afb0","date":1492900223,"type":1,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin.OtherCoreJoinQuery#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin.OtherCoreJoinQuery#rewrite(IndexReader).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      SolrRequestInfo info = SolrRequestInfo.getRequestInfo();\n\n      CoreContainer container = info.getReq().getCore().getCoreContainer();\n\n      final SolrCore fromCore = container.getCore(fromIndex);\n\n      if (fromCore == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Cross-core join: no such core \" + fromIndex);\n      }\n      RefCounted<SolrIndexSearcher> fromHolder = null;\n      fromHolder = fromCore.getRegisteredSearcher();\n      final Query joinQuery;\n      try {\n        joinQuery = JoinUtil.createJoinQuery(fromField, true,\n            toField, fromQuery, fromHolder.get(), scoreMode);\n      } finally {\n        fromCore.close();\n        fromHolder.decref();\n      }\n      return joinQuery.rewrite(searcher.getIndexReader()).createWeight(searcher, needsScores, boost);\n    }\n\n","sourceOld":"    @Override\n    public Query rewrite(IndexReader reader) throws IOException {\n      SolrRequestInfo info = SolrRequestInfo.getRequestInfo();\n\n      CoreContainer container = info.getReq().getCore().getCoreContainer();\n\n      final SolrCore fromCore = container.getCore(fromIndex);\n\n      if (fromCore == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Cross-core join: no such core \" + fromIndex);\n      }\n      RefCounted<SolrIndexSearcher> fromHolder = null;\n      fromHolder = fromCore.getRegisteredSearcher();\n      final Query joinQuery;\n      try {\n        joinQuery = JoinUtil.createJoinQuery(fromField, true,\n            toField, fromQuery, fromHolder.get(), scoreMode);\n      } finally {\n        fromCore.close();\n        fromHolder.decref();\n      }\n      return joinQuery.rewrite(reader);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin.OtherCoreJoinQuery#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      SolrRequestInfo info = SolrRequestInfo.getRequestInfo();\n\n      CoreContainer container = info.getReq().getCore().getCoreContainer();\n\n      final SolrCore fromCore = container.getCore(fromIndex);\n\n      if (fromCore == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Cross-core join: no such core \" + fromIndex);\n      }\n      RefCounted<SolrIndexSearcher> fromHolder = null;\n      fromHolder = fromCore.getRegisteredSearcher();\n      final Query joinQuery;\n      try {\n        joinQuery = JoinUtil.createJoinQuery(fromField, true,\n            toField, fromQuery, fromHolder.get(), scoreMode);\n      } finally {\n        fromCore.close();\n        fromHolder.decref();\n      }\n      return joinQuery.rewrite(searcher.getIndexReader()).createWeight(searcher, needsScores, boost);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin.OtherCoreJoinQuery#createWeight(IndexSearcher,org.apache.lucene.search.ScoreMode,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin.OtherCoreJoinQuery#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, org.apache.lucene.search.ScoreMode scoreMode, float boost) throws IOException {\n      SolrRequestInfo info = SolrRequestInfo.getRequestInfo();\n\n      CoreContainer container = info.getReq().getCore().getCoreContainer();\n\n      final SolrCore fromCore = container.getCore(fromIndex);\n\n      if (fromCore == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Cross-core join: no such core \" + fromIndex);\n      }\n      RefCounted<SolrIndexSearcher> fromHolder = null;\n      fromHolder = fromCore.getRegisteredSearcher();\n      final Query joinQuery;\n      try {\n        joinQuery = JoinUtil.createJoinQuery(fromField, true,\n            toField, fromQuery, fromHolder.get(), this.scoreMode);\n      } finally {\n        fromCore.close();\n        fromHolder.decref();\n      }\n      return joinQuery.rewrite(searcher.getIndexReader()).createWeight(searcher, scoreMode, boost);\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      SolrRequestInfo info = SolrRequestInfo.getRequestInfo();\n\n      CoreContainer container = info.getReq().getCore().getCoreContainer();\n\n      final SolrCore fromCore = container.getCore(fromIndex);\n\n      if (fromCore == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Cross-core join: no such core \" + fromIndex);\n      }\n      RefCounted<SolrIndexSearcher> fromHolder = null;\n      fromHolder = fromCore.getRegisteredSearcher();\n      final Query joinQuery;\n      try {\n        joinQuery = JoinUtil.createJoinQuery(fromField, true,\n            toField, fromQuery, fromHolder.get(), scoreMode);\n      } finally {\n        fromCore.close();\n        fromHolder.decref();\n      }\n      return joinQuery.rewrite(searcher.getIndexReader()).createWeight(searcher, needsScores, boost);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin.OtherCoreJoinQuery#createWeight(IndexSearcher,org.apache.lucene.search.ScoreMode,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/ScoreJoinQParserPlugin.OtherCoreJoinQuery#createWeight(IndexSearcher,boolean,float).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher, org.apache.lucene.search.ScoreMode scoreMode, float boost) throws IOException {\n      SolrRequestInfo info = SolrRequestInfo.getRequestInfo();\n\n      CoreContainer container = info.getReq().getCore().getCoreContainer();\n\n      final SolrCore fromCore = container.getCore(fromIndex);\n\n      if (fromCore == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Cross-core join: no such core \" + fromIndex);\n      }\n      RefCounted<SolrIndexSearcher> fromHolder = null;\n      fromHolder = fromCore.getRegisteredSearcher();\n      final Query joinQuery;\n      try {\n        joinQuery = JoinUtil.createJoinQuery(fromField, true,\n            toField, fromQuery, fromHolder.get(), this.scoreMode);\n      } finally {\n        fromCore.close();\n        fromHolder.decref();\n      }\n      return joinQuery.rewrite(searcher.getIndexReader()).createWeight(searcher, scoreMode, boost);\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n      SolrRequestInfo info = SolrRequestInfo.getRequestInfo();\n\n      CoreContainer container = info.getReq().getCore().getCoreContainer();\n\n      final SolrCore fromCore = container.getCore(fromIndex);\n\n      if (fromCore == null) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Cross-core join: no such core \" + fromIndex);\n      }\n      RefCounted<SolrIndexSearcher> fromHolder = null;\n      fromHolder = fromCore.getRegisteredSearcher();\n      final Query joinQuery;\n      try {\n        joinQuery = JoinUtil.createJoinQuery(fromField, true,\n            toField, fromQuery, fromHolder.get(), scoreMode);\n      } finally {\n        fromCore.close();\n        fromHolder.decref();\n      }\n      return joinQuery.rewrite(searcher.getIndexReader()).createWeight(searcher, needsScores, boost);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","54dc69c8c21d9664fe311e6f3667a7cda0d8afb0"],"54dc69c8c21d9664fe311e6f3667a7cda0d8afb0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9fc47cb7b4346802411bb432f501ed0673d7119e":["54dc69c8c21d9664fe311e6f3667a7cda0d8afb0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["417142ff08fda9cf0b72d5133e63097a166c6458"],"417142ff08fda9cf0b72d5133e63097a166c6458":["54dc69c8c21d9664fe311e6f3667a7cda0d8afb0","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","54dc69c8c21d9664fe311e6f3667a7cda0d8afb0"],"54dc69c8c21d9664fe311e6f3667a7cda0d8afb0":["e9017cf144952056066919f1ebc7897ff9bd71b1","9fc47cb7b4346802411bb432f501ed0673d7119e","417142ff08fda9cf0b72d5133e63097a166c6458"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"417142ff08fda9cf0b72d5133e63097a166c6458":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}