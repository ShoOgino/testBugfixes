{"path":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomies#testmedium().mjava","commits":[{"id":"ea469eab8fd0f3032f4fcde1c644a721e8309d3b","date":1320301582,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomies#testmedium().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/lucene/TestAddTaxonomies#testmedium().mjava","sourceNew":"  // a reasonable random test\n  public void testmedium() throws Exception {\n    int numTests = atLeast(3);\n    for (int i = 0; i < numTests; i++) {\n      dotest(_TestUtil.nextInt(random, 1, 10), \n             _TestUtil.nextInt(random, 1, 100), \n             _TestUtil.nextInt(random, 100, 1000),\n             random.nextBoolean());\n    }\n  }\n\n","sourceOld":"  // a reasonable random test\n  public void testmedium() throws Exception {\n    int numTests = atLeast(3);\n    for (int i = 0; i < numTests; i++) {\n      dotest(_TestUtil.nextInt(random, 1, 10), \n             _TestUtil.nextInt(random, 1, 100), \n             _TestUtil.nextInt(random, 100, 1000),\n             random.nextBoolean());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomies#testmedium().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomies#testmedium().mjava","sourceNew":"  // a reasonable random test\n  public void testmedium() throws Exception {\n    int numTests = atLeast(3);\n    for (int i = 0; i < numTests; i++) {\n      dotest(_TestUtil.nextInt(random(), 1, 10), \n             _TestUtil.nextInt(random(), 1, 100), \n             _TestUtil.nextInt(random(), 100, 1000),\n             random().nextBoolean());\n    }\n  }\n\n","sourceOld":"  // a reasonable random test\n  public void testmedium() throws Exception {\n    int numTests = atLeast(3);\n    for (int i = 0; i < numTests; i++) {\n      dotest(_TestUtil.nextInt(random, 1, 10), \n             _TestUtil.nextInt(random, 1, 100), \n             _TestUtil.nextInt(random, 100, 1000),\n             random.nextBoolean());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomies#testmedium().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestAddTaxonomies#testmedium().mjava","sourceNew":"  // a reasonable random test\n  public void testmedium() throws Exception {\n    int numTests = atLeast(3);\n    for (int i = 0; i < numTests; i++) {\n      dotest(_TestUtil.nextInt(random(), 1, 10), \n             _TestUtil.nextInt(random(), 1, 100), \n             _TestUtil.nextInt(random(), 100, 1000),\n             random().nextBoolean());\n    }\n  }\n\n","sourceOld":"  // a reasonable random test\n  public void testmedium() throws Exception {\n    int numTests = atLeast(3);\n    for (int i = 0; i < numTests; i++) {\n      dotest(_TestUtil.nextInt(random(), 1, 10), \n             _TestUtil.nextInt(random(), 1, 100), \n             _TestUtil.nextInt(random(), 100, 1000),\n             random().nextBoolean());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}