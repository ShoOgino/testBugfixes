{"path":"src/test/org/apache/lucene/queryParser/TestQueryParser#addDateDoc(String,int,int,int,int,int,int,IndexWriter).mjava","commits":[{"id":"ce48e56956c287f0fdb295c2c2f5b7c68ae8798b","date":1138567903,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser#addDateDoc(String,int,int,int,int,int,int,IndexWriter).mjava","pathOld":"/dev/null","sourceNew":"  private static void addDateDoc(String content, int year, int month,\n      int day, int hour, int minute, int second, IndexWriter iw) throws IOException {\n    Document d = new Document();\n    d.add(new Field(\"f\", content, Field.Store.YES, Field.Index.TOKENIZED));\n    Calendar cal = Calendar.getInstance();\n    cal.set(year, month-1, day, hour, minute, second);\n    d.add(new Field(\"date\", DateField.dateToString(cal.getTime()), Field.Store.YES, Field.Index.UN_TOKENIZED));\n    iw.addDocument(d);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d6c356d9e7be4ba949f083ecd3fb65231bc64008"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser#addDateDoc(String,int,int,int,int,int,int,IndexWriter).mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#addDateDoc(String,int,int,int,int,int,int,IndexWriter).mjava","sourceNew":"  private static void addDateDoc(String content, int year, int month,\n      int day, int hour, int minute, int second, IndexWriter iw) throws IOException {\n    Document d = new Document();\n    d.add(new Field(\"f\", content, Field.Store.YES, Field.Index.ANALYZED));\n    Calendar cal = Calendar.getInstance();\n    cal.set(year, month-1, day, hour, minute, second);\n    d.add(new Field(\"date\", DateField.dateToString(cal.getTime()), Field.Store.YES, Field.Index.NOT_ANALYZED));\n    iw.addDocument(d);\n  }\n\n","sourceOld":"  private static void addDateDoc(String content, int year, int month,\n      int day, int hour, int minute, int second, IndexWriter iw) throws IOException {\n    Document d = new Document();\n    d.add(new Field(\"f\", content, Field.Store.YES, Field.Index.TOKENIZED));\n    Calendar cal = Calendar.getInstance();\n    cal.set(year, month-1, day, hour, minute, second);\n    d.add(new Field(\"date\", DateField.dateToString(cal.getTime()), Field.Store.YES, Field.Index.UN_TOKENIZED));\n    iw.addDocument(d);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d6c356d9e7be4ba949f083ecd3fb65231bc64008","date":1251182916,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser#addDateDoc(String,int,int,int,int,int,int,IndexWriter).mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#addDateDoc(String,int,int,int,int,int,int,IndexWriter).mjava","sourceNew":"  private static void addDateDoc(String content, int year, int month,\n      int day, int hour, int minute, int second, IndexWriter iw) throws IOException {\n    Document d = new Document();\n    d.add(new Field(\"f\", content, Field.Store.YES, Field.Index.ANALYZED));\n    Calendar cal = Calendar.getInstance(Locale.ENGLISH);\n    cal.set(year, month-1, day, hour, minute, second);\n    d.add(new Field(\"date\", DateField.dateToString(cal.getTime()), Field.Store.YES, Field.Index.NOT_ANALYZED));\n    iw.addDocument(d);\n  }\n\n","sourceOld":"  private static void addDateDoc(String content, int year, int month,\n      int day, int hour, int minute, int second, IndexWriter iw) throws IOException {\n    Document d = new Document();\n    d.add(new Field(\"f\", content, Field.Store.YES, Field.Index.ANALYZED));\n    Calendar cal = Calendar.getInstance();\n    cal.set(year, month-1, day, hour, minute, second);\n    d.add(new Field(\"date\", DateField.dateToString(cal.getTime()), Field.Store.YES, Field.Index.NOT_ANALYZED));\n    iw.addDocument(d);\n  }\n\n","bugFix":["ce48e56956c287f0fdb295c2c2f5b7c68ae8798b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#addDateDoc(String,int,int,int,int,int,int,IndexWriter).mjava","sourceNew":null,"sourceOld":"  private static void addDateDoc(String content, int year, int month,\n      int day, int hour, int minute, int second, IndexWriter iw) throws IOException {\n    Document d = new Document();\n    d.add(new Field(\"f\", content, Field.Store.YES, Field.Index.ANALYZED));\n    Calendar cal = Calendar.getInstance(Locale.ENGLISH);\n    cal.set(year, month-1, day, hour, minute, second);\n    d.add(new Field(\"date\", DateField.dateToString(cal.getTime()), Field.Store.YES, Field.Index.NOT_ANALYZED));\n    iw.addDocument(d);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#addDateDoc(String,int,int,int,int,int,int,IndexWriter).mjava","sourceNew":null,"sourceOld":"  private static void addDateDoc(String content, int year, int month,\n      int day, int hour, int minute, int second, IndexWriter iw) throws IOException {\n    Document d = new Document();\n    d.add(new Field(\"f\", content, Field.Store.YES, Field.Index.ANALYZED));\n    Calendar cal = Calendar.getInstance(Locale.ENGLISH);\n    cal.set(year, month-1, day, hour, minute, second);\n    d.add(new Field(\"date\", DateField.dateToString(cal.getTime()), Field.Store.YES, Field.Index.NOT_ANALYZED));\n    iw.addDocument(d);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"174ced3f382f37c6b4eab123325bfea03b47af5e","date":1254607278,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/queryParser/TestQueryParser#addDateDoc(String,int,int,int,int,int,int,IndexWriter).mjava","pathOld":"/dev/null","sourceNew":"  private static void addDateDoc(String content, int year, int month,\n      int day, int hour, int minute, int second, IndexWriter iw) throws IOException {\n    Document d = new Document();\n    d.add(new Field(\"f\", content, Field.Store.YES, Field.Index.ANALYZED));\n    Calendar cal = Calendar.getInstance(Locale.ENGLISH);\n    cal.set(year, month-1, day, hour, minute, second);\n    d.add(new Field(\"date\", DateField.dateToString(cal.getTime()), Field.Store.YES, Field.Index.NOT_ANALYZED));\n    iw.addDocument(d);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/queryParser/TestQueryParser#addDateDoc(String,int,int,int,int,int,int,IndexWriter).mjava","pathOld":"src/test/org/apache/lucene/queryParser/TestQueryParser#addDateDoc(String,int,int,int,int,int,int,IndexWriter).mjava","sourceNew":"  private static void addDateDoc(String content, int year, int month,\n      int day, int hour, int minute, int second, IndexWriter iw) throws IOException {\n    Document d = new Document();\n    d.add(new Field(\"f\", content, Field.Store.YES, Field.Index.ANALYZED));\n    Calendar cal = Calendar.getInstance(Locale.ENGLISH);\n    cal.set(year, month-1, day, hour, minute, second);\n    d.add(new Field(\"date\", DateField.dateToString(cal.getTime()), Field.Store.YES, Field.Index.NOT_ANALYZED));\n    iw.addDocument(d);\n  }\n\n","sourceOld":"  private static void addDateDoc(String content, int year, int month,\n      int day, int hour, int minute, int second, IndexWriter iw) throws IOException {\n    Document d = new Document();\n    d.add(new Field(\"f\", content, Field.Store.YES, Field.Index.ANALYZED));\n    Calendar cal = Calendar.getInstance(Locale.ENGLISH);\n    cal.set(year, month-1, day, hour, minute, second);\n    d.add(new Field(\"date\", DateField.dateToString(cal.getTime()), Field.Store.YES, Field.Index.NOT_ANALYZED));\n    iw.addDocument(d);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"174ced3f382f37c6b4eab123325bfea03b47af5e":["0a046c0c310bc77931fc8441bd920053b607dd14"],"ce48e56956c287f0fdb295c2c2f5b7c68ae8798b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["d6c356d9e7be4ba949f083ecd3fb65231bc64008"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a046c0c310bc77931fc8441bd920053b607dd14":["d6c356d9e7be4ba949f083ecd3fb65231bc64008","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"d6c356d9e7be4ba949f083ecd3fb65231bc64008":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["ce48e56956c287f0fdb295c2c2f5b7c68ae8798b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["174ced3f382f37c6b4eab123325bfea03b47af5e"]},"commit2Childs":{"174ced3f382f37c6b4eab123325bfea03b47af5e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ce48e56956c287f0fdb295c2c2f5b7c68ae8798b":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"0a046c0c310bc77931fc8441bd920053b607dd14":["174ced3f382f37c6b4eab123325bfea03b47af5e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ce48e56956c287f0fdb295c2c2f5b7c68ae8798b"],"d6c356d9e7be4ba949f083ecd3fb65231bc64008":["e8d1458a2543cbd30cbfe7929be4dcb5c5251659","0a046c0c310bc77931fc8441bd920053b607dd14"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["d6c356d9e7be4ba949f083ecd3fb65231bc64008"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}