{"path":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#buildAutomaton(String,int,boolean,int).mjava","commits":[{"id":"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7","date":1552575873,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#buildAutomaton(String,int,boolean,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Builds a binary Automaton to match a fuzzy term\n   * @param text            the term to match\n   * @param prefixLength    length of a required common prefix\n   * @param transpositions  {@code true} if transpositions should count as a single edit\n   * @param maxEdits        the maximum edit distance of matching terms\n   */\n  public static Automaton buildAutomaton(String text, int prefixLength, boolean transpositions, int maxEdits) {\n    int[] termText = stringToUTF32(text);\n    Automaton[] automata = buildAutomata(termText, prefixLength, transpositions, maxEdits);\n    return automata[automata.length - 1];\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e99d92de6748e3bbd2dd7b72695cdb952b2d835","date":1579100291,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/FuzzyTermsEnum#buildAutomaton(String,int,boolean,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Builds a binary Automaton to match a fuzzy term\n   * @param text            the term to match\n   * @param prefixLength    length of a required common prefix\n   * @param transpositions  {@code true} if transpositions should count as a single edit\n   * @param maxEdits        the maximum edit distance of matching terms\n   */\n  public static Automaton buildAutomaton(String text, int prefixLength, boolean transpositions, int maxEdits) {\n    int[] termText = stringToUTF32(text);\n    Automaton[] automata = buildAutomata(termText, prefixLength, transpositions, maxEdits);\n    return automata[automata.length - 1];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e99d92de6748e3bbd2dd7b72695cdb952b2d835":["5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e99d92de6748e3bbd2dd7b72695cdb952b2d835"],"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3e99d92de6748e3bbd2dd7b72695cdb952b2d835":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7"],"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7":["3e99d92de6748e3bbd2dd7b72695cdb952b2d835"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}