{"path":"src/test/org/apache/solr/BaseDistributedSearchTestCase#compare(SolrDocumentList,SolrDocumentList,int,Map[String,Integer]).mjava","commits":[{"id":"0b57d1523f42368168ea21982dd84effd69453d3","date":1260216800,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/test/org/apache/solr/BaseDistributedSearchTestCase#compare(SolrDocumentList,SolrDocumentList,int,Map[String,Integer]).mjava","pathOld":"src/test/org/apache/solr/TestDistributedSearch#compare(SolrDocumentList,SolrDocumentList,int,Map[String,Integer]).mjava","sourceNew":"  public static String compare(SolrDocumentList a, SolrDocumentList b, int flags, Map<String, Integer> handle) {\n    boolean ordered = (flags & UNORDERED) == 0;\n\n    String cmp;\n    int f = flags(handle, \"maxScore\");\n    if ((f & SKIPVAL) == 0) {\n      cmp = compare(a.getMaxScore(), b.getMaxScore(), 0, handle);\n      if (cmp != null) return \".maxScore\" + cmp;\n    } else {\n      if (b.getMaxScore() != null) {\n        if (a.getMaxScore() == null) {\n          return \".maxScore missing\";\n        }\n      }\n    }\n\n    cmp = compare(a.getNumFound(), b.getNumFound(), 0, handle);\n    if (cmp != null) return \".numFound\" + cmp;\n\n    cmp = compare(a.getStart(), b.getStart(), 0, handle);\n    if (cmp != null) return \".start\" + cmp;\n\n    cmp = compare(a.size(), b.size(), 0, handle);\n    if (cmp != null) return \".size()\" + cmp;\n\n    // only for completely ordered results (ties might be in a different order)\n    if (ordered) {\n      for (int i = 0; i < a.size(); i++) {\n        cmp = compare(a.get(i), b.get(i), 0, handle);\n        if (cmp != null) return \"[\" + i + \"]\" + cmp;\n      }\n      return null;\n    }\n\n    // unordered case\n    for (int i = 0; i < a.size(); i++) {\n      SolrDocument doc = a.get(i);\n      Object key = doc.getFirstValue(\"id\");\n      SolrDocument docb = null;\n      if (key == null) {\n        // no id field to correlate... must compare ordered\n        docb = b.get(i);\n      } else {\n        for (int j = 0; j < b.size(); j++) {\n          docb = b.get(j);\n          if (key.equals(docb.getFirstValue(\"id\"))) break;\n        }\n      }\n      // if (docb == null) return \"[id=\"+key+\"]\";\n      cmp = compare(doc, docb, 0, handle);\n      if (cmp != null) return \"[id=\" + key + \"]\" + cmp;\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String compare(SolrDocumentList a, SolrDocumentList b, int flags, Map<String,Integer> handle) {\n    boolean ordered = (flags & UNORDERED) == 0;\n\n    String cmp;\n    int f = flags(handle, \"maxScore\");\n    if ((f & SKIPVAL) == 0) {\n      cmp = compare(a.getMaxScore(), b.getMaxScore(), 0, handle);\n      if (cmp != null) return \".maxScore\" + cmp;\n    } else {\n      if (b.getMaxScore() != null) {\n        if (a.getMaxScore() == null) {\n          return \".maxScore missing\";\n        }\n      }\n    }\n\n    cmp = compare(a.getNumFound(), b.getNumFound(), 0, handle);\n    if (cmp != null) return \".numFound\" + cmp;\n\n    cmp = compare(a.getStart(), b.getStart(), 0, handle);\n    if (cmp != null) return \".start\" + cmp;\n\n    cmp = compare(a.size(), b.size(), 0, handle);\n    if (cmp != null) return \".size()\" + cmp;\n\n    // only for completely ordered results (ties might be in a different order)\n    if (ordered) {\n    for (int i=0; i<a.size(); i++) {\n      cmp = compare(a.get(i), b.get(i), 0, handle);\n      if (cmp != null) return \"[\"+i+\"]\"+cmp;\n      }\n      return null;\n    }\n\n    // unordered case\n    for (int i=0; i<a.size(); i++) {\n      SolrDocument doc = a.get(i);\n      Object key = doc.getFirstValue(\"id\");\n      SolrDocument docb=null;\n      if (key==null) {\n        // no id field to correlate... must compare ordered\n        docb = b.get(i);\n      } else {\n        for (int j=0; j<b.size(); j++) {\n          docb = b.get(j);\n          if (key.equals(docb.getFirstValue(\"id\"))) break;\n        }\n      }\n      // if (docb == null) return \"[id=\"+key+\"]\";\n      cmp = compare(doc, docb, 0, handle);\n      if (cmp != null) return \"[id=\"+key+\"]\" + cmp;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/BaseDistributedSearchTestCase#compare(SolrDocumentList,SolrDocumentList,int,Map[String,Integer]).mjava","pathOld":"src/test/org/apache/solr/BaseDistributedSearchTestCase#compare(SolrDocumentList,SolrDocumentList,int,Map[String,Integer]).mjava","sourceNew":"  public static String compare(SolrDocumentList a, SolrDocumentList b, int flags, Map<String, Integer> handle) {\n    boolean ordered = (flags & UNORDERED) == 0;\n\n    String cmp;\n    int f = flags(handle, \"maxScore\");\n    if ((f & SKIPVAL) == 0) {\n      cmp = compare(a.getMaxScore(), b.getMaxScore(), 0, handle);\n      if (cmp != null) return \".maxScore\" + cmp;\n    } else {\n      if (b.getMaxScore() != null) {\n        if (a.getMaxScore() == null) {\n          return \".maxScore missing\";\n        }\n      }\n    }\n\n    cmp = compare(a.getNumFound(), b.getNumFound(), 0, handle);\n    if (cmp != null) return \".numFound\" + cmp;\n\n    cmp = compare(a.getStart(), b.getStart(), 0, handle);\n    if (cmp != null) return \".start\" + cmp;\n\n    cmp = compare(a.size(), b.size(), 0, handle);\n    if (cmp != null) return \".size()\" + cmp;\n\n    // only for completely ordered results (ties might be in a different order)\n    if (ordered) {\n      for (int i = 0; i < a.size(); i++) {\n        cmp = compare(a.get(i), b.get(i), 0, handle);\n        if (cmp != null) return \"[\" + i + \"]\" + cmp;\n      }\n      return null;\n    }\n\n    // unordered case\n    for (int i = 0; i < a.size(); i++) {\n      SolrDocument doc = a.get(i);\n      Object key = doc.getFirstValue(\"id\");\n      SolrDocument docb = null;\n      if (key == null) {\n        // no id field to correlate... must compare ordered\n        docb = b.get(i);\n      } else {\n        for (int j = 0; j < b.size(); j++) {\n          docb = b.get(j);\n          if (key.equals(docb.getFirstValue(\"id\"))) break;\n        }\n      }\n      // if (docb == null) return \"[id=\"+key+\"]\";\n      cmp = compare(doc, docb, 0, handle);\n      if (cmp != null) return \"[id=\" + key + \"]\" + cmp;\n    }\n    return null;\n  }\n\n","sourceOld":"  public static String compare(SolrDocumentList a, SolrDocumentList b, int flags, Map<String, Integer> handle) {\n    boolean ordered = (flags & UNORDERED) == 0;\n\n    String cmp;\n    int f = flags(handle, \"maxScore\");\n    if ((f & SKIPVAL) == 0) {\n      cmp = compare(a.getMaxScore(), b.getMaxScore(), 0, handle);\n      if (cmp != null) return \".maxScore\" + cmp;\n    } else {\n      if (b.getMaxScore() != null) {\n        if (a.getMaxScore() == null) {\n          return \".maxScore missing\";\n        }\n      }\n    }\n\n    cmp = compare(a.getNumFound(), b.getNumFound(), 0, handle);\n    if (cmp != null) return \".numFound\" + cmp;\n\n    cmp = compare(a.getStart(), b.getStart(), 0, handle);\n    if (cmp != null) return \".start\" + cmp;\n\n    cmp = compare(a.size(), b.size(), 0, handle);\n    if (cmp != null) return \".size()\" + cmp;\n\n    // only for completely ordered results (ties might be in a different order)\n    if (ordered) {\n      for (int i = 0; i < a.size(); i++) {\n        cmp = compare(a.get(i), b.get(i), 0, handle);\n        if (cmp != null) return \"[\" + i + \"]\" + cmp;\n      }\n      return null;\n    }\n\n    // unordered case\n    for (int i = 0; i < a.size(); i++) {\n      SolrDocument doc = a.get(i);\n      Object key = doc.getFirstValue(\"id\");\n      SolrDocument docb = null;\n      if (key == null) {\n        // no id field to correlate... must compare ordered\n        docb = b.get(i);\n      } else {\n        for (int j = 0; j < b.size(); j++) {\n          docb = b.get(j);\n          if (key.equals(docb.getFirstValue(\"id\"))) break;\n        }\n      }\n      // if (docb == null) return \"[id=\"+key+\"]\";\n      cmp = compare(doc, docb, 0, handle);\n      if (cmp != null) return \"[id=\" + key + \"]\" + cmp;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"0b57d1523f42368168ea21982dd84effd69453d3":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["0b57d1523f42368168ea21982dd84effd69453d3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0b57d1523f42368168ea21982dd84effd69453d3"],"0b57d1523f42368168ea21982dd84effd69453d3":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}