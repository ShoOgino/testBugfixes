{"path":"src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String).mjava","commits":[{"id":"99ee715b9c02dd47d9e69a18607a5192c1ebd82b","date":1085007927,"type":0,"author":"Tim Jones","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String).mjava","pathOld":"/dev/null","sourceNew":"  // inherit javadocs\n  public float[] getFloats (IndexReader reader, String field)\n  throws IOException {\n    field = field.intern();\n    Object ret = lookup (reader, field, SortField.FLOAT);\n    if (ret == null) {\n      final float[] retArray = new float[reader.maxDoc()];\n      if (retArray.length > 0) {\n        TermDocs termDocs = reader.termDocs();\n        TermEnum termEnum = reader.terms (new Term (field, \"\"));\n        try {\n          if (termEnum.term() == null) {\n            throw new RuntimeException (\"no terms in field \" + field);\n          }\n          do {\n            Term term = termEnum.term();\n            if (term.field() != field) break;\n            float termval = Float.parseFloat (term.text());\n            termDocs.seek (termEnum);\n            while (termDocs.next()) {\n              retArray[termDocs.doc()] = termval;\n            }\n          } while (termEnum.next());\n        } finally {\n          termDocs.close();\n          termEnum.close();\n        }\n      }\n      store (reader, field, SortField.FLOAT, retArray);\n      return retArray;\n    }\n    return (float[]) ret;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8577ca8c36e33220ee0ffdfbdd96f8b9c43f8aa","date":1117730920,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String).mjava","pathOld":"src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String).mjava","sourceNew":"  // inherit javadocs\n  public float[] getFloats (IndexReader reader, String field)\n    throws IOException {\n    return getFloats(reader, field, FLOAT_PARSER);\n  }\n\n","sourceOld":"  // inherit javadocs\n  public float[] getFloats (IndexReader reader, String field)\n  throws IOException {\n    field = field.intern();\n    Object ret = lookup (reader, field, SortField.FLOAT);\n    if (ret == null) {\n      final float[] retArray = new float[reader.maxDoc()];\n      if (retArray.length > 0) {\n        TermDocs termDocs = reader.termDocs();\n        TermEnum termEnum = reader.terms (new Term (field, \"\"));\n        try {\n          if (termEnum.term() == null) {\n            throw new RuntimeException (\"no terms in field \" + field);\n          }\n          do {\n            Term term = termEnum.term();\n            if (term.field() != field) break;\n            float termval = Float.parseFloat (term.text());\n            termDocs.seek (termEnum);\n            while (termDocs.next()) {\n              retArray[termDocs.doc()] = termval;\n            }\n          } while (termEnum.next());\n        } finally {\n          termDocs.close();\n          termEnum.close();\n        }\n      }\n      store (reader, field, SortField.FLOAT, retArray);\n      return retArray;\n    }\n    return (float[]) ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65eb076d345a794256daba691a2b366657c807e8","date":1245771732,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String).mjava","pathOld":"src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String).mjava","sourceNew":"  // inherit javadocs\n  public float[] getFloats (IndexReader reader, String field)\n    throws IOException {\n    return getFloats(reader, field, null);\n  }\n\n","sourceOld":"  // inherit javadocs\n  public float[] getFloats (IndexReader reader, String field)\n    throws IOException {\n    return getFloats(reader, field, FLOAT_PARSER);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String).mjava","pathOld":"src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String).mjava","sourceNew":"  // inherit javadocs\n  public float[] getFloats (IndexReader reader, String field)\n    throws IOException {\n    return getFloats(reader, field, null);\n  }\n\n","sourceOld":"  // inherit javadocs\n  public float[] getFloats (IndexReader reader, String field)\n    throws IOException {\n    return getFloats(reader, field, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"65eb076d345a794256daba691a2b366657c807e8":["e8577ca8c36e33220ee0ffdfbdd96f8b9c43f8aa"],"99ee715b9c02dd47d9e69a18607a5192c1ebd82b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e8577ca8c36e33220ee0ffdfbdd96f8b9c43f8aa":["99ee715b9c02dd47d9e69a18607a5192c1ebd82b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["65eb076d345a794256daba691a2b366657c807e8"]},"commit2Childs":{"65eb076d345a794256daba691a2b366657c807e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"99ee715b9c02dd47d9e69a18607a5192c1ebd82b":["e8577ca8c36e33220ee0ffdfbdd96f8b9c43f8aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["99ee715b9c02dd47d9e69a18607a5192c1ebd82b"],"e8577ca8c36e33220ee0ffdfbdd96f8b9c43f8aa":["65eb076d345a794256daba691a2b366657c807e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}