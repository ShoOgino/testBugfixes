{"path":"lucene/src/test/org/apache/lucene/store/TestNRTCachingDirectory#testCompoundFileAppendTwice().mjava","commits":[{"id":"df16fc2e9b615e0138edac46655ae628f5d098ad","date":1320876869,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/TestNRTCachingDirectory#testCompoundFileAppendTwice().mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/store/TestNRTCachingDirectory#testCompoundFileAppendTwice().mjava","sourceNew":"  // LUCENE-3382 test that delegate compound files correctly.\n  public void testCompoundFileAppendTwice() throws IOException {\n    Directory newDir = new NRTCachingDirectory(newDirectory(), 2.0, 25.0);\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), true);\n    createSequenceFile(newDir, \"d1\", (byte) 0, 15);\n    IndexOutput out = csw.createOutput(\"d.xyz\", newIOContext(random));\n    out.writeInt(0);\n    try {\n      newDir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n      fail(\"file does already exist\");\n    } catch (IOException e) {\n      //\n    }\n    out.close();\n    assertEquals(1, csw.listAll().length);\n    assertEquals(\"d.xyz\", csw.listAll()[0]);\n   \n    csw.close();\n\n    CompoundFileDirectory cfr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), false);\n    assertEquals(1, cfr.listAll().length);\n    assertEquals(\"d.xyz\", cfr.listAll()[0]);\n    cfr.close();\n    newDir.close();\n  }\n\n","sourceOld":"  // LUCENE-3382 test that delegate compound files correctly.\n  public void testCompoundFileAppendTwice() throws IOException {\n    Directory newDir = new NRTCachingDirectory(newDirectory(), 2.0, 25.0);\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), true);\n    createSequenceFile(newDir, \"d1\", (byte) 0, 15);\n    IndexOutput out = csw.createOutput(\"d.xyz\", newIOContext(random));\n    out.writeInt(0);\n    try {\n      newDir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n      fail(\"file does already exist\");\n    } catch (IOException e) {\n      //\n    }\n    out.close();\n    assertEquals(1, csw.listAll().length);\n    assertEquals(\"d.xyz\", csw.listAll()[0]);\n   \n    csw.close();\n\n    CompoundFileDirectory cfr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), false);\n    assertEquals(1, cfr.listAll().length);\n    assertEquals(\"d.xyz\", cfr.listAll()[0]);\n    cfr.close();\n    newDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestNRTCachingDirectory#testCompoundFileAppendTwice().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestNRTCachingDirectory#testCompoundFileAppendTwice().mjava","sourceNew":"  // LUCENE-3382 test that delegate compound files correctly.\n  public void testCompoundFileAppendTwice() throws IOException {\n    Directory newDir = new NRTCachingDirectory(newDirectory(), 2.0, 25.0);\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), true);\n    createSequenceFile(newDir, \"d1\", (byte) 0, 15);\n    IndexOutput out = csw.createOutput(\"d.xyz\", newIOContext(random));\n    out.writeInt(0);\n    try {\n      newDir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n      fail(\"file does already exist\");\n    } catch (IOException e) {\n      //\n    }\n    out.close();\n    assertEquals(1, csw.listAll().length);\n    assertEquals(\"d.xyz\", csw.listAll()[0]);\n   \n    csw.close();\n\n    CompoundFileDirectory cfr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), false);\n    assertEquals(1, cfr.listAll().length);\n    assertEquals(\"d.xyz\", cfr.listAll()[0]);\n    cfr.close();\n    newDir.close();\n  }\n\n","sourceOld":"  // LUCENE-3382 test that delegate compound files correctly.\n  public void testCompoundFileAppendTwice() throws IOException {\n    Directory newDir = new NRTCachingDirectory(newDirectory(), 2.0, 25.0);\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), true);\n    createSequenceFile(newDir, \"d1\", (byte) 0, 15);\n    IndexOutput out = csw.createOutput(\"d.xyz\", newIOContext(random));\n    out.writeInt(0);\n    try {\n      newDir.copy(csw, \"d1\", \"d1\", newIOContext(random));\n      fail(\"file does already exist\");\n    } catch (IOException e) {\n      //\n    }\n    out.close();\n    assertEquals(1, csw.listAll().length);\n    assertEquals(\"d.xyz\", csw.listAll()[0]);\n   \n    csw.close();\n\n    CompoundFileDirectory cfr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), false);\n    assertEquals(1, cfr.listAll().length);\n    assertEquals(\"d.xyz\", cfr.listAll()[0]);\n    cfr.close();\n    newDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df16fc2e9b615e0138edac46655ae628f5d098ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["df16fc2e9b615e0138edac46655ae628f5d098ad"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"df16fc2e9b615e0138edac46655ae628f5d098ad":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["df16fc2e9b615e0138edac46655ae628f5d098ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}