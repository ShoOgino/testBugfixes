{"path":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","commits":[{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","sourceNew":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<>();\n    \n    List<MBeanServer> servers = new LinkedList<>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n\n        try {\n          Map<String, String> props = mbean.getKeyPropertyList();\n          String category = props.get(\"category\");\n          String name = props.get(\"name\");\n          if ((category != null && category.toString().equals(Category.CORE.toString())) &&\n              (name != null && name.equals(\"indexDir\"))) {\n            String indexDir = server.getAttribute(mbean, \"Value\").toString();\n            String key = props.get(\"dom2\") + \".\" + props.get(\"dom3\") + \".\" + props.get(\"dom4\");\n            if (!indexDirToShardNamesMap.containsKey(indexDir)) {\n              indexDirToShardNamesMap.put(indexDir.toString(), new HashSet<>());\n            }\n            indexDirToShardNamesMap.get(indexDir.toString()).add(key);\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"Value\" attribute\n          // not found\n        }\n      }\n    }\n    \n    assertTrue(\n        \"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \"\n            + SolrCore.class.getSimpleName() + \" : \" + indexDirToShardNamesMap,\n        indexDirToShardNamesMap.size() > 0);\n    for (Entry<String,Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \"\n            + entry.getValue().toString() + \" all use indexDir \"\n            + entry.getKey());\n      }\n    }\n\n  }\n\n","sourceOld":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<>();\n    \n    List<MBeanServer> servers = new LinkedList<>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n\n        try {\n          Map<String, String> props = mbean.getKeyPropertyList();\n          String category = props.get(\"category\");\n          String name = props.get(\"name\");\n          if ((category != null && category.toString().equals(Category.CORE.toString())) &&\n              (name != null && name.equals(\"indexDir\"))) {\n            String indexDir = server.getAttribute(mbean, \"Value\").toString();\n            String key = props.get(\"dom2\") + \".\" + props.get(\"dom3\") + \".\" + props.get(\"dom4\");\n            if (!indexDirToShardNamesMap.containsKey(indexDir)) {\n              indexDirToShardNamesMap.put(indexDir.toString(), new HashSet<>());\n            }\n            indexDirToShardNamesMap.get(indexDir.toString()).add(key);\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"Value\" attribute\n          // not found\n        }\n      }\n    }\n    \n    assertTrue(\n        \"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \"\n            + SolrCore.class.getSimpleName() + \" : \" + indexDirToShardNamesMap,\n        indexDirToShardNamesMap.size() > 0);\n    for (Entry<String,Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \"\n            + entry.getValue().toString() + \" all use indexDir \"\n            + entry.getKey());\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","sourceNew":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<>();\n    \n    List<MBeanServer> servers = new LinkedList<>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n\n        try {\n          Map<String, String> props = mbean.getKeyPropertyList();\n          String category = props.get(\"category\");\n          String name = props.get(\"name\");\n          if ((category != null && category.toString().equals(Category.CORE.toString())) &&\n              (name != null && name.equals(\"indexDir\"))) {\n            String indexDir = server.getAttribute(mbean, \"Value\").toString();\n            String key = props.get(\"dom2\") + \".\" + props.get(\"dom3\") + \".\" + props.get(\"dom4\");\n            if (!indexDirToShardNamesMap.containsKey(indexDir)) {\n              indexDirToShardNamesMap.put(indexDir.toString(), new HashSet<>());\n            }\n            indexDirToShardNamesMap.get(indexDir.toString()).add(key);\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"Value\" attribute\n          // not found\n        }\n      }\n    }\n    \n    assertTrue(\n        \"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \"\n            + SolrCore.class.getSimpleName() + \" : \" + indexDirToShardNamesMap,\n        indexDirToShardNamesMap.size() > 0);\n    for (Entry<String,Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \"\n            + entry.getValue().toString() + \" all use indexDir \"\n            + entry.getKey());\n      }\n    }\n\n  }\n\n","sourceOld":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<>();\n    \n    List<MBeanServer> servers = new LinkedList<>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n\n        try {\n          Map<String, String> props = mbean.getKeyPropertyList();\n          String category = props.get(\"category\");\n          String name = props.get(\"name\");\n          if ((category != null && category.toString().equals(Category.CORE.toString())) &&\n              (name != null && name.equals(\"indexDir\"))) {\n            String indexDir = server.getAttribute(mbean, \"Value\").toString();\n            String key = props.get(\"dom2\") + \".\" + props.get(\"dom3\") + \".\" + props.get(\"dom4\");\n            if (!indexDirToShardNamesMap.containsKey(indexDir)) {\n              indexDirToShardNamesMap.put(indexDir.toString(), new HashSet<>());\n            }\n            indexDirToShardNamesMap.get(indexDir.toString()).add(key);\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"Value\" attribute\n          // not found\n        }\n      }\n    }\n    \n    assertTrue(\n        \"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \"\n            + SolrCore.class.getSimpleName() + \" : \" + indexDirToShardNamesMap,\n        indexDirToShardNamesMap.size() > 0);\n    for (Entry<String,Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \"\n            + entry.getValue().toString() + \" all use indexDir \"\n            + entry.getKey());\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"273ff2f5b0b365591fcbe91ea23b5e97027ca60d","date":1551111277,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","sourceNew":"  private void checkNoTwoShardsUseTheSameIndexDir() {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<>();\n    \n    List<MBeanServer> servers = new LinkedList<>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<>(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n        try {\n          Map<String, String> props = mbean.getKeyPropertyList();\n          String category = props.get(\"category\");\n          String name = props.get(\"name\");\n          if ((category != null && category.equals(Category.CORE.toString())) &&\n              (name != null && name.equals(\"indexDir\"))) {\n            String indexDir = server.getAttribute(mbean, \"Value\").toString();\n            String key = props.get(\"dom2\") + \".\" + props.get(\"dom3\") + \".\" + props.get(\"dom4\");\n            if (!indexDirToShardNamesMap.containsKey(indexDir)) {\n              indexDirToShardNamesMap.put(indexDir, new HashSet<>());\n            }\n            indexDirToShardNamesMap.get(indexDir).add(key);\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"Value\" attribute\n          // not found\n        }\n      }\n    }\n    \n    assertTrue(\n        \"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \"\n            + SolrCore.class.getSimpleName() + \" : \" + indexDirToShardNamesMap,\n        indexDirToShardNamesMap.size() > 0);\n    for (Entry<String,Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \"\n            + entry.getValue().toString() + \" all use indexDir \"\n            + entry.getKey());\n      }\n    }\n  }\n\n","sourceOld":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<>();\n    \n    List<MBeanServer> servers = new LinkedList<>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n\n        try {\n          Map<String, String> props = mbean.getKeyPropertyList();\n          String category = props.get(\"category\");\n          String name = props.get(\"name\");\n          if ((category != null && category.toString().equals(Category.CORE.toString())) &&\n              (name != null && name.equals(\"indexDir\"))) {\n            String indexDir = server.getAttribute(mbean, \"Value\").toString();\n            String key = props.get(\"dom2\") + \".\" + props.get(\"dom3\") + \".\" + props.get(\"dom4\");\n            if (!indexDirToShardNamesMap.containsKey(indexDir)) {\n              indexDirToShardNamesMap.put(indexDir.toString(), new HashSet<>());\n            }\n            indexDirToShardNamesMap.get(indexDir.toString()).add(key);\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"Value\" attribute\n          // not found\n        }\n      }\n    }\n    \n    assertTrue(\n        \"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \"\n            + SolrCore.class.getSimpleName() + \" : \" + indexDirToShardNamesMap,\n        indexDirToShardNamesMap.size() > 0);\n    for (Entry<String,Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \"\n            + entry.getValue().toString() + \" all use indexDir \"\n            + entry.getKey());\n      }\n    }\n\n  }\n\n","bugFix":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","4c0daec3b5f385ea143f3be33e4d65dbf26b638c","816521ebaad5add9cb96bb88c577394e2938c40b","f0a4eeff354e8081247783f424a8e5a0fe106633"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91f7dccce9b0ec051304926da532b96944956895","date":1551188806,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/api/collections/CollectionsAPIDistributedZkTest#checkNoTwoShardsUseTheSameIndexDir().mjava","sourceNew":"  private void checkNoTwoShardsUseTheSameIndexDir() {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<>();\n    \n    List<MBeanServer> servers = new LinkedList<>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<>(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n        try {\n          Map<String, String> props = mbean.getKeyPropertyList();\n          String category = props.get(\"category\");\n          String name = props.get(\"name\");\n          if ((category != null && category.equals(Category.CORE.toString())) &&\n              (name != null && name.equals(\"indexDir\"))) {\n            String indexDir = server.getAttribute(mbean, \"Value\").toString();\n            String key = props.get(\"dom2\") + \".\" + props.get(\"dom3\") + \".\" + props.get(\"dom4\");\n            if (!indexDirToShardNamesMap.containsKey(indexDir)) {\n              indexDirToShardNamesMap.put(indexDir, new HashSet<>());\n            }\n            indexDirToShardNamesMap.get(indexDir).add(key);\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"Value\" attribute\n          // not found\n        }\n      }\n    }\n    \n    assertTrue(\n        \"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \"\n            + SolrCore.class.getSimpleName() + \" : \" + indexDirToShardNamesMap,\n        indexDirToShardNamesMap.size() > 0);\n    for (Entry<String,Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \"\n            + entry.getValue().toString() + \" all use indexDir \"\n            + entry.getKey());\n      }\n    }\n  }\n\n","sourceOld":"  private void checkNoTwoShardsUseTheSameIndexDir() throws Exception {\n    Map<String, Set<String>> indexDirToShardNamesMap = new HashMap<>();\n    \n    List<MBeanServer> servers = new LinkedList<>();\n    servers.add(ManagementFactory.getPlatformMBeanServer());\n    servers.addAll(MBeanServerFactory.findMBeanServer(null));\n    for (final MBeanServer server : servers) {\n      Set<ObjectName> mbeans = new HashSet<>();\n      mbeans.addAll(server.queryNames(null, null));\n      for (final ObjectName mbean : mbeans) {\n\n        try {\n          Map<String, String> props = mbean.getKeyPropertyList();\n          String category = props.get(\"category\");\n          String name = props.get(\"name\");\n          if ((category != null && category.toString().equals(Category.CORE.toString())) &&\n              (name != null && name.equals(\"indexDir\"))) {\n            String indexDir = server.getAttribute(mbean, \"Value\").toString();\n            String key = props.get(\"dom2\") + \".\" + props.get(\"dom3\") + \".\" + props.get(\"dom4\");\n            if (!indexDirToShardNamesMap.containsKey(indexDir)) {\n              indexDirToShardNamesMap.put(indexDir.toString(), new HashSet<>());\n            }\n            indexDirToShardNamesMap.get(indexDir.toString()).add(key);\n          }\n        } catch (Exception e) {\n          // ignore, just continue - probably a \"Value\" attribute\n          // not found\n        }\n      }\n    }\n    \n    assertTrue(\n        \"Something is broken in the assert for no shards using the same indexDir - probably something was changed in the attributes published in the MBean of \"\n            + SolrCore.class.getSimpleName() + \" : \" + indexDirToShardNamesMap,\n        indexDirToShardNamesMap.size() > 0);\n    for (Entry<String,Set<String>> entry : indexDirToShardNamesMap.entrySet()) {\n      if (entry.getValue().size() > 1) {\n        fail(\"We have shards using the same indexDir. E.g. shards \"\n            + entry.getValue().toString() + \" all use indexDir \"\n            + entry.getKey());\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"91f7dccce9b0ec051304926da532b96944956895":["b94236357aaa22b76c10629851fe4e376e0cea82","273ff2f5b0b365591fcbe91ea23b5e97027ca60d"],"273ff2f5b0b365591fcbe91ea23b5e97027ca60d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91f7dccce9b0ec051304926da532b96944956895"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["91f7dccce9b0ec051304926da532b96944956895","273ff2f5b0b365591fcbe91ea23b5e97027ca60d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"91f7dccce9b0ec051304926da532b96944956895":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"273ff2f5b0b365591fcbe91ea23b5e97027ca60d":["91f7dccce9b0ec051304926da532b96944956895"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}