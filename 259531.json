{"path":"solr/core/src/test/org/apache/solr/search/similarities/BaseSimilarityTestCase#getSimilarity(String).mjava","commits":[{"id":"aa6d0ca44ce171ad041951fa8fb94731b7d778d9","date":1316629244,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/BaseSimilarityTestCase#getSimilarity(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestPerFieldSimilarity#testDirectDynamic().mjava","sourceNew":"  /** returns the similarity in use for the field */\n  protected Similarity getSimilarity(String field) {\n    SolrCore core = h.getCore();\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    Similarity sim = searcher.get().getSimilarityProvider().get(field);\n    searcher.decref();\n    return sim;\n  }\n\n","sourceOld":"  /** ... and for a dynamic field */\n  public void testDirectDynamic() throws Exception {\n    SolrCore core = h.getCore();\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    Similarity sim = searcher.get().getSimilarityProvider().get(\"text_sim1\");\n    assertEquals(SweetSpotSimilarity.class, sim.getClass());\n    searcher.decref();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b","date":1328532481,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/BaseSimilarityTestCase#getSimilarity(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/similarities/BaseSimilarityTestCase#getSimilarity(String).mjava","sourceNew":"  /** returns the similarity in use for the field */\n  protected Similarity getSimilarity(String field) {\n    SolrCore core = h.getCore();\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    Similarity sim = searcher.get().getSimilarity();\n    searcher.decref();\n    while (sim instanceof PerFieldSimilarityWrapper) {\n      sim = ((PerFieldSimilarityWrapper)sim).get(field);\n    }\n    return sim;\n  }\n\n","sourceOld":"  /** returns the similarity in use for the field */\n  protected Similarity getSimilarity(String field) {\n    SolrCore core = h.getCore();\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    Similarity sim = searcher.get().getSimilarityProvider().get(field);\n    searcher.decref();\n    return sim;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"485545da3b4429d6f138b4baac573a97820ee93b","date":1433876557,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/BaseSimilarityTestCase#getSimilarity(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/similarities/BaseSimilarityTestCase#getSimilarity(String).mjava","sourceNew":"  /** returns the similarity in use for the field */\n  protected Similarity getSimilarity(String field) {\n    SolrCore core = h.getCore();\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    Similarity sim = searcher.get().getSimilarity(true);\n    searcher.decref();\n    while (sim instanceof PerFieldSimilarityWrapper) {\n      sim = ((PerFieldSimilarityWrapper)sim).get(field);\n    }\n    return sim;\n  }\n\n","sourceOld":"  /** returns the similarity in use for the field */\n  protected Similarity getSimilarity(String field) {\n    SolrCore core = h.getCore();\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    Similarity sim = searcher.get().getSimilarity();\n    searcher.decref();\n    while (sim instanceof PerFieldSimilarityWrapper) {\n      sim = ((PerFieldSimilarityWrapper)sim).get(field);\n    }\n    return sim;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68d6cb7f0f019661a784bd0e5a21e85b5f812af6","date":1515075216,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/BaseSimilarityTestCase#getSimilarity(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/similarities/BaseSimilarityTestCase#getSimilarity(String).mjava","sourceNew":"  /** returns the similarity in use for the field */\n  protected Similarity getSimilarity(String field) {\n    SolrCore core = h.getCore();\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    Similarity sim = searcher.get().getSimilarity();\n    searcher.decref();\n    while (sim instanceof PerFieldSimilarityWrapper) {\n      sim = ((PerFieldSimilarityWrapper)sim).get(field);\n    }\n    return sim;\n  }\n\n","sourceOld":"  /** returns the similarity in use for the field */\n  protected Similarity getSimilarity(String field) {\n    SolrCore core = h.getCore();\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    Similarity sim = searcher.get().getSimilarity(true);\n    searcher.decref();\n    while (sim instanceof PerFieldSimilarityWrapper) {\n      sim = ((PerFieldSimilarityWrapper)sim).get(field);\n    }\n    return sim;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/BaseSimilarityTestCase#getSimilarity(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/similarities/BaseSimilarityTestCase#getSimilarity(String).mjava","sourceNew":"  /** returns the similarity in use for the field */\n  protected Similarity getSimilarity(String field) {\n    SolrCore core = h.getCore();\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    Similarity sim = searcher.get().getSimilarity();\n    searcher.decref();\n    while (sim instanceof PerFieldSimilarityWrapper) {\n      sim = ((PerFieldSimilarityWrapper)sim).get(field);\n    }\n    return sim;\n  }\n\n","sourceOld":"  /** returns the similarity in use for the field */\n  protected Similarity getSimilarity(String field) {\n    SolrCore core = h.getCore();\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    Similarity sim = searcher.get().getSimilarity(true);\n    searcher.decref();\n    while (sim instanceof PerFieldSimilarityWrapper) {\n      sim = ((PerFieldSimilarityWrapper)sim).get(field);\n    }\n    return sim;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ab833f2b623042c834458d4cbcad05073a93793","date":1527625631,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/BaseSimilarityTestCase#getSimilarity(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/similarities/BaseSimilarityTestCase#getSimilarity(String).mjava","sourceNew":"  /** returns the similarity in use for the field */\n  protected Similarity getSimilarity(String field) {\n    Similarity sim = null;\n    try {\n      sim = h.getCore().withSearcher(IndexSearcher::getSimilarity);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    while (sim instanceof PerFieldSimilarityWrapper) {\n      sim = ((PerFieldSimilarityWrapper)sim).get(field);\n    }\n    return sim;\n  }\n\n","sourceOld":"  /** returns the similarity in use for the field */\n  protected Similarity getSimilarity(String field) {\n    SolrCore core = h.getCore();\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    Similarity sim = searcher.get().getSimilarity();\n    searcher.decref();\n    while (sim instanceof PerFieldSimilarityWrapper) {\n      sim = ((PerFieldSimilarityWrapper)sim).get(field);\n    }\n    return sim;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2138c838f1c8052d94d61eb1e205dce7fa6932ef","date":1527642223,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/similarities/BaseSimilarityTestCase#getSimilarity(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/similarities/BaseSimilarityTestCase#getSimilarity(String).mjava","sourceNew":"  /** returns the similarity in use for the field */\n  protected Similarity getSimilarity(String field) {\n    Similarity sim = null;\n    try {\n      sim = h.getCore().withSearcher(IndexSearcher::getSimilarity);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    while (sim instanceof PerFieldSimilarityWrapper) {\n      sim = ((PerFieldSimilarityWrapper)sim).get(field);\n    }\n    return sim;\n  }\n\n","sourceOld":"  /** returns the similarity in use for the field */\n  protected Similarity getSimilarity(String field) {\n    SolrCore core = h.getCore();\n    RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n    Similarity sim = searcher.get().getSimilarity();\n    searcher.decref();\n    while (sim instanceof PerFieldSimilarityWrapper) {\n      sim = ((PerFieldSimilarityWrapper)sim).get(field);\n    }\n    return sim;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["485545da3b4429d6f138b4baac573a97820ee93b","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["485545da3b4429d6f138b4baac573a97820ee93b"],"aa6d0ca44ce171ad041951fa8fb94731b7d778d9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"485545da3b4429d6f138b4baac573a97820ee93b":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["aa6d0ca44ce171ad041951fa8fb94731b7d778d9"],"4ab833f2b623042c834458d4cbcad05073a93793":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2138c838f1c8052d94d61eb1e205dce7fa6932ef"],"2138c838f1c8052d94d61eb1e205dce7fa6932ef":["b94236357aaa22b76c10629851fe4e376e0cea82","4ab833f2b623042c834458d4cbcad05073a93793"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["4ab833f2b623042c834458d4cbcad05073a93793","2138c838f1c8052d94d61eb1e205dce7fa6932ef"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["b94236357aaa22b76c10629851fe4e376e0cea82"],"aa6d0ca44ce171ad041951fa8fb94731b7d778d9":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aa6d0ca44ce171ad041951fa8fb94731b7d778d9"],"485545da3b4429d6f138b4baac573a97820ee93b":["b94236357aaa22b76c10629851fe4e376e0cea82","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["485545da3b4429d6f138b4baac573a97820ee93b"],"4ab833f2b623042c834458d4cbcad05073a93793":["2138c838f1c8052d94d61eb1e205dce7fa6932ef"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2138c838f1c8052d94d61eb1e205dce7fa6932ef":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}