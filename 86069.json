{"path":"lucene/contrib/demo/src/java/org/apache/lucene/demo/IndexHTML#main(String[]).mjava","commits":[{"id":"790c3f61c9b891d66d919c5d10db9fa5216eb0f1","date":1274818604,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/demo/src/java/org/apache/lucene/demo/IndexHTML#main(String[]).mjava","pathOld":"lucene/src/demo/org/apache/lucene/demo/IndexHTML#main(String[]).mjava","sourceNew":"  /** Indexer for HTML files.*/\n  public static void main(String[] argv) {\n    try {\n      File index = new File(\"index\");\n      boolean create = false;\n      File root = null;\n\n      String usage = \"IndexHTML [-create] [-index <index>] <root_directory>\";\n\n      if (argv.length == 0) {\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      for (int i = 0; i < argv.length; i++) {\n        if (argv[i].equals(\"-index\")) {\t\t  // parse -index option\n          index = new File(argv[++i]);\n        } else if (argv[i].equals(\"-create\")) {\t  // parse -create option\n          create = true;\n        } else if (i != argv.length-1) {\n          System.err.println(\"Usage: \" + usage);\n          return;\n        } else\n          root = new File(argv[i]);\n      }\n      \n      if(root == null) {\n        System.err.println(\"Specify directory to index\");\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      Date start = new Date();\n\n      if (!create) {\t\t\t\t  // delete stale docs\n        deleting = true;\n        indexDocs(root, index, create);\n      }\n      writer = new IndexWriter(FSDirectory.open(index), new IndexWriterConfig(\n          Version.LUCENE_CURRENT, new StandardAnalyzer(Version.LUCENE_CURRENT))\n          .setMaxFieldLength(1000000).setOpenMode(\n              create ? OpenMode.CREATE : OpenMode.CREATE_OR_APPEND));\n      indexDocs(root, index, create);\t\t  // add new docs\n\n      System.out.println(\"Optimizing index...\");\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n\n","sourceOld":"  /** Indexer for HTML files.*/\n  public static void main(String[] argv) {\n    try {\n      File index = new File(\"index\");\n      boolean create = false;\n      File root = null;\n\n      String usage = \"IndexHTML [-create] [-index <index>] <root_directory>\";\n\n      if (argv.length == 0) {\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      for (int i = 0; i < argv.length; i++) {\n        if (argv[i].equals(\"-index\")) {\t\t  // parse -index option\n          index = new File(argv[++i]);\n        } else if (argv[i].equals(\"-create\")) {\t  // parse -create option\n          create = true;\n        } else if (i != argv.length-1) {\n          System.err.println(\"Usage: \" + usage);\n          return;\n        } else\n          root = new File(argv[i]);\n      }\n      \n      if(root == null) {\n        System.err.println(\"Specify directory to index\");\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      Date start = new Date();\n\n      if (!create) {\t\t\t\t  // delete stale docs\n        deleting = true;\n        indexDocs(root, index, create);\n      }\n      writer = new IndexWriter(FSDirectory.open(index), new IndexWriterConfig(\n          Version.LUCENE_CURRENT, new StandardAnalyzer(Version.LUCENE_CURRENT))\n          .setMaxFieldLength(1000000).setOpenMode(\n              create ? OpenMode.CREATE : OpenMode.CREATE_OR_APPEND));\n      indexDocs(root, index, create);\t\t  // add new docs\n\n      System.out.println(\"Optimizing index...\");\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2047784e704fe141e0ff36affac8a7cb6c7bbec","date":1295352100,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/contrib/demo/src/java/org/apache/lucene/demo/IndexHTML#main(String[]).mjava","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/IndexHTML#main(String[]).mjava","sourceNew":"  /** Indexer for HTML files.*/\n  public static void main(String[] argv) {\n    try {\n      File index = new File(\"index\");\n      boolean create = false;\n      File root = null;\n\n      String usage = \"IndexHTML [-create] [-index <index>] <root_directory>\";\n\n      if (argv.length == 0) {\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      for (int i = 0; i < argv.length; i++) {\n        if (argv[i].equals(\"-index\")) {\t\t  // parse -index option\n          index = new File(argv[++i]);\n        } else if (argv[i].equals(\"-create\")) {\t  // parse -create option\n          create = true;\n        } else if (i != argv.length-1) {\n          System.err.println(\"Usage: \" + usage);\n          return;\n        } else\n          root = new File(argv[i]);\n      }\n      \n      if(root == null) {\n        System.err.println(\"Specify directory to index\");\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      Date start = new Date();\n\n      if (!create) {\t\t\t\t  // delete stale docs\n        deleting = true;\n        indexDocs(root, index, create);\n      }\n      writer = new IndexWriter(FSDirectory.open(index), new IndexWriterConfig(\n          Version.LUCENE_CURRENT, new StandardAnalyzer(Version.LUCENE_CURRENT))\n          .setOpenMode(create ? OpenMode.CREATE : OpenMode.CREATE_OR_APPEND));\n      indexDocs(root, index, create);\t\t  // add new docs\n\n      System.out.println(\"Optimizing index...\");\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n\n","sourceOld":"  /** Indexer for HTML files.*/\n  public static void main(String[] argv) {\n    try {\n      File index = new File(\"index\");\n      boolean create = false;\n      File root = null;\n\n      String usage = \"IndexHTML [-create] [-index <index>] <root_directory>\";\n\n      if (argv.length == 0) {\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      for (int i = 0; i < argv.length; i++) {\n        if (argv[i].equals(\"-index\")) {\t\t  // parse -index option\n          index = new File(argv[++i]);\n        } else if (argv[i].equals(\"-create\")) {\t  // parse -create option\n          create = true;\n        } else if (i != argv.length-1) {\n          System.err.println(\"Usage: \" + usage);\n          return;\n        } else\n          root = new File(argv[i]);\n      }\n      \n      if(root == null) {\n        System.err.println(\"Specify directory to index\");\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      Date start = new Date();\n\n      if (!create) {\t\t\t\t  // delete stale docs\n        deleting = true;\n        indexDocs(root, index, create);\n      }\n      writer = new IndexWriter(FSDirectory.open(index), new IndexWriterConfig(\n          Version.LUCENE_CURRENT, new StandardAnalyzer(Version.LUCENE_CURRENT))\n          .setMaxFieldLength(1000000).setOpenMode(\n              create ? OpenMode.CREATE : OpenMode.CREATE_OR_APPEND));\n      indexDocs(root, index, create);\t\t  // add new docs\n\n      System.out.println(\"Optimizing index...\");\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/demo/src/java/org/apache/lucene/demo/IndexHTML#main(String[]).mjava","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/IndexHTML#main(String[]).mjava","sourceNew":"  /** Indexer for HTML files.*/\n  public static void main(String[] argv) {\n    try {\n      File index = new File(\"index\");\n      boolean create = false;\n      File root = null;\n\n      String usage = \"IndexHTML [-create] [-index <index>] <root_directory>\";\n\n      if (argv.length == 0) {\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      for (int i = 0; i < argv.length; i++) {\n        if (argv[i].equals(\"-index\")) {\t\t  // parse -index option\n          index = new File(argv[++i]);\n        } else if (argv[i].equals(\"-create\")) {\t  // parse -create option\n          create = true;\n        } else if (i != argv.length-1) {\n          System.err.println(\"Usage: \" + usage);\n          return;\n        } else\n          root = new File(argv[i]);\n      }\n      \n      if(root == null) {\n        System.err.println(\"Specify directory to index\");\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      Date start = new Date();\n\n      if (!create) {\t\t\t\t  // delete stale docs\n        deleting = true;\n        indexDocs(root, index, create);\n      }\n      writer = new IndexWriter(FSDirectory.open(index), new IndexWriterConfig(\n          Version.LUCENE_CURRENT, new StandardAnalyzer(Version.LUCENE_CURRENT))\n          .setOpenMode(create ? OpenMode.CREATE : OpenMode.CREATE_OR_APPEND));\n      indexDocs(root, index, create);\t\t  // add new docs\n\n      System.out.println(\"Optimizing index...\");\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n\n","sourceOld":"  /** Indexer for HTML files.*/\n  public static void main(String[] argv) {\n    try {\n      File index = new File(\"index\");\n      boolean create = false;\n      File root = null;\n\n      String usage = \"IndexHTML [-create] [-index <index>] <root_directory>\";\n\n      if (argv.length == 0) {\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      for (int i = 0; i < argv.length; i++) {\n        if (argv[i].equals(\"-index\")) {\t\t  // parse -index option\n          index = new File(argv[++i]);\n        } else if (argv[i].equals(\"-create\")) {\t  // parse -create option\n          create = true;\n        } else if (i != argv.length-1) {\n          System.err.println(\"Usage: \" + usage);\n          return;\n        } else\n          root = new File(argv[i]);\n      }\n      \n      if(root == null) {\n        System.err.println(\"Specify directory to index\");\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      Date start = new Date();\n\n      if (!create) {\t\t\t\t  // delete stale docs\n        deleting = true;\n        indexDocs(root, index, create);\n      }\n      writer = new IndexWriter(FSDirectory.open(index), new IndexWriterConfig(\n          Version.LUCENE_CURRENT, new StandardAnalyzer(Version.LUCENE_CURRENT))\n          .setMaxFieldLength(1000000).setOpenMode(\n              create ? OpenMode.CREATE : OpenMode.CREATE_OR_APPEND));\n      indexDocs(root, index, create);\t\t  // add new docs\n\n      System.out.println(\"Optimizing index...\");\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/demo/src/java/org/apache/lucene/demo/IndexHTML#main(String[]).mjava","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/IndexHTML#main(String[]).mjava","sourceNew":"  /** Indexer for HTML files.*/\n  public static void main(String[] argv) {\n    try {\n      File index = new File(\"index\");\n      boolean create = false;\n      File root = null;\n\n      String usage = \"IndexHTML [-create] [-index <index>] <root_directory>\";\n\n      if (argv.length == 0) {\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      for (int i = 0; i < argv.length; i++) {\n        if (argv[i].equals(\"-index\")) {\t\t  // parse -index option\n          index = new File(argv[++i]);\n        } else if (argv[i].equals(\"-create\")) {\t  // parse -create option\n          create = true;\n        } else if (i != argv.length-1) {\n          System.err.println(\"Usage: \" + usage);\n          return;\n        } else\n          root = new File(argv[i]);\n      }\n      \n      if(root == null) {\n        System.err.println(\"Specify directory to index\");\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      Date start = new Date();\n\n      if (!create) {\t\t\t\t  // delete stale docs\n        deleting = true;\n        indexDocs(root, index, create);\n      }\n      writer = new IndexWriter(FSDirectory.open(index), new IndexWriterConfig(\n          Version.LUCENE_CURRENT, new StandardAnalyzer(Version.LUCENE_CURRENT))\n          .setOpenMode(create ? OpenMode.CREATE : OpenMode.CREATE_OR_APPEND));\n      indexDocs(root, index, create);\t\t  // add new docs\n\n      System.out.println(\"Optimizing index...\");\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n\n","sourceOld":"  /** Indexer for HTML files.*/\n  public static void main(String[] argv) {\n    try {\n      File index = new File(\"index\");\n      boolean create = false;\n      File root = null;\n\n      String usage = \"IndexHTML [-create] [-index <index>] <root_directory>\";\n\n      if (argv.length == 0) {\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      for (int i = 0; i < argv.length; i++) {\n        if (argv[i].equals(\"-index\")) {\t\t  // parse -index option\n          index = new File(argv[++i]);\n        } else if (argv[i].equals(\"-create\")) {\t  // parse -create option\n          create = true;\n        } else if (i != argv.length-1) {\n          System.err.println(\"Usage: \" + usage);\n          return;\n        } else\n          root = new File(argv[i]);\n      }\n      \n      if(root == null) {\n        System.err.println(\"Specify directory to index\");\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      Date start = new Date();\n\n      if (!create) {\t\t\t\t  // delete stale docs\n        deleting = true;\n        indexDocs(root, index, create);\n      }\n      writer = new IndexWriter(FSDirectory.open(index), new IndexWriterConfig(\n          Version.LUCENE_CURRENT, new StandardAnalyzer(Version.LUCENE_CURRENT))\n          .setMaxFieldLength(1000000).setOpenMode(\n              create ? OpenMode.CREATE : OpenMode.CREATE_OR_APPEND));\n      indexDocs(root, index, create);\t\t  // add new docs\n\n      System.out.println(\"Optimizing index...\");\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81ea17596392ebd5d12741eb9e3b2516258b9413","date":1298090976,"type":4,"author":"Steven Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/IndexHTML#main(String[]).mjava","sourceNew":null,"sourceOld":"  /** Indexer for HTML files.*/\n  public static void main(String[] argv) {\n    try {\n      File index = new File(\"index\");\n      boolean create = false;\n      File root = null;\n\n      String usage = \"IndexHTML [-create] [-index <index>] <root_directory>\";\n\n      if (argv.length == 0) {\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      for (int i = 0; i < argv.length; i++) {\n        if (argv[i].equals(\"-index\")) {\t\t  // parse -index option\n          index = new File(argv[++i]);\n        } else if (argv[i].equals(\"-create\")) {\t  // parse -create option\n          create = true;\n        } else if (i != argv.length-1) {\n          System.err.println(\"Usage: \" + usage);\n          return;\n        } else\n          root = new File(argv[i]);\n      }\n      \n      if(root == null) {\n        System.err.println(\"Specify directory to index\");\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      Date start = new Date();\n\n      if (!create) {\t\t\t\t  // delete stale docs\n        deleting = true;\n        indexDocs(root, index, create);\n      }\n      writer = new IndexWriter(FSDirectory.open(index), new IndexWriterConfig(\n          Version.LUCENE_CURRENT, new StandardAnalyzer(Version.LUCENE_CURRENT))\n          .setOpenMode(create ? OpenMode.CREATE : OpenMode.CREATE_OR_APPEND));\n      indexDocs(root, index, create);\t\t  // add new docs\n\n      System.out.println(\"Optimizing index...\");\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/IndexHTML#main(String[]).mjava","sourceNew":null,"sourceOld":"  /** Indexer for HTML files.*/\n  public static void main(String[] argv) {\n    try {\n      File index = new File(\"index\");\n      boolean create = false;\n      File root = null;\n\n      String usage = \"IndexHTML [-create] [-index <index>] <root_directory>\";\n\n      if (argv.length == 0) {\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      for (int i = 0; i < argv.length; i++) {\n        if (argv[i].equals(\"-index\")) {\t\t  // parse -index option\n          index = new File(argv[++i]);\n        } else if (argv[i].equals(\"-create\")) {\t  // parse -create option\n          create = true;\n        } else if (i != argv.length-1) {\n          System.err.println(\"Usage: \" + usage);\n          return;\n        } else\n          root = new File(argv[i]);\n      }\n      \n      if(root == null) {\n        System.err.println(\"Specify directory to index\");\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      Date start = new Date();\n\n      if (!create) {\t\t\t\t  // delete stale docs\n        deleting = true;\n        indexDocs(root, index, create);\n      }\n      writer = new IndexWriter(FSDirectory.open(index), new IndexWriterConfig(\n          Version.LUCENE_CURRENT, new StandardAnalyzer(Version.LUCENE_CURRENT))\n          .setOpenMode(create ? OpenMode.CREATE : OpenMode.CREATE_OR_APPEND));\n      indexDocs(root, index, create);\t\t  // add new docs\n\n      System.out.println(\"Optimizing index...\");\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/demo/src/java/org/apache/lucene/demo/IndexHTML#main(String[]).mjava","sourceNew":null,"sourceOld":"  /** Indexer for HTML files.*/\n  public static void main(String[] argv) {\n    try {\n      File index = new File(\"index\");\n      boolean create = false;\n      File root = null;\n\n      String usage = \"IndexHTML [-create] [-index <index>] <root_directory>\";\n\n      if (argv.length == 0) {\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      for (int i = 0; i < argv.length; i++) {\n        if (argv[i].equals(\"-index\")) {\t\t  // parse -index option\n          index = new File(argv[++i]);\n        } else if (argv[i].equals(\"-create\")) {\t  // parse -create option\n          create = true;\n        } else if (i != argv.length-1) {\n          System.err.println(\"Usage: \" + usage);\n          return;\n        } else\n          root = new File(argv[i]);\n      }\n      \n      if(root == null) {\n        System.err.println(\"Specify directory to index\");\n        System.err.println(\"Usage: \" + usage);\n        return;\n      }\n\n      Date start = new Date();\n\n      if (!create) {\t\t\t\t  // delete stale docs\n        deleting = true;\n        indexDocs(root, index, create);\n      }\n      writer = new IndexWriter(FSDirectory.open(index), new IndexWriterConfig(\n          Version.LUCENE_CURRENT, new StandardAnalyzer(Version.LUCENE_CURRENT))\n          .setOpenMode(create ? OpenMode.CREATE : OpenMode.CREATE_OR_APPEND));\n      indexDocs(root, index, create);\t\t  // add new docs\n\n      System.out.println(\"Optimizing index...\");\n      writer.optimize();\n      writer.close();\n\n      Date end = new Date();\n\n      System.out.print(end.getTime() - start.getTime());\n      System.out.println(\" total milliseconds\");\n\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2047784e704fe141e0ff36affac8a7cb6c7bbec":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["29ef99d61cda9641b6250bf9567329a6e65f901d","81ea17596392ebd5d12741eb9e3b2516258b9413"],"81ea17596392ebd5d12741eb9e3b2516258b9413":["c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["e79a6d080bdd5b2a8f56342cf571b5476de04180","81ea17596392ebd5d12741eb9e3b2516258b9413"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["81ea17596392ebd5d12741eb9e3b2516258b9413"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c2047784e704fe141e0ff36affac8a7cb6c7bbec":["81ea17596392ebd5d12741eb9e3b2516258b9413","29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"81ea17596392ebd5d12741eb9e3b2516258b9413":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["c2047784e704fe141e0ff36affac8a7cb6c7bbec","29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}