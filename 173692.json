{"path":"src/test/org/apache/lucene/analysis/TestTeeTokenFilter#setUp().mjava","commits":[{"id":"1f7d76c5e8bcee481159c0dbc4aa05f88642c0cc","date":1243692318,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestTeeTokenFilter#setUp().mjava","pathOld":"src/test/org/apache/lucene/analysis/TeeSinkTokenTest#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    tokens1 = new String[]{\"The\", \"quick\", \"Burgundy\", \"Fox\", \"jumped\", \"over\", \"the\", \"lazy\", \"Red\", \"Dogs\"};\n    tokens2 = new String[]{\"The\", \"Lazy\", \"Dogs\", \"should\", \"stay\", \"on\", \"the\", \"porch\"};\n    buffer1 = new StringBuffer();\n\n    for (int i = 0; i < tokens1.length; i++) {\n      buffer1.append(tokens1[i]).append(' ');\n    }\n    buffer2 = new StringBuffer();\n    for (int i = 0; i < tokens2.length; i++) {\n      buffer2.append(tokens2[i]).append(' ');\n\n    }\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    tokens1 = new String[]{\"The\", \"quick\", \"Burgundy\", \"Fox\", \"jumped\", \"over\", \"the\", \"lazy\", \"Red\", \"Dogs\"};\n    tokens2 = new String[]{\"The\", \"Lazy\", \"Dogs\", \"should\", \"stay\", \"on\", \"the\", \"porch\"};\n    buffer1 = new StringBuffer();\n\n    for (int i = 0; i < tokens1.length; i++) {\n      buffer1.append(tokens1[i]).append(' ');\n    }\n    buffer2 = new StringBuffer();\n    for (int i = 0; i < tokens2.length; i++) {\n      buffer2.append(tokens2[i]).append(' ');\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec8b5a20a12931b8d7e616c79c5248ae06cc5568","date":1248471948,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestTeeTokenFilter#setUp().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestTeeTokenFilter#setUp().mjava","sourceNew":"  protected void setUp() {\n    tokens1 = new String[]{\"The\", \"quick\", \"Burgundy\", \"Fox\", \"jumped\", \"over\", \"the\", \"lazy\", \"Red\", \"Dogs\"};\n    tokens2 = new String[]{\"The\", \"Lazy\", \"Dogs\", \"should\", \"stay\", \"on\", \"the\", \"porch\"};\n    buffer1 = new StringBuffer();\n\n    for (int i = 0; i < tokens1.length; i++) {\n      buffer1.append(tokens1[i]).append(' ');\n    }\n    buffer2 = new StringBuffer();\n    for (int i = 0; i < tokens2.length; i++) {\n      buffer2.append(tokens2[i]).append(' ');\n\n    }\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    tokens1 = new String[]{\"The\", \"quick\", \"Burgundy\", \"Fox\", \"jumped\", \"over\", \"the\", \"lazy\", \"Red\", \"Dogs\"};\n    tokens2 = new String[]{\"The\", \"Lazy\", \"Dogs\", \"should\", \"stay\", \"on\", \"the\", \"porch\"};\n    buffer1 = new StringBuffer();\n\n    for (int i = 0; i < tokens1.length; i++) {\n      buffer1.append(tokens1[i]).append(' ');\n    }\n    buffer2 = new StringBuffer();\n    for (int i = 0; i < tokens2.length; i++) {\n      buffer2.append(tokens2[i]).append(' ');\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58db9ee7d88a7b7c23d77436675c11bcb755c8f9","date":1249451023,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestTeeTokenFilter#setUp().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestTeeTokenFilter#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    tokens1 = new String[]{\"The\", \"quick\", \"Burgundy\", \"Fox\", \"jumped\", \"over\", \"the\", \"lazy\", \"Red\", \"Dogs\"};\n    tokens2 = new String[]{\"The\", \"Lazy\", \"Dogs\", \"should\", \"stay\", \"on\", \"the\", \"porch\"};\n    buffer1 = new StringBuffer();\n\n    for (int i = 0; i < tokens1.length; i++) {\n      buffer1.append(tokens1[i]).append(' ');\n    }\n    buffer2 = new StringBuffer();\n    for (int i = 0; i < tokens2.length; i++) {\n      buffer2.append(tokens2[i]).append(' ');\n\n    }\n  }\n\n","sourceOld":"  protected void setUp() {\n    tokens1 = new String[]{\"The\", \"quick\", \"Burgundy\", \"Fox\", \"jumped\", \"over\", \"the\", \"lazy\", \"Red\", \"Dogs\"};\n    tokens2 = new String[]{\"The\", \"Lazy\", \"Dogs\", \"should\", \"stay\", \"on\", \"the\", \"porch\"};\n    buffer1 = new StringBuffer();\n\n    for (int i = 0; i < tokens1.length; i++) {\n      buffer1.append(tokens1[i]).append(' ');\n    }\n    buffer2 = new StringBuffer();\n    for (int i = 0; i < tokens2.length; i++) {\n      buffer2.append(tokens2[i]).append(' ');\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c","date":1254521470,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestTeeTokenFilter#setUp().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestTeeTokenFilter#setUp().mjava","sourceNew":"  protected void setUp() throws Exception {\n    super.setUp();\n    tokens1 = new String[]{\"The\", \"quick\", \"Burgundy\", \"Fox\", \"jumped\", \"over\", \"the\", \"lazy\", \"Red\", \"Dogs\"};\n    tokens2 = new String[]{\"The\", \"Lazy\", \"Dogs\", \"should\", \"stay\", \"on\", \"the\", \"porch\"};\n    buffer1 = new StringBuilder();\n\n    for (int i = 0; i < tokens1.length; i++) {\n      buffer1.append(tokens1[i]).append(' ');\n    }\n    buffer2 = new StringBuilder();\n    for (int i = 0; i < tokens2.length; i++) {\n      buffer2.append(tokens2[i]).append(' ');\n\n    }\n  }\n\n","sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    tokens1 = new String[]{\"The\", \"quick\", \"Burgundy\", \"Fox\", \"jumped\", \"over\", \"the\", \"lazy\", \"Red\", \"Dogs\"};\n    tokens2 = new String[]{\"The\", \"Lazy\", \"Dogs\", \"should\", \"stay\", \"on\", \"the\", \"porch\"};\n    buffer1 = new StringBuffer();\n\n    for (int i = 0; i < tokens1.length; i++) {\n      buffer1.append(tokens1[i]).append(' ');\n    }\n    buffer2 = new StringBuffer();\n    for (int i = 0; i < tokens2.length; i++) {\n      buffer2.append(tokens2[i]).append(' ');\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/analysis/TestTeeTokenFilter#setUp().mjava","sourceNew":null,"sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    tokens1 = new String[]{\"The\", \"quick\", \"Burgundy\", \"Fox\", \"jumped\", \"over\", \"the\", \"lazy\", \"Red\", \"Dogs\"};\n    tokens2 = new String[]{\"The\", \"Lazy\", \"Dogs\", \"should\", \"stay\", \"on\", \"the\", \"porch\"};\n    buffer1 = new StringBuffer();\n\n    for (int i = 0; i < tokens1.length; i++) {\n      buffer1.append(tokens1[i]).append(' ');\n    }\n    buffer2 = new StringBuffer();\n    for (int i = 0; i < tokens2.length; i++) {\n      buffer2.append(tokens2[i]).append(' ');\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/analysis/TestTeeTokenFilter#setUp().mjava","sourceNew":null,"sourceOld":"  protected void setUp() throws Exception {\n    super.setUp();\n    tokens1 = new String[]{\"The\", \"quick\", \"Burgundy\", \"Fox\", \"jumped\", \"over\", \"the\", \"lazy\", \"Red\", \"Dogs\"};\n    tokens2 = new String[]{\"The\", \"Lazy\", \"Dogs\", \"should\", \"stay\", \"on\", \"the\", \"porch\"};\n    buffer1 = new StringBuilder();\n\n    for (int i = 0; i < tokens1.length; i++) {\n      buffer1.append(tokens1[i]).append(' ');\n    }\n    buffer2 = new StringBuilder();\n    for (int i = 0; i < tokens2.length; i++) {\n      buffer2.append(tokens2[i]).append(' ');\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58db9ee7d88a7b7c23d77436675c11bcb755c8f9":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["58db9ee7d88a7b7c23d77436675c11bcb755c8f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a046c0c310bc77931fc8441bd920053b607dd14":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["58db9ee7d88a7b7c23d77436675c11bcb755c8f9"],"1f7d76c5e8bcee481159c0dbc4aa05f88642c0cc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0a046c0c310bc77931fc8441bd920053b607dd14"],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["1f7d76c5e8bcee481159c0dbc4aa05f88642c0cc"]},"commit2Childs":{"58db9ee7d88a7b7c23d77436675c11bcb755c8f9":["e8d1458a2543cbd30cbfe7929be4dcb5c5251659","4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f7d76c5e8bcee481159c0dbc4aa05f88642c0cc"],"0a046c0c310bc77931fc8441bd920053b607dd14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["0a046c0c310bc77931fc8441bd920053b607dd14"],"1f7d76c5e8bcee481159c0dbc4aa05f88642c0cc":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["58db9ee7d88a7b7c23d77436675c11bcb755c8f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}