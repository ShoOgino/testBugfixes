{"path":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkBinaryDocValues(String,int,BinaryDocValues).mjava","commits":[{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkBinaryDocValues(String,int,BinaryDocValues).mjava","pathOld":"/dev/null","sourceNew":"  private static void checkBinaryDocValues(String fieldName, int maxDoc, BinaryDocValues bdv) throws IOException {\n    int doc;\n    if (bdv.docID() != -1) {\n      throw new RuntimeException(\"binary dv iterator for field: \" + fieldName + \" should start at docID=-1, but got \" + bdv.docID());\n    }\n    // TODO: we could add stats to DVs, e.g. total doc count w/ a value for this field\n    // TODO: check advance too\n    while ((doc = bdv.nextDoc()) != NO_MORE_DOCS) {\n      BytesRef value = bdv.binaryValue();\n      value.isValid();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkBinaryDocValues(String,int,BinaryDocValues).mjava","pathOld":"/dev/null","sourceNew":"  private static void checkBinaryDocValues(String fieldName, int maxDoc, BinaryDocValues bdv) throws IOException {\n    int doc;\n    if (bdv.docID() != -1) {\n      throw new RuntimeException(\"binary dv iterator for field: \" + fieldName + \" should start at docID=-1, but got \" + bdv.docID());\n    }\n    // TODO: we could add stats to DVs, e.g. total doc count w/ a value for this field\n    // TODO: check advance too\n    while ((doc = bdv.nextDoc()) != NO_MORE_DOCS) {\n      BytesRef value = bdv.binaryValue();\n      value.isValid();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkBinaryDocValues(String,int,BinaryDocValues).mjava","pathOld":"/dev/null","sourceNew":"  private static void checkBinaryDocValues(String fieldName, int maxDoc, BinaryDocValues bdv) throws IOException {\n    int doc;\n    if (bdv.docID() != -1) {\n      throw new RuntimeException(\"binary dv iterator for field: \" + fieldName + \" should start at docID=-1, but got \" + bdv.docID());\n    }\n    // TODO: we could add stats to DVs, e.g. total doc count w/ a value for this field\n    // TODO: check advance too\n    while ((doc = bdv.nextDoc()) != NO_MORE_DOCS) {\n      BytesRef value = bdv.binaryValue();\n      value.isValid();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11134e449dabe11d6d0ff6a564d84b82cbe93722","date":1477299083,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkBinaryDocValues(String,int,BinaryDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkBinaryDocValues(String,int,BinaryDocValues).mjava","sourceNew":"  private static void checkBinaryDocValues(String fieldName, int maxDoc, BinaryDocValues bdv) throws IOException {\n    int doc;\n    if (bdv.docID() != -1) {\n      throw new RuntimeException(\"binary dv iterator for field: \" + fieldName + \" should start at docID=-1, but got \" + bdv.docID());\n    }\n    // TODO: we could add stats to DVs, e.g. total doc count w/ a value for this field\n    while ((doc = bdv.nextDoc()) != NO_MORE_DOCS) {\n      BytesRef value = bdv.binaryValue();\n      value.isValid();\n    }\n  }\n\n","sourceOld":"  private static void checkBinaryDocValues(String fieldName, int maxDoc, BinaryDocValues bdv) throws IOException {\n    int doc;\n    if (bdv.docID() != -1) {\n      throw new RuntimeException(\"binary dv iterator for field: \" + fieldName + \" should start at docID=-1, but got \" + bdv.docID());\n    }\n    // TODO: we could add stats to DVs, e.g. total doc count w/ a value for this field\n    // TODO: check advance too\n    while ((doc = bdv.nextDoc()) != NO_MORE_DOCS) {\n      BytesRef value = bdv.binaryValue();\n      value.isValid();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2714c85633b642b29871cf5ff8d17d3ba7bfd76","date":1477307753,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkBinaryDocValues(String,int,BinaryDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkBinaryDocValues(String,int,BinaryDocValues).mjava","sourceNew":"  private static void checkBinaryDocValues(String fieldName, int maxDoc, BinaryDocValues bdv) throws IOException {\n    int doc;\n    if (bdv.docID() != -1) {\n      throw new RuntimeException(\"binary dv iterator for field: \" + fieldName + \" should start at docID=-1, but got \" + bdv.docID());\n    }\n    // TODO: we could add stats to DVs, e.g. total doc count w/ a value for this field\n    while ((doc = bdv.nextDoc()) != NO_MORE_DOCS) {\n      BytesRef value = bdv.binaryValue();\n      value.isValid();\n    }\n  }\n\n","sourceOld":"  private static void checkBinaryDocValues(String fieldName, int maxDoc, BinaryDocValues bdv) throws IOException {\n    int doc;\n    if (bdv.docID() != -1) {\n      throw new RuntimeException(\"binary dv iterator for field: \" + fieldName + \" should start at docID=-1, but got \" + bdv.docID());\n    }\n    // TODO: we could add stats to DVs, e.g. total doc count w/ a value for this field\n    // TODO: check advance too\n    while ((doc = bdv.nextDoc()) != NO_MORE_DOCS) {\n      BytesRef value = bdv.binaryValue();\n      value.isValid();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkBinaryDocValues(String,int,BinaryDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkBinaryDocValues(String,int,BinaryDocValues).mjava","sourceNew":"  private static void checkBinaryDocValues(String fieldName, int maxDoc, BinaryDocValues bdv) throws IOException {\n    int doc;\n    if (bdv.docID() != -1) {\n      throw new RuntimeException(\"binary dv iterator for field: \" + fieldName + \" should start at docID=-1, but got \" + bdv.docID());\n    }\n    // TODO: we could add stats to DVs, e.g. total doc count w/ a value for this field\n    while ((doc = bdv.nextDoc()) != NO_MORE_DOCS) {\n      BytesRef value = bdv.binaryValue();\n      value.isValid();\n    }\n  }\n\n","sourceOld":"  private static void checkBinaryDocValues(String fieldName, int maxDoc, BinaryDocValues bdv) throws IOException {\n    int doc;\n    if (bdv.docID() != -1) {\n      throw new RuntimeException(\"binary dv iterator for field: \" + fieldName + \" should start at docID=-1, but got \" + bdv.docID());\n    }\n    // TODO: we could add stats to DVs, e.g. total doc count w/ a value for this field\n    // TODO: check advance too\n    while ((doc = bdv.nextDoc()) != NO_MORE_DOCS) {\n      BytesRef value = bdv.binaryValue();\n      value.isValid();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f3d2a33d17fc14a585ce28e167b1bb1c31946b0","date":1552989190,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkBinaryDocValues(String,int,BinaryDocValues,BinaryDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkBinaryDocValues(String,int,BinaryDocValues).mjava","sourceNew":"  private static void checkBinaryDocValues(String fieldName, int maxDoc, BinaryDocValues bdv, BinaryDocValues bdv2) throws IOException {\n    if (bdv.docID() != -1) {\n      throw new RuntimeException(\"binary dv iterator for field: \" + fieldName + \" should start at docID=-1, but got \" + bdv.docID());\n    }\n    // TODO: we could add stats to DVs, e.g. total doc count w/ a value for this field\n    for (int doc = bdv.nextDoc(); doc != NO_MORE_DOCS; doc = bdv.nextDoc()) {\n      BytesRef value = bdv.binaryValue();\n      value.isValid();\n\n      if (bdv2.advanceExact(doc) == false) {\n        throw new RuntimeException(\"advanceExact did not find matching doc ID: \" + doc);\n      }\n      BytesRef value2 = bdv2.binaryValue();\n      if (value.equals(value2) == false) {\n        throw new RuntimeException(\"nextDoc and advanceExact report different values: \" + value + \" != \" + value2);\n      }\n    }\n  }\n\n","sourceOld":"  private static void checkBinaryDocValues(String fieldName, int maxDoc, BinaryDocValues bdv) throws IOException {\n    int doc;\n    if (bdv.docID() != -1) {\n      throw new RuntimeException(\"binary dv iterator for field: \" + fieldName + \" should start at docID=-1, but got \" + bdv.docID());\n    }\n    // TODO: we could add stats to DVs, e.g. total doc count w/ a value for this field\n    while ((doc = bdv.nextDoc()) != NO_MORE_DOCS) {\n      BytesRef value = bdv.binaryValue();\n      value.isValid();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"11134e449dabe11d6d0ff6a564d84b82cbe93722":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"7f3d2a33d17fc14a585ce28e167b1bb1c31946b0":["d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"d2714c85633b642b29871cf5ff8d17d3ba7bfd76":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","11134e449dabe11d6d0ff6a564d84b82cbe93722"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7f3d2a33d17fc14a585ce28e167b1bb1c31946b0"]},"commit2Childs":{"11134e449dabe11d6d0ff6a564d84b82cbe93722":["d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["11134e449dabe11d6d0ff6a564d84b82cbe93722","d2714c85633b642b29871cf5ff8d17d3ba7bfd76","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"7f3d2a33d17fc14a585ce28e167b1bb1c31946b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d2714c85633b642b29871cf5ff8d17d3ba7bfd76":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","7f3d2a33d17fc14a585ce28e167b1bb1c31946b0"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}