{"path":"solr/src/java/org/apache/solr/handler/JsonLoader#parseDoc(int,JSONParser).mjava","commits":[{"id":"bc00220e3dec859110781d5d19a6116501fb4a38","date":1273880298,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/JsonLoader#parseDoc(int,JSONParser).mjava","pathOld":"/dev/null","sourceNew":"  SolrInputDocument parseDoc( int ev, JSONParser js ) throws IOException\n  {\n    Stack<Object> stack = new Stack<Object>();\n    Object obj = null;\n    boolean inArray = false;\n    \n    if( ev != JSONParser.OBJECT_START ) {\n      throw new IOException( \"object should already be started\" );\n    }\n    \n    while( true ) {\n      //System.out.println( ev + \"[\"+JSONParser.getEventString(ev)+\"] \"+js.wasKey() ); //+ js.getString() );\n\n      switch (ev) {\n        case JSONParser.STRING:\n          if( js.wasKey() ) {\n            obj = stack.peek();\n            String v = js.getString();\n            if( obj instanceof SolrInputField ) {\n              SolrInputField field = (SolrInputField)obj;\n              if( \"boost\".equals( v ) ) {\n                ev = js.nextEvent();\n                if( ev != JSONParser.NUMBER &&\n                    ev != JSONParser.LONG &&  \n                    ev != JSONParser.BIGNUMBER ) {\n                  throw new IOException( \"boost should have number! \"+JSONParser.getEventString(ev) );\n                }\n                field.setBoost( Float.valueOf( js.getNumberChars().toString() ) );\n              }\n              else if( \"value\".equals( v  ) ) {\n                // nothing special...\n                stack.push( field ); // so it can be popped\n              }\n              else {\n                throw new IOException( \"invalid key: \"+v + \" [\"+js.getPosition()+\"]\" );\n              }\n            }\n            else if( obj instanceof SolrInputDocument ) {\n              SolrInputDocument doc = (SolrInputDocument)obj;\n              SolrInputField f = doc.get( v );\n              if( f == null ) {\n                f = new SolrInputField( v );\n                doc.put( f.getName(), f );\n              }\n              stack.push( f );\n            }\n            else {\n              throw new IOException( \"hymmm [\"+js.getPosition()+\"]\" );\n            }\n          }\n          else {\n            addValToField(stack, js.getString(), inArray, js);\n          }\n          break;\n\n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n          addValToField(stack, js.getNumberChars().toString(), inArray, js);\n          break;\n          \n        case JSONParser.BOOLEAN:\n          addValToField(stack, js.getBoolean(),inArray, js);\n          break;\n          \n        case JSONParser.OBJECT_START:\n          if( stack.isEmpty() ) {\n            stack.push( new SolrInputDocument() );\n          }\n          else {\n            obj = stack.peek();\n            if( obj instanceof SolrInputField ) {\n              // should alreay be pushed...\n            }\n            else {\n              throw new IOException( \"should not start new object with: \"+obj + \" [\"+js.getPosition()+\"]\" );\n            }\n          }\n          break;\n          \n        case JSONParser.OBJECT_END:\n          obj = stack.pop();\n          if( obj instanceof SolrInputDocument ) {\n            return (SolrInputDocument)obj;\n          }\n          else if( obj instanceof SolrInputField ) {\n            // should already be pushed...\n          }\n          else {\n            throw new IOException( \"should not start new object with: \"+obj + \" [\"+js.getPosition()+\"]\" );\n          }\n          break;\n\n        case JSONParser.ARRAY_START:\n          inArray = true;\n          break;\n          \n        case JSONParser.ARRAY_END:\n          inArray = false;\n          stack.pop(); // the val should have done it...\n          break;\n          \n        default:\n          System.out.println(\"UNKNOWN_EVENT_ID:\"+ev);\n          break;\n      }\n\n      ev = js.nextEvent();\n      if( ev == JSONParser.EOF ) {\n        throw new IOException( \"should finish doc first!\" );\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19b15db2edd4d6bec35a41e44d8f1afe6384a905","date":1305144174,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/JsonLoader#parseDoc(int).mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#parseDoc(int,JSONParser).mjava","sourceNew":"  SolrInputDocument parseDoc(int ev) throws IOException\n  {\n    Stack<Object> stack = new Stack<Object>();\n    Object obj = null;\n    boolean inArray = false;\n    \n    if( ev != JSONParser.OBJECT_START ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"object should already be started\" );\n    }\n    \n    while( true ) {\n      //System.out.println( ev + \"[\"+JSONParser.getEventString(ev)+\"] \"+parser.wasKey() ); //+ parser.getString() );\n\n      switch (ev) {\n        case JSONParser.STRING:\n          if( parser.wasKey() ) {\n            obj = stack.peek();\n            String v = parser.getString();\n            if( obj instanceof SolrInputField ) {\n              SolrInputField field = (SolrInputField)obj;\n              if( \"boost\".equals( v ) ) {\n                ev = parser.nextEvent();\n                if( ev != JSONParser.NUMBER &&\n                    ev != JSONParser.LONG &&  \n                    ev != JSONParser.BIGNUMBER ) {\n                  throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"boost should have number! \"+JSONParser.getEventString(ev) );\n                }\n                field.setBoost( Float.valueOf( parser.getNumberChars().toString() ) );\n              }\n              else if( \"value\".equals( v  ) ) {\n                // nothing special...\n                stack.push( field ); // so it can be popped\n              }\n              else {\n                throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"invalid key: \"+v + \" [\"+ parser.getPosition()+\"]\" );\n              }\n            }\n            else if( obj instanceof SolrInputDocument ) {\n              SolrInputDocument doc = (SolrInputDocument)obj;\n              SolrInputField f = doc.get( v );\n              if( f == null ) {\n                f = new SolrInputField( v );\n                doc.put( f.getName(), f );\n              }\n              stack.push( f );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"hymmm [\"+ parser.getPosition()+\"]\" );\n            }\n          }\n          else {\n            addValToField(stack, parser.getString(), inArray, parser);\n          }\n          break;\n\n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n          addValToField(stack, parser.getNumberChars().toString(), inArray, parser);\n          break;\n          \n        case JSONParser.BOOLEAN:\n          addValToField(stack, parser.getBoolean(),inArray, parser);\n          break;\n          \n        case JSONParser.OBJECT_START:\n          if( stack.isEmpty() ) {\n            stack.push( new SolrInputDocument() );\n          }\n          else {\n            obj = stack.peek();\n            if( obj instanceof SolrInputField ) {\n              // should alreay be pushed...\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"should not start new object with: \"+obj + \" [\"+ parser.getPosition()+\"]\" );\n            }\n          }\n          break;\n          \n        case JSONParser.OBJECT_END:\n          obj = stack.pop();\n          if( obj instanceof SolrInputDocument ) {\n            return (SolrInputDocument)obj;\n          }\n          else if( obj instanceof SolrInputField ) {\n            // should already be pushed...\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"should not start new object with: \"+obj + \" [\"+ parser.getPosition()+\"]\" );\n          }\n          break;\n\n        case JSONParser.ARRAY_START:\n          inArray = true;\n          break;\n          \n        case JSONParser.ARRAY_END:\n          inArray = false;\n          stack.pop(); // the val should have done it...\n          break;\n          \n        default:\n          System.out.println(\"UNKNOWN_EVENT_ID:\"+ev);\n          break;\n      }\n\n      ev = parser.nextEvent();\n      if( ev == JSONParser.EOF ) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"should finish doc first!\" );\n      }\n    }\n  }\n\n","sourceOld":"  SolrInputDocument parseDoc( int ev, JSONParser js ) throws IOException\n  {\n    Stack<Object> stack = new Stack<Object>();\n    Object obj = null;\n    boolean inArray = false;\n    \n    if( ev != JSONParser.OBJECT_START ) {\n      throw new IOException( \"object should already be started\" );\n    }\n    \n    while( true ) {\n      //System.out.println( ev + \"[\"+JSONParser.getEventString(ev)+\"] \"+js.wasKey() ); //+ js.getString() );\n\n      switch (ev) {\n        case JSONParser.STRING:\n          if( js.wasKey() ) {\n            obj = stack.peek();\n            String v = js.getString();\n            if( obj instanceof SolrInputField ) {\n              SolrInputField field = (SolrInputField)obj;\n              if( \"boost\".equals( v ) ) {\n                ev = js.nextEvent();\n                if( ev != JSONParser.NUMBER &&\n                    ev != JSONParser.LONG &&  \n                    ev != JSONParser.BIGNUMBER ) {\n                  throw new IOException( \"boost should have number! \"+JSONParser.getEventString(ev) );\n                }\n                field.setBoost( Float.valueOf( js.getNumberChars().toString() ) );\n              }\n              else if( \"value\".equals( v  ) ) {\n                // nothing special...\n                stack.push( field ); // so it can be popped\n              }\n              else {\n                throw new IOException( \"invalid key: \"+v + \" [\"+js.getPosition()+\"]\" );\n              }\n            }\n            else if( obj instanceof SolrInputDocument ) {\n              SolrInputDocument doc = (SolrInputDocument)obj;\n              SolrInputField f = doc.get( v );\n              if( f == null ) {\n                f = new SolrInputField( v );\n                doc.put( f.getName(), f );\n              }\n              stack.push( f );\n            }\n            else {\n              throw new IOException( \"hymmm [\"+js.getPosition()+\"]\" );\n            }\n          }\n          else {\n            addValToField(stack, js.getString(), inArray, js);\n          }\n          break;\n\n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n          addValToField(stack, js.getNumberChars().toString(), inArray, js);\n          break;\n          \n        case JSONParser.BOOLEAN:\n          addValToField(stack, js.getBoolean(),inArray, js);\n          break;\n          \n        case JSONParser.OBJECT_START:\n          if( stack.isEmpty() ) {\n            stack.push( new SolrInputDocument() );\n          }\n          else {\n            obj = stack.peek();\n            if( obj instanceof SolrInputField ) {\n              // should alreay be pushed...\n            }\n            else {\n              throw new IOException( \"should not start new object with: \"+obj + \" [\"+js.getPosition()+\"]\" );\n            }\n          }\n          break;\n          \n        case JSONParser.OBJECT_END:\n          obj = stack.pop();\n          if( obj instanceof SolrInputDocument ) {\n            return (SolrInputDocument)obj;\n          }\n          else if( obj instanceof SolrInputField ) {\n            // should already be pushed...\n          }\n          else {\n            throw new IOException( \"should not start new object with: \"+obj + \" [\"+js.getPosition()+\"]\" );\n          }\n          break;\n\n        case JSONParser.ARRAY_START:\n          inArray = true;\n          break;\n          \n        case JSONParser.ARRAY_END:\n          inArray = false;\n          stack.pop(); // the val should have done it...\n          break;\n          \n        default:\n          System.out.println(\"UNKNOWN_EVENT_ID:\"+ev);\n          break;\n      }\n\n      ev = js.nextEvent();\n      if( ev == JSONParser.EOF ) {\n        throw new IOException( \"should finish doc first!\" );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/JsonLoader#parseDoc(int).mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#parseDoc(int,JSONParser).mjava","sourceNew":"  SolrInputDocument parseDoc(int ev) throws IOException\n  {\n    Stack<Object> stack = new Stack<Object>();\n    Object obj = null;\n    boolean inArray = false;\n    \n    if( ev != JSONParser.OBJECT_START ) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"object should already be started\" );\n    }\n    \n    while( true ) {\n      //System.out.println( ev + \"[\"+JSONParser.getEventString(ev)+\"] \"+parser.wasKey() ); //+ parser.getString() );\n\n      switch (ev) {\n        case JSONParser.STRING:\n          if( parser.wasKey() ) {\n            obj = stack.peek();\n            String v = parser.getString();\n            if( obj instanceof SolrInputField ) {\n              SolrInputField field = (SolrInputField)obj;\n              if( \"boost\".equals( v ) ) {\n                ev = parser.nextEvent();\n                if( ev != JSONParser.NUMBER &&\n                    ev != JSONParser.LONG &&  \n                    ev != JSONParser.BIGNUMBER ) {\n                  throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"boost should have number! \"+JSONParser.getEventString(ev) );\n                }\n                field.setBoost( Float.valueOf( parser.getNumberChars().toString() ) );\n              }\n              else if( \"value\".equals( v  ) ) {\n                // nothing special...\n                stack.push( field ); // so it can be popped\n              }\n              else {\n                throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"invalid key: \"+v + \" [\"+ parser.getPosition()+\"]\" );\n              }\n            }\n            else if( obj instanceof SolrInputDocument ) {\n              SolrInputDocument doc = (SolrInputDocument)obj;\n              SolrInputField f = doc.get( v );\n              if( f == null ) {\n                f = new SolrInputField( v );\n                doc.put( f.getName(), f );\n              }\n              stack.push( f );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"hymmm [\"+ parser.getPosition()+\"]\" );\n            }\n          }\n          else {\n            addValToField(stack, parser.getString(), inArray, parser);\n          }\n          break;\n\n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n          addValToField(stack, parser.getNumberChars().toString(), inArray, parser);\n          break;\n          \n        case JSONParser.BOOLEAN:\n          addValToField(stack, parser.getBoolean(),inArray, parser);\n          break;\n          \n        case JSONParser.OBJECT_START:\n          if( stack.isEmpty() ) {\n            stack.push( new SolrInputDocument() );\n          }\n          else {\n            obj = stack.peek();\n            if( obj instanceof SolrInputField ) {\n              // should alreay be pushed...\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"should not start new object with: \"+obj + \" [\"+ parser.getPosition()+\"]\" );\n            }\n          }\n          break;\n          \n        case JSONParser.OBJECT_END:\n          obj = stack.pop();\n          if( obj instanceof SolrInputDocument ) {\n            return (SolrInputDocument)obj;\n          }\n          else if( obj instanceof SolrInputField ) {\n            // should already be pushed...\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"should not start new object with: \"+obj + \" [\"+ parser.getPosition()+\"]\" );\n          }\n          break;\n\n        case JSONParser.ARRAY_START:\n          inArray = true;\n          break;\n          \n        case JSONParser.ARRAY_END:\n          inArray = false;\n          stack.pop(); // the val should have done it...\n          break;\n          \n        default:\n          System.out.println(\"UNKNOWN_EVENT_ID:\"+ev);\n          break;\n      }\n\n      ev = parser.nextEvent();\n      if( ev == JSONParser.EOF ) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"should finish doc first!\" );\n      }\n    }\n  }\n\n","sourceOld":"  SolrInputDocument parseDoc( int ev, JSONParser js ) throws IOException\n  {\n    Stack<Object> stack = new Stack<Object>();\n    Object obj = null;\n    boolean inArray = false;\n    \n    if( ev != JSONParser.OBJECT_START ) {\n      throw new IOException( \"object should already be started\" );\n    }\n    \n    while( true ) {\n      //System.out.println( ev + \"[\"+JSONParser.getEventString(ev)+\"] \"+js.wasKey() ); //+ js.getString() );\n\n      switch (ev) {\n        case JSONParser.STRING:\n          if( js.wasKey() ) {\n            obj = stack.peek();\n            String v = js.getString();\n            if( obj instanceof SolrInputField ) {\n              SolrInputField field = (SolrInputField)obj;\n              if( \"boost\".equals( v ) ) {\n                ev = js.nextEvent();\n                if( ev != JSONParser.NUMBER &&\n                    ev != JSONParser.LONG &&  \n                    ev != JSONParser.BIGNUMBER ) {\n                  throw new IOException( \"boost should have number! \"+JSONParser.getEventString(ev) );\n                }\n                field.setBoost( Float.valueOf( js.getNumberChars().toString() ) );\n              }\n              else if( \"value\".equals( v  ) ) {\n                // nothing special...\n                stack.push( field ); // so it can be popped\n              }\n              else {\n                throw new IOException( \"invalid key: \"+v + \" [\"+js.getPosition()+\"]\" );\n              }\n            }\n            else if( obj instanceof SolrInputDocument ) {\n              SolrInputDocument doc = (SolrInputDocument)obj;\n              SolrInputField f = doc.get( v );\n              if( f == null ) {\n                f = new SolrInputField( v );\n                doc.put( f.getName(), f );\n              }\n              stack.push( f );\n            }\n            else {\n              throw new IOException( \"hymmm [\"+js.getPosition()+\"]\" );\n            }\n          }\n          else {\n            addValToField(stack, js.getString(), inArray, js);\n          }\n          break;\n\n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n          addValToField(stack, js.getNumberChars().toString(), inArray, js);\n          break;\n          \n        case JSONParser.BOOLEAN:\n          addValToField(stack, js.getBoolean(),inArray, js);\n          break;\n          \n        case JSONParser.OBJECT_START:\n          if( stack.isEmpty() ) {\n            stack.push( new SolrInputDocument() );\n          }\n          else {\n            obj = stack.peek();\n            if( obj instanceof SolrInputField ) {\n              // should alreay be pushed...\n            }\n            else {\n              throw new IOException( \"should not start new object with: \"+obj + \" [\"+js.getPosition()+\"]\" );\n            }\n          }\n          break;\n          \n        case JSONParser.OBJECT_END:\n          obj = stack.pop();\n          if( obj instanceof SolrInputDocument ) {\n            return (SolrInputDocument)obj;\n          }\n          else if( obj instanceof SolrInputField ) {\n            // should already be pushed...\n          }\n          else {\n            throw new IOException( \"should not start new object with: \"+obj + \" [\"+js.getPosition()+\"]\" );\n          }\n          break;\n\n        case JSONParser.ARRAY_START:\n          inArray = true;\n          break;\n          \n        case JSONParser.ARRAY_END:\n          inArray = false;\n          stack.pop(); // the val should have done it...\n          break;\n          \n        default:\n          System.out.println(\"UNKNOWN_EVENT_ID:\"+ev);\n          break;\n      }\n\n      ev = js.nextEvent();\n      if( ev == JSONParser.EOF ) {\n        throw new IOException( \"should finish doc first!\" );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#parseDoc(int,JSONParser).mjava","sourceNew":null,"sourceOld":"  SolrInputDocument parseDoc( int ev, JSONParser js ) throws IOException\n  {\n    Stack<Object> stack = new Stack<Object>();\n    Object obj = null;\n    boolean inArray = false;\n    \n    if( ev != JSONParser.OBJECT_START ) {\n      throw new IOException( \"object should already be started\" );\n    }\n    \n    while( true ) {\n      //System.out.println( ev + \"[\"+JSONParser.getEventString(ev)+\"] \"+js.wasKey() ); //+ js.getString() );\n\n      switch (ev) {\n        case JSONParser.STRING:\n          if( js.wasKey() ) {\n            obj = stack.peek();\n            String v = js.getString();\n            if( obj instanceof SolrInputField ) {\n              SolrInputField field = (SolrInputField)obj;\n              if( \"boost\".equals( v ) ) {\n                ev = js.nextEvent();\n                if( ev != JSONParser.NUMBER &&\n                    ev != JSONParser.LONG &&  \n                    ev != JSONParser.BIGNUMBER ) {\n                  throw new IOException( \"boost should have number! \"+JSONParser.getEventString(ev) );\n                }\n                field.setBoost( Float.valueOf( js.getNumberChars().toString() ) );\n              }\n              else if( \"value\".equals( v  ) ) {\n                // nothing special...\n                stack.push( field ); // so it can be popped\n              }\n              else {\n                throw new IOException( \"invalid key: \"+v + \" [\"+js.getPosition()+\"]\" );\n              }\n            }\n            else if( obj instanceof SolrInputDocument ) {\n              SolrInputDocument doc = (SolrInputDocument)obj;\n              SolrInputField f = doc.get( v );\n              if( f == null ) {\n                f = new SolrInputField( v );\n                doc.put( f.getName(), f );\n              }\n              stack.push( f );\n            }\n            else {\n              throw new IOException( \"hymmm [\"+js.getPosition()+\"]\" );\n            }\n          }\n          else {\n            addValToField(stack, js.getString(), inArray, js);\n          }\n          break;\n\n        case JSONParser.LONG:\n        case JSONParser.NUMBER:\n        case JSONParser.BIGNUMBER:\n          addValToField(stack, js.getNumberChars().toString(), inArray, js);\n          break;\n          \n        case JSONParser.BOOLEAN:\n          addValToField(stack, js.getBoolean(),inArray, js);\n          break;\n          \n        case JSONParser.OBJECT_START:\n          if( stack.isEmpty() ) {\n            stack.push( new SolrInputDocument() );\n          }\n          else {\n            obj = stack.peek();\n            if( obj instanceof SolrInputField ) {\n              // should alreay be pushed...\n            }\n            else {\n              throw new IOException( \"should not start new object with: \"+obj + \" [\"+js.getPosition()+\"]\" );\n            }\n          }\n          break;\n          \n        case JSONParser.OBJECT_END:\n          obj = stack.pop();\n          if( obj instanceof SolrInputDocument ) {\n            return (SolrInputDocument)obj;\n          }\n          else if( obj instanceof SolrInputField ) {\n            // should already be pushed...\n          }\n          else {\n            throw new IOException( \"should not start new object with: \"+obj + \" [\"+js.getPosition()+\"]\" );\n          }\n          break;\n\n        case JSONParser.ARRAY_START:\n          inArray = true;\n          break;\n          \n        case JSONParser.ARRAY_END:\n          inArray = false;\n          stack.pop(); // the val should have done it...\n          break;\n          \n        default:\n          System.out.println(\"UNKNOWN_EVENT_ID:\"+ev);\n          break;\n      }\n\n      ev = js.nextEvent();\n      if( ev == JSONParser.EOF ) {\n        throw new IOException( \"should finish doc first!\" );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"19b15db2edd4d6bec35a41e44d8f1afe6384a905":["bc00220e3dec859110781d5d19a6116501fb4a38"],"a3776dccca01c11e7046323cfad46a3b4a471233":["bc00220e3dec859110781d5d19a6116501fb4a38","19b15db2edd4d6bec35a41e44d8f1afe6384a905"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["bc00220e3dec859110781d5d19a6116501fb4a38","19b15db2edd4d6bec35a41e44d8f1afe6384a905"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19b15db2edd4d6bec35a41e44d8f1afe6384a905"],"bc00220e3dec859110781d5d19a6116501fb4a38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"19b15db2edd4d6bec35a41e44d8f1afe6384a905":["a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bc00220e3dec859110781d5d19a6116501fb4a38"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":[],"bc00220e3dec859110781d5d19a6116501fb4a38":["19b15db2edd4d6bec35a41e44d8f1afe6384a905","a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}