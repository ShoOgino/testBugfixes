{"path":"src/java/org/apache/solr/core/CoreDescriptor#setCoreProperties(Properties).mjava","commits":[{"id":"1ddc2fd411184c85d1baed1e8d24840a151d6ba1","date":1219508719,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreDescriptor#setCoreProperties(Properties).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Set this core's properties. Please note that some implicit values will be added to the\n   * Properties instance passed into this method. This means that the Properties instance\n   * set to this method will have different (less) key/value pairs than the Properties\n   * instance returned by #getCoreProperties method.\n   * \n   * @param coreProperties\n   */\n  public void setCoreProperties(Properties coreProperties) {\n    if (this.coreProperties == null) {\n      Properties p = initImplicitProperties();\n      this.coreProperties = new Properties(p);\n      this.coreProperties.putAll(coreProperties);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["6ca7b346301e4b516701df57860db765f0cc5cc9","6ca7b346301e4b516701df57860db765f0cc5cc9","6ca7b346301e4b516701df57860db765f0cc5cc9","ac3406c910effa83ea816734f00ac4b4401df1bd"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ac3406c910effa83ea816734f00ac4b4401df1bd","date":1219677343,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreDescriptor#setCoreProperties(Properties).mjava","pathOld":"src/java/org/apache/solr/core/CoreDescriptor#setCoreProperties(Properties).mjava","sourceNew":"  /**\n   * Set this core's properties. Please note that some implicit values will be added to the\n   * Properties instance passed into this method. This means that the Properties instance\n   * set to this method will have different (less) key/value pairs than the Properties\n   * instance returned by #getCoreProperties method.\n   * \n   * @param coreProperties\n   */\n  void setCoreProperties(Properties coreProperties) {\n    if (this.coreProperties == null) {\n      Properties p = initImplicitProperties();\n      this.coreProperties = new Properties(p);\n      this.coreProperties.putAll(coreProperties);\n    }\n  }\n\n","sourceOld":"  /**\n   * Set this core's properties. Please note that some implicit values will be added to the\n   * Properties instance passed into this method. This means that the Properties instance\n   * set to this method will have different (less) key/value pairs than the Properties\n   * instance returned by #getCoreProperties method.\n   * \n   * @param coreProperties\n   */\n  public void setCoreProperties(Properties coreProperties) {\n    if (this.coreProperties == null) {\n      Properties p = initImplicitProperties();\n      this.coreProperties = new Properties(p);\n      this.coreProperties.putAll(coreProperties);\n    }\n  }\n\n","bugFix":["1ddc2fd411184c85d1baed1e8d24840a151d6ba1"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f2d0ad8759bad601c993ea6eda6e5df1c2db2b28","date":1233124258,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreDescriptor#setCoreProperties(Properties).mjava","pathOld":"src/java/org/apache/solr/core/CoreDescriptor#setCoreProperties(Properties).mjava","sourceNew":"  /**\n   * Set this core's properties. Please note that some implicit values will be added to the\n   * Properties instance passed into this method. This means that the Properties instance\n   * set to this method will have different (less) key/value pairs than the Properties\n   * instance returned by #getCoreProperties method.\n   * \n   * @param coreProperties\n   */\n  public void setCoreProperties(Properties coreProperties) {\n    if (this.coreProperties == null) {\n      Properties p = initImplicitProperties();\n      this.coreProperties = new Properties(p);\n      if(coreProperties != null)\n        this.coreProperties.putAll(coreProperties);\n    }\n  }\n\n","sourceOld":"  /**\n   * Set this core's properties. Please note that some implicit values will be added to the\n   * Properties instance passed into this method. This means that the Properties instance\n   * set to this method will have different (less) key/value pairs than the Properties\n   * instance returned by #getCoreProperties method.\n   * \n   * @param coreProperties\n   */\n  void setCoreProperties(Properties coreProperties) {\n    if (this.coreProperties == null) {\n      Properties p = initImplicitProperties();\n      this.coreProperties = new Properties(p);\n      this.coreProperties.putAll(coreProperties);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/CoreDescriptor#setCoreProperties(Properties).mjava","pathOld":"src/java/org/apache/solr/core/CoreDescriptor#setCoreProperties(Properties).mjava","sourceNew":"  /**\n   * Set this core's properties. Please note that some implicit values will be added to the\n   * Properties instance passed into this method. This means that the Properties instance\n   * set to this method will have different (less) key/value pairs than the Properties\n   * instance returned by #getCoreProperties method.\n   * \n   * @param coreProperties\n   */\n  public void setCoreProperties(Properties coreProperties) {\n    if (this.coreProperties == null) {\n      Properties p = initImplicitProperties();\n      this.coreProperties = new Properties(p);\n      if(coreProperties != null)\n        this.coreProperties.putAll(coreProperties);\n    }\n  }\n\n","sourceOld":"  /**\n   * Set this core's properties. Please note that some implicit values will be added to the\n   * Properties instance passed into this method. This means that the Properties instance\n   * set to this method will have different (less) key/value pairs than the Properties\n   * instance returned by #getCoreProperties method.\n   * \n   * @param coreProperties\n   */\n  public void setCoreProperties(Properties coreProperties) {\n    if (this.coreProperties == null) {\n      Properties p = initImplicitProperties();\n      this.coreProperties = new Properties(p);\n      if(coreProperties != null)\n        this.coreProperties.putAll(coreProperties);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ac3406c910effa83ea816734f00ac4b4401df1bd":["1ddc2fd411184c85d1baed1e8d24840a151d6ba1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"f2d0ad8759bad601c993ea6eda6e5df1c2db2b28":["ac3406c910effa83ea816734f00ac4b4401df1bd"],"ad94625fb8d088209f46650c8097196fec67f00c":["f2d0ad8759bad601c993ea6eda6e5df1c2db2b28"],"1ddc2fd411184c85d1baed1e8d24840a151d6ba1":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ac3406c910effa83ea816734f00ac4b4401df1bd":["f2d0ad8759bad601c993ea6eda6e5df1c2db2b28"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["1ddc2fd411184c85d1baed1e8d24840a151d6ba1"],"f2d0ad8759bad601c993ea6eda6e5df1c2db2b28":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"1ddc2fd411184c85d1baed1e8d24840a151d6ba1":["ac3406c910effa83ea816734f00ac4b4401df1bd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}