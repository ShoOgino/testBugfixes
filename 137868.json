{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processResponse(NamedList,Throwable,String,SolrResponse,String).mjava","commits":[{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":1,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processResponse(NamedList,Throwable,String,SolrResponse,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#processResponse(NamedList,Throwable,String,SolrResponse,String).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void processResponse(NamedList results, Throwable e, String nodeName, SolrResponse solrResponse, String shard) {\n    if (e != null) {\n      log.error(\"Error from shard: \" + shard, e);\n\n      SimpleOrderedMap failure = (SimpleOrderedMap) results.get(\"failure\");\n      if (failure == null) {\n        failure = new SimpleOrderedMap();\n        results.add(\"failure\", failure);\n      }\n\n      failure.add(nodeName, e.getClass().getName() + \":\" + e.getMessage());\n\n    } else {\n\n      SimpleOrderedMap success = (SimpleOrderedMap) results.get(\"success\");\n      if (success == null) {\n        success = new SimpleOrderedMap();\n        results.add(\"success\", success);\n      }\n\n      success.add(nodeName, solrResponse.getResponse());\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void processResponse(NamedList results, Throwable e, String nodeName, SolrResponse solrResponse, String shard) {\n    if (e != null) {\n      log.error(\"Error from shard: \" + shard, e);\n\n      SimpleOrderedMap failure = (SimpleOrderedMap) results.get(\"failure\");\n      if (failure == null) {\n        failure = new SimpleOrderedMap();\n        results.add(\"failure\", failure);\n      }\n\n      failure.add(nodeName, e.getClass().getName() + \":\" + e.getMessage());\n\n    } else {\n\n      SimpleOrderedMap success = (SimpleOrderedMap) results.get(\"success\");\n      if (success == null) {\n        success = new SimpleOrderedMap();\n        results.add(\"success\", success);\n      }\n\n      success.add(nodeName, solrResponse.getResponse());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9362075f92dff89425ca488b480f70d565d66e7","date":1454985541,"type":5,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processResponse(NamedList,Throwable,String,SolrResponse,String,Set[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processResponse(NamedList,Throwable,String,SolrResponse,String).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void processResponse(NamedList results, Throwable e, String nodeName, SolrResponse solrResponse, String shard, Set<String> okayExceptions) {\n    String rootThrowable = null;\n    if (e instanceof RemoteSolrException) {\n      rootThrowable = ((RemoteSolrException) e).getRootThrowable();\n    }\n\n    if (e != null && (rootThrowable == null || !okayExceptions.contains(rootThrowable))) {\n      log.error(\"Error from shard: \" + shard, e);\n\n      SimpleOrderedMap failure = (SimpleOrderedMap) results.get(\"failure\");\n      if (failure == null) {\n        failure = new SimpleOrderedMap();\n        results.add(\"failure\", failure);\n      }\n\n      failure.add(nodeName, e.getClass().getName() + \":\" + e.getMessage());\n\n    } else {\n\n      SimpleOrderedMap success = (SimpleOrderedMap) results.get(\"success\");\n      if (success == null) {\n        success = new SimpleOrderedMap();\n        results.add(\"success\", success);\n      }\n\n      success.add(nodeName, solrResponse.getResponse());\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void processResponse(NamedList results, Throwable e, String nodeName, SolrResponse solrResponse, String shard) {\n    if (e != null) {\n      log.error(\"Error from shard: \" + shard, e);\n\n      SimpleOrderedMap failure = (SimpleOrderedMap) results.get(\"failure\");\n      if (failure == null) {\n        failure = new SimpleOrderedMap();\n        results.add(\"failure\", failure);\n      }\n\n      failure.add(nodeName, e.getClass().getName() + \":\" + e.getMessage());\n\n    } else {\n\n      SimpleOrderedMap success = (SimpleOrderedMap) results.get(\"success\");\n      if (success == null) {\n        success = new SimpleOrderedMap();\n        results.add(\"success\", success);\n      }\n\n      success.add(nodeName, solrResponse.getResponse());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f9362075f92dff89425ca488b480f70d565d66e7":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f9362075f92dff89425ca488b480f70d565d66e7"]},"commit2Childs":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["f9362075f92dff89425ca488b480f70d565d66e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"f9362075f92dff89425ca488b480f70d565d66e7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}