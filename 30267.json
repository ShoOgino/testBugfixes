{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/response/QueryResponseTest#testGroupResponse().mjava","commits":[{"id":"e837b9e725093b56ed9d86c0ea3fe415bccd4b58","date":1312113179,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/response/QueryResponseTest#testGroupResponse().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testGroupResponse() throws Exception {\n    XMLResponseParser parser = new XMLResponseParser();\n    InputStream is = new SolrResourceLoader(null, null).openResource(\"solrj/sampleGroupResponse.xml\");\n    assertNotNull(is);\n    Reader in = new InputStreamReader(is, \"UTF-8\");\n    NamedList<Object> response = parser.processResponse(in);\n    in.close();\n\n    QueryResponse qr = new QueryResponse(response, null);\n    assertNotNull(qr);\n    GroupResponse groupResponse = qr.getGroupResponse();\n    assertNotNull(groupResponse);\n    List<GroupCommand> commands = groupResponse.getValues();\n    assertNotNull(commands);\n    assertEquals(3, commands.size());\n\n    GroupCommand fieldCommand = commands.get(0);\n    assertEquals(\"acco_id\", fieldCommand.getName());\n    assertEquals(30000000, fieldCommand.getMatches());\n    assertEquals(5687, fieldCommand.getNGroups().intValue());\n    List<Group> fieldCommandGroups = fieldCommand.getValues();\n    assertEquals(10, fieldCommandGroups.size());\n    assertEquals(\"116_ar\", fieldCommandGroups.get(0).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(0).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"116_hi\", fieldCommandGroups.get(1).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(1).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"953_ar\", fieldCommandGroups.get(2).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(2).getResult().size());\n    assertEquals(1020, fieldCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"953_hi\", fieldCommandGroups.get(3).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(3).getResult().size());\n    assertEquals(1030, fieldCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"954_ar\", fieldCommandGroups.get(4).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(4).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"954_hi\", fieldCommandGroups.get(5).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(5).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"546_ar\", fieldCommandGroups.get(6).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(6).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"546_hi\", fieldCommandGroups.get(7).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(7).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"708_ar\", fieldCommandGroups.get(8).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(8).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"708_hi\", fieldCommandGroups.get(9).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(9).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand funcCommand = commands.get(1);\n    assertEquals(\"sum(price, price)\", funcCommand.getName());\n    assertEquals(30000000, funcCommand.getMatches());\n    assertNull(funcCommand.getNGroups());\n    List<Group> funcCommandGroups = funcCommand.getValues();\n    assertEquals(10, funcCommandGroups.size());\n    assertEquals(\"95000.0\", funcCommandGroups.get(0).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(0).getResult().size());\n    assertEquals(43666, funcCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"91400.0\", funcCommandGroups.get(1).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(1).getResult().size());\n    assertEquals(27120, funcCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"104800.0\", funcCommandGroups.get(2).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(2).getResult().size());\n    assertEquals(34579, funcCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"99400.0\", funcCommandGroups.get(3).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(3).getResult().size());\n    assertEquals(40519, funcCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"109600.0\", funcCommandGroups.get(4).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(4).getResult().size());\n    assertEquals(36203, funcCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"102400.0\", funcCommandGroups.get(5).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(5).getResult().size());\n    assertEquals(37852, funcCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"116800.0\", funcCommandGroups.get(6).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(6).getResult().size());\n    assertEquals(40393, funcCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"107800.0\", funcCommandGroups.get(7).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(7).getResult().size());\n    assertEquals(41639, funcCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"136200.0\", funcCommandGroups.get(8).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(8).getResult().size());\n    assertEquals(25929, funcCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"131400.0\", funcCommandGroups.get(9).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(9).getResult().size());\n    assertEquals(29179, funcCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand queryCommand = commands.get(2);\n    assertEquals(\"country:fr\", queryCommand.getName());\n    assertNull(queryCommand.getNGroups());\n    assertEquals(30000000, queryCommand.getMatches());\n    List<Group> queryCommandGroups = queryCommand.getValues();\n    assertEquals(1, queryCommandGroups.size());\n    assertEquals(\"country:fr\", queryCommandGroups.get(0).getGroupValue());\n    assertEquals(2, queryCommandGroups.get(0).getResult().size());\n    assertEquals(57074, queryCommandGroups.get(0).getResult().getNumFound());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d3d365762604952e436b51980101dfc84cc1b3e","date":1396298116,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/response/QueryResponseTest#testGroupResponse().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/response/QueryResponseTest#testGroupResponse().mjava","sourceNew":"  @Test\n  public void testGroupResponse() throws Exception {\n    XMLResponseParser parser = new XMLResponseParser();\n    InputStream is = new SolrResourceLoader(null, null).openResource(\"solrj/sampleGroupResponse.xml\");\n    assertNotNull(is);\n    Reader in = new InputStreamReader(is, StandardCharsets.UTF_8);\n    NamedList<Object> response = parser.processResponse(in);\n    in.close();\n\n    QueryResponse qr = new QueryResponse(response, null);\n    assertNotNull(qr);\n    GroupResponse groupResponse = qr.getGroupResponse();\n    assertNotNull(groupResponse);\n    List<GroupCommand> commands = groupResponse.getValues();\n    assertNotNull(commands);\n    assertEquals(3, commands.size());\n\n    GroupCommand fieldCommand = commands.get(0);\n    assertEquals(\"acco_id\", fieldCommand.getName());\n    assertEquals(30000000, fieldCommand.getMatches());\n    assertEquals(5687, fieldCommand.getNGroups().intValue());\n    List<Group> fieldCommandGroups = fieldCommand.getValues();\n    assertEquals(10, fieldCommandGroups.size());\n    assertEquals(\"116_ar\", fieldCommandGroups.get(0).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(0).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"116_hi\", fieldCommandGroups.get(1).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(1).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"953_ar\", fieldCommandGroups.get(2).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(2).getResult().size());\n    assertEquals(1020, fieldCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"953_hi\", fieldCommandGroups.get(3).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(3).getResult().size());\n    assertEquals(1030, fieldCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"954_ar\", fieldCommandGroups.get(4).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(4).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"954_hi\", fieldCommandGroups.get(5).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(5).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"546_ar\", fieldCommandGroups.get(6).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(6).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"546_hi\", fieldCommandGroups.get(7).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(7).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"708_ar\", fieldCommandGroups.get(8).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(8).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"708_hi\", fieldCommandGroups.get(9).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(9).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand funcCommand = commands.get(1);\n    assertEquals(\"sum(price, price)\", funcCommand.getName());\n    assertEquals(30000000, funcCommand.getMatches());\n    assertNull(funcCommand.getNGroups());\n    List<Group> funcCommandGroups = funcCommand.getValues();\n    assertEquals(10, funcCommandGroups.size());\n    assertEquals(\"95000.0\", funcCommandGroups.get(0).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(0).getResult().size());\n    assertEquals(43666, funcCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"91400.0\", funcCommandGroups.get(1).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(1).getResult().size());\n    assertEquals(27120, funcCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"104800.0\", funcCommandGroups.get(2).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(2).getResult().size());\n    assertEquals(34579, funcCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"99400.0\", funcCommandGroups.get(3).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(3).getResult().size());\n    assertEquals(40519, funcCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"109600.0\", funcCommandGroups.get(4).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(4).getResult().size());\n    assertEquals(36203, funcCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"102400.0\", funcCommandGroups.get(5).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(5).getResult().size());\n    assertEquals(37852, funcCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"116800.0\", funcCommandGroups.get(6).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(6).getResult().size());\n    assertEquals(40393, funcCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"107800.0\", funcCommandGroups.get(7).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(7).getResult().size());\n    assertEquals(41639, funcCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"136200.0\", funcCommandGroups.get(8).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(8).getResult().size());\n    assertEquals(25929, funcCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"131400.0\", funcCommandGroups.get(9).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(9).getResult().size());\n    assertEquals(29179, funcCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand queryCommand = commands.get(2);\n    assertEquals(\"country:fr\", queryCommand.getName());\n    assertNull(queryCommand.getNGroups());\n    assertEquals(30000000, queryCommand.getMatches());\n    List<Group> queryCommandGroups = queryCommand.getValues();\n    assertEquals(1, queryCommandGroups.size());\n    assertEquals(\"country:fr\", queryCommandGroups.get(0).getGroupValue());\n    assertEquals(2, queryCommandGroups.get(0).getResult().size());\n    assertEquals(57074, queryCommandGroups.get(0).getResult().getNumFound());\n  }\n\n","sourceOld":"  @Test\n  public void testGroupResponse() throws Exception {\n    XMLResponseParser parser = new XMLResponseParser();\n    InputStream is = new SolrResourceLoader(null, null).openResource(\"solrj/sampleGroupResponse.xml\");\n    assertNotNull(is);\n    Reader in = new InputStreamReader(is, \"UTF-8\");\n    NamedList<Object> response = parser.processResponse(in);\n    in.close();\n\n    QueryResponse qr = new QueryResponse(response, null);\n    assertNotNull(qr);\n    GroupResponse groupResponse = qr.getGroupResponse();\n    assertNotNull(groupResponse);\n    List<GroupCommand> commands = groupResponse.getValues();\n    assertNotNull(commands);\n    assertEquals(3, commands.size());\n\n    GroupCommand fieldCommand = commands.get(0);\n    assertEquals(\"acco_id\", fieldCommand.getName());\n    assertEquals(30000000, fieldCommand.getMatches());\n    assertEquals(5687, fieldCommand.getNGroups().intValue());\n    List<Group> fieldCommandGroups = fieldCommand.getValues();\n    assertEquals(10, fieldCommandGroups.size());\n    assertEquals(\"116_ar\", fieldCommandGroups.get(0).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(0).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"116_hi\", fieldCommandGroups.get(1).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(1).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"953_ar\", fieldCommandGroups.get(2).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(2).getResult().size());\n    assertEquals(1020, fieldCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"953_hi\", fieldCommandGroups.get(3).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(3).getResult().size());\n    assertEquals(1030, fieldCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"954_ar\", fieldCommandGroups.get(4).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(4).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"954_hi\", fieldCommandGroups.get(5).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(5).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"546_ar\", fieldCommandGroups.get(6).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(6).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"546_hi\", fieldCommandGroups.get(7).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(7).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"708_ar\", fieldCommandGroups.get(8).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(8).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"708_hi\", fieldCommandGroups.get(9).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(9).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand funcCommand = commands.get(1);\n    assertEquals(\"sum(price, price)\", funcCommand.getName());\n    assertEquals(30000000, funcCommand.getMatches());\n    assertNull(funcCommand.getNGroups());\n    List<Group> funcCommandGroups = funcCommand.getValues();\n    assertEquals(10, funcCommandGroups.size());\n    assertEquals(\"95000.0\", funcCommandGroups.get(0).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(0).getResult().size());\n    assertEquals(43666, funcCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"91400.0\", funcCommandGroups.get(1).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(1).getResult().size());\n    assertEquals(27120, funcCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"104800.0\", funcCommandGroups.get(2).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(2).getResult().size());\n    assertEquals(34579, funcCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"99400.0\", funcCommandGroups.get(3).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(3).getResult().size());\n    assertEquals(40519, funcCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"109600.0\", funcCommandGroups.get(4).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(4).getResult().size());\n    assertEquals(36203, funcCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"102400.0\", funcCommandGroups.get(5).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(5).getResult().size());\n    assertEquals(37852, funcCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"116800.0\", funcCommandGroups.get(6).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(6).getResult().size());\n    assertEquals(40393, funcCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"107800.0\", funcCommandGroups.get(7).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(7).getResult().size());\n    assertEquals(41639, funcCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"136200.0\", funcCommandGroups.get(8).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(8).getResult().size());\n    assertEquals(25929, funcCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"131400.0\", funcCommandGroups.get(9).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(9).getResult().size());\n    assertEquals(29179, funcCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand queryCommand = commands.get(2);\n    assertEquals(\"country:fr\", queryCommand.getName());\n    assertNull(queryCommand.getNGroups());\n    assertEquals(30000000, queryCommand.getMatches());\n    List<Group> queryCommandGroups = queryCommand.getValues();\n    assertEquals(1, queryCommandGroups.size());\n    assertEquals(\"country:fr\", queryCommandGroups.get(0).getGroupValue());\n    assertEquals(2, queryCommandGroups.get(0).getResult().size());\n    assertEquals(57074, queryCommandGroups.get(0).getResult().getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/response/QueryResponseTest#testGroupResponse().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/response/QueryResponseTest#testGroupResponse().mjava","sourceNew":"  @Test\n  public void testGroupResponse() throws Exception {\n    XMLResponseParser parser = new XMLResponseParser();\n    InputStream is = new SolrResourceLoader(null, null).openResource(\"solrj/sampleGroupResponse.xml\");\n    assertNotNull(is);\n    Reader in = new InputStreamReader(is, StandardCharsets.UTF_8);\n    NamedList<Object> response = parser.processResponse(in);\n    in.close();\n\n    QueryResponse qr = new QueryResponse(response, null);\n    assertNotNull(qr);\n    GroupResponse groupResponse = qr.getGroupResponse();\n    assertNotNull(groupResponse);\n    List<GroupCommand> commands = groupResponse.getValues();\n    assertNotNull(commands);\n    assertEquals(3, commands.size());\n\n    GroupCommand fieldCommand = commands.get(0);\n    assertEquals(\"acco_id\", fieldCommand.getName());\n    assertEquals(30000000, fieldCommand.getMatches());\n    assertEquals(5687, fieldCommand.getNGroups().intValue());\n    List<Group> fieldCommandGroups = fieldCommand.getValues();\n    assertEquals(10, fieldCommandGroups.size());\n    assertEquals(\"116_ar\", fieldCommandGroups.get(0).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(0).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"116_hi\", fieldCommandGroups.get(1).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(1).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"953_ar\", fieldCommandGroups.get(2).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(2).getResult().size());\n    assertEquals(1020, fieldCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"953_hi\", fieldCommandGroups.get(3).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(3).getResult().size());\n    assertEquals(1030, fieldCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"954_ar\", fieldCommandGroups.get(4).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(4).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"954_hi\", fieldCommandGroups.get(5).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(5).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"546_ar\", fieldCommandGroups.get(6).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(6).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"546_hi\", fieldCommandGroups.get(7).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(7).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"708_ar\", fieldCommandGroups.get(8).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(8).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"708_hi\", fieldCommandGroups.get(9).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(9).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand funcCommand = commands.get(1);\n    assertEquals(\"sum(price, price)\", funcCommand.getName());\n    assertEquals(30000000, funcCommand.getMatches());\n    assertNull(funcCommand.getNGroups());\n    List<Group> funcCommandGroups = funcCommand.getValues();\n    assertEquals(10, funcCommandGroups.size());\n    assertEquals(\"95000.0\", funcCommandGroups.get(0).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(0).getResult().size());\n    assertEquals(43666, funcCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"91400.0\", funcCommandGroups.get(1).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(1).getResult().size());\n    assertEquals(27120, funcCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"104800.0\", funcCommandGroups.get(2).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(2).getResult().size());\n    assertEquals(34579, funcCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"99400.0\", funcCommandGroups.get(3).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(3).getResult().size());\n    assertEquals(40519, funcCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"109600.0\", funcCommandGroups.get(4).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(4).getResult().size());\n    assertEquals(36203, funcCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"102400.0\", funcCommandGroups.get(5).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(5).getResult().size());\n    assertEquals(37852, funcCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"116800.0\", funcCommandGroups.get(6).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(6).getResult().size());\n    assertEquals(40393, funcCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"107800.0\", funcCommandGroups.get(7).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(7).getResult().size());\n    assertEquals(41639, funcCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"136200.0\", funcCommandGroups.get(8).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(8).getResult().size());\n    assertEquals(25929, funcCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"131400.0\", funcCommandGroups.get(9).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(9).getResult().size());\n    assertEquals(29179, funcCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand queryCommand = commands.get(2);\n    assertEquals(\"country:fr\", queryCommand.getName());\n    assertNull(queryCommand.getNGroups());\n    assertEquals(30000000, queryCommand.getMatches());\n    List<Group> queryCommandGroups = queryCommand.getValues();\n    assertEquals(1, queryCommandGroups.size());\n    assertEquals(\"country:fr\", queryCommandGroups.get(0).getGroupValue());\n    assertEquals(2, queryCommandGroups.get(0).getResult().size());\n    assertEquals(57074, queryCommandGroups.get(0).getResult().getNumFound());\n  }\n\n","sourceOld":"  @Test\n  public void testGroupResponse() throws Exception {\n    XMLResponseParser parser = new XMLResponseParser();\n    InputStream is = new SolrResourceLoader(null, null).openResource(\"solrj/sampleGroupResponse.xml\");\n    assertNotNull(is);\n    Reader in = new InputStreamReader(is, \"UTF-8\");\n    NamedList<Object> response = parser.processResponse(in);\n    in.close();\n\n    QueryResponse qr = new QueryResponse(response, null);\n    assertNotNull(qr);\n    GroupResponse groupResponse = qr.getGroupResponse();\n    assertNotNull(groupResponse);\n    List<GroupCommand> commands = groupResponse.getValues();\n    assertNotNull(commands);\n    assertEquals(3, commands.size());\n\n    GroupCommand fieldCommand = commands.get(0);\n    assertEquals(\"acco_id\", fieldCommand.getName());\n    assertEquals(30000000, fieldCommand.getMatches());\n    assertEquals(5687, fieldCommand.getNGroups().intValue());\n    List<Group> fieldCommandGroups = fieldCommand.getValues();\n    assertEquals(10, fieldCommandGroups.size());\n    assertEquals(\"116_ar\", fieldCommandGroups.get(0).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(0).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"116_hi\", fieldCommandGroups.get(1).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(1).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"953_ar\", fieldCommandGroups.get(2).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(2).getResult().size());\n    assertEquals(1020, fieldCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"953_hi\", fieldCommandGroups.get(3).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(3).getResult().size());\n    assertEquals(1030, fieldCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"954_ar\", fieldCommandGroups.get(4).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(4).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"954_hi\", fieldCommandGroups.get(5).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(5).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"546_ar\", fieldCommandGroups.get(6).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(6).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"546_hi\", fieldCommandGroups.get(7).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(7).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"708_ar\", fieldCommandGroups.get(8).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(8).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"708_hi\", fieldCommandGroups.get(9).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(9).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand funcCommand = commands.get(1);\n    assertEquals(\"sum(price, price)\", funcCommand.getName());\n    assertEquals(30000000, funcCommand.getMatches());\n    assertNull(funcCommand.getNGroups());\n    List<Group> funcCommandGroups = funcCommand.getValues();\n    assertEquals(10, funcCommandGroups.size());\n    assertEquals(\"95000.0\", funcCommandGroups.get(0).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(0).getResult().size());\n    assertEquals(43666, funcCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"91400.0\", funcCommandGroups.get(1).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(1).getResult().size());\n    assertEquals(27120, funcCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"104800.0\", funcCommandGroups.get(2).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(2).getResult().size());\n    assertEquals(34579, funcCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"99400.0\", funcCommandGroups.get(3).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(3).getResult().size());\n    assertEquals(40519, funcCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"109600.0\", funcCommandGroups.get(4).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(4).getResult().size());\n    assertEquals(36203, funcCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"102400.0\", funcCommandGroups.get(5).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(5).getResult().size());\n    assertEquals(37852, funcCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"116800.0\", funcCommandGroups.get(6).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(6).getResult().size());\n    assertEquals(40393, funcCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"107800.0\", funcCommandGroups.get(7).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(7).getResult().size());\n    assertEquals(41639, funcCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"136200.0\", funcCommandGroups.get(8).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(8).getResult().size());\n    assertEquals(25929, funcCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"131400.0\", funcCommandGroups.get(9).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(9).getResult().size());\n    assertEquals(29179, funcCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand queryCommand = commands.get(2);\n    assertEquals(\"country:fr\", queryCommand.getName());\n    assertNull(queryCommand.getNGroups());\n    assertEquals(30000000, queryCommand.getMatches());\n    List<Group> queryCommandGroups = queryCommand.getValues();\n    assertEquals(1, queryCommandGroups.size());\n    assertEquals(\"country:fr\", queryCommandGroups.get(0).getGroupValue());\n    assertEquals(2, queryCommandGroups.get(0).getResult().size());\n    assertEquals(57074, queryCommandGroups.get(0).getResult().getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/response/QueryResponseTest#testGroupResponse().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/response/QueryResponseTest#testGroupResponse().mjava","sourceNew":"  @Test\n  public void testGroupResponse() throws Exception {\n    XMLResponseParser parser = new XMLResponseParser();\n    InputStream is = new SolrResourceLoader().openResource(\"solrj/sampleGroupResponse.xml\");\n    assertNotNull(is);\n    Reader in = new InputStreamReader(is, StandardCharsets.UTF_8);\n    NamedList<Object> response = parser.processResponse(in);\n    in.close();\n\n    QueryResponse qr = new QueryResponse(response, null);\n    assertNotNull(qr);\n    GroupResponse groupResponse = qr.getGroupResponse();\n    assertNotNull(groupResponse);\n    List<GroupCommand> commands = groupResponse.getValues();\n    assertNotNull(commands);\n    assertEquals(3, commands.size());\n\n    GroupCommand fieldCommand = commands.get(0);\n    assertEquals(\"acco_id\", fieldCommand.getName());\n    assertEquals(30000000, fieldCommand.getMatches());\n    assertEquals(5687, fieldCommand.getNGroups().intValue());\n    List<Group> fieldCommandGroups = fieldCommand.getValues();\n    assertEquals(10, fieldCommandGroups.size());\n    assertEquals(\"116_ar\", fieldCommandGroups.get(0).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(0).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"116_hi\", fieldCommandGroups.get(1).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(1).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"953_ar\", fieldCommandGroups.get(2).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(2).getResult().size());\n    assertEquals(1020, fieldCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"953_hi\", fieldCommandGroups.get(3).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(3).getResult().size());\n    assertEquals(1030, fieldCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"954_ar\", fieldCommandGroups.get(4).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(4).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"954_hi\", fieldCommandGroups.get(5).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(5).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"546_ar\", fieldCommandGroups.get(6).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(6).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"546_hi\", fieldCommandGroups.get(7).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(7).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"708_ar\", fieldCommandGroups.get(8).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(8).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"708_hi\", fieldCommandGroups.get(9).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(9).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand funcCommand = commands.get(1);\n    assertEquals(\"sum(price, price)\", funcCommand.getName());\n    assertEquals(30000000, funcCommand.getMatches());\n    assertNull(funcCommand.getNGroups());\n    List<Group> funcCommandGroups = funcCommand.getValues();\n    assertEquals(10, funcCommandGroups.size());\n    assertEquals(\"95000.0\", funcCommandGroups.get(0).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(0).getResult().size());\n    assertEquals(43666, funcCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"91400.0\", funcCommandGroups.get(1).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(1).getResult().size());\n    assertEquals(27120, funcCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"104800.0\", funcCommandGroups.get(2).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(2).getResult().size());\n    assertEquals(34579, funcCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"99400.0\", funcCommandGroups.get(3).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(3).getResult().size());\n    assertEquals(40519, funcCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"109600.0\", funcCommandGroups.get(4).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(4).getResult().size());\n    assertEquals(36203, funcCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"102400.0\", funcCommandGroups.get(5).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(5).getResult().size());\n    assertEquals(37852, funcCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"116800.0\", funcCommandGroups.get(6).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(6).getResult().size());\n    assertEquals(40393, funcCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"107800.0\", funcCommandGroups.get(7).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(7).getResult().size());\n    assertEquals(41639, funcCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"136200.0\", funcCommandGroups.get(8).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(8).getResult().size());\n    assertEquals(25929, funcCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"131400.0\", funcCommandGroups.get(9).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(9).getResult().size());\n    assertEquals(29179, funcCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand queryCommand = commands.get(2);\n    assertEquals(\"country:fr\", queryCommand.getName());\n    assertNull(queryCommand.getNGroups());\n    assertEquals(30000000, queryCommand.getMatches());\n    List<Group> queryCommandGroups = queryCommand.getValues();\n    assertEquals(1, queryCommandGroups.size());\n    assertEquals(\"country:fr\", queryCommandGroups.get(0).getGroupValue());\n    assertEquals(2, queryCommandGroups.get(0).getResult().size());\n    assertEquals(57074, queryCommandGroups.get(0).getResult().getNumFound());\n  }\n\n","sourceOld":"  @Test\n  public void testGroupResponse() throws Exception {\n    XMLResponseParser parser = new XMLResponseParser();\n    InputStream is = new SolrResourceLoader(null, null).openResource(\"solrj/sampleGroupResponse.xml\");\n    assertNotNull(is);\n    Reader in = new InputStreamReader(is, StandardCharsets.UTF_8);\n    NamedList<Object> response = parser.processResponse(in);\n    in.close();\n\n    QueryResponse qr = new QueryResponse(response, null);\n    assertNotNull(qr);\n    GroupResponse groupResponse = qr.getGroupResponse();\n    assertNotNull(groupResponse);\n    List<GroupCommand> commands = groupResponse.getValues();\n    assertNotNull(commands);\n    assertEquals(3, commands.size());\n\n    GroupCommand fieldCommand = commands.get(0);\n    assertEquals(\"acco_id\", fieldCommand.getName());\n    assertEquals(30000000, fieldCommand.getMatches());\n    assertEquals(5687, fieldCommand.getNGroups().intValue());\n    List<Group> fieldCommandGroups = fieldCommand.getValues();\n    assertEquals(10, fieldCommandGroups.size());\n    assertEquals(\"116_ar\", fieldCommandGroups.get(0).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(0).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"116_hi\", fieldCommandGroups.get(1).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(1).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"953_ar\", fieldCommandGroups.get(2).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(2).getResult().size());\n    assertEquals(1020, fieldCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"953_hi\", fieldCommandGroups.get(3).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(3).getResult().size());\n    assertEquals(1030, fieldCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"954_ar\", fieldCommandGroups.get(4).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(4).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"954_hi\", fieldCommandGroups.get(5).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(5).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"546_ar\", fieldCommandGroups.get(6).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(6).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"546_hi\", fieldCommandGroups.get(7).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(7).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"708_ar\", fieldCommandGroups.get(8).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(8).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"708_hi\", fieldCommandGroups.get(9).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(9).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand funcCommand = commands.get(1);\n    assertEquals(\"sum(price, price)\", funcCommand.getName());\n    assertEquals(30000000, funcCommand.getMatches());\n    assertNull(funcCommand.getNGroups());\n    List<Group> funcCommandGroups = funcCommand.getValues();\n    assertEquals(10, funcCommandGroups.size());\n    assertEquals(\"95000.0\", funcCommandGroups.get(0).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(0).getResult().size());\n    assertEquals(43666, funcCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"91400.0\", funcCommandGroups.get(1).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(1).getResult().size());\n    assertEquals(27120, funcCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"104800.0\", funcCommandGroups.get(2).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(2).getResult().size());\n    assertEquals(34579, funcCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"99400.0\", funcCommandGroups.get(3).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(3).getResult().size());\n    assertEquals(40519, funcCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"109600.0\", funcCommandGroups.get(4).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(4).getResult().size());\n    assertEquals(36203, funcCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"102400.0\", funcCommandGroups.get(5).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(5).getResult().size());\n    assertEquals(37852, funcCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"116800.0\", funcCommandGroups.get(6).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(6).getResult().size());\n    assertEquals(40393, funcCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"107800.0\", funcCommandGroups.get(7).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(7).getResult().size());\n    assertEquals(41639, funcCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"136200.0\", funcCommandGroups.get(8).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(8).getResult().size());\n    assertEquals(25929, funcCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"131400.0\", funcCommandGroups.get(9).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(9).getResult().size());\n    assertEquals(29179, funcCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand queryCommand = commands.get(2);\n    assertEquals(\"country:fr\", queryCommand.getName());\n    assertNull(queryCommand.getNGroups());\n    assertEquals(30000000, queryCommand.getMatches());\n    List<Group> queryCommandGroups = queryCommand.getValues();\n    assertEquals(1, queryCommandGroups.size());\n    assertEquals(\"country:fr\", queryCommandGroups.get(0).getGroupValue());\n    assertEquals(2, queryCommandGroups.get(0).getResult().size());\n    assertEquals(57074, queryCommandGroups.get(0).getResult().getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f15af35d55d70c34451f9df5edeaeff6b31f8cbe","date":1519625627,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/response/QueryResponseTest#testGroupResponse().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/response/QueryResponseTest#testGroupResponse().mjava","sourceNew":"  @Test\n  public void testGroupResponse() throws Exception {\n    XMLResponseParser parser = new XMLResponseParser();\n    NamedList<Object> response = null;\n    try (SolrResourceLoader loader = new SolrResourceLoader();\n         InputStream is = loader.openResource(\"solrj/sampleGroupResponse.xml\")) {\n      assertNotNull(is);\n      try (Reader in = new InputStreamReader(is, StandardCharsets.UTF_8)) {\n        response = parser.processResponse(in);\n      }\n    }\n\n    QueryResponse qr = new QueryResponse(response, null);\n    assertNotNull(qr);\n    GroupResponse groupResponse = qr.getGroupResponse();\n    assertNotNull(groupResponse);\n    List<GroupCommand> commands = groupResponse.getValues();\n    assertNotNull(commands);\n    assertEquals(3, commands.size());\n\n    GroupCommand fieldCommand = commands.get(0);\n    assertEquals(\"acco_id\", fieldCommand.getName());\n    assertEquals(30000000, fieldCommand.getMatches());\n    assertEquals(5687, fieldCommand.getNGroups().intValue());\n    List<Group> fieldCommandGroups = fieldCommand.getValues();\n    assertEquals(10, fieldCommandGroups.size());\n    assertEquals(\"116_ar\", fieldCommandGroups.get(0).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(0).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"116_hi\", fieldCommandGroups.get(1).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(1).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"953_ar\", fieldCommandGroups.get(2).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(2).getResult().size());\n    assertEquals(1020, fieldCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"953_hi\", fieldCommandGroups.get(3).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(3).getResult().size());\n    assertEquals(1030, fieldCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"954_ar\", fieldCommandGroups.get(4).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(4).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"954_hi\", fieldCommandGroups.get(5).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(5).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"546_ar\", fieldCommandGroups.get(6).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(6).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"546_hi\", fieldCommandGroups.get(7).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(7).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"708_ar\", fieldCommandGroups.get(8).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(8).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"708_hi\", fieldCommandGroups.get(9).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(9).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand funcCommand = commands.get(1);\n    assertEquals(\"sum(price, price)\", funcCommand.getName());\n    assertEquals(30000000, funcCommand.getMatches());\n    assertNull(funcCommand.getNGroups());\n    List<Group> funcCommandGroups = funcCommand.getValues();\n    assertEquals(10, funcCommandGroups.size());\n    assertEquals(\"95000.0\", funcCommandGroups.get(0).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(0).getResult().size());\n    assertEquals(43666, funcCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"91400.0\", funcCommandGroups.get(1).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(1).getResult().size());\n    assertEquals(27120, funcCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"104800.0\", funcCommandGroups.get(2).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(2).getResult().size());\n    assertEquals(34579, funcCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"99400.0\", funcCommandGroups.get(3).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(3).getResult().size());\n    assertEquals(40519, funcCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"109600.0\", funcCommandGroups.get(4).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(4).getResult().size());\n    assertEquals(36203, funcCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"102400.0\", funcCommandGroups.get(5).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(5).getResult().size());\n    assertEquals(37852, funcCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"116800.0\", funcCommandGroups.get(6).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(6).getResult().size());\n    assertEquals(40393, funcCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"107800.0\", funcCommandGroups.get(7).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(7).getResult().size());\n    assertEquals(41639, funcCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"136200.0\", funcCommandGroups.get(8).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(8).getResult().size());\n    assertEquals(25929, funcCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"131400.0\", funcCommandGroups.get(9).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(9).getResult().size());\n    assertEquals(29179, funcCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand queryCommand = commands.get(2);\n    assertEquals(\"country:fr\", queryCommand.getName());\n    assertNull(queryCommand.getNGroups());\n    assertEquals(30000000, queryCommand.getMatches());\n    List<Group> queryCommandGroups = queryCommand.getValues();\n    assertEquals(1, queryCommandGroups.size());\n    assertEquals(\"country:fr\", queryCommandGroups.get(0).getGroupValue());\n    assertEquals(2, queryCommandGroups.get(0).getResult().size());\n    assertEquals(57074, queryCommandGroups.get(0).getResult().getNumFound());\n  }\n\n","sourceOld":"  @Test\n  public void testGroupResponse() throws Exception {\n    XMLResponseParser parser = new XMLResponseParser();\n    InputStream is = new SolrResourceLoader().openResource(\"solrj/sampleGroupResponse.xml\");\n    assertNotNull(is);\n    Reader in = new InputStreamReader(is, StandardCharsets.UTF_8);\n    NamedList<Object> response = parser.processResponse(in);\n    in.close();\n\n    QueryResponse qr = new QueryResponse(response, null);\n    assertNotNull(qr);\n    GroupResponse groupResponse = qr.getGroupResponse();\n    assertNotNull(groupResponse);\n    List<GroupCommand> commands = groupResponse.getValues();\n    assertNotNull(commands);\n    assertEquals(3, commands.size());\n\n    GroupCommand fieldCommand = commands.get(0);\n    assertEquals(\"acco_id\", fieldCommand.getName());\n    assertEquals(30000000, fieldCommand.getMatches());\n    assertEquals(5687, fieldCommand.getNGroups().intValue());\n    List<Group> fieldCommandGroups = fieldCommand.getValues();\n    assertEquals(10, fieldCommandGroups.size());\n    assertEquals(\"116_ar\", fieldCommandGroups.get(0).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(0).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"116_hi\", fieldCommandGroups.get(1).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(1).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"953_ar\", fieldCommandGroups.get(2).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(2).getResult().size());\n    assertEquals(1020, fieldCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"953_hi\", fieldCommandGroups.get(3).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(3).getResult().size());\n    assertEquals(1030, fieldCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"954_ar\", fieldCommandGroups.get(4).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(4).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"954_hi\", fieldCommandGroups.get(5).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(5).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"546_ar\", fieldCommandGroups.get(6).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(6).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"546_hi\", fieldCommandGroups.get(7).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(7).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"708_ar\", fieldCommandGroups.get(8).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(8).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"708_hi\", fieldCommandGroups.get(9).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(9).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand funcCommand = commands.get(1);\n    assertEquals(\"sum(price, price)\", funcCommand.getName());\n    assertEquals(30000000, funcCommand.getMatches());\n    assertNull(funcCommand.getNGroups());\n    List<Group> funcCommandGroups = funcCommand.getValues();\n    assertEquals(10, funcCommandGroups.size());\n    assertEquals(\"95000.0\", funcCommandGroups.get(0).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(0).getResult().size());\n    assertEquals(43666, funcCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"91400.0\", funcCommandGroups.get(1).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(1).getResult().size());\n    assertEquals(27120, funcCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"104800.0\", funcCommandGroups.get(2).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(2).getResult().size());\n    assertEquals(34579, funcCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"99400.0\", funcCommandGroups.get(3).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(3).getResult().size());\n    assertEquals(40519, funcCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"109600.0\", funcCommandGroups.get(4).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(4).getResult().size());\n    assertEquals(36203, funcCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"102400.0\", funcCommandGroups.get(5).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(5).getResult().size());\n    assertEquals(37852, funcCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"116800.0\", funcCommandGroups.get(6).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(6).getResult().size());\n    assertEquals(40393, funcCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"107800.0\", funcCommandGroups.get(7).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(7).getResult().size());\n    assertEquals(41639, funcCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"136200.0\", funcCommandGroups.get(8).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(8).getResult().size());\n    assertEquals(25929, funcCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"131400.0\", funcCommandGroups.get(9).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(9).getResult().size());\n    assertEquals(29179, funcCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand queryCommand = commands.get(2);\n    assertEquals(\"country:fr\", queryCommand.getName());\n    assertNull(queryCommand.getNGroups());\n    assertEquals(30000000, queryCommand.getMatches());\n    List<Group> queryCommandGroups = queryCommand.getValues();\n    assertEquals(1, queryCommandGroups.size());\n    assertEquals(\"country:fr\", queryCommandGroups.get(0).getGroupValue());\n    assertEquals(2, queryCommandGroups.get(0).getResult().size());\n    assertEquals(57074, queryCommandGroups.get(0).getResult().getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cba13865da71de3b9b0937fcbc66d726089356d","date":1537507909,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/response/QueryResponseTest#testGroupResponse().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/response/QueryResponseTest#testGroupResponse().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testGroupResponse() throws Exception {\n    XMLResponseParser parser = new XMLResponseParser();\n    NamedList<Object> response = null;\n    try (SolrResourceLoader loader = new SolrResourceLoader();\n         InputStream is = loader.openResource(\"solrj/sampleGroupResponse.xml\")) {\n      assertNotNull(is);\n      try (Reader in = new InputStreamReader(is, StandardCharsets.UTF_8)) {\n        response = parser.processResponse(in);\n      }\n    }\n\n    QueryResponse qr = new QueryResponse(response, null);\n    assertNotNull(qr);\n    GroupResponse groupResponse = qr.getGroupResponse();\n    assertNotNull(groupResponse);\n    List<GroupCommand> commands = groupResponse.getValues();\n    assertNotNull(commands);\n    assertEquals(3, commands.size());\n\n    GroupCommand fieldCommand = commands.get(0);\n    assertEquals(\"acco_id\", fieldCommand.getName());\n    assertEquals(30000000, fieldCommand.getMatches());\n    assertEquals(5687, fieldCommand.getNGroups().intValue());\n    List<Group> fieldCommandGroups = fieldCommand.getValues();\n    assertEquals(10, fieldCommandGroups.size());\n    assertEquals(\"116_ar\", fieldCommandGroups.get(0).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(0).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"116_hi\", fieldCommandGroups.get(1).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(1).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"953_ar\", fieldCommandGroups.get(2).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(2).getResult().size());\n    assertEquals(1020, fieldCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"953_hi\", fieldCommandGroups.get(3).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(3).getResult().size());\n    assertEquals(1030, fieldCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"954_ar\", fieldCommandGroups.get(4).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(4).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"954_hi\", fieldCommandGroups.get(5).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(5).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"546_ar\", fieldCommandGroups.get(6).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(6).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"546_hi\", fieldCommandGroups.get(7).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(7).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"708_ar\", fieldCommandGroups.get(8).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(8).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"708_hi\", fieldCommandGroups.get(9).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(9).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand funcCommand = commands.get(1);\n    assertEquals(\"sum(price, price)\", funcCommand.getName());\n    assertEquals(30000000, funcCommand.getMatches());\n    assertNull(funcCommand.getNGroups());\n    List<Group> funcCommandGroups = funcCommand.getValues();\n    assertEquals(10, funcCommandGroups.size());\n    assertEquals(\"95000.0\", funcCommandGroups.get(0).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(0).getResult().size());\n    assertEquals(43666, funcCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"91400.0\", funcCommandGroups.get(1).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(1).getResult().size());\n    assertEquals(27120, funcCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"104800.0\", funcCommandGroups.get(2).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(2).getResult().size());\n    assertEquals(34579, funcCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"99400.0\", funcCommandGroups.get(3).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(3).getResult().size());\n    assertEquals(40519, funcCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"109600.0\", funcCommandGroups.get(4).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(4).getResult().size());\n    assertEquals(36203, funcCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"102400.0\", funcCommandGroups.get(5).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(5).getResult().size());\n    assertEquals(37852, funcCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"116800.0\", funcCommandGroups.get(6).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(6).getResult().size());\n    assertEquals(40393, funcCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"107800.0\", funcCommandGroups.get(7).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(7).getResult().size());\n    assertEquals(41639, funcCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"136200.0\", funcCommandGroups.get(8).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(8).getResult().size());\n    assertEquals(25929, funcCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"131400.0\", funcCommandGroups.get(9).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(9).getResult().size());\n    assertEquals(29179, funcCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand queryCommand = commands.get(2);\n    assertEquals(\"country:fr\", queryCommand.getName());\n    assertNull(queryCommand.getNGroups());\n    assertEquals(30000000, queryCommand.getMatches());\n    List<Group> queryCommandGroups = queryCommand.getValues();\n    assertEquals(1, queryCommandGroups.size());\n    assertEquals(\"country:fr\", queryCommandGroups.get(0).getGroupValue());\n    assertEquals(2, queryCommandGroups.get(0).getResult().size());\n    assertEquals(57074, queryCommandGroups.get(0).getResult().getNumFound());\n  }\n\n","sourceOld":"  @Test\n  public void testGroupResponse() throws Exception {\n    XMLResponseParser parser = new XMLResponseParser();\n    NamedList<Object> response = null;\n    try (SolrResourceLoader loader = new SolrResourceLoader();\n         InputStream is = loader.openResource(\"solrj/sampleGroupResponse.xml\")) {\n      assertNotNull(is);\n      try (Reader in = new InputStreamReader(is, StandardCharsets.UTF_8)) {\n        response = parser.processResponse(in);\n      }\n    }\n\n    QueryResponse qr = new QueryResponse(response, null);\n    assertNotNull(qr);\n    GroupResponse groupResponse = qr.getGroupResponse();\n    assertNotNull(groupResponse);\n    List<GroupCommand> commands = groupResponse.getValues();\n    assertNotNull(commands);\n    assertEquals(3, commands.size());\n\n    GroupCommand fieldCommand = commands.get(0);\n    assertEquals(\"acco_id\", fieldCommand.getName());\n    assertEquals(30000000, fieldCommand.getMatches());\n    assertEquals(5687, fieldCommand.getNGroups().intValue());\n    List<Group> fieldCommandGroups = fieldCommand.getValues();\n    assertEquals(10, fieldCommandGroups.size());\n    assertEquals(\"116_ar\", fieldCommandGroups.get(0).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(0).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"116_hi\", fieldCommandGroups.get(1).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(1).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"953_ar\", fieldCommandGroups.get(2).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(2).getResult().size());\n    assertEquals(1020, fieldCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"953_hi\", fieldCommandGroups.get(3).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(3).getResult().size());\n    assertEquals(1030, fieldCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"954_ar\", fieldCommandGroups.get(4).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(4).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"954_hi\", fieldCommandGroups.get(5).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(5).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"546_ar\", fieldCommandGroups.get(6).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(6).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"546_hi\", fieldCommandGroups.get(7).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(7).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"708_ar\", fieldCommandGroups.get(8).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(8).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"708_hi\", fieldCommandGroups.get(9).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(9).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand funcCommand = commands.get(1);\n    assertEquals(\"sum(price, price)\", funcCommand.getName());\n    assertEquals(30000000, funcCommand.getMatches());\n    assertNull(funcCommand.getNGroups());\n    List<Group> funcCommandGroups = funcCommand.getValues();\n    assertEquals(10, funcCommandGroups.size());\n    assertEquals(\"95000.0\", funcCommandGroups.get(0).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(0).getResult().size());\n    assertEquals(43666, funcCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"91400.0\", funcCommandGroups.get(1).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(1).getResult().size());\n    assertEquals(27120, funcCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"104800.0\", funcCommandGroups.get(2).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(2).getResult().size());\n    assertEquals(34579, funcCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"99400.0\", funcCommandGroups.get(3).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(3).getResult().size());\n    assertEquals(40519, funcCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"109600.0\", funcCommandGroups.get(4).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(4).getResult().size());\n    assertEquals(36203, funcCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"102400.0\", funcCommandGroups.get(5).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(5).getResult().size());\n    assertEquals(37852, funcCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"116800.0\", funcCommandGroups.get(6).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(6).getResult().size());\n    assertEquals(40393, funcCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"107800.0\", funcCommandGroups.get(7).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(7).getResult().size());\n    assertEquals(41639, funcCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"136200.0\", funcCommandGroups.get(8).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(8).getResult().size());\n    assertEquals(25929, funcCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"131400.0\", funcCommandGroups.get(9).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(9).getResult().size());\n    assertEquals(29179, funcCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand queryCommand = commands.get(2);\n    assertEquals(\"country:fr\", queryCommand.getName());\n    assertNull(queryCommand.getNGroups());\n    assertEquals(30000000, queryCommand.getMatches());\n    List<Group> queryCommandGroups = queryCommand.getValues();\n    assertEquals(1, queryCommandGroups.size());\n    assertEquals(\"country:fr\", queryCommandGroups.get(0).getGroupValue());\n    assertEquals(2, queryCommandGroups.get(0).getResult().size());\n    assertEquals(57074, queryCommandGroups.get(0).getResult().getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d35c84fdef07284c122012ca4000d3b7285a66e","date":1545962630,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/response/QueryResponseTest#testGroupResponse().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/response/QueryResponseTest#testGroupResponse().mjava","sourceNew":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testGroupResponse() throws Exception {\n    XMLResponseParser parser = new XMLResponseParser();\n    NamedList<Object> response = null;\n    try (SolrResourceLoader loader = new SolrResourceLoader();\n         InputStream is = loader.openResource(\"solrj/sampleGroupResponse.xml\")) {\n      assertNotNull(is);\n      try (Reader in = new InputStreamReader(is, StandardCharsets.UTF_8)) {\n        response = parser.processResponse(in);\n      }\n    }\n\n    QueryResponse qr = new QueryResponse(response, null);\n    assertNotNull(qr);\n    GroupResponse groupResponse = qr.getGroupResponse();\n    assertNotNull(groupResponse);\n    List<GroupCommand> commands = groupResponse.getValues();\n    assertNotNull(commands);\n    assertEquals(3, commands.size());\n\n    GroupCommand fieldCommand = commands.get(0);\n    assertEquals(\"acco_id\", fieldCommand.getName());\n    assertEquals(30000000, fieldCommand.getMatches());\n    assertEquals(5687, fieldCommand.getNGroups().intValue());\n    List<Group> fieldCommandGroups = fieldCommand.getValues();\n    assertEquals(10, fieldCommandGroups.size());\n    assertEquals(\"116_ar\", fieldCommandGroups.get(0).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(0).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"116_hi\", fieldCommandGroups.get(1).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(1).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"953_ar\", fieldCommandGroups.get(2).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(2).getResult().size());\n    assertEquals(1020, fieldCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"953_hi\", fieldCommandGroups.get(3).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(3).getResult().size());\n    assertEquals(1030, fieldCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"954_ar\", fieldCommandGroups.get(4).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(4).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"954_hi\", fieldCommandGroups.get(5).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(5).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"546_ar\", fieldCommandGroups.get(6).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(6).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"546_hi\", fieldCommandGroups.get(7).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(7).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"708_ar\", fieldCommandGroups.get(8).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(8).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"708_hi\", fieldCommandGroups.get(9).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(9).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand funcCommand = commands.get(1);\n    assertEquals(\"sum(price, price)\", funcCommand.getName());\n    assertEquals(30000000, funcCommand.getMatches());\n    assertNull(funcCommand.getNGroups());\n    List<Group> funcCommandGroups = funcCommand.getValues();\n    assertEquals(10, funcCommandGroups.size());\n    assertEquals(\"95000.0\", funcCommandGroups.get(0).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(0).getResult().size());\n    assertEquals(43666, funcCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"91400.0\", funcCommandGroups.get(1).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(1).getResult().size());\n    assertEquals(27120, funcCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"104800.0\", funcCommandGroups.get(2).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(2).getResult().size());\n    assertEquals(34579, funcCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"99400.0\", funcCommandGroups.get(3).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(3).getResult().size());\n    assertEquals(40519, funcCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"109600.0\", funcCommandGroups.get(4).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(4).getResult().size());\n    assertEquals(36203, funcCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"102400.0\", funcCommandGroups.get(5).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(5).getResult().size());\n    assertEquals(37852, funcCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"116800.0\", funcCommandGroups.get(6).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(6).getResult().size());\n    assertEquals(40393, funcCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"107800.0\", funcCommandGroups.get(7).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(7).getResult().size());\n    assertEquals(41639, funcCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"136200.0\", funcCommandGroups.get(8).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(8).getResult().size());\n    assertEquals(25929, funcCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"131400.0\", funcCommandGroups.get(9).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(9).getResult().size());\n    assertEquals(29179, funcCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand queryCommand = commands.get(2);\n    assertEquals(\"country:fr\", queryCommand.getName());\n    assertNull(queryCommand.getNGroups());\n    assertEquals(30000000, queryCommand.getMatches());\n    List<Group> queryCommandGroups = queryCommand.getValues();\n    assertEquals(1, queryCommandGroups.size());\n    assertEquals(\"country:fr\", queryCommandGroups.get(0).getGroupValue());\n    assertEquals(2, queryCommandGroups.get(0).getResult().size());\n    assertEquals(57074, queryCommandGroups.get(0).getResult().getNumFound());\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testGroupResponse() throws Exception {\n    XMLResponseParser parser = new XMLResponseParser();\n    NamedList<Object> response = null;\n    try (SolrResourceLoader loader = new SolrResourceLoader();\n         InputStream is = loader.openResource(\"solrj/sampleGroupResponse.xml\")) {\n      assertNotNull(is);\n      try (Reader in = new InputStreamReader(is, StandardCharsets.UTF_8)) {\n        response = parser.processResponse(in);\n      }\n    }\n\n    QueryResponse qr = new QueryResponse(response, null);\n    assertNotNull(qr);\n    GroupResponse groupResponse = qr.getGroupResponse();\n    assertNotNull(groupResponse);\n    List<GroupCommand> commands = groupResponse.getValues();\n    assertNotNull(commands);\n    assertEquals(3, commands.size());\n\n    GroupCommand fieldCommand = commands.get(0);\n    assertEquals(\"acco_id\", fieldCommand.getName());\n    assertEquals(30000000, fieldCommand.getMatches());\n    assertEquals(5687, fieldCommand.getNGroups().intValue());\n    List<Group> fieldCommandGroups = fieldCommand.getValues();\n    assertEquals(10, fieldCommandGroups.size());\n    assertEquals(\"116_ar\", fieldCommandGroups.get(0).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(0).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"116_hi\", fieldCommandGroups.get(1).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(1).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"953_ar\", fieldCommandGroups.get(2).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(2).getResult().size());\n    assertEquals(1020, fieldCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"953_hi\", fieldCommandGroups.get(3).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(3).getResult().size());\n    assertEquals(1030, fieldCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"954_ar\", fieldCommandGroups.get(4).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(4).getResult().size());\n    assertEquals(2236, fieldCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"954_hi\", fieldCommandGroups.get(5).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(5).getResult().size());\n    assertEquals(2234, fieldCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"546_ar\", fieldCommandGroups.get(6).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(6).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"546_hi\", fieldCommandGroups.get(7).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(7).getResult().size());\n    assertEquals(4984, fieldCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"708_ar\", fieldCommandGroups.get(8).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(8).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"708_hi\", fieldCommandGroups.get(9).getGroupValue());\n    assertEquals(2, fieldCommandGroups.get(9).getResult().size());\n    assertEquals(4627, fieldCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand funcCommand = commands.get(1);\n    assertEquals(\"sum(price, price)\", funcCommand.getName());\n    assertEquals(30000000, funcCommand.getMatches());\n    assertNull(funcCommand.getNGroups());\n    List<Group> funcCommandGroups = funcCommand.getValues();\n    assertEquals(10, funcCommandGroups.size());\n    assertEquals(\"95000.0\", funcCommandGroups.get(0).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(0).getResult().size());\n    assertEquals(43666, funcCommandGroups.get(0).getResult().getNumFound());\n    assertEquals(\"91400.0\", funcCommandGroups.get(1).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(1).getResult().size());\n    assertEquals(27120, funcCommandGroups.get(1).getResult().getNumFound());\n    assertEquals(\"104800.0\", funcCommandGroups.get(2).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(2).getResult().size());\n    assertEquals(34579, funcCommandGroups.get(2).getResult().getNumFound());\n    assertEquals(\"99400.0\", funcCommandGroups.get(3).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(3).getResult().size());\n    assertEquals(40519, funcCommandGroups.get(3).getResult().getNumFound());\n    assertEquals(\"109600.0\", funcCommandGroups.get(4).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(4).getResult().size());\n    assertEquals(36203, funcCommandGroups.get(4).getResult().getNumFound());\n    assertEquals(\"102400.0\", funcCommandGroups.get(5).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(5).getResult().size());\n    assertEquals(37852, funcCommandGroups.get(5).getResult().getNumFound());\n    assertEquals(\"116800.0\", funcCommandGroups.get(6).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(6).getResult().size());\n    assertEquals(40393, funcCommandGroups.get(6).getResult().getNumFound());\n    assertEquals(\"107800.0\", funcCommandGroups.get(7).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(7).getResult().size());\n    assertEquals(41639, funcCommandGroups.get(7).getResult().getNumFound());\n    assertEquals(\"136200.0\", funcCommandGroups.get(8).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(8).getResult().size());\n    assertEquals(25929, funcCommandGroups.get(8).getResult().getNumFound());\n    assertEquals(\"131400.0\", funcCommandGroups.get(9).getGroupValue());\n    assertEquals(2, funcCommandGroups.get(9).getResult().size());\n    assertEquals(29179, funcCommandGroups.get(9).getResult().getNumFound());\n\n    GroupCommand queryCommand = commands.get(2);\n    assertEquals(\"country:fr\", queryCommand.getName());\n    assertNull(queryCommand.getNGroups());\n    assertEquals(30000000, queryCommand.getMatches());\n    List<Group> queryCommandGroups = queryCommand.getValues();\n    assertEquals(1, queryCommandGroups.size());\n    assertEquals(\"country:fr\", queryCommandGroups.get(0).getGroupValue());\n    assertEquals(2, queryCommandGroups.get(0).getResult().size());\n    assertEquals(57074, queryCommandGroups.get(0).getResult().getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["e837b9e725093b56ed9d86c0ea3fe415bccd4b58","9d3d365762604952e436b51980101dfc84cc1b3e"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["9d3d365762604952e436b51980101dfc84cc1b3e"],"e837b9e725093b56ed9d86c0ea3fe415bccd4b58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9d3d365762604952e436b51980101dfc84cc1b3e":["e837b9e725093b56ed9d86c0ea3fe415bccd4b58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cba13865da71de3b9b0937fcbc66d726089356d":["f15af35d55d70c34451f9df5edeaeff6b31f8cbe"],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8d35c84fdef07284c122012ca4000d3b7285a66e"],"8d35c84fdef07284c122012ca4000d3b7285a66e":["4cba13865da71de3b9b0937fcbc66d726089356d"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"e837b9e725093b56ed9d86c0ea3fe415bccd4b58":["5eb2511ababf862ea11e10761c70ee560cd84510","9d3d365762604952e436b51980101dfc84cc1b3e"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["f15af35d55d70c34451f9df5edeaeff6b31f8cbe"],"9d3d365762604952e436b51980101dfc84cc1b3e":["5eb2511ababf862ea11e10761c70ee560cd84510","a626ec4d1c92e59fe390724d6220081047b03ce7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e837b9e725093b56ed9d86c0ea3fe415bccd4b58"],"4cba13865da71de3b9b0937fcbc66d726089356d":["8d35c84fdef07284c122012ca4000d3b7285a66e"],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["4cba13865da71de3b9b0937fcbc66d726089356d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8d35c84fdef07284c122012ca4000d3b7285a66e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}