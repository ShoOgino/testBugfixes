{"path":"solr/core/src/test/org/apache/solr/handler/JsonLoaderTest#testAtomicUpdateFieldValue().mjava","commits":[{"id":"204f8269a4f7b5b254cc893f7ae9be8405854fcb","date":1545835182,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/JsonLoaderTest#testAtomicUpdateFieldValue().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/JsonLoaderTest#testExtendedFieldValues().mjava","sourceNew":"  public void testAtomicUpdateFieldValue() throws Exception {\n    String str = \"[{'id':'1', 'val_s':{'add':'foo'}}]\".replace('\\'', '\"');\n    SolrQueryRequest req = req();\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    JsonLoader loader = new JsonLoader();\n    loader.load(req, rsp, new ContentStreamBase.StringStream(str), p);\n\n    assertEquals( 1, p.addCommands.size() );\n\n    AddUpdateCommand add = p.addCommands.get(0);\n    assertEquals(add.commitWithin, -1);\n    assertEquals(add.overwrite, true);\n    assertEquals(\"SolrInputDocument(fields: [id=1, val_s={add=foo}])\", add.solrDoc.toString());\n\n    req.close();\n  }\n\n","sourceOld":"  public void testExtendedFieldValues() throws Exception {\n    String str = \"[{'id':'1', 'val_s':{'add':'foo'}}]\".replace('\\'', '\"');\n    SolrQueryRequest req = req();\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    JsonLoader loader = new JsonLoader();\n    loader.load(req, rsp, new ContentStreamBase.StringStream(str), p);\n\n    assertEquals( 1, p.addCommands.size() );\n\n    AddUpdateCommand add = p.addCommands.get(0);\n    assertEquals(add.commitWithin, -1);\n    assertEquals(add.overwrite, true);\n    SolrInputDocument d = add.solrDoc;\n\n    SolrInputField f = d.getField( \"id\" );\n    assertEquals(\"1\", f.getValue());\n\n    f = d.getField( \"val_s\" );\n    Map<String,Object> map = (Map<String,Object>)f.getValue();\n    assertEquals(\"foo\",map.get(\"add\"));\n\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"204f8269a4f7b5b254cc893f7ae9be8405854fcb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["204f8269a4f7b5b254cc893f7ae9be8405854fcb"]},"commit2Childs":{"204f8269a4f7b5b254cc893f7ae9be8405854fcb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["204f8269a4f7b5b254cc893f7ae9be8405854fcb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}