{"path":"lucene/src/java/org/apache/lucene/index/DocTermOrds#DocTermOrds(IndexReader,String,BytesRef,int,int).mjava","commits":[{"id":"95ae76773bf2b95987d5f9c8f566ab3738953fb4","date":1301758351,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocTermOrds#DocTermOrds(IndexReader,String,BytesRef,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Inverts only terms starting w/ prefix, and only terms\n   *  whose docFreq (not taking deletions into account) is\n   *  <=  maxTermDocFreq, with a custom indexing interval\n   *  (default is every 128nd term). */\n  public DocTermOrds(IndexReader reader, String field, BytesRef termPrefix, int maxTermDocFreq, int indexIntervalBits) throws IOException {\n    this(field, maxTermDocFreq, indexIntervalBits);\n    uninvert(reader, termPrefix);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocTermOrds#DocTermOrds(IndexReader,String,BytesRef,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Inverts only terms starting w/ prefix, and only terms\n   *  whose docFreq (not taking deletions into account) is\n   *  <=  maxTermDocFreq, with a custom indexing interval\n   *  (default is every 128nd term). */\n  public DocTermOrds(IndexReader reader, String field, BytesRef termPrefix, int maxTermDocFreq, int indexIntervalBits) throws IOException {\n    this(field, maxTermDocFreq, indexIntervalBits);\n    uninvert(reader, termPrefix);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocTermOrds#DocTermOrds(IndexReader,String,BytesRef,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Inverts only terms starting w/ prefix, and only terms\n   *  whose docFreq (not taking deletions into account) is\n   *  <=  maxTermDocFreq, with a custom indexing interval\n   *  (default is every 128nd term). */\n  public DocTermOrds(IndexReader reader, String field, BytesRef termPrefix, int maxTermDocFreq, int indexIntervalBits) throws IOException {\n    this(field, maxTermDocFreq, indexIntervalBits);\n    uninvert(reader, termPrefix);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocTermOrds#DocTermOrds(IndexReader,String,BytesRef,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Inverts only terms starting w/ prefix, and only terms\n   *  whose docFreq (not taking deletions into account) is\n   *  <=  maxTermDocFreq, with a custom indexing interval\n   *  (default is every 128nd term). */\n  public DocTermOrds(IndexReader reader, String field, BytesRef termPrefix, int maxTermDocFreq, int indexIntervalBits) throws IOException {\n    this(field, maxTermDocFreq, indexIntervalBits);\n    uninvert(reader, termPrefix);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd92b8bcc88e969302510acf77bd6970da3994c4","date":1327839530,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocTermOrds#DocTermOrds(AtomicIndexReader,String,BytesRef,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocTermOrds#DocTermOrds(IndexReader,String,BytesRef,int,int).mjava","sourceNew":"  /** Inverts only terms starting w/ prefix, and only terms\n   *  whose docFreq (not taking deletions into account) is\n   *  <=  maxTermDocFreq, with a custom indexing interval\n   *  (default is every 128nd term). */\n  public DocTermOrds(AtomicIndexReader reader, String field, BytesRef termPrefix, int maxTermDocFreq, int indexIntervalBits) throws IOException {\n    this(field, maxTermDocFreq, indexIntervalBits);\n    uninvert(reader, termPrefix);\n  }\n\n","sourceOld":"  /** Inverts only terms starting w/ prefix, and only terms\n   *  whose docFreq (not taking deletions into account) is\n   *  <=  maxTermDocFreq, with a custom indexing interval\n   *  (default is every 128nd term). */\n  public DocTermOrds(IndexReader reader, String field, BytesRef termPrefix, int maxTermDocFreq, int indexIntervalBits) throws IOException {\n    this(field, maxTermDocFreq, indexIntervalBits);\n    uninvert(reader, termPrefix);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocTermOrds#DocTermOrds(AtomicReader,String,BytesRef,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocTermOrds#DocTermOrds(IndexReader,String,BytesRef,int,int).mjava","sourceNew":"  /** Inverts only terms starting w/ prefix, and only terms\n   *  whose docFreq (not taking deletions into account) is\n   *  <=  maxTermDocFreq, with a custom indexing interval\n   *  (default is every 128nd term). */\n  public DocTermOrds(AtomicReader reader, String field, BytesRef termPrefix, int maxTermDocFreq, int indexIntervalBits) throws IOException {\n    this(field, maxTermDocFreq, indexIntervalBits);\n    uninvert(reader, termPrefix);\n  }\n\n","sourceOld":"  /** Inverts only terms starting w/ prefix, and only terms\n   *  whose docFreq (not taking deletions into account) is\n   *  <=  maxTermDocFreq, with a custom indexing interval\n   *  (default is every 128nd term). */\n  public DocTermOrds(IndexReader reader, String field, BytesRef termPrefix, int maxTermDocFreq, int indexIntervalBits) throws IOException {\n    this(field, maxTermDocFreq, indexIntervalBits);\n    uninvert(reader, termPrefix);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","95ae76773bf2b95987d5f9c8f566ab3738953fb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","95ae76773bf2b95987d5f9c8f566ab3738953fb4"],"fd92b8bcc88e969302510acf77bd6970da3994c4":["95ae76773bf2b95987d5f9c8f566ab3738953fb4","95ae76773bf2b95987d5f9c8f566ab3738953fb4"],"95ae76773bf2b95987d5f9c8f566ab3738953fb4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"45669a651c970812a680841b97a77cce06af559f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","95ae76773bf2b95987d5f9c8f566ab3738953fb4"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["95ae76773bf2b95987d5f9c8f566ab3738953fb4","fd92b8bcc88e969302510acf77bd6970da3994c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cab9a86bd67202d20b6adc463008c8e982b070a"]},"commit2Childs":{"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","95ae76773bf2b95987d5f9c8f566ab3738953fb4","45669a651c970812a680841b97a77cce06af559f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"fd92b8bcc88e969302510acf77bd6970da3994c4":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"95ae76773bf2b95987d5f9c8f566ab3738953fb4":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","fd92b8bcc88e969302510acf77bd6970da3994c4","45669a651c970812a680841b97a77cce06af559f","5cab9a86bd67202d20b6adc463008c8e982b070a"],"45669a651c970812a680841b97a77cce06af559f":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}