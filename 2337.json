{"path":"solr/core/src/java/org/apache/solr/handler/sql/SolrSort#SolrSort(RelOptCluster,RelTraitSet,RelNode,RelCollation,RexNode).mjava","commits":[{"id":"c1bfdd692c5b78fe01e8f90339fb1edbcc887a90","date":1461958396,"type":1,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrSort#SolrSort(RelOptCluster,RelTraitSet,RelNode,RelCollation,RexNode).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrSort#SolrSort(RelOptCluster,RelTraitSet,RelNode,RelCollation,RelCollation,RexNode).mjava","sourceNew":"  public SolrSort(RelOptCluster cluster, RelTraitSet traitSet, RelNode child, RelCollation collation, RexNode fetch) {\n    super(cluster, traitSet, child, collation, null, fetch);\n\n    assert getConvention() == SolrRel.CONVENTION;\n    assert getConvention() == child.getConvention();\n  }\n\n","sourceOld":"  public SolrSort(RelOptCluster cluster, RelTraitSet traitSet, RelNode child, RelCollation collation,\n                  RelCollation implicitCollation, RexNode fetch) {\n    super(cluster, traitSet, child, collation, null, fetch);\n\n    this.implicitCollation = implicitCollation;\n\n    assert getConvention() == SolrRel.CONVENTION;\n    assert getConvention() == child.getConvention();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"724e3cf71b4c55b1c634bb1d76caaa0d9daf26ef","date":1462373155,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrSort#SolrSort(RelOptCluster,RelTraitSet,RelNode,RelCollation,RexNode).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrSort#SolrSort(RelOptCluster,RelTraitSet,RelNode,RelCollation,RexNode).mjava","sourceNew":"  SolrSort(RelOptCluster cluster, RelTraitSet traitSet, RelNode child, RelCollation collation, RexNode fetch) {\n    super(cluster, traitSet, child, collation, null, fetch);\n\n    assert getConvention() == SolrRel.CONVENTION;\n    assert getConvention() == child.getConvention();\n  }\n\n","sourceOld":"  public SolrSort(RelOptCluster cluster, RelTraitSet traitSet, RelNode child, RelCollation collation, RexNode fetch) {\n    super(cluster, traitSet, child, collation, null, fetch);\n\n    assert getConvention() == SolrRel.CONVENTION;\n    assert getConvention() == child.getConvention();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"612da0a0a2d5f4409da55729b9833e799f905ac5","date":1479142562,"type":5,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrSort#SolrSort(RelOptCluster,RelTraitSet,RelNode,RelCollation,RexNode,RexNode).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrSort#SolrSort(RelOptCluster,RelTraitSet,RelNode,RelCollation,RexNode).mjava","sourceNew":"  SolrSort(RelOptCluster cluster, RelTraitSet traitSet, RelNode child, RelCollation collation, RexNode offset,\n           RexNode fetch) {\n    super(cluster, traitSet, child, collation, offset, fetch);\n\n    assert getConvention() == SolrRel.CONVENTION;\n    assert getConvention() == child.getConvention();\n  }\n\n","sourceOld":"  SolrSort(RelOptCluster cluster, RelTraitSet traitSet, RelNode child, RelCollation collation, RexNode fetch) {\n    super(cluster, traitSet, child, collation, null, fetch);\n\n    assert getConvention() == SolrRel.CONVENTION;\n    assert getConvention() == child.getConvention();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"612da0a0a2d5f4409da55729b9833e799f905ac5":["724e3cf71b4c55b1c634bb1d76caaa0d9daf26ef"],"c1bfdd692c5b78fe01e8f90339fb1edbcc887a90":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"724e3cf71b4c55b1c634bb1d76caaa0d9daf26ef":["c1bfdd692c5b78fe01e8f90339fb1edbcc887a90"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"612da0a0a2d5f4409da55729b9833e799f905ac5":[],"c1bfdd692c5b78fe01e8f90339fb1edbcc887a90":["724e3cf71b4c55b1c634bb1d76caaa0d9daf26ef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c1bfdd692c5b78fe01e8f90339fb1edbcc887a90","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"724e3cf71b4c55b1c634bb1d76caaa0d9daf26ef":["612da0a0a2d5f4409da55729b9833e799f905ac5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["612da0a0a2d5f4409da55729b9833e799f905ac5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}