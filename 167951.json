{"path":"lucene/core/src/test/org/apache/lucene/util/fst/TestFstDirect#testLookupIDs().mjava","commits":[{"id":"ae67e1f82a53594208ca929f382ee861dad3d7a8","date":1557134375,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/fst/TestFstDirect#testLookupIDs().mjava","pathOld":"/dev/null","sourceNew":"  @Ignore(\"for performance testing\")\n  public void testLookupIDs() throws Exception {\n    for (int i = 0; i < 10000000; i++) {\n      words.add(String.format(Locale.ROOT, \"%09d\", i));\n    }\n    FST<Object> baselineFST = buildFST(words, false);\n    FST<Object> optoFST = buildFST(words,true);\n    for (int i = 0; i < 10; i++) {\n      long seed = random().nextLong();\n      random.setSeed(seed);\n      long timeOpto = timeLookups(optoFST);\n      random.setSeed(seed);\n      long timeBase = timeLookups(baselineFST);\n      printf(\"Sought %d present terms in %d ms (baseline) vs %d ms (opto), a %d%% difference\", COUNT, nsToMs(timeBase), nsToMs(timeOpto),\n             -100 * (timeBase - timeOpto) / timeBase);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59a1204a92958bea883656169000a87a6c55c2d0","date":1562106073,"type":4,"author":"Michael Sokolov","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/util/fst/TestFstDirect#testLookupIDs().mjava","sourceNew":null,"sourceOld":"  @Ignore(\"for performance testing\")\n  public void testLookupIDs() throws Exception {\n    for (int i = 0; i < 10000000; i++) {\n      words.add(String.format(Locale.ROOT, \"%09d\", i));\n    }\n    FST<Object> baselineFST = buildFST(words, false);\n    FST<Object> optoFST = buildFST(words,true);\n    for (int i = 0; i < 10; i++) {\n      long seed = random().nextLong();\n      random.setSeed(seed);\n      long timeOpto = timeLookups(optoFST);\n      random.setSeed(seed);\n      long timeBase = timeLookups(baselineFST);\n      printf(\"Sought %d present terms in %d ms (baseline) vs %d ms (opto), a %d%% difference\", COUNT, nsToMs(timeBase), nsToMs(timeOpto),\n             -100 * (timeBase - timeOpto) / timeBase);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"59a1204a92958bea883656169000a87a6c55c2d0":["ae67e1f82a53594208ca929f382ee861dad3d7a8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ae67e1f82a53594208ca929f382ee861dad3d7a8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["59a1204a92958bea883656169000a87a6c55c2d0"]},"commit2Childs":{"59a1204a92958bea883656169000a87a6c55c2d0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ae67e1f82a53594208ca929f382ee861dad3d7a8"],"ae67e1f82a53594208ca929f382ee861dad3d7a8":["59a1204a92958bea883656169000a87a6c55c2d0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}