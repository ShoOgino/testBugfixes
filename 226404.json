{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/FieldAnalysisRequest#listToCommaDelimitedString(List[String]).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/FieldAnalysisRequest#listToCommaDelimitedString(List[String]).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/request/FieldAnalysisRequest#listToCommaDelimitedString(List[String]).mjava","sourceNew":"  /**\n   * Convers the given list of string to a comma-separated string.\n   *\n   * @param list The list of string.\n   *\n   * @return The comma-separated string.\n   */\n  static String listToCommaDelimitedString(List<String> list) {\n    StringBuilder result = new StringBuilder();\n    for (String str : list) {\n      if (result.length() > 0) {\n        result.append(\",\");\n      }\n      result.append(str);\n    }\n    return result.toString();\n  }\n\n","sourceOld":"  /**\n   * Convers the given list of string to a comma-separated string.\n   *\n   * @param list The list of string.\n   *\n   * @return The comma-separated string.\n   */\n  static String listToCommaDelimitedString(List<String> list) {\n    StringBuilder result = new StringBuilder();\n    for (String str : list) {\n      if (result.length() > 0) {\n        result.append(\",\");\n      }\n      result.append(str);\n    }\n    return result.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/FieldAnalysisRequest#listToCommaDelimitedString(List[String]).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/request/FieldAnalysisRequest#listToCommaDelimitedString(List[String]).mjava","sourceNew":"  /**\n   * Convers the given list of string to a comma-separated string.\n   *\n   * @param list The list of string.\n   *\n   * @return The comma-separated string.\n   */\n  static String listToCommaDelimitedString(List<String> list) {\n    StringBuilder result = new StringBuilder();\n    for (String str : list) {\n      if (result.length() > 0) {\n        result.append(\",\");\n      }\n      result.append(str);\n    }\n    return result.toString();\n  }\n\n","sourceOld":"  /**\n   * Convers the given list of string to a comma-separated string.\n   *\n   * @param list The list of string.\n   *\n   * @return The comma-separated string.\n   */\n  static String listToCommaDelimitedString(List<String> list) {\n    StringBuilder result = new StringBuilder();\n    for (String str : list) {\n      if (result.length() > 0) {\n        result.append(\",\");\n      }\n      result.append(str);\n    }\n    return result.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/FieldAnalysisRequest#listToCommaDelimitedString(List[String]).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/request/FieldAnalysisRequest#listToCommaDelimitedString(List[String]).mjava","sourceNew":"  /**\n   * Convers the given list of string to a comma-separated string.\n   *\n   * @param list The list of string.\n   *\n   * @return The comma-separated string.\n   */\n  static String listToCommaDelimitedString(List<String> list) {\n    StringBuilder result = new StringBuilder();\n    for (String str : list) {\n      if (result.length() > 0) {\n        result.append(\",\");\n      }\n      result.append(str);\n    }\n    return result.toString();\n  }\n\n","sourceOld":"  /**\n   * Convers the given list of string to a comma-separated string.\n   *\n   * @param list The list of string.\n   *\n   * @return The comma-separated string.\n   */\n  static String listToCommaDelimitedString(List<String> list) {\n    StringBuilder result = new StringBuilder();\n    for (String str : list) {\n      if (result.length() > 0) {\n        result.append(\",\");\n      }\n      result.append(str);\n    }\n    return result.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}