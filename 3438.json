{"path":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#before().mjava","commits":[{"id":"4a54d9ede1b7f2f026639186eb07f3f314d87d9a","date":1412176848,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#before().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void before() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n        \"/solr\", true, extraServlets);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#before().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void before() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n        \"/solr\", true, extraServlets);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eeeea2295d6355a29e259130a5c48ace73022d7c","date":1426569216,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#before().mjava","sourceNew":"  @Before\n  public void before() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n        \"/solr\", true, null);\n  }\n\n","sourceOld":"  @Before\n  public void before() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n        \"/solr\", true, extraServlets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#before().mjava","sourceNew":"  @Before\n  public void before() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n        \"/solr\", true, null);\n  }\n\n","sourceOld":"  @Before\n  public void before() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n        \"/solr\", true, extraServlets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcf710a8fcd590cf55c855d422c7a10fce3e6117","date":1485842253,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#before().mjava","sourceNew":"  @Before\n  public void before() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n        \"/solr\", true, null);\n    if (random().nextBoolean()) {\n      log.info(\"These tests are run with V2 API\");\n      restTestHarness.setServerProvider(new RESTfulServerProvider() {\n        @Override\n        public String getBaseURL() {\n          return jetty.getBaseUrl().toString() + \"/v2/cores/\" + DEFAULT_TEST_CORENAME;\n        }\n      });\n    }\n  }\n\n","sourceOld":"  @Before\n  public void before() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n        \"/solr\", true, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#before().mjava","sourceNew":"  @Before\n  public void before() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n        \"/solr\", true, null);\n    if (random().nextBoolean()) {\n      log.info(\"These tests are run with V2 API\");\n      restTestHarness.setServerProvider(new RESTfulServerProvider() {\n        @Override\n        public String getBaseURL() {\n          return jetty.getBaseUrl().toString() + \"/v2/cores/\" + DEFAULT_TEST_CORENAME;\n        }\n      });\n    }\n  }\n\n","sourceOld":"  @Before\n  public void before() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n        \"/solr\", true, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a8ab788212d72a7c436e5ef349ca99fe3c8fc78b","date":1489203052,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestBulkSchemaAPI#before().mjava","sourceNew":"  @Before\n  public void before() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n        \"/solr\", true, null);\n    if (random().nextBoolean()) {\n      log.info(\"These tests are run with V2 API\");\n      restTestHarness.setServerProvider(new RESTfulServerProvider() {\n        @Override\n        public String getBaseURL() {\n          return jetty.getBaseUrl().toString() + \"/____v2/cores/\" + DEFAULT_TEST_CORENAME;\n        }\n      });\n    }\n  }\n\n","sourceOld":"  @Before\n  public void before() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n        \"/solr\", true, null);\n    if (random().nextBoolean()) {\n      log.info(\"These tests are run with V2 API\");\n      restTestHarness.setServerProvider(new RESTfulServerProvider() {\n        @Override\n        public String getBaseURL() {\n          return jetty.getBaseUrl().toString() + \"/v2/cores/\" + DEFAULT_TEST_CORENAME;\n        }\n      });\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["4a54d9ede1b7f2f026639186eb07f3f314d87d9a","eeeea2295d6355a29e259130a5c48ace73022d7c"],"eeeea2295d6355a29e259130a5c48ace73022d7c":["4a54d9ede1b7f2f026639186eb07f3f314d87d9a"],"a8ab788212d72a7c436e5ef349ca99fe3c8fc78b":["fcf710a8fcd590cf55c855d422c7a10fce3e6117"],"fcf710a8fcd590cf55c855d422c7a10fce3e6117":["eeeea2295d6355a29e259130a5c48ace73022d7c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["eeeea2295d6355a29e259130a5c48ace73022d7c","fcf710a8fcd590cf55c855d422c7a10fce3e6117"],"4a54d9ede1b7f2f026639186eb07f3f314d87d9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4a54d9ede1b7f2f026639186eb07f3f314d87d9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a8ab788212d72a7c436e5ef349ca99fe3c8fc78b"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"eeeea2295d6355a29e259130a5c48ace73022d7c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","fcf710a8fcd590cf55c855d422c7a10fce3e6117","7c3523a0ab04c3002eee3896c75ea5f10f388bcc"],"a8ab788212d72a7c436e5ef349ca99fe3c8fc78b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fcf710a8fcd590cf55c855d422c7a10fce3e6117":["a8ab788212d72a7c436e5ef349ca99fe3c8fc78b","7c3523a0ab04c3002eee3896c75ea5f10f388bcc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4a54d9ede1b7f2f026639186eb07f3f314d87d9a","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"4a54d9ede1b7f2f026639186eb07f3f314d87d9a":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","eeeea2295d6355a29e259130a5c48ace73022d7c","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","7c3523a0ab04c3002eee3896c75ea5f10f388bcc","d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}