{"path":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","commits":[{"id":"2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa","date":1343692569,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","pathOld":"/dev/null","sourceNew":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Ddata=files|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Durl=<solr-update-url> (default=\" + DEFAULT_POST_URL + \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr\\n\"+\n     \"port.  Data can be read from files specified as commandline args,\\n\"+\n     \"as raw commandline arg strings, or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args  -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -jar post.jar < hd.xml\\n\"+\n     \"  java -Dtype=text/csv -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/update/extract -Dparams=literal.id=a -Dtype=application/pdf -jar post.jar a.pdf\\n\"+\n     \"  java -Dauto -jar post.jar *\\n\"+\n     \"  java -Dauto -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"and url automatically from file name. When posting rich documents\\n\"+\n     \"the file name will be propagated as \\\"resource.name\\\" and also used as \\\"literal.id\\\".\\n\" +\n     \"You may override these or any other request parameter through the -Dparams property.\\n\"+\n     \"If you want to do a commit only, use \\\"-\\\" as argument.\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","pathOld":"/dev/null","sourceNew":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Ddata=files|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Durl=<solr-update-url> (default=\" + DEFAULT_POST_URL + \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr\\n\"+\n     \"port.  Data can be read from files specified as commandline args,\\n\"+\n     \"as raw commandline arg strings, or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args  -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -jar post.jar < hd.xml\\n\"+\n     \"  java -Dtype=text/csv -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/update/extract -Dparams=literal.id=a -Dtype=application/pdf -jar post.jar a.pdf\\n\"+\n     \"  java -Dauto -jar post.jar *\\n\"+\n     \"  java -Dauto -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"and url automatically from file name. When posting rich documents\\n\"+\n     \"the file name will be propagated as \\\"resource.name\\\" and also used as \\\"literal.id\\\".\\n\" +\n     \"You may override these or any other request parameter through the -Dparams property.\\n\"+\n     \"If you want to do a commit only, use \\\"-\\\" as argument.\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","pathOld":"/dev/null","sourceNew":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Ddata=files|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Durl=<solr-update-url> (default=\" + DEFAULT_POST_URL + \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr\\n\"+\n     \"port.  Data can be read from files specified as commandline args,\\n\"+\n     \"as raw commandline arg strings, or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args  -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -jar post.jar < hd.xml\\n\"+\n     \"  java -Dtype=text/csv -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/update/extract -Dparams=literal.id=a -Dtype=application/pdf -jar post.jar a.pdf\\n\"+\n     \"  java -Dauto -jar post.jar *\\n\"+\n     \"  java -Dauto -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"and url automatically from file name. When posting rich documents\\n\"+\n     \"the file name will be propagated as \\\"resource.name\\\" and also used as \\\"literal.id\\\".\\n\" +\n     \"You may override these or any other request parameter through the -Dparams property.\\n\"+\n     \"If you want to do a commit only, use \\\"-\\\" as argument.\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2c3a504730329ae644b009dee43024116605d47","date":1345253449,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","sourceNew":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Durl=<solr-update-url> (default=\" + DEFAULT_POST_URL + \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr\\n\"+\n     \"port.  Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args  -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/update/extract -Dparams=literal.id=a -Dtype=application/pdf -jar post.jar a.pdf\\n\"+\n     \"  java -Dauto -jar post.jar *\\n\"+\n     \"  java -Dauto -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"and url automatically from file name. When posting rich documents\\n\"+\n     \"the file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","sourceOld":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Ddata=files|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Durl=<solr-update-url> (default=\" + DEFAULT_POST_URL + \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr\\n\"+\n     \"port.  Data can be read from files specified as commandline args,\\n\"+\n     \"as raw commandline arg strings, or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args  -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -jar post.jar < hd.xml\\n\"+\n     \"  java -Dtype=text/csv -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/update/extract -Dparams=literal.id=a -Dtype=application/pdf -jar post.jar a.pdf\\n\"+\n     \"  java -Dauto -jar post.jar *\\n\"+\n     \"  java -Dauto -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"and url automatically from file name. When posting rich documents\\n\"+\n     \"the file name will be propagated as \\\"resource.name\\\" and also used as \\\"literal.id\\\".\\n\" +\n     \"You may override these or any other request parameter through the -Dparams property.\\n\"+\n     \"If you want to do a commit only, use \\\"-\\\" as argument.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70fa1c0f4d75735ff2e1485e059d9bc5efa50598","date":1345296911,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","sourceNew":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Durl=<solr-update-url> (default=\" + DEFAULT_POST_URL + \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr\\n\"+\n     \"port.  Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args  -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/update/extract -Dparams=literal.id=a -Dtype=application/pdf -jar post.jar a.pdf\\n\"+\n     \"  java -Dauto -jar post.jar *\\n\"+\n     \"  java -Dauto -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"and url automatically from file name. When posting rich documents\\n\"+\n     \"the file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","sourceOld":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Ddata=files|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Durl=<solr-update-url> (default=\" + DEFAULT_POST_URL + \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr\\n\"+\n     \"port.  Data can be read from files specified as commandline args,\\n\"+\n     \"as raw commandline arg strings, or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args  -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -jar post.jar < hd.xml\\n\"+\n     \"  java -Dtype=text/csv -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/update/extract -Dparams=literal.id=a -Dtype=application/pdf -jar post.jar a.pdf\\n\"+\n     \"  java -Dauto -jar post.jar *\\n\"+\n     \"  java -Dauto -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"and url automatically from file name. When posting rich documents\\n\"+\n     \"the file name will be propagated as \\\"resource.name\\\" and also used as \\\"literal.id\\\".\\n\" +\n     \"You may override these or any other request parameter through the -Dparams property.\\n\"+\n     \"If you want to do a commit only, use \\\"-\\\" as argument.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"616c1830142ff5c1ddedec1ed898733b73c8e23b","date":1345368925,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","sourceNew":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Durl=<solr-update-url> (default=\" + DEFAULT_POST_URL + \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr\\n\"+\n     \"port.  Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args  -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/update/extract -Dparams=literal.id=a -Dtype=application/pdf -jar post.jar a.pdf\\n\"+\n     \"  java -Dauto -jar post.jar *\\n\"+\n     \"  java -Dauto -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"and url automatically from file name. When posting rich documents\\n\"+\n     \"the file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","sourceOld":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Ddata=files|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Durl=<solr-update-url> (default=\" + DEFAULT_POST_URL + \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr\\n\"+\n     \"port.  Data can be read from files specified as commandline args,\\n\"+\n     \"as raw commandline arg strings, or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args  -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -jar post.jar < hd.xml\\n\"+\n     \"  java -Dtype=text/csv -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/update/extract -Dparams=literal.id=a -Dtype=application/pdf -jar post.jar a.pdf\\n\"+\n     \"  java -Dauto -jar post.jar *\\n\"+\n     \"  java -Dauto -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"and url automatically from file name. When posting rich documents\\n\"+\n     \"the file name will be propagated as \\\"resource.name\\\" and also used as \\\"literal.id\\\".\\n\" +\n     \"You may override these or any other request parameter through the -Dparams property.\\n\"+\n     \"If you want to do a commit only, use \\\"-\\\" as argument.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4b0c778a4367a0beb23255e4c40aa96bfa0f48b","date":1414464516,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","sourceNew":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Durl=<solr-update-url> (default=\" + String.format(\"http://%s:%s/solr/%s/update\", DEFAULT_POST_HOST, DEFAULT_POST_PORT, DEFAULT_POST_CORE) + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dc=<core/collection> (default: \" + DEFAULT_POST_CORE+ \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr\\n\"+\n     \"port.  Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args  -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/update/extract -Dparams=literal.id=a -Dtype=application/pdf -jar post.jar a.pdf\\n\"+\n     \"  java -Dauto -jar post.jar *\\n\"+\n     \"  java -Dauto -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"and url automatically from file name. When posting rich documents\\n\"+\n     \"the file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","sourceOld":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Durl=<solr-update-url> (default=\" + DEFAULT_POST_URL + \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr\\n\"+\n     \"port.  Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args  -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/update/extract -Dparams=literal.id=a -Dtype=application/pdf -jar post.jar a.pdf\\n\"+\n     \"  java -Dauto -jar post.jar *\\n\"+\n     \"  java -Dauto -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"and url automatically from file name. When posting rich documents\\n\"+\n     \"the file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f1e77b291a95ac8ab154e45401fd7e374cfd880","date":1414490333,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","sourceNew":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Durl=<solr-update-url> (default=\" + String.format(\"http://%s:%s/solr/%s/update\", DEFAULT_POST_HOST, DEFAULT_POST_PORT, DEFAULT_POST_CORE, Locale.ROOT) + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dc=<core/collection> (default: \" + DEFAULT_POST_CORE+ \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr\\n\"+\n     \"port.  Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args  -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/update/extract -Dparams=literal.id=a -Dtype=application/pdf -jar post.jar a.pdf\\n\"+\n     \"  java -Dauto -jar post.jar *\\n\"+\n     \"  java -Dauto -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"and url automatically from file name. When posting rich documents\\n\"+\n     \"the file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","sourceOld":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Durl=<solr-update-url> (default=\" + String.format(\"http://%s:%s/solr/%s/update\", DEFAULT_POST_HOST, DEFAULT_POST_PORT, DEFAULT_POST_CORE) + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dc=<core/collection> (default: \" + DEFAULT_POST_CORE+ \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr\\n\"+\n     \"port.  Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args  -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/update/extract -Dparams=literal.id=a -Dtype=application/pdf -jar post.jar a.pdf\\n\"+\n     \"  java -Dauto -jar post.jar *\\n\"+\n     \"  java -Dauto -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"and url automatically from file name. When posting rich documents\\n\"+\n     \"the file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b9d35354874f2eceac71c71b652fbface5264339","date":1414515025,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","sourceNew":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Durl=<solr-update-url> (default=\" + String.format(Locale.ROOT, \"http://%s:%s/solr/%s/update\", DEFAULT_POST_HOST, DEFAULT_POST_PORT, DEFAULT_POST_CORE) + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dc=<core/collection> (default: \" + DEFAULT_POST_CORE+ \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr\\n\"+\n     \"port.  Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args  -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/update/extract -Dparams=literal.id=a -Dtype=application/pdf -jar post.jar a.pdf\\n\"+\n     \"  java -Dauto -jar post.jar *\\n\"+\n     \"  java -Dauto -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"and url automatically from file name. When posting rich documents\\n\"+\n     \"the file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","sourceOld":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Durl=<solr-update-url> (default=\" + String.format(\"http://%s:%s/solr/%s/update\", DEFAULT_POST_HOST, DEFAULT_POST_PORT, DEFAULT_POST_CORE, Locale.ROOT) + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dc=<core/collection> (default: \" + DEFAULT_POST_CORE+ \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr\\n\"+\n     \"port.  Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args  -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/update/extract -Dparams=literal.id=a -Dtype=application/pdf -jar post.jar a.pdf\\n\"+\n     \"  java -Dauto -jar post.jar *\\n\"+\n     \"  java -Dauto -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"and url automatically from file name. When posting rich documents\\n\"+\n     \"the file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b039594f79f0a75b62bbbcc9e21b3d1a888c59f","date":1418714259,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","sourceNew":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Dc=<core/collection>\\n\"+\n     \"  -Durl=<solr-update-url> \\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr port.\\n\"+\n     \"NOTE: Specifying the url/core/collection name is mandatory.\\n\" +\n     \"Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args -Dc=gettingstarted -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -Dc=gettingstarted -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -Dc=gettingstarted -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -Dc=gettingstarted -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -Dc=gettingstarted -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/update/extract -Dparams=literal.id=a -Dtype=application/pdf -jar post.jar a.pdf\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -jar post.jar *\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"automatically from file name. When posting rich documents the\\n\"+\n     \"file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","sourceOld":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Durl=<solr-update-url> (default=\" + String.format(Locale.ROOT, \"http://%s:%s/solr/%s/update\", DEFAULT_POST_HOST, DEFAULT_POST_PORT, DEFAULT_POST_CORE) + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dc=<core/collection> (default: \" + DEFAULT_POST_CORE+ \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr\\n\"+\n     \"port.  Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args  -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/update/extract -Dparams=literal.id=a -Dtype=application/pdf -jar post.jar a.pdf\\n\"+\n     \"  java -Dauto -jar post.jar *\\n\"+\n     \"  java -Dauto -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"and url automatically from file name. When posting rich documents\\n\"+\n     \"the file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"72e756f664eb3a05326528828d5de9e0bebad61e","date":1420409881,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","sourceNew":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Dc=<core/collection>\\n\"+\n     \"  -Durl=<solr-update-url> (overrides -Dc option if specified)\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr port.\\n\"+\n     \"NOTE: Specifying the url/core/collection name is mandatory.\\n\" +\n     \"Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args -Dc=gettingstarted -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -Dc=gettingstarted -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -Dc=gettingstarted -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -Dc=gettingstarted -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -Dc=gettingstarted -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/techproducts/update/extract -Dparams=literal.id=a -jar post.jar solr-word.pdf\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -jar post.jar *\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"automatically from file name. When posting rich documents the\\n\"+\n     \"file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","sourceOld":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Dc=<core/collection>\\n\"+\n     \"  -Durl=<solr-update-url> \\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr port.\\n\"+\n     \"NOTE: Specifying the url/core/collection name is mandatory.\\n\" +\n     \"Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args -Dc=gettingstarted -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -Dc=gettingstarted -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -Dc=gettingstarted -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -Dc=gettingstarted -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -Dc=gettingstarted -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/update/extract -Dparams=literal.id=a -Dtype=application/pdf -jar post.jar a.pdf\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -jar post.jar *\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"automatically from file name. When posting rich documents the\\n\"+\n     \"file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"489cbc2e7c2cd0ef44917b46247f932ec50b9049","date":1420410673,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","sourceNew":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Dc=<core/collection>\\n\"+\n     \"  -Durl=<solr-update-url> (overrides -Dc option if specified)\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr port.\\n\"+\n     \"NOTE: Specifying the url/core/collection name is mandatory.\\n\" +\n     \"Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args -Dc=gettingstarted -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -Dc=gettingstarted -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -Dc=gettingstarted -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -Dc=gettingstarted -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -Dc=gettingstarted -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/techproducts/update/extract -Dparams=literal.id=pdf1 -jar post.jar solr-word.pdf\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -jar post.jar *\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"automatically from file name. When posting rich documents the\\n\"+\n     \"file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","sourceOld":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Dc=<core/collection>\\n\"+\n     \"  -Durl=<solr-update-url> (overrides -Dc option if specified)\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr port.\\n\"+\n     \"NOTE: Specifying the url/core/collection name is mandatory.\\n\" +\n     \"Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args -Dc=gettingstarted -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -Dc=gettingstarted -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -Dc=gettingstarted -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -Dc=gettingstarted -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -Dc=gettingstarted -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/techproducts/update/extract -Dparams=literal.id=a -jar post.jar solr-word.pdf\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -jar post.jar *\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"automatically from file name. When posting rich documents the\\n\"+\n     \"file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd759cf2b6cdb4b385015a01d143d7a535254e93","date":1420810494,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","sourceNew":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Dc=<core/collection>\\n\"+\n     \"  -Durl=<solr-update-url> (overrides -Dc option if specified)\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr port.\\n\"+\n     \"NOTE: Specifying the url/core/collection name is mandatory.\\n\" +\n     \"Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -Dc=gettingstarted -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args -Dc=gettingstarted -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -Dc=gettingstarted -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -Dc=gettingstarted -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -Dc=gettingstarted -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -Dc=gettingstarted -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/techproducts/update/extract -Dparams=literal.id=pdf1 -jar post.jar solr-word.pdf\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -jar post.jar *\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"automatically from file name. When posting rich documents the\\n\"+\n     \"file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","sourceOld":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Dc=<core/collection>\\n\"+\n     \"  -Durl=<solr-update-url> (overrides -Dc option if specified)\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr port.\\n\"+\n     \"NOTE: Specifying the url/core/collection name is mandatory.\\n\" +\n     \"Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args -Dc=gettingstarted -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -Dc=gettingstarted -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -Dc=gettingstarted -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -Dc=gettingstarted -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -Dc=gettingstarted -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/techproducts/update/extract -Dparams=literal.id=pdf1 -jar post.jar solr-word.pdf\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -jar post.jar *\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"automatically from file name. When posting rich documents the\\n\"+\n     \"file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6279c1e4df4ee026df0d7d7f27cb2a8faf4008b","date":1421022827,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","sourceNew":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Dc=<core/collection>\\n\"+\n     \"  -Durl=<base Solr update URL> (overrides -Dc option if specified)\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr port.\\n\"+\n     \"NOTE: Specifying the url/core/collection name is mandatory.\\n\" +\n     \"Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -Dc=gettingstarted -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args -Dc=gettingstarted -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -Dc=gettingstarted -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -Dc=gettingstarted -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -Dc=gettingstarted -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -Dc=gettingstarted -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/techproducts/update/extract -Dparams=literal.id=pdf1 -jar post.jar solr-word.pdf\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -jar post.jar *\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"automatically from file name. When posting rich documents the\\n\"+\n     \"file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","sourceOld":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Dc=<core/collection>\\n\"+\n     \"  -Durl=<solr-update-url> (overrides -Dc option if specified)\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr port.\\n\"+\n     \"NOTE: Specifying the url/core/collection name is mandatory.\\n\" +\n     \"Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -Dc=gettingstarted -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args -Dc=gettingstarted -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -Dc=gettingstarted -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -Dc=gettingstarted -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -Dc=gettingstarted -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -Dc=gettingstarted -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/techproducts/update/extract -Dparams=literal.id=pdf1 -jar post.jar solr-word.pdf\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -jar post.jar *\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"automatically from file name. When posting rich documents the\\n\"+\n     \"file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30a0894b72a443a16598f92e83172b2a8ae1db03","date":1477094527,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","sourceNew":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Dc=<core/collection>\\n\"+\n     \"  -Durl=<base Solr update URL> (overrides -Dc option if specified)\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dbasicauth=<user:pass> (sets Basic Authentication credentials)\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr port.\\n\"+\n     \"NOTE: Specifying the url/core/collection name is mandatory.\\n\" +\n     \"Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -Dc=gettingstarted -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args -Dc=gettingstarted -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -Dc=gettingstarted -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -Dc=gettingstarted -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -Dc=gettingstarted -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -Dc=gettingstarted -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/techproducts/update/extract -Dparams=literal.id=pdf1 -jar post.jar solr-word.pdf\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -jar post.jar *\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"automatically from file name. When posting rich documents the\\n\"+\n     \"file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","sourceOld":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Dc=<core/collection>\\n\"+\n     \"  -Durl=<base Solr update URL> (overrides -Dc option if specified)\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr port.\\n\"+\n     \"NOTE: Specifying the url/core/collection name is mandatory.\\n\" +\n     \"Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -Dc=gettingstarted -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args -Dc=gettingstarted -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -Dc=gettingstarted -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -Dc=gettingstarted -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -Dc=gettingstarted -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -Dc=gettingstarted -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/techproducts/update/extract -Dparams=literal.id=pdf1 -jar post.jar solr-word.pdf\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -jar post.jar *\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"automatically from file name. When posting rich documents the\\n\"+\n     \"file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","sourceNew":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Dc=<core/collection>\\n\"+\n     \"  -Durl=<base Solr update URL> (overrides -Dc option if specified)\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dbasicauth=<user:pass> (sets Basic Authentication credentials)\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr port.\\n\"+\n     \"NOTE: Specifying the url/core/collection name is mandatory.\\n\" +\n     \"Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -Dc=gettingstarted -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args -Dc=gettingstarted -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -Dc=gettingstarted -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -Dc=gettingstarted -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -Dc=gettingstarted -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -Dc=gettingstarted -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/techproducts/update/extract -Dparams=literal.id=pdf1 -jar post.jar solr-word.pdf\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -jar post.jar *\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"automatically from file name. When posting rich documents the\\n\"+\n     \"file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","sourceOld":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Dc=<core/collection>\\n\"+\n     \"  -Durl=<base Solr update URL> (overrides -Dc option if specified)\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr port.\\n\"+\n     \"NOTE: Specifying the url/core/collection name is mandatory.\\n\" +\n     \"Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -Dc=gettingstarted -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args -Dc=gettingstarted -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -Dc=gettingstarted -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -Dc=gettingstarted -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -Dc=gettingstarted -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -Dc=gettingstarted -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/techproducts/update/extract -Dparams=literal.id=pdf1 -jar post.jar solr-word.pdf\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -jar post.jar *\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"automatically from file name. When posting rich documents the\\n\"+\n     \"file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#usage().mjava","sourceNew":"  private static void usage() {\n    CLIO.out\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Dc=<core/collection>\\n\"+\n     \"  -Durl=<base Solr update URL> (overrides -Dc option if specified)\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dbasicauth=<user:pass> (sets Basic Authentication credentials)\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr port.\\n\"+\n     \"NOTE: Specifying the url/core/collection name is mandatory.\\n\" +\n     \"Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -Dc=gettingstarted -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args -Dc=gettingstarted -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -Dc=gettingstarted -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -Dc=gettingstarted -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -Dc=gettingstarted -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -Dc=gettingstarted -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/techproducts/update/extract -Dparams=literal.id=pdf1 -jar post.jar solr-word.pdf\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -jar post.jar *\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"automatically from file name. When posting rich documents the\\n\"+\n     \"file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","sourceOld":"  private static void usage() {\n    System.out.println\n    (USAGE_STRING_SHORT+\"\\n\\n\" +\n     \"Supported System Properties and their defaults:\\n\"+\n     \"  -Dc=<core/collection>\\n\"+\n     \"  -Durl=<base Solr update URL> (overrides -Dc option if specified)\\n\"+\n     \"  -Ddata=files|web|args|stdin (default=\" + DEFAULT_DATA_MODE + \")\\n\"+\n     \"  -Dtype=<content-type> (default=\" + DEFAULT_CONTENT_TYPE + \")\\n\"+\n     \"  -Dhost=<host> (default: \" + DEFAULT_POST_HOST+ \")\\n\"+\n     \"  -Dport=<port> (default: \" + DEFAULT_POST_PORT+ \")\\n\"+\n     \"  -Dbasicauth=<user:pass> (sets Basic Authentication credentials)\\n\"+\n     \"  -Dauto=yes|no (default=\" + DEFAULT_AUTO + \")\\n\"+\n     \"  -Drecursive=yes|no|<depth> (default=\" + DEFAULT_RECURSIVE + \")\\n\"+\n     \"  -Ddelay=<seconds> (default=0 for files, 10 for web)\\n\"+\n     \"  -Dfiletypes=<type>[,<type>,...] (default=\" + DEFAULT_FILE_TYPES + \")\\n\"+\n     \"  -Dparams=\\\"<key>=<value>[&<key>=<value>...]\\\" (values must be URL-encoded)\\n\"+\n     \"  -Dcommit=yes|no (default=\" + DEFAULT_COMMIT + \")\\n\"+\n     \"  -Doptimize=yes|no (default=\" + DEFAULT_OPTIMIZE + \")\\n\"+\n     \"  -Dout=yes|no (default=\" + DEFAULT_OUT + \")\\n\\n\"+\n     \"This is a simple command line tool for POSTing raw data to a Solr port.\\n\"+\n     \"NOTE: Specifying the url/core/collection name is mandatory.\\n\" +\n     \"Data can be read from files specified as commandline args,\\n\"+\n     \"URLs specified as args, as raw commandline arg strings or via STDIN.\\n\"+\n     \"Examples:\\n\"+\n     \"  java -Dc=gettingstarted -jar post.jar *.xml\\n\"+\n     \"  java -Ddata=args -Dc=gettingstarted -jar post.jar '<delete><id>42</id></delete>'\\n\"+\n     \"  java -Ddata=stdin -Dc=gettingstarted -jar post.jar < hd.xml\\n\"+\n     \"  java -Ddata=web -Dc=gettingstarted -jar post.jar http://example.com/\\n\"+\n     \"  java -Dtype=text/csv -Dc=gettingstarted -jar post.jar *.csv\\n\"+\n     \"  java -Dtype=application/json -Dc=gettingstarted -jar post.jar *.json\\n\"+\n     \"  java -Durl=http://localhost:8983/solr/techproducts/update/extract -Dparams=literal.id=pdf1 -jar post.jar solr-word.pdf\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -jar post.jar *\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Drecursive -jar post.jar afolder\\n\"+\n     \"  java -Dauto -Dc=gettingstarted -Dfiletypes=ppt,html -jar post.jar afolder\\n\"+\n     \"The options controlled by System Properties include the Solr\\n\"+\n     \"URL to POST to, the Content-Type of the data, whether a commit\\n\"+\n     \"or optimize should be executed, and whether the response should\\n\"+\n     \"be written to STDOUT. If auto=yes the tool will try to set type\\n\"+\n     \"automatically from file name. When posting rich documents the\\n\"+\n     \"file name will be propagated as \\\"resource.name\\\" and also used\\n\"+\n     \"as \\\"literal.id\\\". You may override these or any other request parameter\\n\"+\n     \"through the -Dparams property. To do a commit only, use \\\"-\\\" as argument.\\n\"+\n     \"The web mode is a simple crawler following links within domain, default delay=10s.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"72e756f664eb3a05326528828d5de9e0bebad61e":["8b039594f79f0a75b62bbbcc9e21b3d1a888c59f"],"f6279c1e4df4ee026df0d7d7f27cb2a8faf4008b":["dd759cf2b6cdb4b385015a01d143d7a535254e93"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":["d6f074e73200c07d54f242d3880a8da5a35ff97b","c2c3a504730329ae644b009dee43024116605d47"],"4f1e77b291a95ac8ab154e45401fd7e374cfd880":["b4b0c778a4367a0beb23255e4c40aa96bfa0f48b"],"30a0894b72a443a16598f92e83172b2a8ae1db03":["f6279c1e4df4ee026df0d7d7f27cb2a8faf4008b"],"c2c3a504730329ae644b009dee43024116605d47":["2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa"],"8b039594f79f0a75b62bbbcc9e21b3d1a888c59f":["b9d35354874f2eceac71c71b652fbface5264339"],"b4b0c778a4367a0beb23255e4c40aa96bfa0f48b":["c2c3a504730329ae644b009dee43024116605d47"],"2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","c2c3a504730329ae644b009dee43024116605d47"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["f6279c1e4df4ee026df0d7d7f27cb2a8faf4008b","30a0894b72a443a16598f92e83172b2a8ae1db03"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["30a0894b72a443a16598f92e83172b2a8ae1db03"],"489cbc2e7c2cd0ef44917b46247f932ec50b9049":["72e756f664eb3a05326528828d5de9e0bebad61e"],"b9d35354874f2eceac71c71b652fbface5264339":["4f1e77b291a95ac8ab154e45401fd7e374cfd880"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"dd759cf2b6cdb4b385015a01d143d7a535254e93":["489cbc2e7c2cd0ef44917b46247f932ec50b9049"]},"commit2Childs":{"72e756f664eb3a05326528828d5de9e0bebad61e":["489cbc2e7c2cd0ef44917b46247f932ec50b9049"],"f6279c1e4df4ee026df0d7d7f27cb2a8faf4008b":["30a0894b72a443a16598f92e83172b2a8ae1db03","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":[],"4f1e77b291a95ac8ab154e45401fd7e374cfd880":["b9d35354874f2eceac71c71b652fbface5264339"],"30a0894b72a443a16598f92e83172b2a8ae1db03":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"c2c3a504730329ae644b009dee43024116605d47":["616c1830142ff5c1ddedec1ed898733b73c8e23b","b4b0c778a4367a0beb23255e4c40aa96bfa0f48b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598"],"8b039594f79f0a75b62bbbcc9e21b3d1a888c59f":["72e756f664eb3a05326528828d5de9e0bebad61e"],"b4b0c778a4367a0beb23255e4c40aa96bfa0f48b":["4f1e77b291a95ac8ab154e45401fd7e374cfd880"],"2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa":["c2c3a504730329ae644b009dee43024116605d47","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2b40eba7ffeb9689a49c3e3ed7f07e2c25a594fa","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["70fa1c0f4d75735ff2e1485e059d9bc5efa50598"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["616c1830142ff5c1ddedec1ed898733b73c8e23b"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"489cbc2e7c2cd0ef44917b46247f932ec50b9049":["dd759cf2b6cdb4b385015a01d143d7a535254e93"],"b9d35354874f2eceac71c71b652fbface5264339":["8b039594f79f0a75b62bbbcc9e21b3d1a888c59f"],"dd759cf2b6cdb4b385015a01d143d7a535254e93":["f6279c1e4df4ee026df0d7d7f27cb2a8faf4008b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}