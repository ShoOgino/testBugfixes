{"path":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","sourceNew":"  /**\n   * Assumes \"solrconfig.xml\" is the config file to use.\n   *\n   * @param dataDirectory path for index data, will not be cleaned up\n   * @param schemaFile path of schema file\n   */\n  public TestHarness( String dataDirectory, String schemaFile) {\n    this( dataDirectory, \"solrconfig.xml\", schemaFile);\n  }\n\n","sourceOld":"  /**\n   * Assumes \"solrconfig.xml\" is the config file to use.\n   *\n   * @param dataDirectory path for index data, will not be cleaned up\n   * @param schemaFile path of schema file\n   */\n  public TestHarness( String dataDirectory, String schemaFile) {\n    this( dataDirectory, \"solrconfig.xml\", schemaFile);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","sourceNew":"  /**\n   * Assumes \"solrconfig.xml\" is the config file to use.\n   *\n   * @param dataDirectory path for index data, will not be cleaned up\n   * @param schemaFile path of schema file\n   */\n  public TestHarness( String dataDirectory, String schemaFile) {\n    this( dataDirectory, \"solrconfig.xml\", schemaFile);\n  }\n\n","sourceOld":"  /**\n   * Assumes \"solrconfig.xml\" is the config file to use.\n   *\n   * @param dataDirectory path for index data, will not be cleaned up\n   * @param schemaFile path of schema file\n   */\n  public TestHarness( String dataDirectory, String schemaFile) {\n    this( dataDirectory, \"solrconfig.xml\", schemaFile);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","sourceNew":"  /**\n   * Assumes \"solrconfig.xml\" is the config file to use.\n   *\n   * @param dataDirectory path for index data, will not be cleaned up\n   * @param schemaFile path of schema file\n   */\n  public TestHarness( String dataDirectory, String schemaFile) {\n    this( dataDirectory, \"solrconfig.xml\", schemaFile);\n  }\n\n","sourceOld":"  /**\n   * Assumes \"solrconfig.xml\" is the config file to use.\n   *\n   * @param dataDirectory path for index data, will not be cleaned up\n   * @param schemaFile path of schema file\n   */\n  public TestHarness( String dataDirectory, String schemaFile) {\n    this( dataDirectory, \"solrconfig.xml\", schemaFile);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21591922fb4db3e2a6ffb2cb342b3d61c053a973","date":1340761680,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Assumes \"solrconfig.xml\" is the config file to use.\n   *\n   * @param dataDirectory path for index data, will not be cleaned up\n   * @param schemaFile path of schema file\n   */\n  public TestHarness( String dataDirectory, String schemaFile) {\n    this( dataDirectory, \"solrconfig.xml\", schemaFile);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Assumes \"solrconfig.xml\" is the config file to use.\n   *\n   * @param dataDirectory path for index data, will not be cleaned up\n   * @param schemaFile path of schema file\n   */\n  public TestHarness( String dataDirectory, String schemaFile) {\n    this( dataDirectory, \"solrconfig.xml\", schemaFile);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d264f386d864b5751209060e8886ca9845f70469","date":1372172126,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a TestHarness using a specific solr home directory and solr xml\n   * @param solrHome the solr home directory\n   * @param solrXml a File pointing to a solr.xml configuration\n   */\n  public TestHarness(String solrHome, String solrXml) {\n    this(new SolrResourceLoader(solrHome),\n          ConfigSolr.fromInputStream(null, new ByteArrayInputStream(solrXml.getBytes(Charsets.UTF_8))));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"354983dcdf70c800bf2573d10b54a7391b1dc167","date":1372183171,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Create a TestHarness using a specific solr home directory and solr xml\n   * @param solrHome the solr home directory\n   * @param solrXml a File pointing to a solr.xml configuration\n   */\n  public TestHarness(String solrHome, String solrXml) {\n    this(new SolrResourceLoader(solrHome),\n          ConfigSolr.fromInputStream(null, new ByteArrayInputStream(solrXml.getBytes(Charsets.UTF_8))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7116474e2e390259937401cf928323e0cbc75e60","date":1372780249,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a TestHarness using a specific solr home directory and solr xml\n   * @param solrHome the solr home directory\n   * @param solrXml a File pointing to a solr.xml configuration\n   */\n  public TestHarness(String solrHome, String solrXml) {\n    this(new SolrResourceLoader(solrHome),\n          ConfigSolr.fromInputStream(null, new ByteArrayInputStream(solrXml.getBytes(Charsets.UTF_8))));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["77993852b2d2185c378b115f8842c0adaeb8f709"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","sourceNew":"  /**\n   * Create a TestHarness using a specific solr home directory and solr xml\n   * @param solrHome the solr home directory\n   * @param solrXml a File pointing to a solr.xml configuration\n   */\n  public TestHarness(String solrHome, String solrXml) {\n    this(new SolrResourceLoader(solrHome),\n          ConfigSolr.fromString(solrXml));\n  }\n\n","sourceOld":"  /**\n   * Create a TestHarness using a specific solr home directory and solr xml\n   * @param solrHome the solr home directory\n   * @param solrXml a File pointing to a solr.xml configuration\n   */\n  public TestHarness(String solrHome, String solrXml) {\n    this(new SolrResourceLoader(solrHome),\n          ConfigSolr.fromInputStream(null, new ByteArrayInputStream(solrXml.getBytes(Charsets.UTF_8))));\n  }\n\n","bugFix":null,"bugIntro":["77993852b2d2185c378b115f8842c0adaeb8f709"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a TestHarness using a specific solr home directory and solr xml\n   * @param solrHome the solr home directory\n   * @param solrXml a File pointing to a solr.xml configuration\n   */\n  public TestHarness(String solrHome, String solrXml) {\n    this(new SolrResourceLoader(solrHome),\n          ConfigSolr.fromString(solrXml));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77993852b2d2185c378b115f8842c0adaeb8f709","date":1392036304,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","sourceNew":"  /**\n   * Create a TestHarness using a specific solr home directory and solr xml\n   * @param solrHome the solr home directory\n   * @param solrXml the text of a solrxml\n   */\n  public TestHarness(String solrHome, String solrXml) {\n    this(new SolrResourceLoader(solrHome), solrXml);\n  }\n\n","sourceOld":"  /**\n   * Create a TestHarness using a specific solr home directory and solr xml\n   * @param solrHome the solr home directory\n   * @param solrXml a File pointing to a solr.xml configuration\n   */\n  public TestHarness(String solrHome, String solrXml) {\n    this(new SolrResourceLoader(solrHome),\n          ConfigSolr.fromString(solrXml));\n  }\n\n","bugFix":["7116474e2e390259937401cf928323e0cbc75e60","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(Path,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String).mjava","sourceNew":"  /**\n   * Create a TestHarness using a specific solr home directory and solr xml\n   * @param solrHome the solr home directory\n   * @param solrXml the text of a solrxml\n   */\n  public TestHarness(Path solrHome, String solrXml) {\n    this(new SolrResourceLoader(solrHome), solrXml);\n  }\n\n","sourceOld":"  /**\n   * Create a TestHarness using a specific solr home directory and solr xml\n   * @param solrHome the solr home directory\n   * @param solrXml the text of a solrxml\n   */\n  public TestHarness(String solrHome, String solrXml) {\n    this(new SolrResourceLoader(solrHome), solrXml);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7116474e2e390259937401cf928323e0cbc75e60":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"21591922fb4db3e2a6ffb2cb342b3d61c053a973":["c26f00b574427b55127e869b935845554afde1fa"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["21591922fb4db3e2a6ffb2cb342b3d61c053a973","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["d264f386d864b5751209060e8886ca9845f70469"],"77993852b2d2185c378b115f8842c0adaeb8f709":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"d264f386d864b5751209060e8886ca9845f70469":["21591922fb4db3e2a6ffb2cb342b3d61c053a973"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["77993852b2d2185c378b115f8842c0adaeb8f709"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["c26f00b574427b55127e869b935845554afde1fa","21591922fb4db3e2a6ffb2cb342b3d61c053a973"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["7116474e2e390259937401cf928323e0cbc75e60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a626ec4d1c92e59fe390724d6220081047b03ce7"]},"commit2Childs":{"7116474e2e390259937401cf928323e0cbc75e60":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"21591922fb4db3e2a6ffb2cb342b3d61c053a973":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d264f386d864b5751209060e8886ca9845f70469","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c26f00b574427b55127e869b935845554afde1fa":["21591922fb4db3e2a6ffb2cb342b3d61c053a973","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["7116474e2e390259937401cf928323e0cbc75e60"],"77993852b2d2185c378b115f8842c0adaeb8f709":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"d264f386d864b5751209060e8886ca9845f70469":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","77993852b2d2185c378b115f8842c0adaeb8f709"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","fe33227f6805edab2036cbb80645cc4e2d1fa424","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}