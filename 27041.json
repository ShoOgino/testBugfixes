{"path":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","commits":[{"id":"f31d1f3a9bc5a99a8d7f3110bab36210e7d967c6","date":1337196931,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","pathOld":"/dev/null","sourceNew":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl();\n    SimpleMemCtrl memCtrl = new SimpleMemCtrl();\n    memCtrl.limit = 1000;\n    memCtrl.netBytes = 1000;\n    ctrl.updateStalled(memCtrl);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 10);\n    \n    // now stall threads and wake them up again\n    memCtrl.netBytes = 1001;\n    ctrl.updateStalled(memCtrl);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(100, Thread.State.WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    memCtrl.netBytes = 50;\n    ctrl.updateStalled(memCtrl);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 100);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"558df6d1f81b27a5e466471ccc0cf313208b99ce","date":1337539191,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","sourceNew":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl();\n    SimpleMemCtrl memCtrl = new SimpleMemCtrl();\n    memCtrl.limit = 1000;\n    memCtrl.netBytes = 1000;\n    ctrl.updateStalled(memCtrl);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 10);\n    \n    // now stall threads and wake them up again\n    memCtrl.netBytes = 1001;\n    ctrl.updateStalled(memCtrl);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(100, Thread.State.WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    memCtrl.netBytes = 50;\n    ctrl.updateStalled(memCtrl);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 500);\n  }\n\n","sourceOld":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl();\n    SimpleMemCtrl memCtrl = new SimpleMemCtrl();\n    memCtrl.limit = 1000;\n    memCtrl.netBytes = 1000;\n    ctrl.updateStalled(memCtrl);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 10);\n    \n    // now stall threads and wake them up again\n    memCtrl.netBytes = 1001;\n    ctrl.updateStalled(memCtrl);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(100, Thread.State.WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    memCtrl.netBytes = 50;\n    ctrl.updateStalled(memCtrl);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 100);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","pathOld":"/dev/null","sourceNew":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl();\n    SimpleMemCtrl memCtrl = new SimpleMemCtrl();\n    memCtrl.limit = 1000;\n    memCtrl.netBytes = 1000;\n    ctrl.updateStalled(memCtrl);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 10);\n    \n    // now stall threads and wake them up again\n    memCtrl.netBytes = 1001;\n    ctrl.updateStalled(memCtrl);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(100, Thread.State.WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    memCtrl.netBytes = 50;\n    ctrl.updateStalled(memCtrl);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 500);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a0bb7b6eeee9103dc4c7cb2dfd62a9a41894fc2","date":1337674113,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","sourceNew":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl();\n    SimpleMemCtrl memCtrl = new SimpleMemCtrl();\n    memCtrl.limit = 1000;\n    memCtrl.netBytes = 1000;\n    memCtrl.flushBytes = 20;\n    ctrl.updateStalled(memCtrl);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 10);\n    \n    // now stall threads and wake them up again\n    memCtrl.netBytes = 1001;\n    memCtrl.flushBytes = 100;\n    ctrl.updateStalled(memCtrl);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(100, Thread.State.WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    memCtrl.netBytes = 50;\n    memCtrl.flushBytes = 0;\n    ctrl.updateStalled(memCtrl);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 500);\n  }\n\n","sourceOld":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl();\n    SimpleMemCtrl memCtrl = new SimpleMemCtrl();\n    memCtrl.limit = 1000;\n    memCtrl.netBytes = 1000;\n    ctrl.updateStalled(memCtrl);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 10);\n    \n    // now stall threads and wake them up again\n    memCtrl.netBytes = 1001;\n    ctrl.updateStalled(memCtrl);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(100, Thread.State.WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    memCtrl.netBytes = 50;\n    ctrl.updateStalled(memCtrl);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 500);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3599646b4d4c346cf74d334813488b8b337b5bf5","date":1337790261,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","sourceNew":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl();\n    SimpleMemCtrl memCtrl = new SimpleMemCtrl();\n    memCtrl.limit = 1000;\n    memCtrl.netBytes = 1000;\n    memCtrl.flushBytes = 20;\n    ctrl.updateStalled(memCtrl);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 10);\n    \n    // now stall threads and wake them up again\n    memCtrl.netBytes = 1001;\n    memCtrl.flushBytes = 100;\n    ctrl.updateStalled(memCtrl);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(100, Thread.State.WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    memCtrl.netBytes = 50;\n    memCtrl.flushBytes = 0;\n    ctrl.updateStalled(memCtrl);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 500);\n  }\n\n","sourceOld":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl();\n    SimpleMemCtrl memCtrl = new SimpleMemCtrl();\n    memCtrl.limit = 1000;\n    memCtrl.netBytes = 1000;\n    ctrl.updateStalled(memCtrl);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 10);\n    \n    // now stall threads and wake them up again\n    memCtrl.netBytes = 1001;\n    ctrl.updateStalled(memCtrl);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(100, Thread.State.WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    memCtrl.netBytes = 50;\n    ctrl.updateStalled(memCtrl);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 500);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e38f40562eb7c165ae08ab2367a031883138354","date":1340287338,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","sourceNew":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl();\n   \n    ctrl.updateStalled(false);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 10);\n    \n    // now stall threads and wake them up again\n    ctrl.updateStalled(true);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(100, Thread.State.WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    ctrl.updateStalled(false);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 500);\n  }\n\n","sourceOld":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl();\n    SimpleMemCtrl memCtrl = new SimpleMemCtrl();\n    memCtrl.limit = 1000;\n    memCtrl.netBytes = 1000;\n    memCtrl.flushBytes = 20;\n    ctrl.updateStalled(memCtrl);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 10);\n    \n    // now stall threads and wake them up again\n    memCtrl.netBytes = 1001;\n    memCtrl.flushBytes = 100;\n    ctrl.updateStalled(memCtrl);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(100, Thread.State.WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    memCtrl.netBytes = 50;\n    memCtrl.flushBytes = 0;\n    ctrl.updateStalled(memCtrl);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 500);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","sourceNew":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl();\n   \n    ctrl.updateStalled(false);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 10);\n    \n    // now stall threads and wake them up again\n    ctrl.updateStalled(true);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(100, Thread.State.WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    ctrl.updateStalled(false);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 500);\n  }\n\n","sourceOld":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl();\n    SimpleMemCtrl memCtrl = new SimpleMemCtrl();\n    memCtrl.limit = 1000;\n    memCtrl.netBytes = 1000;\n    memCtrl.flushBytes = 20;\n    ctrl.updateStalled(memCtrl);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 10);\n    \n    // now stall threads and wake them up again\n    memCtrl.netBytes = 1001;\n    memCtrl.flushBytes = 100;\n    ctrl.updateStalled(memCtrl);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(100, Thread.State.WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    memCtrl.netBytes = 50;\n    memCtrl.flushBytes = 0;\n    ctrl.updateStalled(memCtrl);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 500);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61a1004502370815d01bf1b70296c08d563033fe","date":1349367697,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","sourceNew":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl();\n   \n    ctrl.updateStalled(false);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n    \n    // now stall threads and wake them up again\n    ctrl.updateStalled(true);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(Thread.State.WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    ctrl.updateStalled(false);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n  }\n\n","sourceOld":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl();\n   \n    ctrl.updateStalled(false);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 10);\n    \n    // now stall threads and wake them up again\n    ctrl.updateStalled(true);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(100, Thread.State.WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    ctrl.updateStalled(false);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads, 500);\n  }\n\n","bugFix":null,"bugIntro":["2b148364985e538e801c1e4d9614b8b2a9190339"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bbd7967e39613fd5cfff97ca0eee81b1028a85d1","date":1422628745,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","sourceNew":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl(newIndexWriterConfig());\n   \n    ctrl.updateStalled(false);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n    \n    // now stall threads and wake them up again\n    ctrl.updateStalled(true);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(Thread.State.WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    ctrl.updateStalled(false);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n  }\n\n","sourceOld":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl();\n   \n    ctrl.updateStalled(false);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n    \n    // now stall threads and wake them up again\n    ctrl.updateStalled(true);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(Thread.State.WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    ctrl.updateStalled(false);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2b148364985e538e801c1e4d9614b8b2a9190339","date":1427880341,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","sourceNew":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl(newIndexWriterConfig());\n   \n    ctrl.updateStalled(false);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n    \n    // now stall threads and wake them up again\n    ctrl.updateStalled(true);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(Thread.State.TIMED_WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    ctrl.updateStalled(false);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n  }\n\n","sourceOld":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl(newIndexWriterConfig());\n   \n    ctrl.updateStalled(false);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n    \n    // now stall threads and wake them up again\n    ctrl.updateStalled(true);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(Thread.State.WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    ctrl.updateStalled(false);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n  }\n\n","bugFix":["61a1004502370815d01bf1b70296c08d563033fe"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c924d4069ef5a5bc479a493befe0121aada6896","date":1427901860,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","sourceNew":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl(newIndexWriterConfig());\n   \n    ctrl.updateStalled(false);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n    \n    // now stall threads and wake them up again\n    ctrl.updateStalled(true);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(Thread.State.TIMED_WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    ctrl.updateStalled(false);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n  }\n\n","sourceOld":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl(newIndexWriterConfig());\n   \n    ctrl.updateStalled(false);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n    \n    // now stall threads and wake them up again\n    ctrl.updateStalled(true);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(Thread.State.WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    ctrl.updateStalled(false);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be382406ee6e8449e49c082b50c31367e7add702","date":1469488703,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","sourceNew":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl();\n   \n    ctrl.updateStalled(false);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n    \n    // now stall threads and wake them up again\n    ctrl.updateStalled(true);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(Thread.State.TIMED_WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    ctrl.updateStalled(false);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n  }\n\n","sourceOld":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl(newIndexWriterConfig());\n   \n    ctrl.updateStalled(false);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n    \n    // now stall threads and wake them up again\n    ctrl.updateStalled(true);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(Thread.State.TIMED_WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    ctrl.updateStalled(false);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d08973aa47f2cf98a588293a53af4e948952ccfb","date":1469518724,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","sourceNew":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl();\n   \n    ctrl.updateStalled(false);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n    \n    // now stall threads and wake them up again\n    ctrl.updateStalled(true);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(Thread.State.TIMED_WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    ctrl.updateStalled(false);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n  }\n\n","sourceOld":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl(newIndexWriterConfig());\n   \n    ctrl.updateStalled(false);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n    \n    // now stall threads and wake them up again\n    ctrl.updateStalled(true);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(Thread.State.TIMED_WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    ctrl.updateStalled(false);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocumentsWriterStallControl#testSimpleStall().mjava","sourceNew":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl();\n   \n    ctrl.updateStalled(false);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n    \n    // now stall threads and wake them up again\n    ctrl.updateStalled(true);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(Thread.State.TIMED_WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    ctrl.updateStalled(false);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n  }\n\n","sourceOld":"  public void testSimpleStall() throws InterruptedException {\n    DocumentsWriterStallControl ctrl = new DocumentsWriterStallControl(newIndexWriterConfig());\n   \n    ctrl.updateStalled(false);\n    Thread[] waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    assertFalse(ctrl.hasBlocked());\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n    \n    // now stall threads and wake them up again\n    ctrl.updateStalled(true);\n    waitThreads = waitThreads(atLeast(1), ctrl);\n    start(waitThreads);\n    awaitState(Thread.State.TIMED_WAITING, waitThreads);\n    assertTrue(ctrl.hasBlocked());\n    assertTrue(ctrl.anyStalledThreads());\n    ctrl.updateStalled(false);\n    assertFalse(ctrl.anyStalledThreads());\n    join(waitThreads);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5e38f40562eb7c165ae08ab2367a031883138354":["7a0bb7b6eeee9103dc4c7cb2dfd62a9a41894fc2"],"f31d1f3a9bc5a99a8d7f3110bab36210e7d967c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7a0bb7b6eeee9103dc4c7cb2dfd62a9a41894fc2":["558df6d1f81b27a5e466471ccc0cf313208b99ce"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2b148364985e538e801c1e4d9614b8b2a9190339","d08973aa47f2cf98a588293a53af4e948952ccfb"],"0c924d4069ef5a5bc479a493befe0121aada6896":["bbd7967e39613fd5cfff97ca0eee81b1028a85d1","2b148364985e538e801c1e4d9614b8b2a9190339"],"558df6d1f81b27a5e466471ccc0cf313208b99ce":["f31d1f3a9bc5a99a8d7f3110bab36210e7d967c6"],"2b148364985e538e801c1e4d9614b8b2a9190339":["bbd7967e39613fd5cfff97ca0eee81b1028a85d1"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["7a0bb7b6eeee9103dc4c7cb2dfd62a9a41894fc2","5e38f40562eb7c165ae08ab2367a031883138354"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"be382406ee6e8449e49c082b50c31367e7add702":["2b148364985e538e801c1e4d9614b8b2a9190339"],"3599646b4d4c346cf74d334813488b8b337b5bf5":["ef0d8a69209261514c5739c770bba706c2308450","7a0bb7b6eeee9103dc4c7cb2dfd62a9a41894fc2"],"61a1004502370815d01bf1b70296c08d563033fe":["5e38f40562eb7c165ae08ab2367a031883138354"],"d08973aa47f2cf98a588293a53af4e948952ccfb":["2b148364985e538e801c1e4d9614b8b2a9190339","be382406ee6e8449e49c082b50c31367e7add702"],"ef0d8a69209261514c5739c770bba706c2308450":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","558df6d1f81b27a5e466471ccc0cf313208b99ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d08973aa47f2cf98a588293a53af4e948952ccfb"],"bbd7967e39613fd5cfff97ca0eee81b1028a85d1":["61a1004502370815d01bf1b70296c08d563033fe"]},"commit2Childs":{"5e38f40562eb7c165ae08ab2367a031883138354":["fe33227f6805edab2036cbb80645cc4e2d1fa424","61a1004502370815d01bf1b70296c08d563033fe"],"f31d1f3a9bc5a99a8d7f3110bab36210e7d967c6":["558df6d1f81b27a5e466471ccc0cf313208b99ce"],"7a0bb7b6eeee9103dc4c7cb2dfd62a9a41894fc2":["5e38f40562eb7c165ae08ab2367a031883138354","fe33227f6805edab2036cbb80645cc4e2d1fa424","3599646b4d4c346cf74d334813488b8b337b5bf5"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"0c924d4069ef5a5bc479a493befe0121aada6896":[],"558df6d1f81b27a5e466471ccc0cf313208b99ce":["7a0bb7b6eeee9103dc4c7cb2dfd62a9a41894fc2","ef0d8a69209261514c5739c770bba706c2308450"],"2b148364985e538e801c1e4d9614b8b2a9190339":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","0c924d4069ef5a5bc479a493befe0121aada6896","be382406ee6e8449e49c082b50c31367e7add702","d08973aa47f2cf98a588293a53af4e948952ccfb"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f31d1f3a9bc5a99a8d7f3110bab36210e7d967c6","ef0d8a69209261514c5739c770bba706c2308450"],"be382406ee6e8449e49c082b50c31367e7add702":["d08973aa47f2cf98a588293a53af4e948952ccfb"],"3599646b4d4c346cf74d334813488b8b337b5bf5":[],"d08973aa47f2cf98a588293a53af4e948952ccfb":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"61a1004502370815d01bf1b70296c08d563033fe":["bbd7967e39613fd5cfff97ca0eee81b1028a85d1"],"ef0d8a69209261514c5739c770bba706c2308450":["3599646b4d4c346cf74d334813488b8b337b5bf5"],"bbd7967e39613fd5cfff97ca0eee81b1028a85d1":["0c924d4069ef5a5bc479a493befe0121aada6896","2b148364985e538e801c1e4d9614b8b2a9190339"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","0c924d4069ef5a5bc479a493befe0121aada6896","fe33227f6805edab2036cbb80645cc4e2d1fa424","3599646b4d4c346cf74d334813488b8b337b5bf5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}