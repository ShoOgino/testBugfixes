{"path":"src/java/org/apache/lucene/store/RAMOutputStream#switchCurrentBuffer().mjava","commits":[{"id":"d568d474b2c3c00dd89047135bcb6ff8bfa7b559","date":1176840521,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMOutputStream#switchCurrentBuffer().mjava","pathOld":"/dev/null","sourceNew":"  private final void switchCurrentBuffer() throws IOException {\n    if (currentBufferIndex == file.buffers.size()) {\n      currentBuffer = file.addBuffer(BUFFER_SIZE);\n    } else {\n      currentBuffer = (byte[]) file.buffers.get(currentBufferIndex);\n    }\n    bufferPosition = 0;\n    bufferStart = BUFFER_SIZE * currentBufferIndex;\n    bufferLength = currentBuffer.length;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","db540c50a68e844566353b8808cc4b7106eb13d6","1acc0d4d75fc7ad1dae131d00a9ffa438b257ebe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1acc0d4d75fc7ad1dae131d00a9ffa438b257ebe","date":1184862468,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMOutputStream#switchCurrentBuffer().mjava","pathOld":"src/java/org/apache/lucene/store/RAMOutputStream#switchCurrentBuffer().mjava","sourceNew":"  private final void switchCurrentBuffer() throws IOException {\n    if (currentBufferIndex == file.buffers.size()) {\n      currentBuffer = file.addBuffer(BUFFER_SIZE);\n    } else {\n      currentBuffer = (byte[]) file.buffers.get(currentBufferIndex);\n    }\n    bufferPosition = 0;\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    bufferLength = currentBuffer.length;\n  }\n\n","sourceOld":"  private final void switchCurrentBuffer() throws IOException {\n    if (currentBufferIndex == file.buffers.size()) {\n      currentBuffer = file.addBuffer(BUFFER_SIZE);\n    } else {\n      currentBuffer = (byte[]) file.buffers.get(currentBufferIndex);\n    }\n    bufferPosition = 0;\n    bufferStart = BUFFER_SIZE * currentBufferIndex;\n    bufferLength = currentBuffer.length;\n  }\n\n","bugFix":["d568d474b2c3c00dd89047135bcb6ff8bfa7b559"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"db540c50a68e844566353b8808cc4b7106eb13d6","date":1196182881,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMOutputStream#switchCurrentBuffer().mjava","pathOld":"src/java/org/apache/lucene/store/RAMOutputStream#switchCurrentBuffer().mjava","sourceNew":"  private final void switchCurrentBuffer() throws IOException {\n    if (currentBufferIndex == file.numBuffers()) {\n      currentBuffer = file.addBuffer(BUFFER_SIZE);\n    } else {\n      currentBuffer = (byte[]) file.getBuffer(currentBufferIndex);\n    }\n    bufferPosition = 0;\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    bufferLength = currentBuffer.length;\n  }\n\n","sourceOld":"  private final void switchCurrentBuffer() throws IOException {\n    if (currentBufferIndex == file.buffers.size()) {\n      currentBuffer = file.addBuffer(BUFFER_SIZE);\n    } else {\n      currentBuffer = (byte[]) file.buffers.get(currentBufferIndex);\n    }\n    bufferPosition = 0;\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    bufferLength = currentBuffer.length;\n  }\n\n","bugFix":["d568d474b2c3c00dd89047135bcb6ff8bfa7b559"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"20645c714ca2a7b7707c2707d58ee9fa384c7362","date":1256074979,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMOutputStream#switchCurrentBuffer().mjava","pathOld":"src/java/org/apache/lucene/store/RAMOutputStream#switchCurrentBuffer().mjava","sourceNew":"  private final void switchCurrentBuffer() throws IOException {\n    if (currentBufferIndex == file.numBuffers()) {\n      currentBuffer = file.addBuffer(BUFFER_SIZE);\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n    }\n    bufferPosition = 0;\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    bufferLength = currentBuffer.length;\n  }\n\n","sourceOld":"  private final void switchCurrentBuffer() throws IOException {\n    if (currentBufferIndex == file.numBuffers()) {\n      currentBuffer = file.addBuffer(BUFFER_SIZE);\n    } else {\n      currentBuffer = (byte[]) file.getBuffer(currentBufferIndex);\n    }\n    bufferPosition = 0;\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    bufferLength = currentBuffer.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/RAMOutputStream#switchCurrentBuffer().mjava","pathOld":"src/java/org/apache/lucene/store/RAMOutputStream#switchCurrentBuffer().mjava","sourceNew":"  private final void switchCurrentBuffer() throws IOException {\n    if (currentBufferIndex == file.numBuffers()) {\n      currentBuffer = file.addBuffer(BUFFER_SIZE);\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n    }\n    bufferPosition = 0;\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    bufferLength = currentBuffer.length;\n  }\n\n","sourceOld":"  private final void switchCurrentBuffer() throws IOException {\n    if (currentBufferIndex == file.numBuffers()) {\n      currentBuffer = file.addBuffer(BUFFER_SIZE);\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n    }\n    bufferPosition = 0;\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    bufferLength = currentBuffer.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"d568d474b2c3c00dd89047135bcb6ff8bfa7b559":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"db540c50a68e844566353b8808cc4b7106eb13d6":["1acc0d4d75fc7ad1dae131d00a9ffa438b257ebe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"20645c714ca2a7b7707c2707d58ee9fa384c7362":["db540c50a68e844566353b8808cc4b7106eb13d6"],"1acc0d4d75fc7ad1dae131d00a9ffa438b257ebe":["d568d474b2c3c00dd89047135bcb6ff8bfa7b559"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["20645c714ca2a7b7707c2707d58ee9fa384c7362"]},"commit2Childs":{"d568d474b2c3c00dd89047135bcb6ff8bfa7b559":["1acc0d4d75fc7ad1dae131d00a9ffa438b257ebe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d568d474b2c3c00dd89047135bcb6ff8bfa7b559"],"db540c50a68e844566353b8808cc4b7106eb13d6":["20645c714ca2a7b7707c2707d58ee9fa384c7362"],"20645c714ca2a7b7707c2707d58ee9fa384c7362":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"1acc0d4d75fc7ad1dae131d00a9ffa438b257ebe":["db540c50a68e844566353b8808cc4b7106eb13d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}