{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextSimpleDocValuesFormat.SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","commits":[{"id":"a761b207f161726214a84533bf56a78f6c21ff56","date":1354384027,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextSimpleDocValuesFormat.SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextSimpleDocValuesFormat.SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState).mjava","sourceNew":"    SimpleTextDocValuesWriter(SegmentWriteState state, String ext) throws IOException {\n      data = state.directory.createOutput(IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext), state.context);\n      numDocs = state.segmentInfo.getDocCount();\n    }\n\n","sourceOld":"    SimpleTextDocValuesWriter(SegmentWriteState state) throws IOException {\n      data = state.directory.createOutput(IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, \"dat\"), state.context);\n      numDocs = state.segmentInfo.getDocCount();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55eeb2534cd53d2a985669829df942468ebf5314","date":1354409119,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextSimpleDocValuesFormat.SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextSimpleDocValuesFormat.SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","sourceNew":"    SimpleTextDocValuesWriter(SegmentWriteState state, String ext) throws IOException {\n      //System.out.println(\"WRITE: \" + IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext) + \" \" + state.segmentInfo.getDocCount() + \" docs\");\n      data = state.directory.createOutput(IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext), state.context);\n      numDocs = state.segmentInfo.getDocCount();\n      isNorms = ext.equals(\"slen\");\n    }\n\n","sourceOld":"    SimpleTextDocValuesWriter(SegmentWriteState state, String ext) throws IOException {\n      data = state.directory.createOutput(IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext), state.context);\n      numDocs = state.segmentInfo.getDocCount();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ba81908bd58bd5079d89f3dafc90bce86fa08a6","date":1354575765,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextSimpleDocValuesFormat.SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextSimpleDocValuesFormat.SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","sourceNew":"    public SimpleTextDocValuesWriter(SegmentWriteState state, String ext) throws IOException {\n      //System.out.println(\"WRITE: \" + IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext) + \" \" + state.segmentInfo.getDocCount() + \" docs\");\n      data = state.directory.createOutput(IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext), state.context);\n      numDocs = state.segmentInfo.getDocCount();\n      isNorms = ext.equals(\"slen\");\n    }\n\n","sourceOld":"    SimpleTextDocValuesWriter(SegmentWriteState state, String ext) throws IOException {\n      //System.out.println(\"WRITE: \" + IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext) + \" \" + state.segmentInfo.getDocCount() + \" docs\");\n      data = state.directory.createOutput(IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext), state.context);\n      numDocs = state.segmentInfo.getDocCount();\n      isNorms = ext.equals(\"slen\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200","date":1358521790,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextDocValuesFormat.SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextSimpleDocValuesFormat.SimpleTextDocValuesWriter#SimpleTextDocValuesWriter(SegmentWriteState,String).mjava","sourceNew":"    public SimpleTextDocValuesWriter(SegmentWriteState state, String ext) throws IOException {\n      //System.out.println(\"WRITE: \" + IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext) + \" \" + state.segmentInfo.getDocCount() + \" docs\");\n      data = state.directory.createOutput(IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext), state.context);\n      numDocs = state.segmentInfo.getDocCount();\n      isNorms = ext.equals(\"slen\");\n    }\n\n","sourceOld":"    public SimpleTextDocValuesWriter(SegmentWriteState state, String ext) throws IOException {\n      //System.out.println(\"WRITE: \" + IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext) + \" \" + state.segmentInfo.getDocCount() + \" docs\");\n      data = state.directory.createOutput(IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, ext), state.context);\n      numDocs = state.segmentInfo.getDocCount();\n      isNorms = ext.equals(\"slen\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a761b207f161726214a84533bf56a78f6c21ff56":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4ba81908bd58bd5079d89f3dafc90bce86fa08a6":["55eeb2534cd53d2a985669829df942468ebf5314"],"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200":["4ba81908bd58bd5079d89f3dafc90bce86fa08a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"55eeb2534cd53d2a985669829df942468ebf5314":["a761b207f161726214a84533bf56a78f6c21ff56"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a761b207f161726214a84533bf56a78f6c21ff56":["55eeb2534cd53d2a985669829df942468ebf5314"],"4ba81908bd58bd5079d89f3dafc90bce86fa08a6":["b8acf0807ca5f38beda8e0f7d5ab46ff39f81200"],"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a761b207f161726214a84533bf56a78f6c21ff56","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"55eeb2534cd53d2a985669829df942468ebf5314":["4ba81908bd58bd5079d89f3dafc90bce86fa08a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b8acf0807ca5f38beda8e0f7d5ab46ff39f81200","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}