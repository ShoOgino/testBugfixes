{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#stem(String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#stem(String).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#stem(String).mjava","sourceNew":"    /**\n     * Stemms the given term to an unique <tt>discriminator</tt>.\n     *\n     * @param term  The term that should be stemmed.\n     * @return      Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term )\n    {\n      // Use lowercase for medium stemming.\n      term = term.toLowerCase();\n      if ( !isStemmable( term ) )\n        return term;\n      // Reset the StringBuilder.\n      sb.delete( 0, sb.length() );\n      sb.insert( 0, term );\n      // Stemming starts here...\n      substitute( sb );\n      strip( sb );\n      optimize( sb );\n      resubstitute( sb );\n      removeParticleDenotion( sb );\n      return sb.toString();\n    }\n\n","sourceOld":"    /**\n     * Stemms the given term to an unique <tt>discriminator</tt>.\n     *\n     * @param term  The term that should be stemmed.\n     * @return      Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term )\n    {\n      // Use lowercase for medium stemming.\n      term = term.toLowerCase();\n      if ( !isStemmable( term ) )\n        return term;\n      // Reset the StringBuilder.\n      sb.delete( 0, sb.length() );\n      sb.insert( 0, term );\n      // Stemming starts here...\n      substitute( sb );\n      strip( sb );\n      optimize( sb );\n      resubstitute( sb );\n      removeParticleDenotion( sb );\n      return sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5dc83d085f83b38c31736c494913c0c75265ce02","date":1341762281,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#stem(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#stem(String).mjava","sourceNew":"    /**\n     * Stemms the given term to an unique <tt>discriminator</tt>.\n     *\n     * @param term  The term that should be stemmed.\n     * @return      Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term )\n    {\n      // Use lowercase for medium stemming.\n      term = term.toLowerCase(locale);\n      if ( !isStemmable( term ) )\n        return term;\n      // Reset the StringBuilder.\n      sb.delete( 0, sb.length() );\n      sb.insert( 0, term );\n      // Stemming starts here...\n      substitute( sb );\n      strip( sb );\n      optimize( sb );\n      resubstitute( sb );\n      removeParticleDenotion( sb );\n      return sb.toString();\n    }\n\n","sourceOld":"    /**\n     * Stemms the given term to an unique <tt>discriminator</tt>.\n     *\n     * @param term  The term that should be stemmed.\n     * @return      Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term )\n    {\n      // Use lowercase for medium stemming.\n      term = term.toLowerCase();\n      if ( !isStemmable( term ) )\n        return term;\n      // Reset the StringBuilder.\n      sb.delete( 0, sb.length() );\n      sb.insert( 0, term );\n      // Stemming starts here...\n      substitute( sb );\n      strip( sb );\n      optimize( sb );\n      resubstitute( sb );\n      removeParticleDenotion( sb );\n      return sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#stem(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#stem(String).mjava","sourceNew":"    /**\n     * Stemms the given term to an unique <tt>discriminator</tt>.\n     *\n     * @param term  The term that should be stemmed.\n     * @return      Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term )\n    {\n      // Use lowercase for medium stemming.\n      term = term.toLowerCase(locale);\n      if ( !isStemmable( term ) )\n        return term;\n      // Reset the StringBuilder.\n      sb.delete( 0, sb.length() );\n      sb.insert( 0, term );\n      // Stemming starts here...\n      substitute( sb );\n      strip( sb );\n      optimize( sb );\n      resubstitute( sb );\n      removeParticleDenotion( sb );\n      return sb.toString();\n    }\n\n","sourceOld":"    /**\n     * Stemms the given term to an unique <tt>discriminator</tt>.\n     *\n     * @param term  The term that should be stemmed.\n     * @return      Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term )\n    {\n      // Use lowercase for medium stemming.\n      term = term.toLowerCase();\n      if ( !isStemmable( term ) )\n        return term;\n      // Reset the StringBuilder.\n      sb.delete( 0, sb.length() );\n      sb.insert( 0, term );\n      // Stemming starts here...\n      substitute( sb );\n      strip( sb );\n      optimize( sb );\n      resubstitute( sb );\n      removeParticleDenotion( sb );\n      return sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#stem(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#stem(String).mjava","sourceNew":"    /**\n     * Stemms the given term to an unique <tt>discriminator</tt>.\n     *\n     * @param term  The term that should be stemmed.\n     * @return      Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term )\n    {\n      // Use lowercase for medium stemming.\n      term = term.toLowerCase(locale);\n      if ( !isStemmable( term ) )\n        return term;\n      // Reset the StringBuilder.\n      sb.delete( 0, sb.length() );\n      sb.insert( 0, term );\n      // Stemming starts here...\n      substitute( sb );\n      strip( sb );\n      optimize( sb );\n      resubstitute( sb );\n      removeParticleDenotion( sb );\n      return sb.toString();\n    }\n\n","sourceOld":"    /**\n     * Stemms the given term to an unique <tt>discriminator</tt>.\n     *\n     * @param term  The term that should be stemmed.\n     * @return      Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term )\n    {\n      // Use lowercase for medium stemming.\n      term = term.toLowerCase();\n      if ( !isStemmable( term ) )\n        return term;\n      // Reset the StringBuilder.\n      sb.delete( 0, sb.length() );\n      sb.insert( 0, term );\n      // Stemming starts here...\n      substitute( sb );\n      strip( sb );\n      optimize( sb );\n      resubstitute( sb );\n      removeParticleDenotion( sb );\n      return sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#stem(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#stem(String).mjava","sourceNew":"    /**\n     * Stemms the given term to an unique <tt>discriminator</tt>.\n     *\n     * @param term  The term that should be stemmed.\n     * @return      Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term )\n    {\n      // Use lowercase for medium stemming.\n      term = term.toLowerCase(locale);\n      if ( !isStemmable( term ) )\n        return term;\n      // Reset the StringBuilder.\n      sb.delete( 0, sb.length() );\n      sb.insert( 0, term );\n      // Stemming starts here...\n      substitute( sb );\n      strip( sb );\n      optimize( sb );\n      resubstitute( sb );\n      removeParticleDenotion( sb );\n      return sb.toString();\n    }\n\n","sourceOld":"    /**\n     * Stemms the given term to an unique <tt>discriminator</tt>.\n     *\n     * @param term  The term that should be stemmed.\n     * @return      Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term )\n    {\n      // Use lowercase for medium stemming.\n      term = term.toLowerCase();\n      if ( !isStemmable( term ) )\n        return term;\n      // Reset the StringBuilder.\n      sb.delete( 0, sb.length() );\n      sb.insert( 0, term );\n      // Stemming starts here...\n      substitute( sb );\n      strip( sb );\n      optimize( sb );\n      resubstitute( sb );\n      removeParticleDenotion( sb );\n      return sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e3751ad4cc85eb979419cf5469dfba266eae56a","date":1581046252,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#stem(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#stem(String).mjava","sourceNew":"    /**\n     * Stemms the given term to an unique <code>discriminator</code>.\n     *\n     * @param term  The term that should be stemmed.\n     * @return      Discriminator for <code>term</code>\n     */\n    protected String stem( String term )\n    {\n      // Use lowercase for medium stemming.\n      term = term.toLowerCase(locale);\n      if ( !isStemmable( term ) )\n        return term;\n      // Reset the StringBuilder.\n      sb.delete( 0, sb.length() );\n      sb.insert( 0, term );\n      // Stemming starts here...\n      substitute( sb );\n      strip( sb );\n      optimize( sb );\n      resubstitute( sb );\n      removeParticleDenotion( sb );\n      return sb.toString();\n    }\n\n","sourceOld":"    /**\n     * Stemms the given term to an unique <tt>discriminator</tt>.\n     *\n     * @param term  The term that should be stemmed.\n     * @return      Discriminator for <tt>term</tt>\n     */\n    protected String stem( String term )\n    {\n      // Use lowercase for medium stemming.\n      term = term.toLowerCase(locale);\n      if ( !isStemmable( term ) )\n        return term;\n      // Reset the StringBuilder.\n      sb.delete( 0, sb.length() );\n      sb.insert( 0, term );\n      // Stemming starts here...\n      substitute( sb );\n      strip( sb );\n      optimize( sb );\n      resubstitute( sb );\n      removeParticleDenotion( sb );\n      return sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9e3751ad4cc85eb979419cf5469dfba266eae56a":["2acf500f78aa12b92e371fd89c719291986b6b90"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5dc83d085f83b38c31736c494913c0c75265ce02":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2acf500f78aa12b92e371fd89c719291986b6b90":["b89678825b68eccaf09e6ab71675fc0b0af1e099","5dc83d085f83b38c31736c494913c0c75265ce02"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9e3751ad4cc85eb979419cf5469dfba266eae56a"],"46d8ada1fff8d18cb197c38c7983225162599948":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2acf500f78aa12b92e371fd89c719291986b6b90"]},"commit2Childs":{"9e3751ad4cc85eb979419cf5469dfba266eae56a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","5dc83d085f83b38c31736c494913c0c75265ce02","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"5dc83d085f83b38c31736c494913c0c75265ce02":["2acf500f78aa12b92e371fd89c719291986b6b90"],"2acf500f78aa12b92e371fd89c719291986b6b90":["9e3751ad4cc85eb979419cf5469dfba266eae56a","fe33227f6805edab2036cbb80645cc4e2d1fa424","46d8ada1fff8d18cb197c38c7983225162599948"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"46d8ada1fff8d18cb197c38c7983225162599948":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}