{"path":"solr/core/src/java/org/apache/solr/util/RedactionUtils.RedactionContext#addName(String,String).mjava","commits":[{"id":"d3d2a34ea3732f91149b31bcad82026ad85fda69","date":1567850949,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/RedactionUtils.RedactionContext#addName(String,String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Add a name to be redacted.\n     * @param name original name\n     * @param redactionPrefix prefix for the redacted name\n     */\n    public void addName(String name, String redactionPrefix) {\n      if (redactions.containsKey(name)) {\n        return;\n      }\n      int codeSpace = codeSpaces.computeIfAbsent(redactionPrefix, p -> 4);\n      int code = Math.abs(name.hashCode() % codeSpace);\n      Set<Integer> uniqueCode = uniqueCodes.computeIfAbsent(redactionPrefix, p -> new HashSet<>());\n      while (uniqueCode.contains(code)) {\n        codeSpace = codeSpace << 1;\n        codeSpaces.put(redactionPrefix, codeSpace);\n        code = Math.abs(name.hashCode() % codeSpace);\n      }\n      uniqueCode.add(code);\n      redactions.put(name, redactionPrefix + Integer.toString(code, Character.MAX_RADIX));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3d2a34ea3732f91149b31bcad82026ad85fda69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3d2a34ea3732f91149b31bcad82026ad85fda69"]},"commit2Childs":{"d3d2a34ea3732f91149b31bcad82026ad85fda69":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3d2a34ea3732f91149b31bcad82026ad85fda69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}