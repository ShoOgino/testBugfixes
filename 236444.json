{"path":"src/java/org/apache/solr/core/SolrResourceLoader#assertAwareCompatibility(Class,Object).mjava","commits":[{"id":"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014","date":1195912306,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrResourceLoader#assertAwareCompatibility(Class,Object).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Utility function to throw an exception if the class is invalid\n   */\n  void assertAwareCompatibility( Class aware, Object obj )\n  {\n    Class[] valid = awareCompatibility.get( aware );\n    if( valid == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Unknown Aware interface: \"+aware );\n    }\n    for( Class v : valid ) {\n      if( v.isInstance( obj ) ) {\n        return;\n      }\n    }\n    StringBuilder builder = new StringBuilder();\n    builder.append( \"Invalid 'Aware' object: \" ).append( obj );\n    builder.append( \" -- \").append( aware.getName() );\n    builder.append(  \" must be an instance of: \" );\n    for( Class v : valid ) {\n      builder.append( \"[\" ).append( v.getName() ).append( \"] \") ;\n    }\n    throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, builder.toString() );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrResourceLoader#assertAwareCompatibility(Class,Object).mjava","pathOld":"src/java/org/apache/solr/core/SolrResourceLoader#assertAwareCompatibility(Class,Object).mjava","sourceNew":"  /**\n   * Utility function to throw an exception if the class is invalid\n   */\n  void assertAwareCompatibility( Class aware, Object obj )\n  {\n    Class[] valid = awareCompatibility.get( aware );\n    if( valid == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Unknown Aware interface: \"+aware );\n    }\n    for( Class v : valid ) {\n      if( v.isInstance( obj ) ) {\n        return;\n      }\n    }\n    StringBuilder builder = new StringBuilder();\n    builder.append( \"Invalid 'Aware' object: \" ).append( obj );\n    builder.append( \" -- \").append( aware.getName() );\n    builder.append(  \" must be an instance of: \" );\n    for( Class v : valid ) {\n      builder.append( \"[\" ).append( v.getName() ).append( \"] \") ;\n    }\n    throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, builder.toString() );\n  }\n\n","sourceOld":"  /**\n   * Utility function to throw an exception if the class is invalid\n   */\n  void assertAwareCompatibility( Class aware, Object obj )\n  {\n    Class[] valid = awareCompatibility.get( aware );\n    if( valid == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Unknown Aware interface: \"+aware );\n    }\n    for( Class v : valid ) {\n      if( v.isInstance( obj ) ) {\n        return;\n      }\n    }\n    StringBuilder builder = new StringBuilder();\n    builder.append( \"Invalid 'Aware' object: \" ).append( obj );\n    builder.append( \" -- \").append( aware.getName() );\n    builder.append(  \" must be an instance of: \" );\n    for( Class v : valid ) {\n      builder.append( \"[\" ).append( v.getName() ).append( \"] \") ;\n    }\n    throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, builder.toString() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}