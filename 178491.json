{"path":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/FrenchStemmer#r_i_verb_suffix().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/FrenchStemmer#r_i_verb_suffix().mjava","pathOld":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/FrenchStemmer#r_i_verb_suffix().mjava","sourceNew":"        private boolean r_i_verb_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // setlimit, line 163\n            v_1 = limit - cursor;\n            // tomark, line 163\n            if (cursor < I_pV)\n            {\n                return false;\n            }\n            cursor = I_pV;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 163\n            // [, line 164\n            ket = cursor;\n            // substring, line 164\n            among_var = find_among_b(a_5, 35);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 164\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    limit_backward = v_2;\n                    return false;\n                case 1:\n                    // (, line 170\n                    if (!(out_grouping_b(g_v, 97, 251)))\n                    {\n                        limit_backward = v_2;\n                        return false;\n                    }\n                    // delete, line 170\n                    slice_del();\n                    break;\n            }\n            limit_backward = v_2;\n            return true;\n        }\n\n","sourceOld":"        private boolean r_i_verb_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // setlimit, line 163\n            v_1 = limit - cursor;\n            // tomark, line 163\n            if (cursor < I_pV)\n            {\n                return false;\n            }\n            cursor = I_pV;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 163\n            // [, line 164\n            ket = cursor;\n            // substring, line 164\n            among_var = find_among_b(a_5, 35);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 164\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    limit_backward = v_2;\n                    return false;\n                case 1:\n                    // (, line 170\n                    if (!(out_grouping_b(g_v, 97, 251)))\n                    {\n                        limit_backward = v_2;\n                        return false;\n                    }\n                    // delete, line 170\n                    slice_del();\n                    break;\n            }\n            limit_backward = v_2;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/FrenchStemmer#r_i_verb_suffix().mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/FrenchStemmer#r_i_verb_suffix().mjava","sourceNew":"        private boolean r_i_verb_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // setlimit, line 163\n            v_1 = limit - cursor;\n            // tomark, line 163\n            if (cursor < I_pV)\n            {\n                return false;\n            }\n            cursor = I_pV;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 163\n            // [, line 164\n            ket = cursor;\n            // substring, line 164\n            among_var = find_among_b(a_5, 35);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 164\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    limit_backward = v_2;\n                    return false;\n                case 1:\n                    // (, line 170\n                    if (!(out_grouping_b(g_v, 97, 251)))\n                    {\n                        limit_backward = v_2;\n                        return false;\n                    }\n                    // delete, line 170\n                    slice_del();\n                    break;\n            }\n            limit_backward = v_2;\n            return true;\n        }\n\n","sourceOld":"        private boolean r_i_verb_suffix() {\n            int among_var;\n            int v_1;\n            int v_2;\n            // setlimit, line 163\n            v_1 = limit - cursor;\n            // tomark, line 163\n            if (cursor < I_pV)\n            {\n                return false;\n            }\n            cursor = I_pV;\n            v_2 = limit_backward;\n            limit_backward = cursor;\n            cursor = limit - v_1;\n            // (, line 163\n            // [, line 164\n            ket = cursor;\n            // substring, line 164\n            among_var = find_among_b(a_5, 35);\n            if (among_var == 0)\n            {\n                limit_backward = v_2;\n                return false;\n            }\n            // ], line 164\n            bra = cursor;\n            switch(among_var) {\n                case 0:\n                    limit_backward = v_2;\n                    return false;\n                case 1:\n                    // (, line 170\n                    if (!(out_grouping_b(g_v, 97, 251)))\n                    {\n                        limit_backward = v_2;\n                        return false;\n                    }\n                    // delete, line 170\n                    slice_del();\n                    break;\n            }\n            limit_backward = v_2;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}