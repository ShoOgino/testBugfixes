{"path":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2FilterFactory#testDefaults().mjava","commits":[{"id":"f06d2946e1cf81da42cf64135b5af1fdf4fdac30","date":1343107672,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2FilterFactory#testDefaults().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestICUNormalizer2FilterFactory#testDefaults().mjava","sourceNew":"  /** Test nfkc_cf defaults */\n  public void testDefaults() throws Exception {\n    Reader reader = new StringReader(\"This is a Ｔｅｓｔ\");\n    ICUNormalizer2FilterFactory factory = new ICUNormalizer2FilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, reader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"this\", \"is\", \"a\", \"test\" });\n  }\n\n","sourceOld":"  /** Test nfkc_cf defaults */\n  public void testDefaults() throws Exception {\n    Reader reader = new StringReader(\"This is a Ｔｅｓｔ\");\n    ICUNormalizer2FilterFactory factory = new ICUNormalizer2FilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, reader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"this\", \"is\", \"a\", \"test\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2FilterFactory#testDefaults().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestICUNormalizer2FilterFactory#testDefaults().mjava","sourceNew":"  /** Test nfkc_cf defaults */\n  public void testDefaults() throws Exception {\n    Reader reader = new StringReader(\"This is a Ｔｅｓｔ\");\n    ICUNormalizer2FilterFactory factory = new ICUNormalizer2FilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, reader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"this\", \"is\", \"a\", \"test\" });\n  }\n\n","sourceOld":"  /** Test nfkc_cf defaults */\n  public void testDefaults() throws Exception {\n    Reader reader = new StringReader(\"This is a Ｔｅｓｔ\");\n    ICUNormalizer2FilterFactory factory = new ICUNormalizer2FilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, reader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"this\", \"is\", \"a\", \"test\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2FilterFactory#testDefaults().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestICUNormalizer2FilterFactory#testDefaults().mjava","sourceNew":"  /** Test nfkc_cf defaults */\n  public void testDefaults() throws Exception {\n    Reader reader = new StringReader(\"This is a Ｔｅｓｔ\");\n    ICUNormalizer2FilterFactory factory = new ICUNormalizer2FilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, reader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"this\", \"is\", \"a\", \"test\" });\n  }\n\n","sourceOld":"  /** Test nfkc_cf defaults */\n  public void testDefaults() throws Exception {\n    Reader reader = new StringReader(\"This is a Ｔｅｓｔ\");\n    ICUNormalizer2FilterFactory factory = new ICUNormalizer2FilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, reader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"this\", \"is\", \"a\", \"test\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2FilterFactory#testDefaults().mjava","pathOld":"solr/contrib/analysis-extras/src/test/org/apache/solr/analysis/TestICUNormalizer2FilterFactory#testDefaults().mjava","sourceNew":"  /** Test nfkc_cf defaults */\n  public void testDefaults() throws Exception {\n    Reader reader = new StringReader(\"This is a Ｔｅｓｔ\");\n    ICUNormalizer2FilterFactory factory = new ICUNormalizer2FilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, reader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"this\", \"is\", \"a\", \"test\" });\n  }\n\n","sourceOld":"  /** Test nfkc_cf defaults */\n  public void testDefaults() throws Exception {\n    Reader reader = new StringReader(\"This is a Ｔｅｓｔ\");\n    ICUNormalizer2FilterFactory factory = new ICUNormalizer2FilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, reader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"this\", \"is\", \"a\", \"test\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2FilterFactory#testDefaults().mjava","pathOld":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2FilterFactory#testDefaults().mjava","sourceNew":"  /** Test nfkc_cf defaults */\n  public void testDefaults() throws Exception {\n    Reader reader = new StringReader(\"This is a Ｔｅｓｔ\");\n    ICUNormalizer2FilterFactory factory = new ICUNormalizer2FilterFactory(new HashMap<String,String>());\n    TokenStream stream = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    stream = factory.create(stream);\n    assertTokenStreamContents(stream, new String[] { \"this\", \"is\", \"a\", \"test\" });\n  }\n\n","sourceOld":"  /** Test nfkc_cf defaults */\n  public void testDefaults() throws Exception {\n    Reader reader = new StringReader(\"This is a Ｔｅｓｔ\");\n    ICUNormalizer2FilterFactory factory = new ICUNormalizer2FilterFactory();\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    Map<String, String> args = Collections.emptyMap();\n    factory.init(args);\n    Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, reader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"this\", \"is\", \"a\", \"test\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2FilterFactory#testDefaults().mjava","pathOld":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUNormalizer2FilterFactory#testDefaults().mjava","sourceNew":"  /** Test nfkc_cf defaults */\n  public void testDefaults() throws Exception {\n    Reader reader = new StringReader(\"This is a Ｔｅｓｔ\");\n    ICUNormalizer2FilterFactory factory = new ICUNormalizer2FilterFactory(new HashMap<String,String>());\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = factory.create(stream);\n    assertTokenStreamContents(stream, new String[] { \"this\", \"is\", \"a\", \"test\" });\n  }\n\n","sourceOld":"  /** Test nfkc_cf defaults */\n  public void testDefaults() throws Exception {\n    Reader reader = new StringReader(\"This is a Ｔｅｓｔ\");\n    ICUNormalizer2FilterFactory factory = new ICUNormalizer2FilterFactory(new HashMap<String,String>());\n    TokenStream stream = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    stream = factory.create(stream);\n    assertTokenStreamContents(stream, new String[] { \"this\", \"is\", \"a\", \"test\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"f06d2946e1cf81da42cf64135b5af1fdf4fdac30":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f06d2946e1cf81da42cf64135b5af1fdf4fdac30"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","f06d2946e1cf81da42cf64135b5af1fdf4fdac30","5a1a22b1ad88b436661458df567f3fdb446392a4"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"f06d2946e1cf81da42cf64135b5af1fdf4fdac30":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}