{"path":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testStatFacet1().mjava","commits":[{"id":"890d9da8d20886190a080e375f93341a779474e4","date":1549505353,"type":0,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testStatFacet1().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testStatFacet1() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    //tag::solrj-json-metrics-facet-1[]\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"memory\")\n        .withFilter(\"inStock:true\")\n        .withStatFacet(\"avg_price\", \"avg(price)\")\n        .withStatFacet(\"num_suppliers\", \"unique(manu_exact)\")\n        .withStatFacet(\"median_weight\", \"percentile(weight,50)\");\n    QueryResponse queryResponse = request.process(solrClient, COLLECTION_NAME);\n    //end::solrj-json-metrics-facet-1[]\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(4, queryResponse.getResults().getNumFound());\n    assertEquals(4, queryResponse.getResults().size());\n    final NestableJsonFacet topLevelFacetingData = queryResponse.getJsonFacetingResponse();\n    assertEquals(146.66, (double) topLevelFacetingData.getStatFacetValue(\"avg_price\"), 0.5);\n    assertEquals(3, topLevelFacetingData.getStatFacetValue(\"num_suppliers\"));\n    assertEquals(352.0, (double) topLevelFacetingData.getStatFacetValue(\"median_weight\"), 0.5);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["040d6388aba0e320fdd8c82cf685799e39ac30d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"040d6388aba0e320fdd8c82cf685799e39ac30d4","date":1569652735,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testStatFacet1().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testStatFacet1().mjava","sourceNew":"  @Test\n  public void testStatFacet1() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    //tag::solrj-json-metrics-facet-1[]\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"memory\")\n        .withFilter(\"inStock:true\")\n        .withStatFacet(\"avg_price\", \"avg(price)\")\n        .withStatFacet(\"min_manufacturedate_dt\", \"min(manufacturedate_dt)\")\n        .withStatFacet(\"num_suppliers\", \"unique(manu_exact)\")\n        .withStatFacet(\"median_weight\", \"percentile(weight,50)\");\n    QueryResponse queryResponse = request.process(solrClient, COLLECTION_NAME);\n    //end::solrj-json-metrics-facet-1[]\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(4, queryResponse.getResults().getNumFound());\n    assertEquals(4, queryResponse.getResults().size());\n    final NestableJsonFacet topLevelFacetingData = queryResponse.getJsonFacetingResponse();\n    assertEquals(146.66, (double) topLevelFacetingData.getStatValue(\"avg_price\"), 0.5);\n    assertEquals(3, topLevelFacetingData.getStatValue(\"num_suppliers\"));\n    assertEquals(352.0, (double) topLevelFacetingData.getStatValue(\"median_weight\"), 0.5);\n\n    Object val = topLevelFacetingData.getStatValue(\"min_manufacturedate_dt\");\n    assertTrue(val instanceof Date);\n    assertEquals(\"2006-02-13T15:26:37Z\", ((Date)val).toInstant().toString());\n  }\n\n","sourceOld":"  @Test\n  public void testStatFacet1() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    //tag::solrj-json-metrics-facet-1[]\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"memory\")\n        .withFilter(\"inStock:true\")\n        .withStatFacet(\"avg_price\", \"avg(price)\")\n        .withStatFacet(\"num_suppliers\", \"unique(manu_exact)\")\n        .withStatFacet(\"median_weight\", \"percentile(weight,50)\");\n    QueryResponse queryResponse = request.process(solrClient, COLLECTION_NAME);\n    //end::solrj-json-metrics-facet-1[]\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(4, queryResponse.getResults().getNumFound());\n    assertEquals(4, queryResponse.getResults().size());\n    final NestableJsonFacet topLevelFacetingData = queryResponse.getJsonFacetingResponse();\n    assertEquals(146.66, (double) topLevelFacetingData.getStatFacetValue(\"avg_price\"), 0.5);\n    assertEquals(3, topLevelFacetingData.getStatFacetValue(\"num_suppliers\"));\n    assertEquals(352.0, (double) topLevelFacetingData.getStatFacetValue(\"median_weight\"), 0.5);\n  }\n\n","bugFix":["890d9da8d20886190a080e375f93341a779474e4"],"bugIntro":["a0729dd01b1c5bf91ed7f5233d507519d0b3f59f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4b9f74021389e2b32ee750fa5a24281c87951ec3","date":1569845983,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testStatFacet1().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testStatFacet1().mjava","sourceNew":"  @Test\n  public void testStatFacet1() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    //tag::solrj-json-metrics-facet-1[]\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"memory\")\n        .withFilter(\"inStock:true\")\n        .withStatFacet(\"avg_price\", \"avg(price)\")\n        .withStatFacet(\"min_manufacturedate_dt\", \"min(manufacturedate_dt)\")\n        .withStatFacet(\"num_suppliers\", \"unique(manu_exact)\")\n        .withStatFacet(\"median_weight\", \"percentile(weight,50)\");\n    QueryResponse queryResponse = request.process(solrClient, COLLECTION_NAME);\n    //end::solrj-json-metrics-facet-1[]\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(4, queryResponse.getResults().getNumFound());\n    assertEquals(4, queryResponse.getResults().size());\n    final NestableJsonFacet topLevelFacetingData = queryResponse.getJsonFacetingResponse();\n    assertEquals(146.66, (double) topLevelFacetingData.getStatValue(\"avg_price\"), 0.5);\n    assertEquals(3, topLevelFacetingData.getStatValue(\"num_suppliers\"));\n    assertEquals(352.0, (double) topLevelFacetingData.getStatValue(\"median_weight\"), 0.5);\n\n    Object val = topLevelFacetingData.getStatValue(\"min_manufacturedate_dt\");\n    assertTrue(val instanceof Date);\n    assertEquals(\"2006-02-13T15:26:37Z\", ((Date)val).toInstant().toString());\n  }\n\n","sourceOld":"  @Test\n  public void testStatFacet1() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    //tag::solrj-json-metrics-facet-1[]\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"memory\")\n        .withFilter(\"inStock:true\")\n        .withStatFacet(\"avg_price\", \"avg(price)\")\n        .withStatFacet(\"num_suppliers\", \"unique(manu_exact)\")\n        .withStatFacet(\"median_weight\", \"percentile(weight,50)\");\n    QueryResponse queryResponse = request.process(solrClient, COLLECTION_NAME);\n    //end::solrj-json-metrics-facet-1[]\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(4, queryResponse.getResults().getNumFound());\n    assertEquals(4, queryResponse.getResults().size());\n    final NestableJsonFacet topLevelFacetingData = queryResponse.getJsonFacetingResponse();\n    assertEquals(146.66, (double) topLevelFacetingData.getStatFacetValue(\"avg_price\"), 0.5);\n    assertEquals(3, topLevelFacetingData.getStatFacetValue(\"num_suppliers\"));\n    assertEquals(352.0, (double) topLevelFacetingData.getStatFacetValue(\"median_weight\"), 0.5);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0729dd01b1c5bf91ed7f5233d507519d0b3f59f","date":1584638009,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testStatFacet1().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/JsonRequestApiTest#testStatFacet1().mjava","sourceNew":"  @Test\n  public void testStatFacet1() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    //tag::solrj-json-metrics-facet-1[]\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"memory\")\n        .withFilter(\"inStock:true\")\n        .withStatFacet(\"avg_price\", \"avg(price)\")\n        .withStatFacet(\"min_manufacturedate_dt\", \"min(manufacturedate_dt)\")\n        .withStatFacet(\"num_suppliers\", \"unique(manu_exact)\")\n        .withStatFacet(\"median_weight\", \"percentile(weight,50)\");\n    QueryResponse queryResponse = request.process(solrClient, COLLECTION_NAME);\n    //end::solrj-json-metrics-facet-1[]\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(4, queryResponse.getResults().getNumFound());\n    assertEquals(4, queryResponse.getResults().size());\n    final NestableJsonFacet topLevelFacetingData = queryResponse.getJsonFacetingResponse();\n    assertEquals(146.66, (double) topLevelFacetingData.getStatValue(\"avg_price\"), 0.5);\n    assertEquals(3L, topLevelFacetingData.getStatValue(\"num_suppliers\"));\n    assertEquals(352.0, (double) topLevelFacetingData.getStatValue(\"median_weight\"), 0.5);\n\n    Object val = topLevelFacetingData.getStatValue(\"min_manufacturedate_dt\");\n    assertTrue(val instanceof Date);\n    assertEquals(\"2006-02-13T15:26:37Z\", ((Date)val).toInstant().toString());\n  }\n\n","sourceOld":"  @Test\n  public void testStatFacet1() throws Exception {\n    SolrClient solrClient = cluster.getSolrClient();\n\n    //tag::solrj-json-metrics-facet-1[]\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"memory\")\n        .withFilter(\"inStock:true\")\n        .withStatFacet(\"avg_price\", \"avg(price)\")\n        .withStatFacet(\"min_manufacturedate_dt\", \"min(manufacturedate_dt)\")\n        .withStatFacet(\"num_suppliers\", \"unique(manu_exact)\")\n        .withStatFacet(\"median_weight\", \"percentile(weight,50)\");\n    QueryResponse queryResponse = request.process(solrClient, COLLECTION_NAME);\n    //end::solrj-json-metrics-facet-1[]\n\n    assertEquals(0, queryResponse.getStatus());\n    assertEquals(4, queryResponse.getResults().getNumFound());\n    assertEquals(4, queryResponse.getResults().size());\n    final NestableJsonFacet topLevelFacetingData = queryResponse.getJsonFacetingResponse();\n    assertEquals(146.66, (double) topLevelFacetingData.getStatValue(\"avg_price\"), 0.5);\n    assertEquals(3, topLevelFacetingData.getStatValue(\"num_suppliers\"));\n    assertEquals(352.0, (double) topLevelFacetingData.getStatValue(\"median_weight\"), 0.5);\n\n    Object val = topLevelFacetingData.getStatValue(\"min_manufacturedate_dt\");\n    assertTrue(val instanceof Date);\n    assertEquals(\"2006-02-13T15:26:37Z\", ((Date)val).toInstant().toString());\n  }\n\n","bugFix":["040d6388aba0e320fdd8c82cf685799e39ac30d4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0729dd01b1c5bf91ed7f5233d507519d0b3f59f":["040d6388aba0e320fdd8c82cf685799e39ac30d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"890d9da8d20886190a080e375f93341a779474e4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4b9f74021389e2b32ee750fa5a24281c87951ec3":["890d9da8d20886190a080e375f93341a779474e4","040d6388aba0e320fdd8c82cf685799e39ac30d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0729dd01b1c5bf91ed7f5233d507519d0b3f59f"],"040d6388aba0e320fdd8c82cf685799e39ac30d4":["890d9da8d20886190a080e375f93341a779474e4"]},"commit2Childs":{"a0729dd01b1c5bf91ed7f5233d507519d0b3f59f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["890d9da8d20886190a080e375f93341a779474e4"],"890d9da8d20886190a080e375f93341a779474e4":["4b9f74021389e2b32ee750fa5a24281c87951ec3","040d6388aba0e320fdd8c82cf685799e39ac30d4"],"4b9f74021389e2b32ee750fa5a24281c87951ec3":[],"040d6388aba0e320fdd8c82cf685799e39ac30d4":["a0729dd01b1c5bf91ed7f5233d507519d0b3f59f","4b9f74021389e2b32ee750fa5a24281c87951ec3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4b9f74021389e2b32ee750fa5a24281c87951ec3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}