{"path":"lucene/core/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#getPayload().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#getPayload().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#getPayload().mjava","sourceNew":"    @Override\n    public BytesRef getPayload() throws IOException {\n      //System.out.println(\"PR  getPayload payloadLength=\" + payloadLength + \" this=\" + this);\n      if (payloadRetrieved) {\n        throw new IOException(\"Either no payload exists at this term position or an attempt was made to load it more than once.\");\n      }\n      payloadRetrieved = true;\n      if (payloadLength > 0) {\n        if (payload == null) {\n          payload = new BytesRef(payloadLength);\n        } else {\n          payload.grow(payloadLength);\n        }\n        postings.readBytes(payload.bytes, 0, payloadLength);\n        payload.length = payloadLength;\n        return payload;\n      } else {\n        return null;\n      }\n    }\n\n","sourceOld":"    @Override\n    public BytesRef getPayload() throws IOException {\n      //System.out.println(\"PR  getPayload payloadLength=\" + payloadLength + \" this=\" + this);\n      if (payloadRetrieved) {\n        throw new IOException(\"Either no payload exists at this term position or an attempt was made to load it more than once.\");\n      }\n      payloadRetrieved = true;\n      if (payloadLength > 0) {\n        if (payload == null) {\n          payload = new BytesRef(payloadLength);\n        } else {\n          payload.grow(payloadLength);\n        }\n        postings.readBytes(payload.bytes, 0, payloadLength);\n        payload.length = payloadLength;\n        return payload;\n      } else {\n        return null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b4c7e630332c5e9e7d7a70f4ace4b3ffd3fc552","date":1344797146,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#getPayload().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#getPayload().mjava","sourceNew":"    @Override\n    public BytesRef getPayload() throws IOException {\n      //System.out.println(\"PR  getPayload payloadLength=\" + payloadLength + \" this=\" + this);\n      if (payloadRetrieved) {\n        return payload;\n      } else if (storePayloads && payloadLength > 0) {\n        payloadRetrieved = true;\n        if (payload == null) {\n          payload = new BytesRef(payloadLength);\n        } else {\n          payload.grow(payloadLength);\n        }\n        postings.readBytes(payload.bytes, 0, payloadLength);\n        payload.length = payloadLength;\n        return payload;\n      } else {\n        return null;\n      }\n    }\n\n","sourceOld":"    @Override\n    public BytesRef getPayload() throws IOException {\n      //System.out.println(\"PR  getPayload payloadLength=\" + payloadLength + \" this=\" + this);\n      if (payloadRetrieved) {\n        throw new IOException(\"Either no payload exists at this term position or an attempt was made to load it more than once.\");\n      }\n      payloadRetrieved = true;\n      if (payloadLength > 0) {\n        if (payload == null) {\n          payload = new BytesRef(payloadLength);\n        } else {\n          payload.grow(payloadLength);\n        }\n        postings.readBytes(payload.bytes, 0, payloadLength);\n        payload.length = payloadLength;\n        return payload;\n      } else {\n        return null;\n      }\n    }\n\n","bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#getPayload().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#getPayload().mjava","sourceNew":"    @Override\n    public BytesRef getPayload() throws IOException {\n      //System.out.println(\"PR  getPayload payloadLength=\" + payloadLength + \" this=\" + this);\n      if (payloadRetrieved) {\n        return payload;\n      } else if (storePayloads && payloadLength > 0) {\n        payloadRetrieved = true;\n        if (payload == null) {\n          payload = new BytesRef(payloadLength);\n        } else {\n          payload.grow(payloadLength);\n        }\n        postings.readBytes(payload.bytes, 0, payloadLength);\n        payload.length = payloadLength;\n        return payload;\n      } else {\n        return null;\n      }\n    }\n\n","sourceOld":"    @Override\n    public BytesRef getPayload() throws IOException {\n      //System.out.println(\"PR  getPayload payloadLength=\" + payloadLength + \" this=\" + this);\n      if (payloadRetrieved) {\n        throw new IOException(\"Either no payload exists at this term position or an attempt was made to load it more than once.\");\n      }\n      payloadRetrieved = true;\n      if (payloadLength > 0) {\n        if (payload == null) {\n          payload = new BytesRef(payloadLength);\n        } else {\n          payload.grow(payloadLength);\n        }\n        postings.readBytes(payload.bytes, 0, payloadLength);\n        payload.length = payloadLength;\n        return payload;\n      } else {\n        return null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#getPayload().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#getPayload().mjava","sourceNew":"    @Override\n    public BytesRef getPayload() throws IOException {\n      //System.out.println(\"PR  getPayload payloadLength=\" + payloadLength + \" this=\" + this);\n      if (payloadRetrieved) {\n        return payload;\n      } else if (storePayloads && payloadLength > 0) {\n        payloadRetrieved = true;\n        if (payload == null) {\n          payload = new BytesRef(payloadLength);\n        } else {\n          payload.grow(payloadLength);\n        }\n        postings.readBytes(payload.bytes, 0, payloadLength);\n        payload.length = payloadLength;\n        return payload;\n      } else {\n        return null;\n      }\n    }\n\n","sourceOld":"    @Override\n    public BytesRef getPayload() throws IOException {\n      //System.out.println(\"PR  getPayload payloadLength=\" + payloadLength + \" this=\" + this);\n      if (payloadRetrieved) {\n        throw new IOException(\"Either no payload exists at this term position or an attempt was made to load it more than once.\");\n      }\n      payloadRetrieved = true;\n      if (payloadLength > 0) {\n        if (payload == null) {\n          payload = new BytesRef(payloadLength);\n        } else {\n          payload.grow(payloadLength);\n        }\n        postings.readBytes(payload.bytes, 0, payloadLength);\n        payload.length = payloadLength;\n        return payload;\n      } else {\n        return null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#getPayload().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader.PulsingDocsAndPositionsEnum#getPayload().mjava","sourceNew":"    @Override\n    public BytesRef getPayload() throws IOException {\n      //System.out.println(\"PR  getPayload payloadLength=\" + payloadLength + \" this=\" + this);\n      if (payloadRetrieved) {\n        return payload;\n      } else if (storePayloads && payloadLength > 0) {\n        payloadRetrieved = true;\n        if (payload == null) {\n          payload = new BytesRef(payloadLength);\n        } else {\n          payload.grow(payloadLength);\n        }\n        postings.readBytes(payload.bytes, 0, payloadLength);\n        payload.length = payloadLength;\n        return payload;\n      } else {\n        return null;\n      }\n    }\n\n","sourceOld":"    @Override\n    public BytesRef getPayload() throws IOException {\n      //System.out.println(\"PR  getPayload payloadLength=\" + payloadLength + \" this=\" + this);\n      if (payloadRetrieved) {\n        return payload;\n      } else if (storePayloads && payloadLength > 0) {\n        payloadRetrieved = true;\n        if (payload == null) {\n          payload = new BytesRef(payloadLength);\n        } else {\n          payload.grow(payloadLength);\n        }\n        postings.readBytes(payload.bytes, 0, payloadLength);\n        payload.length = payloadLength;\n        return payload;\n      } else {\n        return null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","2b4c7e630332c5e9e7d7a70f4ace4b3ffd3fc552"],"2b4c7e630332c5e9e7d7a70f4ace4b3ffd3fc552":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["2b4c7e630332c5e9e7d7a70f4ace4b3ffd3fc552"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","2b4c7e630332c5e9e7d7a70f4ace4b3ffd3fc552"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"2b4c7e630332c5e9e7d7a70f4ace4b3ffd3fc552":["c7869f64c874ebf7f317d22c00baf2b6857797a6","3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c7869f64c874ebf7f317d22c00baf2b6857797a6","2b4c7e630332c5e9e7d7a70f4ace4b3ffd3fc552","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}