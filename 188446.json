{"path":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1StrMV().mjava","commits":[{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1StrMV().mjava","pathOld":"lucene/contrib/fast-vector-highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1StrMV().mjava","sourceNew":"  public void test1StrMV() throws Exception {\n    makeIndexStrMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"defg\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    assertEquals( \"abc<b>defg</b>hijkl\", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","sourceOld":"  public void test1StrMV() throws Exception {\n    makeIndexStrMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"defg\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    assertEquals( \"abc<b>defg</b>hijkl\", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9739f28d7a138988ee3a66562c0a3f0b457690b2","date":1282012780,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1StrMV().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1StrMV().mjava","sourceNew":"  public void test1StrMV() throws Exception {\n    makeIndexStrMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"defg\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    // '/' separator doesn't effect the snippet because of NOT_ANALYZED field\n    sfb.setMultiValuedSeparator( '/' );\n    assertEquals( \"abc<b>defg</b>hijkl\", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","sourceOld":"  public void test1StrMV() throws Exception {\n    makeIndexStrMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"defg\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    assertEquals( \"abc<b>defg</b>hijkl\", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1StrMV().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1StrMV().mjava","sourceNew":"  public void test1StrMV() throws Exception {\n    makeIndexStrMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"defg\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    // '/' separator doesn't effect the snippet because of NOT_ANALYZED field\n    sfb.setMultiValuedSeparator( '/' );\n    assertEquals( \"abc<b>defg</b>hijkl\", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","sourceOld":"  public void test1StrMV() throws Exception {\n    makeIndexStrMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"defg\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    assertEquals( \"abc<b>defg</b>hijkl\", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1StrMV().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1StrMV().mjava","sourceNew":"  public void test1StrMV() throws Exception {\n    makeIndexStrMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"defg\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    sfb.setMultiValuedSeparator( '/' );\n    assertEquals( \"abc/<b>defg</b>/hijkl/\", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","sourceOld":"  public void test1StrMV() throws Exception {\n    makeIndexStrMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"defg\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    // '/' separator doesn't effect the snippet because of NOT_ANALYZED field\n    sfb.setMultiValuedSeparator( '/' );\n    assertEquals( \"abc<b>defg</b>hijkl\", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac034d22a2af5ab70b9d27bb478acd7810092eb4","date":1326818603,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1StrMV().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1StrMV().mjava","sourceNew":"  public void test1StrMV() throws Exception {\n    makeIndexStrMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"defg\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    sfb.setMultiValuedSeparator( '/' );\n    assertEquals( \"abc/<b>defg</b>/hijkl\", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","sourceOld":"  public void test1StrMV() throws Exception {\n    makeIndexStrMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"defg\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    sfb.setMultiValuedSeparator( '/' );\n    assertEquals( \"abc/<b>defg</b>/hijkl/\", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1StrMV().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#test1StrMV().mjava","sourceNew":"  public void test1StrMV() throws Exception {\n    makeIndexStrMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"defg\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    sfb.setMultiValuedSeparator( '/' );\n    assertEquals( \"abc/<b>defg</b>/hijkl\", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","sourceOld":"  public void test1StrMV() throws Exception {\n    makeIndexStrMV();\n\n    FieldQuery fq = new FieldQuery( tq( \"defg\" ), true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    SimpleFragListBuilder sflb = new SimpleFragListBuilder();\n    FieldFragList ffl = sflb.createFieldFragList( fpl, 100 );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    sfb.setMultiValuedSeparator( '/' );\n    assertEquals( \"abc/<b>defg</b>/hijkl\", sfb.createFragment( reader, 0, F, ffl ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ac034d22a2af5ab70b9d27bb478acd7810092eb4"],"9739f28d7a138988ee3a66562c0a3f0b457690b2":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ac034d22a2af5ab70b9d27bb478acd7810092eb4":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["9739f28d7a138988ee3a66562c0a3f0b457690b2"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af","9739f28d7a138988ee3a66562c0a3f0b457690b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9739f28d7a138988ee3a66562c0a3f0b457690b2":["1509f151d7692d84fae414b2b799ac06ba60fcb4","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["9739f28d7a138988ee3a66562c0a3f0b457690b2","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"ac034d22a2af5ab70b9d27bb478acd7810092eb4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["ac034d22a2af5ab70b9d27bb478acd7810092eb4"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}