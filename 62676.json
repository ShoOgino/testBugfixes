{"path":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/documents/IndexOptionsDialogFactory#setNewField(NewField).mjava","commits":[{"id":"f554f2d9b5456248ab6467b9d4f6015686797a6c","date":1554891357,"type":0,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/documents/IndexOptionsDialogFactory#setNewField(NewField).mjava","pathOld":"/dev/null","sourceNew":"  public void setNewField(NewField nf) {\n    this.nf = nf;\n\n    storedCB.setSelected(nf.isStored());\n\n    IndexableFieldType fieldType = nf.getFieldType();\n    tokenizedCB.setSelected(fieldType.tokenized());\n    omitNormsCB.setSelected(fieldType.omitNorms());\n    idxOptCombo.setSelectedItem(fieldType.indexOptions().name());\n    storeTVCB.setSelected(fieldType.storeTermVectors());\n    storeTVPosCB.setSelected(fieldType.storeTermVectorPositions());\n    storeTVOffCB.setSelected(fieldType.storeTermVectorOffsets());\n    storeTVPayCB.setSelected(fieldType.storeTermVectorPayloads());\n    dvTypeCombo.setSelectedItem(fieldType.docValuesType().name());\n    dimCountTF.setText(String.valueOf(fieldType.pointDataDimensionCount()));\n    dimNumBytesTF.setText(String.valueOf(fieldType.pointNumBytes()));\n\n    if (nf.getType().equals(org.apache.lucene.document.TextField.class) ||\n        nf.getType().equals(StringField.class) ||\n        nf.getType().equals(Field.class)) {\n      storedCB.setEnabled(true);\n    } else {\n      storedCB.setEnabled(false);\n    }\n\n    if (nf.getType().equals(Field.class)) {\n      tokenizedCB.setEnabled(true);\n      omitNormsCB.setEnabled(true);\n      idxOptCombo.setEnabled(true);\n      storeTVCB.setEnabled(true);\n      storeTVPosCB.setEnabled(true);\n      storeTVOffCB.setEnabled(true);\n      storeTVPosCB.setEnabled(true);\n    } else {\n      tokenizedCB.setEnabled(false);\n      omitNormsCB.setEnabled(false);\n      idxOptCombo.setEnabled(false);\n      storeTVCB.setEnabled(false);\n      storeTVPosCB.setEnabled(false);\n      storeTVOffCB.setEnabled(false);\n      storeTVPayCB.setEnabled(false);\n    }\n\n    // TODO\n    dvTypeCombo.setEnabled(false);\n    dimCountTF.setEnabled(false);\n    dimNumBytesTF.setEnabled(false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59ed8c026ba85e3c42fb89605b2032dc6f9cc241","date":1581113294,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/documents/IndexOptionsDialogFactory#setNewField(NewField).mjava","pathOld":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/documents/IndexOptionsDialogFactory#setNewField(NewField).mjava","sourceNew":"  public void setNewField(NewField nf) {\n    this.nf = nf;\n\n    storedCB.setSelected(nf.isStored());\n\n    IndexableFieldType fieldType = nf.getFieldType();\n    tokenizedCB.setSelected(fieldType.tokenized());\n    omitNormsCB.setSelected(fieldType.omitNorms());\n    idxOptCombo.setSelectedItem(fieldType.indexOptions().name());\n    storeTVCB.setSelected(fieldType.storeTermVectors());\n    storeTVPosCB.setSelected(fieldType.storeTermVectorPositions());\n    storeTVOffCB.setSelected(fieldType.storeTermVectorOffsets());\n    storeTVPayCB.setSelected(fieldType.storeTermVectorPayloads());\n    dvTypeCombo.setSelectedItem(fieldType.docValuesType().name());\n    dimCountTF.setText(String.valueOf(fieldType.pointDimensionCount()));\n    dimNumBytesTF.setText(String.valueOf(fieldType.pointNumBytes()));\n\n    if (nf.getType().equals(org.apache.lucene.document.TextField.class) ||\n        nf.getType().equals(StringField.class) ||\n        nf.getType().equals(Field.class)) {\n      storedCB.setEnabled(true);\n    } else {\n      storedCB.setEnabled(false);\n    }\n\n    if (nf.getType().equals(Field.class)) {\n      tokenizedCB.setEnabled(true);\n      omitNormsCB.setEnabled(true);\n      idxOptCombo.setEnabled(true);\n      storeTVCB.setEnabled(true);\n      storeTVPosCB.setEnabled(true);\n      storeTVOffCB.setEnabled(true);\n      storeTVPosCB.setEnabled(true);\n    } else {\n      tokenizedCB.setEnabled(false);\n      omitNormsCB.setEnabled(false);\n      idxOptCombo.setEnabled(false);\n      storeTVCB.setEnabled(false);\n      storeTVPosCB.setEnabled(false);\n      storeTVOffCB.setEnabled(false);\n      storeTVPayCB.setEnabled(false);\n    }\n\n    // TODO\n    dvTypeCombo.setEnabled(false);\n    dimCountTF.setEnabled(false);\n    dimNumBytesTF.setEnabled(false);\n  }\n\n","sourceOld":"  public void setNewField(NewField nf) {\n    this.nf = nf;\n\n    storedCB.setSelected(nf.isStored());\n\n    IndexableFieldType fieldType = nf.getFieldType();\n    tokenizedCB.setSelected(fieldType.tokenized());\n    omitNormsCB.setSelected(fieldType.omitNorms());\n    idxOptCombo.setSelectedItem(fieldType.indexOptions().name());\n    storeTVCB.setSelected(fieldType.storeTermVectors());\n    storeTVPosCB.setSelected(fieldType.storeTermVectorPositions());\n    storeTVOffCB.setSelected(fieldType.storeTermVectorOffsets());\n    storeTVPayCB.setSelected(fieldType.storeTermVectorPayloads());\n    dvTypeCombo.setSelectedItem(fieldType.docValuesType().name());\n    dimCountTF.setText(String.valueOf(fieldType.pointDataDimensionCount()));\n    dimNumBytesTF.setText(String.valueOf(fieldType.pointNumBytes()));\n\n    if (nf.getType().equals(org.apache.lucene.document.TextField.class) ||\n        nf.getType().equals(StringField.class) ||\n        nf.getType().equals(Field.class)) {\n      storedCB.setEnabled(true);\n    } else {\n      storedCB.setEnabled(false);\n    }\n\n    if (nf.getType().equals(Field.class)) {\n      tokenizedCB.setEnabled(true);\n      omitNormsCB.setEnabled(true);\n      idxOptCombo.setEnabled(true);\n      storeTVCB.setEnabled(true);\n      storeTVPosCB.setEnabled(true);\n      storeTVOffCB.setEnabled(true);\n      storeTVPosCB.setEnabled(true);\n    } else {\n      tokenizedCB.setEnabled(false);\n      omitNormsCB.setEnabled(false);\n      idxOptCombo.setEnabled(false);\n      storeTVCB.setEnabled(false);\n      storeTVPosCB.setEnabled(false);\n      storeTVOffCB.setEnabled(false);\n      storeTVPayCB.setEnabled(false);\n    }\n\n    // TODO\n    dvTypeCombo.setEnabled(false);\n    dimCountTF.setEnabled(false);\n    dimNumBytesTF.setEnabled(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"]},"commit2Childs":{"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}