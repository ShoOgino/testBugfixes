{"path":"solr/core/src/java/org/apache/solr/search/BitDocSet#intersection(DocSet).mjava","commits":[{"id":"90440a2155c2b9ce30bf8fc29b1c978c58dae1e7","date":1582642100,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/BitDocSet#intersection(DocSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/DocSetBase#intersection(DocSet).mjava","sourceNew":"  @Override\n  public DocSet intersection(DocSet other) {\n    // intersection is overloaded in the smaller DocSets to be more\n    // efficient, so dispatch off of it instead.\n    if (!(other instanceof BitDocSet)) {\n      return other.intersection(this);\n    }\n\n    // Default... handle with bitsets.\n    FixedBitSet newbits = getFixedBitSetClone();\n    newbits.and(other.getFixedBitSet());\n    return new BitDocSet(newbits);\n  }\n\n","sourceOld":"  @Override\n  public DocSet intersection(DocSet other) {\n    // intersection is overloaded in the smaller DocSets to be more\n    // efficient, so dispatch off of it instead.\n    if (!(other instanceof BitDocSet)) {\n      return other.intersection(this);\n    }\n\n    // Default... handle with bitsets.\n    FixedBitSet newbits = getBits().clone();\n    newbits.and(toBitSet(other));\n    return new BitDocSet(newbits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"90440a2155c2b9ce30bf8fc29b1c978c58dae1e7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90440a2155c2b9ce30bf8fc29b1c978c58dae1e7"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["90440a2155c2b9ce30bf8fc29b1c978c58dae1e7"],"90440a2155c2b9ce30bf8fc29b1c978c58dae1e7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}