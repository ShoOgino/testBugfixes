{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#getCount().mjava","commits":[{"id":"a645276cbaf5dc96a42fd473b9019bde352996c8","date":1391806699,"type":0,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#getCount().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public long getCount() {\n    return count;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a371aa649cc243e82cb8677ca960a1e0232ecedf","date":1393605574,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#getCount().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#getCount().mjava","sourceNew":"  @Override\n  public long getCount() throws IOException {\n    IndexSearcher searcher = searcherMgr.acquire();\n    try {\n      return searcher.getIndexReader().numDocs();\n    } finally {\n      searcherMgr.release(searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public long getCount() {\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6549d5ea6b7b25525309b981de3ec92b4dff99d1","date":1408666035,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#getCount().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#getCount().mjava","sourceNew":"  @Override\n  public long getCount() throws IOException {\n    if (searcherMgr == null) {\n      return 0;\n    }\n    IndexSearcher searcher = searcherMgr.acquire();\n    try {\n      return searcher.getIndexReader().numDocs();\n    } finally {\n      searcherMgr.release(searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public long getCount() throws IOException {\n    IndexSearcher searcher = searcherMgr.acquire();\n    try {\n      return searcher.getIndexReader().numDocs();\n    } finally {\n      searcherMgr.release(searcher);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cbf4928b28a4db03465b529b38a64ef29c91735","date":1483044697,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#getCount().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#getCount().mjava","sourceNew":"  @Override\n  public long getCount() throws IOException {\n    if (searcherMgr == null) {\n      return 0;\n    }\n    SearcherManager mgr;\n    IndexSearcher searcher;\n    synchronized (searcherMgrLock) {\n      mgr = searcherMgr; // acquire & release on same SearcherManager, via local reference\n      searcher = mgr.acquire();\n    }\n    try {\n      return searcher.getIndexReader().numDocs();\n    } finally {\n      mgr.release(searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public long getCount() throws IOException {\n    if (searcherMgr == null) {\n      return 0;\n    }\n    IndexSearcher searcher = searcherMgr.acquire();\n    try {\n      return searcher.getIndexReader().numDocs();\n    } finally {\n      searcherMgr.release(searcher);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de0b5d8cac74be1676bcc2f805bc0d0630176659","date":1483048659,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#getCount().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#getCount().mjava","sourceNew":"  @Override\n  public long getCount() throws IOException {\n    if (searcherMgr == null) {\n      return 0;\n    }\n    SearcherManager mgr;\n    IndexSearcher searcher;\n    synchronized (searcherMgrLock) {\n      mgr = searcherMgr; // acquire & release on same SearcherManager, via local reference\n      searcher = mgr.acquire();\n    }\n    try {\n      return searcher.getIndexReader().numDocs();\n    } finally {\n      mgr.release(searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public long getCount() throws IOException {\n    if (searcherMgr == null) {\n      return 0;\n    }\n    IndexSearcher searcher = searcherMgr.acquire();\n    try {\n      return searcher.getIndexReader().numDocs();\n    } finally {\n      searcherMgr.release(searcher);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#getCount().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#getCount().mjava","sourceNew":"  @Override\n  public long getCount() throws IOException {\n    if (searcherMgr == null) {\n      return 0;\n    }\n    SearcherManager mgr;\n    IndexSearcher searcher;\n    synchronized (searcherMgrLock) {\n      mgr = searcherMgr; // acquire & release on same SearcherManager, via local reference\n      searcher = mgr.acquire();\n    }\n    try {\n      return searcher.getIndexReader().numDocs();\n    } finally {\n      mgr.release(searcher);\n    }\n  }\n\n","sourceOld":"  @Override\n  public long getCount() throws IOException {\n    if (searcherMgr == null) {\n      return 0;\n    }\n    IndexSearcher searcher = searcherMgr.acquire();\n    try {\n      return searcher.getIndexReader().numDocs();\n    } finally {\n      searcherMgr.release(searcher);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"de0b5d8cac74be1676bcc2f805bc0d0630176659":["6549d5ea6b7b25525309b981de3ec92b4dff99d1","5cbf4928b28a4db03465b529b38a64ef29c91735"],"6549d5ea6b7b25525309b981de3ec92b4dff99d1":["a371aa649cc243e82cb8677ca960a1e0232ecedf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a371aa649cc243e82cb8677ca960a1e0232ecedf":["a645276cbaf5dc96a42fd473b9019bde352996c8"],"a645276cbaf5dc96a42fd473b9019bde352996c8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cbf4928b28a4db03465b529b38a64ef29c91735":["6549d5ea6b7b25525309b981de3ec92b4dff99d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["de0b5d8cac74be1676bcc2f805bc0d0630176659"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["6549d5ea6b7b25525309b981de3ec92b4dff99d1","de0b5d8cac74be1676bcc2f805bc0d0630176659"]},"commit2Childs":{"de0b5d8cac74be1676bcc2f805bc0d0630176659":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"6549d5ea6b7b25525309b981de3ec92b4dff99d1":["de0b5d8cac74be1676bcc2f805bc0d0630176659","5cbf4928b28a4db03465b529b38a64ef29c91735","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a645276cbaf5dc96a42fd473b9019bde352996c8"],"a371aa649cc243e82cb8677ca960a1e0232ecedf":["6549d5ea6b7b25525309b981de3ec92b4dff99d1"],"a645276cbaf5dc96a42fd473b9019bde352996c8":["a371aa649cc243e82cb8677ca960a1e0232ecedf"],"5cbf4928b28a4db03465b529b38a64ef29c91735":["de0b5d8cac74be1676bcc2f805bc0d0630176659"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}