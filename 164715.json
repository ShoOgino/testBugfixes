{"path":"src/java/org/apache/solr/schema/PointType#createFields(SchemaField,String,float).mjava","commits":[{"id":"abec2fd822be07fc74ef5ba3609b9c5625a87d6d","date":1261659802,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/PointType#createFields(SchemaField,String,float).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Fieldable[] createFields(SchemaField field, String externalVal, float boost) {\n    String[] point = DistanceUtils.parsePoint(null, externalVal, dimension);\n    return createFields(field, dynFieldProps, subType, externalVal, boost, point);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4aafd8c35feb155ec2e0e4b6e03cc1604204dd52","date":1261676568,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/PointType#createFields(SchemaField,String,float).mjava","pathOld":"src/java/org/apache/solr/schema/PointType#createFields(SchemaField,String,float).mjava","sourceNew":"  @Override\n  public Fieldable[] createFields(SchemaField field, String externalVal, float boost) {\n    String[] point = DistanceUtils.parsePoint(null, externalVal, dimension);\n\n    // TODO: this doesn't currently support polyFields as sub-field types\n    Fieldable[] f = new Fieldable[ (field.indexed() ? dimension : 0) + (field.stored() ? 1 : 0) ];\n\n    if (field.indexed()) {\n      for (int i=0; i<dimension; i++) {\n        f[i] = subField(field, i).createField(point[i], boost);\n      }\n    }\n\n    if (field.stored()) {\n      String storedVal = externalVal;  // normalize or not?\n      f[f.length - 1] = createField(field.getName(), storedVal,\n                getFieldStore(field, storedVal), Field.Index.NO, Field.TermVector.NO,\n                false, false, boost);\n    }\n    \n    return f;\n  }\n\n","sourceOld":"  @Override\n  public Fieldable[] createFields(SchemaField field, String externalVal, float boost) {\n    String[] point = DistanceUtils.parsePoint(null, externalVal, dimension);\n    return createFields(field, dynFieldProps, subType, externalVal, boost, point);\n  }\n\n","bugFix":null,"bugIntro":["378c6150f20ef79f184ab9cd89a056771fc918c7","378c6150f20ef79f184ab9cd89a056771fc918c7","378c6150f20ef79f184ab9cd89a056771fc918c7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/PointType#createFields(SchemaField,String,float).mjava","pathOld":"src/java/org/apache/solr/schema/PointType#createFields(SchemaField,String,float).mjava","sourceNew":"  @Override\n  public Fieldable[] createFields(SchemaField field, String externalVal, float boost) {\n    String[] point = DistanceUtils.parsePoint(null, externalVal, dimension);\n\n    // TODO: this doesn't currently support polyFields as sub-field types\n    Fieldable[] f = new Fieldable[ (field.indexed() ? dimension : 0) + (field.stored() ? 1 : 0) ];\n\n    if (field.indexed()) {\n      for (int i=0; i<dimension; i++) {\n        f[i] = subField(field, i).createField(point[i], boost);\n      }\n    }\n\n    if (field.stored()) {\n      String storedVal = externalVal;  // normalize or not?\n      f[f.length - 1] = createField(field.getName(), storedVal,\n                getFieldStore(field, storedVal), Field.Index.NO, Field.TermVector.NO,\n                false, false, boost);\n    }\n    \n    return f;\n  }\n\n","sourceOld":"  @Override\n  public Fieldable[] createFields(SchemaField field, String externalVal, float boost) {\n    String[] point = DistanceUtils.parsePoint(null, externalVal, dimension);\n\n    // TODO: this doesn't currently support polyFields as sub-field types\n    Fieldable[] f = new Fieldable[ (field.indexed() ? dimension : 0) + (field.stored() ? 1 : 0) ];\n\n    if (field.indexed()) {\n      for (int i=0; i<dimension; i++) {\n        f[i] = subField(field, i).createField(point[i], boost);\n      }\n    }\n\n    if (field.stored()) {\n      String storedVal = externalVal;  // normalize or not?\n      f[f.length - 1] = createField(field.getName(), storedVal,\n                getFieldStore(field, storedVal), Field.Index.NO, Field.TermVector.NO,\n                false, false, boost);\n    }\n    \n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"abec2fd822be07fc74ef5ba3609b9c5625a87d6d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"4aafd8c35feb155ec2e0e4b6e03cc1604204dd52":["abec2fd822be07fc74ef5ba3609b9c5625a87d6d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["4aafd8c35feb155ec2e0e4b6e03cc1604204dd52"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"abec2fd822be07fc74ef5ba3609b9c5625a87d6d":["4aafd8c35feb155ec2e0e4b6e03cc1604204dd52"],"4aafd8c35feb155ec2e0e4b6e03cc1604204dd52":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["abec2fd822be07fc74ef5ba3609b9c5625a87d6d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}