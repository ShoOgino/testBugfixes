{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(String,Date,Reader,DateFormat).mjava","commits":[{"id":"81573e29e6e5db648330b225c60d44b1c3eb388e","date":1174927593,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(String,Date,Reader,DateFormat).mjava","pathOld":"/dev/null","sourceNew":"  /*\n   *  (non-Javadoc)\n   * @see org.apache.lucene.benchmark.byTask.feeds.HTMLParser#parse(java.lang.String, java.util.Date, java.io.Reader, java.text.DateFormat)\n   */\n  public DocData parse(String name, Date date, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException {\n    org.apache.lucene.demo.html.HTMLParser p = new org.apache.lucene.demo.html.HTMLParser(reader);\n    \n    // title\n    String title = p.getTitle();\n    // properties \n    Properties props = p.getMetaTags(); \n    // body\n    Reader r = p.getReader();\n    char c[] = new char[1024];\n    StringBuffer bodyBuf = new StringBuffer();\n    int n;\n    while ((n = r.read(c)) >= 0) {\n      if (n>0) {\n        bodyBuf.append(c,0,n);\n      }\n    }\n    r.close();\n    if (date == null && props.getProperty(\"date\")!=null) {\n      try {\n        date = dateFormat.parse(props.getProperty(\"date\").trim());\n      } catch (ParseException e) {\n        // do not fail test just because a date could not be parsed\n        System.out.println(\"ignoring date parse exception (assigning 'now') for: \"+props.getProperty(\"date\"));\n        date = new Date(); // now \n      }\n    }\n      \n    return new DocData(name, bodyBuf.toString(), title, props, date);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b","date":1245355139,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(DocData,String,Date,Reader,DateFormat).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DemoHTMLParser#parse(String,Date,Reader,DateFormat).mjava","sourceNew":"  public DocData parse(DocData docData, String name, Date date, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException {\n    org.apache.lucene.demo.html.HTMLParser p = new org.apache.lucene.demo.html.HTMLParser(reader);\n    \n    // title\n    String title = p.getTitle();\n    // properties \n    Properties props = p.getMetaTags(); \n    // body\n    Reader r = p.getReader();\n    char c[] = new char[1024];\n    StringBuffer bodyBuf = new StringBuffer();\n    int n;\n    while ((n = r.read(c)) >= 0) {\n      if (n>0) {\n        bodyBuf.append(c,0,n);\n      }\n    }\n    r.close();\n    if (date == null && props.getProperty(\"date\")!=null) {\n      try {\n        date = dateFormat.parse(props.getProperty(\"date\").trim());\n      } catch (ParseException e) {\n        // do not fail test just because a date could not be parsed\n        System.out.println(\"ignoring date parse exception (assigning 'now') for: \"+props.getProperty(\"date\"));\n        date = new Date(); // now \n      }\n    }\n    \n    docData.clear();\n    docData.setName(name);\n    docData.setBody(bodyBuf.toString());\n    docData.setTitle(title);\n    docData.setProps(props);\n    docData.setDate(date);\n    return docData;\n  }\n\n","sourceOld":"  /*\n   *  (non-Javadoc)\n   * @see org.apache.lucene.benchmark.byTask.feeds.HTMLParser#parse(java.lang.String, java.util.Date, java.io.Reader, java.text.DateFormat)\n   */\n  public DocData parse(String name, Date date, Reader reader, DateFormat dateFormat) throws IOException, InterruptedException {\n    org.apache.lucene.demo.html.HTMLParser p = new org.apache.lucene.demo.html.HTMLParser(reader);\n    \n    // title\n    String title = p.getTitle();\n    // properties \n    Properties props = p.getMetaTags(); \n    // body\n    Reader r = p.getReader();\n    char c[] = new char[1024];\n    StringBuffer bodyBuf = new StringBuffer();\n    int n;\n    while ((n = r.read(c)) >= 0) {\n      if (n>0) {\n        bodyBuf.append(c,0,n);\n      }\n    }\n    r.close();\n    if (date == null && props.getProperty(\"date\")!=null) {\n      try {\n        date = dateFormat.parse(props.getProperty(\"date\").trim());\n      } catch (ParseException e) {\n        // do not fail test just because a date could not be parsed\n        System.out.println(\"ignoring date parse exception (assigning 'now') for: \"+props.getProperty(\"date\"));\n        date = new Date(); // now \n      }\n    }\n      \n    return new DocData(name, bodyBuf.toString(), title, props, date);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["81573e29e6e5db648330b225c60d44b1c3eb388e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"81573e29e6e5db648330b225c60d44b1c3eb388e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"]},"commit2Childs":{"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["81573e29e6e5db648330b225c60d44b1c3eb388e"],"81573e29e6e5db648330b225c60d44b1c3eb388e":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}