{"path":"lucene/core/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(Terms).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(Terms).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(Terms).mjava","sourceNew":"  /** Convenience method, if no attributes are needed:\n   * This simply passes empty attributes and is equal to:\n   * <code>getTermsEnum(terms, new AttributeSource())</code>\n   */\n  protected final TermsEnum getTermsEnum(Terms terms) throws IOException {\n    return getTermsEnum(terms, new AttributeSource());\n  }\n\n","sourceOld":"  /** Convenience method, if no attributes are needed:\n   * This simply passes empty attributes and is equal to:\n   * <code>getTermsEnum(terms, new AttributeSource())</code>\n   */\n  protected final TermsEnum getTermsEnum(Terms terms) throws IOException {\n    return getTermsEnum(terms, new AttributeSource());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5d819373a1ee4f8d8c858aecdb04c4b724b8e5e","date":1574848425,"type":3,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(Terms).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(Terms).mjava","sourceNew":"  /**\n   * Constructs an enumeration that expands the pattern term.\n   * This method should only be called if the field exists (ie,\n   * implementations can assume the field does exist).\n   * This method never returns null.\n   * The returned TermsEnum is positioned to the first matching term.\n   */\n  public final TermsEnum getTermsEnum(Terms terms) throws IOException {\n    return getTermsEnum(terms, new AttributeSource());\n  }\n\n","sourceOld":"  /** Convenience method, if no attributes are needed:\n   * This simply passes empty attributes and is equal to:\n   * <code>getTermsEnum(terms, new AttributeSource())</code>\n   */\n  protected final TermsEnum getTermsEnum(Terms terms) throws IOException {\n    return getTermsEnum(terms, new AttributeSource());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b5d819373a1ee4f8d8c858aecdb04c4b724b8e5e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b5d819373a1ee4f8d8c858aecdb04c4b724b8e5e"]},"commit2Childs":{"b5d819373a1ee4f8d8c858aecdb04c4b724b8e5e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b5d819373a1ee4f8d8c858aecdb04c4b724b8e5e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}