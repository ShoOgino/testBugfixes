{"path":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#init(Reader,Version).mjava","commits":[{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#init(Reader,Version).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#init(Reader,boolean).mjava","sourceNew":"  private void init(Reader input, Version matchVersion) {\n    if (matchVersion.onOrAfter(Version.LUCENE_24)) {\n      replaceInvalidAcronym = true;\n    } else {\n      replaceInvalidAcronym = false;\n    }\n    this.input = input;    \n    termAtt = addAttribute(TermAttribute.class);\n    offsetAtt = addAttribute(OffsetAttribute.class);\n    posIncrAtt = addAttribute(PositionIncrementAttribute.class);\n    typeAtt = addAttribute(TypeAttribute.class);\n  }\n\n","sourceOld":"  private void init(Reader input, boolean replaceInvalidAcronym) {\n    this.replaceInvalidAcronym = replaceInvalidAcronym;\n    this.input = input;    \n    termAtt = addAttribute(TermAttribute.class);\n    offsetAtt = addAttribute(OffsetAttribute.class);\n    posIncrAtt = addAttribute(PositionIncrementAttribute.class);\n    typeAtt = addAttribute(TypeAttribute.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/standard/StandardTokenizer#init(Reader,Version).mjava","pathOld":"src/java/org/apache/lucene/analysis/standard/StandardTokenizer#init(Reader,Version).mjava","sourceNew":"  private void init(Reader input, Version matchVersion) {\n    if (matchVersion.onOrAfter(Version.LUCENE_24)) {\n      replaceInvalidAcronym = true;\n    } else {\n      replaceInvalidAcronym = false;\n    }\n    this.input = input;    \n    termAtt = addAttribute(TermAttribute.class);\n    offsetAtt = addAttribute(OffsetAttribute.class);\n    posIncrAtt = addAttribute(PositionIncrementAttribute.class);\n    typeAtt = addAttribute(TypeAttribute.class);\n  }\n\n","sourceOld":"  private void init(Reader input, Version matchVersion) {\n    if (matchVersion.onOrAfter(Version.LUCENE_24)) {\n      replaceInvalidAcronym = true;\n    } else {\n      replaceInvalidAcronym = false;\n    }\n    this.input = input;    \n    termAtt = addAttribute(TermAttribute.class);\n    offsetAtt = addAttribute(OffsetAttribute.class);\n    posIncrAtt = addAttribute(PositionIncrementAttribute.class);\n    typeAtt = addAttribute(TypeAttribute.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ba1116b3450a9c1642c89445d131b37344055245"],"ba1116b3450a9c1642c89445d131b37344055245":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba1116b3450a9c1642c89445d131b37344055245"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ba1116b3450a9c1642c89445d131b37344055245":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}