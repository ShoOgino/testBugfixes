{"path":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPoints().mjava","commits":[{"id":"86cab68ee900a31d093b114182b488ea8e85c59d","date":1456171815,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPoints().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPointQuery().mjava","sourceNew":"  public void testExactPoints() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(PointRangeQuery.newIntExact(\"int\", 42)));\n    assertEquals(0, s.count(PointRangeQuery.newIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(PointRangeQuery.newLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(PointRangeQuery.newLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(PointRangeQuery.newFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(PointRangeQuery.newFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(PointRangeQuery.newDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(PointRangeQuery.newDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExactPointQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(ExactPointQuery.new1DIntExact(\"int\", 42)));\n    assertEquals(0, s.count(ExactPointQuery.new1DIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(ExactPointQuery.new1DLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(ExactPointQuery.new1DFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"419a8f52c6635419beb951255cacbbb281044c57","date":1456189353,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPoints().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPointQuery().mjava","sourceNew":"  public void testExactPoints() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(PointRangeQuery.newIntExact(\"int\", 42)));\n    assertEquals(0, s.count(PointRangeQuery.newIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(PointRangeQuery.newLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(PointRangeQuery.newLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(PointRangeQuery.newFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(PointRangeQuery.newFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(PointRangeQuery.newDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(PointRangeQuery.newDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExactPointQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(ExactPointQuery.new1DIntExact(\"int\", 42)));\n    assertEquals(0, s.count(ExactPointQuery.new1DIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(ExactPointQuery.new1DLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(ExactPointQuery.new1DFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(ExactPointQuery.new1DDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3104a6ba367dfb690806b227c5ef17c42c6107b","date":1456265035,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPoints().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPoints().mjava","sourceNew":"  public void testExactPoints() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(IntPoint.newExactQuery(\"int\", 42)));\n    assertEquals(0, s.count(IntPoint.newExactQuery(\"int\", 41)));\n\n    assertEquals(1, s.count(LongPoint.newExactQuery(\"long\", 5L)));\n    assertEquals(0, s.count(LongPoint.newExactQuery(\"long\", -1L)));\n\n    assertEquals(1, s.count(FloatPoint.newExactQuery(\"float\", 2.0f)));\n    assertEquals(0, s.count(FloatPoint.newExactQuery(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(DoublePoint.newExactQuery(\"double\", 1.0)));\n    assertEquals(0, s.count(DoublePoint.newExactQuery(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExactPoints() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(PointRangeQuery.newIntExact(\"int\", 42)));\n    assertEquals(0, s.count(PointRangeQuery.newIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(PointRangeQuery.newLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(PointRangeQuery.newLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(PointRangeQuery.newFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(PointRangeQuery.newFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(PointRangeQuery.newDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(PointRangeQuery.newDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f36bbdca4e65638f33c3e8f2fbe46a64dd06cd5","date":1456265720,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPoints().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPoints().mjava","sourceNew":"  public void testExactPoints() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(IntPoint.newExactQuery(\"int\", 42)));\n    assertEquals(0, s.count(IntPoint.newExactQuery(\"int\", 41)));\n\n    assertEquals(1, s.count(LongPoint.newExactQuery(\"long\", 5L)));\n    assertEquals(0, s.count(LongPoint.newExactQuery(\"long\", -1L)));\n\n    assertEquals(1, s.count(FloatPoint.newExactQuery(\"float\", 2.0f)));\n    assertEquals(0, s.count(FloatPoint.newExactQuery(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(DoublePoint.newExactQuery(\"double\", 1.0)));\n    assertEquals(0, s.count(DoublePoint.newExactQuery(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExactPoints() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(PointRangeQuery.newIntExact(\"int\", 42)));\n    assertEquals(0, s.count(PointRangeQuery.newIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(PointRangeQuery.newLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(PointRangeQuery.newLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(PointRangeQuery.newFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(PointRangeQuery.newFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(PointRangeQuery.newDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(PointRangeQuery.newDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5296efc4b319f5647b606629c093a94b23692c6","date":1456267155,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPoints().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPoints().mjava","sourceNew":"  public void testExactPoints() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(IntPoint.newExactQuery(\"int\", 42)));\n    assertEquals(0, s.count(IntPoint.newExactQuery(\"int\", 41)));\n\n    assertEquals(1, s.count(LongPoint.newExactQuery(\"long\", 5L)));\n    assertEquals(0, s.count(LongPoint.newExactQuery(\"long\", -1L)));\n\n    assertEquals(1, s.count(FloatPoint.newExactQuery(\"float\", 2.0f)));\n    assertEquals(0, s.count(FloatPoint.newExactQuery(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(DoublePoint.newExactQuery(\"double\", 1.0)));\n    assertEquals(0, s.count(DoublePoint.newExactQuery(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExactPoints() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(PointRangeQuery.newIntExact(\"int\", 42)));\n    assertEquals(0, s.count(PointRangeQuery.newIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(PointRangeQuery.newLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(PointRangeQuery.newLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(PointRangeQuery.newFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(PointRangeQuery.newFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(PointRangeQuery.newDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(PointRangeQuery.newDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ff4a3d0540c1b0f828f19adccd01d1b33c996a6","date":1456306182,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPoints().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPoints().mjava","sourceNew":"  public void testExactPoints() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(IntPoint.newExactQuery(\"int\", 42)));\n    assertEquals(0, s.count(IntPoint.newExactQuery(\"int\", 41)));\n\n    assertEquals(1, s.count(LongPoint.newExactQuery(\"long\", 5L)));\n    assertEquals(0, s.count(LongPoint.newExactQuery(\"long\", -1L)));\n\n    assertEquals(1, s.count(FloatPoint.newExactQuery(\"float\", 2.0f)));\n    assertEquals(0, s.count(FloatPoint.newExactQuery(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(DoublePoint.newExactQuery(\"double\", 1.0)));\n    assertEquals(0, s.count(DoublePoint.newExactQuery(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExactPoints() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(PointRangeQuery.newIntExact(\"int\", 42)));\n    assertEquals(0, s.count(PointRangeQuery.newIntExact(\"int\", 41)));\n\n    assertEquals(1, s.count(PointRangeQuery.newLongExact(\"long\", 5L)));\n    assertEquals(0, s.count(PointRangeQuery.newLongExact(\"long\", -1L)));\n\n    assertEquals(1, s.count(PointRangeQuery.newFloatExact(\"float\", 2.0f)));\n    assertEquals(0, s.count(PointRangeQuery.newFloatExact(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(PointRangeQuery.newDoubleExact(\"double\", 1.0)));\n    assertEquals(0, s.count(PointRangeQuery.newDoubleExact(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"adc9dc8ef0ce617b940a039fd12f79e8b098cc7f","date":1456936072,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPoints().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPoints().mjava","sourceNew":"  public void testExactPoints() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.count(IntPoint.newExactQuery(\"int\", 42)));\n    assertEquals(0, s.count(IntPoint.newExactQuery(\"int\", 41)));\n\n    assertEquals(1, s.count(LongPoint.newExactQuery(\"long\", 5L)));\n    assertEquals(0, s.count(LongPoint.newExactQuery(\"long\", -1L)));\n\n    assertEquals(1, s.count(FloatPoint.newExactQuery(\"float\", 2.0f)));\n    assertEquals(0, s.count(FloatPoint.newExactQuery(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(DoublePoint.newExactQuery(\"double\", 1.0)));\n    assertEquals(0, s.count(DoublePoint.newExactQuery(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExactPoints() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(IntPoint.newExactQuery(\"int\", 42)));\n    assertEquals(0, s.count(IntPoint.newExactQuery(\"int\", 41)));\n\n    assertEquals(1, s.count(LongPoint.newExactQuery(\"long\", 5L)));\n    assertEquals(0, s.count(LongPoint.newExactQuery(\"long\", -1L)));\n\n    assertEquals(1, s.count(FloatPoint.newExactQuery(\"float\", 2.0f)));\n    assertEquals(0, s.count(FloatPoint.newExactQuery(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(DoublePoint.newExactQuery(\"double\", 1.0)));\n    assertEquals(0, s.count(DoublePoint.newExactQuery(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPoints().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testExactPoints().mjava","sourceNew":"  public void testExactPoints() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r, false);\n    assertEquals(1, s.count(IntPoint.newExactQuery(\"int\", 42)));\n    assertEquals(0, s.count(IntPoint.newExactQuery(\"int\", 41)));\n\n    assertEquals(1, s.count(LongPoint.newExactQuery(\"long\", 5L)));\n    assertEquals(0, s.count(LongPoint.newExactQuery(\"long\", -1L)));\n\n    assertEquals(1, s.count(FloatPoint.newExactQuery(\"float\", 2.0f)));\n    assertEquals(0, s.count(FloatPoint.newExactQuery(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(DoublePoint.newExactQuery(\"double\", 1.0)));\n    assertEquals(0, s.count(DoublePoint.newExactQuery(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExactPoints() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig();\n    iwc.setCodec(getCodec());\n    IndexWriter w = new IndexWriter(dir, iwc);\n\n    Document doc = new Document();\n    doc.add(new LongPoint(\"long\", 5L));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new IntPoint(\"int\", 42));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FloatPoint(\"float\", 2.0f));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"double\", 1.0));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w);\n    IndexSearcher s = newSearcher(r);\n    assertEquals(1, s.count(IntPoint.newExactQuery(\"int\", 42)));\n    assertEquals(0, s.count(IntPoint.newExactQuery(\"int\", 41)));\n\n    assertEquals(1, s.count(LongPoint.newExactQuery(\"long\", 5L)));\n    assertEquals(0, s.count(LongPoint.newExactQuery(\"long\", -1L)));\n\n    assertEquals(1, s.count(FloatPoint.newExactQuery(\"float\", 2.0f)));\n    assertEquals(0, s.count(FloatPoint.newExactQuery(\"float\", 1.0f)));\n\n    assertEquals(1, s.count(DoublePoint.newExactQuery(\"double\", 1.0)));\n    assertEquals(0, s.count(DoublePoint.newExactQuery(\"double\", 2.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3104a6ba367dfb690806b227c5ef17c42c6107b":["419a8f52c6635419beb951255cacbbb281044c57"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"419a8f52c6635419beb951255cacbbb281044c57":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","86cab68ee900a31d093b114182b488ea8e85c59d"],"1ff4a3d0540c1b0f828f19adccd01d1b33c996a6":["419a8f52c6635419beb951255cacbbb281044c57","a5296efc4b319f5647b606629c093a94b23692c6"],"7f36bbdca4e65638f33c3e8f2fbe46a64dd06cd5":["419a8f52c6635419beb951255cacbbb281044c57","d3104a6ba367dfb690806b227c5ef17c42c6107b"],"a5296efc4b319f5647b606629c093a94b23692c6":["419a8f52c6635419beb951255cacbbb281044c57","d3104a6ba367dfb690806b227c5ef17c42c6107b"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["1ff4a3d0540c1b0f828f19adccd01d1b33c996a6","adc9dc8ef0ce617b940a039fd12f79e8b098cc7f"],"86cab68ee900a31d093b114182b488ea8e85c59d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"adc9dc8ef0ce617b940a039fd12f79e8b098cc7f":["1ff4a3d0540c1b0f828f19adccd01d1b33c996a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"]},"commit2Childs":{"d3104a6ba367dfb690806b227c5ef17c42c6107b":["7f36bbdca4e65638f33c3e8f2fbe46a64dd06cd5","a5296efc4b319f5647b606629c093a94b23692c6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["419a8f52c6635419beb951255cacbbb281044c57","86cab68ee900a31d093b114182b488ea8e85c59d"],"419a8f52c6635419beb951255cacbbb281044c57":["d3104a6ba367dfb690806b227c5ef17c42c6107b","1ff4a3d0540c1b0f828f19adccd01d1b33c996a6","7f36bbdca4e65638f33c3e8f2fbe46a64dd06cd5","a5296efc4b319f5647b606629c093a94b23692c6"],"1ff4a3d0540c1b0f828f19adccd01d1b33c996a6":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","adc9dc8ef0ce617b940a039fd12f79e8b098cc7f"],"7f36bbdca4e65638f33c3e8f2fbe46a64dd06cd5":[],"a5296efc4b319f5647b606629c093a94b23692c6":["1ff4a3d0540c1b0f828f19adccd01d1b33c996a6"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"86cab68ee900a31d093b114182b488ea8e85c59d":["419a8f52c6635419beb951255cacbbb281044c57"],"adc9dc8ef0ce617b940a039fd12f79e8b098cc7f":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7f36bbdca4e65638f33c3e8f2fbe46a64dd06cd5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}