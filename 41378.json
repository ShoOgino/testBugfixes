{"path":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader#readHeader(IndexInput).mjava","commits":[{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader#readHeader(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PrefixCodedTermsReader#readHeader(IndexInput).mjava","sourceNew":"  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(in, BlockTermsWriter.CODEC_NAME,\n                          BlockTermsWriter.VERSION_START,\n                          BlockTermsWriter.VERSION_CURRENT);\n    dirOffset = in.readLong();    \n  }\n\n","sourceOld":"  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(in, PrefixCodedTermsWriter.CODEC_NAME,\n      PrefixCodedTermsWriter.VERSION_START, PrefixCodedTermsWriter.VERSION_CURRENT);\n    dirOffset = in.readLong();    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd1bfe3cedf815c14939d170d53031c88eb5c444","date":1295896578,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader#readHeader(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(in, BlockTermsWriter.CODEC_NAME,\n                          BlockTermsWriter.VERSION_START,\n                          BlockTermsWriter.VERSION_CURRENT);\n    dirOffset = in.readLong();    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader#readHeader(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(in, BlockTermsWriter.CODEC_NAME,\n                          BlockTermsWriter.VERSION_START,\n                          BlockTermsWriter.VERSION_CURRENT);\n    dirOffset = in.readLong();    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb306ec66adbcdf2dc42488e5a441e1dbdeef894","date":1302774723,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader#readHeader(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader#readHeader(IndexInput).mjava","sourceNew":"  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(input, BlockTermsWriter.CODEC_NAME,\n                          BlockTermsWriter.VERSION_START,\n                          BlockTermsWriter.VERSION_CURRENT);\n    dirOffset = input.readLong();\n  }\n\n","sourceOld":"  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(in, BlockTermsWriter.CODEC_NAME,\n                          BlockTermsWriter.VERSION_START,\n                          BlockTermsWriter.VERSION_CURRENT);\n    dirOffset = in.readLong();    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eb46686a27187e42311e77666a2c7026f461ebc","date":1302858020,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader#readHeader(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader#readHeader(IndexInput).mjava","sourceNew":"  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(input, BlockTermsWriter.CODEC_NAME,\n                          BlockTermsWriter.VERSION_START,\n                          BlockTermsWriter.VERSION_CURRENT);\n    dirOffset = input.readLong();\n  }\n\n","sourceOld":"  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(in, BlockTermsWriter.CODEC_NAME,\n                          BlockTermsWriter.VERSION_START,\n                          BlockTermsWriter.VERSION_CURRENT);\n    dirOffset = in.readLong();    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader#readHeader(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader#readHeader(IndexInput).mjava","sourceNew":"  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(input, BlockTermsWriter.CODEC_NAME,\n                          BlockTermsWriter.VERSION_START,\n                          BlockTermsWriter.VERSION_CURRENT);\n    dirOffset = input.readLong();\n  }\n\n","sourceOld":"  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(in, BlockTermsWriter.CODEC_NAME,\n                          BlockTermsWriter.VERSION_START,\n                          BlockTermsWriter.VERSION_CURRENT);\n    dirOffset = in.readLong();    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader#readHeader(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader#readHeader(IndexInput).mjava","sourceNew":"  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(input, BlockTermsWriter.CODEC_NAME,\n                          BlockTermsWriter.VERSION_START,\n                          BlockTermsWriter.VERSION_CURRENT);\n    dirOffset = input.readLong();\n  }\n\n","sourceOld":"  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(in, BlockTermsWriter.CODEC_NAME,\n                          BlockTermsWriter.VERSION_START,\n                          BlockTermsWriter.VERSION_CURRENT);\n    dirOffset = in.readLong();    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/BlockTermsReader#readHeader(IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader#readHeader(IndexInput).mjava","sourceNew":"  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(input, BlockTermsWriter.CODEC_NAME,\n                          BlockTermsWriter.VERSION_START,\n                          BlockTermsWriter.VERSION_CURRENT);\n    dirOffset = input.readLong();\n  }\n\n","sourceOld":"  protected void readHeader(IndexInput input) throws IOException {\n    CodecUtil.checkHeader(input, BlockTermsWriter.CODEC_NAME,\n                          BlockTermsWriter.VERSION_START,\n                          BlockTermsWriter.VERSION_CURRENT);\n    dirOffset = input.readLong();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fd1bfe3cedf815c14939d170d53031c88eb5c444":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1eb46686a27187e42311e77666a2c7026f461ebc":["fd1bfe3cedf815c14939d170d53031c88eb5c444","fb306ec66adbcdf2dc42488e5a441e1dbdeef894"],"fb306ec66adbcdf2dc42488e5a441e1dbdeef894":["b1add9ddc0005b07550d4350720aac22dc9886b3"],"a3776dccca01c11e7046323cfad46a3b4a471233":["b1add9ddc0005b07550d4350720aac22dc9886b3","fb306ec66adbcdf2dc42488e5a441e1dbdeef894"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b1add9ddc0005b07550d4350720aac22dc9886b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","fb306ec66adbcdf2dc42488e5a441e1dbdeef894"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["fb306ec66adbcdf2dc42488e5a441e1dbdeef894"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"fd1bfe3cedf815c14939d170d53031c88eb5c444":["1eb46686a27187e42311e77666a2c7026f461ebc"],"1eb46686a27187e42311e77666a2c7026f461ebc":[],"fb306ec66adbcdf2dc42488e5a441e1dbdeef894":["1eb46686a27187e42311e77666a2c7026f461ebc","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fd1bfe3cedf815c14939d170d53031c88eb5c444","29ef99d61cda9641b6250bf9567329a6e65f901d","b1add9ddc0005b07550d4350720aac22dc9886b3"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"b1add9ddc0005b07550d4350720aac22dc9886b3":["fb306ec66adbcdf2dc42488e5a441e1dbdeef894","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1eb46686a27187e42311e77666a2c7026f461ebc","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}