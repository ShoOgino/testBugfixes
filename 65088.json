{"path":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader#doCommit().mjava","commits":[{"id":"e7a005111928c661ab5d236ed6a3a079b438d2cf","date":1205411670,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader#doCommit().mjava","pathOld":"/dev/null","sourceNew":"  protected void doCommit() throws IOException {\n    // todo: read/write lock\n\n    boolean updated = false;\n\n    // 1. update norms\n    if (updatedNormsByFieldNameAndDocumentNumber != null) {\n      for (Map.Entry<String, List<NormUpdate>> e : updatedNormsByFieldNameAndDocumentNumber.entrySet()) {\n        byte[] norms = getIndex().getNormsByFieldNameAndDocumentNumber().get(e.getKey());\n        for (NormUpdate normUpdate : e.getValue()) {\n          norms[normUpdate.doc] = normUpdate.value;\n        }\n      }\n      updatedNormsByFieldNameAndDocumentNumber = null;\n\n      updated = true;\n    }\n\n    // 2. remove deleted documents\n    if (deletedDocumentNumbers.size() > 0) {\n      for (Integer doc : deletedDocumentNumbers) {\n        getIndex().getDeletedDocuments().add(doc);\n      }\n      deletedDocumentNumbers.clear();\n      deletedDocuments.clear();\n\n      updated = true;\n\n    }\n\n    // todo unlock read/writelock\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["317c809622a7a74e9257dd0eaf0b7c4dd7399bc7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"317c809622a7a74e9257dd0eaf0b7c4dd7399bc7","date":1214673815,"type":3,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader#doCommit().mjava","pathOld":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader#doCommit().mjava","sourceNew":"  protected void doCommit() throws IOException {\n    // todo: read/write lock\n\n    boolean updated = false;\n\n    // 1. update norms\n    if (updatedNormsByFieldNameAndDocumentNumber != null) {\n      for (Map.Entry<String,List<NormUpdate>> e : updatedNormsByFieldNameAndDocumentNumber.entrySet()) {\n        byte[] norms = getIndex().getNormsByFieldNameAndDocumentNumber().get(e.getKey());\n        for (NormUpdate normUpdate : e.getValue()) {\n          norms[normUpdate.doc] = normUpdate.value;\n        }\n      }\n      updatedNormsByFieldNameAndDocumentNumber = null;\n\n      updated = true;\n    }\n\n    // 2. remove deleted documents\n    if (deletedDocumentNumbers.size() > 0) {\n      for (Integer doc : deletedDocumentNumbers) {\n        getIndex().getDeletedDocuments().add(doc);\n      }\n      deletedDocumentNumbers.clear();\n      deletedDocuments.clear();\n\n      updated = true;\n\n    }\n\n    // todo unlock read/writelock\n  }\n\n","sourceOld":"  protected void doCommit() throws IOException {\n    // todo: read/write lock\n\n    boolean updated = false;\n\n    // 1. update norms\n    if (updatedNormsByFieldNameAndDocumentNumber != null) {\n      for (Map.Entry<String, List<NormUpdate>> e : updatedNormsByFieldNameAndDocumentNumber.entrySet()) {\n        byte[] norms = getIndex().getNormsByFieldNameAndDocumentNumber().get(e.getKey());\n        for (NormUpdate normUpdate : e.getValue()) {\n          norms[normUpdate.doc] = normUpdate.value;\n        }\n      }\n      updatedNormsByFieldNameAndDocumentNumber = null;\n\n      updated = true;\n    }\n\n    // 2. remove deleted documents\n    if (deletedDocumentNumbers.size() > 0) {\n      for (Integer doc : deletedDocumentNumbers) {\n        getIndex().getDeletedDocuments().add(doc);\n      }\n      deletedDocumentNumbers.clear();\n      deletedDocuments.clear();\n\n      updated = true;\n\n    }\n\n    // todo unlock read/writelock\n  }\n\n","bugFix":["e7a005111928c661ab5d236ed6a3a079b438d2cf"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1","date":1255502337,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader#doCommit(Map).mjava","pathOld":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader#doCommit().mjava","sourceNew":"  protected void doCommit(Map commitUserData) throws IOException {\n    // todo: read/write lock\n\n    boolean updated = false;\n\n    // 1. update norms\n    if (updatedNormsByFieldNameAndDocumentNumber != null) {\n      for (Map.Entry<String,List<NormUpdate>> e : updatedNormsByFieldNameAndDocumentNumber.entrySet()) {\n        byte[] norms = getIndex().getNormsByFieldNameAndDocumentNumber().get(e.getKey());\n        for (NormUpdate normUpdate : e.getValue()) {\n          norms[normUpdate.doc] = normUpdate.value;\n        }\n      }\n      updatedNormsByFieldNameAndDocumentNumber = null;\n\n      updated = true;\n    }\n\n    // 2. remove deleted documents\n    if (deletedDocumentNumbers.size() > 0) {\n      for (Integer doc : deletedDocumentNumbers) {\n        getIndex().getDeletedDocuments().add(doc);\n      }\n      deletedDocumentNumbers.clear();\n      deletedDocuments.clear();\n\n      updated = true;\n\n    }\n\n    // todo unlock read/writelock\n  }\n\n","sourceOld":"  protected void doCommit() throws IOException {\n    // todo: read/write lock\n\n    boolean updated = false;\n\n    // 1. update norms\n    if (updatedNormsByFieldNameAndDocumentNumber != null) {\n      for (Map.Entry<String,List<NormUpdate>> e : updatedNormsByFieldNameAndDocumentNumber.entrySet()) {\n        byte[] norms = getIndex().getNormsByFieldNameAndDocumentNumber().get(e.getKey());\n        for (NormUpdate normUpdate : e.getValue()) {\n          norms[normUpdate.doc] = normUpdate.value;\n        }\n      }\n      updatedNormsByFieldNameAndDocumentNumber = null;\n\n      updated = true;\n    }\n\n    // 2. remove deleted documents\n    if (deletedDocumentNumbers.size() > 0) {\n      for (Integer doc : deletedDocumentNumbers) {\n        getIndex().getDeletedDocuments().add(doc);\n      }\n      deletedDocumentNumbers.clear();\n      deletedDocuments.clear();\n\n      updated = true;\n\n    }\n\n    // todo unlock read/writelock\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"317c809622a7a74e9257dd0eaf0b7c4dd7399bc7":["e7a005111928c661ab5d236ed6a3a079b438d2cf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1":["317c809622a7a74e9257dd0eaf0b7c4dd7399bc7"],"e7a005111928c661ab5d236ed6a3a079b438d2cf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1"]},"commit2Childs":{"317c809622a7a74e9257dd0eaf0b7c4dd7399bc7":["be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e7a005111928c661ab5d236ed6a3a079b438d2cf"],"e7a005111928c661ab5d236ed6a3a079b438d2cf":["317c809622a7a74e9257dd0eaf0b7c4dd7399bc7"],"be2419774ad2eb3c65ca1cb035c3a2ccc6ae7da1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}