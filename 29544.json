{"path":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#notWithin(IntervalsSource,int,IntervalsSource).mjava","commits":[{"id":"361b1afc99f68598c73d37074aec089c9c951586","date":1522744632,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#notWithin(IntervalsSource,int,IntervalsSource).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a not-within {@link IntervalsSource}\n   *\n   * Returns intervals of the minuend that do not appear within a set number of positions of\n   * intervals from the subtrahend query\n   *\n   * @param minuend     the {@link IntervalsSource} to filter\n   * @param positions   the maximum distance that intervals from the minuend may occur from intervals\n   *                    of the subtrahend\n   * @param subtrahend  the {@link IntervalsSource} to filter by\n   */\n  public static IntervalsSource notWithin(IntervalsSource minuend, int positions, IntervalsSource subtrahend) {\n    return new DifferenceIntervalsSource(minuend, subtrahend, new DifferenceIntervalFunction.NotWithinFunction(positions));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f272fe1542bca669076ff8ed44b298b316ab4aa5","date":1546365319,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#notWithin(IntervalsSource,int,IntervalsSource).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#notWithin(IntervalsSource,int,IntervalsSource).mjava","sourceNew":"  /**\n   * Create a not-within {@link IntervalsSource}\n   *\n   * Returns intervals of the minuend that do not appear within a set number of positions of\n   * intervals from the subtrahend query\n   *\n   * @param minuend     the {@link IntervalsSource} to filter\n   * @param positions   the maximum distance that intervals from the minuend may occur from intervals\n   *                    of the subtrahend\n   * @param subtrahend  the {@link IntervalsSource} to filter by\n   */\n  public static IntervalsSource notWithin(IntervalsSource minuend, int positions, IntervalsSource subtrahend) {\n    return new DifferenceIntervalsSource(minuend, Intervals.extend(subtrahend, positions, positions),\n        DifferenceIntervalFunction.NON_OVERLAPPING);\n  }\n\n","sourceOld":"  /**\n   * Create a not-within {@link IntervalsSource}\n   *\n   * Returns intervals of the minuend that do not appear within a set number of positions of\n   * intervals from the subtrahend query\n   *\n   * @param minuend     the {@link IntervalsSource} to filter\n   * @param positions   the maximum distance that intervals from the minuend may occur from intervals\n   *                    of the subtrahend\n   * @param subtrahend  the {@link IntervalsSource} to filter by\n   */\n  public static IntervalsSource notWithin(IntervalsSource minuend, int positions, IntervalsSource subtrahend) {\n    return new DifferenceIntervalsSource(minuend, subtrahend, new DifferenceIntervalFunction.NotWithinFunction(positions));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"798f4c48c9561bff1dcf2652d51afc7dd0ceae3e","date":1546868039,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#notWithin(IntervalsSource,int,IntervalsSource).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#notWithin(IntervalsSource,int,IntervalsSource).mjava","sourceNew":"  /**\n   * Create a not-within {@link IntervalsSource}\n   *\n   * Returns intervals of the minuend that do not appear within a set number of positions of\n   * intervals from the subtrahend query\n   *\n   * @param minuend     the {@link IntervalsSource} to filter\n   * @param positions   the minimum distance that intervals from the minuend may occur from intervals\n   *                    of the subtrahend\n   * @param subtrahend  the {@link IntervalsSource} to filter by\n   */\n  public static IntervalsSource notWithin(IntervalsSource minuend, int positions, IntervalsSource subtrahend) {\n    return new DifferenceIntervalsSource(minuend, Intervals.extend(subtrahend, positions, positions),\n        DifferenceIntervalFunction.NON_OVERLAPPING);\n  }\n\n","sourceOld":"  /**\n   * Create a not-within {@link IntervalsSource}\n   *\n   * Returns intervals of the minuend that do not appear within a set number of positions of\n   * intervals from the subtrahend query\n   *\n   * @param minuend     the {@link IntervalsSource} to filter\n   * @param positions   the maximum distance that intervals from the minuend may occur from intervals\n   *                    of the subtrahend\n   * @param subtrahend  the {@link IntervalsSource} to filter by\n   */\n  public static IntervalsSource notWithin(IntervalsSource minuend, int positions, IntervalsSource subtrahend) {\n    return new DifferenceIntervalsSource(minuend, Intervals.extend(subtrahend, positions, positions),\n        DifferenceIntervalFunction.NON_OVERLAPPING);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde","date":1553685823,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#notWithin(IntervalsSource,int,IntervalsSource).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#notWithin(IntervalsSource,int,IntervalsSource).mjava","sourceNew":"  /**\n   * Create a not-within {@link IntervalsSource}\n   *\n   * Returns intervals of the minuend that do not appear within a set number of positions of\n   * intervals from the subtrahend query\n   *\n   * @param minuend     the {@link IntervalsSource} to filter\n   * @param positions   the minimum distance that intervals from the minuend may occur from intervals\n   *                    of the subtrahend\n   * @param subtrahend  the {@link IntervalsSource} to filter by\n   */\n  public static IntervalsSource notWithin(IntervalsSource minuend, int positions, IntervalsSource subtrahend) {\n    return new NonOverlappingIntervalsSource(minuend, Intervals.extend(subtrahend, positions, positions));\n  }\n\n","sourceOld":"  /**\n   * Create a not-within {@link IntervalsSource}\n   *\n   * Returns intervals of the minuend that do not appear within a set number of positions of\n   * intervals from the subtrahend query\n   *\n   * @param minuend     the {@link IntervalsSource} to filter\n   * @param positions   the minimum distance that intervals from the minuend may occur from intervals\n   *                    of the subtrahend\n   * @param subtrahend  the {@link IntervalsSource} to filter by\n   */\n  public static IntervalsSource notWithin(IntervalsSource minuend, int positions, IntervalsSource subtrahend) {\n    return new DifferenceIntervalsSource(minuend, Intervals.extend(subtrahend, positions, positions),\n        DifferenceIntervalFunction.NON_OVERLAPPING);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97ee2282ff806e9bc9d705f389cf40451ab81c3e","date":1561721333,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/intervals/Intervals#notWithin(IntervalsSource,int,IntervalsSource).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/Intervals#notWithin(IntervalsSource,int,IntervalsSource).mjava","sourceNew":"  /**\n   * Create a not-within {@link IntervalsSource}\n   *\n   * Returns intervals of the minuend that do not appear within a set number of positions of\n   * intervals from the subtrahend query\n   *\n   * @param minuend     the {@link IntervalsSource} to filter\n   * @param positions   the minimum distance that intervals from the minuend may occur from intervals\n   *                    of the subtrahend\n   * @param subtrahend  the {@link IntervalsSource} to filter by\n   */\n  public static IntervalsSource notWithin(IntervalsSource minuend, int positions, IntervalsSource subtrahend) {\n    return new NonOverlappingIntervalsSource(minuend, Intervals.extend(subtrahend, positions, positions));\n  }\n\n","sourceOld":"  /**\n   * Create a not-within {@link IntervalsSource}\n   *\n   * Returns intervals of the minuend that do not appear within a set number of positions of\n   * intervals from the subtrahend query\n   *\n   * @param minuend     the {@link IntervalsSource} to filter\n   * @param positions   the minimum distance that intervals from the minuend may occur from intervals\n   *                    of the subtrahend\n   * @param subtrahend  the {@link IntervalsSource} to filter by\n   */\n  public static IntervalsSource notWithin(IntervalsSource minuend, int positions, IntervalsSource subtrahend) {\n    return new NonOverlappingIntervalsSource(minuend, Intervals.extend(subtrahend, positions, positions));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde"],"4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde":["798f4c48c9561bff1dcf2652d51afc7dd0ceae3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"798f4c48c9561bff1dcf2652d51afc7dd0ceae3e":["f272fe1542bca669076ff8ed44b298b316ab4aa5"],"f272fe1542bca669076ff8ed44b298b316ab4aa5":["361b1afc99f68598c73d37074aec089c9c951586"],"361b1afc99f68598c73d37074aec089c9c951586":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"]},"commit2Childs":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["361b1afc99f68598c73d37074aec089c9c951586"],"798f4c48c9561bff1dcf2652d51afc7dd0ceae3e":["4d6b91e82c7e49f615a22d1e5db2bca0d2a99dde"],"f272fe1542bca669076ff8ed44b298b316ab4aa5":["798f4c48c9561bff1dcf2652d51afc7dd0ceae3e"],"361b1afc99f68598c73d37074aec089c9c951586":["f272fe1542bca669076ff8ed44b298b316ab4aa5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}