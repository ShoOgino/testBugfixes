{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(TEMP_DIR, \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(TEMP_DIR, \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(TEMP_DIR, \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(TEMP_DIR, \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n\n      // Make sure this does not copy myrandomfile:\n      Directory dir2 = new RAMDirectory(dir);\n      assertTrue(!dir2.fileExists(\"myrandomfile\"));\n\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(TEMP_DIR, \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(TEMP_DIR, \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(TEMP_DIR, \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer())).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(TEMP_DIR, \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(TEMP_DIR, \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer())).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(TEMP_DIR, \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer())).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a13a126d15299d5c1e117ea99ddae6fb0fa3f209","date":1291909583,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer())).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(TEMP_DIR, \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer())).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer())).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(TEMP_DIR, \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer())).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer())).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    File indexDir = new File(TEMP_DIR, \"otherfiles\");\n    Directory dir = FSDirectory.open(indexDir);\n    try {\n      // Create my own random file:\n\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n      _TestUtil.rmDir(indexDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer())).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer())).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer())).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer())).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\", IOContext.DEFAULT);\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6f9be74ca7baaef11857ad002cad40419979516","date":1309449808,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\", newIOContext(random));\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\", IOContext.DEFAULT);\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\", newIOContext(random));\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\", newIOContext(random));\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\");\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testOtherFiles().mjava","sourceNew":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\", newIOContext(random));\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testOtherFiles() throws Throwable {\n    Directory dir = newDirectory();\n    try {\n      // Create my own random file:\n      IndexOutput out = dir.createOutput(\"myrandomfile\", newIOContext(random));\n      out.writeByte((byte) 42);\n      out.close();\n\n      new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random))).close();\n\n      assertTrue(dir.fileExists(\"myrandomfile\"));\n    } finally {\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["1f653cfcf159baeaafe5d01682a911e95bba4012","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b6f9be74ca7baaef11857ad002cad40419979516":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["a3776dccca01c11e7046323cfad46a3b4a471233","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["f2c5f0cb44df114db4228c8f77861714b5cabaea","b6f9be74ca7baaef11857ad002cad40419979516"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"d572389229127c297dd1fa5ce4758e1cec41e799":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["d572389229127c297dd1fa5ce4758e1cec41e799"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["b6f9be74ca7baaef11857ad002cad40419979516"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["135621f3a0670a9394eb563224a3b76cc4dddc0f","639c36565ce03aed5b0fce7c9e4448e53a1f7efd","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"a3776dccca01c11e7046323cfad46a3b4a471233":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b6f9be74ca7baaef11857ad002cad40419979516":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}