{"path":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacets#verifyDim(String).mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacets#verifyDim(String).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/TaxonomyFacets#verifyDim(String).mjava","sourceNew":"  protected FacetsConfig.DimConfig verifyDim(String dim) {\n    FacetsConfig.DimConfig dimConfig = config.getDimConfig(dim);\n    if (!dimConfig.indexFieldName.equals(indexFieldName)) {\n      // nocommit get test case to cover this:\n      throw new IllegalArgumentException(\"dimension \\\"\" + dim + \"\\\" was not indexed into field \\\"\" + indexFieldName);\n    }\n    return dimConfig;\n  }\n\n","sourceOld":"  protected FacetsConfig.DimConfig verifyDim(String dim) {\n    FacetsConfig.DimConfig dimConfig = config.getDimConfig(dim);\n    if (!dimConfig.indexFieldName.equals(indexFieldName)) {\n      // nocommit get test case to cover this:\n      throw new IllegalArgumentException(\"dimension \\\"\" + dim + \"\\\" was not indexed into field \\\"\" + indexFieldName);\n    }\n    return dimConfig;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd83550e4b0bdd36e7d9dca9273264100782440b","date":1385761753,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacets#verifyDim(String).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacets#verifyDim(String).mjava","sourceNew":"  protected FacetsConfig.DimConfig verifyDim(String dim) {\n    FacetsConfig.DimConfig dimConfig = config.getDimConfig(dim);\n    if (!dimConfig.indexFieldName.equals(indexFieldName)) {\n      throw new IllegalArgumentException(\"dimension \\\"\" + dim + \"\\\" was not indexed into field \\\"\" + indexFieldName);\n    }\n    return dimConfig;\n  }\n\n","sourceOld":"  protected FacetsConfig.DimConfig verifyDim(String dim) {\n    FacetsConfig.DimConfig dimConfig = config.getDimConfig(dim);\n    if (!dimConfig.indexFieldName.equals(indexFieldName)) {\n      // nocommit get test case to cover this:\n      throw new IllegalArgumentException(\"dimension \\\"\" + dim + \"\\\" was not indexed into field \\\"\" + indexFieldName);\n    }\n    return dimConfig;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyFacets#verifyDim(String).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacets#verifyDim(String).mjava","sourceNew":"  protected FacetsConfig.DimConfig verifyDim(String dim) {\n    FacetsConfig.DimConfig dimConfig = config.getDimConfig(dim);\n    if (!dimConfig.indexFieldName.equals(indexFieldName)) {\n      throw new IllegalArgumentException(\"dimension \\\"\" + dim + \"\\\" was not indexed into field \\\"\" + indexFieldName);\n    }\n    return dimConfig;\n  }\n\n","sourceOld":"  protected FacetsConfig.DimConfig verifyDim(String dim) {\n    FacetsConfig.DimConfig dimConfig = config.getDimConfig(dim);\n    if (!dimConfig.indexFieldName.equals(indexFieldName)) {\n      throw new IllegalArgumentException(\"dimension \\\"\" + dim + \"\\\" was not indexed into field \\\"\" + indexFieldName);\n    }\n    return dimConfig;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4edc984f0f4ac77c37e48ace2932f780f888453c":[],"21d36d0db865f7b84026b447bec653469a6e66df":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["4edc984f0f4ac77c37e48ace2932f780f888453c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4edc984f0f4ac77c37e48ace2932f780f888453c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}