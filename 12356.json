{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/FloatFacetResultsHandler#addSiblings(int,int[],ArrayList[FacetResultNode]).mjava","commits":[{"id":"571abba77e55fea386a38c0024f72ffa5b37a9ad","date":1360272747,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FloatFacetResultsHandler#addSiblings(int,int[],ArrayList[FacetResultNode]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected final void addSiblings(int ordinal, int[] siblings, ArrayList<FacetResultNode> nodes) throws IOException {\n    while (ordinal != TaxonomyReader.INVALID_ORDINAL) {\n      float value = values[ordinal];\n      if (value > 0) {\n        FacetResultNode node = new FacetResultNode();\n        node.label = taxonomyReader.getPath(ordinal);\n        node.value = value;\n        nodes.add(node);\n      }\n      ordinal = siblings[ordinal];\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["62320c82ded4563b45ef7583d7f51e0f7f7e7625"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"62320c82ded4563b45ef7583d7f51e0f7f7e7625","date":1365337102,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/FloatFacetResultsHandler#addSiblings(int,int[],ArrayList[FacetResultNode]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FloatFacetResultsHandler#addSiblings(int,int[],ArrayList[FacetResultNode]).mjava","sourceNew":"  @Override\n  protected final void addSiblings(int ordinal, int[] siblings, ArrayList<FacetResultNode> nodes) throws IOException {\n    while (ordinal != TaxonomyReader.INVALID_ORDINAL) {\n      float value = values[ordinal];\n      if (value > 0) {\n        FacetResultNode node = new FacetResultNode(ordinal, value);\n        node.label = taxonomyReader.getPath(ordinal);\n        nodes.add(node);\n      }\n      ordinal = siblings[ordinal];\n    }\n  }\n\n","sourceOld":"  @Override\n  protected final void addSiblings(int ordinal, int[] siblings, ArrayList<FacetResultNode> nodes) throws IOException {\n    while (ordinal != TaxonomyReader.INVALID_ORDINAL) {\n      float value = values[ordinal];\n      if (value > 0) {\n        FacetResultNode node = new FacetResultNode();\n        node.label = taxonomyReader.getPath(ordinal);\n        node.value = value;\n        nodes.add(node);\n      }\n      ordinal = siblings[ordinal];\n    }\n  }\n\n","bugFix":["571abba77e55fea386a38c0024f72ffa5b37a9ad"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b1c67b5eba853532b31132bf5aef70a3b2be63f","date":1375351298,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FloatFacetResultsHandler#addSiblings(int,int[],ArrayList[FacetResultNode]).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected final void addSiblings(int ordinal, int[] siblings, ArrayList<FacetResultNode> nodes) throws IOException {\n    while (ordinal != TaxonomyReader.INVALID_ORDINAL) {\n      float value = values[ordinal];\n      if (value > 0) {\n        FacetResultNode node = new FacetResultNode(ordinal, value);\n        node.label = taxonomyReader.getPath(ordinal);\n        nodes.add(node);\n      }\n      ordinal = siblings[ordinal];\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/FloatFacetResultsHandler#addSiblings(int,int[],ArrayList[FacetResultNode]).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected final void addSiblings(int ordinal, int[] siblings, ArrayList<FacetResultNode> nodes) throws IOException {\n    while (ordinal != TaxonomyReader.INVALID_ORDINAL) {\n      float value = values[ordinal];\n      if (value > 0) {\n        FacetResultNode node = new FacetResultNode(ordinal, value);\n        node.label = taxonomyReader.getPath(ordinal);\n        nodes.add(node);\n      }\n      ordinal = siblings[ordinal];\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3b1c67b5eba853532b31132bf5aef70a3b2be63f":["62320c82ded4563b45ef7583d7f51e0f7f7e7625"],"62320c82ded4563b45ef7583d7f51e0f7f7e7625":["571abba77e55fea386a38c0024f72ffa5b37a9ad"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["62320c82ded4563b45ef7583d7f51e0f7f7e7625"],"571abba77e55fea386a38c0024f72ffa5b37a9ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b1c67b5eba853532b31132bf5aef70a3b2be63f"]},"commit2Childs":{"3b1c67b5eba853532b31132bf5aef70a3b2be63f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"62320c82ded4563b45ef7583d7f51e0f7f7e7625":["3b1c67b5eba853532b31132bf5aef70a3b2be63f","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["571abba77e55fea386a38c0024f72ffa5b37a9ad"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"571abba77e55fea386a38c0024f72ffa5b37a9ad":["62320c82ded4563b45ef7583d7f51e0f7f7e7625"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}