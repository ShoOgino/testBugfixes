{"path":"lucene/facet/src/java/org/apache/lucene/facet/index/FacetFields#addCountingListData(Document,Map[String,BytesRef],String).mjava","commits":[{"id":"6c2cd18c7da6f499a33f06fc89c07a463ec074c0","date":1358329431,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/FacetFields#addCountingListData(Document,Map[String,BytesRef],String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Add the counting list data to the document under the given field. Note that\n   * the field is determined by the {@link CategoryListParams}.\n   */\n  protected void addCountingListData(Document doc, Map<String,BytesRef> categoriesData, String field) {\n    for (Entry<String,BytesRef> entry : categoriesData.entrySet()) {\n      doc.add(new StraightBytesDocValuesField(field + entry.getKey(), entry.getValue()));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/FacetFields#addCountingListData(Document,Map[String,BytesRef],String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Add the counting list data to the document under the given field. Note that\n   * the field is determined by the {@link CategoryListParams}.\n   */\n  protected void addCountingListData(Document doc, Map<String,BytesRef> categoriesData, String field) {\n    for (Entry<String,BytesRef> entry : categoriesData.entrySet()) {\n      doc.add(new StraightBytesDocValuesField(field + entry.getKey(), entry.getValue()));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"423d89a2b3cc419b647c07c2b3fdbc54311d07f9","date":1358836612,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/FacetFields#addCountingListData(Document,Map[String,BytesRef],String).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/FacetFields#addCountingListData(Document,Map[String,BytesRef],String).mjava","sourceNew":"  /**\n   * Add the counting list data to the document under the given field. Note that\n   * the field is determined by the {@link CategoryListParams}.\n   */\n  protected void addCountingListData(Document doc, Map<String,BytesRef> categoriesData, String field) {\n    for (Entry<String,BytesRef> entry : categoriesData.entrySet()) {\n      doc.add(new BinaryDocValuesField(field + entry.getKey(), entry.getValue()));\n    }\n  }\n\n","sourceOld":"  /**\n   * Add the counting list data to the document under the given field. Note that\n   * the field is determined by the {@link CategoryListParams}.\n   */\n  protected void addCountingListData(Document doc, Map<String,BytesRef> categoriesData, String field) {\n    for (Entry<String,BytesRef> entry : categoriesData.entrySet()) {\n      doc.add(new StraightBytesDocValuesField(field + entry.getKey(), entry.getValue()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/FacetFields#addCountingListData(Document,Map[String,BytesRef],String).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/FacetFields#addCountingListData(Document,Map[String,BytesRef],String).mjava","sourceNew":"  /**\n   * Add the counting list data to the document under the given field. Note that\n   * the field is determined by the {@link CategoryListParams}.\n   */\n  protected void addCountingListData(Document doc, Map<String,BytesRef> categoriesData, String field) {\n    for (Entry<String,BytesRef> entry : categoriesData.entrySet()) {\n      doc.add(new BinaryDocValuesField(field + entry.getKey(), entry.getValue()));\n    }\n  }\n\n","sourceOld":"  /**\n   * Add the counting list data to the document under the given field. Note that\n   * the field is determined by the {@link CategoryListParams}.\n   */\n  protected void addCountingListData(Document doc, Map<String,BytesRef> categoriesData, String field) {\n    for (Entry<String,BytesRef> entry : categoriesData.entrySet()) {\n      doc.add(new StraightBytesDocValuesField(field + entry.getKey(), entry.getValue()));\n    }\n  }\n\n","bugFix":["6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/FacetFields#addCountingListData(Document,Map[String,BytesRef],String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Add the counting list data to the document under the given field. Note that\n   * the field is determined by the {@link CategoryListParams}.\n   */\n  protected void addCountingListData(Document doc, Map<String,BytesRef> categoriesData, String field) {\n    for (Entry<String,BytesRef> entry : categoriesData.entrySet()) {\n      doc.add(new BinaryDocValuesField(field + entry.getKey(), entry.getValue()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/FacetFields#addCountingListData(Document,Map[String,BytesRef],String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Add the counting list data to the document under the given field. Note that\n   * the field is determined by the {@link CategoryListParams}.\n   */\n  protected void addCountingListData(Document doc, Map<String,BytesRef> categoriesData, String field) {\n    for (Entry<String,BytesRef> entry : categoriesData.entrySet()) {\n      doc.add(new BinaryDocValuesField(field + entry.getKey(), entry.getValue()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d33e19a97046248623a7591aeaa6547233fd15e2":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["6c2cd18c7da6f499a33f06fc89c07a463ec074c0","423d89a2b3cc419b647c07c2b3fdbc54311d07f9"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["d4d69c535930b5cce125cff868d40f6373dc27d4","d33e19a97046248623a7591aeaa6547233fd15e2"],"423d89a2b3cc419b647c07c2b3fdbc54311d07f9":["c4015cd39dff8d4dec562d909f9766debac53aa6"],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["423d89a2b3cc419b647c07c2b3fdbc54311d07f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c4015cd39dff8d4dec562d909f9766debac53aa6","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"423d89a2b3cc419b647c07c2b3fdbc54311d07f9":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["d4d69c535930b5cce125cff868d40f6373dc27d4","c4015cd39dff8d4dec562d909f9766debac53aa6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}