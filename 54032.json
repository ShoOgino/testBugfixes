{"path":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringValue#setCurrentValue(int).mjava","commits":[{"id":"901b27c7f633ab98e138aafb0b9c3ba22aac6b28","date":1408052893,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringValue#setCurrentValue(int).mjava","pathOld":"/dev/null","sourceNew":"    public void setCurrentValue(int docId) {\n      currentOrd = (int)globalOrds.get(currentVals.getOrd(docId));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87e99c34422d54f9b012110d0d3c0406fba05085","date":1408119816,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringValue#setCurrentValue(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringValue#setCurrentValue(int).mjava","sourceNew":"    public void setCurrentValue(int docId) {\n      int ord = currentVals.getOrd(docId);\n      if(ord < 0) {\n        currentOrd = -1;\n      } else {\n        currentOrd = (int)globalOrds.get(ord);\n      }\n    }\n\n","sourceOld":"    public void setCurrentValue(int docId) {\n      currentOrd = (int)globalOrds.get(currentVals.getOrd(docId));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9cb24ad75c7dcb63057b13b5f814a8bfc25c5359","date":1408802936,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringValue#setCurrentValue(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringValue#setCurrentValue(int).mjava","sourceNew":"    public void setCurrentValue(int docId) {\n      int ord = currentVals.getOrd(docId);\n      if(ord < 0) {\n        currentOrd = -1;\n      } else {\n        if(globalOrds != null) {\n          currentOrd = (int)globalOrds.get(ord);\n        } else {\n          currentOrd = ord;\n        }\n      }\n    }\n\n","sourceOld":"    public void setCurrentValue(int docId) {\n      int ord = currentVals.getOrd(docId);\n      if(ord < 0) {\n        currentOrd = -1;\n      } else {\n        currentOrd = (int)globalOrds.get(ord);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8da9a71da64ce12a97dcfcdd912893aeb1fa2981","date":1437510515,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringValue#setCurrentValue(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringValue#setCurrentValue(int).mjava","sourceNew":"    public void setCurrentValue(int docId) {\n      int ord = currentVals.getOrd(docId);\n\n      if(ord < 0) {\n        currentOrd = -1;\n      } else {\n        if(globalOrds != null) {\n          currentOrd = (int)globalOrds.get(ord);\n        } else {\n          currentOrd = ord;\n        }\n      }\n    }\n\n","sourceOld":"    public void setCurrentValue(int docId) {\n      int ord = currentVals.getOrd(docId);\n      if(ord < 0) {\n        currentOrd = -1;\n      } else {\n        if(globalOrds != null) {\n          currentOrd = (int)globalOrds.get(ord);\n        } else {\n          currentOrd = ord;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringValue#setCurrentValue(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringValue#setCurrentValue(int).mjava","sourceNew":"    public void setCurrentValue(int docId) throws IOException {\n      if (docId > currentVals.docID()) {\n        currentVals.advance(docId);\n      }\n      if (docId == currentVals.docID()) {\n        int ord = currentVals.ordValue();\n        if(globalOrds != null) {\n          currentOrd = (int)globalOrds.get(ord);\n        } else {\n          currentOrd = ord;\n        }\n      } else {\n        currentOrd = -1;\n      }\n    }\n\n","sourceOld":"    public void setCurrentValue(int docId) {\n      int ord = currentVals.getOrd(docId);\n\n      if(ord < 0) {\n        currentOrd = -1;\n      } else {\n        if(globalOrds != null) {\n          currentOrd = (int)globalOrds.get(ord);\n        } else {\n          currentOrd = ord;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringValue#setCurrentValue(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringValue#setCurrentValue(int).mjava","sourceNew":"    public void setCurrentValue(int docId) throws IOException {\n      if (docId > currentVals.docID()) {\n        currentVals.advance(docId);\n      }\n      if (docId == currentVals.docID()) {\n        int ord = currentVals.ordValue();\n        if(globalOrds != null) {\n          currentOrd = (int)globalOrds.get(ord);\n        } else {\n          currentOrd = ord;\n        }\n      } else {\n        currentOrd = -1;\n      }\n    }\n\n","sourceOld":"    public void setCurrentValue(int docId) {\n      int ord = currentVals.getOrd(docId);\n\n      if(ord < 0) {\n        currentOrd = -1;\n      } else {\n        if(globalOrds != null) {\n          currentOrd = (int)globalOrds.get(ord);\n        } else {\n          currentOrd = ord;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringValue#setCurrentValue(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringValue#setCurrentValue(int).mjava","sourceNew":"    public void setCurrentValue(int docId) throws IOException {\n      if (docId > currentVals.docID()) {\n        currentVals.advance(docId);\n      }\n      if (docId == currentVals.docID()) {\n        int ord = currentVals.ordValue();\n        if(globalOrds != null) {\n          currentOrd = (int)globalOrds.get(ord);\n        } else {\n          currentOrd = ord;\n        }\n      } else {\n        currentOrd = -1;\n      }\n    }\n\n","sourceOld":"    public void setCurrentValue(int docId) {\n      int ord = currentVals.getOrd(docId);\n\n      if(ord < 0) {\n        currentOrd = -1;\n      } else {\n        if(globalOrds != null) {\n          currentOrd = (int)globalOrds.get(ord);\n        } else {\n          currentOrd = ord;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50f05d6b69cfaabd51b5d26cba4e3122f51fff83","date":1478603228,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SortingResponseWriter[ExportWriter].StringValue#setCurrentValue(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringValue#setCurrentValue(int).mjava","sourceNew":"    public void setCurrentValue(int docId) throws IOException {\n      if (docId > currentVals.docID()) {\n        currentVals.advance(docId);\n      }\n      if (docId == currentVals.docID()) {\n        int ord = currentVals.ordValue();\n        if(globalOrds != null) {\n          currentOrd = (int)globalOrds.get(ord);\n        } else {\n          currentOrd = ord;\n        }\n      } else {\n        currentOrd = -1;\n      }\n    }\n\n","sourceOld":"    public void setCurrentValue(int docId) throws IOException {\n      if (docId > currentVals.docID()) {\n        currentVals.advance(docId);\n      }\n      if (docId == currentVals.docID()) {\n        int ord = currentVals.ordValue();\n        if(globalOrds != null) {\n          currentOrd = (int)globalOrds.get(ord);\n        } else {\n          currentOrd = ord;\n        }\n      } else {\n        currentOrd = -1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ExportWriter.StringValue#setCurrentValue(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringValue#setCurrentValue(int).mjava","sourceNew":"    public void setCurrentValue(int docId) throws IOException {\n      if (docId > currentVals.docID()) {\n        currentVals.advance(docId);\n      }\n      if (docId == currentVals.docID()) {\n        int ord = currentVals.ordValue();\n        if(globalOrds != null) {\n          currentOrd = (int)globalOrds.get(ord);\n        } else {\n          currentOrd = ord;\n        }\n      } else {\n        currentOrd = -1;\n      }\n    }\n\n","sourceOld":"    public void setCurrentValue(int docId) throws IOException {\n      if (docId > currentVals.docID()) {\n        currentVals.advance(docId);\n      }\n      if (docId == currentVals.docID()) {\n        int ord = currentVals.ordValue();\n        if(globalOrds != null) {\n          currentOrd = (int)globalOrds.get(ord);\n        } else {\n          currentOrd = ord;\n        }\n      } else {\n        currentOrd = -1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"50f05d6b69cfaabd51b5d26cba4e3122f51fff83":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"87e99c34422d54f9b012110d0d3c0406fba05085":["901b27c7f633ab98e138aafb0b9c3ba22aac6b28"],"901b27c7f633ab98e138aafb0b9c3ba22aac6b28":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["8da9a71da64ce12a97dcfcdd912893aeb1fa2981","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["8da9a71da64ce12a97dcfcdd912893aeb1fa2981"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","50f05d6b69cfaabd51b5d26cba4e3122f51fff83"],"8da9a71da64ce12a97dcfcdd912893aeb1fa2981":["9cb24ad75c7dcb63057b13b5f814a8bfc25c5359"],"9cb24ad75c7dcb63057b13b5f814a8bfc25c5359":["87e99c34422d54f9b012110d0d3c0406fba05085"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["8da9a71da64ce12a97dcfcdd912893aeb1fa2981","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["50f05d6b69cfaabd51b5d26cba4e3122f51fff83"]},"commit2Childs":{"50f05d6b69cfaabd51b5d26cba4e3122f51fff83":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"87e99c34422d54f9b012110d0d3c0406fba05085":["9cb24ad75c7dcb63057b13b5f814a8bfc25c5359"],"901b27c7f633ab98e138aafb0b9c3ba22aac6b28":["87e99c34422d54f9b012110d0d3c0406fba05085"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["50f05d6b69cfaabd51b5d26cba4e3122f51fff83","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["901b27c7f633ab98e138aafb0b9c3ba22aac6b28"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"8da9a71da64ce12a97dcfcdd912893aeb1fa2981":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"9cb24ad75c7dcb63057b13b5f814a8bfc25c5359":["8da9a71da64ce12a97dcfcdd912893aeb1fa2981"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["199dfa410f1fdbfd3294106b04096cce5ed34b21"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}