{"path":"solr/solrj/src/java/org/apache/solr/common/LazySolrCluster.SolrCollectionImpl#config().mjava","commits":[{"id":"48499be433b284c562fb2418fe7b858e1ac3b031","date":1597289664,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/LazySolrCluster.SolrCollectionImpl#config().mjava","pathOld":"/dev/null","sourceNew":"        @Override\n        @SuppressWarnings(\"rawtypes\")\n        public String config() {\n            if (confName == null) {\n                // do this lazily . It's usually not necessary\n                try {\n                    byte[] d = zkStateReader.getZkClient().getData(getCollectionPathRoot(coll.getName()), null, null, true);\n                    if (d == null || d.length == 0) return null;\n                    Map m = (Map) Utils.fromJSON(d);\n                    confName = (String) m.get(\"configName\");\n                } catch (KeeperException | InterruptedException e) {\n                    SimpleZkMap.throwZkExp(e);\n                    //cannot read from ZK\n                    return null;\n\n                }\n            }\n            return confName;\n        }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"48499be433b284c562fb2418fe7b858e1ac3b031":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["48499be433b284c562fb2418fe7b858e1ac3b031"]},"commit2Childs":{"48499be433b284c562fb2418fe7b858e1ac3b031":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["48499be433b284c562fb2418fe7b858e1ac3b031"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}