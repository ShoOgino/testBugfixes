{"path":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#testEof(String,Directory,long).mjava","commits":[{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#testEof(String,Directory,long).mjava","pathOld":"/dev/null","sourceNew":"  private void testEof(String name, Directory directory, long length) throws IOException {\n    IndexInput input = directory.openInput(name, new IOContext());\n    input.seek(length);\n    try {\n      input.readByte();\n      fail(\"should throw eof\");\n    } catch (IOException e) {\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#testEof(String,Directory,long).mjava","pathOld":"/dev/null","sourceNew":"  private void testEof(String name, Directory directory, long length) throws IOException {\n    IndexInput input = directory.openInput(name, new IOContext());\n    input.seek(length);\n    try {\n      input.readByte();\n      fail(\"should throw eof\");\n    } catch (IOException e) {\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99b97f030e743d8dd4d7685202f71718d7e5af22","date":1548957620,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#testEof(String,Directory,long).mjava","pathOld":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#testEof(String,Directory,long).mjava","sourceNew":"  private void testEof(String name, Directory directory, long length) throws IOException {\n    IndexInput input = directory.openInput(name, new IOContext());\n    input.seek(length);\n    try {\n      input.readByte();\n      fail(\"should throw eof\");\n    } catch (Exception e) {\n    }\n  }\n\n","sourceOld":"  private void testEof(String name, Directory directory, long length) throws IOException {\n    IndexInput input = directory.openInput(name, new IOContext());\n    input.seek(length);\n    try {\n      input.readByte();\n      fail(\"should throw eof\");\n    } catch (IOException e) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34b74c124d68d8e306d6ef09624f3cd053b8a2fd","date":1548981962,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#testEof(String,Directory,long).mjava","pathOld":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#testEof(String,Directory,long).mjava","sourceNew":"  private void testEof(String name, Directory directory, long length) throws IOException {\n    IndexInput input = directory.openInput(name, new IOContext());\n    input.seek(length);\n    try {\n      input.readByte();\n      fail(\"should throw eof\");\n    } catch (IOException e) {\n    }\n  }\n\n","sourceOld":"  private void testEof(String name, Directory directory, long length) throws IOException {\n    IndexInput input = directory.openInput(name, new IOContext());\n    input.seek(length);\n    try {\n      input.readByte();\n      fail(\"should throw eof\");\n    } catch (Exception e) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44ca189138a5b6e1989d12ab992fab60e235ddc7","date":1549051496,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#testEof(String,Directory,long).mjava","pathOld":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#testEof(String,Directory,long).mjava","sourceNew":"  private void testEof(String name, Directory directory, long length) throws IOException {\n    IndexInput input = directory.openInput(name, new IOContext());\n    input.seek(length);\n    try {\n      input.readByte();\n      fail(\"should throw eof\");\n    } catch (Exception e) {\n    }\n  }\n\n","sourceOld":"  private void testEof(String name, Directory directory, long length) throws IOException {\n    IndexInput input = directory.openInput(name, new IOContext());\n    input.seek(length);\n    try {\n      input.readByte();\n      fail(\"should throw eof\");\n    } catch (IOException e) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#testEof(String,Directory,long).mjava","pathOld":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#testEof(String,Directory,long).mjava","sourceNew":"  private void testEof(String name, Directory directory, long length) throws IOException {\n    IndexInput input = directory.openInput(name, new IOContext());\n    input.seek(length);\n    expectThrows(Exception.class, input::readByte);\n  }\n\n","sourceOld":"  private void testEof(String name, Directory directory, long length) throws IOException {\n    IndexInput input = directory.openInput(name, new IOContext());\n    input.seek(length);\n    try {\n      input.readByte();\n      fail(\"should throw eof\");\n    } catch (Exception e) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#testEof(String,Directory,long).mjava","pathOld":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#testEof(String,Directory,long).mjava","sourceNew":"  private void testEof(String name, Directory directory, long length) throws IOException {\n    IndexInput input = directory.openInput(name, new IOContext());\n    input.seek(length);\n    expectThrows(Exception.class, input::readByte);\n  }\n\n","sourceOld":"  private void testEof(String name, Directory directory, long length) throws IOException {\n    IndexInput input = directory.openInput(name, new IOContext());\n    input.seek(length);\n    try {\n      input.readByte();\n      fail(\"should throw eof\");\n    } catch (Exception e) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan HÃ¸ydahl","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#testEof(String,Directory,long).mjava","pathOld":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#testEof(String,Directory,long).mjava","sourceNew":"  private void testEof(String name, Directory directory, long length) throws IOException {\n    IndexInput input = directory.openInput(name, new IOContext());\n    input.seek(length);\n    expectThrows(Exception.class, input::readByte);\n  }\n\n","sourceOld":"  private void testEof(String name, Directory directory, long length) throws IOException {\n    IndexInput input = directory.openInput(name, new IOContext());\n    input.seek(length);\n    try {\n      input.readByte();\n      fail(\"should throw eof\");\n    } catch (Exception e) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"34b74c124d68d8e306d6ef09624f3cd053b8a2fd":["99b97f030e743d8dd4d7685202f71718d7e5af22"],"99b97f030e743d8dd4d7685202f71718d7e5af22":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"44ca189138a5b6e1989d12ab992fab60e235ddc7":["34b74c124d68d8e306d6ef09624f3cd053b8a2fd"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["44ca189138a5b6e1989d12ab992fab60e235ddc7"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["44ca189138a5b6e1989d12ab992fab60e235ddc7","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["44ca189138a5b6e1989d12ab992fab60e235ddc7","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1a307447328c95a00248512b40d7a5ff12ecd6a"]},"commit2Childs":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["99b97f030e743d8dd4d7685202f71718d7e5af22","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"34b74c124d68d8e306d6ef09624f3cd053b8a2fd":["44ca189138a5b6e1989d12ab992fab60e235ddc7"],"99b97f030e743d8dd4d7685202f71718d7e5af22":["34b74c124d68d8e306d6ef09624f3cd053b8a2fd"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["849494cf2f3a96af5c8c84995108ddd8456fcd04","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"44ca189138a5b6e1989d12ab992fab60e235ddc7":["d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}