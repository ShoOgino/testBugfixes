{"path":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingScoreCollector#CollapsingScoreCollector(int,int,SortedDocValues,int,IntOpenHashSet).mjava","commits":[{"id":"c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d","date":1382570352,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingScoreCollector#CollapsingScoreCollector(int,int,SortedDocValues,int,IntOpenHashSet).mjava","pathOld":"/dev/null","sourceNew":"    public CollapsingScoreCollector(int maxDoc,\n                                    int segments,\n                                    SortedDocValues values,\n                                    int nullPolicy,\n                                    IntOpenHashSet boostDocs) {\n      this.maxDoc = maxDoc;\n      this.contexts = new AtomicReaderContext[segments];\n      this.collapsedSet = new OpenBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        //Set the elevated docs now.\n        Iterator<IntCursor> it = this.boostDocs.iterator();\n        while(it.hasNext()) {\n          IntCursor cursor = it.next();\n          this.collapsedSet.fastSet(cursor.value);\n        }\n      }\n      this.values = values;\n      int valueCount = values.getValueCount();\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1","date":1392536197,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingScoreCollector#CollapsingScoreCollector(int,int,SortedDocValues,int,IntOpenHashSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingScoreCollector#CollapsingScoreCollector(int,int,SortedDocValues,int,IntOpenHashSet).mjava","sourceNew":"    public CollapsingScoreCollector(int maxDoc,\n                                    int segments,\n                                    SortedDocValues values,\n                                    int nullPolicy,\n                                    IntOpenHashSet boostDocs) {\n      this.maxDoc = maxDoc;\n      this.contexts = new AtomicReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        //Set the elevated docs now.\n        Iterator<IntCursor> it = this.boostDocs.iterator();\n        while(it.hasNext()) {\n          IntCursor cursor = it.next();\n          this.collapsedSet.set(cursor.value);\n        }\n      }\n      this.values = values;\n      int valueCount = values.getValueCount();\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n    }\n\n","sourceOld":"    public CollapsingScoreCollector(int maxDoc,\n                                    int segments,\n                                    SortedDocValues values,\n                                    int nullPolicy,\n                                    IntOpenHashSet boostDocs) {\n      this.maxDoc = maxDoc;\n      this.contexts = new AtomicReaderContext[segments];\n      this.collapsedSet = new OpenBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        //Set the elevated docs now.\n        Iterator<IntCursor> it = this.boostDocs.iterator();\n        while(it.hasNext()) {\n          IntCursor cursor = it.next();\n          this.collapsedSet.fastSet(cursor.value);\n        }\n      }\n      this.values = values;\n      int valueCount = values.getValueCount();\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a72d053a3654ff5cb7da6c761dfbfbea4258aa5","date":1396311813,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingScoreCollector#CollapsingScoreCollector(int,int,SortedDocValues,int,IntOpenHashSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingScoreCollector#CollapsingScoreCollector(int,int,SortedDocValues,int,IntOpenHashSet).mjava","sourceNew":"    public CollapsingScoreCollector(int maxDoc,\n                                    int segments,\n                                    SortedDocValues values,\n                                    int nullPolicy,\n                                    IntOpenHashSet boostDocs) {\n      this.maxDoc = maxDoc;\n      this.contexts = new AtomicReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        //Set the elevated docs now.\n        IntOpenHashSet boostG = new IntOpenHashSet();\n        Iterator<IntCursor> it = this.boostDocs.iterator();\n        while(it.hasNext()) {\n          IntCursor cursor = it.next();\n          int i = cursor.value;\n          this.collapsedSet.set(i);\n          int ord = values.getOrd(i);\n          if(ord > -1) {\n            boostG.add(ord);\n          }\n        }\n        boostOrds = boostG.toArray();\n        Arrays.sort(boostOrds);\n      }\n      this.values = values;\n      int valueCount = values.getValueCount();\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n    }\n\n","sourceOld":"    public CollapsingScoreCollector(int maxDoc,\n                                    int segments,\n                                    SortedDocValues values,\n                                    int nullPolicy,\n                                    IntOpenHashSet boostDocs) {\n      this.maxDoc = maxDoc;\n      this.contexts = new AtomicReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        //Set the elevated docs now.\n        Iterator<IntCursor> it = this.boostDocs.iterator();\n        while(it.hasNext()) {\n          IntCursor cursor = it.next();\n          this.collapsedSet.set(cursor.value);\n        }\n      }\n      this.values = values;\n      int valueCount = values.getValueCount();\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingScoreCollector#CollapsingScoreCollector(int,int,SortedDocValues,int,IntOpenHashSet).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingScoreCollector#CollapsingScoreCollector(int,int,SortedDocValues,int,IntOpenHashSet).mjava","sourceNew":"    public CollapsingScoreCollector(int maxDoc,\n                                    int segments,\n                                    SortedDocValues values,\n                                    int nullPolicy,\n                                    IntOpenHashSet boostDocs) {\n      this.maxDoc = maxDoc;\n      this.contexts = new AtomicReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        //Set the elevated docs now.\n        IntOpenHashSet boostG = new IntOpenHashSet();\n        Iterator<IntCursor> it = this.boostDocs.iterator();\n        while(it.hasNext()) {\n          IntCursor cursor = it.next();\n          int i = cursor.value;\n          this.collapsedSet.set(i);\n          int ord = values.getOrd(i);\n          if(ord > -1) {\n            boostG.add(ord);\n          }\n        }\n        boostOrds = boostG.toArray();\n        Arrays.sort(boostOrds);\n      }\n      this.values = values;\n      int valueCount = values.getValueCount();\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n    }\n\n","sourceOld":"    public CollapsingScoreCollector(int maxDoc,\n                                    int segments,\n                                    SortedDocValues values,\n                                    int nullPolicy,\n                                    IntOpenHashSet boostDocs) {\n      this.maxDoc = maxDoc;\n      this.contexts = new AtomicReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        //Set the elevated docs now.\n        Iterator<IntCursor> it = this.boostDocs.iterator();\n        while(it.hasNext()) {\n          IntCursor cursor = it.next();\n          this.collapsedSet.set(cursor.value);\n        }\n      }\n      this.values = values;\n      int valueCount = values.getValueCount();\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7","date":1401992910,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingScoreCollector#CollapsingScoreCollector(int,int,SortedDocValues,int,IntIntOpenHashMap).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.CollapsingScoreCollector#CollapsingScoreCollector(int,int,SortedDocValues,int,IntOpenHashSet).mjava","sourceNew":"    public CollapsingScoreCollector(int maxDoc,\n                                    int segments,\n                                    SortedDocValues values,\n                                    int nullPolicy,\n                                    IntIntOpenHashMap boostDocs) {\n      this.maxDoc = maxDoc;\n      this.contexts = new AtomicReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        //Set the elevated docs now.\n        IntOpenHashSet boostG = new IntOpenHashSet();\n        Iterator<IntIntCursor> it = this.boostDocs.iterator();\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          int i = cursor.key;\n          this.collapsedSet.set(i);\n          int ord = values.getOrd(i);\n          if(ord > -1) {\n            boostG.add(ord);\n          }\n        }\n        boostOrds = boostG.toArray();\n        Arrays.sort(boostOrds);\n      }\n      this.values = values;\n      int valueCount = values.getValueCount();\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n    }\n\n","sourceOld":"    public CollapsingScoreCollector(int maxDoc,\n                                    int segments,\n                                    SortedDocValues values,\n                                    int nullPolicy,\n                                    IntOpenHashSet boostDocs) {\n      this.maxDoc = maxDoc;\n      this.contexts = new AtomicReaderContext[segments];\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      this.boostDocs = boostDocs;\n      if(this.boostDocs != null) {\n        //Set the elevated docs now.\n        IntOpenHashSet boostG = new IntOpenHashSet();\n        Iterator<IntCursor> it = this.boostDocs.iterator();\n        while(it.hasNext()) {\n          IntCursor cursor = it.next();\n          int i = cursor.value;\n          this.collapsedSet.set(i);\n          int ord = values.getOrd(i);\n          if(ord > -1) {\n            boostG.add(ord);\n          }\n        }\n        boostOrds = boostG.toArray();\n        Arrays.sort(boostOrds);\n      }\n      this.values = values;\n      int valueCount = values.getValueCount();\n      this.ords = new int[valueCount];\n      Arrays.fill(this.ords, -1);\n      this.scores = new float[valueCount];\n      Arrays.fill(this.scores, -Float.MAX_VALUE);\n      this.nullPolicy = nullPolicy;\n      if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        nullScores = new FloatArrayList();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1","0a72d053a3654ff5cb7da6c761dfbfbea4258aa5"],"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1":["c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d"],"0a72d053a3654ff5cb7da6c761dfbfbea4258aa5":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1"],"c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7":["0a72d053a3654ff5cb7da6c761dfbfbea4258aa5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1":["5eb2511ababf862ea11e10761c70ee560cd84510","0a72d053a3654ff5cb7da6c761dfbfbea4258aa5"],"0a72d053a3654ff5cb7da6c761dfbfbea4258aa5":["5eb2511ababf862ea11e10761c70ee560cd84510","a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7"],"c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d"],"a667f95e8b4d25c8e45a6bb9ba8ce9654e7858d7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}