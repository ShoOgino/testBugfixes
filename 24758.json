{"path":"lucene/core/src/test/org/apache/lucene/search/TestFloatRangeFieldQueries#testBasics().mjava","commits":[{"id":"4a52b01a73cacbd2d360240e72d64c0ba353618f","date":1489389749,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFloatRangeFieldQueries#testBasics().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestFloatRangeFieldQueries#testBasics().mjava","sourceNew":"  /** Basic test */\n  public void testBasics() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // intersects (within)\n    Document document = new Document();\n    document.add(new FloatRange(FIELD_NAME, new float[] {-10.0f, -10.0f}, new float[] {9.1f, 10.1f}));\n    writer.addDocument(document);\n\n    // intersects (crosses)\n    document = new Document();\n    document.add(new FloatRange(FIELD_NAME, new float[] {10.0f, -10.0f}, new float[] {20.0f, 10.0f}));\n    writer.addDocument(document);\n\n    // intersects (contains, crosses)\n    document = new Document();\n    document.add(new FloatRange(FIELD_NAME, new float[] {-20.0f, -20.0f}, new float[] {30.0f, 30.1f}));\n    writer.addDocument(document);\n\n    // intersects (crosses)\n    document = new Document();\n    document.add(new FloatRange(FIELD_NAME, new float[] {-11.1f, -11.2f}, new float[] {1.23f, 11.5f}));\n    writer.addDocument(document);\n\n    // intersects (crosses)\n    document = new Document();\n    document.add(new FloatRange(FIELD_NAME, new float[] {12.33f, 1.2f}, new float[] {15.1f, 29.9f}));\n    writer.addDocument(document);\n\n    // disjoint\n    document = new Document();\n    document.add(new FloatRange(FIELD_NAME, new float[] {-122.33f, 1.2f}, new float[] {-115.1f, 29.9f}));\n    writer.addDocument(document);\n\n    // intersects (crosses)\n    document = new Document();\n    document.add(new FloatRange(FIELD_NAME, new float[] {Float.NEGATIVE_INFINITY, 1.2f}, new float[] {-11.0f, 29.9f}));\n    writer.addDocument(document);\n\n    // equal (within, contains, intersects)\n    document = new Document();\n    document.add(new FloatRange(FIELD_NAME, new float[] {-11f, -15f}, new float[] {15f, 20f}));\n    writer.addDocument(document);\n\n    // search\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    assertEquals(7, searcher.count(FloatRange.newIntersectsQuery(FIELD_NAME,\n        new float[] {-11.0f, -15.0f}, new float[] {15.0f, 20.0f})));\n    assertEquals(2, searcher.count(FloatRange.newWithinQuery(FIELD_NAME,\n        new float[] {-11.0f, -15.0f}, new float[] {15.0f, 20.0f})));\n    assertEquals(2, searcher.count(FloatRange.newContainsQuery(FIELD_NAME,\n        new float[] {-11.0f, -15.0f}, new float[] {15.0f, 20.0f})));\n    assertEquals(5, searcher.count(FloatRange.newCrossesQuery(FIELD_NAME,\n        new float[] {-11.0f, -15.0f}, new float[] {15.0f, 20.0f})));\n\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** Basic test */\n  public void testBasics() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // intersects (within)\n    Document document = new Document();\n    document.add(new FloatRangeField(FIELD_NAME, new float[] {-10.0f, -10.0f}, new float[] {9.1f, 10.1f}));\n    writer.addDocument(document);\n\n    // intersects (crosses)\n    document = new Document();\n    document.add(new FloatRangeField(FIELD_NAME, new float[] {10.0f, -10.0f}, new float[] {20.0f, 10.0f}));\n    writer.addDocument(document);\n\n    // intersects (contains, crosses)\n    document = new Document();\n    document.add(new FloatRangeField(FIELD_NAME, new float[] {-20.0f, -20.0f}, new float[] {30.0f, 30.1f}));\n    writer.addDocument(document);\n\n    // intersects (crosses)\n    document = new Document();\n    document.add(new FloatRangeField(FIELD_NAME, new float[] {-11.1f, -11.2f}, new float[] {1.23f, 11.5f}));\n    writer.addDocument(document);\n\n    // intersects (crosses)\n    document = new Document();\n    document.add(new FloatRangeField(FIELD_NAME, new float[] {12.33f, 1.2f}, new float[] {15.1f, 29.9f}));\n    writer.addDocument(document);\n\n    // disjoint\n    document = new Document();\n    document.add(new FloatRangeField(FIELD_NAME, new float[] {-122.33f, 1.2f}, new float[] {-115.1f, 29.9f}));\n    writer.addDocument(document);\n\n    // intersects (crosses)\n    document = new Document();\n    document.add(new FloatRangeField(FIELD_NAME, new float[] {Float.NEGATIVE_INFINITY, 1.2f}, new float[] {-11.0f, 29.9f}));\n    writer.addDocument(document);\n\n    // equal (within, contains, intersects)\n    document = new Document();\n    document.add(new FloatRangeField(FIELD_NAME, new float[] {-11f, -15f}, new float[] {15f, 20f}));\n    writer.addDocument(document);\n\n    // search\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    assertEquals(7, searcher.count(FloatRangeField.newIntersectsQuery(FIELD_NAME,\n        new float[] {-11.0f, -15.0f}, new float[] {15.0f, 20.0f})));\n    assertEquals(2, searcher.count(FloatRangeField.newWithinQuery(FIELD_NAME,\n        new float[] {-11.0f, -15.0f}, new float[] {15.0f, 20.0f})));\n    assertEquals(2, searcher.count(FloatRangeField.newContainsQuery(FIELD_NAME,\n        new float[] {-11.0f, -15.0f}, new float[] {15.0f, 20.0f})));\n    assertEquals(5, searcher.count(FloatRangeField.newCrossesQuery(FIELD_NAME,\n        new float[] {-11.0f, -15.0f}, new float[] {15.0f, 20.0f})));\n\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4a52b01a73cacbd2d360240e72d64c0ba353618f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a52b01a73cacbd2d360240e72d64c0ba353618f"]},"commit2Childs":{"4a52b01a73cacbd2d360240e72d64c0ba353618f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4a52b01a73cacbd2d360240e72d64c0ba353618f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}