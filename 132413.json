{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#createCloudExampleCollection(int,Scanner,boolean,String).mjava","commits":[{"id":"4ca20be81c9284c840498143264e583ccbb8525a","date":1438705932,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#createCloudExampleCollection(int,Scanner,boolean,String).mjava","pathOld":"/dev/null","sourceNew":"    protected String createCloudExampleCollection(int numNodes, Scanner readInput, boolean prompt, String solrUrl) throws Exception {\n      // yay! numNodes SolrCloud nodes running\n      int numShards = 2;\n      int replicationFactor = 2;\n      String cloudConfig = \"data_driven_schema_configs\";\n      String collectionName = \"gettingstarted\";\n\n      File configsetsDir = new File(serverDir, \"solr/configsets\");\n      String collectionListUrl = solrUrl+\"/admin/collections?action=list\";\n\n      if (prompt) {\n        echo(\"\\nNow let's create a new collection for indexing documents in your \"+numNodes+\"-node cluster.\");\n\n        while (true) {\n          collectionName =\n              prompt(readInput, \"Please provide a name for your new collection: [\"+collectionName+\"] \", collectionName);\n\n          // Test for existence and then prompt to either create another or skip the create step\n          if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n            echo(\"\\nCollection '\"+collectionName+\"' already exists!\");\n            int oneOrTwo = promptForInt(readInput,\n                \"Do you want to re-use the existing collection or create a new one? Enter 1 to reuse, 2 to create new [1]: \", \"a 1 or 2\", 1, 1, 2);\n            if (oneOrTwo == 1) {\n              return collectionName;\n            } else {\n              continue;\n            }\n          } else {\n            break; // user selected a collection that doesn't exist ... proceed on\n          }\n        }\n\n        numShards = promptForInt(readInput,\n            \"How many shards would you like to split \" + collectionName + \" into? [2]\", \"a shard count\", 2, 1, 4);\n\n        replicationFactor = promptForInt(readInput,\n            \"How many replicas per shard would you like to create? [2] \", \"a replication factor\", 2, 1, 4);\n\n        echo(\"Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n        cloudConfig =\n            prompt(readInput, \"basic_configs, data_driven_schema_configs, or sample_techproducts_configs [\"+cloudConfig+\"] \", cloudConfig);\n\n        // validate the cloudConfig name\n        while (!isValidConfig(configsetsDir, cloudConfig)) {\n          echo(cloudConfig+\" is not a valid configuration directory! Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n          cloudConfig =\n              prompt(readInput, \"basic_configs, data_driven_schema_configs, or sample_techproducts_configs [\"+cloudConfig+\"] \", cloudConfig);\n        }\n      } else {\n        // must verify if default collection exists\n        if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n          echo(\"\\nCollection '\"+collectionName+\"' already exists! Skipping collection creation step.\");\n          return collectionName;\n        }\n      }\n\n      // invoke the CreateCollectionTool\n      String[] createArgs = new String[] {\n          \"-name\", collectionName,\n          \"-shards\", String.valueOf(numShards),\n          \"-replicationFactor\", String.valueOf(replicationFactor),\n          \"-confname\", collectionName,\n          \"-confdir\", cloudConfig,\n          \"-configsetsDir\", configsetsDir.getAbsolutePath(),\n          \"-solrUrl\", solrUrl\n      };\n\n      CreateCollectionTool createCollectionTool = new CreateCollectionTool(stdout);\n      int createCode =\n          createCollectionTool.runTool(\n              processCommandLineArgs(joinCommonAndToolOptions(createCollectionTool.getOptions()), createArgs));\n\n      if (createCode != 0)\n        throw new Exception(\"Failed to create collection using command: \"+ Arrays.asList(createArgs));\n\n      return collectionName;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ffa50c9a1e4c37633b2d4cc121228bcfc52774e7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"688f23c47b3d5b61d795e3042013aa908716c068","date":1449761553,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#createCloudExampleCollection(int,Scanner,boolean,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#createCloudExampleCollection(int,Scanner,boolean,String).mjava","sourceNew":"    protected String createCloudExampleCollection(int numNodes, Scanner readInput, boolean prompt, String solrUrl) throws Exception {\n      // yay! numNodes SolrCloud nodes running\n      int numShards = 2;\n      int replicationFactor = 2;\n      String cloudConfig = \"data_driven_schema_configs\";\n      String collectionName = \"gettingstarted\";\n\n      File configsetsDir = new File(serverDir, \"solr/configsets\");\n      String collectionListUrl = solrUrl+\"/admin/collections?action=list\";\n\n      if (prompt) {\n        echo(\"\\nNow let's create a new collection for indexing documents in your \"+numNodes+\"-node cluster.\");\n\n        while (true) {\n          collectionName =\n              prompt(readInput, \"Please provide a name for your new collection: [\"+collectionName+\"] \", collectionName);\n\n          // Test for existence and then prompt to either create another or skip the create step\n          if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n            echo(\"\\nCollection '\"+collectionName+\"' already exists!\");\n            int oneOrTwo = promptForInt(readInput,\n                \"Do you want to re-use the existing collection or create a new one? Enter 1 to reuse, 2 to create new [1]: \", \"a 1 or 2\", 1, 1, 2);\n            if (oneOrTwo == 1) {\n              return collectionName;\n            } else {\n              continue;\n            }\n          } else {\n            break; // user selected a collection that doesn't exist ... proceed on\n          }\n        }\n\n        numShards = promptForInt(readInput,\n            \"How many shards would you like to split \" + collectionName + \" into? [2]\", \"a shard count\", 2, 1, 4);\n\n        replicationFactor = promptForInt(readInput,\n            \"How many replicas per shard would you like to create? [2] \", \"a replication factor\", 2, 1, 4);\n\n        echo(\"Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n        cloudConfig =\n            prompt(readInput, \"basic_configs, data_driven_schema_configs, sample_techproducts_configs, or managed_schema_configs [\"+cloudConfig+\"] \", cloudConfig);\n\n        // validate the cloudConfig name\n        while (!isValidConfig(configsetsDir, cloudConfig)) {\n          echo(cloudConfig+\" is not a valid configuration directory! Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n          cloudConfig =\n              prompt(readInput, \"basic_configs, data_driven_schema_configs, sample_techproducts_configs, or managed_schema_configs [\"+cloudConfig+\"] \", cloudConfig);\n        }\n      } else {\n        // must verify if default collection exists\n        if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n          echo(\"\\nCollection '\"+collectionName+\"' already exists! Skipping collection creation step.\");\n          return collectionName;\n        }\n      }\n\n      // invoke the CreateCollectionTool\n      String[] createArgs = new String[] {\n          \"-name\", collectionName,\n          \"-shards\", String.valueOf(numShards),\n          \"-replicationFactor\", String.valueOf(replicationFactor),\n          \"-confname\", collectionName,\n          \"-confdir\", cloudConfig,\n          \"-configsetsDir\", configsetsDir.getAbsolutePath(),\n          \"-solrUrl\", solrUrl\n      };\n\n      CreateCollectionTool createCollectionTool = new CreateCollectionTool(stdout);\n      int createCode =\n          createCollectionTool.runTool(\n              processCommandLineArgs(joinCommonAndToolOptions(createCollectionTool.getOptions()), createArgs));\n\n      if (createCode != 0)\n        throw new Exception(\"Failed to create collection using command: \"+ Arrays.asList(createArgs));\n\n      return collectionName;\n    }\n\n","sourceOld":"    protected String createCloudExampleCollection(int numNodes, Scanner readInput, boolean prompt, String solrUrl) throws Exception {\n      // yay! numNodes SolrCloud nodes running\n      int numShards = 2;\n      int replicationFactor = 2;\n      String cloudConfig = \"data_driven_schema_configs\";\n      String collectionName = \"gettingstarted\";\n\n      File configsetsDir = new File(serverDir, \"solr/configsets\");\n      String collectionListUrl = solrUrl+\"/admin/collections?action=list\";\n\n      if (prompt) {\n        echo(\"\\nNow let's create a new collection for indexing documents in your \"+numNodes+\"-node cluster.\");\n\n        while (true) {\n          collectionName =\n              prompt(readInput, \"Please provide a name for your new collection: [\"+collectionName+\"] \", collectionName);\n\n          // Test for existence and then prompt to either create another or skip the create step\n          if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n            echo(\"\\nCollection '\"+collectionName+\"' already exists!\");\n            int oneOrTwo = promptForInt(readInput,\n                \"Do you want to re-use the existing collection or create a new one? Enter 1 to reuse, 2 to create new [1]: \", \"a 1 or 2\", 1, 1, 2);\n            if (oneOrTwo == 1) {\n              return collectionName;\n            } else {\n              continue;\n            }\n          } else {\n            break; // user selected a collection that doesn't exist ... proceed on\n          }\n        }\n\n        numShards = promptForInt(readInput,\n            \"How many shards would you like to split \" + collectionName + \" into? [2]\", \"a shard count\", 2, 1, 4);\n\n        replicationFactor = promptForInt(readInput,\n            \"How many replicas per shard would you like to create? [2] \", \"a replication factor\", 2, 1, 4);\n\n        echo(\"Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n        cloudConfig =\n            prompt(readInput, \"basic_configs, data_driven_schema_configs, or sample_techproducts_configs [\"+cloudConfig+\"] \", cloudConfig);\n\n        // validate the cloudConfig name\n        while (!isValidConfig(configsetsDir, cloudConfig)) {\n          echo(cloudConfig+\" is not a valid configuration directory! Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n          cloudConfig =\n              prompt(readInput, \"basic_configs, data_driven_schema_configs, or sample_techproducts_configs [\"+cloudConfig+\"] \", cloudConfig);\n        }\n      } else {\n        // must verify if default collection exists\n        if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n          echo(\"\\nCollection '\"+collectionName+\"' already exists! Skipping collection creation step.\");\n          return collectionName;\n        }\n      }\n\n      // invoke the CreateCollectionTool\n      String[] createArgs = new String[] {\n          \"-name\", collectionName,\n          \"-shards\", String.valueOf(numShards),\n          \"-replicationFactor\", String.valueOf(replicationFactor),\n          \"-confname\", collectionName,\n          \"-confdir\", cloudConfig,\n          \"-configsetsDir\", configsetsDir.getAbsolutePath(),\n          \"-solrUrl\", solrUrl\n      };\n\n      CreateCollectionTool createCollectionTool = new CreateCollectionTool(stdout);\n      int createCode =\n          createCollectionTool.runTool(\n              processCommandLineArgs(joinCommonAndToolOptions(createCollectionTool.getOptions()), createArgs));\n\n      if (createCode != 0)\n        throw new Exception(\"Failed to create collection using command: \"+ Arrays.asList(createArgs));\n\n      return collectionName;\n    }\n\n","bugFix":null,"bugIntro":["ffa50c9a1e4c37633b2d4cc121228bcfc52774e7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ffa50c9a1e4c37633b2d4cc121228bcfc52774e7","date":1461000724,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#createCloudExampleCollection(int,Scanner,boolean,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#createCloudExampleCollection(int,Scanner,boolean,String).mjava","sourceNew":"    protected String createCloudExampleCollection(int numNodes, Scanner readInput, boolean prompt, String solrUrl) throws Exception {\n      // yay! numNodes SolrCloud nodes running\n      int numShards = 2;\n      int replicationFactor = 2;\n      String cloudConfig = \"data_driven_schema_configs\";\n      String collectionName = \"gettingstarted\";\n\n      File configsetsDir = new File(serverDir, \"solr/configsets\");\n      String collectionListUrl = solrUrl+\"/admin/collections?action=list\";\n\n      if (prompt) {\n        echo(\"\\nNow let's create a new collection for indexing documents in your \"+numNodes+\"-node cluster.\");\n\n        while (true) {\n          collectionName =\n              prompt(readInput, \"Please provide a name for your new collection: [\"+collectionName+\"] \", collectionName);\n\n          // Test for existence and then prompt to either create another or skip the create step\n          if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n            echo(\"\\nCollection '\"+collectionName+\"' already exists!\");\n            int oneOrTwo = promptForInt(readInput,\n                \"Do you want to re-use the existing collection or create a new one? Enter 1 to reuse, 2 to create new [1]: \", \"a 1 or 2\", 1, 1, 2);\n            if (oneOrTwo == 1) {\n              return collectionName;\n            } else {\n              continue;\n            }\n          } else {\n            break; // user selected a collection that doesn't exist ... proceed on\n          }\n        }\n\n        numShards = promptForInt(readInput,\n            \"How many shards would you like to split \" + collectionName + \" into? [2]\", \"a shard count\", 2, 1, 4);\n\n        replicationFactor = promptForInt(readInput,\n            \"How many replicas per shard would you like to create? [2] \", \"a replication factor\", 2, 1, 4);\n\n        echo(\"Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n        String validConfigs = \"basic_configs, data_driven_schema_configs, or sample_techproducts_configs [\"+cloudConfig+\"] \";\n        cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n\n        // validate the cloudConfig name\n        while (!isValidConfig(configsetsDir, cloudConfig)) {\n          echo(cloudConfig+\" is not a valid configuration directory! Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n          cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n        }\n      } else {\n        // must verify if default collection exists\n        if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n          echo(\"\\nCollection '\"+collectionName+\"' already exists! Skipping collection creation step.\");\n          return collectionName;\n        }\n      }\n\n      // invoke the CreateCollectionTool\n      String[] createArgs = new String[] {\n          \"-name\", collectionName,\n          \"-shards\", String.valueOf(numShards),\n          \"-replicationFactor\", String.valueOf(replicationFactor),\n          \"-confname\", collectionName,\n          \"-confdir\", cloudConfig,\n          \"-configsetsDir\", configsetsDir.getAbsolutePath(),\n          \"-solrUrl\", solrUrl\n      };\n\n      CreateCollectionTool createCollectionTool = new CreateCollectionTool(stdout);\n      int createCode =\n          createCollectionTool.runTool(\n              processCommandLineArgs(joinCommonAndToolOptions(createCollectionTool.getOptions()), createArgs));\n\n      if (createCode != 0)\n        throw new Exception(\"Failed to create collection using command: \"+ Arrays.asList(createArgs));\n\n      return collectionName;\n    }\n\n","sourceOld":"    protected String createCloudExampleCollection(int numNodes, Scanner readInput, boolean prompt, String solrUrl) throws Exception {\n      // yay! numNodes SolrCloud nodes running\n      int numShards = 2;\n      int replicationFactor = 2;\n      String cloudConfig = \"data_driven_schema_configs\";\n      String collectionName = \"gettingstarted\";\n\n      File configsetsDir = new File(serverDir, \"solr/configsets\");\n      String collectionListUrl = solrUrl+\"/admin/collections?action=list\";\n\n      if (prompt) {\n        echo(\"\\nNow let's create a new collection for indexing documents in your \"+numNodes+\"-node cluster.\");\n\n        while (true) {\n          collectionName =\n              prompt(readInput, \"Please provide a name for your new collection: [\"+collectionName+\"] \", collectionName);\n\n          // Test for existence and then prompt to either create another or skip the create step\n          if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n            echo(\"\\nCollection '\"+collectionName+\"' already exists!\");\n            int oneOrTwo = promptForInt(readInput,\n                \"Do you want to re-use the existing collection or create a new one? Enter 1 to reuse, 2 to create new [1]: \", \"a 1 or 2\", 1, 1, 2);\n            if (oneOrTwo == 1) {\n              return collectionName;\n            } else {\n              continue;\n            }\n          } else {\n            break; // user selected a collection that doesn't exist ... proceed on\n          }\n        }\n\n        numShards = promptForInt(readInput,\n            \"How many shards would you like to split \" + collectionName + \" into? [2]\", \"a shard count\", 2, 1, 4);\n\n        replicationFactor = promptForInt(readInput,\n            \"How many replicas per shard would you like to create? [2] \", \"a replication factor\", 2, 1, 4);\n\n        echo(\"Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n        cloudConfig =\n            prompt(readInput, \"basic_configs, data_driven_schema_configs, sample_techproducts_configs, or managed_schema_configs [\"+cloudConfig+\"] \", cloudConfig);\n\n        // validate the cloudConfig name\n        while (!isValidConfig(configsetsDir, cloudConfig)) {\n          echo(cloudConfig+\" is not a valid configuration directory! Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n          cloudConfig =\n              prompt(readInput, \"basic_configs, data_driven_schema_configs, sample_techproducts_configs, or managed_schema_configs [\"+cloudConfig+\"] \", cloudConfig);\n        }\n      } else {\n        // must verify if default collection exists\n        if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n          echo(\"\\nCollection '\"+collectionName+\"' already exists! Skipping collection creation step.\");\n          return collectionName;\n        }\n      }\n\n      // invoke the CreateCollectionTool\n      String[] createArgs = new String[] {\n          \"-name\", collectionName,\n          \"-shards\", String.valueOf(numShards),\n          \"-replicationFactor\", String.valueOf(replicationFactor),\n          \"-confname\", collectionName,\n          \"-confdir\", cloudConfig,\n          \"-configsetsDir\", configsetsDir.getAbsolutePath(),\n          \"-solrUrl\", solrUrl\n      };\n\n      CreateCollectionTool createCollectionTool = new CreateCollectionTool(stdout);\n      int createCode =\n          createCollectionTool.runTool(\n              processCommandLineArgs(joinCommonAndToolOptions(createCollectionTool.getOptions()), createArgs));\n\n      if (createCode != 0)\n        throw new Exception(\"Failed to create collection using command: \"+ Arrays.asList(createArgs));\n\n      return collectionName;\n    }\n\n","bugFix":["4ca20be81c9284c840498143264e583ccbb8525a","688f23c47b3d5b61d795e3042013aa908716c068"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"872677bb42fc2032d224a8a8ad13f9330585fcf6","date":1461002056,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#createCloudExampleCollection(int,Scanner,boolean,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#createCloudExampleCollection(int,Scanner,boolean,String).mjava","sourceNew":"    protected String createCloudExampleCollection(int numNodes, Scanner readInput, boolean prompt, String solrUrl) throws Exception {\n      // yay! numNodes SolrCloud nodes running\n      int numShards = 2;\n      int replicationFactor = 2;\n      String cloudConfig = \"data_driven_schema_configs\";\n      String collectionName = \"gettingstarted\";\n\n      File configsetsDir = new File(serverDir, \"solr/configsets\");\n      String collectionListUrl = solrUrl+\"/admin/collections?action=list\";\n\n      if (prompt) {\n        echo(\"\\nNow let's create a new collection for indexing documents in your \"+numNodes+\"-node cluster.\");\n\n        while (true) {\n          collectionName =\n              prompt(readInput, \"Please provide a name for your new collection: [\"+collectionName+\"] \", collectionName);\n\n          // Test for existence and then prompt to either create another or skip the create step\n          if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n            echo(\"\\nCollection '\"+collectionName+\"' already exists!\");\n            int oneOrTwo = promptForInt(readInput,\n                \"Do you want to re-use the existing collection or create a new one? Enter 1 to reuse, 2 to create new [1]: \", \"a 1 or 2\", 1, 1, 2);\n            if (oneOrTwo == 1) {\n              return collectionName;\n            } else {\n              continue;\n            }\n          } else {\n            break; // user selected a collection that doesn't exist ... proceed on\n          }\n        }\n\n        numShards = promptForInt(readInput,\n            \"How many shards would you like to split \" + collectionName + \" into? [2]\", \"a shard count\", 2, 1, 4);\n\n        replicationFactor = promptForInt(readInput,\n            \"How many replicas per shard would you like to create? [2] \", \"a replication factor\", 2, 1, 4);\n\n        echo(\"Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n        String validConfigs = \"basic_configs, data_driven_schema_configs, or sample_techproducts_configs [\"+cloudConfig+\"] \";\n        cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n\n        // validate the cloudConfig name\n        while (!isValidConfig(configsetsDir, cloudConfig)) {\n          echo(cloudConfig+\" is not a valid configuration directory! Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n          cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n        }\n      } else {\n        // must verify if default collection exists\n        if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n          echo(\"\\nCollection '\"+collectionName+\"' already exists! Skipping collection creation step.\");\n          return collectionName;\n        }\n      }\n\n      // invoke the CreateCollectionTool\n      String[] createArgs = new String[] {\n          \"-name\", collectionName,\n          \"-shards\", String.valueOf(numShards),\n          \"-replicationFactor\", String.valueOf(replicationFactor),\n          \"-confname\", collectionName,\n          \"-confdir\", cloudConfig,\n          \"-configsetsDir\", configsetsDir.getAbsolutePath(),\n          \"-solrUrl\", solrUrl\n      };\n\n      CreateCollectionTool createCollectionTool = new CreateCollectionTool(stdout);\n      int createCode =\n          createCollectionTool.runTool(\n              processCommandLineArgs(joinCommonAndToolOptions(createCollectionTool.getOptions()), createArgs));\n\n      if (createCode != 0)\n        throw new Exception(\"Failed to create collection using command: \"+ Arrays.asList(createArgs));\n\n      return collectionName;\n    }\n\n","sourceOld":"    protected String createCloudExampleCollection(int numNodes, Scanner readInput, boolean prompt, String solrUrl) throws Exception {\n      // yay! numNodes SolrCloud nodes running\n      int numShards = 2;\n      int replicationFactor = 2;\n      String cloudConfig = \"data_driven_schema_configs\";\n      String collectionName = \"gettingstarted\";\n\n      File configsetsDir = new File(serverDir, \"solr/configsets\");\n      String collectionListUrl = solrUrl+\"/admin/collections?action=list\";\n\n      if (prompt) {\n        echo(\"\\nNow let's create a new collection for indexing documents in your \"+numNodes+\"-node cluster.\");\n\n        while (true) {\n          collectionName =\n              prompt(readInput, \"Please provide a name for your new collection: [\"+collectionName+\"] \", collectionName);\n\n          // Test for existence and then prompt to either create another or skip the create step\n          if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n            echo(\"\\nCollection '\"+collectionName+\"' already exists!\");\n            int oneOrTwo = promptForInt(readInput,\n                \"Do you want to re-use the existing collection or create a new one? Enter 1 to reuse, 2 to create new [1]: \", \"a 1 or 2\", 1, 1, 2);\n            if (oneOrTwo == 1) {\n              return collectionName;\n            } else {\n              continue;\n            }\n          } else {\n            break; // user selected a collection that doesn't exist ... proceed on\n          }\n        }\n\n        numShards = promptForInt(readInput,\n            \"How many shards would you like to split \" + collectionName + \" into? [2]\", \"a shard count\", 2, 1, 4);\n\n        replicationFactor = promptForInt(readInput,\n            \"How many replicas per shard would you like to create? [2] \", \"a replication factor\", 2, 1, 4);\n\n        echo(\"Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n        cloudConfig =\n            prompt(readInput, \"basic_configs, data_driven_schema_configs, sample_techproducts_configs, or managed_schema_configs [\"+cloudConfig+\"] \", cloudConfig);\n\n        // validate the cloudConfig name\n        while (!isValidConfig(configsetsDir, cloudConfig)) {\n          echo(cloudConfig+\" is not a valid configuration directory! Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n          cloudConfig =\n              prompt(readInput, \"basic_configs, data_driven_schema_configs, sample_techproducts_configs, or managed_schema_configs [\"+cloudConfig+\"] \", cloudConfig);\n        }\n      } else {\n        // must verify if default collection exists\n        if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n          echo(\"\\nCollection '\"+collectionName+\"' already exists! Skipping collection creation step.\");\n          return collectionName;\n        }\n      }\n\n      // invoke the CreateCollectionTool\n      String[] createArgs = new String[] {\n          \"-name\", collectionName,\n          \"-shards\", String.valueOf(numShards),\n          \"-replicationFactor\", String.valueOf(replicationFactor),\n          \"-confname\", collectionName,\n          \"-confdir\", cloudConfig,\n          \"-configsetsDir\", configsetsDir.getAbsolutePath(),\n          \"-solrUrl\", solrUrl\n      };\n\n      CreateCollectionTool createCollectionTool = new CreateCollectionTool(stdout);\n      int createCode =\n          createCollectionTool.runTool(\n              processCommandLineArgs(joinCommonAndToolOptions(createCollectionTool.getOptions()), createArgs));\n\n      if (createCode != 0)\n        throw new Exception(\"Failed to create collection using command: \"+ Arrays.asList(createArgs));\n\n      return collectionName;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6dac22e2c68188d3e5c96ca60febedc05a96f44f","date":1498433282,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#createCloudExampleCollection(int,Scanner,boolean,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#createCloudExampleCollection(int,Scanner,boolean,String).mjava","sourceNew":"    protected String createCloudExampleCollection(int numNodes, Scanner readInput, boolean prompt, String solrUrl) throws Exception {\n      // yay! numNodes SolrCloud nodes running\n      int numShards = 2;\n      int replicationFactor = 2;\n      String cloudConfig = \"_default\";\n      String collectionName = \"gettingstarted\";\n\n      File configsetsDir = new File(serverDir, \"solr/configsets\");\n      String collectionListUrl = solrUrl+\"/admin/collections?action=list\";\n\n      if (prompt) {\n        echo(\"\\nNow let's create a new collection for indexing documents in your \"+numNodes+\"-node cluster.\");\n\n        while (true) {\n          collectionName =\n              prompt(readInput, \"Please provide a name for your new collection: [\"+collectionName+\"] \", collectionName);\n\n          // Test for existence and then prompt to either create another or skip the create step\n          if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n            echo(\"\\nCollection '\"+collectionName+\"' already exists!\");\n            int oneOrTwo = promptForInt(readInput,\n                \"Do you want to re-use the existing collection or create a new one? Enter 1 to reuse, 2 to create new [1]: \", \"a 1 or 2\", 1, 1, 2);\n            if (oneOrTwo == 1) {\n              return collectionName;\n            } else {\n              continue;\n            }\n          } else {\n            break; // user selected a collection that doesn't exist ... proceed on\n          }\n        }\n\n        numShards = promptForInt(readInput,\n            \"How many shards would you like to split \" + collectionName + \" into? [2]\", \"a shard count\", 2, 1, 4);\n\n        replicationFactor = promptForInt(readInput,\n            \"How many replicas per shard would you like to create? [2] \", \"a replication factor\", 2, 1, 4);\n\n        echo(\"Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n        String validConfigs = \"_default or sample_techproducts_configs [\"+cloudConfig+\"] \";\n        cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n\n        // validate the cloudConfig name\n        while (!isValidConfig(configsetsDir, cloudConfig)) {\n          echo(cloudConfig+\" is not a valid configuration directory! Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n          cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n        }\n      } else {\n        // must verify if default collection exists\n        if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n          echo(\"\\nCollection '\"+collectionName+\"' already exists! Skipping collection creation step.\");\n          return collectionName;\n        }\n      }\n\n      // invoke the CreateCollectionTool\n      String[] createArgs = new String[] {\n          \"-name\", collectionName,\n          \"-shards\", String.valueOf(numShards),\n          \"-replicationFactor\", String.valueOf(replicationFactor),\n          \"-confname\", collectionName,\n          \"-confdir\", cloudConfig,\n          \"-configsetsDir\", configsetsDir.getAbsolutePath(),\n          \"-solrUrl\", solrUrl\n      };\n\n      CreateCollectionTool createCollectionTool = new CreateCollectionTool(stdout);\n      int createCode =\n          createCollectionTool.runTool(\n              processCommandLineArgs(joinCommonAndToolOptions(createCollectionTool.getOptions()), createArgs));\n\n      if (createCode != 0)\n        throw new Exception(\"Failed to create collection using command: \"+ Arrays.asList(createArgs));\n\n      return collectionName;\n    }\n\n","sourceOld":"    protected String createCloudExampleCollection(int numNodes, Scanner readInput, boolean prompt, String solrUrl) throws Exception {\n      // yay! numNodes SolrCloud nodes running\n      int numShards = 2;\n      int replicationFactor = 2;\n      String cloudConfig = \"data_driven_schema_configs\";\n      String collectionName = \"gettingstarted\";\n\n      File configsetsDir = new File(serverDir, \"solr/configsets\");\n      String collectionListUrl = solrUrl+\"/admin/collections?action=list\";\n\n      if (prompt) {\n        echo(\"\\nNow let's create a new collection for indexing documents in your \"+numNodes+\"-node cluster.\");\n\n        while (true) {\n          collectionName =\n              prompt(readInput, \"Please provide a name for your new collection: [\"+collectionName+\"] \", collectionName);\n\n          // Test for existence and then prompt to either create another or skip the create step\n          if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n            echo(\"\\nCollection '\"+collectionName+\"' already exists!\");\n            int oneOrTwo = promptForInt(readInput,\n                \"Do you want to re-use the existing collection or create a new one? Enter 1 to reuse, 2 to create new [1]: \", \"a 1 or 2\", 1, 1, 2);\n            if (oneOrTwo == 1) {\n              return collectionName;\n            } else {\n              continue;\n            }\n          } else {\n            break; // user selected a collection that doesn't exist ... proceed on\n          }\n        }\n\n        numShards = promptForInt(readInput,\n            \"How many shards would you like to split \" + collectionName + \" into? [2]\", \"a shard count\", 2, 1, 4);\n\n        replicationFactor = promptForInt(readInput,\n            \"How many replicas per shard would you like to create? [2] \", \"a replication factor\", 2, 1, 4);\n\n        echo(\"Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n        String validConfigs = \"basic_configs, data_driven_schema_configs, or sample_techproducts_configs [\"+cloudConfig+\"] \";\n        cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n\n        // validate the cloudConfig name\n        while (!isValidConfig(configsetsDir, cloudConfig)) {\n          echo(cloudConfig+\" is not a valid configuration directory! Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n          cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n        }\n      } else {\n        // must verify if default collection exists\n        if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n          echo(\"\\nCollection '\"+collectionName+\"' already exists! Skipping collection creation step.\");\n          return collectionName;\n        }\n      }\n\n      // invoke the CreateCollectionTool\n      String[] createArgs = new String[] {\n          \"-name\", collectionName,\n          \"-shards\", String.valueOf(numShards),\n          \"-replicationFactor\", String.valueOf(replicationFactor),\n          \"-confname\", collectionName,\n          \"-confdir\", cloudConfig,\n          \"-configsetsDir\", configsetsDir.getAbsolutePath(),\n          \"-solrUrl\", solrUrl\n      };\n\n      CreateCollectionTool createCollectionTool = new CreateCollectionTool(stdout);\n      int createCode =\n          createCollectionTool.runTool(\n              processCommandLineArgs(joinCommonAndToolOptions(createCollectionTool.getOptions()), createArgs));\n\n      if (createCode != 0)\n        throw new Exception(\"Failed to create collection using command: \"+ Arrays.asList(createArgs));\n\n      return collectionName;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4","date":1498540685,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#createCloudExampleCollection(int,Scanner,boolean,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#createCloudExampleCollection(int,Scanner,boolean,String).mjava","sourceNew":"    protected String createCloudExampleCollection(int numNodes, Scanner readInput, boolean prompt, String solrUrl) throws Exception {\n      // yay! numNodes SolrCloud nodes running\n      int numShards = 2;\n      int replicationFactor = 2;\n      String cloudConfig = \"_default\";\n      String collectionName = \"gettingstarted\";\n\n      File configsetsDir = new File(serverDir, \"solr/configsets\");\n      String collectionListUrl = solrUrl+\"/admin/collections?action=list\";\n\n      if (prompt) {\n        echo(\"\\nNow let's create a new collection for indexing documents in your \"+numNodes+\"-node cluster.\");\n\n        while (true) {\n          collectionName =\n              prompt(readInput, \"Please provide a name for your new collection: [\"+collectionName+\"] \", collectionName);\n\n          // Test for existence and then prompt to either create another or skip the create step\n          if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n            echo(\"\\nCollection '\"+collectionName+\"' already exists!\");\n            int oneOrTwo = promptForInt(readInput,\n                \"Do you want to re-use the existing collection or create a new one? Enter 1 to reuse, 2 to create new [1]: \", \"a 1 or 2\", 1, 1, 2);\n            if (oneOrTwo == 1) {\n              return collectionName;\n            } else {\n              continue;\n            }\n          } else {\n            break; // user selected a collection that doesn't exist ... proceed on\n          }\n        }\n\n        numShards = promptForInt(readInput,\n            \"How many shards would you like to split \" + collectionName + \" into? [2]\", \"a shard count\", 2, 1, 4);\n\n        replicationFactor = promptForInt(readInput,\n            \"How many replicas per shard would you like to create? [2] \", \"a replication factor\", 2, 1, 4);\n\n        echo(\"Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n        String validConfigs = \"_default or sample_techproducts_configs [\"+cloudConfig+\"] \";\n        cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n\n        // validate the cloudConfig name\n        while (!isValidConfig(configsetsDir, cloudConfig)) {\n          echo(cloudConfig+\" is not a valid configuration directory! Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n          cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n        }\n      } else {\n        // must verify if default collection exists\n        if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n          echo(\"\\nCollection '\"+collectionName+\"' already exists! Skipping collection creation step.\");\n          return collectionName;\n        }\n      }\n\n      // invoke the CreateCollectionTool\n      String[] createArgs = new String[] {\n          \"-name\", collectionName,\n          \"-shards\", String.valueOf(numShards),\n          \"-replicationFactor\", String.valueOf(replicationFactor),\n          \"-confname\", collectionName,\n          \"-confdir\", cloudConfig,\n          \"-configsetsDir\", configsetsDir.getAbsolutePath(),\n          \"-solrUrl\", solrUrl\n      };\n\n      CreateCollectionTool createCollectionTool = new CreateCollectionTool(stdout);\n      int createCode =\n          createCollectionTool.runTool(\n              processCommandLineArgs(joinCommonAndToolOptions(createCollectionTool.getOptions()), createArgs));\n\n      if (createCode != 0)\n        throw new Exception(\"Failed to create collection using command: \"+ Arrays.asList(createArgs));\n\n      return collectionName;\n    }\n\n","sourceOld":"    protected String createCloudExampleCollection(int numNodes, Scanner readInput, boolean prompt, String solrUrl) throws Exception {\n      // yay! numNodes SolrCloud nodes running\n      int numShards = 2;\n      int replicationFactor = 2;\n      String cloudConfig = \"data_driven_schema_configs\";\n      String collectionName = \"gettingstarted\";\n\n      File configsetsDir = new File(serverDir, \"solr/configsets\");\n      String collectionListUrl = solrUrl+\"/admin/collections?action=list\";\n\n      if (prompt) {\n        echo(\"\\nNow let's create a new collection for indexing documents in your \"+numNodes+\"-node cluster.\");\n\n        while (true) {\n          collectionName =\n              prompt(readInput, \"Please provide a name for your new collection: [\"+collectionName+\"] \", collectionName);\n\n          // Test for existence and then prompt to either create another or skip the create step\n          if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n            echo(\"\\nCollection '\"+collectionName+\"' already exists!\");\n            int oneOrTwo = promptForInt(readInput,\n                \"Do you want to re-use the existing collection or create a new one? Enter 1 to reuse, 2 to create new [1]: \", \"a 1 or 2\", 1, 1, 2);\n            if (oneOrTwo == 1) {\n              return collectionName;\n            } else {\n              continue;\n            }\n          } else {\n            break; // user selected a collection that doesn't exist ... proceed on\n          }\n        }\n\n        numShards = promptForInt(readInput,\n            \"How many shards would you like to split \" + collectionName + \" into? [2]\", \"a shard count\", 2, 1, 4);\n\n        replicationFactor = promptForInt(readInput,\n            \"How many replicas per shard would you like to create? [2] \", \"a replication factor\", 2, 1, 4);\n\n        echo(\"Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n        String validConfigs = \"basic_configs, data_driven_schema_configs, or sample_techproducts_configs [\"+cloudConfig+\"] \";\n        cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n\n        // validate the cloudConfig name\n        while (!isValidConfig(configsetsDir, cloudConfig)) {\n          echo(cloudConfig+\" is not a valid configuration directory! Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n          cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n        }\n      } else {\n        // must verify if default collection exists\n        if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n          echo(\"\\nCollection '\"+collectionName+\"' already exists! Skipping collection creation step.\");\n          return collectionName;\n        }\n      }\n\n      // invoke the CreateCollectionTool\n      String[] createArgs = new String[] {\n          \"-name\", collectionName,\n          \"-shards\", String.valueOf(numShards),\n          \"-replicationFactor\", String.valueOf(replicationFactor),\n          \"-confname\", collectionName,\n          \"-confdir\", cloudConfig,\n          \"-configsetsDir\", configsetsDir.getAbsolutePath(),\n          \"-solrUrl\", solrUrl\n      };\n\n      CreateCollectionTool createCollectionTool = new CreateCollectionTool(stdout);\n      int createCode =\n          createCollectionTool.runTool(\n              processCommandLineArgs(joinCommonAndToolOptions(createCollectionTool.getOptions()), createArgs));\n\n      if (createCode != 0)\n        throw new Exception(\"Failed to create collection using command: \"+ Arrays.asList(createArgs));\n\n      return collectionName;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#createCloudExampleCollection(int,Scanner,boolean,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#createCloudExampleCollection(int,Scanner,boolean,String).mjava","sourceNew":"    protected String createCloudExampleCollection(int numNodes, Scanner readInput, boolean prompt, String solrUrl) throws Exception {\n      // yay! numNodes SolrCloud nodes running\n      int numShards = 2;\n      int replicationFactor = 2;\n      String cloudConfig = \"_default\";\n      String collectionName = \"gettingstarted\";\n\n      File configsetsDir = new File(serverDir, \"solr/configsets\");\n      String collectionListUrl = solrUrl+\"/admin/collections?action=list\";\n\n      if (prompt) {\n        echo(\"\\nNow let's create a new collection for indexing documents in your \"+numNodes+\"-node cluster.\");\n\n        while (true) {\n          collectionName =\n              prompt(readInput, \"Please provide a name for your new collection: [\"+collectionName+\"] \", collectionName);\n\n          // Test for existence and then prompt to either create another or skip the create step\n          if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n            echo(\"\\nCollection '\"+collectionName+\"' already exists!\");\n            int oneOrTwo = promptForInt(readInput,\n                \"Do you want to re-use the existing collection or create a new one? Enter 1 to reuse, 2 to create new [1]: \", \"a 1 or 2\", 1, 1, 2);\n            if (oneOrTwo == 1) {\n              return collectionName;\n            } else {\n              continue;\n            }\n          } else {\n            break; // user selected a collection that doesn't exist ... proceed on\n          }\n        }\n\n        numShards = promptForInt(readInput,\n            \"How many shards would you like to split \" + collectionName + \" into? [2]\", \"a shard count\", 2, 1, 4);\n\n        replicationFactor = promptForInt(readInput,\n            \"How many replicas per shard would you like to create? [2] \", \"a replication factor\", 2, 1, 4);\n\n        echo(\"Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n        String validConfigs = \"_default or sample_techproducts_configs [\"+cloudConfig+\"] \";\n        cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n\n        // validate the cloudConfig name\n        while (!isValidConfig(configsetsDir, cloudConfig)) {\n          echo(cloudConfig+\" is not a valid configuration directory! Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n          cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n        }\n      } else {\n        // must verify if default collection exists\n        if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n          echo(\"\\nCollection '\"+collectionName+\"' already exists! Skipping collection creation step.\");\n          return collectionName;\n        }\n      }\n\n      // invoke the CreateCollectionTool\n      String[] createArgs = new String[] {\n          \"-name\", collectionName,\n          \"-shards\", String.valueOf(numShards),\n          \"-replicationFactor\", String.valueOf(replicationFactor),\n          \"-confname\", collectionName,\n          \"-confdir\", cloudConfig,\n          \"-configsetsDir\", configsetsDir.getAbsolutePath(),\n          \"-solrUrl\", solrUrl\n      };\n\n      CreateCollectionTool createCollectionTool = new CreateCollectionTool(stdout);\n      int createCode =\n          createCollectionTool.runTool(\n              processCommandLineArgs(joinCommonAndToolOptions(createCollectionTool.getOptions()), createArgs));\n\n      if (createCode != 0)\n        throw new Exception(\"Failed to create collection using command: \"+ Arrays.asList(createArgs));\n\n      return collectionName;\n    }\n\n","sourceOld":"    protected String createCloudExampleCollection(int numNodes, Scanner readInput, boolean prompt, String solrUrl) throws Exception {\n      // yay! numNodes SolrCloud nodes running\n      int numShards = 2;\n      int replicationFactor = 2;\n      String cloudConfig = \"data_driven_schema_configs\";\n      String collectionName = \"gettingstarted\";\n\n      File configsetsDir = new File(serverDir, \"solr/configsets\");\n      String collectionListUrl = solrUrl+\"/admin/collections?action=list\";\n\n      if (prompt) {\n        echo(\"\\nNow let's create a new collection for indexing documents in your \"+numNodes+\"-node cluster.\");\n\n        while (true) {\n          collectionName =\n              prompt(readInput, \"Please provide a name for your new collection: [\"+collectionName+\"] \", collectionName);\n\n          // Test for existence and then prompt to either create another or skip the create step\n          if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n            echo(\"\\nCollection '\"+collectionName+\"' already exists!\");\n            int oneOrTwo = promptForInt(readInput,\n                \"Do you want to re-use the existing collection or create a new one? Enter 1 to reuse, 2 to create new [1]: \", \"a 1 or 2\", 1, 1, 2);\n            if (oneOrTwo == 1) {\n              return collectionName;\n            } else {\n              continue;\n            }\n          } else {\n            break; // user selected a collection that doesn't exist ... proceed on\n          }\n        }\n\n        numShards = promptForInt(readInput,\n            \"How many shards would you like to split \" + collectionName + \" into? [2]\", \"a shard count\", 2, 1, 4);\n\n        replicationFactor = promptForInt(readInput,\n            \"How many replicas per shard would you like to create? [2] \", \"a replication factor\", 2, 1, 4);\n\n        echo(\"Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n        String validConfigs = \"basic_configs, data_driven_schema_configs, or sample_techproducts_configs [\"+cloudConfig+\"] \";\n        cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n\n        // validate the cloudConfig name\n        while (!isValidConfig(configsetsDir, cloudConfig)) {\n          echo(cloudConfig+\" is not a valid configuration directory! Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n          cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n        }\n      } else {\n        // must verify if default collection exists\n        if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n          echo(\"\\nCollection '\"+collectionName+\"' already exists! Skipping collection creation step.\");\n          return collectionName;\n        }\n      }\n\n      // invoke the CreateCollectionTool\n      String[] createArgs = new String[] {\n          \"-name\", collectionName,\n          \"-shards\", String.valueOf(numShards),\n          \"-replicationFactor\", String.valueOf(replicationFactor),\n          \"-confname\", collectionName,\n          \"-confdir\", cloudConfig,\n          \"-configsetsDir\", configsetsDir.getAbsolutePath(),\n          \"-solrUrl\", solrUrl\n      };\n\n      CreateCollectionTool createCollectionTool = new CreateCollectionTool(stdout);\n      int createCode =\n          createCollectionTool.runTool(\n              processCommandLineArgs(joinCommonAndToolOptions(createCollectionTool.getOptions()), createArgs));\n\n      if (createCode != 0)\n        throw new Exception(\"Failed to create collection using command: \"+ Arrays.asList(createArgs));\n\n      return collectionName;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b79a5db147a1c6f95d1625ddbc3561ef56955225","date":1528848080,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#createCloudExampleCollection(int,Scanner,boolean,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#createCloudExampleCollection(int,Scanner,boolean,String).mjava","sourceNew":"    protected String createCloudExampleCollection(int numNodes, Scanner readInput, boolean prompt, String solrUrl) throws Exception {\n      // yay! numNodes SolrCloud nodes running\n      int numShards = 2;\n      int replicationFactor = 2;\n      String cloudConfig = \"_default\";\n      String collectionName = \"gettingstarted\";\n\n      File configsetsDir = new File(serverDir, \"solr/configsets\");\n      String collectionListUrl = solrUrl+\"/admin/collections?action=list\";\n\n      if (prompt) {\n        echo(\"\\nNow let's create a new collection for indexing documents in your \"+numNodes+\"-node cluster.\");\n\n        while (true) {\n          collectionName =\n              prompt(readInput, \"Please provide a name for your new collection: [\"+collectionName+\"] \", collectionName);\n\n          // Test for existence and then prompt to either create another or skip the create step\n          if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n            echo(\"\\nCollection '\"+collectionName+\"' already exists!\");\n            int oneOrTwo = promptForInt(readInput,\n                \"Do you want to re-use the existing collection or create a new one? Enter 1 to reuse, 2 to create new [1]: \", \"a 1 or 2\", 1, 1, 2);\n            if (oneOrTwo == 1) {\n              return collectionName;\n            } else {\n              continue;\n            }\n          } else {\n            break; // user selected a collection that doesn't exist ... proceed on\n          }\n        }\n\n        numShards = promptForInt(readInput,\n            \"How many shards would you like to split \" + collectionName + \" into? [2]\", \"a shard count\", 2, 1, 4);\n\n        replicationFactor = promptForInt(readInput,\n            \"How many replicas per shard would you like to create? [2] \", \"a replication factor\", 2, 1, 4);\n\n        echo(\"Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n        String validConfigs = \"_default or sample_techproducts_configs [\"+cloudConfig+\"] \";\n        cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n\n        // validate the cloudConfig name\n        while (!isValidConfig(configsetsDir, cloudConfig)) {\n          echo(cloudConfig+\" is not a valid configuration directory! Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n          cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n        }\n      } else {\n        // must verify if default collection exists\n        if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n          echo(\"\\nCollection '\"+collectionName+\"' already exists! Skipping collection creation step.\");\n          return collectionName;\n        }\n      }\n\n      // invoke the CreateCollectionTool\n      String[] createArgs = new String[] {\n          \"-name\", collectionName,\n          \"-shards\", String.valueOf(numShards),\n          \"-replicationFactor\", String.valueOf(replicationFactor),\n          \"-confname\", collectionName,\n          \"-confdir\", cloudConfig,\n          \"-configsetsDir\", configsetsDir.getAbsolutePath(),\n          \"-solrUrl\", solrUrl\n      };\n\n      CreateCollectionTool createCollectionTool = new CreateCollectionTool(stdout);\n      int createCode =\n          createCollectionTool.runTool(\n              processCommandLineArgs(joinCommonAndToolOptions(createCollectionTool.getOptions()), createArgs));\n\n      if (createCode != 0)\n        throw new Exception(\"Failed to create collection using command: \"+ Arrays.asList(createArgs));\n\n      return collectionName;\n    }\n\n","sourceOld":"    protected String createCloudExampleCollection(int numNodes, Scanner readInput, boolean prompt, String solrUrl) throws Exception {\n      // yay! numNodes SolrCloud nodes running\n      int numShards = 2;\n      int replicationFactor = 2;\n      String cloudConfig = \"_default\";\n      String collectionName = \"gettingstarted\";\n\n      File configsetsDir = new File(serverDir, \"solr/configsets\");\n      String collectionListUrl = solrUrl+\"/admin/collections?action=list\";\n\n      if (prompt) {\n        echo(\"\\nNow let's create a new collection for indexing documents in your \"+numNodes+\"-node cluster.\");\n\n        while (true) {\n          collectionName =\n              prompt(readInput, \"Please provide a name for your new collection: [\"+collectionName+\"] \", collectionName);\n\n          // Test for existence and then prompt to either create another or skip the create step\n          if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n            echo(\"\\nCollection '\"+collectionName+\"' already exists!\");\n            int oneOrTwo = promptForInt(readInput,\n                \"Do you want to re-use the existing collection or create a new one? Enter 1 to reuse, 2 to create new [1]: \", \"a 1 or 2\", 1, 1, 2);\n            if (oneOrTwo == 1) {\n              return collectionName;\n            } else {\n              continue;\n            }\n          } else {\n            break; // user selected a collection that doesn't exist ... proceed on\n          }\n        }\n\n        numShards = promptForInt(readInput,\n            \"How many shards would you like to split \" + collectionName + \" into? [2]\", \"a shard count\", 2, 1, 4);\n\n        replicationFactor = promptForInt(readInput,\n            \"How many replicas per shard would you like to create? [2] \", \"a replication factor\", 2, 1, 4);\n\n        echo(\"Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n        String validConfigs = \"_default or sample_techproducts_configs [\"+cloudConfig+\"] \";\n        cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n\n        // validate the cloudConfig name\n        while (!isValidConfig(configsetsDir, cloudConfig)) {\n          echo(cloudConfig+\" is not a valid configuration directory! Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n          cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n        }\n      } else {\n        // must verify if default collection exists\n        if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n          echo(\"\\nCollection '\"+collectionName+\"' already exists! Skipping collection creation step.\");\n          return collectionName;\n        }\n      }\n\n      // invoke the CreateCollectionTool\n      String[] createArgs = new String[] {\n          \"-name\", collectionName,\n          \"-shards\", String.valueOf(numShards),\n          \"-replicationFactor\", String.valueOf(replicationFactor),\n          \"-confname\", collectionName,\n          \"-confdir\", cloudConfig,\n          \"-configsetsDir\", configsetsDir.getAbsolutePath(),\n          \"-solrUrl\", solrUrl\n      };\n\n      CreateCollectionTool createCollectionTool = new CreateCollectionTool(stdout);\n      int createCode =\n          createCollectionTool.runTool(\n              processCommandLineArgs(joinCommonAndToolOptions(createCollectionTool.getOptions()), createArgs));\n\n      if (createCode != 0)\n        throw new Exception(\"Failed to create collection using command: \"+ Arrays.asList(createArgs));\n\n      return collectionName;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#createCloudExampleCollection(int,Scanner,boolean,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#createCloudExampleCollection(int,Scanner,boolean,String).mjava","sourceNew":"    protected String createCloudExampleCollection(int numNodes, Scanner readInput, boolean prompt, String solrUrl) throws Exception {\n      // yay! numNodes SolrCloud nodes running\n      int numShards = 2;\n      int replicationFactor = 2;\n      String cloudConfig = \"_default\";\n      String collectionName = \"gettingstarted\";\n\n      File configsetsDir = new File(serverDir, \"solr/configsets\");\n      String collectionListUrl = solrUrl+\"/admin/collections?action=list\";\n\n      if (prompt) {\n        echo(\"\\nNow let's create a new collection for indexing documents in your \"+numNodes+\"-node cluster.\");\n\n        while (true) {\n          collectionName =\n              prompt(readInput, \"Please provide a name for your new collection: [\"+collectionName+\"] \", collectionName);\n\n          // Test for existence and then prompt to either create another or skip the create step\n          if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n            echo(\"\\nCollection '\"+collectionName+\"' already exists!\");\n            int oneOrTwo = promptForInt(readInput,\n                \"Do you want to re-use the existing collection or create a new one? Enter 1 to reuse, 2 to create new [1]: \", \"a 1 or 2\", 1, 1, 2);\n            if (oneOrTwo == 1) {\n              return collectionName;\n            } else {\n              continue;\n            }\n          } else {\n            break; // user selected a collection that doesn't exist ... proceed on\n          }\n        }\n\n        numShards = promptForInt(readInput,\n            \"How many shards would you like to split \" + collectionName + \" into? [2]\", \"a shard count\", 2, 1, 4);\n\n        replicationFactor = promptForInt(readInput,\n            \"How many replicas per shard would you like to create? [2] \", \"a replication factor\", 2, 1, 4);\n\n        echo(\"Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n        String validConfigs = \"_default or sample_techproducts_configs [\"+cloudConfig+\"] \";\n        cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n\n        // validate the cloudConfig name\n        while (!isValidConfig(configsetsDir, cloudConfig)) {\n          echo(cloudConfig+\" is not a valid configuration directory! Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n          cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n        }\n      } else {\n        // must verify if default collection exists\n        if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n          echo(\"\\nCollection '\"+collectionName+\"' already exists! Skipping collection creation step.\");\n          return collectionName;\n        }\n      }\n\n      // invoke the CreateCollectionTool\n      String[] createArgs = new String[] {\n          \"-name\", collectionName,\n          \"-shards\", String.valueOf(numShards),\n          \"-replicationFactor\", String.valueOf(replicationFactor),\n          \"-confname\", collectionName,\n          \"-confdir\", cloudConfig,\n          \"-configsetsDir\", configsetsDir.getAbsolutePath(),\n          \"-solrUrl\", solrUrl\n      };\n\n      CreateCollectionTool createCollectionTool = new CreateCollectionTool(stdout);\n      int createCode =\n          createCollectionTool.runTool(\n              processCommandLineArgs(joinCommonAndToolOptions(createCollectionTool.getOptions()), createArgs));\n\n      if (createCode != 0)\n        throw new Exception(\"Failed to create collection using command: \"+ Arrays.asList(createArgs));\n\n      return collectionName;\n    }\n\n","sourceOld":"    protected String createCloudExampleCollection(int numNodes, Scanner readInput, boolean prompt, String solrUrl) throws Exception {\n      // yay! numNodes SolrCloud nodes running\n      int numShards = 2;\n      int replicationFactor = 2;\n      String cloudConfig = \"_default\";\n      String collectionName = \"gettingstarted\";\n\n      File configsetsDir = new File(serverDir, \"solr/configsets\");\n      String collectionListUrl = solrUrl+\"/admin/collections?action=list\";\n\n      if (prompt) {\n        echo(\"\\nNow let's create a new collection for indexing documents in your \"+numNodes+\"-node cluster.\");\n\n        while (true) {\n          collectionName =\n              prompt(readInput, \"Please provide a name for your new collection: [\"+collectionName+\"] \", collectionName);\n\n          // Test for existence and then prompt to either create another or skip the create step\n          if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n            echo(\"\\nCollection '\"+collectionName+\"' already exists!\");\n            int oneOrTwo = promptForInt(readInput,\n                \"Do you want to re-use the existing collection or create a new one? Enter 1 to reuse, 2 to create new [1]: \", \"a 1 or 2\", 1, 1, 2);\n            if (oneOrTwo == 1) {\n              return collectionName;\n            } else {\n              continue;\n            }\n          } else {\n            break; // user selected a collection that doesn't exist ... proceed on\n          }\n        }\n\n        numShards = promptForInt(readInput,\n            \"How many shards would you like to split \" + collectionName + \" into? [2]\", \"a shard count\", 2, 1, 4);\n\n        replicationFactor = promptForInt(readInput,\n            \"How many replicas per shard would you like to create? [2] \", \"a replication factor\", 2, 1, 4);\n\n        echo(\"Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n        String validConfigs = \"_default or sample_techproducts_configs [\"+cloudConfig+\"] \";\n        cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n\n        // validate the cloudConfig name\n        while (!isValidConfig(configsetsDir, cloudConfig)) {\n          echo(cloudConfig+\" is not a valid configuration directory! Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n          cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n        }\n      } else {\n        // must verify if default collection exists\n        if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n          echo(\"\\nCollection '\"+collectionName+\"' already exists! Skipping collection creation step.\");\n          return collectionName;\n        }\n      }\n\n      // invoke the CreateCollectionTool\n      String[] createArgs = new String[] {\n          \"-name\", collectionName,\n          \"-shards\", String.valueOf(numShards),\n          \"-replicationFactor\", String.valueOf(replicationFactor),\n          \"-confname\", collectionName,\n          \"-confdir\", cloudConfig,\n          \"-configsetsDir\", configsetsDir.getAbsolutePath(),\n          \"-solrUrl\", solrUrl\n      };\n\n      CreateCollectionTool createCollectionTool = new CreateCollectionTool(stdout);\n      int createCode =\n          createCollectionTool.runTool(\n              processCommandLineArgs(joinCommonAndToolOptions(createCollectionTool.getOptions()), createArgs));\n\n      if (createCode != 0)\n        throw new Exception(\"Failed to create collection using command: \"+ Arrays.asList(createArgs));\n\n      return collectionName;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#createCloudExampleCollection(int,Scanner,boolean,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.RunExampleTool#createCloudExampleCollection(int,Scanner,boolean,String).mjava","sourceNew":"    protected String createCloudExampleCollection(int numNodes, Scanner readInput, boolean prompt, String solrUrl) throws Exception {\n      // yay! numNodes SolrCloud nodes running\n      int numShards = 2;\n      int replicationFactor = 2;\n      String cloudConfig = \"_default\";\n      String collectionName = \"gettingstarted\";\n\n      File configsetsDir = new File(serverDir, \"solr/configsets\");\n      String collectionListUrl = solrUrl+\"/admin/collections?action=list\";\n\n      if (prompt) {\n        echo(\"\\nNow let's create a new collection for indexing documents in your \"+numNodes+\"-node cluster.\");\n\n        while (true) {\n          collectionName =\n              prompt(readInput, \"Please provide a name for your new collection: [\"+collectionName+\"] \", collectionName);\n\n          // Test for existence and then prompt to either create another or skip the create step\n          if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n            echo(\"\\nCollection '\"+collectionName+\"' already exists!\");\n            int oneOrTwo = promptForInt(readInput,\n                \"Do you want to re-use the existing collection or create a new one? Enter 1 to reuse, 2 to create new [1]: \", \"a 1 or 2\", 1, 1, 2);\n            if (oneOrTwo == 1) {\n              return collectionName;\n            } else {\n              continue;\n            }\n          } else {\n            break; // user selected a collection that doesn't exist ... proceed on\n          }\n        }\n\n        numShards = promptForInt(readInput,\n            \"How many shards would you like to split \" + collectionName + \" into? [2]\", \"a shard count\", 2, 1, 4);\n\n        replicationFactor = promptForInt(readInput,\n            \"How many replicas per shard would you like to create? [2] \", \"a replication factor\", 2, 1, 4);\n\n        echo(\"Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n        String validConfigs = \"_default or sample_techproducts_configs [\"+cloudConfig+\"] \";\n        cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n\n        // validate the cloudConfig name\n        while (!isValidConfig(configsetsDir, cloudConfig)) {\n          echo(cloudConfig+\" is not a valid configuration directory! Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n          cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n        }\n      } else {\n        // must verify if default collection exists\n        if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n          echo(\"\\nCollection '\"+collectionName+\"' already exists! Skipping collection creation step.\");\n          return collectionName;\n        }\n      }\n\n      // invoke the CreateCollectionTool\n      String[] createArgs = new String[] {\n          \"-name\", collectionName,\n          \"-shards\", String.valueOf(numShards),\n          \"-replicationFactor\", String.valueOf(replicationFactor),\n          \"-confname\", collectionName,\n          \"-confdir\", cloudConfig,\n          \"-configsetsDir\", configsetsDir.getAbsolutePath(),\n          \"-solrUrl\", solrUrl\n      };\n\n      CreateCollectionTool createCollectionTool = new CreateCollectionTool(stdout);\n      int createCode =\n          createCollectionTool.runTool(\n              processCommandLineArgs(joinCommonAndToolOptions(createCollectionTool.getOptions()), createArgs));\n\n      if (createCode != 0)\n        throw new Exception(\"Failed to create collection using command: \"+ Arrays.asList(createArgs));\n\n      return collectionName;\n    }\n\n","sourceOld":"    protected String createCloudExampleCollection(int numNodes, Scanner readInput, boolean prompt, String solrUrl) throws Exception {\n      // yay! numNodes SolrCloud nodes running\n      int numShards = 2;\n      int replicationFactor = 2;\n      String cloudConfig = \"_default\";\n      String collectionName = \"gettingstarted\";\n\n      File configsetsDir = new File(serverDir, \"solr/configsets\");\n      String collectionListUrl = solrUrl+\"/admin/collections?action=list\";\n\n      if (prompt) {\n        echo(\"\\nNow let's create a new collection for indexing documents in your \"+numNodes+\"-node cluster.\");\n\n        while (true) {\n          collectionName =\n              prompt(readInput, \"Please provide a name for your new collection: [\"+collectionName+\"] \", collectionName);\n\n          // Test for existence and then prompt to either create another or skip the create step\n          if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n            echo(\"\\nCollection '\"+collectionName+\"' already exists!\");\n            int oneOrTwo = promptForInt(readInput,\n                \"Do you want to re-use the existing collection or create a new one? Enter 1 to reuse, 2 to create new [1]: \", \"a 1 or 2\", 1, 1, 2);\n            if (oneOrTwo == 1) {\n              return collectionName;\n            } else {\n              continue;\n            }\n          } else {\n            break; // user selected a collection that doesn't exist ... proceed on\n          }\n        }\n\n        numShards = promptForInt(readInput,\n            \"How many shards would you like to split \" + collectionName + \" into? [2]\", \"a shard count\", 2, 1, 4);\n\n        replicationFactor = promptForInt(readInput,\n            \"How many replicas per shard would you like to create? [2] \", \"a replication factor\", 2, 1, 4);\n\n        echo(\"Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n        String validConfigs = \"_default or sample_techproducts_configs [\"+cloudConfig+\"] \";\n        cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n\n        // validate the cloudConfig name\n        while (!isValidConfig(configsetsDir, cloudConfig)) {\n          echo(cloudConfig+\" is not a valid configuration directory! Please choose a configuration for the \"+collectionName+\" collection, available options are:\");\n          cloudConfig = prompt(readInput, validConfigs, cloudConfig);\n        }\n      } else {\n        // must verify if default collection exists\n        if (safeCheckCollectionExists(collectionListUrl, collectionName)) {\n          echo(\"\\nCollection '\"+collectionName+\"' already exists! Skipping collection creation step.\");\n          return collectionName;\n        }\n      }\n\n      // invoke the CreateCollectionTool\n      String[] createArgs = new String[] {\n          \"-name\", collectionName,\n          \"-shards\", String.valueOf(numShards),\n          \"-replicationFactor\", String.valueOf(replicationFactor),\n          \"-confname\", collectionName,\n          \"-confdir\", cloudConfig,\n          \"-configsetsDir\", configsetsDir.getAbsolutePath(),\n          \"-solrUrl\", solrUrl\n      };\n\n      CreateCollectionTool createCollectionTool = new CreateCollectionTool(stdout);\n      int createCode =\n          createCollectionTool.runTool(\n              processCommandLineArgs(joinCommonAndToolOptions(createCollectionTool.getOptions()), createArgs));\n\n      if (createCode != 0)\n        throw new Exception(\"Failed to create collection using command: \"+ Arrays.asList(createArgs));\n\n      return collectionName;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ca20be81c9284c840498143264e583ccbb8525a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ffa50c9a1e4c37633b2d4cc121228bcfc52774e7":["688f23c47b3d5b61d795e3042013aa908716c068"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["28288370235ed02234a64753cdbf0c6ec096304a","b79a5db147a1c6f95d1625ddbc3561ef56955225"],"688f23c47b3d5b61d795e3042013aa908716c068":["4ca20be81c9284c840498143264e583ccbb8525a"],"872677bb42fc2032d224a8a8ad13f9330585fcf6":["688f23c47b3d5b61d795e3042013aa908716c068","ffa50c9a1e4c37633b2d4cc121228bcfc52774e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4":["872677bb42fc2032d224a8a8ad13f9330585fcf6","6dac22e2c68188d3e5c96ca60febedc05a96f44f"],"6dac22e2c68188d3e5c96ca60febedc05a96f44f":["872677bb42fc2032d224a8a8ad13f9330585fcf6"],"28288370235ed02234a64753cdbf0c6ec096304a":["872677bb42fc2032d224a8a8ad13f9330585fcf6","6dac22e2c68188d3e5c96ca60febedc05a96f44f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b79a5db147a1c6f95d1625ddbc3561ef56955225"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["28288370235ed02234a64753cdbf0c6ec096304a"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["28288370235ed02234a64753cdbf0c6ec096304a","b79a5db147a1c6f95d1625ddbc3561ef56955225"]},"commit2Childs":{"4ca20be81c9284c840498143264e583ccbb8525a":["688f23c47b3d5b61d795e3042013aa908716c068"],"ffa50c9a1e4c37633b2d4cc121228bcfc52774e7":["872677bb42fc2032d224a8a8ad13f9330585fcf6"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"688f23c47b3d5b61d795e3042013aa908716c068":["ffa50c9a1e4c37633b2d4cc121228bcfc52774e7","872677bb42fc2032d224a8a8ad13f9330585fcf6"],"872677bb42fc2032d224a8a8ad13f9330585fcf6":["fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4","6dac22e2c68188d3e5c96ca60febedc05a96f44f","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ca20be81c9284c840498143264e583ccbb8525a"],"fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4":[],"6dac22e2c68188d3e5c96ca60febedc05a96f44f":["fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4","28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","b79a5db147a1c6f95d1625ddbc3561ef56955225","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","fbedfa79ef95dc2b5b49f7d54d80e0b47867f9b4","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}