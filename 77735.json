{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doAfterFlush(DocumentsWriterPerThread).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doAfterFlush(DocumentsWriterPerThread).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doAfterFlush(DocumentsWriterPerThread).mjava","sourceNew":"  synchronized void doAfterFlush(DocumentsWriterPerThread dwpt) {\n    assert flushingWriters.containsKey(dwpt);\n    try {\n      Long bytes = flushingWriters.remove(dwpt);\n      flushBytes -= bytes.longValue();\n      perThreadPool.recycle(dwpt);\n      stallControl.updateStalled(this);\n      assert assertMemory();\n    } finally {\n      notifyAll();\n    }\n  }\n\n","sourceOld":"  synchronized void doAfterFlush(DocumentsWriterPerThread dwpt) {\n    assert flushingWriters.containsKey(dwpt);\n    try {\n      Long bytes = flushingWriters.remove(dwpt);\n      flushBytes -= bytes.longValue();\n      perThreadPool.recycle(dwpt);\n      stallControl.updateStalled(this);\n      assert assertMemory();\n    } finally {\n      notifyAll();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a0bb7b6eeee9103dc4c7cb2dfd62a9a41894fc2","date":1337674113,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doAfterFlush(DocumentsWriterPerThread).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doAfterFlush(DocumentsWriterPerThread).mjava","sourceNew":"  synchronized void doAfterFlush(DocumentsWriterPerThread dwpt) {\n    assert flushingWriters.containsKey(dwpt);\n    try {\n      Long bytes = flushingWriters.remove(dwpt);\n      flushBytes -= bytes.longValue();\n      perThreadPool.recycle(dwpt);\n      assert assertMemory();\n    } finally {\n      try {\n        stallControl.updateStalled(this);\n      } finally {\n        notifyAll();\n      }\n    }\n  }\n\n","sourceOld":"  synchronized void doAfterFlush(DocumentsWriterPerThread dwpt) {\n    assert flushingWriters.containsKey(dwpt);\n    try {\n      Long bytes = flushingWriters.remove(dwpt);\n      flushBytes -= bytes.longValue();\n      perThreadPool.recycle(dwpt);\n      stallControl.updateStalled(this);\n      assert assertMemory();\n    } finally {\n      notifyAll();\n    }\n  }\n\n","bugFix":["327863a2fd61e831028b6c56c8fef6b00a44eb0b","32f306edd62f81390a6e263e8b913f089f3e98a1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3599646b4d4c346cf74d334813488b8b337b5bf5","date":1337790261,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doAfterFlush(DocumentsWriterPerThread).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doAfterFlush(DocumentsWriterPerThread).mjava","sourceNew":"  synchronized void doAfterFlush(DocumentsWriterPerThread dwpt) {\n    assert flushingWriters.containsKey(dwpt);\n    try {\n      Long bytes = flushingWriters.remove(dwpt);\n      flushBytes -= bytes.longValue();\n      perThreadPool.recycle(dwpt);\n      assert assertMemory();\n    } finally {\n      try {\n        stallControl.updateStalled(this);\n      } finally {\n        notifyAll();\n      }\n    }\n  }\n\n","sourceOld":"  synchronized void doAfterFlush(DocumentsWriterPerThread dwpt) {\n    assert flushingWriters.containsKey(dwpt);\n    try {\n      Long bytes = flushingWriters.remove(dwpt);\n      flushBytes -= bytes.longValue();\n      perThreadPool.recycle(dwpt);\n      stallControl.updateStalled(this);\n      assert assertMemory();\n    } finally {\n      notifyAll();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e38f40562eb7c165ae08ab2367a031883138354","date":1340287338,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doAfterFlush(DocumentsWriterPerThread).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doAfterFlush(DocumentsWriterPerThread).mjava","sourceNew":"  synchronized void doAfterFlush(DocumentsWriterPerThread dwpt) {\n    assert flushingWriters.containsKey(dwpt);\n    try {\n      Long bytes = flushingWriters.remove(dwpt);\n      flushBytes -= bytes.longValue();\n      perThreadPool.recycle(dwpt);\n      assert assertMemory();\n    } finally {\n      try {\n       updateStallState();\n      } finally {\n        notifyAll();\n      }\n    }\n  }\n\n","sourceOld":"  synchronized void doAfterFlush(DocumentsWriterPerThread dwpt) {\n    assert flushingWriters.containsKey(dwpt);\n    try {\n      Long bytes = flushingWriters.remove(dwpt);\n      flushBytes -= bytes.longValue();\n      perThreadPool.recycle(dwpt);\n      assert assertMemory();\n    } finally {\n      try {\n        stallControl.updateStalled(this);\n      } finally {\n        notifyAll();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doAfterFlush(DocumentsWriterPerThread).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doAfterFlush(DocumentsWriterPerThread).mjava","sourceNew":"  synchronized void doAfterFlush(DocumentsWriterPerThread dwpt) {\n    assert flushingWriters.containsKey(dwpt);\n    try {\n      Long bytes = flushingWriters.remove(dwpt);\n      flushBytes -= bytes.longValue();\n      perThreadPool.recycle(dwpt);\n      assert assertMemory();\n    } finally {\n      try {\n       updateStallState();\n      } finally {\n        notifyAll();\n      }\n    }\n  }\n\n","sourceOld":"  synchronized void doAfterFlush(DocumentsWriterPerThread dwpt) {\n    assert flushingWriters.containsKey(dwpt);\n    try {\n      Long bytes = flushingWriters.remove(dwpt);\n      flushBytes -= bytes.longValue();\n      perThreadPool.recycle(dwpt);\n      assert assertMemory();\n    } finally {\n      try {\n        stallControl.updateStalled(this);\n      } finally {\n        notifyAll();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b7d69c53c444cbbdbc1cd27e9f51f83b3ed14cb","date":1400265925,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doAfterFlush(DocumentsWriterPerThread).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doAfterFlush(DocumentsWriterPerThread).mjava","sourceNew":"  synchronized void doAfterFlush(DocumentsWriterPerThread dwpt) {\n    assert flushingWriters.containsKey(dwpt);\n    try {\n      Long bytes = flushingWriters.remove(dwpt);\n      flushBytes -= bytes.longValue();\n      perThreadPool.recycle(dwpt);\n      assert assertMemory();\n    } finally {\n      try {\n        updateStallState();\n      } finally {\n        notifyAll();\n      }\n    }\n  }\n\n","sourceOld":"  synchronized void doAfterFlush(DocumentsWriterPerThread dwpt) {\n    assert flushingWriters.containsKey(dwpt);\n    try {\n      Long bytes = flushingWriters.remove(dwpt);\n      flushBytes -= bytes.longValue();\n      perThreadPool.recycle(dwpt);\n      assert assertMemory();\n    } finally {\n      try {\n       updateStallState();\n      } finally {\n        notifyAll();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doAfterFlush(DocumentsWriterPerThread).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doAfterFlush(DocumentsWriterPerThread).mjava","sourceNew":"  synchronized void doAfterFlush(DocumentsWriterPerThread dwpt) {\n    assert flushingWriters.containsKey(dwpt);\n    try {\n      Long bytes = flushingWriters.remove(dwpt);\n      flushBytes -= bytes.longValue();\n      perThreadPool.recycle(dwpt);\n      assert assertMemory();\n    } finally {\n      try {\n        updateStallState();\n      } finally {\n        notifyAll();\n      }\n    }\n  }\n\n","sourceOld":"  synchronized void doAfterFlush(DocumentsWriterPerThread dwpt) {\n    assert flushingWriters.containsKey(dwpt);\n    try {\n      Long bytes = flushingWriters.remove(dwpt);\n      flushBytes -= bytes.longValue();\n      perThreadPool.recycle(dwpt);\n      assert assertMemory();\n    } finally {\n      try {\n       updateStallState();\n      } finally {\n        notifyAll();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"264935965977b4a9e2f3920420647072c9c49176","date":1586600626,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doAfterFlush(DocumentsWriterPerThread).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#doAfterFlush(DocumentsWriterPerThread).mjava","sourceNew":"  synchronized void doAfterFlush(DocumentsWriterPerThread dwpt) {\n    assert flushingWriters.contains(dwpt);\n    try {\n      flushingWriters.remove(dwpt);\n      flushBytes -= dwpt.getLastCommittedBytesUsed();\n      assert assertMemory();\n    } finally {\n      try {\n        updateStallState();\n      } finally {\n        notifyAll();\n      }\n    }\n  }\n\n","sourceOld":"  synchronized void doAfterFlush(DocumentsWriterPerThread dwpt) {\n    assert flushingWriters.containsKey(dwpt);\n    try {\n      Long bytes = flushingWriters.remove(dwpt);\n      flushBytes -= bytes.longValue();\n      perThreadPool.recycle(dwpt);\n      assert assertMemory();\n    } finally {\n      try {\n        updateStallState();\n      } finally {\n        notifyAll();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"264935965977b4a9e2f3920420647072c9c49176":["5b7d69c53c444cbbdbc1cd27e9f51f83b3ed14cb"],"5e38f40562eb7c165ae08ab2367a031883138354":["7a0bb7b6eeee9103dc4c7cb2dfd62a9a41894fc2"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["7a0bb7b6eeee9103dc4c7cb2dfd62a9a41894fc2","5e38f40562eb7c165ae08ab2367a031883138354"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3599646b4d4c346cf74d334813488b8b337b5bf5":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7a0bb7b6eeee9103dc4c7cb2dfd62a9a41894fc2"],"7a0bb7b6eeee9103dc4c7cb2dfd62a9a41894fc2":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"56572ec06f1407c066d6b7399413178b33176cd8":["5e38f40562eb7c165ae08ab2367a031883138354","5b7d69c53c444cbbdbc1cd27e9f51f83b3ed14cb"],"5b7d69c53c444cbbdbc1cd27e9f51f83b3ed14cb":["5e38f40562eb7c165ae08ab2367a031883138354"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["264935965977b4a9e2f3920420647072c9c49176"]},"commit2Childs":{"264935965977b4a9e2f3920420647072c9c49176":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5e38f40562eb7c165ae08ab2367a031883138354":["fe33227f6805edab2036cbb80645cc4e2d1fa424","56572ec06f1407c066d6b7399413178b33176cd8","5b7d69c53c444cbbdbc1cd27e9f51f83b3ed14cb"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3599646b4d4c346cf74d334813488b8b337b5bf5","7a0bb7b6eeee9103dc4c7cb2dfd62a9a41894fc2"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3599646b4d4c346cf74d334813488b8b337b5bf5":[],"7a0bb7b6eeee9103dc4c7cb2dfd62a9a41894fc2":["5e38f40562eb7c165ae08ab2367a031883138354","fe33227f6805edab2036cbb80645cc4e2d1fa424","3599646b4d4c346cf74d334813488b8b337b5bf5"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"5b7d69c53c444cbbdbc1cd27e9f51f83b3ed14cb":["264935965977b4a9e2f3920420647072c9c49176","56572ec06f1407c066d6b7399413178b33176cd8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","3599646b4d4c346cf74d334813488b8b337b5bf5","56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}