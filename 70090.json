{"path":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/registry/configuration/PropertyInjector#populate(ComponentConfiguration,Entry[String,Method]).mjava","commits":[{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/registry/configuration/PropertyInjector#populate(ComponentConfiguration,Entry[String,Method]).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/server/registry/configuration/PropertyInjector#populate(ComponentConfiguration,Entry[String,Method]).mjava","sourceNew":"    private void populate(ComponentConfiguration bean,\n            Entry<String, Method> entry) {\n        String value = bean.get(entry.getKey());\n        Method m = entry.getValue();\n        Class<?>[] parameterTypes = m.getParameterTypes();\n        if (parameterTypes.length > 1)\n            throw new InjectionException(\"Setter has more than one parameter \"\n                    + m.getName() + \" -- can not invoke method -- \");\n        Object parameter = null;\n        try {\n\n            parameter = createObject(value, parameterTypes[0]);\n        } catch (InjectionException e) {\n            throw new InjectionException(\n                    \"parameter object creation failed for method \"\n                            + m.getName() + \" in class: \"\n                            + this.targetClass.getName(), e);\n        }\n        // only setters with one parameter are supported\n        Object[] parameters = { parameter };\n        try {\n            m.invoke(this.target, parameters);\n        } catch (Exception e) {\n            throw new InjectionException(\"Can not set value of type \"\n                    + value.getClass().getName()\n                    + \" -- can not invoke method -- \" + e.getMessage(), e);\n\n        }\n    }\n\n","sourceOld":"    private void populate(ComponentConfiguration bean,\n            Entry<String, Method> entry) {\n        String value = bean.get(entry.getKey());\n        Method m = entry.getValue();\n        Class<?>[] parameterTypes = m.getParameterTypes();\n        if (parameterTypes.length > 1)\n            throw new InjectionException(\"Setter has more than one parameter \"\n                    + m.getName() + \" -- can not invoke method -- \");\n        Object parameter = null;\n        try {\n\n            parameter = createObject(value, parameterTypes[0]);\n        } catch (InjectionException e) {\n            throw new InjectionException(\n                    \"parameter object creation failed for method \"\n                            + m.getName() + \" in class: \"\n                            + this.targetClass.getName(), e);\n        }\n        // only setters with one parameter are supported\n        Object[] parameters = { parameter };\n        try {\n            m.invoke(this.target, parameters);\n        } catch (Exception e) {\n            throw new InjectionException(\"Can not set value of type \"\n                    + value.getClass().getName()\n                    + \" -- can not invoke method -- \" + e.getMessage(), e);\n\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/server/registry/configuration/PropertyInjector#populate(ComponentConfiguration,Entry[String,Method]).mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/registry/configuration/PropertyInjector#populate(ComponentConfiguration,Entry[String,Method]).mjava","sourceNew":"    private void populate(ComponentConfiguration bean,\n            Entry<String, Method> entry) {\n        String value = bean.get(entry.getKey());\n        Method m = entry.getValue();\n        Class<?>[] parameterTypes = m.getParameterTypes();\n        if (parameterTypes.length > 1)\n            throw new InjectionException(\"Setter has more than one parameter \"\n                    + m.getName() + \" -- can not invoke method -- \");\n        Object parameter = null;\n        try {\n\n            parameter = createObject(value, parameterTypes[0]);\n        } catch (InjectionException e) {\n            throw new InjectionException(\n                    \"parameter object creation failed for method \"\n                            + m.getName() + \" in class: \"\n                            + this.targetClass.getName(), e);\n        }\n        // only setters with one parameter are supported\n        Object[] parameters = { parameter };\n        try {\n            m.invoke(this.target, parameters);\n        } catch (Exception e) {\n            throw new InjectionException(\"Can not set value of type \"\n                    + value.getClass().getName()\n                    + \" -- can not invoke method -- \" + e.getMessage(), e);\n\n        }\n    }\n\n","sourceOld":"    private void populate(ComponentConfiguration bean,\n            Entry<String, Method> entry) {\n        String value = bean.get(entry.getKey());\n        Method m = entry.getValue();\n        Class<?>[] parameterTypes = m.getParameterTypes();\n        if (parameterTypes.length > 1)\n            throw new InjectionException(\"Setter has more than one parameter \"\n                    + m.getName() + \" -- can not invoke method -- \");\n        Object parameter = null;\n        try {\n\n            parameter = createObject(value, parameterTypes[0]);\n        } catch (InjectionException e) {\n            throw new InjectionException(\n                    \"parameter object creation failed for method \"\n                            + m.getName() + \" in class: \"\n                            + this.targetClass.getName(), e);\n        }\n        // only setters with one parameter are supported\n        Object[] parameters = { parameter };\n        try {\n            m.invoke(this.target, parameters);\n        } catch (Exception e) {\n            throw new InjectionException(\"Can not set value of type \"\n                    + value.getClass().getName()\n                    + \" -- can not invoke method -- \" + e.getMessage(), e);\n\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}