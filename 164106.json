{"path":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight#scorer(LeafReaderContext).mjava","commits":[{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight#scorer(LeafReaderContext,Bits).mjava","sourceNew":"    @Override\n    public PayloadTermSpanScorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = super.getSpans(context, Postings.PAYLOADS);\n      Similarity.SimScorer simScorer = simWeight == null ? null : similarity.simScorer(simWeight, context);\n      return (spans == null) ? null : new PayloadTermSpanScorer(spans, this, simScorer);\n    }\n\n","sourceOld":"    @Override\n    public PayloadTermSpanScorer scorer(LeafReaderContext context, Bits acceptDocs) throws IOException {\n      Spans spans = super.getSpans(context, acceptDocs, Postings.PAYLOADS);\n      Similarity.SimScorer simScorer = simWeight == null ? null : similarity.simScorer(simWeight, context);\n      return (spans == null) ? null : new PayloadTermSpanScorer(spans, this, simScorer);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73561ba4c64c1aea2ba4b3873f80b9b2a2946816","date":1438618499,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight#scorer(LeafReaderContext).mjava","sourceNew":null,"sourceOld":"    @Override\n    public PayloadTermSpanScorer scorer(LeafReaderContext context) throws IOException {\n      Spans spans = super.getSpans(context, Postings.PAYLOADS);\n      Similarity.SimScorer simScorer = simWeight == null ? null : similarity.simScorer(simWeight, context);\n      return (spans == null) ? null : new PayloadTermSpanScorer(spans, this, simScorer);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"73561ba4c64c1aea2ba4b3873f80b9b2a2946816":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73561ba4c64c1aea2ba4b3873f80b9b2a2946816"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["73561ba4c64c1aea2ba4b3873f80b9b2a2946816"],"73561ba4c64c1aea2ba4b3873f80b9b2a2946816":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}