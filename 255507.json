{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilterTest#testInvalidInput3().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilterTest#testInvalidInput3().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilterTest#testInvalidInput3().mjava","sourceNew":"  public void testInvalidInput3() throws Exception {\n    boolean gotException = false;\n    try {        \n      new EdgeNGramTokenFilter(input, EdgeNGramTokenFilter.Side.FRONT, -1, 2);\n    } catch (IllegalArgumentException e) {\n      gotException = true;\n    }\n    assertTrue(gotException);\n  }\n\n","sourceOld":"  public void testInvalidInput3() throws Exception {\n    boolean gotException = false;\n    try {        \n      new EdgeNGramTokenFilter(input, EdgeNGramTokenFilter.Side.FRONT, -1, 2);\n    } catch (IllegalArgumentException e) {\n      gotException = true;\n    }\n    assertTrue(gotException);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"523c1863d7ec17e9a5067cef7e233c388f8ab263","date":1367931848,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilterTest#testInvalidInput3().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilterTest#testInvalidInput3().mjava","sourceNew":"  public void testInvalidInput3() throws Exception {\n    boolean gotException = false;\n    try {        \n      new EdgeNGramTokenFilter(TEST_VERSION_CURRENT, input, EdgeNGramTokenFilter.Side.FRONT, -1, 2);\n    } catch (IllegalArgumentException e) {\n      gotException = true;\n    }\n    assertTrue(gotException);\n  }\n\n","sourceOld":"  public void testInvalidInput3() throws Exception {\n    boolean gotException = false;\n    try {        \n      new EdgeNGramTokenFilter(input, EdgeNGramTokenFilter.Side.FRONT, -1, 2);\n    } catch (IllegalArgumentException e) {\n      gotException = true;\n    }\n    assertTrue(gotException);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7567347acd9579d742a2ffd4feb1a32062fb1bc3","date":1367935406,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilterTest#testInvalidInput3().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilterTest#testInvalidInput3().mjava","sourceNew":"  public void testInvalidInput3() throws Exception {\n    boolean gotException = false;\n    try {        \n      new EdgeNGramTokenFilter(TEST_VERSION_CURRENT, input, -1, 2);\n    } catch (IllegalArgumentException e) {\n      gotException = true;\n    }\n    assertTrue(gotException);\n  }\n\n","sourceOld":"  public void testInvalidInput3() throws Exception {\n    boolean gotException = false;\n    try {        \n      new EdgeNGramTokenFilter(TEST_VERSION_CURRENT, input, EdgeNGramTokenFilter.Side.FRONT, -1, 2);\n    } catch (IllegalArgumentException e) {\n      gotException = true;\n    }\n    assertTrue(gotException);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilterTest#testInvalidInput3().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilterTest#testInvalidInput3().mjava","sourceNew":"  public void testInvalidInput3() throws Exception {\n    boolean gotException = false;\n    try {        \n      new EdgeNGramTokenFilter(input, -1, 2);\n    } catch (IllegalArgumentException e) {\n      gotException = true;\n    }\n    assertTrue(gotException);\n  }\n\n","sourceOld":"  public void testInvalidInput3() throws Exception {\n    boolean gotException = false;\n    try {        \n      new EdgeNGramTokenFilter(TEST_VERSION_CURRENT, input, -1, 2);\n    } catch (IllegalArgumentException e) {\n      gotException = true;\n    }\n    assertTrue(gotException);\n  }\n\n","bugFix":null,"bugIntro":["8a255765a5625ff80fba75863de5a16ea392015e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilterTest#testInvalidInput3().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilterTest#testInvalidInput3().mjava","sourceNew":"  public void testInvalidInput3() throws Exception {\n    expectThrows(IllegalArgumentException.class, () -> {      \n      new EdgeNGramTokenFilter(input, -1, 2);\n    });\n  }\n\n","sourceOld":"  public void testInvalidInput3() throws Exception {\n    boolean gotException = false;\n    try {        \n      new EdgeNGramTokenFilter(input, -1, 2);\n    } catch (IllegalArgumentException e) {\n      gotException = true;\n    }\n    assertTrue(gotException);\n  }\n\n","bugFix":["d656cf6bf5ef56f1aed3af75dca637e11f3817b4"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8a255765a5625ff80fba75863de5a16ea392015e","date":1528161860,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilterTest#testInvalidInput3().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilterTest#testInvalidInput3().mjava","sourceNew":"  public void testInvalidInput3() throws Exception {\n    expectThrows(IllegalArgumentException.class, () -> {      \n      new EdgeNGramTokenFilter(input, -1, 2, false);\n    });\n  }\n\n","sourceOld":"  public void testInvalidInput3() throws Exception {\n    expectThrows(IllegalArgumentException.class, () -> {      \n      new EdgeNGramTokenFilter(input, -1, 2);\n    });\n  }\n\n","bugFix":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilterTest#testInvalidInput3().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilterTest#testInvalidInput3().mjava","sourceNew":"  public void testInvalidInput3() throws Exception {\n    expectThrows(IllegalArgumentException.class, () -> {      \n      new EdgeNGramTokenFilter(input, -1, 2, false);\n    });\n  }\n\n","sourceOld":"  public void testInvalidInput3() throws Exception {\n    expectThrows(IllegalArgumentException.class, () -> {      \n      new EdgeNGramTokenFilter(input, -1, 2);\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilterTest#testInvalidInput3().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilterTest#testInvalidInput3().mjava","sourceNew":"  public void testInvalidInput3() throws Exception {\n    expectThrows(IllegalArgumentException.class, () -> {      \n      new EdgeNGramTokenFilter(input, -1, 2, false);\n    });\n  }\n\n","sourceOld":"  public void testInvalidInput3() throws Exception {\n    expectThrows(IllegalArgumentException.class, () -> {      \n      new EdgeNGramTokenFilter(input, -1, 2);\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"523c1863d7ec17e9a5067cef7e233c388f8ab263":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8a255765a5625ff80fba75863de5a16ea392015e":["05fe562aa248790944d43cdd478f512572835ba0"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["7567347acd9579d742a2ffd4feb1a32062fb1bc3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["05fe562aa248790944d43cdd478f512572835ba0","8a255765a5625ff80fba75863de5a16ea392015e"],"05fe562aa248790944d43cdd478f512572835ba0":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"f592209545c71895260367152601e9200399776d":["05fe562aa248790944d43cdd478f512572835ba0","8a255765a5625ff80fba75863de5a16ea392015e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8a255765a5625ff80fba75863de5a16ea392015e"],"7567347acd9579d742a2ffd4feb1a32062fb1bc3":["523c1863d7ec17e9a5067cef7e233c388f8ab263"]},"commit2Childs":{"523c1863d7ec17e9a5067cef7e233c388f8ab263":["7567347acd9579d742a2ffd4feb1a32062fb1bc3"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["523c1863d7ec17e9a5067cef7e233c388f8ab263"],"8a255765a5625ff80fba75863de5a16ea392015e":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["05fe562aa248790944d43cdd478f512572835ba0"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"05fe562aa248790944d43cdd478f512572835ba0":["8a255765a5625ff80fba75863de5a16ea392015e","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d"],"f592209545c71895260367152601e9200399776d":[],"7567347acd9579d742a2ffd4feb1a32062fb1bc3":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}