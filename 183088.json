{"path":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#testDetails().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#testDetails().mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testDetails().mjava","sourceNew":"  @Test\n  public void testDetails() throws Exception {\n    { \n      NamedList<Object> details = getDetails(masterClient);\n      \n      assertEquals(\"master isMaster?\", \n                   \"true\", details.get(\"isMaster\"));\n      assertEquals(\"master isSlave?\", \n                   \"false\", details.get(\"isSlave\"));\n      assertNotNull(\"master has master section\", \n                    details.get(\"master\"));\n    }\n    {\n      NamedList<Object> details = getDetails(slaveClient);\n      \n      assertEquals(\"slave isMaster?\", \n                   \"false\", details.get(\"isMaster\"));\n      assertEquals(\"slave isSlave?\", \n                   \"true\", details.get(\"isSlave\"));\n      assertNotNull(\"slave has slave section\", \n                    details.get(\"slave\"));\n    }\n\n    SolrInstance repeater = null;\n    JettySolrRunner repeaterJetty = null;\n    SolrServer repeaterClient = null;\n    try {\n      repeater = new SolrInstance(\"repeater\", masterJetty.getLocalPort());\n      repeater.setUp();\n      repeaterJetty = createJetty(repeater);\n      repeaterClient = createNewSolrServer(repeaterJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(repeaterClient);\n      \n      assertEquals(\"repeater isMaster?\", \n                   \"true\", details.get(\"isMaster\"));\n      assertEquals(\"repeater isSlave?\", \n                   \"true\", details.get(\"isSlave\"));\n      assertNotNull(\"repeater has master section\", \n                    details.get(\"master\"));\n      assertNotNull(\"repeater has slave section\", \n                    details.get(\"slave\"));\n\n    } finally {\n      try { \n        if (repeaterJetty != null) repeaterJetty.stop(); \n      } catch (Exception e) { /* :NOOP: */ }\n      try { \n        if (repeater != null) repeater.tearDown();\n      } catch (Exception e) { /* :NOOP: */ }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDetails() throws Exception {\n    { \n      NamedList<Object> details = getDetails(masterClient);\n      \n      assertEquals(\"master isMaster?\", \n                   \"true\", details.get(\"isMaster\"));\n      assertEquals(\"master isSlave?\", \n                   \"false\", details.get(\"isSlave\"));\n      assertNotNull(\"master has master section\", \n                    details.get(\"master\"));\n    }\n    {\n      NamedList<Object> details = getDetails(slaveClient);\n      \n      assertEquals(\"slave isMaster?\", \n                   \"false\", details.get(\"isMaster\"));\n      assertEquals(\"slave isSlave?\", \n                   \"true\", details.get(\"isSlave\"));\n      assertNotNull(\"slave has slave section\", \n                    details.get(\"slave\"));\n    }\n\n    SolrInstance repeater = null;\n    JettySolrRunner repeaterJetty = null;\n    SolrServer repeaterClient = null;\n    try {\n      repeater = new SolrInstance(\"repeater\", masterJetty.getLocalPort());\n      repeater.setUp();\n      repeaterJetty = createJetty(repeater);\n      repeaterClient = createNewSolrServer(repeaterJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(repeaterClient);\n      \n      assertEquals(\"repeater isMaster?\", \n                   \"true\", details.get(\"isMaster\"));\n      assertEquals(\"repeater isSlave?\", \n                   \"true\", details.get(\"isSlave\"));\n      assertNotNull(\"repeater has master section\", \n                    details.get(\"master\"));\n      assertNotNull(\"repeater has slave section\", \n                    details.get(\"slave\"));\n\n    } finally {\n      try { \n        if (repeaterJetty != null) repeaterJetty.stop(); \n      } catch (Exception e) { /* :NOOP: */ }\n      try { \n        if (repeater != null) repeater.tearDown();\n      } catch (Exception e) { /* :NOOP: */ }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#testDetails().mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testDetails().mjava","sourceNew":"  @Test\n  public void testDetails() throws Exception {\n    { \n      NamedList<Object> details = getDetails(masterClient);\n      \n      assertEquals(\"master isMaster?\", \n                   \"true\", details.get(\"isMaster\"));\n      assertEquals(\"master isSlave?\", \n                   \"false\", details.get(\"isSlave\"));\n      assertNotNull(\"master has master section\", \n                    details.get(\"master\"));\n    }\n    {\n      NamedList<Object> details = getDetails(slaveClient);\n      \n      assertEquals(\"slave isMaster?\", \n                   \"false\", details.get(\"isMaster\"));\n      assertEquals(\"slave isSlave?\", \n                   \"true\", details.get(\"isSlave\"));\n      assertNotNull(\"slave has slave section\", \n                    details.get(\"slave\"));\n    }\n\n    SolrInstance repeater = null;\n    JettySolrRunner repeaterJetty = null;\n    SolrServer repeaterClient = null;\n    try {\n      repeater = new SolrInstance(\"repeater\", masterJetty.getLocalPort());\n      repeater.setUp();\n      repeaterJetty = createJetty(repeater);\n      repeaterClient = createNewSolrServer(repeaterJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(repeaterClient);\n      \n      assertEquals(\"repeater isMaster?\", \n                   \"true\", details.get(\"isMaster\"));\n      assertEquals(\"repeater isSlave?\", \n                   \"true\", details.get(\"isSlave\"));\n      assertNotNull(\"repeater has master section\", \n                    details.get(\"master\"));\n      assertNotNull(\"repeater has slave section\", \n                    details.get(\"slave\"));\n\n    } finally {\n      try { \n        if (repeaterJetty != null) repeaterJetty.stop(); \n      } catch (Exception e) { /* :NOOP: */ }\n      try { \n        if (repeater != null) repeater.tearDown();\n      } catch (Exception e) { /* :NOOP: */ }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDetails() throws Exception {\n    { \n      NamedList<Object> details = getDetails(masterClient);\n      \n      assertEquals(\"master isMaster?\", \n                   \"true\", details.get(\"isMaster\"));\n      assertEquals(\"master isSlave?\", \n                   \"false\", details.get(\"isSlave\"));\n      assertNotNull(\"master has master section\", \n                    details.get(\"master\"));\n    }\n    {\n      NamedList<Object> details = getDetails(slaveClient);\n      \n      assertEquals(\"slave isMaster?\", \n                   \"false\", details.get(\"isMaster\"));\n      assertEquals(\"slave isSlave?\", \n                   \"true\", details.get(\"isSlave\"));\n      assertNotNull(\"slave has slave section\", \n                    details.get(\"slave\"));\n    }\n\n    SolrInstance repeater = null;\n    JettySolrRunner repeaterJetty = null;\n    SolrServer repeaterClient = null;\n    try {\n      repeater = new SolrInstance(\"repeater\", masterJetty.getLocalPort());\n      repeater.setUp();\n      repeaterJetty = createJetty(repeater);\n      repeaterClient = createNewSolrServer(repeaterJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(repeaterClient);\n      \n      assertEquals(\"repeater isMaster?\", \n                   \"true\", details.get(\"isMaster\"));\n      assertEquals(\"repeater isSlave?\", \n                   \"true\", details.get(\"isSlave\"));\n      assertNotNull(\"repeater has master section\", \n                    details.get(\"master\"));\n      assertNotNull(\"repeater has slave section\", \n                    details.get(\"slave\"));\n\n    } finally {\n      try { \n        if (repeaterJetty != null) repeaterJetty.stop(); \n      } catch (Exception e) { /* :NOOP: */ }\n      try { \n        if (repeater != null) repeater.tearDown();\n      } catch (Exception e) { /* :NOOP: */ }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#testDetails().mjava","pathOld":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testDetails().mjava","sourceNew":"  @Test\n  public void testDetails() throws Exception {\n    { \n      NamedList<Object> details = getDetails(masterClient);\n      \n      assertEquals(\"master isMaster?\", \n                   \"true\", details.get(\"isMaster\"));\n      assertEquals(\"master isSlave?\", \n                   \"false\", details.get(\"isSlave\"));\n      assertNotNull(\"master has master section\", \n                    details.get(\"master\"));\n    }\n    {\n      NamedList<Object> details = getDetails(slaveClient);\n      \n      assertEquals(\"slave isMaster?\", \n                   \"false\", details.get(\"isMaster\"));\n      assertEquals(\"slave isSlave?\", \n                   \"true\", details.get(\"isSlave\"));\n      assertNotNull(\"slave has slave section\", \n                    details.get(\"slave\"));\n    }\n\n    SolrInstance repeater = null;\n    JettySolrRunner repeaterJetty = null;\n    SolrServer repeaterClient = null;\n    try {\n      repeater = new SolrInstance(\"repeater\", masterJetty.getLocalPort());\n      repeater.setUp();\n      repeaterJetty = createJetty(repeater);\n      repeaterClient = createNewSolrServer(repeaterJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(repeaterClient);\n      \n      assertEquals(\"repeater isMaster?\", \n                   \"true\", details.get(\"isMaster\"));\n      assertEquals(\"repeater isSlave?\", \n                   \"true\", details.get(\"isSlave\"));\n      assertNotNull(\"repeater has master section\", \n                    details.get(\"master\"));\n      assertNotNull(\"repeater has slave section\", \n                    details.get(\"slave\"));\n\n    } finally {\n      try { \n        if (repeaterJetty != null) repeaterJetty.stop(); \n      } catch (Exception e) { /* :NOOP: */ }\n      try { \n        if (repeater != null) repeater.tearDown();\n      } catch (Exception e) { /* :NOOP: */ }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDetails() throws Exception {\n    { \n      NamedList<Object> details = getDetails(masterClient);\n      \n      assertEquals(\"master isMaster?\", \n                   \"true\", details.get(\"isMaster\"));\n      assertEquals(\"master isSlave?\", \n                   \"false\", details.get(\"isSlave\"));\n      assertNotNull(\"master has master section\", \n                    details.get(\"master\"));\n    }\n    {\n      NamedList<Object> details = getDetails(slaveClient);\n      \n      assertEquals(\"slave isMaster?\", \n                   \"false\", details.get(\"isMaster\"));\n      assertEquals(\"slave isSlave?\", \n                   \"true\", details.get(\"isSlave\"));\n      assertNotNull(\"slave has slave section\", \n                    details.get(\"slave\"));\n    }\n\n    SolrInstance repeater = null;\n    JettySolrRunner repeaterJetty = null;\n    SolrServer repeaterClient = null;\n    try {\n      repeater = new SolrInstance(\"repeater\", masterJetty.getLocalPort());\n      repeater.setUp();\n      repeaterJetty = createJetty(repeater);\n      repeaterClient = createNewSolrServer(repeaterJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(repeaterClient);\n      \n      assertEquals(\"repeater isMaster?\", \n                   \"true\", details.get(\"isMaster\"));\n      assertEquals(\"repeater isSlave?\", \n                   \"true\", details.get(\"isSlave\"));\n      assertNotNull(\"repeater has master section\", \n                    details.get(\"master\"));\n      assertNotNull(\"repeater has slave section\", \n                    details.get(\"slave\"));\n\n    } finally {\n      try { \n        if (repeaterJetty != null) repeaterJetty.stop(); \n      } catch (Exception e) { /* :NOOP: */ }\n      try { \n        if (repeater != null) repeater.tearDown();\n      } catch (Exception e) { /* :NOOP: */ }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1bf853f0385a540ee0fb220fd272f2c362432294","date":1311520789,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestDetails().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#testDetails().mjava","sourceNew":"  private void doTestDetails() throws Exception {\n    { \n      NamedList<Object> details = getDetails(masterClient);\n      \n      assertEquals(\"master isMaster?\", \n                   \"true\", details.get(\"isMaster\"));\n      assertEquals(\"master isSlave?\", \n                   \"false\", details.get(\"isSlave\"));\n      assertNotNull(\"master has master section\", \n                    details.get(\"master\"));\n    }\n    {\n      NamedList<Object> details = getDetails(slaveClient);\n      \n      assertEquals(\"slave isMaster?\", \n                   \"false\", details.get(\"isMaster\"));\n      assertEquals(\"slave isSlave?\", \n                   \"true\", details.get(\"isSlave\"));\n      assertNotNull(\"slave has slave section\", \n                    details.get(\"slave\"));\n    }\n\n    SolrInstance repeater = null;\n    JettySolrRunner repeaterJetty = null;\n    SolrServer repeaterClient = null;\n    try {\n      repeater = new SolrInstance(\"repeater\", masterJetty.getLocalPort());\n      repeater.setUp();\n      repeaterJetty = createJetty(repeater);\n      repeaterClient = createNewSolrServer(repeaterJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(repeaterClient);\n      \n      assertEquals(\"repeater isMaster?\", \n                   \"true\", details.get(\"isMaster\"));\n      assertEquals(\"repeater isSlave?\", \n                   \"true\", details.get(\"isSlave\"));\n      assertNotNull(\"repeater has master section\", \n                    details.get(\"master\"));\n      assertNotNull(\"repeater has slave section\", \n                    details.get(\"slave\"));\n\n    } finally {\n      try { \n        if (repeaterJetty != null) repeaterJetty.stop(); \n      } catch (Exception e) { /* :NOOP: */ }\n      try { \n        if (repeater != null) repeater.tearDown();\n      } catch (Exception e) { /* :NOOP: */ }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testDetails() throws Exception {\n    { \n      NamedList<Object> details = getDetails(masterClient);\n      \n      assertEquals(\"master isMaster?\", \n                   \"true\", details.get(\"isMaster\"));\n      assertEquals(\"master isSlave?\", \n                   \"false\", details.get(\"isSlave\"));\n      assertNotNull(\"master has master section\", \n                    details.get(\"master\"));\n    }\n    {\n      NamedList<Object> details = getDetails(slaveClient);\n      \n      assertEquals(\"slave isMaster?\", \n                   \"false\", details.get(\"isMaster\"));\n      assertEquals(\"slave isSlave?\", \n                   \"true\", details.get(\"isSlave\"));\n      assertNotNull(\"slave has slave section\", \n                    details.get(\"slave\"));\n    }\n\n    SolrInstance repeater = null;\n    JettySolrRunner repeaterJetty = null;\n    SolrServer repeaterClient = null;\n    try {\n      repeater = new SolrInstance(\"repeater\", masterJetty.getLocalPort());\n      repeater.setUp();\n      repeaterJetty = createJetty(repeater);\n      repeaterClient = createNewSolrServer(repeaterJetty.getLocalPort());\n\n      \n      NamedList<Object> details = getDetails(repeaterClient);\n      \n      assertEquals(\"repeater isMaster?\", \n                   \"true\", details.get(\"isMaster\"));\n      assertEquals(\"repeater isSlave?\", \n                   \"true\", details.get(\"isSlave\"));\n      assertNotNull(\"repeater has master section\", \n                    details.get(\"master\"));\n      assertNotNull(\"repeater has slave section\", \n                    details.get(\"slave\"));\n\n    } finally {\n      try { \n        if (repeaterJetty != null) repeaterJetty.stop(); \n      } catch (Exception e) { /* :NOOP: */ }\n      try { \n        if (repeater != null) repeater.tearDown();\n      } catch (Exception e) { /* :NOOP: */ }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"1bf853f0385a540ee0fb220fd272f2c362432294":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1bf853f0385a540ee0fb220fd272f2c362432294"]},"commit2Childs":{"1bf853f0385a540ee0fb220fd272f2c362432294":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["1bf853f0385a540ee0fb220fd272f2c362432294"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}