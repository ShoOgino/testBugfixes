{"path":"solr/core/src/java/org/apache/solr/cloud/overseer/ZkStateWriter#enqueueUpdate(ClusterState,ZkWriteCommand).mjava","commits":[{"id":"24a5da2a0d397ff29f3de8f6cf451d3412c2509a","date":1417276391,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/ZkStateWriter#enqueueUpdate(ClusterState,ZkWriteCommand).mjava","pathOld":"/dev/null","sourceNew":"  public ClusterState enqueueUpdate(ClusterState prevState, ZkWriteCommand cmd) {\n    if (cmd == NO_OP) return prevState;\n\n    if (cmd.collection == null) {\n      isClusterStateModified = true;\n      clusterState = prevState.copyWith(singletonMap(cmd.name, (DocCollection) null));\n      updates.put(cmd.name, null);\n    } else {\n      if (cmd.collection.getStateFormat() > 1) {\n        updates.put(cmd.name, cmd.collection);\n      } else {\n        isClusterStateModified = true;\n      }\n      clusterState = prevState.copyWith(singletonMap(cmd.name, cmd.collection));\n    }\n    return clusterState;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3717889cd0547a234e5fb8db6934848a727cdf19","date":1417289098,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/ZkStateWriter#enqueueUpdate(ClusterState,ZkWriteCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/overseer/ZkStateWriter#enqueueUpdate(ClusterState,ZkWriteCommand).mjava","sourceNew":"  public ClusterState enqueueUpdate(ClusterState prevState, ZkWriteCommand cmd) {\n    if (cmd == NO_OP) return prevState;\n\n    if (cmd.collection == null) {\n      isClusterStateModified = true;\n      clusterState = prevState.copyWith(cmd.name, (DocCollection) null);\n      updates.put(cmd.name, null);\n    } else {\n      if (cmd.collection.getStateFormat() > 1) {\n        updates.put(cmd.name, cmd.collection);\n      } else {\n        isClusterStateModified = true;\n      }\n      clusterState = prevState.copyWith(cmd.name, cmd.collection);\n    }\n    return clusterState;\n  }\n\n","sourceOld":"  public ClusterState enqueueUpdate(ClusterState prevState, ZkWriteCommand cmd) {\n    if (cmd == NO_OP) return prevState;\n\n    if (cmd.collection == null) {\n      isClusterStateModified = true;\n      clusterState = prevState.copyWith(singletonMap(cmd.name, (DocCollection) null));\n      updates.put(cmd.name, null);\n    } else {\n      if (cmd.collection.getStateFormat() > 1) {\n        updates.put(cmd.name, cmd.collection);\n      } else {\n        isClusterStateModified = true;\n      }\n      clusterState = prevState.copyWith(singletonMap(cmd.name, cmd.collection));\n    }\n    return clusterState;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"584c1ee8712b5af28075d98028ccab111d6eeda2","date":1417444624,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/ZkStateWriter#enqueueUpdate(ClusterState,ZkWriteCommand).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/overseer/ZkStateWriter#enqueueUpdate(ClusterState,ZkWriteCommand).mjava","sourceNew":"  public ClusterState enqueueUpdate(ClusterState prevState, ZkWriteCommand cmd) throws KeeperException, InterruptedException {\n    if (cmd == NO_OP) return prevState;\n\n    if (maybeFlushBefore(cmd)) {\n      // we must update the prev state to the new one\n      prevState = clusterState = writePendingUpdates();\n    }\n\n    if (cmd.collection == null) {\n      isClusterStateModified = true;\n      clusterState = prevState.copyWith(cmd.name, null);\n      updates.put(cmd.name, null);\n    } else {\n      if (cmd.collection.getStateFormat() > 1) {\n        updates.put(cmd.name, cmd.collection);\n      } else {\n        isClusterStateModified = true;\n      }\n      clusterState = prevState.copyWith(cmd.name, cmd.collection);\n    }\n\n    if (maybeFlushAfter(cmd)) {\n      return writePendingUpdates();\n    }\n\n    return clusterState;\n  }\n\n","sourceOld":"  public ClusterState enqueueUpdate(ClusterState prevState, ZkWriteCommand cmd) {\n    if (cmd == NO_OP) return prevState;\n\n    if (cmd.collection == null) {\n      isClusterStateModified = true;\n      clusterState = prevState.copyWith(cmd.name, (DocCollection) null);\n      updates.put(cmd.name, null);\n    } else {\n      if (cmd.collection.getStateFormat() > 1) {\n        updates.put(cmd.name, cmd.collection);\n      } else {\n        isClusterStateModified = true;\n      }\n      clusterState = prevState.copyWith(cmd.name, cmd.collection);\n    }\n    return clusterState;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9088bc86d5a0e967da50b566ea1dd0c5458ba6f5","date":1418915621,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/overseer/ZkStateWriter#enqueueUpdate(ClusterState,ZkWriteCommand,ZkWriteCallback).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/overseer/ZkStateWriter#enqueueUpdate(ClusterState,ZkWriteCommand).mjava","sourceNew":"  public ClusterState enqueueUpdate(ClusterState prevState, ZkWriteCommand cmd, ZkWriteCallback callback) throws Exception {\n    if (cmd == NO_OP) return prevState;\n\n    if (maybeFlushBefore(cmd)) {\n      // we must update the prev state to the new one\n      prevState = clusterState = writePendingUpdates();\n      if (callback != null) {\n        callback.onWrite();\n      }\n    }\n\n    if (callback != null) {\n      callback.onEnqueue();\n    }\n\n    if (cmd.collection == null) {\n      isClusterStateModified = true;\n      clusterState = prevState.copyWith(cmd.name, null);\n      updates.put(cmd.name, null);\n    } else {\n      if (cmd.collection.getStateFormat() > 1) {\n        updates.put(cmd.name, cmd.collection);\n      } else {\n        isClusterStateModified = true;\n      }\n      clusterState = prevState.copyWith(cmd.name, cmd.collection);\n    }\n\n    if (maybeFlushAfter(cmd)) {\n      ClusterState state = writePendingUpdates();\n      if (callback != null) {\n        callback.onWrite();\n      }\n      return state;\n    }\n\n    return clusterState;\n  }\n\n","sourceOld":"  public ClusterState enqueueUpdate(ClusterState prevState, ZkWriteCommand cmd) throws KeeperException, InterruptedException {\n    if (cmd == NO_OP) return prevState;\n\n    if (maybeFlushBefore(cmd)) {\n      // we must update the prev state to the new one\n      prevState = clusterState = writePendingUpdates();\n    }\n\n    if (cmd.collection == null) {\n      isClusterStateModified = true;\n      clusterState = prevState.copyWith(cmd.name, null);\n      updates.put(cmd.name, null);\n    } else {\n      if (cmd.collection.getStateFormat() > 1) {\n        updates.put(cmd.name, cmd.collection);\n      } else {\n        isClusterStateModified = true;\n      }\n      clusterState = prevState.copyWith(cmd.name, cmd.collection);\n    }\n\n    if (maybeFlushAfter(cmd)) {\n      return writePendingUpdates();\n    }\n\n    return clusterState;\n  }\n\n","bugFix":null,"bugIntro":["1e5f642aea415d0cbee35d1b3208b193a62d7f15"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"24a5da2a0d397ff29f3de8f6cf451d3412c2509a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9088bc86d5a0e967da50b566ea1dd0c5458ba6f5":["584c1ee8712b5af28075d98028ccab111d6eeda2"],"584c1ee8712b5af28075d98028ccab111d6eeda2":["3717889cd0547a234e5fb8db6934848a727cdf19"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3717889cd0547a234e5fb8db6934848a727cdf19":["24a5da2a0d397ff29f3de8f6cf451d3412c2509a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9088bc86d5a0e967da50b566ea1dd0c5458ba6f5"]},"commit2Childs":{"24a5da2a0d397ff29f3de8f6cf451d3412c2509a":["3717889cd0547a234e5fb8db6934848a727cdf19"],"9088bc86d5a0e967da50b566ea1dd0c5458ba6f5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["24a5da2a0d397ff29f3de8f6cf451d3412c2509a"],"584c1ee8712b5af28075d98028ccab111d6eeda2":["9088bc86d5a0e967da50b566ea1dd0c5458ba6f5"],"3717889cd0547a234e5fb8db6934848a727cdf19":["584c1ee8712b5af28075d98028ccab111d6eeda2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}