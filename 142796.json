{"path":"lucene/facet/src/java/org/apache/lucene/facet/RandomSamplingFacetsCollector#amortizeFacetCounts(FacetResult,FacetsConfig,IndexSearcher).mjava","commits":[{"id":"2428b3de33c400750a32591679fd9ee6d6d706dc","date":1395315031,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/RandomSamplingFacetsCollector#amortizeFacetCounts(FacetResult,FacetsConfig,IndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Note: if you use a counting {@link Facets} implementation, you can amortize the\n   * sampled counts by calling this method. Uses the {@link FacetsConfig} and\n   * the {@link IndexSearcher} to determine the upper bound for each facet value.\n   */\n  public FacetResult amortizeFacetCounts(FacetResult res, FacetsConfig config, IndexSearcher searcher) throws IOException {\n    if (res == null || totalHits <= sampleSize) {\n      return res;\n    }\n    \n    LabelAndValue[] fixedLabelValues = new LabelAndValue[res.labelValues.length];\n    IndexReader reader = searcher.getIndexReader();\n    DimConfig dimConfig = config.getDimConfig(res.dim);\n    \n    // +2 to prepend dimension, append child label\n    String[] childPath = new String[res.path.length + 2];\n    childPath[0] = res.dim;\n    \n    System.arraycopy(res.path, 0, childPath, 1, res.path.length); // reuse\n    \n    for (int i = 0; i < res.labelValues.length; i++) {\n      childPath[res.path.length + 1] = res.labelValues[i].label;\n      String fullPath = FacetsConfig.pathToString(childPath, childPath.length);\n      int max = reader.docFreq(new Term(dimConfig.indexFieldName, fullPath));\n      int correctedCount = (int) (res.labelValues[i].value.doubleValue() / samplingRate);\n      correctedCount = Math.min(max, correctedCount);\n      fixedLabelValues[i] = new LabelAndValue(res.labelValues[i].label, correctedCount);\n    }\n    \n    // cap the total count on the total number of non-deleted documents in the reader\n    int correctedTotalCount = res.value.intValue();\n    if (correctedTotalCount > 0) {\n      correctedTotalCount = Math.min(reader.numDocs(), (int) (res.value.doubleValue() / samplingRate));\n    }\n    \n    return new FacetResult(res.dim, res.path, correctedTotalCount, fixedLabelValues, res.childCount);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2428b3de33c400750a32591679fd9ee6d6d706dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2428b3de33c400750a32591679fd9ee6d6d706dc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2428b3de33c400750a32591679fd9ee6d6d706dc"],"2428b3de33c400750a32591679fd9ee6d6d706dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}