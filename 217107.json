{"path":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","pathOld":"/dev/null","sourceNew":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public int readVInt() throws IOException {\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a37a7b0a78003a4b0171c6c70384c2a70c686670","date":1289859534,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","sourceNew":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public final int readVInt() throws IOException {\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public int readVInt() throws IOException {\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","sourceNew":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public final int readVInt() throws IOException {\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public int readVInt() throws IOException {\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","sourceNew":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public final int readVInt() throws IOException {\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public int readVInt() throws IOException {\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","sourceNew":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public int readVInt() throws IOException {\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public final int readVInt() throws IOException {\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","sourceNew":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public int readVInt() throws IOException {\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public final int readVInt() throws IOException {\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","sourceNew":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public int readVInt() throws IOException {\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public final int readVInt() throws IOException {\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4963c64955c4dcac8d4067aacd07a97e9308c482","date":1300558381,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","sourceNew":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public int readVInt() throws IOException {\n    /* This is the original code of this method,\n     * but a Hotspot bug (see LUCENE-2975) corrupts the for-loop if\n     * readByte() is inlined. So the loop was unwinded!\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n    */\n    byte b = readByte();\n    int i = b & 0x7F;\n    if ((b & 0x80) == 0) return i;\n    b = readByte();\n    i |= (b & 0x7F) << 7;\n    if ((b & 0x80) == 0) return i;\n    b = readByte();\n    i |= (b & 0x7F) << 14;\n    if ((b & 0x80) == 0) return i;\n    b = readByte();\n    i |= (b & 0x7F) << 21;\n    if ((b & 0x80) == 0) return i;\n    b = readByte();\n    assert (b & 0x80) == 0;\n    return i | ((b & 0x7F) << 28);\n  }\n\n","sourceOld":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public int readVInt() throws IOException {\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","sourceNew":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public int readVInt() throws IOException {\n    /* This is the original code of this method,\n     * but a Hotspot bug (see LUCENE-2975) corrupts the for-loop if\n     * readByte() is inlined. So the loop was unwinded!\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n    */\n    byte b = readByte();\n    int i = b & 0x7F;\n    if ((b & 0x80) == 0) return i;\n    b = readByte();\n    i |= (b & 0x7F) << 7;\n    if ((b & 0x80) == 0) return i;\n    b = readByte();\n    i |= (b & 0x7F) << 14;\n    if ((b & 0x80) == 0) return i;\n    b = readByte();\n    i |= (b & 0x7F) << 21;\n    if ((b & 0x80) == 0) return i;\n    b = readByte();\n    assert (b & 0x80) == 0;\n    return i | ((b & 0x7F) << 28);\n  }\n\n","sourceOld":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public int readVInt() throws IOException {\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","sourceNew":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public int readVInt() throws IOException {\n    /* This is the original code of this method,\n     * but a Hotspot bug (see LUCENE-2975) corrupts the for-loop if\n     * readByte() is inlined. So the loop was unwinded!\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n    */\n    byte b = readByte();\n    int i = b & 0x7F;\n    if ((b & 0x80) == 0) return i;\n    b = readByte();\n    i |= (b & 0x7F) << 7;\n    if ((b & 0x80) == 0) return i;\n    b = readByte();\n    i |= (b & 0x7F) << 14;\n    if ((b & 0x80) == 0) return i;\n    b = readByte();\n    i |= (b & 0x7F) << 21;\n    if ((b & 0x80) == 0) return i;\n    b = readByte();\n    assert (b & 0x80) == 0;\n    return i | ((b & 0x7F) << 28);\n  }\n\n","sourceOld":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public int readVInt() throws IOException {\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/DataInput#readVInt().mjava","sourceNew":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public int readVInt() throws IOException {\n    /* This is the original code of this method,\n     * but a Hotspot bug (see LUCENE-2975) corrupts the for-loop if\n     * readByte() is inlined. So the loop was unwinded!\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n    */\n    byte b = readByte();\n    int i = b & 0x7F;\n    if ((b & 0x80) == 0) return i;\n    b = readByte();\n    i |= (b & 0x7F) << 7;\n    if ((b & 0x80) == 0) return i;\n    b = readByte();\n    i |= (b & 0x7F) << 14;\n    if ((b & 0x80) == 0) return i;\n    b = readByte();\n    i |= (b & 0x7F) << 21;\n    if ((b & 0x80) == 0) return i;\n    b = readByte();\n    assert (b & 0x80) == 0;\n    return i | ((b & 0x7F) << 28);\n  }\n\n","sourceOld":"  /** Reads an int stored in variable-length format.  Reads between one and\n   * five bytes.  Smaller values take fewer bytes.  Negative numbers are not\n   * supported.\n   * @see DataOutput#writeVInt(int)\n   */\n  public int readVInt() throws IOException {\n    /* This is the original code of this method,\n     * but a Hotspot bug (see LUCENE-2975) corrupts the for-loop if\n     * readByte() is inlined. So the loop was unwinded!\n    byte b = readByte();\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      b = readByte();\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n    */\n    byte b = readByte();\n    int i = b & 0x7F;\n    if ((b & 0x80) == 0) return i;\n    b = readByte();\n    i |= (b & 0x7F) << 7;\n    if ((b & 0x80) == 0) return i;\n    b = readByte();\n    i |= (b & 0x7F) << 14;\n    if ((b & 0x80) == 0) return i;\n    b = readByte();\n    i |= (b & 0x7F) << 21;\n    if ((b & 0x80) == 0) return i;\n    b = readByte();\n    assert (b & 0x80) == 0;\n    return i | ((b & 0x7F) << 28);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a37a7b0a78003a4b0171c6c70384c2a70c686670":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","a37a7b0a78003a4b0171c6c70384c2a70c686670"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4963c64955c4dcac8d4067aacd07a97e9308c482"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["a37a7b0a78003a4b0171c6c70384c2a70c686670"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","a37a7b0a78003a4b0171c6c70384c2a70c686670"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b1add9ddc0005b07550d4350720aac22dc9886b3"],"4963c64955c4dcac8d4067aacd07a97e9308c482":["b1add9ddc0005b07550d4350720aac22dc9886b3"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["e79a6d080bdd5b2a8f56342cf571b5476de04180","4963c64955c4dcac8d4067aacd07a97e9308c482"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["29ef99d61cda9641b6250bf9567329a6e65f901d","4963c64955c4dcac8d4067aacd07a97e9308c482"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","b1add9ddc0005b07550d4350720aac22dc9886b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"a37a7b0a78003a4b0171c6c70384c2a70c686670":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","b1add9ddc0005b07550d4350720aac22dc9886b3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a37a7b0a78003a4b0171c6c70384c2a70c686670","9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["e79a6d080bdd5b2a8f56342cf571b5476de04180","4963c64955c4dcac8d4067aacd07a97e9308c482","29ef99d61cda9641b6250bf9567329a6e65f901d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"4963c64955c4dcac8d4067aacd07a97e9308c482":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}