{"path":"solr/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        if( configdir.exists() && configdir.isDirectory() ) {\n          for( String file : configdir.list() ) {\n            hide.add( file.toUpperCase() );\n          }\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase() );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n  } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","sourceNew":null,"sourceOld":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        if( configdir.exists() && configdir.isDirectory() ) {\n          for( String file : configdir.list() ) {\n            hide.add( file.toUpperCase() );\n          }\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase() );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","sourceNew":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        if( configdir.exists() && configdir.isDirectory() ) {\n          for( String file : configdir.list() ) {\n            hide.add( file.toUpperCase() );\n          }\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase() );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n  } \n\n","sourceOld":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        if( configdir.exists() && configdir.isDirectory() ) {\n          for( String file : configdir.list() ) {\n            hide.add( file.toUpperCase() );\n          }\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase() );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        if( configdir.exists() && configdir.isDirectory() ) {\n          for( String file : configdir.list() ) {\n            hide.add( file.toUpperCase() );\n          }\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase() );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n  } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b375ac28473e1310fa9ea99d95e9c6001e3719d5","date":1274116690,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","sourceNew":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        if( configdir.exists() && configdir.isDirectory() ) {\n          for( String file : configdir.list() ) {\n            hide.add( file.toUpperCase(Locale.ENGLISH) );\n          }\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase(Locale.ENGLISH) );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n  } \n\n","sourceOld":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        if( configdir.exists() && configdir.isDirectory() ) {\n          for( String file : configdir.list() ) {\n            hide.add( file.toUpperCase() );\n          }\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase() );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0aea57ab530d174e645bf6e14d04db1e243e13d7","date":1274216848,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","sourceNew":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        if( configdir.exists() && configdir.isDirectory() ) {\n          for( String file : configdir.list() ) {\n            hide.add( file.toUpperCase(Locale.ENGLISH) );\n          }\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase(Locale.ENGLISH) );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n\n    if (!solrConfig.getBool(\"abortOnConfigurationError\",true))\n      throw new SolrException(ErrorCode.SERVER_ERROR,\n                              \"Setting abortOnConfigurationError==false is no longer supported\");\n    if (null != solrConfig.getVal(\"abortOnConfigurationError\", false))\n      log.warn(\"The abortOnConfigurationError option is no longer supported \"+\n               \"in solrconfig.xml.  Setting it has no effect.\");\n    \n  }\n\n","sourceOld":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        if( configdir.exists() && configdir.isDirectory() ) {\n          for( String file : configdir.list() ) {\n            hide.add( file.toUpperCase(Locale.ENGLISH) );\n          }\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase(Locale.ENGLISH) );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n  } \n\n","bugFix":["04ec3320f0c14445c62d0eeff30995f8704138b7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43adc163640856c8b07e4cf1b2046c9af56d3ae7","date":1286989273,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","sourceNew":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n\n        for (String file : solrConfig.getResourceLoader().listConfigDir()) {\n          hide.add(file.toUpperCase(Locale.ENGLISH));\n        }    \n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase(Locale.ENGLISH) );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n  } \n\n","sourceOld":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        if( configdir.exists() && configdir.isDirectory() ) {\n          for( String file : configdir.list() ) {\n            hide.add( file.toUpperCase(Locale.ENGLISH) );\n          }\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase(Locale.ENGLISH) );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n\n    if (!solrConfig.getBool(\"abortOnConfigurationError\",true))\n      throw new SolrException(ErrorCode.SERVER_ERROR,\n                              \"Setting abortOnConfigurationError==false is no longer supported\");\n    if (null != solrConfig.getVal(\"abortOnConfigurationError\", false))\n      log.warn(\"The abortOnConfigurationError option is no longer supported \"+\n               \"in solrconfig.xml.  Setting it has no effect.\");\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","sourceNew":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n\n        for (String file : solrConfig.getResourceLoader().listConfigDir()) {\n          hide.add(file.toUpperCase(Locale.ENGLISH));\n        }    \n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase(Locale.ENGLISH) );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n  } \n\n","sourceOld":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        if( configdir.exists() && configdir.isDirectory() ) {\n          for( String file : configdir.list() ) {\n            hide.add( file.toUpperCase(Locale.ENGLISH) );\n          }\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase(Locale.ENGLISH) );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n\n    if (!solrConfig.getBool(\"abortOnConfigurationError\",true))\n      throw new SolrException(ErrorCode.SERVER_ERROR,\n                              \"Setting abortOnConfigurationError==false is no longer supported\");\n    if (null != solrConfig.getVal(\"abortOnConfigurationError\", false))\n      log.warn(\"The abortOnConfigurationError option is no longer supported \"+\n               \"in solrconfig.xml.  Setting it has no effect.\");\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","sourceNew":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n\n        for (String file : solrConfig.getResourceLoader().listConfigDir()) {\n          hide.add(file.toUpperCase(Locale.ENGLISH));\n        }    \n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase(Locale.ENGLISH) );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n  } \n\n","sourceOld":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        if( configdir.exists() && configdir.isDirectory() ) {\n          for( String file : configdir.list() ) {\n            hide.add( file.toUpperCase(Locale.ENGLISH) );\n          }\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase(Locale.ENGLISH) );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n\n    if (!solrConfig.getBool(\"abortOnConfigurationError\",true))\n      throw new SolrException(ErrorCode.SERVER_ERROR,\n                              \"Setting abortOnConfigurationError==false is no longer supported\");\n    if (null != solrConfig.getVal(\"abortOnConfigurationError\", false))\n      log.warn(\"The abortOnConfigurationError option is no longer supported \"+\n               \"in solrconfig.xml.  Setting it has no effect.\");\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","sourceNew":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n\n        for (String file : solrConfig.getResourceLoader().listConfigDir()) {\n          hide.add(file.toUpperCase(Locale.ENGLISH));\n        }    \n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase(Locale.ENGLISH) );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n  } \n\n","sourceOld":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n\n        for (String file : solrConfig.getResourceLoader().listConfigDir()) {\n          hide.add(file.toUpperCase(Locale.ENGLISH));\n        }    \n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase(Locale.ENGLISH) );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","sourceNew":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n\n        for (String file : solrConfig.getResourceLoader().listConfigDir()) {\n          hide.add(file.toUpperCase(Locale.ENGLISH));\n        }    \n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase(Locale.ENGLISH) );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n  } \n\n","sourceOld":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n\n        for (String file : solrConfig.getResourceLoader().listConfigDir()) {\n          hide.add(file.toUpperCase(Locale.ENGLISH));\n        }    \n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase(Locale.ENGLISH) );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","sourceNew":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n\n        for (String file : solrConfig.getResourceLoader().listConfigDir()) {\n          hide.add(file.toUpperCase(Locale.ENGLISH));\n        }    \n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase(Locale.ENGLISH) );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n  } \n\n","sourceOld":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n\n        for (String file : solrConfig.getResourceLoader().listConfigDir()) {\n          hide.add(file.toUpperCase(Locale.ENGLISH));\n        }    \n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase(Locale.ENGLISH) );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"43adc163640856c8b07e4cf1b2046c9af56d3ae7":["0aea57ab530d174e645bf6e14d04db1e243e13d7"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["43adc163640856c8b07e4cf1b2046c9af56d3ae7","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["0aea57ab530d174e645bf6e14d04db1e243e13d7","43adc163640856c8b07e4cf1b2046c9af56d3ae7"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"0aea57ab530d174e645bf6e14d04db1e243e13d7":["b375ac28473e1310fa9ea99d95e9c6001e3719d5"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["43adc163640856c8b07e4cf1b2046c9af56d3ae7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b375ac28473e1310fa9ea99d95e9c6001e3719d5":["1da8d55113b689b06716246649de6f62430f15c0"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["43adc163640856c8b07e4cf1b2046c9af56d3ae7"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["0aea57ab530d174e645bf6e14d04db1e243e13d7","43adc163640856c8b07e4cf1b2046c9af56d3ae7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"43adc163640856c8b07e4cf1b2046c9af56d3ae7":["c26f00b574427b55127e869b935845554afde1fa","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"1da8d55113b689b06716246649de6f62430f15c0":["b375ac28473e1310fa9ea99d95e9c6001e3719d5"],"0aea57ab530d174e645bf6e14d04db1e243e13d7":["43adc163640856c8b07e4cf1b2046c9af56d3ae7","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"b375ac28473e1310fa9ea99d95e9c6001e3719d5":["0aea57ab530d174e645bf6e14d04db1e243e13d7"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a258fbb26824fd104ed795e5d9033d2d040049ee","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}