{"path":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#finishDocument().mjava","commits":[{"id":"6c18273ea5b3974d2f30117f46f1ae416c28f727","date":1279708040,"type":1,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#finishDocument().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriterPerThread#finishDocument().mjava","sourceNew":"  public DocumentsWriterPerThread.DocWriter finishDocument() {\n    // If there were any stored fields in this doc, doc will\n    // be non-null; else it's null.\n    try {\n      return doc;\n    } finally {\n      doc = null;\n    }\n  }\n\n","sourceOld":"  public DocumentsWriter.DocWriter finishDocument() {\n    // If there were any stored fields in this doc, doc will\n    // be non-null; else it's null.\n    try {\n      return doc;\n    } finally {\n      doc = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"833a7987bc1c94455fde83e3311f72bddedcfb93","date":1279951470,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#finishDocument().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#finishDocument().mjava","sourceNew":"  void finishDocument() throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n\n    initFieldsWriter();\n    fill(docState.docID);\n  \n    if (fieldsWriter != null && numStoredFields > 0) {  \n      fieldsWriter.startDocument(numStoredFields);\n      for (int i = 0; i < numStoredFields; i++) {\n        fieldsWriter.writeField(fieldNumbers[i], storedFields[i]);\n      }\n      lastDocID++;\n    }\n    \n    reset();\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread.DocWriter finishDocument() {\n    // If there were any stored fields in this doc, doc will\n    // be non-null; else it's null.\n    try {\n      return doc;\n    } finally {\n      doc = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#finishDocument().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#finishDocument().mjava","sourceNew":"  void finishDocument() throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n\n    initFieldsWriter();\n    fill(docState.docID);\n\n    if (fieldsWriter != null && numStoredFields > 0) {\n      fieldsWriter.startDocument(numStoredFields);\n      for (int i = 0; i < numStoredFields; i++) {\n        fieldsWriter.writeField(fieldNumbers[i], storedFields[i]);\n      }\n      lastDocID++;\n    }\n\n    reset();\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","sourceOld":"  void finishDocument() throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n\n    initFieldsWriter();\n    fill(docState.docID);\n  \n    if (fieldsWriter != null && numStoredFields > 0) {  \n      fieldsWriter.startDocument(numStoredFields);\n      for (int i = 0; i < numStoredFields; i++) {\n        fieldsWriter.writeField(fieldNumbers[i], storedFields[i]);\n      }\n      lastDocID++;\n    }\n    \n    reset();\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#finishDocument().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#finishDocument(PerDoc).mjava","sourceNew":"  void finishDocument() throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n\n    initFieldsWriter();\n    fill(docState.docID);\n\n    if (fieldsWriter != null && numStoredFields > 0) {\n      fieldsWriter.startDocument(numStoredFields);\n      for (int i = 0; i < numStoredFields; i++) {\n        fieldsWriter.writeField(fieldNumbers[i], storedFields[i]);\n      }\n      lastDocID++;\n    }\n\n    reset();\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","sourceOld":"  synchronized void finishDocument(PerDoc perDoc) throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n    initFieldsWriter();\n\n    fill(perDoc.docID);\n\n    // Append stored fields to the real FieldsWriter:\n    fieldsWriter.flushDocument(perDoc.numStoredFields, perDoc.fdt);\n    lastDocID++;\n    perDoc.reset();\n    free(perDoc);\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#finishDocument().mjava","pathOld":"/dev/null","sourceNew":"  void finishDocument() throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n\n    initFieldsWriter();\n    fill(docState.docID);\n\n    if (fieldsWriter != null && numStoredFields > 0) {\n      fieldsWriter.startDocument(numStoredFields);\n      for (int i = 0; i < numStoredFields; i++) {\n        fieldsWriter.writeField(fieldNumbers[i], storedFields[i]);\n      }\n      lastDocID++;\n    }\n\n    reset();\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#finishDocument().mjava","pathOld":"/dev/null","sourceNew":"  void finishDocument() throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n\n    initFieldsWriter();\n    fill(docState.docID);\n\n    if (fieldsWriter != null && numStoredFields > 0) {\n      fieldsWriter.startDocument(numStoredFields);\n      for (int i = 0; i < numStoredFields; i++) {\n        fieldsWriter.writeField(fieldNumbers[i], storedFields[i]);\n      }\n      lastDocID++;\n    }\n\n    reset();\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6f9be74ca7baaef11857ad002cad40419979516","date":1309449808,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#finishDocument().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#finishDocument().mjava","sourceNew":"  void finishDocument() throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n\n    initFieldsWriter(IOContext.DEFAULT);\n    fill(docState.docID);\n\n    if (fieldsWriter != null && numStoredFields > 0) {\n      fieldsWriter.startDocument(numStoredFields);\n      for (int i = 0; i < numStoredFields; i++) {\n        fieldsWriter.writeField(fieldNumbers[i], storedFields[i]);\n      }\n      lastDocID++;\n    }\n\n    reset();\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","sourceOld":"  void finishDocument() throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n\n    initFieldsWriter();\n    fill(docState.docID);\n\n    if (fieldsWriter != null && numStoredFields > 0) {\n      fieldsWriter.startDocument(numStoredFields);\n      for (int i = 0; i < numStoredFields; i++) {\n        fieldsWriter.writeField(fieldNumbers[i], storedFields[i]);\n      }\n      lastDocID++;\n    }\n\n    reset();\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#finishDocument().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#finishDocument().mjava","sourceNew":"  void finishDocument() throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n\n    initFieldsWriter(IOContext.DEFAULT);\n    fill(docState.docID);\n\n    if (fieldsWriter != null && numStoredFields > 0) {\n      fieldsWriter.startDocument(numStoredFields);\n      for (int i = 0; i < numStoredFields; i++) {\n        fieldsWriter.writeField(fieldNumbers[i], storedFields[i]);\n      }\n      lastDocID++;\n    }\n\n    reset();\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","sourceOld":"  void finishDocument() throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n\n    initFieldsWriter();\n    fill(docState.docID);\n\n    if (fieldsWriter != null && numStoredFields > 0) {\n      fieldsWriter.startDocument(numStoredFields);\n      for (int i = 0; i < numStoredFields; i++) {\n        fieldsWriter.writeField(fieldNumbers[i], storedFields[i]);\n      }\n      lastDocID++;\n    }\n\n    reset();\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#finishDocument().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#finishDocument().mjava","sourceNew":"  void finishDocument() throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n\n    initFieldsWriter(IOContext.DEFAULT);\n    fill(docState.docID);\n\n    if (fieldsWriter != null && numStoredFields > 0) {\n      fieldsWriter.startDocument(numStoredFields);\n      for (int i = 0; i < numStoredFields; i++) {\n        fieldsWriter.writeField(fieldNumbers[i], storedFields[i]);\n      }\n      lastDocID++;\n    }\n\n    reset();\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","sourceOld":"  void finishDocument() throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n\n    initFieldsWriter();\n    fill(docState.docID);\n\n    if (fieldsWriter != null && numStoredFields > 0) {\n      fieldsWriter.startDocument(numStoredFields);\n      for (int i = 0; i < numStoredFields; i++) {\n        fieldsWriter.writeField(fieldNumbers[i], storedFields[i]);\n      }\n      lastDocID++;\n    }\n\n    reset();\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/StoredFieldsConsumer#finishDocument().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#finishDocument().mjava","sourceNew":"  void finishDocument() throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n\n    initFieldsWriter(IOContext.DEFAULT);\n    fill(docState.docID);\n\n    if (fieldsWriter != null && numStoredFields > 0) {\n      fieldsWriter.startDocument(numStoredFields);\n      for (int i = 0; i < numStoredFields; i++) {\n        fieldsWriter.writeField(fieldNumbers[i], storedFields[i]);\n      }\n      lastDocID++;\n    }\n\n    reset();\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","sourceOld":"  void finishDocument() throws IOException {\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument start\");\n\n    initFieldsWriter(IOContext.DEFAULT);\n    fill(docState.docID);\n\n    if (fieldsWriter != null && numStoredFields > 0) {\n      fieldsWriter.startDocument(numStoredFields);\n      for (int i = 0; i < numStoredFields; i++) {\n        fieldsWriter.writeField(fieldNumbers[i], storedFields[i]);\n      }\n      lastDocID++;\n    }\n\n    reset();\n    assert docWriter.writer.testPoint(\"StoredFieldsWriter.finishDocument end\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"6c18273ea5b3974d2f30117f46f1ae416c28f727":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"06584e6e98d592b34e1329b384182f368d2025e8":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b6f9be74ca7baaef11857ad002cad40419979516":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["a3776dccca01c11e7046323cfad46a3b4a471233","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["b3e06be49006ecac364d39d12b9c9f74882f9b9f","b6f9be74ca7baaef11857ad002cad40419979516"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["833a7987bc1c94455fde83e3311f72bddedcfb93","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06584e6e98d592b34e1329b384182f368d2025e8"],"833a7987bc1c94455fde83e3311f72bddedcfb93":["6c18273ea5b3974d2f30117f46f1ae416c28f727"]},"commit2Childs":{"6c18273ea5b3974d2f30117f46f1ae416c28f727":["833a7987bc1c94455fde83e3311f72bddedcfb93"],"06584e6e98d592b34e1329b384182f368d2025e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6c18273ea5b3974d2f30117f46f1ae416c28f727","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","b3e06be49006ecac364d39d12b9c9f74882f9b9f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b6f9be74ca7baaef11857ad002cad40419979516":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["a3776dccca01c11e7046323cfad46a3b4a471233","b6f9be74ca7baaef11857ad002cad40419979516","135621f3a0670a9394eb563224a3b76cc4dddc0f","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["06584e6e98d592b34e1329b384182f368d2025e8","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"833a7987bc1c94455fde83e3311f72bddedcfb93":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}