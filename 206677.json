{"path":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#verifyException(SolrClient,ConfigSetAdminRequest,String).mjava","commits":[{"id":"2209af2c265d2258ec4b29c8cc78622d36994a15","date":1440641916,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#verifyException(SolrClient,ConfigSetAdminRequest,String).mjava","pathOld":"/dev/null","sourceNew":"  private void verifyException(SolrClient solrClient, ConfigSetAdminRequest request,\n      String errorContains) throws Exception {\n    try {\n      solrClient.request(request);\n      Assert.fail(\"Expected exception\");\n    } catch (Exception e) {\n      assertTrue(\"Expected exception message to contain: \" + errorContains\n          + \" got: \" + e.getMessage(), e.getMessage().contains(errorContains));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92f789dbd1886e4b468e61b0def88b29a3f55228","date":1533844010,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#verifyException(SolrClient,ConfigSetAdminRequest,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#verifyException(SolrClient,ConfigSetAdminRequest,String).mjava","sourceNew":"  private void verifyException(SolrClient solrClient, ConfigSetAdminRequest request,\n      String errorContains) throws Exception {\n    Exception e = expectThrows(Exception.class, () -> solrClient.request(request));\n    assertTrue(\"Expected exception message to contain: \" + errorContains\n        + \" got: \" + e.getMessage(), e.getMessage().contains(errorContains));\n  }\n\n","sourceOld":"  private void verifyException(SolrClient solrClient, ConfigSetAdminRequest request,\n      String errorContains) throws Exception {\n    try {\n      solrClient.request(request);\n      Assert.fail(\"Expected exception\");\n    } catch (Exception e) {\n      assertTrue(\"Expected exception message to contain: \" + errorContains\n          + \" got: \" + e.getMessage(), e.getMessage().contains(errorContains));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#verifyException(SolrClient,ConfigSetAdminRequest,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#verifyException(SolrClient,ConfigSetAdminRequest,String).mjava","sourceNew":"  private void verifyException(SolrClient solrClient,\n                               @SuppressWarnings({\"rawtypes\"})ConfigSetAdminRequest request,\n      String errorContains) throws Exception {\n    Exception e = expectThrows(Exception.class, () -> solrClient.request(request));\n    assertTrue(\"Expected exception message to contain: \" + errorContains\n        + \" got: \" + e.getMessage(), e.getMessage().contains(errorContains));\n  }\n\n","sourceOld":"  private void verifyException(SolrClient solrClient, ConfigSetAdminRequest request,\n      String errorContains) throws Exception {\n    Exception e = expectThrows(Exception.class, () -> solrClient.request(request));\n    assertTrue(\"Expected exception message to contain: \" + errorContains\n        + \" got: \" + e.getMessage(), e.getMessage().contains(errorContains));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7612891097d4751617c396cdd7a092833799147","date":1600707827,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#verifyException(SolrClient,ConfigSetAdminRequest,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#verifyException(SolrClient,ConfigSetAdminRequest,String).mjava","sourceNew":"  private void verifyException(SolrClient solrClient,\n                               @SuppressWarnings({\"rawtypes\"})ConfigSetAdminRequest request,\n      String errorContains) throws Exception {\n    ignoreException(errorContains);\n    Exception e = expectThrows(Exception.class, () -> solrClient.request(request));\n    assertTrue(\"Expected exception message to contain: \" + errorContains\n        + \" got: \" + e.getMessage(), e.getMessage().contains(errorContains));\n    unIgnoreException(errorContains);\n  }\n\n","sourceOld":"  private void verifyException(SolrClient solrClient,\n                               @SuppressWarnings({\"rawtypes\"})ConfigSetAdminRequest request,\n      String errorContains) throws Exception {\n    Exception e = expectThrows(Exception.class, () -> solrClient.request(request));\n    assertTrue(\"Expected exception message to contain: \" + errorContains\n        + \" got: \" + e.getMessage(), e.getMessage().contains(errorContains));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7612891097d4751617c396cdd7a092833799147":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["92f789dbd1886e4b468e61b0def88b29a3f55228"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"92f789dbd1886e4b468e61b0def88b29a3f55228":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c7612891097d4751617c396cdd7a092833799147"]},"commit2Childs":{"c7612891097d4751617c396cdd7a092833799147":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["c7612891097d4751617c396cdd7a092833799147"],"2209af2c265d2258ec4b29c8cc78622d36994a15":["92f789dbd1886e4b468e61b0def88b29a3f55228"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"92f789dbd1886e4b468e61b0def88b29a3f55228":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}