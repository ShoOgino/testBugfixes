{"path":"lucene/monitor/src/test/org/apache/lucene/monitor/TestBooleanTermExtractor#testMatchAllDocsIsOnlyQuery().mjava","commits":[{"id":"7c529b189e09de25455d82ebd7260748cf11ee14","date":1560415257,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/monitor/src/test/org/apache/lucene/monitor/TestBooleanTermExtractor#testMatchAllDocsIsOnlyQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testMatchAllDocsIsOnlyQuery() {\n    // Set up - single MatchAllDocsQuery clause in a BooleanQuery\n    Query q = MonitorTestBase.parse(\"+*:*\");\n    assertTrue(q instanceof BooleanQuery);\n    BooleanClause clause = ((BooleanQuery)q).iterator().next();\n    assertTrue(clause.getQuery() instanceof MatchAllDocsQuery);\n    assertEquals(BooleanClause.Occur.MUST, clause.getOccur());\n\n    Set<Term> terms = collectTerms(q);\n    assertEquals(1, terms.size());\n    Term t = terms.iterator().next();\n    assertEquals(TermFilteredPresearcher.ANYTOKEN_FIELD, t.field());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c529b189e09de25455d82ebd7260748cf11ee14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c529b189e09de25455d82ebd7260748cf11ee14"]},"commit2Childs":{"7c529b189e09de25455d82ebd7260748cf11ee14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c529b189e09de25455d82ebd7260748cf11ee14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}