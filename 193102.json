{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/NodeAddedTrigger#restoreState(AutoScaling.Trigger[NodeAddedEvent]).mjava","commits":[{"id":"a7699e9ae4550ba2a55335a64ae7de9d5d9de39e","date":1493894873,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/NodeAddedTrigger#restoreState(AutoScaling.Trigger[NodeAddedEvent]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void restoreState(AutoScaling.Trigger<NodeAddedEvent> old) {\n    assert old.isClosed();\n    if (old instanceof NodeAddedTrigger) {\n      NodeAddedTrigger that = (NodeAddedTrigger) old;\n      assert this.name.equals(that.name);\n      this.lastLiveNodes = new HashSet<>(that.lastLiveNodes);\n      this.nodeNameVsTimeAdded = new HashMap<>(that.nodeNameVsTimeAdded);\n    } else  {\n      throw new SolrException(SolrException.ErrorCode.INVALID_STATE,\n          \"Unable to restore state from an unknown type of trigger\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"464244264804e3f981bf1fb4b732516d8d62dbc2","date":1495736161,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/NodeAddedTrigger#restoreState(AutoScaling.Trigger).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/NodeAddedTrigger#restoreState(AutoScaling.Trigger[NodeAddedEvent]).mjava","sourceNew":"  @Override\n  public void restoreState(AutoScaling.Trigger old) {\n    assert old.isClosed();\n    if (old instanceof NodeAddedTrigger) {\n      NodeAddedTrigger that = (NodeAddedTrigger) old;\n      assert this.name.equals(that.name);\n      this.lastLiveNodes = new HashSet<>(that.lastLiveNodes);\n      this.nodeNameVsTimeAdded = new HashMap<>(that.nodeNameVsTimeAdded);\n    } else  {\n      throw new SolrException(SolrException.ErrorCode.INVALID_STATE,\n          \"Unable to restore state from an unknown type of trigger\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void restoreState(AutoScaling.Trigger<NodeAddedEvent> old) {\n    assert old.isClosed();\n    if (old instanceof NodeAddedTrigger) {\n      NodeAddedTrigger that = (NodeAddedTrigger) old;\n      assert this.name.equals(that.name);\n      this.lastLiveNodes = new HashSet<>(that.lastLiveNodes);\n      this.nodeNameVsTimeAdded = new HashMap<>(that.nodeNameVsTimeAdded);\n    } else  {\n      throw new SolrException(SolrException.ErrorCode.INVALID_STATE,\n          \"Unable to restore state from an unknown type of trigger\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5531f16a602ef350b6c9adfb08ebaa13a60fe3db","date":1495756318,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/NodeAddedTrigger#restoreState(AutoScaling.Trigger).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/NodeAddedTrigger#restoreState(AutoScaling.Trigger[NodeAddedEvent]).mjava","sourceNew":"  @Override\n  public void restoreState(AutoScaling.Trigger old) {\n    assert old.isClosed();\n    if (old instanceof NodeAddedTrigger) {\n      NodeAddedTrigger that = (NodeAddedTrigger) old;\n      assert this.name.equals(that.name);\n      this.lastLiveNodes = new HashSet<>(that.lastLiveNodes);\n      this.nodeNameVsTimeAdded = new HashMap<>(that.nodeNameVsTimeAdded);\n    } else  {\n      throw new SolrException(SolrException.ErrorCode.INVALID_STATE,\n          \"Unable to restore state from an unknown type of trigger\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void restoreState(AutoScaling.Trigger<NodeAddedEvent> old) {\n    assert old.isClosed();\n    if (old instanceof NodeAddedTrigger) {\n      NodeAddedTrigger that = (NodeAddedTrigger) old;\n      assert this.name.equals(that.name);\n      this.lastLiveNodes = new HashSet<>(that.lastLiveNodes);\n      this.nodeNameVsTimeAdded = new HashMap<>(that.nodeNameVsTimeAdded);\n    } else  {\n      throw new SolrException(SolrException.ErrorCode.INVALID_STATE,\n          \"Unable to restore state from an unknown type of trigger\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a7699e9ae4550ba2a55335a64ae7de9d5d9de39e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5531f16a602ef350b6c9adfb08ebaa13a60fe3db":["a7699e9ae4550ba2a55335a64ae7de9d5d9de39e","464244264804e3f981bf1fb4b732516d8d62dbc2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"464244264804e3f981bf1fb4b732516d8d62dbc2":["a7699e9ae4550ba2a55335a64ae7de9d5d9de39e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a7699e9ae4550ba2a55335a64ae7de9d5d9de39e":["5531f16a602ef350b6c9adfb08ebaa13a60fe3db","464244264804e3f981bf1fb4b732516d8d62dbc2"],"5531f16a602ef350b6c9adfb08ebaa13a60fe3db":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a7699e9ae4550ba2a55335a64ae7de9d5d9de39e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"464244264804e3f981bf1fb4b732516d8d62dbc2":["5531f16a602ef350b6c9adfb08ebaa13a60fe3db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5531f16a602ef350b6c9adfb08ebaa13a60fe3db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}