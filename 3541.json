{"path":"lucene/core/src/test/org/apache/lucene/util/TestSparseFixedBitSet#testApproximateCardinalityOnDenseSet().mjava","commits":[{"id":"59ce67ef5584d0d65a576a6bbe06322cc84eb9b0","date":1412077943,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestSparseFixedBitSet#testApproximateCardinalityOnDenseSet().mjava","pathOld":"/dev/null","sourceNew":"  public void testApproximateCardinalityOnDenseSet() {\n    // this tests that things work as expected in approximateCardinality when\n    // all longs are different than 0, in which case we divide by zero\n    final int numDocs = 70;//TestUtil.nextInt(random(), 1, 10000);\n    final SparseFixedBitSet set = new SparseFixedBitSet(numDocs);\n    for (int i = 0; i < set.length(); ++i) {\n      set.set(i);\n    }\n    assertEquals(numDocs, set.approximateCardinality());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestSparseFixedBitSet#testApproximateCardinalityOnDenseSet().mjava","pathOld":"/dev/null","sourceNew":"  public void testApproximateCardinalityOnDenseSet() {\n    // this tests that things work as expected in approximateCardinality when\n    // all longs are different than 0, in which case we divide by zero\n    final int numDocs = 70;//TestUtil.nextInt(random(), 1, 10000);\n    final SparseFixedBitSet set = new SparseFixedBitSet(numDocs);\n    for (int i = 0; i < set.length(); ++i) {\n      set.set(i);\n    }\n    assertEquals(numDocs, set.approximateCardinality());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e","date":1414135939,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestSparseFixedBitSet#testApproximateCardinalityOnDenseSet().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestSparseFixedBitSet#testApproximateCardinalityOnDenseSet().mjava","sourceNew":"  public void testApproximateCardinalityOnDenseSet() {\n    // this tests that things work as expected in approximateCardinality when\n    // all longs are different than 0, in which case we divide by zero\n    final int numDocs = TestUtil.nextInt(random(), 1, 10000);\n    final SparseFixedBitSet set = new SparseFixedBitSet(numDocs);\n    for (int i = 0; i < set.length(); ++i) {\n      set.set(i);\n    }\n    assertEquals(numDocs, set.approximateCardinality());\n  }\n\n","sourceOld":"  public void testApproximateCardinalityOnDenseSet() {\n    // this tests that things work as expected in approximateCardinality when\n    // all longs are different than 0, in which case we divide by zero\n    final int numDocs = 70;//TestUtil.nextInt(random(), 1, 10000);\n    final SparseFixedBitSet set = new SparseFixedBitSet(numDocs);\n    for (int i = 0; i < set.length(); ++i) {\n      set.set(i);\n    }\n    assertEquals(numDocs, set.approximateCardinality());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","59ce67ef5584d0d65a576a6bbe06322cc84eb9b0"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["59ce67ef5584d0d65a576a6bbe06322cc84eb9b0"],"59ce67ef5584d0d65a576a6bbe06322cc84eb9b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d9a47902d6207303f5ed3e7aaca62ca33433af66","59ce67ef5584d0d65a576a6bbe06322cc84eb9b0"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"59ce67ef5584d0d65a576a6bbe06322cc84eb9b0":["d9a47902d6207303f5ed3e7aaca62ca33433af66","0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}