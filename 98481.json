{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#assertGroupOrder(Tuple,int...).mjava","commits":[{"id":"f00f1c5fad501b66705121feb623f8cfbb6712f9","date":1431347838,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#assertGroupOrder(Tuple,int...).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/StreamingTest#assertGroupOrder(Tuple,int...).mjava","sourceNew":"  protected boolean assertGroupOrder(Tuple tuple, int... ids) throws Exception {\n    List group = (List)tuple.get(\"tuples\");\n    int i=0;\n    for(int val : ids) {\n      Map t = (Map)group.get(i);\n      Long tip = (Long)t.get(\"id\");\n      if(tip.intValue() != val) {\n        throw new Exception(\"Found value:\"+tip.intValue()+\" expecting:\"+val);\n      }\n      ++i;\n    }\n    return true;\n  }\n\n","sourceOld":"  protected boolean assertGroupOrder(Tuple tuple, int... ids) throws Exception {\n    List group = (List)tuple.get(\"tuples\");\n    int i=0;\n    for(int val : ids) {\n      Map t = (Map)group.get(i);\n      Long tip = (Long)t.get(\"id\");\n      if(tip.intValue() != val) {\n        throw new Exception(\"Found value:\"+tip.intValue()+\" expecting:\"+val);\n      }\n      ++i;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#assertGroupOrder(Tuple,int...).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamingTest#assertGroupOrder(Tuple,int...).mjava","sourceNew":"  protected boolean assertGroupOrder(Tuple tuple, int... ids) throws Exception {\n    @SuppressWarnings({\"rawtypes\"})\n    List group = (List)tuple.get(\"tuples\");\n    int i=0;\n    for(int val : ids) {\n      @SuppressWarnings({\"rawtypes\"})\n      Map t = (Map)group.get(i);\n      Long tip = (Long)t.get(\"id\");\n      if(tip.intValue() != val) {\n        throw new Exception(\"Found value:\"+tip.intValue()+\" expecting:\"+val);\n      }\n      ++i;\n    }\n    return true;\n  }\n\n","sourceOld":"  protected boolean assertGroupOrder(Tuple tuple, int... ids) throws Exception {\n    List group = (List)tuple.get(\"tuples\");\n    int i=0;\n    for(int val : ids) {\n      Map t = (Map)group.get(i);\n      Long tip = (Long)t.get(\"id\");\n      if(tip.intValue() != val) {\n        throw new Exception(\"Found value:\"+tip.intValue()+\" expecting:\"+val);\n      }\n      ++i;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"f00f1c5fad501b66705121feb623f8cfbb6712f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f00f1c5fad501b66705121feb623f8cfbb6712f9":["9ba1b632c041956c93c41aa1143d16a567014891"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}