{"path":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","commits":[{"id":"3f11f04f49f9196e0fb2981a23ae69b346f17212","date":1120325997,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"/dev/null","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), false);\n      IndexReader reader = IndexReader.open(dir);\n      try {\n        reader.delete(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexReader.unlock(dir);\t\t// this should not be done in the real world! \n      reader.delete(0);\n      reader.close();\n      writer.close();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d72db039743bd6a2da9be6306f57c71654ca1bf6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), false);\n      IndexReader reader = IndexReader.open(dir);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexReader.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), false);\n      IndexReader reader = IndexReader.open(dir);\n      try {\n        reader.delete(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexReader.unlock(dir);\t\t// this should not be done in the real world! \n      reader.delete(0);\n      reader.close();\n      writer.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d72db039743bd6a2da9be6306f57c71654ca1bf6","date":1173217255,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), false);\n      IndexReader reader = IndexReader.open(dir);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexReader.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), false);\n      IndexReader reader = IndexReader.open(dir);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexReader.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n    }\n\n","bugFix":["3f11f04f49f9196e0fb2981a23ae69b346f17212"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0018e7a0579df5d3de71d0bd878322a7abef04d9","date":1202242049,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), false, IndexWriter.MaxFieldLength.LIMITED);\n      IndexReader reader = IndexReader.open(dir);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexReader.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true);\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), false);\n      IndexReader reader = IndexReader.open(dir);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexReader.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), false, IndexWriter.MaxFieldLength.LIMITED);\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexReader.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), false, IndexWriter.MaxFieldLength.LIMITED);\n      IndexReader reader = IndexReader.open(dir);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexReader.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), false, IndexWriter.MaxFieldLength.LIMITED);\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexReader.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), false, IndexWriter.MaxFieldLength.LIMITED);\n      IndexReader reader = IndexReader.open(dir);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexReader.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8","date":1254593002,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), false, IndexWriter.MaxFieldLength.LIMITED);\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), false, IndexWriter.MaxFieldLength.LIMITED);\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexReader.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), false, IndexWriter.MaxFieldLength.LIMITED);\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), false, IndexWriter.MaxFieldLength.LIMITED);\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), false, IndexWriter.MaxFieldLength.LIMITED);\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), false, IndexWriter.MaxFieldLength.LIMITED);\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), false, IndexWriter.MaxFieldLength.LIMITED);\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), false, IndexWriter.MaxFieldLength.LIMITED);\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), false, IndexWriter.MaxFieldLength.LIMITED);\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#testLock().mjava","sourceNew":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testLock() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n      addDocumentWithFields(writer);\n      writer.close();\n      writer  = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.APPEND));\n      IndexReader reader = IndexReader.open(dir, false);\n      try {\n        reader.deleteDocument(0);\n        fail(\"expected lock\");\n      } catch(IOException e) {\n        // expected exception\n      }\n      IndexWriter.unlock(dir);\t\t// this should not be done in the real world! \n      reader.deleteDocument(0);\n      reader.close();\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"0a046c0c310bc77931fc8441bd920053b607dd14":["0018e7a0579df5d3de71d0bd878322a7abef04d9","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["d72db039743bd6a2da9be6306f57c71654ca1bf6"],"3f11f04f49f9196e0fb2981a23ae69b346f17212":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["3f11f04f49f9196e0fb2981a23ae69b346f17212"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8":["0a046c0c310bc77931fc8441bd920053b607dd14"],"d72db039743bd6a2da9be6306f57c71654ca1bf6":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0a046c0c310bc77931fc8441bd920053b607dd14":["8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["0a046c0c310bc77931fc8441bd920053b607dd14","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"3f11f04f49f9196e0fb2981a23ae69b346f17212":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["d72db039743bd6a2da9be6306f57c71654ca1bf6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3f11f04f49f9196e0fb2981a23ae69b346f17212"],"d72db039743bd6a2da9be6306f57c71654ca1bf6":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"8ebf3b77e5581d3b403ec1799f461a9b46fc6bf8":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}