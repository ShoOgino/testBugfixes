{"path":"solr/core/src/java/org/apache/solr/cloud/api/collections/MaintainRoutedAliasCmd#remoteInvoke(CollectionsHandler,String,String).mjava","commits":[{"id":"1b6eb78cb29a08063ed0ed2816d8817ede89fa90","date":1518149772,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/MaintainRoutedAliasCmd#remoteInvoke(CollectionsHandler,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/RoutedAliasCreateCollectionCmd#remoteInvoke(CollectionsHandler,String,String).mjava","sourceNew":"  /** Invokes this command from the client.  If there's a problem it will throw an exception. */\n  public static NamedList remoteInvoke(CollectionsHandler collHandler, String aliasName, String mostRecentCollName)\n      throws Exception {\n    final String operation = CollectionParams.CollectionAction.MAINTAINROUTEDALIAS.toLower();\n    Map<String, Object> msg = new HashMap<>();\n    msg.put(Overseer.QUEUE_OPERATION, operation);\n    msg.put(CollectionParams.NAME, aliasName);\n    msg.put(MaintainRoutedAliasCmd.IF_MOST_RECENT_COLL_NAME, mostRecentCollName);\n    final SolrResponse rsp = collHandler.sendToOCPQueue(new ZkNodeProps(msg));\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp.getResponse();\n  }\n\n","sourceOld":"  /** Invokes this command from the client.  If there's a problem it will throw an exception. */\n  public static NamedList remoteInvoke(CollectionsHandler collHandler, String aliasName, String mostRecentCollName)\n      throws Exception {\n    final String operation = CollectionParams.CollectionAction.ROUTEDALIAS_CREATECOLL.toLower();\n    Map<String, Object> msg = new HashMap<>();\n    msg.put(Overseer.QUEUE_OPERATION, operation);\n    msg.put(CollectionParams.NAME, aliasName);\n    msg.put(RoutedAliasCreateCollectionCmd.IF_MOST_RECENT_COLL_NAME, mostRecentCollName);\n    final SolrResponse rsp = collHandler.sendToOCPQueue(new ZkNodeProps(msg));\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp.getResponse();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"849083f8095b1ffaff05a66e0b1e024617b9968d","date":1536291524,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/MaintainRoutedAliasCmd#remoteInvoke(CollectionsHandler,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/MaintainRoutedAliasCmd#remoteInvoke(CollectionsHandler,String,String).mjava","sourceNew":"  /**\n   * Invokes this command from the client.  If there's a problem it will throw an exception.\n   * Please note that is important to never add async to this invocation. This method must\n   * block (up to the standard OCP timeout) to prevent large batches of add's from sending a message\n   * to the overseer for every document added in TimeRoutedAliasUpdateProcessor.\n   */\n  public static NamedList remoteInvoke(CollectionsHandler collHandler, String aliasName, String mostRecentCollName)\n      throws Exception {\n    final String operation = CollectionParams.CollectionAction.MAINTAINROUTEDALIAS.toLower();\n    Map<String, Object> msg = new HashMap<>();\n    msg.put(Overseer.QUEUE_OPERATION, operation);\n    msg.put(CollectionParams.NAME, aliasName);\n    msg.put(MaintainRoutedAliasCmd.IF_MOST_RECENT_COLL_NAME, mostRecentCollName);\n    final SolrResponse rsp = collHandler.sendToOCPQueue(new ZkNodeProps(msg));\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp.getResponse();\n  }\n\n","sourceOld":"  /** Invokes this command from the client.  If there's a problem it will throw an exception. */\n  public static NamedList remoteInvoke(CollectionsHandler collHandler, String aliasName, String mostRecentCollName)\n      throws Exception {\n    final String operation = CollectionParams.CollectionAction.MAINTAINROUTEDALIAS.toLower();\n    Map<String, Object> msg = new HashMap<>();\n    msg.put(Overseer.QUEUE_OPERATION, operation);\n    msg.put(CollectionParams.NAME, aliasName);\n    msg.put(MaintainRoutedAliasCmd.IF_MOST_RECENT_COLL_NAME, mostRecentCollName);\n    final SolrResponse rsp = collHandler.sendToOCPQueue(new ZkNodeProps(msg));\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp.getResponse();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b627755385655c7cd3fb296f17593658805cf4d5","date":1552455143,"type":6,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/MaintainCategoryRoutedAliasCmd#remoteInvoke(CollectionsHandler,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/MaintainRoutedAliasCmd#remoteInvoke(CollectionsHandler,String,String).mjava","sourceNew":"  /**\n   * Invokes this command from the client.  If there's a problem it will throw an exception.\n   * Please note that is important to never add async to this invocation. This method must\n   * block (up to the standard OCP timeout) to prevent large batches of add's from sending a message\n   * to the overseer for every document added in RoutedAliasUpdateProcessor.\n   */\n  @SuppressWarnings(\"WeakerAccess\")\n  public static void remoteInvoke(CollectionsHandler collHandler, String aliasName, String categoryCollection)\n      throws Exception {\n    final String operation = CollectionParams.CollectionAction.MAINTAINCATEGORYROUTEDALIAS.toLower();\n    Map<String, Object> msg = new HashMap<>();\n    msg.put(Overseer.QUEUE_OPERATION, operation);\n    msg.put(CollectionParams.NAME, aliasName);\n    msg.put(IF_CATEGORY_COLLECTION_NOT_FOUND, categoryCollection);\n    final SolrResponse rsp = collHandler.sendToOCPQueue(new ZkNodeProps(msg));\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n  }\n\n","sourceOld":"  /**\n   * Invokes this command from the client.  If there's a problem it will throw an exception.\n   * Please note that is important to never add async to this invocation. This method must\n   * block (up to the standard OCP timeout) to prevent large batches of add's from sending a message\n   * to the overseer for every document added in TimeRoutedAliasUpdateProcessor.\n   */\n  public static NamedList remoteInvoke(CollectionsHandler collHandler, String aliasName, String mostRecentCollName)\n      throws Exception {\n    final String operation = CollectionParams.CollectionAction.MAINTAINROUTEDALIAS.toLower();\n    Map<String, Object> msg = new HashMap<>();\n    msg.put(Overseer.QUEUE_OPERATION, operation);\n    msg.put(CollectionParams.NAME, aliasName);\n    msg.put(MaintainRoutedAliasCmd.IF_MOST_RECENT_COLL_NAME, mostRecentCollName);\n    final SolrResponse rsp = collHandler.sendToOCPQueue(new ZkNodeProps(msg));\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp.getResponse();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b627755385655c7cd3fb296f17593658805cf4d5","date":1552455143,"type":5,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/MaintainTimeRoutedAliasCmd#remoteInvoke(CollectionsHandler,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/MaintainRoutedAliasCmd#remoteInvoke(CollectionsHandler,String,String).mjava","sourceNew":"  /**\n   * Invokes this command from the client.  If there's a problem it will throw an exception.\n   * Please note that is important to never add async to this invocation. This method must\n   * block (up to the standard OCP timeout) to prevent large batches of add's from sending a message\n   * to the overseer for every document added in RoutedAliasUpdateProcessor.\n   */\n  public static NamedList remoteInvoke(CollectionsHandler collHandler, String aliasName, String mostRecentCollName)\n      throws Exception {\n    final String operation = CollectionParams.CollectionAction.MAINTAINTIMEROUTEDALIAS.toLower();\n    Map<String, Object> msg = new HashMap<>();\n    msg.put(Overseer.QUEUE_OPERATION, operation);\n    msg.put(CollectionParams.NAME, aliasName);\n    msg.put(MaintainTimeRoutedAliasCmd.IF_MOST_RECENT_COLL_NAME, mostRecentCollName);\n    final SolrResponse rsp = collHandler.sendToOCPQueue(new ZkNodeProps(msg));\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp.getResponse();\n  }\n\n","sourceOld":"  /**\n   * Invokes this command from the client.  If there's a problem it will throw an exception.\n   * Please note that is important to never add async to this invocation. This method must\n   * block (up to the standard OCP timeout) to prevent large batches of add's from sending a message\n   * to the overseer for every document added in TimeRoutedAliasUpdateProcessor.\n   */\n  public static NamedList remoteInvoke(CollectionsHandler collHandler, String aliasName, String mostRecentCollName)\n      throws Exception {\n    final String operation = CollectionParams.CollectionAction.MAINTAINROUTEDALIAS.toLower();\n    Map<String, Object> msg = new HashMap<>();\n    msg.put(Overseer.QUEUE_OPERATION, operation);\n    msg.put(CollectionParams.NAME, aliasName);\n    msg.put(MaintainRoutedAliasCmd.IF_MOST_RECENT_COLL_NAME, mostRecentCollName);\n    final SolrResponse rsp = collHandler.sendToOCPQueue(new ZkNodeProps(msg));\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp.getResponse();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eebf1b080530bdd7572c4927fb2bb52334b7a86","date":1563199033,"type":1,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/MaintainRoutedAliasCmd#remoteInvoke(CollectionsHandler,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/MaintainCategoryRoutedAliasCmd#remoteInvoke(CollectionsHandler,String,String).mjava","sourceNew":"  /**\n   * Invokes this command from the client.  If there's a problem it will throw an exception.\n   * Please note that is important to never add async to this invocation. This method must\n   * block (up to the standard OCP timeout) to prevent large batches of add's from sending a message\n   * to the overseer for every document added in RoutedAliasUpdateProcessor.\n   */\n  static void remoteInvoke(CollectionsHandler collHandler, String aliasName, String targetCol)\n      throws Exception {\n    final String operation = CollectionParams.CollectionAction.MAINTAINROUTEDALIAS.toLower();\n    Map<String, Object> msg = new HashMap<>();\n    msg.put(Overseer.QUEUE_OPERATION, operation);\n    msg.put(CollectionParams.NAME, aliasName);\n    msg.put(MaintainRoutedAliasCmd.ROUTED_ALIAS_TARGET_COL, targetCol);\n    final SolrResponse rsp = collHandler.sendToOCPQueue(new ZkNodeProps(msg));\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n  }\n\n","sourceOld":"  /**\n   * Invokes this command from the client.  If there's a problem it will throw an exception.\n   * Please note that is important to never add async to this invocation. This method must\n   * block (up to the standard OCP timeout) to prevent large batches of add's from sending a message\n   * to the overseer for every document added in RoutedAliasUpdateProcessor.\n   */\n  @SuppressWarnings(\"WeakerAccess\")\n  public static void remoteInvoke(CollectionsHandler collHandler, String aliasName, String categoryCollection)\n      throws Exception {\n    final String operation = CollectionParams.CollectionAction.MAINTAINCATEGORYROUTEDALIAS.toLower();\n    Map<String, Object> msg = new HashMap<>();\n    msg.put(Overseer.QUEUE_OPERATION, operation);\n    msg.put(CollectionParams.NAME, aliasName);\n    msg.put(IF_CATEGORY_COLLECTION_NOT_FOUND, categoryCollection);\n    final SolrResponse rsp = collHandler.sendToOCPQueue(new ZkNodeProps(msg));\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1b6eb78cb29a08063ed0ed2816d8817ede89fa90":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"849083f8095b1ffaff05a66e0b1e024617b9968d":["1b6eb78cb29a08063ed0ed2816d8817ede89fa90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b627755385655c7cd3fb296f17593658805cf4d5":["849083f8095b1ffaff05a66e0b1e024617b9968d"],"1eebf1b080530bdd7572c4927fb2bb52334b7a86":["b627755385655c7cd3fb296f17593658805cf4d5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1eebf1b080530bdd7572c4927fb2bb52334b7a86"]},"commit2Childs":{"1b6eb78cb29a08063ed0ed2816d8817ede89fa90":["849083f8095b1ffaff05a66e0b1e024617b9968d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1b6eb78cb29a08063ed0ed2816d8817ede89fa90"],"849083f8095b1ffaff05a66e0b1e024617b9968d":["b627755385655c7cd3fb296f17593658805cf4d5"],"b627755385655c7cd3fb296f17593658805cf4d5":["1eebf1b080530bdd7572c4927fb2bb52334b7a86"],"1eebf1b080530bdd7572c4927fb2bb52334b7a86":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}