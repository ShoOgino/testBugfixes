{"path":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(AtomicReader,String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(AtomicReader,String).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(AtomicReader,String).mjava","sourceNew":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link DocTerms} instance, providing a\n   * method to retrieve the term (as a BytesRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public DocTermsIndex getTermsIndex (AtomicReader reader, String field)\n  throws IOException;\n\n","sourceOld":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link DocTerms} instance, providing a\n   * method to retrieve the term (as a BytesRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public DocTermsIndex getTermsIndex (AtomicReader reader, String field)\n  throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34a3cb4eb36d5e20abde21f4d8fe5442588e7e03","date":1353235561,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(AtomicReader,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(AtomicReader,String).mjava","sourceNew":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link DocTerms} instance, providing a\n   * method to retrieve the term (as a BytesRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public DocTermsIndex getTermsIndex (AtomicReader reader, String field) throws IOException;\n\n","sourceOld":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link DocTerms} instance, providing a\n   * method to retrieve the term (as a BytesRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public DocTermsIndex getTermsIndex (AtomicReader reader, String field)\n  throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9d7e5f3aa5935964617824d1f9b2599ddb334464","date":1353762831,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(AtomicReader,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(AtomicReader,String).mjava","sourceNew":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link DocTerms} instance, providing a\n   * method to retrieve the term (as a BytesRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public SortedDocValues getTermsIndex (AtomicReader reader, String field) throws IOException;\n\n","sourceOld":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link DocTerms} instance, providing a\n   * method to retrieve the term (as a BytesRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public DocTermsIndex getTermsIndex (AtomicReader reader, String field) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2dd9934a49477c83301120ba51827d91eb3606d5","date":1353767072,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(AtomicReader,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(AtomicReader,String).mjava","sourceNew":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link SortedDocValues} instance,\n   * providing methods to retrieve sort ordinals and terms\n   * (as a ByteRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public SortedDocValues getTermsIndex (AtomicReader reader, String field) throws IOException;\n\n","sourceOld":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link DocTerms} instance, providing a\n   * method to retrieve the term (as a BytesRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public SortedDocValues getTermsIndex (AtomicReader reader, String field) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(AtomicReader,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(AtomicReader,String).mjava","sourceNew":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link SortedDocValues} instance,\n   * providing methods to retrieve sort ordinals and terms\n   * (as a ByteRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public SortedDocValues getTermsIndex (AtomicReader reader, String field) throws IOException;\n\n","sourceOld":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link DocTerms} instance, providing a\n   * method to retrieve the term (as a BytesRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public DocTermsIndex getTermsIndex (AtomicReader reader, String field)\n  throws IOException;\n\n","bugFix":["be20f9fed1d3edcb1c84abcc39df87a90fab22df","da6d5ac19a80d65b1e864251f155d30960353b7e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2dcffe8fc78b093a5f4207f492bbae185740f6a","date":1380887572,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(AtomicReader,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(AtomicReader,String).mjava","sourceNew":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link SortedDocValues} instance,\n   * providing methods to retrieve sort ordinals and terms\n   * (as a ByteRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public SortedDocValues getTermsIndex(AtomicReader reader, String field) throws IOException;\n\n","sourceOld":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link SortedDocValues} instance,\n   * providing methods to retrieve sort ordinals and terms\n   * (as a ByteRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public SortedDocValues getTermsIndex (AtomicReader reader, String field) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCache#getTermsIndex(AtomicReader,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(AtomicReader,String).mjava","sourceNew":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link SortedDocValues} instance,\n   * providing methods to retrieve sort ordinals and terms\n   * (as a ByteRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public SortedDocValues getTermsIndex(AtomicReader reader, String field) throws IOException;\n\n","sourceOld":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link SortedDocValues} instance,\n   * providing methods to retrieve sort ordinals and terms\n   * (as a ByteRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public SortedDocValues getTermsIndex(AtomicReader reader, String field) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCache#getTermsIndex(AtomicReader,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(AtomicReader,String).mjava","sourceNew":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link SortedDocValues} instance,\n   * providing methods to retrieve sort ordinals and terms\n   * (as a ByteRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public SortedDocValues getTermsIndex(AtomicReader reader, String field) throws IOException;\n\n","sourceOld":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link SortedDocValues} instance,\n   * providing methods to retrieve sort ordinals and terms\n   * (as a ByteRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public SortedDocValues getTermsIndex(AtomicReader reader, String field) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCache#getTermsIndex(AtomicReader,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCache#getTermsIndex(AtomicReader,String).mjava","sourceNew":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link SortedDocValues} instance,\n   * providing methods to retrieve sort ordinals and terms\n   * (as a ByteRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public SortedDocValues getTermsIndex(AtomicReader reader, String field) throws IOException;\n\n","sourceOld":"  /** Checks the internal cache for an appropriate entry, and if none\n   * is found, reads the term values in <code>field</code>\n   * and returns a {@link SortedDocValues} instance,\n   * providing methods to retrieve sort ordinals and terms\n   * (as a ByteRef) per document.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the strings.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public SortedDocValues getTermsIndex(AtomicReader reader, String field) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","2dd9934a49477c83301120ba51827d91eb3606d5"],"2dd9934a49477c83301120ba51827d91eb3606d5":["9d7e5f3aa5935964617824d1f9b2599ddb334464"],"34a3cb4eb36d5e20abde21f4d8fe5442588e7e03":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["d2dcffe8fc78b093a5f4207f492bbae185740f6a","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d2dcffe8fc78b093a5f4207f492bbae185740f6a":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["34a3cb4eb36d5e20abde21f4d8fe5442588e7e03"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["d2dcffe8fc78b093a5f4207f492bbae185740f6a"],"56572ec06f1407c066d6b7399413178b33176cd8":["d2dcffe8fc78b093a5f4207f492bbae185740f6a","93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93dd449115a9247533e44bab47e8429e5dccbc6d"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["d2dcffe8fc78b093a5f4207f492bbae185740f6a"],"2dd9934a49477c83301120ba51827d91eb3606d5":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"34a3cb4eb36d5e20abde21f4d8fe5442588e7e03":["9d7e5f3aa5935964617824d1f9b2599ddb334464"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d4d69c535930b5cce125cff868d40f6373dc27d4","34a3cb4eb36d5e20abde21f4d8fe5442588e7e03"],"d2dcffe8fc78b093a5f4207f492bbae185740f6a":["93dd449115a9247533e44bab47e8429e5dccbc6d","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["2dd9934a49477c83301120ba51827d91eb3606d5"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}