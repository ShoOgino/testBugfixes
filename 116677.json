{"path":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpansOrdered#nextStartPosition().mjava","commits":[{"id":"30de45e50bdc1a79a6797f34dca6271c8866cb6e","date":1427790465,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpansOrdered#nextStartPosition().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int nextStartPosition() throws IOException {\n    if (atFirstInCurrentDoc) {\n      atFirstInCurrentDoc = false;\n      return matchStart;\n    }\n    while (true) {\n      if (oneExhaustedInCurrentDoc) {\n        matchStart = NO_MORE_POSITIONS;\n        matchEnd = NO_MORE_POSITIONS;\n        return NO_MORE_POSITIONS;\n      }\n      if (! stretchToOrder()) {\n        matchStart = NO_MORE_POSITIONS;\n        matchEnd = NO_MORE_POSITIONS;\n        return NO_MORE_POSITIONS;\n      }\n      if (shrinkToAfterShortestMatch()) { // may also leave oneExhaustedInCurrentDoc\n        return matchStart;\n      }\n      // after shortest ordered spans, or oneExhaustedInCurrentDoc\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fab172655716b96f7e42376116235017a922de3a","date":1427850611,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpansOrdered#nextStartPosition().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int nextStartPosition() throws IOException {\n    if (atFirstInCurrentDoc) {\n      atFirstInCurrentDoc = false;\n      return matchStart;\n    }\n    while (true) {\n      if (oneExhaustedInCurrentDoc) {\n        matchStart = NO_MORE_POSITIONS;\n        matchEnd = NO_MORE_POSITIONS;\n        return NO_MORE_POSITIONS;\n      }\n      if (! stretchToOrder()) {\n        matchStart = NO_MORE_POSITIONS;\n        matchEnd = NO_MORE_POSITIONS;\n        return NO_MORE_POSITIONS;\n      }\n      if (shrinkToAfterShortestMatch()) { // may also leave oneExhaustedInCurrentDoc\n        return matchStart;\n      }\n      // after shortest ordered spans, or oneExhaustedInCurrentDoc\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6ee9d8242a0cf1c4d14c2252cba08a37562c806","date":1433925249,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpansOrdered#nextStartPosition().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpansOrdered#nextStartPosition().mjava","sourceNew":"  @Override\n  public int nextStartPosition() throws IOException {\n    if (atFirstInCurrentDoc) {\n      atFirstInCurrentDoc = false;\n      return matchStart;\n    }\n    oneExhaustedInCurrentDoc = false;\n    while (subSpans[0].nextStartPosition() != NO_MORE_POSITIONS && !oneExhaustedInCurrentDoc) {\n      if (stretchToOrder() && matchWidth <= allowedSlop) {\n        return matchStart;\n      }\n    }\n    return matchStart = matchEnd = NO_MORE_POSITIONS;\n  }\n\n","sourceOld":"  @Override\n  public int nextStartPosition() throws IOException {\n    if (atFirstInCurrentDoc) {\n      atFirstInCurrentDoc = false;\n      return matchStart;\n    }\n    while (true) {\n      if (oneExhaustedInCurrentDoc) {\n        matchStart = NO_MORE_POSITIONS;\n        matchEnd = NO_MORE_POSITIONS;\n        return NO_MORE_POSITIONS;\n      }\n      if (! stretchToOrder()) {\n        matchStart = NO_MORE_POSITIONS;\n        matchEnd = NO_MORE_POSITIONS;\n        return NO_MORE_POSITIONS;\n      }\n      if (shrinkToAfterShortestMatch()) { // may also leave oneExhaustedInCurrentDoc\n        return matchStart;\n      }\n      // after shortest ordered spans, or oneExhaustedInCurrentDoc\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d6ee9d8242a0cf1c4d14c2252cba08a37562c806":["30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fab172655716b96f7e42376116235017a922de3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d6ee9d8242a0cf1c4d14c2252cba08a37562c806"]},"commit2Childs":{"d6ee9d8242a0cf1c4d14c2252cba08a37562c806":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30de45e50bdc1a79a6797f34dca6271c8866cb6e","fab172655716b96f7e42376116235017a922de3a"],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["d6ee9d8242a0cf1c4d14c2252cba08a37562c806","fab172655716b96f7e42376116235017a922de3a"],"fab172655716b96f7e42376116235017a922de3a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fab172655716b96f7e42376116235017a922de3a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}