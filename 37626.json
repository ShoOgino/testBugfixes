{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.ZkRmTool#runImpl(CommandLine).mjava","commits":[{"id":"9272a617a9cbebf86be127014bbbacd7cf8f8e83","date":1467480344,"type":0,"author":"Erick","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ZkRmTool#runImpl(CommandLine).mjava","pathOld":"/dev/null","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String zkHost = getZkHost(cli);\n\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \" + cli.getOptionValue(\"zkHost\") +\n            \" is running in standalone server mode, 'zk rm' can only be used when running in SolrCloud mode.\\n\");\n      }\n      String target = cli.getOptionValue(\"path\");\n      Boolean recurse = Boolean.parseBoolean(cli.getOptionValue(\"recurse\"));\n\n      String znode = target;\n      if (target.toLowerCase(Locale.ROOT).startsWith(\"zk:\")) {\n        znode = target.substring(3);\n      }\n      if (znode.equals(\"/\")) {\n        throw new SolrServerException(\"You may not remove the root ZK node ('/')!\");\n      }\n      echo(\"\\nConnecting to ZooKeeper at \" + zkHost + \" ...\");\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (recurse == false && zkClient.getChildren(znode, null, true).size() != 0) {\n          throw new SolrServerException(\"Zookeeper node \" + znode + \" has children and recurse has NOT been specified\");\n        }\n        echo(\"Removing Zookeeper node \" + znode + \" from ZooKeeper at \" + zkHost +\n            \" recurse: \" + Boolean.toString(recurse));\n        zkClient.clean(znode);\n      } catch (Exception e) {\n        log.error(\"Could not complete rm operation for reason: \" + e.getMessage());\n        throw (e);\n      }\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ZkRmTool#runImpl(CommandLine).mjava","pathOld":"/dev/null","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String zkHost = getZkHost(cli);\n\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \" + cli.getOptionValue(\"zkHost\") +\n            \" is running in standalone server mode, 'zk rm' can only be used when running in SolrCloud mode.\\n\");\n      }\n      String target = cli.getOptionValue(\"path\");\n      Boolean recurse = Boolean.parseBoolean(cli.getOptionValue(\"recurse\"));\n\n      String znode = target;\n      if (target.toLowerCase(Locale.ROOT).startsWith(\"zk:\")) {\n        znode = target.substring(3);\n      }\n      if (znode.equals(\"/\")) {\n        throw new SolrServerException(\"You may not remove the root ZK node ('/')!\");\n      }\n      echo(\"\\nConnecting to ZooKeeper at \" + zkHost + \" ...\");\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (recurse == false && zkClient.getChildren(znode, null, true).size() != 0) {\n          throw new SolrServerException(\"Zookeeper node \" + znode + \" has children and recurse has NOT been specified\");\n        }\n        echo(\"Removing Zookeeper node \" + znode + \" from ZooKeeper at \" + zkHost +\n            \" recurse: \" + Boolean.toString(recurse));\n        zkClient.clean(znode);\n      } catch (Exception e) {\n        log.error(\"Could not complete rm operation for reason: \" + e.getMessage());\n        throw (e);\n      }\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3","date":1503399053,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ZkRmTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ZkRmTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \" + cli.getOptionValue(\"zkHost\") +\n            \" is running in standalone server mode, 'zk rm' can only be used when running in SolrCloud mode.\\n\");\n      }\n      String target = cli.getOptionValue(\"path\");\n      Boolean recurse = Boolean.parseBoolean(cli.getOptionValue(\"recurse\"));\n\n      String znode = target;\n      if (target.toLowerCase(Locale.ROOT).startsWith(\"zk:\")) {\n        znode = target.substring(3);\n      }\n      if (znode.equals(\"/\")) {\n        throw new SolrServerException(\"You may not remove the root ZK node ('/')!\");\n      }\n      echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost + \" ...\", cli);\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (recurse == false && zkClient.getChildren(znode, null, true).size() != 0) {\n          throw new SolrServerException(\"Zookeeper node \" + znode + \" has children and recurse has NOT been specified\");\n        }\n        echo(\"Removing Zookeeper node \" + znode + \" from ZooKeeper at \" + zkHost +\n            \" recurse: \" + Boolean.toString(recurse));\n        zkClient.clean(znode);\n      } catch (Exception e) {\n        log.error(\"Could not complete rm operation for reason: \" + e.getMessage());\n        throw (e);\n      }\n\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String zkHost = getZkHost(cli);\n\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \" + cli.getOptionValue(\"zkHost\") +\n            \" is running in standalone server mode, 'zk rm' can only be used when running in SolrCloud mode.\\n\");\n      }\n      String target = cli.getOptionValue(\"path\");\n      Boolean recurse = Boolean.parseBoolean(cli.getOptionValue(\"recurse\"));\n\n      String znode = target;\n      if (target.toLowerCase(Locale.ROOT).startsWith(\"zk:\")) {\n        znode = target.substring(3);\n      }\n      if (znode.equals(\"/\")) {\n        throw new SolrServerException(\"You may not remove the root ZK node ('/')!\");\n      }\n      echo(\"\\nConnecting to ZooKeeper at \" + zkHost + \" ...\");\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (recurse == false && zkClient.getChildren(znode, null, true).size() != 0) {\n          throw new SolrServerException(\"Zookeeper node \" + znode + \" has children and recurse has NOT been specified\");\n        }\n        echo(\"Removing Zookeeper node \" + znode + \" from ZooKeeper at \" + zkHost +\n            \" recurse: \" + Boolean.toString(recurse));\n        zkClient.clean(znode);\n      } catch (Exception e) {\n        log.error(\"Could not complete rm operation for reason: \" + e.getMessage());\n        throw (e);\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ZkRmTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ZkRmTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \" + cli.getOptionValue(\"zkHost\") +\n            \" is running in standalone server mode, 'zk rm' can only be used when running in SolrCloud mode.\\n\");\n      }\n      String target = cli.getOptionValue(\"path\");\n      Boolean recurse = Boolean.parseBoolean(cli.getOptionValue(\"recurse\"));\n\n      String znode = target;\n      if (target.toLowerCase(Locale.ROOT).startsWith(\"zk:\")) {\n        znode = target.substring(3);\n      }\n      if (znode.equals(\"/\")) {\n        throw new SolrServerException(\"You may not remove the root ZK node ('/')!\");\n      }\n      echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost + \" ...\", cli);\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (recurse == false && zkClient.getChildren(znode, null, true).size() != 0) {\n          throw new SolrServerException(\"Zookeeper node \" + znode + \" has children and recurse has NOT been specified\");\n        }\n        echo(\"Removing Zookeeper node \" + znode + \" from ZooKeeper at \" + zkHost +\n            \" recurse: \" + Boolean.toString(recurse));\n        zkClient.clean(znode);\n      } catch (Exception e) {\n        log.error(\"Could not complete rm operation for reason: \" + e.getMessage());\n        throw (e);\n      }\n\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String zkHost = getZkHost(cli);\n\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \" + cli.getOptionValue(\"zkHost\") +\n            \" is running in standalone server mode, 'zk rm' can only be used when running in SolrCloud mode.\\n\");\n      }\n      String target = cli.getOptionValue(\"path\");\n      Boolean recurse = Boolean.parseBoolean(cli.getOptionValue(\"recurse\"));\n\n      String znode = target;\n      if (target.toLowerCase(Locale.ROOT).startsWith(\"zk:\")) {\n        znode = target.substring(3);\n      }\n      if (znode.equals(\"/\")) {\n        throw new SolrServerException(\"You may not remove the root ZK node ('/')!\");\n      }\n      echo(\"\\nConnecting to ZooKeeper at \" + zkHost + \" ...\");\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (recurse == false && zkClient.getChildren(znode, null, true).size() != 0) {\n          throw new SolrServerException(\"Zookeeper node \" + znode + \" has children and recurse has NOT been specified\");\n        }\n        echo(\"Removing Zookeeper node \" + znode + \" from ZooKeeper at \" + zkHost +\n            \" recurse: \" + Boolean.toString(recurse));\n        zkClient.clean(znode);\n      } catch (Exception e) {\n        log.error(\"Could not complete rm operation for reason: \" + e.getMessage());\n        throw (e);\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b79a5db147a1c6f95d1625ddbc3561ef56955225","date":1528848080,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ZkRmTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ZkRmTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \" + cli.getOptionValue(\"zkHost\") +\n            \" is running in standalone server mode, 'zk rm' can only be used when running in SolrCloud mode.\\n\");\n      }\n      String target = cli.getOptionValue(\"path\");\n      Boolean recurse = Boolean.parseBoolean(cli.getOptionValue(\"recurse\"));\n\n      String znode = target;\n      if (target.toLowerCase(Locale.ROOT).startsWith(\"zk:\")) {\n        znode = target.substring(3);\n      }\n      if (znode.equals(\"/\")) {\n        throw new SolrServerException(\"You may not remove the root ZK node ('/')!\");\n      }\n      echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost + \" ...\", cli);\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (recurse == false && zkClient.getChildren(znode, null, true).size() != 0) {\n          throw new SolrServerException(\"Zookeeper node \" + znode + \" has children and recurse has NOT been specified\");\n        }\n        echo(\"Removing Zookeeper node \" + znode + \" from ZooKeeper at \" + zkHost +\n            \" recurse: \" + Boolean.toString(recurse));\n        zkClient.clean(znode);\n      } catch (Exception e) {\n        log.error(\"Could not complete rm operation for reason: \" + e.getMessage());\n        throw (e);\n      }\n\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \" + cli.getOptionValue(\"zkHost\") +\n            \" is running in standalone server mode, 'zk rm' can only be used when running in SolrCloud mode.\\n\");\n      }\n      String target = cli.getOptionValue(\"path\");\n      Boolean recurse = Boolean.parseBoolean(cli.getOptionValue(\"recurse\"));\n\n      String znode = target;\n      if (target.toLowerCase(Locale.ROOT).startsWith(\"zk:\")) {\n        znode = target.substring(3);\n      }\n      if (znode.equals(\"/\")) {\n        throw new SolrServerException(\"You may not remove the root ZK node ('/')!\");\n      }\n      echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost + \" ...\", cli);\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (recurse == false && zkClient.getChildren(znode, null, true).size() != 0) {\n          throw new SolrServerException(\"Zookeeper node \" + znode + \" has children and recurse has NOT been specified\");\n        }\n        echo(\"Removing Zookeeper node \" + znode + \" from ZooKeeper at \" + zkHost +\n            \" recurse: \" + Boolean.toString(recurse));\n        zkClient.clean(znode);\n      } catch (Exception e) {\n        log.error(\"Could not complete rm operation for reason: \" + e.getMessage());\n        throw (e);\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ZkRmTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ZkRmTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \" + cli.getOptionValue(\"zkHost\") +\n            \" is running in standalone server mode, 'zk rm' can only be used when running in SolrCloud mode.\\n\");\n      }\n      String target = cli.getOptionValue(\"path\");\n      Boolean recurse = Boolean.parseBoolean(cli.getOptionValue(\"recurse\"));\n\n      String znode = target;\n      if (target.toLowerCase(Locale.ROOT).startsWith(\"zk:\")) {\n        znode = target.substring(3);\n      }\n      if (znode.equals(\"/\")) {\n        throw new SolrServerException(\"You may not remove the root ZK node ('/')!\");\n      }\n      echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost + \" ...\", cli);\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (recurse == false && zkClient.getChildren(znode, null, true).size() != 0) {\n          throw new SolrServerException(\"Zookeeper node \" + znode + \" has children and recurse has NOT been specified\");\n        }\n        echo(\"Removing Zookeeper node \" + znode + \" from ZooKeeper at \" + zkHost +\n            \" recurse: \" + Boolean.toString(recurse));\n        zkClient.clean(znode);\n      } catch (Exception e) {\n        log.error(\"Could not complete rm operation for reason: \" + e.getMessage());\n        throw (e);\n      }\n\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \" + cli.getOptionValue(\"zkHost\") +\n            \" is running in standalone server mode, 'zk rm' can only be used when running in SolrCloud mode.\\n\");\n      }\n      String target = cli.getOptionValue(\"path\");\n      Boolean recurse = Boolean.parseBoolean(cli.getOptionValue(\"recurse\"));\n\n      String znode = target;\n      if (target.toLowerCase(Locale.ROOT).startsWith(\"zk:\")) {\n        znode = target.substring(3);\n      }\n      if (znode.equals(\"/\")) {\n        throw new SolrServerException(\"You may not remove the root ZK node ('/')!\");\n      }\n      echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost + \" ...\", cli);\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (recurse == false && zkClient.getChildren(znode, null, true).size() != 0) {\n          throw new SolrServerException(\"Zookeeper node \" + znode + \" has children and recurse has NOT been specified\");\n        }\n        echo(\"Removing Zookeeper node \" + znode + \" from ZooKeeper at \" + zkHost +\n            \" recurse: \" + Boolean.toString(recurse));\n        zkClient.clean(znode);\n      } catch (Exception e) {\n        log.error(\"Could not complete rm operation for reason: \" + e.getMessage());\n        throw (e);\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ZkRmTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ZkRmTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \" + cli.getOptionValue(\"zkHost\") +\n            \" is running in standalone server mode, 'zk rm' can only be used when running in SolrCloud mode.\\n\");\n      }\n      String target = cli.getOptionValue(\"path\");\n      Boolean recurse = Boolean.parseBoolean(cli.getOptionValue(\"recurse\"));\n\n      String znode = target;\n      if (target.toLowerCase(Locale.ROOT).startsWith(\"zk:\")) {\n        znode = target.substring(3);\n      }\n      if (znode.equals(\"/\")) {\n        throw new SolrServerException(\"You may not remove the root ZK node ('/')!\");\n      }\n      echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost + \" ...\", cli);\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (recurse == false && zkClient.getChildren(znode, null, true).size() != 0) {\n          throw new SolrServerException(\"Zookeeper node \" + znode + \" has children and recurse has NOT been specified\");\n        }\n        echo(\"Removing Zookeeper node \" + znode + \" from ZooKeeper at \" + zkHost +\n            \" recurse: \" + Boolean.toString(recurse));\n        zkClient.clean(znode);\n      } catch (Exception e) {\n        log.error(\"Could not complete rm operation for reason: \" + e.getMessage());\n        throw (e);\n      }\n\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \" + cli.getOptionValue(\"zkHost\") +\n            \" is running in standalone server mode, 'zk rm' can only be used when running in SolrCloud mode.\\n\");\n      }\n      String target = cli.getOptionValue(\"path\");\n      Boolean recurse = Boolean.parseBoolean(cli.getOptionValue(\"recurse\"));\n\n      String znode = target;\n      if (target.toLowerCase(Locale.ROOT).startsWith(\"zk:\")) {\n        znode = target.substring(3);\n      }\n      if (znode.equals(\"/\")) {\n        throw new SolrServerException(\"You may not remove the root ZK node ('/')!\");\n      }\n      echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost + \" ...\", cli);\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (recurse == false && zkClient.getChildren(znode, null, true).size() != 0) {\n          throw new SolrServerException(\"Zookeeper node \" + znode + \" has children and recurse has NOT been specified\");\n        }\n        echo(\"Removing Zookeeper node \" + znode + \" from ZooKeeper at \" + zkHost +\n            \" recurse: \" + Boolean.toString(recurse));\n        zkClient.clean(znode);\n      } catch (Exception e) {\n        log.error(\"Could not complete rm operation for reason: \" + e.getMessage());\n        throw (e);\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54faedfb0e03479a38f5ee82f2dfaeea536e9404","date":1587251295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ZkRmTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ZkRmTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \" + cli.getOptionValue(\"zkHost\") +\n            \" is running in standalone server mode, 'zk rm' can only be used when running in SolrCloud mode.\\n\");\n      }\n      String target = cli.getOptionValue(\"path\");\n      Boolean recurse = Boolean.parseBoolean(cli.getOptionValue(\"recurse\"));\n\n      String znode = target;\n      if (target.toLowerCase(Locale.ROOT).startsWith(\"zk:\")) {\n        znode = target.substring(3);\n      }\n      if (znode.equals(\"/\")) {\n        throw new SolrServerException(\"You may not remove the root ZK node ('/')!\");\n      }\n      echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost + \" ...\", cli);\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (recurse == false && zkClient.getChildren(znode, null, true).size() != 0) {\n          throw new SolrServerException(\"Zookeeper node \" + znode + \" has children and recurse has NOT been specified\");\n        }\n        echo(\"Removing Zookeeper node \" + znode + \" from ZooKeeper at \" + zkHost +\n            \" recurse: \" + Boolean.toString(recurse));\n        zkClient.clean(znode);\n      } catch (Exception e) {\n        log.error(\"Could not complete rm operation for reason: {}\", e.getMessage());\n        throw (e);\n      }\n\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \" + cli.getOptionValue(\"zkHost\") +\n            \" is running in standalone server mode, 'zk rm' can only be used when running in SolrCloud mode.\\n\");\n      }\n      String target = cli.getOptionValue(\"path\");\n      Boolean recurse = Boolean.parseBoolean(cli.getOptionValue(\"recurse\"));\n\n      String znode = target;\n      if (target.toLowerCase(Locale.ROOT).startsWith(\"zk:\")) {\n        znode = target.substring(3);\n      }\n      if (znode.equals(\"/\")) {\n        throw new SolrServerException(\"You may not remove the root ZK node ('/')!\");\n      }\n      echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost + \" ...\", cli);\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (recurse == false && zkClient.getChildren(znode, null, true).size() != 0) {\n          throw new SolrServerException(\"Zookeeper node \" + znode + \" has children and recurse has NOT been specified\");\n        }\n        echo(\"Removing Zookeeper node \" + znode + \" from ZooKeeper at \" + zkHost +\n            \" recurse: \" + Boolean.toString(recurse));\n        zkClient.clean(znode);\n      } catch (Exception e) {\n        log.error(\"Could not complete rm operation for reason: \" + e.getMessage());\n        throw (e);\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57c238f5fb83803b49b37b3a1a12224a64d47542","date":1593655679,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ZkRmTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ZkRmTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \" + cli.getOptionValue(\"zkHost\") +\n            \" is running in standalone server mode, 'zk rm' can only be used when running in SolrCloud mode.\\n\");\n      }\n      String target = cli.getOptionValue(\"path\");\n      Boolean recurse = Boolean.parseBoolean(cli.getOptionValue(\"recurse\"));\n\n      String znode = target;\n      if (target.toLowerCase(Locale.ROOT).startsWith(\"zk:\")) {\n        znode = target.substring(3);\n      }\n      if (znode.equals(\"/\")) {\n        throw new SolrServerException(\"You may not remove the root ZK node ('/')!\");\n      }\n      echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost + \" ...\", cli);\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (recurse == false && zkClient.getChildren(znode, null, true).size() != 0) {\n          throw new SolrServerException(\"Zookeeper node \" + znode + \" has children and recurse has NOT been specified\");\n        }\n        echo(\"Removing Zookeeper node \" + znode + \" from ZooKeeper at \" + zkHost +\n            \" recurse: \" + Boolean.toString(recurse));\n        zkClient.clean(znode);\n      } catch (Exception e) {\n        log.error(\"Could not complete rm operation for reason: \", e);\n        throw (e);\n      }\n\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \" + cli.getOptionValue(\"zkHost\") +\n            \" is running in standalone server mode, 'zk rm' can only be used when running in SolrCloud mode.\\n\");\n      }\n      String target = cli.getOptionValue(\"path\");\n      Boolean recurse = Boolean.parseBoolean(cli.getOptionValue(\"recurse\"));\n\n      String znode = target;\n      if (target.toLowerCase(Locale.ROOT).startsWith(\"zk:\")) {\n        znode = target.substring(3);\n      }\n      if (znode.equals(\"/\")) {\n        throw new SolrServerException(\"You may not remove the root ZK node ('/')!\");\n      }\n      echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost + \" ...\", cli);\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (recurse == false && zkClient.getChildren(znode, null, true).size() != 0) {\n          throw new SolrServerException(\"Zookeeper node \" + znode + \" has children and recurse has NOT been specified\");\n        }\n        echo(\"Removing Zookeeper node \" + znode + \" from ZooKeeper at \" + zkHost +\n            \" recurse: \" + Boolean.toString(recurse));\n        zkClient.clean(znode);\n      } catch (Exception e) {\n        log.error(\"Could not complete rm operation for reason: {}\", e.getMessage());\n        throw (e);\n      }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["b79a5db147a1c6f95d1625ddbc3561ef56955225"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["86d2df3ca94d97c62f70b0d321f5f597de2d3eb3","b79a5db147a1c6f95d1625ddbc3561ef56955225"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["9272a617a9cbebf86be127014bbbacd7cf8f8e83","86d2df3ca94d97c62f70b0d321f5f597de2d3eb3"],"9272a617a9cbebf86be127014bbbacd7cf8f8e83":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57c238f5fb83803b49b37b3a1a12224a64d47542":["54faedfb0e03479a38f5ee82f2dfaeea536e9404"],"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3":["9272a617a9cbebf86be127014bbbacd7cf8f8e83"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9272a617a9cbebf86be127014bbbacd7cf8f8e83"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57c238f5fb83803b49b37b3a1a12224a64d47542"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["86d2df3ca94d97c62f70b0d321f5f597de2d3eb3"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["86d2df3ca94d97c62f70b0d321f5f597de2d3eb3","b79a5db147a1c6f95d1625ddbc3561ef56955225"]},"commit2Childs":{"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["57c238f5fb83803b49b37b3a1a12224a64d47542"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"9272a617a9cbebf86be127014bbbacd7cf8f8e83":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","86d2df3ca94d97c62f70b0d321f5f597de2d3eb3","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9272a617a9cbebf86be127014bbbacd7cf8f8e83","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"57c238f5fb83803b49b37b3a1a12224a64d47542":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","3a7809d1d753b67f48b1a706e17034bf8b624ea3","b79a5db147a1c6f95d1625ddbc3561ef56955225","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["54faedfb0e03479a38f5ee82f2dfaeea536e9404","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","3a7809d1d753b67f48b1a706e17034bf8b624ea3","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}