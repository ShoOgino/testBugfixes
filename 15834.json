{"path":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator#RamUsageEstimator(MemoryModel,boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator#RamUsageEstimator(MemoryModel,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/RamUsageEstimator#RamUsageEstimator(MemoryModel,boolean).mjava","sourceNew":"  /**\n   * @param memoryModel MemoryModel to use for primitive object sizes.\n   * @param checkInterned check if Strings are interned and don't add to size\n   * if they are. Defaults to true but if you know the objects you are checking\n   * won't likely contain many interned Strings, it will be faster to turn off\n   * intern checking.\n   */\n  public RamUsageEstimator(MemoryModel memoryModel, boolean checkInterned) {\n    this.memoryModel = memoryModel;\n    this.checkInterned = checkInterned;\n    // Use Map rather than Set so that we can use an IdentityHashMap - not\n    // seeing an IdentityHashSet\n    seen = new IdentityHashMap<Object,Object>(64);\n    this.refSize = memoryModel.getReferenceSize();\n    this.arraySize = memoryModel.getArraySize();\n    this.classSize = memoryModel.getClassSize();\n  }\n\n","sourceOld":"  /**\n   * @param memoryModel MemoryModel to use for primitive object sizes.\n   * @param checkInterned check if Strings are interned and don't add to size\n   * if they are. Defaults to true but if you know the objects you are checking\n   * won't likely contain many interned Strings, it will be faster to turn off\n   * intern checking.\n   */\n  public RamUsageEstimator(MemoryModel memoryModel, boolean checkInterned) {\n    this.memoryModel = memoryModel;\n    this.checkInterned = checkInterned;\n    // Use Map rather than Set so that we can use an IdentityHashMap - not\n    // seeing an IdentityHashSet\n    seen = new IdentityHashMap<Object,Object>(64);\n    this.refSize = memoryModel.getReferenceSize();\n    this.arraySize = memoryModel.getArraySize();\n    this.classSize = memoryModel.getClassSize();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd6c9e9b1251473f465b0443b56046b2658402da","date":1332082750,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator#RamUsageEstimator(MemoryModel,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * @param memoryModel MemoryModel to use for primitive object sizes.\n   * @param checkInterned check if Strings are interned and don't add to size\n   * if they are. Defaults to true but if you know the objects you are checking\n   * won't likely contain many interned Strings, it will be faster to turn off\n   * intern checking.\n   */\n  public RamUsageEstimator(MemoryModel memoryModel, boolean checkInterned) {\n    this.memoryModel = memoryModel;\n    this.checkInterned = checkInterned;\n    // Use Map rather than Set so that we can use an IdentityHashMap - not\n    // seeing an IdentityHashSet\n    seen = new IdentityHashMap<Object,Object>(64);\n    this.refSize = memoryModel.getReferenceSize();\n    this.arraySize = memoryModel.getArraySize();\n    this.classSize = memoryModel.getClassSize();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dd6c9e9b1251473f465b0443b56046b2658402da":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd6c9e9b1251473f465b0443b56046b2658402da"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["dd6c9e9b1251473f465b0443b56046b2658402da"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"dd6c9e9b1251473f465b0443b56046b2658402da":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}