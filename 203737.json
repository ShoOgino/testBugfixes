{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#enableAutoSoftCommit(int).mjava","commits":[{"id":"fe41113ed50afe558d65ec56a090479743329617","date":1382567867,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#enableAutoSoftCommit(int).mjava","pathOld":"/dev/null","sourceNew":"  protected void enableAutoSoftCommit(int time) {\n    log.info(\"Turning on auto soft commit: \" + time);\n    for (List<CloudJettyRunner> jettyList : shardToJetty.values()) {\n      for (CloudJettyRunner jetty : jettyList) {\n        CoreContainer cores = ((SolrDispatchFilter) jetty.jetty\n            .getDispatchFilter().getFilter()).getCores();\n        for (SolrCore core : cores.getCores()) {\n          ((DirectUpdateHandler2) core.getUpdateHandler())\n              .getSoftCommitTracker().setTimeUpperBound(time);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1088b72b3b4cc45316b7595bd09023c859cd2327","date":1447150009,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#enableAutoSoftCommit(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#enableAutoSoftCommit(int).mjava","sourceNew":"  protected void enableAutoSoftCommit(int time) {\n    log.info(\"Turning on auto soft commit: \" + time);\n    for (List<CloudJettyRunner> jettyList : shardToJetty.values()) {\n      for (CloudJettyRunner jetty : jettyList) {\n        CoreContainer cores = jetty.jetty.getCoreContainer();\n        for (SolrCore core : cores.getCores()) {\n          ((DirectUpdateHandler2) core.getUpdateHandler())\n              .getSoftCommitTracker().setTimeUpperBound(time);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  protected void enableAutoSoftCommit(int time) {\n    log.info(\"Turning on auto soft commit: \" + time);\n    for (List<CloudJettyRunner> jettyList : shardToJetty.values()) {\n      for (CloudJettyRunner jetty : jettyList) {\n        CoreContainer cores = ((SolrDispatchFilter) jetty.jetty\n            .getDispatchFilter().getFilter()).getCores();\n        for (SolrCore core : cores.getCores()) {\n          ((DirectUpdateHandler2) core.getUpdateHandler())\n              .getSoftCommitTracker().setTimeUpperBound(time);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#enableAutoSoftCommit(int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#enableAutoSoftCommit(int).mjava","sourceNew":"  protected void enableAutoSoftCommit(int time) {\n    log.info(\"Turning on auto soft commit: {}\", time);\n    for (List<CloudJettyRunner> jettyList : shardToJetty.values()) {\n      for (CloudJettyRunner jetty : jettyList) {\n        CoreContainer cores = jetty.jetty.getCoreContainer();\n        for (SolrCore core : cores.getCores()) {\n          ((DirectUpdateHandler2) core.getUpdateHandler())\n              .getSoftCommitTracker().setTimeUpperBound(time);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  protected void enableAutoSoftCommit(int time) {\n    log.info(\"Turning on auto soft commit: \" + time);\n    for (List<CloudJettyRunner> jettyList : shardToJetty.values()) {\n      for (CloudJettyRunner jetty : jettyList) {\n        CoreContainer cores = jetty.jetty.getCoreContainer();\n        for (SolrCore core : cores.getCores()) {\n          ((DirectUpdateHandler2) core.getUpdateHandler())\n              .getSoftCommitTracker().setTimeUpperBound(time);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1088b72b3b4cc45316b7595bd09023c859cd2327":["fe41113ed50afe558d65ec56a090479743329617"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["1088b72b3b4cc45316b7595bd09023c859cd2327"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"fe41113ed50afe558d65ec56a090479743329617":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1088b72b3b4cc45316b7595bd09023c859cd2327":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fe41113ed50afe558d65ec56a090479743329617"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe41113ed50afe558d65ec56a090479743329617":["1088b72b3b4cc45316b7595bd09023c859cd2327"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}