{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testBasic().mjava","commits":[{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, \"UTF-8\"), true);\n    String result = bos.toString(\"UTF-8\");\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, \"UTF-8\"), true);\n    String result = bos.toString(\"UTF-8\");\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, \"UTF-8\"), true);\n    String result = bos.toString(\"UTF-8\");\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, IOUtils.UTF_8), true);\n    String result = bos.toString(IOUtils.UTF_8);\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, \"UTF-8\"), true);\n    String result = bos.toString(\"UTF-8\");\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, IOUtils.UTF_8), true);\n    String result = bos.toString(IOUtils.UTF_8);\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, \"UTF-8\"), true);\n    String result = bos.toString(\"UTF-8\");\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, IOUtils.UTF_8), true);\n    String result = bos.toString(IOUtils.UTF_8);\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    writer.shutdown();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, IOUtils.UTF_8), true);\n    String result = bos.toString(IOUtils.UTF_8);\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    IOUtils.close(writer, taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, IOUtils.UTF_8), true);\n    String result = bos.toString(IOUtils.UTF_8);\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, IOUtils.UTF_8), true);\n    String result = bos.toString(IOUtils.UTF_8);\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    writer.shutdown();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b8b2bc4b8b503cc0b5743b19445798c62069e4d","date":1477390943,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    Facets facets = getAllFacets(FacetsConfig.DEFAULT_INDEX_FIELD_NAME, searcher, taxoReader, config);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, IOUtils.UTF_8), true);\n    String result = bos.toString(IOUtils.UTF_8);\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, IOUtils.UTF_8), true);\n    String result = bos.toString(IOUtils.UTF_8);\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60b61628d1912768f51eccaa8ead5a5a32ab34c6","date":1477427681,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    Facets facets = getAllFacets(FacetsConfig.DEFAULT_INDEX_FIELD_NAME, searcher, taxoReader, config);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, IOUtils.UTF_8), true);\n    String result = bos.toString(IOUtils.UTF_8);\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, IOUtils.UTF_8), true);\n    String result = bos.toString(IOUtils.UTF_8);\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    Facets facets = getAllFacets(FacetsConfig.DEFAULT_INDEX_FIELD_NAME, searcher, taxoReader, config);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, IOUtils.UTF_8), true);\n    String result = bos.toString(IOUtils.UTF_8);\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    // Aggregate the facet counts:\n    FacetsCollector c = new FacetsCollector();\n\n    // MatchAllDocsQuery is for \"browsing\" (counts facets\n    // for all non-deleted docs in the index); normally\n    // you'd use a \"normal\" query, and use MultiCollector to\n    // wrap collecting the \"normal\" hits and also facets:\n    searcher.search(new MatchAllDocsQuery(), c);\n\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, IOUtils.UTF_8), true);\n    String result = bos.toString(IOUtils.UTF_8);\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10b1c9af2d877ca8d718a359a4e5b285fe33b6f7","date":1509555533,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    Facets facets = getAllFacets(FacetsConfig.DEFAULT_INDEX_FIELD_NAME, searcher, taxoReader, config);\n\n    // Publish Date is hierarchical, so we should have loaded all 3 int[]:\n    assertTrue(((TaxonomyFacets) facets).siblingsLoaded());\n    assertTrue(((TaxonomyFacets) facets).childrenLoaded());\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, IOUtils.UTF_8), true);\n    String result = bos.toString(IOUtils.UTF_8);\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    Facets facets = getAllFacets(FacetsConfig.DEFAULT_INDEX_FIELD_NAME, searcher, taxoReader, config);\n\n    // Retrieve & verify results:\n    assertEquals(\"dim=Publish Date path=[] value=5 childCount=3\\n  2010 (2)\\n  2012 (2)\\n  1999 (1)\\n\", facets.getTopChildren(10, \"Publish Date\").toString());\n    assertEquals(\"dim=Author path=[] value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    // Now user drills down on Publish Date/2010:\n    DrillDownQuery q2 = new DrillDownQuery(config);\n    q2.add(\"Publish Date\", \"2010\");\n    FacetsCollector c = new FacetsCollector();\n    searcher.search(q2, c);\n    facets = new FastTaxonomyFacetCounts(taxoReader, config, c);\n    assertEquals(\"dim=Author path=[] value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", facets.getTopChildren(10, \"Author\").toString());\n\n    assertEquals(1, facets.getSpecificValue(\"Author\", \"Lisa\"));\n\n    assertNull(facets.getTopChildren(10, \"Non exitent dim\"));\n\n    // Smoke test PrintTaxonomyStats:\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    PrintTaxonomyStats.printStats(taxoReader, new PrintStream(bos, false, IOUtils.UTF_8), true);\n    String result = bos.toString(IOUtils.UTF_8);\n    assertTrue(result.indexOf(\"/Author: 4 immediate children; 5 total categories\") != -1);\n    assertTrue(result.indexOf(\"/Publish Date: 3 immediate children; 12 total categories\") != -1);\n    // Make sure at least a few nodes of the tree came out:\n    assertTrue(result.indexOf(\"  /1999\") != -1);\n    assertTrue(result.indexOf(\"  /2012\") != -1);\n    assertTrue(result.indexOf(\"      /20\") != -1);\n\n    writer.close();\n    IOUtils.close(taxoWriter, searcher.getIndexReader(), taxoReader, taxoDir, dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60b61628d1912768f51eccaa8ead5a5a32ab34c6":["d0ef034a4f10871667ae75181537775ddcf8ade4","4b8b2bc4b8b503cc0b5743b19445798c62069e4d"],"5eb2511ababf862ea11e10761c70ee560cd84510":["3cc728b07df73b197e6d940d27f9b08b63918f13","7d89d7e4e5101347833eea558851bf4209218619"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["d0ef034a4f10871667ae75181537775ddcf8ade4","60b61628d1912768f51eccaa8ead5a5a32ab34c6"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4b8b2bc4b8b503cc0b5743b19445798c62069e4d":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["7d89d7e4e5101347833eea558851bf4209218619"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4edc984f0f4ac77c37e48ace2932f780f888453c"],"7d89d7e4e5101347833eea558851bf4209218619":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["10b1c9af2d877ca8d718a359a4e5b285fe33b6f7"],"10b1c9af2d877ca8d718a359a4e5b285fe33b6f7":["60b61628d1912768f51eccaa8ead5a5a32ab34c6"]},"commit2Childs":{"60b61628d1912768f51eccaa8ead5a5a32ab34c6":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","10b1c9af2d877ca8d718a359a4e5b285fe33b6f7"],"5eb2511ababf862ea11e10761c70ee560cd84510":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4edc984f0f4ac77c37e48ace2932f780f888453c","3cc728b07df73b197e6d940d27f9b08b63918f13"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["60b61628d1912768f51eccaa8ead5a5a32ab34c6","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","4b8b2bc4b8b503cc0b5743b19445798c62069e4d"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"4b8b2bc4b8b503cc0b5743b19445798c62069e4d":["60b61628d1912768f51eccaa8ead5a5a32ab34c6"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"10b1c9af2d877ca8d718a359a4e5b285fe33b6f7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}