{"path":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","commits":[{"id":"53a31399f2471493d67b19a95c028a74e0113b6a","date":1289817072,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","sourceNew":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer()));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer()));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(String[],String).mjava","sourceNew":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer()));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer()));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","pathOld":"/dev/null","sourceNew":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer()));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","sourceNew":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer()));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","sourceNew":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer()));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","sourceNew":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer()));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","sourceNew":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer()));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a53a291ad9b1cc050d846b68758c061a55d52734","date":1310437344,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/surround/query/SingleFieldTestDb#SingleFieldTestDb(Random,String[],String).mjava","sourceNew":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","sourceOld":"  public SingleFieldTestDb(Random random, String[] documents, String fName) {\n    try {\n      db = new MockDirectoryWrapper(random, new RAMDirectory());\n      docs = documents;\n      fieldName = fName;\n      IndexWriter writer = new IndexWriter(db, new IndexWriterConfig(\n          Version.LUCENE_CURRENT,\n          new MockAnalyzer(random)));\n      for (int j = 0; j < docs.length; j++) {\n        Document d = new Document();\n        d.add(new Field(fieldName, docs[j], Field.Store.NO, Field.Index.ANALYZED));\n        writer.addDocument(d);\n      }\n      writer.close();\n    } catch (java.io.IOException ioe) {\n      throw new Error(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f2c5f0cb44df114db4228c8f77861714b5cabaea":["53a31399f2471493d67b19a95c028a74e0113b6a"],"53a31399f2471493d67b19a95c028a74e0113b6a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","53a31399f2471493d67b19a95c028a74e0113b6a"],"a3776dccca01c11e7046323cfad46a3b4a471233":["53a31399f2471493d67b19a95c028a74e0113b6a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","53a31399f2471493d67b19a95c028a74e0113b6a"],"a53a291ad9b1cc050d846b68758c061a55d52734":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a53a291ad9b1cc050d846b68758c061a55d52734"]},"commit2Childs":{"f2c5f0cb44df114db4228c8f77861714b5cabaea":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a53a291ad9b1cc050d846b68758c061a55d52734"],"53a31399f2471493d67b19a95c028a74e0113b6a":["f2c5f0cb44df114db4228c8f77861714b5cabaea","9ab1f5591dc05f1f2b5407d809c9699f75554a32","a3776dccca01c11e7046323cfad46a3b4a471233","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["53a31399f2471493d67b19a95c028a74e0113b6a","9ab1f5591dc05f1f2b5407d809c9699f75554a32","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"a53a291ad9b1cc050d846b68758c061a55d52734":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}