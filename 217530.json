{"path":"lucene/facet/src/test/org/apache/lucene/facet/sampling/SamplerTest#testNoFixing().mjava","commits":[{"id":"4b31c82c6df2339d0c31b592f919be77383dac10","date":1369815843,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sampling/SamplerTest#testNoFixing().mjava","pathOld":"/dev/null","sourceNew":"  public void testNoFixing() throws Exception {\n    SamplingParams sp = new SamplingParams();\n    sp.setMaxSampleSize(10);\n    sp.setMinSampleSize(5);\n    sp.setSampleRatio(0.01d);\n    sp.setSamplingThreshold(50);\n    sp.setOversampleFactor(5d);\n    \n    assertNull(\"Fixer should be null as the test is for no-fixing\",\n        sp.getSampleFixer());\n    FacetSearchParams fsp = new FacetSearchParams(fip, new CountFacetRequest(\n        new CategoryPath(\"root\", \"a\"), 1));\n    SamplingAccumulator accumulator = new SamplingAccumulator(\n        new RandomSampler(sp, random()), fsp, indexReader, taxoReader);\n    \n    // Make sure no complements are in action\n    accumulator\n        .setComplementThreshold(StandardFacetsAccumulator.DISABLE_COMPLEMENT);\n    \n    FacetsCollector fc = FacetsCollector.create(accumulator);\n    \n    searcher.search(new MatchAllDocsQuery(), fc);\n    FacetResultNode node = fc.getFacetResults().get(0).getFacetResultNode();\n    \n    assertTrue(node.value < numDocsToIndex());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6","date":1375108983,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sampling/SamplerTest#testNoFixing().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sampling/SamplerTest#testNoFixing().mjava","sourceNew":"  public void testNoFixing() throws Exception {\n    SamplingParams sp = new SamplingParams();\n    sp.setMaxSampleSize(10);\n    sp.setMinSampleSize(5);\n    sp.setSampleRatio(0.01d);\n    sp.setSamplingThreshold(50);\n    sp.setOversampleFactor(5d);\n    \n    assertNull(\"Fixer should be null as the test is for no-fixing\",\n        sp.getSampleFixer());\n    FacetSearchParams fsp = new FacetSearchParams(fip, new CountFacetRequest(\n        new CategoryPath(\"root\", \"a\"), 1));\n    SamplingAccumulator accumulator = new SamplingAccumulator(\n        new RandomSampler(sp, random()), fsp, indexReader, taxoReader);\n    \n    // Make sure no complements are in action\n    accumulator\n        .setComplementThreshold(OldFacetsAccumulator.DISABLE_COMPLEMENT);\n    \n    FacetsCollector fc = FacetsCollector.create(accumulator);\n    \n    searcher.search(new MatchAllDocsQuery(), fc);\n    FacetResultNode node = fc.getFacetResults().get(0).getFacetResultNode();\n    \n    assertTrue(node.value < numDocsToIndex());\n  }\n\n","sourceOld":"  public void testNoFixing() throws Exception {\n    SamplingParams sp = new SamplingParams();\n    sp.setMaxSampleSize(10);\n    sp.setMinSampleSize(5);\n    sp.setSampleRatio(0.01d);\n    sp.setSamplingThreshold(50);\n    sp.setOversampleFactor(5d);\n    \n    assertNull(\"Fixer should be null as the test is for no-fixing\",\n        sp.getSampleFixer());\n    FacetSearchParams fsp = new FacetSearchParams(fip, new CountFacetRequest(\n        new CategoryPath(\"root\", \"a\"), 1));\n    SamplingAccumulator accumulator = new SamplingAccumulator(\n        new RandomSampler(sp, random()), fsp, indexReader, taxoReader);\n    \n    // Make sure no complements are in action\n    accumulator\n        .setComplementThreshold(StandardFacetsAccumulator.DISABLE_COMPLEMENT);\n    \n    FacetsCollector fc = FacetsCollector.create(accumulator);\n    \n    searcher.search(new MatchAllDocsQuery(), fc);\n    FacetResultNode node = fc.getFacetResults().get(0).getFacetResultNode();\n    \n    assertTrue(node.value < numDocsToIndex());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sampling/SamplerTest#testNoFixing().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sampling/SamplerTest#testNoFixing().mjava","sourceNew":"  public void testNoFixing() throws Exception {\n    SamplingParams sp = new SamplingParams();\n    sp.setMaxSampleSize(10);\n    sp.setMinSampleSize(5);\n    sp.setSampleRatio(0.01d);\n    sp.setSamplingThreshold(50);\n    sp.setOversampleFactor(5d);\n    \n    assertNull(\"Fixer should be null as the test is for no-fixing\",\n        sp.getSampleFixer());\n    FacetSearchParams fsp = new FacetSearchParams(fip, new CountFacetRequest(\n        new CategoryPath(\"root\", \"a\"), 1));\n    SamplingAccumulator accumulator = new SamplingAccumulator(\n        new RandomSampler(sp, random()), fsp, indexReader, taxoReader);\n    \n    // Make sure no complements are in action\n    accumulator\n        .setComplementThreshold(OldFacetsAccumulator.DISABLE_COMPLEMENT);\n    \n    FacetsCollector fc = FacetsCollector.create(accumulator);\n    \n    searcher.search(new MatchAllDocsQuery(), fc);\n    FacetResultNode node = fc.getFacetResults().get(0).getFacetResultNode();\n    \n    assertTrue(node.value < numDocsToIndex());\n  }\n\n","sourceOld":"  public void testNoFixing() throws Exception {\n    SamplingParams sp = new SamplingParams();\n    sp.setMaxSampleSize(10);\n    sp.setMinSampleSize(5);\n    sp.setSampleRatio(0.01d);\n    sp.setSamplingThreshold(50);\n    sp.setOversampleFactor(5d);\n    \n    assertNull(\"Fixer should be null as the test is for no-fixing\",\n        sp.getSampleFixer());\n    FacetSearchParams fsp = new FacetSearchParams(fip, new CountFacetRequest(\n        new CategoryPath(\"root\", \"a\"), 1));\n    SamplingAccumulator accumulator = new SamplingAccumulator(\n        new RandomSampler(sp, random()), fsp, indexReader, taxoReader);\n    \n    // Make sure no complements are in action\n    accumulator\n        .setComplementThreshold(StandardFacetsAccumulator.DISABLE_COMPLEMENT);\n    \n    FacetsCollector fc = FacetsCollector.create(accumulator);\n    \n    searcher.search(new MatchAllDocsQuery(), fc);\n    FacetResultNode node = fc.getFacetResults().get(0).getFacetResultNode();\n    \n    assertTrue(node.value < numDocsToIndex());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sampling/SamplerTest#testNoFixing().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sampling/SamplerTest#testNoFixing().mjava","sourceNew":"  public void testNoFixing() throws Exception {\n    SamplingParams sp = new SamplingParams();\n    sp.setMaxSampleSize(10);\n    sp.setMinSampleSize(5);\n    sp.setSampleRatio(0.01d);\n    sp.setSamplingThreshold(50);\n    sp.setOversampleFactor(5d);\n    \n    assertNull(\"Fixer should be null as the test is for no-fixing\",\n        sp.getSampleFixer());\n    FacetSearchParams fsp = new FacetSearchParams(fip, new CountFacetRequest(\n        new FacetLabel(\"root\", \"a\"), 1));\n    SamplingAccumulator accumulator = new SamplingAccumulator(\n        new RandomSampler(sp, random()), fsp, indexReader, taxoReader);\n    \n    // Make sure no complements are in action\n    accumulator\n        .setComplementThreshold(OldFacetsAccumulator.DISABLE_COMPLEMENT);\n    \n    FacetsCollector fc = FacetsCollector.create(accumulator);\n    \n    searcher.search(new MatchAllDocsQuery(), fc);\n    FacetResultNode node = fc.getFacetResults().get(0).getFacetResultNode();\n    \n    assertTrue(node.value < numDocsToIndex());\n  }\n\n","sourceOld":"  public void testNoFixing() throws Exception {\n    SamplingParams sp = new SamplingParams();\n    sp.setMaxSampleSize(10);\n    sp.setMinSampleSize(5);\n    sp.setSampleRatio(0.01d);\n    sp.setSamplingThreshold(50);\n    sp.setOversampleFactor(5d);\n    \n    assertNull(\"Fixer should be null as the test is for no-fixing\",\n        sp.getSampleFixer());\n    FacetSearchParams fsp = new FacetSearchParams(fip, new CountFacetRequest(\n        new CategoryPath(\"root\", \"a\"), 1));\n    SamplingAccumulator accumulator = new SamplingAccumulator(\n        new RandomSampler(sp, random()), fsp, indexReader, taxoReader);\n    \n    // Make sure no complements are in action\n    accumulator\n        .setComplementThreshold(OldFacetsAccumulator.DISABLE_COMPLEMENT);\n    \n    FacetsCollector fc = FacetsCollector.create(accumulator);\n    \n    searcher.search(new MatchAllDocsQuery(), fc);\n    FacetResultNode node = fc.getFacetResults().get(0).getFacetResultNode();\n    \n    assertTrue(node.value < numDocsToIndex());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sampling/SamplerTest#testNoFixing().mjava","sourceNew":null,"sourceOld":"  public void testNoFixing() throws Exception {\n    SamplingParams sp = new SamplingParams();\n    sp.setMaxSampleSize(10);\n    sp.setMinSampleSize(5);\n    sp.setSampleRatio(0.01d);\n    sp.setSamplingThreshold(50);\n    sp.setOversampleFactor(5d);\n    \n    assertNull(\"Fixer should be null as the test is for no-fixing\",\n        sp.getSampleFixer());\n    FacetSearchParams fsp = new FacetSearchParams(fip, new CountFacetRequest(\n        new FacetLabel(\"root\", \"a\"), 1));\n    SamplingAccumulator accumulator = new SamplingAccumulator(\n        new RandomSampler(sp, random()), fsp, indexReader, taxoReader);\n    \n    // Make sure no complements are in action\n    accumulator\n        .setComplementThreshold(OldFacetsAccumulator.DISABLE_COMPLEMENT);\n    \n    FacetsCollector fc = FacetsCollector.create(accumulator);\n    \n    searcher.search(new MatchAllDocsQuery(), fc);\n    FacetResultNode node = fc.getFacetResults().get(0).getFacetResultNode();\n    \n    assertTrue(node.value < numDocsToIndex());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sampling/SamplerTest#testNoFixing().mjava","sourceNew":null,"sourceOld":"  public void testNoFixing() throws Exception {\n    SamplingParams sp = new SamplingParams();\n    sp.setMaxSampleSize(10);\n    sp.setMinSampleSize(5);\n    sp.setSampleRatio(0.01d);\n    sp.setSamplingThreshold(50);\n    sp.setOversampleFactor(5d);\n    \n    assertNull(\"Fixer should be null as the test is for no-fixing\",\n        sp.getSampleFixer());\n    FacetSearchParams fsp = new FacetSearchParams(fip, new CountFacetRequest(\n        new CategoryPath(\"root\", \"a\"), 1));\n    SamplingAccumulator accumulator = new SamplingAccumulator(\n        new RandomSampler(sp, random()), fsp, indexReader, taxoReader);\n    \n    // Make sure no complements are in action\n    accumulator\n        .setComplementThreshold(OldFacetsAccumulator.DISABLE_COMPLEMENT);\n    \n    FacetsCollector fc = FacetsCollector.create(accumulator);\n    \n    searcher.search(new MatchAllDocsQuery(), fc);\n    FacetResultNode node = fc.getFacetResults().get(0).getFacetResultNode();\n    \n    assertTrue(node.value < numDocsToIndex());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6":["4b31c82c6df2339d0c31b592f919be77383dac10"],"d33e19a97046248623a7591aeaa6547233fd15e2":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"4b31c82c6df2339d0c31b592f919be77383dac10":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["4b31c82c6df2339d0c31b592f919be77383dac10"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6","d33e19a97046248623a7591aeaa6547233fd15e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6"]},"commit2Childs":{"d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6":["3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"4b31c82c6df2339d0c31b592f919be77383dac10":["d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4b31c82c6df2339d0c31b592f919be77383dac10"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["d33e19a97046248623a7591aeaa6547233fd15e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}