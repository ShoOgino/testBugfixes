{"path":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestOutOfMemoryErrorCausesCloseToFail().mjava","commits":[{"id":"3215ae1377fc1ca1790921d75dd39cb764743b85","date":1237371771,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestOutOfMemoryErrorCausesCloseToFail().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testOutOfMemoryErrorCausesCloseToFail().mjava","sourceNew":"  // LUCENE-1429\n  public void xxxtestOutOfMemoryErrorCausesCloseToFail() throws Exception {\n\n    final List thrown = new ArrayList();\n\n    final IndexWriter writer = new IndexWriter(new MockRAMDirectory(), new StandardAnalyzer()) {\n        public void message(final String message) {\n          if (message.startsWith(\"now flush at close\") && 0 == thrown.size()) {\n            thrown.add(null);\n            throw new OutOfMemoryError(\"fake OOME at \" + message);\n          }\n        }\n      };\n\n    // need to set an info stream so message is called\n    writer.setInfoStream(new PrintStream(new ByteArrayOutputStream()));\n    try {\n      writer.close();\n      fail(\"OutOfMemoryError expected\");\n    }\n    catch (final OutOfMemoryError expected) {}\n\n    // throws IllegalStateEx w/o bug fix\n    writer.close();\n  }\n\n","sourceOld":"  // LUCENE-1429\n  public void testOutOfMemoryErrorCausesCloseToFail() throws Exception {\n\n    final List thrown = new ArrayList();\n\n    final IndexWriter writer = new IndexWriter(new MockRAMDirectory(), new StandardAnalyzer()) {\n        public void message(final String message) {\n          if (message.startsWith(\"now flush at close\") && 0 == thrown.size()) {\n            thrown.add(null);\n            throw new OutOfMemoryError(\"fake OOME at \" + message);\n          }\n        }\n      };\n\n    // need to set an info stream so message is called\n    writer.setInfoStream(new PrintStream(new ByteArrayOutputStream()));\n    try {\n      writer.close();\n      fail(\"OutOfMemoryError expected\");\n    }\n    catch (final OutOfMemoryError expected) {}\n\n    // throws IllegalStateEx w/o bug fix\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c482d1e63332617181729a225b215c452d8a79","date":1237396006,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testOutOfMemoryErrorCausesCloseToFail().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestOutOfMemoryErrorCausesCloseToFail().mjava","sourceNew":"  // LUCENE-1429\n  public void testOutOfMemoryErrorCausesCloseToFail() throws Exception {\n\n    final List thrown = new ArrayList();\n\n    final IndexWriter writer = new IndexWriter(new MockRAMDirectory(), new StandardAnalyzer()) {\n        public void message(final String message) {\n          if (message.startsWith(\"now flush at close\") && 0 == thrown.size()) {\n            thrown.add(null);\n            throw new OutOfMemoryError(\"fake OOME at \" + message);\n          }\n        }\n      };\n\n    // need to set an info stream so message is called\n    writer.setInfoStream(new PrintStream(new ByteArrayOutputStream()));\n    try {\n      writer.close();\n      fail(\"OutOfMemoryError expected\");\n    }\n    catch (final OutOfMemoryError expected) {}\n\n    // throws IllegalStateEx w/o bug fix\n    writer.close();\n  }\n\n","sourceOld":"  // LUCENE-1429\n  public void xxxtestOutOfMemoryErrorCausesCloseToFail() throws Exception {\n\n    final List thrown = new ArrayList();\n\n    final IndexWriter writer = new IndexWriter(new MockRAMDirectory(), new StandardAnalyzer()) {\n        public void message(final String message) {\n          if (message.startsWith(\"now flush at close\") && 0 == thrown.size()) {\n            thrown.add(null);\n            throw new OutOfMemoryError(\"fake OOME at \" + message);\n          }\n        }\n      };\n\n    // need to set an info stream so message is called\n    writer.setInfoStream(new PrintStream(new ByteArrayOutputStream()));\n    try {\n      writer.close();\n      fail(\"OutOfMemoryError expected\");\n    }\n    catch (final OutOfMemoryError expected) {}\n\n    // throws IllegalStateEx w/o bug fix\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3215ae1377fc1ca1790921d75dd39cb764743b85":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09c482d1e63332617181729a225b215c452d8a79":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c482d1e63332617181729a225b215c452d8a79"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["09c482d1e63332617181729a225b215c452d8a79"],"09c482d1e63332617181729a225b215c452d8a79":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}