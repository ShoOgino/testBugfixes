{"path":"solr/core/src/test/org/apache/solr/core/TestCodecProviderSupport#testDynamicFields().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCodecProviderSupport#testDynamicFields().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestCodecProviderSupport#testDynamicFields().mjava","sourceNew":"  public void testDynamicFields() {\n    CodecProvider codecProvider = h.getCore().getCodecProvider();\n\n    assertTrue(codecProvider.hasFieldCodec(\"bar_simple\"));\n    assertTrue(codecProvider.hasFieldCodec(\"bar_pulsing\"));\n    assertTrue(codecProvider.hasFieldCodec(\"bar_standard\"));\n\n    assertEquals(\"SimpleText\", codecProvider.getFieldCodec(\"foo_simple\"));\n    assertEquals(\"Pulsing\", codecProvider.getFieldCodec(\"foo_pulsing\"));\n    assertEquals(\"Standard\", codecProvider.getFieldCodec(\"foo_standard\"));\n  }\n\n","sourceOld":"  public void testDynamicFields() {\n    CodecProvider codecProvider = h.getCore().getCodecProvider();\n\n    assertTrue(codecProvider.hasFieldCodec(\"bar_simple\"));\n    assertTrue(codecProvider.hasFieldCodec(\"bar_pulsing\"));\n    assertTrue(codecProvider.hasFieldCodec(\"bar_standard\"));\n\n    assertEquals(\"SimpleText\", codecProvider.getFieldCodec(\"foo_simple\"));\n    assertEquals(\"Pulsing\", codecProvider.getFieldCodec(\"foo_pulsing\"));\n    assertEquals(\"Standard\", codecProvider.getFieldCodec(\"foo_standard\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCodecProviderSupport#testDynamicFields().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestCodecProviderSupport#testDynamicFields().mjava","sourceNew":"  public void testDynamicFields() {\n    CodecProvider codecProvider = h.getCore().getCodecProvider();\n\n    assertTrue(codecProvider.hasFieldCodec(\"bar_simple\"));\n    assertTrue(codecProvider.hasFieldCodec(\"bar_pulsing\"));\n    assertTrue(codecProvider.hasFieldCodec(\"bar_standard\"));\n\n    assertEquals(\"SimpleText\", codecProvider.getFieldCodec(\"foo_simple\"));\n    assertEquals(\"Pulsing\", codecProvider.getFieldCodec(\"foo_pulsing\"));\n    assertEquals(\"Standard\", codecProvider.getFieldCodec(\"foo_standard\"));\n  }\n\n","sourceOld":"  public void testDynamicFields() {\n    CodecProvider codecProvider = h.getCore().getCodecProvider();\n\n    assertTrue(codecProvider.hasFieldCodec(\"bar_simple\"));\n    assertTrue(codecProvider.hasFieldCodec(\"bar_pulsing\"));\n    assertTrue(codecProvider.hasFieldCodec(\"bar_standard\"));\n\n    assertEquals(\"SimpleText\", codecProvider.getFieldCodec(\"foo_simple\"));\n    assertEquals(\"Pulsing\", codecProvider.getFieldCodec(\"foo_pulsing\"));\n    assertEquals(\"Standard\", codecProvider.getFieldCodec(\"foo_standard\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCodecProviderSupport#testDynamicFields().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestCodecProviderSupport#testDynamicFields().mjava","sourceNew":"  public void testDynamicFields() {\n    CodecProvider codecProvider = h.getCore().getCodecProvider();\n\n    assertTrue(codecProvider.hasFieldCodec(\"bar_simple\"));\n    assertTrue(codecProvider.hasFieldCodec(\"bar_pulsing\"));\n    assertTrue(codecProvider.hasFieldCodec(\"bar_standard\"));\n\n    assertEquals(\"SimpleText\", codecProvider.getFieldCodec(\"foo_simple\"));\n    assertEquals(\"Pulsing\", codecProvider.getFieldCodec(\"foo_pulsing\"));\n    assertEquals(\"Standard\", codecProvider.getFieldCodec(\"foo_standard\"));\n  }\n\n","sourceOld":"  public void testDynamicFields() {\n    CodecProvider codecProvider = h.getCore().getCodecProvider();\n\n    assertTrue(codecProvider.hasFieldCodec(\"bar_simple\"));\n    assertTrue(codecProvider.hasFieldCodec(\"bar_pulsing\"));\n    assertTrue(codecProvider.hasFieldCodec(\"bar_standard\"));\n\n    assertEquals(\"SimpleText\", codecProvider.getFieldCodec(\"foo_simple\"));\n    assertEquals(\"Pulsing\", codecProvider.getFieldCodec(\"foo_pulsing\"));\n    assertEquals(\"Standard\", codecProvider.getFieldCodec(\"foo_standard\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/TestCodecProviderSupport#testDynamicFields().mjava","sourceNew":null,"sourceOld":"  public void testDynamicFields() {\n    CodecProvider codecProvider = h.getCore().getCodecProvider();\n\n    assertTrue(codecProvider.hasFieldCodec(\"bar_simple\"));\n    assertTrue(codecProvider.hasFieldCodec(\"bar_pulsing\"));\n    assertTrue(codecProvider.hasFieldCodec(\"bar_standard\"));\n\n    assertEquals(\"SimpleText\", codecProvider.getFieldCodec(\"foo_simple\"));\n    assertEquals(\"Pulsing\", codecProvider.getFieldCodec(\"foo_pulsing\"));\n    assertEquals(\"Standard\", codecProvider.getFieldCodec(\"foo_standard\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["7b91922b55d15444d554721b352861d028eb8278"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}