{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#seekCeil(BytesRef).mjava","commits":[{"id":"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8","date":1373996650,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#seekCeil(BytesRef).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"    @Override\n    public SeekStatus seekCeil(BytesRef text) throws IOException {\n      //System.out.println(\"te.seek text=\" + field.name + \":\" + text.utf8ToString() + \" this=\" + this);\n      current = fstEnum.seekCeil(text);\n      if (current == null) {\n        return SeekStatus.END;\n      } else {\n\n        // System.out.println(\"  got term=\" + current.input.utf8ToString());\n        // for(int i=0;i<current.output.length;i++) {\n        //   System.out.println(\"    \" + Integer.toHexString(current.output.bytes[i]&0xFF));\n        // }\n\n        didDecode = false;\n\n        if (text.equals(current.input)) {\n          //System.out.println(\"  found!\");\n          return SeekStatus.FOUND;\n        } else {\n          //System.out.println(\"  not found: \" + current.input.utf8ToString());\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache /* ignored */) throws IOException {\n      //System.out.println(\"te.seek text=\" + field.name + \":\" + text.utf8ToString() + \" this=\" + this);\n      current = fstEnum.seekCeil(text);\n      if (current == null) {\n        return SeekStatus.END;\n      } else {\n\n        // System.out.println(\"  got term=\" + current.input.utf8ToString());\n        // for(int i=0;i<current.output.length;i++) {\n        //   System.out.println(\"    \" + Integer.toHexString(current.output.bytes[i]&0xFF));\n        // }\n\n        didDecode = false;\n\n        if (text.equals(current.input)) {\n          //System.out.println(\"  found!\");\n          return SeekStatus.FOUND;\n        } else {\n          //System.out.println(\"  not found: \" + current.input.utf8ToString());\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":1,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#seekCeil(BytesRef).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"    @Override\n    public SeekStatus seekCeil(BytesRef text) throws IOException {\n      //System.out.println(\"te.seek text=\" + field.name + \":\" + text.utf8ToString() + \" this=\" + this);\n      current = fstEnum.seekCeil(text);\n      if (current == null) {\n        return SeekStatus.END;\n      } else {\n\n        // System.out.println(\"  got term=\" + current.input.utf8ToString());\n        // for(int i=0;i<current.output.length;i++) {\n        //   System.out.println(\"    \" + Integer.toHexString(current.output.bytes[i]&0xFF));\n        // }\n\n        didDecode = false;\n\n        if (text.equals(current.input)) {\n          //System.out.println(\"  found!\");\n          return SeekStatus.FOUND;\n        } else {\n          //System.out.println(\"  not found: \" + current.input.utf8ToString());\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache /* ignored */) throws IOException {\n      //System.out.println(\"te.seek text=\" + field.name + \":\" + text.utf8ToString() + \" this=\" + this);\n      current = fstEnum.seekCeil(text);\n      if (current == null) {\n        return SeekStatus.END;\n      } else {\n\n        // System.out.println(\"  got term=\" + current.input.utf8ToString());\n        // for(int i=0;i<current.output.length;i++) {\n        //   System.out.println(\"    \" + Integer.toHexString(current.output.bytes[i]&0xFF));\n        // }\n\n        didDecode = false;\n\n        if (text.equals(current.input)) {\n          //System.out.println(\"  found!\");\n          return SeekStatus.FOUND;\n        } else {\n          //System.out.println(\"  not found: \" + current.input.utf8ToString());\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24f89e8a6aac05753cde4c83d62a74356098200d","date":1525768331,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.FSTTermsEnum#seekCeil(BytesRef).mjava","sourceNew":null,"sourceOld":"    @Override\n    public SeekStatus seekCeil(BytesRef text) throws IOException {\n      //System.out.println(\"te.seek text=\" + field.name + \":\" + text.utf8ToString() + \" this=\" + this);\n      current = fstEnum.seekCeil(text);\n      if (current == null) {\n        return SeekStatus.END;\n      } else {\n\n        // System.out.println(\"  got term=\" + current.input.utf8ToString());\n        // for(int i=0;i<current.output.length;i++) {\n        //   System.out.println(\"    \" + Integer.toHexString(current.output.bytes[i]&0xFF));\n        // }\n\n        didDecode = false;\n\n        if (text.equals(current.input)) {\n          //System.out.println(\"  found!\");\n          return SeekStatus.FOUND;\n        } else {\n          //System.out.println(\"  not found: \" + current.input.utf8ToString());\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24f89e8a6aac05753cde4c83d62a74356098200d":["eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["24f89e8a6aac05753cde4c83d62a74356098200d"]},"commit2Childs":{"24f89e8a6aac05753cde4c83d62a74356098200d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["24f89e8a6aac05753cde4c83d62a74356098200d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}