{"path":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(BooleanWeight,boolean,int,List[Scorer],List[BulkScorer],List[BulkScorer],int).mjava","commits":[{"id":"0cf15d89c400585df630cb62449fb4d6cb58434f","date":1397643074,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(BooleanWeight,boolean,int,List[Scorer],List[BulkScorer],List[BulkScorer],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(BooleanWeight,boolean,int,List[BulkScorer],List[BulkScorer],int).mjava","sourceNew":"  BooleanScorer(BooleanWeight weight, boolean disableCoord, int minNrShouldMatch, \n      List<Scorer> requiredScorers, List<BulkScorer> optionalScorers, List<BulkScorer> prohibitedScorers, \n      int maxCoord) throws IOException {\n    \n    this.minNrShouldMatch = minNrShouldMatch;\n    this.weight = weight;\n    \n    this.requiredNrMatchers = requiredScorers.size();\n    if ( this.requiredNrMatchers > 0 ) {\n      BulkScorer requiredScorer = new Weight.DefaultBulkScorer(new ConjunctionScorer(\n          this.weight, requiredScorers.toArray(new Scorer[requiredScorers.size()])));\n      scorers = new SubScorer(requiredScorer, true, false, bucketTable.newCollector(REQUIRED_MASK), scorers);\n    }\n\n    for (BulkScorer scorer : optionalScorers) {\n      scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n    }\n    \n    for (BulkScorer scorer : prohibitedScorers) {\n      scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(PROHIBITED_MASK), scorers);\n    }\n\n    // TODO: required add requriredScorer.size().\n    coordFactors = new float[requiredScorers.size() + optionalScorers.size() + 1];\n    for (int i = 0; i < coordFactors.length; i++) {\n      coordFactors[i] = disableCoord ? 1.0f : weight.coord(i, maxCoord); \n    }\n  }\n\n","sourceOld":"  BooleanScorer(BooleanWeight weight, boolean disableCoord, int minNrShouldMatch,\n      List<BulkScorer> optionalScorers, List<BulkScorer> prohibitedScorers, int maxCoord) throws IOException {\n    this.minNrShouldMatch = minNrShouldMatch;\n    this.weight = weight;\n\n    for (BulkScorer scorer : optionalScorers) {\n      scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n    }\n    \n    for (BulkScorer scorer : prohibitedScorers) {\n      scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(PROHIBITED_MASK), scorers);\n    }\n\n    coordFactors = new float[optionalScorers.size() + 1];\n    for (int i = 0; i < coordFactors.length; i++) {\n      coordFactors[i] = disableCoord ? 1.0f : weight.coord(i, maxCoord); \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"158bf4b301557fdddcd1f665fa0700b7f19678d0","date":1397643258,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(BooleanWeight,boolean,int,List[BulkScorer],List[BulkScorer],int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanScorer#BooleanScorer(BooleanWeight,boolean,int,List[Scorer],List[BulkScorer],List[BulkScorer],int).mjava","sourceNew":"  BooleanScorer(BooleanWeight weight, boolean disableCoord, int minNrShouldMatch,\n      List<BulkScorer> optionalScorers, List<BulkScorer> prohibitedScorers, int maxCoord) throws IOException {\n    this.minNrShouldMatch = minNrShouldMatch;\n    this.weight = weight;\n\n    for (BulkScorer scorer : optionalScorers) {\n      scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n    }\n    \n    for (BulkScorer scorer : prohibitedScorers) {\n      scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(PROHIBITED_MASK), scorers);\n    }\n\n    coordFactors = new float[optionalScorers.size() + 1];\n    for (int i = 0; i < coordFactors.length; i++) {\n      coordFactors[i] = disableCoord ? 1.0f : weight.coord(i, maxCoord); \n    }\n  }\n\n","sourceOld":"  BooleanScorer(BooleanWeight weight, boolean disableCoord, int minNrShouldMatch, \n      List<Scorer> requiredScorers, List<BulkScorer> optionalScorers, List<BulkScorer> prohibitedScorers, \n      int maxCoord) throws IOException {\n    \n    this.minNrShouldMatch = minNrShouldMatch;\n    this.weight = weight;\n    \n    this.requiredNrMatchers = requiredScorers.size();\n    if ( this.requiredNrMatchers > 0 ) {\n      BulkScorer requiredScorer = new Weight.DefaultBulkScorer(new ConjunctionScorer(\n          this.weight, requiredScorers.toArray(new Scorer[requiredScorers.size()])));\n      scorers = new SubScorer(requiredScorer, true, false, bucketTable.newCollector(REQUIRED_MASK), scorers);\n    }\n\n    for (BulkScorer scorer : optionalScorers) {\n      scorers = new SubScorer(scorer, false, false, bucketTable.newCollector(0), scorers);\n    }\n    \n    for (BulkScorer scorer : prohibitedScorers) {\n      scorers = new SubScorer(scorer, false, true, bucketTable.newCollector(PROHIBITED_MASK), scorers);\n    }\n\n    // TODO: required add requriredScorer.size().\n    coordFactors = new float[requiredScorers.size() + optionalScorers.size() + 1];\n    for (int i = 0; i < coordFactors.length; i++) {\n      coordFactors[i] = disableCoord ? 1.0f : weight.coord(i, maxCoord); \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0cf15d89c400585df630cb62449fb4d6cb58434f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"158bf4b301557fdddcd1f665fa0700b7f19678d0":["0cf15d89c400585df630cb62449fb4d6cb58434f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["158bf4b301557fdddcd1f665fa0700b7f19678d0"]},"commit2Childs":{"0cf15d89c400585df630cb62449fb4d6cb58434f":["158bf4b301557fdddcd1f665fa0700b7f19678d0"],"158bf4b301557fdddcd1f665fa0700b7f19678d0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0cf15d89c400585df630cb62449fb4d6cb58434f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}