{"path":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries#quantizePolygon(Polygon).mjava","commits":[{"id":"4312aa12218419d320e0966c3f3e72deb359afaa","date":1533146016,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries#quantizePolygon(Polygon).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonShapeQueries#quantizePolygon(Polygon).mjava","sourceNew":"  private Polygon quantizePolygon(Polygon polygon) {\n    double[] lats = new double[polygon.numPoints()];\n    double[] lons = new double[polygon.numPoints()];\n    for (int i = 0; i < lats.length; ++i) {\n      lats[i] = quantizeLat(polygon.getPolyLat(i));\n      lons[i] = quantizeLon(polygon.getPolyLon(i));\n    }\n    return new Polygon(lats, lons);\n  }\n\n","sourceOld":"  private Polygon quantizePolygon(Polygon polygon) {\n    double[] lats = new double[polygon.numPoints()];\n    double[] lons = new double[polygon.numPoints()];\n    for (int i = 0; i < lats.length; ++i) {\n      lats[i] = quantizeLat(polygon.getPolyLat(i));\n      lons[i] = quantizeLon(polygon.getPolyLon(i));\n    }\n    return new Polygon(lats, lons);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6345300cb90308ddf9579f7a7396a32d98795311","date":1533248257,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#quantizePolygon(Polygon).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPolygonShapeQueries#quantizePolygon(Polygon).mjava","sourceNew":"  protected Polygon quantizePolygon(Polygon polygon) {\n    double[] lats = new double[polygon.numPoints()];\n    double[] lons = new double[polygon.numPoints()];\n    for (int i = 0; i < lats.length; ++i) {\n      lats[i] = quantizeLat(polygon.getPolyLat(i));\n      lons[i] = quantizeLon(polygon.getPolyLon(i));\n    }\n    return new Polygon(lats, lons);\n  }\n\n","sourceOld":"  private Polygon quantizePolygon(Polygon polygon) {\n    double[] lats = new double[polygon.numPoints()];\n    double[] lons = new double[polygon.numPoints()];\n    for (int i = 0; i < lats.length; ++i) {\n      lats[i] = quantizeLat(polygon.getPolyLat(i));\n      lons[i] = quantizeLon(polygon.getPolyLon(i));\n    }\n    return new Polygon(lats, lons);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4312aa12218419d320e0966c3f3e72deb359afaa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6345300cb90308ddf9579f7a7396a32d98795311":["4312aa12218419d320e0966c3f3e72deb359afaa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6345300cb90308ddf9579f7a7396a32d98795311"]},"commit2Childs":{"4312aa12218419d320e0966c3f3e72deb359afaa":["6345300cb90308ddf9579f7a7396a32d98795311"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4312aa12218419d320e0966c3f3e72deb359afaa"],"6345300cb90308ddf9579f7a7396a32d98795311":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}