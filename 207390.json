{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/PackedIntValues.PackedIntsReader#load().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/PackedIntValues.PackedIntsReader#load().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/PackedIntValues.PackedIntsReader#load().mjava","sourceNew":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        \n        if (values == null) {\n          source = new PackedIntsSource(input, false);\n        } else {\n          source = values.newFromInput(input, numDocs);\n        }\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        \n        if (values == null) {\n          source = new PackedIntsSource(input, false);\n        } else {\n          source = values.newFromInput(input, numDocs);\n        }\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7460755aa94143153400f49c8ac2746f5d092e1a","date":1345536974,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/PackedIntValues.PackedIntsReader#load().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/PackedIntValues.PackedIntsReader#load().mjava","sourceNew":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = datIn.clone();\n        \n        if (values == null) {\n          source = new PackedIntsSource(input, false);\n        } else {\n          source = values.newFromInput(input, numDocs);\n        }\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        \n        if (values == null) {\n          source = new PackedIntsSource(input, false);\n        } else {\n          source = values.newFromInput(input, numDocs);\n        }\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/PackedIntValues.PackedIntsReader#load().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/PackedIntValues.PackedIntsReader#load().mjava","sourceNew":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = datIn.clone();\n        \n        if (values == null) {\n          source = new PackedIntsSource(input, false);\n        } else {\n          source = values.newFromInput(input, numDocs);\n        }\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        \n        if (values == null) {\n          source = new PackedIntsSource(input, false);\n        } else {\n          source = values.newFromInput(input, numDocs);\n        }\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d91f606c5d64e2c5fcf6065a8b96f9edd88851d7","date":1352213037,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/PackedIntValues.PackedIntsReader#loadSource().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/PackedIntValues.PackedIntsReader#load().mjava","sourceNew":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    protected Source loadSource() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = datIn.clone();\n        \n        if (values == null) {\n          source = new PackedIntsSource(input, false);\n        } else {\n          source = values.newFromInput(input, numDocs);\n        }\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = datIn.clone();\n        \n        if (values == null) {\n          source = new PackedIntsSource(input, false);\n        } else {\n          source = values.newFromInput(input, numDocs);\n        }\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7460755aa94143153400f49c8ac2746f5d092e1a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d91f606c5d64e2c5fcf6065a8b96f9edd88851d7":["7460755aa94143153400f49c8ac2746f5d092e1a"],"7460755aa94143153400f49c8ac2746f5d092e1a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d91f606c5d64e2c5fcf6065a8b96f9edd88851d7"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["001b25b42373b22a52f399dbf072f1224632e8e6","7460755aa94143153400f49c8ac2746f5d092e1a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d91f606c5d64e2c5fcf6065a8b96f9edd88851d7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7460755aa94143153400f49c8ac2746f5d092e1a":["001b25b42373b22a52f399dbf072f1224632e8e6","d91f606c5d64e2c5fcf6065a8b96f9edd88851d7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}