{"path":"lucene/src/java/org/apache/lucene/util/automaton/fst/UpToTwoPositiveIntOutputs#add(Object,Object).mjava","commits":[{"id":"ea8136d8c9f128223389b731b2affdeccdbf1af3","date":1305220410,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/UpToTwoPositiveIntOutputs#add(Object,Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object add(Object _prefix, Object _output) {\n    assert valid(_prefix, false);\n    assert valid(_output, true);\n    final Long prefix = (Long) _prefix;\n    if (_output instanceof Long) {\n      final Long output = (Long) _output;\n      if (prefix == NO_OUTPUT) {\n        return output;\n      } else if (output == NO_OUTPUT) {\n        return prefix;\n      } else {\n        return prefix + output;\n      }\n    } else {\n      final TwoLongs output = (TwoLongs) _output;\n      final long v = prefix;\n      return new TwoLongs(output.first + v, output.second + v);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/UpToTwoPositiveIntOutputs#add(Object,Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object add(Object _prefix, Object _output) {\n    assert valid(_prefix, false);\n    assert valid(_output, true);\n    final Long prefix = (Long) _prefix;\n    if (_output instanceof Long) {\n      final Long output = (Long) _output;\n      if (prefix == NO_OUTPUT) {\n        return output;\n      } else if (output == NO_OUTPUT) {\n        return prefix;\n      } else {\n        return prefix + output;\n      }\n    } else {\n      final TwoLongs output = (TwoLongs) _output;\n      final long v = prefix;\n      return new TwoLongs(output.first + v, output.second + v);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/UpToTwoPositiveIntOutputs#add(Object,Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object add(Object _prefix, Object _output) {\n    assert valid(_prefix, false);\n    assert valid(_output, true);\n    final Long prefix = (Long) _prefix;\n    if (_output instanceof Long) {\n      final Long output = (Long) _output;\n      if (prefix == NO_OUTPUT) {\n        return output;\n      } else if (output == NO_OUTPUT) {\n        return prefix;\n      } else {\n        return prefix + output;\n      }\n    } else {\n      final TwoLongs output = (TwoLongs) _output;\n      final long v = prefix;\n      return new TwoLongs(output.first + v, output.second + v);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8be6e1e4fbbc94d90b78f175c03ff389b6949373","date":1306674752,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/UpToTwoPositiveIntOutputs#add(Object,Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/UpToTwoPositiveIntOutputs#add(Object,Object).mjava","sourceNew":"  @Override\n  public Object add(Object _prefix, Object _output) {\n    assert valid(_prefix, false);\n    assert valid(_output, true);\n    final Long prefix = (Long) _prefix;\n    if (_output instanceof Long) {\n      final Long output = (Long) _output;\n      if (prefix == NO_OUTPUT) {\n        return output;\n      } else if (output == NO_OUTPUT) {\n        return prefix;\n      } else {\n        return prefix + output;\n      }\n    } else {\n      final TwoLongs output = (TwoLongs) _output;\n      final long v = prefix;\n      return new TwoLongs(output.first + v, output.second + v);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object add(Object _prefix, Object _output) {\n    assert valid(_prefix, false);\n    assert valid(_output, true);\n    final Long prefix = (Long) _prefix;\n    if (_output instanceof Long) {\n      final Long output = (Long) _output;\n      if (prefix == NO_OUTPUT) {\n        return output;\n      } else if (output == NO_OUTPUT) {\n        return prefix;\n      } else {\n        return prefix + output;\n      }\n    } else {\n      final TwoLongs output = (TwoLongs) _output;\n      final long v = prefix;\n      return new TwoLongs(output.first + v, output.second + v);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/UpToTwoPositiveIntOutputs#add(Object,Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/UpToTwoPositiveIntOutputs#add(Object,Object).mjava","sourceNew":"  @Override\n  public Object add(Object _prefix, Object _output) {\n    assert valid(_prefix, false);\n    assert valid(_output, true);\n    final Long prefix = (Long) _prefix;\n    if (_output instanceof Long) {\n      final Long output = (Long) _output;\n      if (prefix == NO_OUTPUT) {\n        return output;\n      } else if (output == NO_OUTPUT) {\n        return prefix;\n      } else {\n        return prefix + output;\n      }\n    } else {\n      final TwoLongs output = (TwoLongs) _output;\n      final long v = prefix;\n      return new TwoLongs(output.first + v, output.second + v);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object add(Object _prefix, Object _output) {\n    assert valid(_prefix, false);\n    assert valid(_output, true);\n    final Long prefix = (Long) _prefix;\n    if (_output instanceof Long) {\n      final Long output = (Long) _output;\n      if (prefix == NO_OUTPUT) {\n        return output;\n      } else if (output == NO_OUTPUT) {\n        return prefix;\n      } else {\n        return prefix + output;\n      }\n    } else {\n      final TwoLongs output = (TwoLongs) _output;\n      final long v = prefix;\n      return new TwoLongs(output.first + v, output.second + v);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/UpToTwoPositiveIntOutputs#add(Object,Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/UpToTwoPositiveIntOutputs#add(Object,Object).mjava","sourceNew":"  @Override\n  public Object add(Object _prefix, Object _output) {\n    assert valid(_prefix, false);\n    assert valid(_output, true);\n    final Long prefix = (Long) _prefix;\n    if (_output instanceof Long) {\n      final Long output = (Long) _output;\n      if (prefix == NO_OUTPUT) {\n        return output;\n      } else if (output == NO_OUTPUT) {\n        return prefix;\n      } else {\n        return prefix + output;\n      }\n    } else {\n      final TwoLongs output = (TwoLongs) _output;\n      final long v = prefix;\n      return new TwoLongs(output.first + v, output.second + v);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object add(Object _prefix, Object _output) {\n    assert valid(_prefix, false);\n    assert valid(_output, true);\n    final Long prefix = (Long) _prefix;\n    if (_output instanceof Long) {\n      final Long output = (Long) _output;\n      if (prefix == NO_OUTPUT) {\n        return output;\n      } else if (output == NO_OUTPUT) {\n        return prefix;\n      } else {\n        return prefix + output;\n      }\n    } else {\n      final TwoLongs output = (TwoLongs) _output;\n      final long v = prefix;\n      return new TwoLongs(output.first + v, output.second + v);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["ea8136d8c9f128223389b731b2affdeccdbf1af3"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ea8136d8c9f128223389b731b2affdeccdbf1af3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ea8136d8c9f128223389b731b2affdeccdbf1af3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ea8136d8c9f128223389b731b2affdeccdbf1af3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb","8be6e1e4fbbc94d90b78f175c03ff389b6949373"]},"commit2Childs":{"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3776dccca01c11e7046323cfad46a3b4a471233","ea8136d8c9f128223389b731b2affdeccdbf1af3","c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"ea8136d8c9f128223389b731b2affdeccdbf1af3":["8be6e1e4fbbc94d90b78f175c03ff389b6949373","a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}