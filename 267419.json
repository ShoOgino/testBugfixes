{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicStemmer#stemSuffix(char[],int).mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicStemmer#stemSuffix(char[],int).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/ar/ArabicStemmer#stemSuffix(char[],int).mjava","sourceNew":"  /**\n   * Stem suffix(es) off an Arabic word.\n   * @param s input buffer\n   * @param len length of input buffer\n   * @return new length of input buffer after stemming\n   */\n  public int stemSuffix(char s[], int len) {\n    for (int i = 0; i < suffixes.length; i++) \n      if (endsWith(s, len, suffixes[i]))\n        len = deleteN(s, len - suffixes[i].length, len, suffixes[i].length);\n    return len;\n  }\n\n","sourceOld":"  /**\n   * Stem suffix(es) off an Arabic word.\n   * @param s input buffer\n   * @param len length of input buffer\n   * @return new length of input buffer after stemming\n   */\n  public int stemSuffix(char s[], int len) {\n    for (int i = 0; i < suffixes.length; i++) \n      if (endsWith(s, len, suffixes[i]))\n        len = deleteN(s, len - suffixes[i].length, len, suffixes[i].length);\n    return len;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8864af8de677008c534d14fc77568b83a6c1361","date":1279109434,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicStemmer#stemSuffix(char[],int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicStemmer#stemSuffix(char[],int).mjava","sourceNew":"  /**\n   * Stem suffix(es) off an Arabic word.\n   * @param s input buffer\n   * @param len length of input buffer\n   * @return new length of input buffer after stemming\n   */\n  public int stemSuffix(char s[], int len) {\n    for (int i = 0; i < suffixes.length; i++) \n      if (endsWithCheckLength(s, len, suffixes[i]))\n        len = deleteN(s, len - suffixes[i].length, len, suffixes[i].length);\n    return len;\n  }\n\n","sourceOld":"  /**\n   * Stem suffix(es) off an Arabic word.\n   * @param s input buffer\n   * @param len length of input buffer\n   * @return new length of input buffer after stemming\n   */\n  public int stemSuffix(char s[], int len) {\n    for (int i = 0; i < suffixes.length; i++) \n      if (endsWith(s, len, suffixes[i]))\n        len = deleteN(s, len - suffixes[i].length, len, suffixes[i].length);\n    return len;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicStemmer#stemSuffix(char[],int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicStemmer#stemSuffix(char[],int).mjava","sourceNew":"  /**\n   * Stem suffix(es) off an Arabic word.\n   * @param s input buffer\n   * @param len length of input buffer\n   * @return new length of input buffer after stemming\n   */\n  public int stemSuffix(char s[], int len) {\n    for (int i = 0; i < suffixes.length; i++) \n      if (endsWithCheckLength(s, len, suffixes[i]))\n        len = deleteN(s, len - suffixes[i].length, len, suffixes[i].length);\n    return len;\n  }\n\n","sourceOld":"  /**\n   * Stem suffix(es) off an Arabic word.\n   * @param s input buffer\n   * @param len length of input buffer\n   * @return new length of input buffer after stemming\n   */\n  public int stemSuffix(char s[], int len) {\n    for (int i = 0; i < suffixes.length; i++) \n      if (endsWith(s, len, suffixes[i]))\n        len = deleteN(s, len - suffixes[i].length, len, suffixes[i].length);\n    return len;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicStemmer#stemSuffix(char[],int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicStemmer#stemSuffix(char[],int).mjava","sourceNew":"  /**\n   * Stem suffix(es) off an Arabic word.\n   * @param s input buffer\n   * @param len length of input buffer\n   * @return new length of input buffer after stemming\n   */\n  public int stemSuffix(char s[], int len) {\n    for (int i = 0; i < suffixes.length; i++) \n      if (endsWithCheckLength(s, len, suffixes[i]))\n        len = deleteN(s, len - suffixes[i].length, len, suffixes[i].length);\n    return len;\n  }\n\n","sourceOld":"  /**\n   * Stem suffix(es) off an Arabic word.\n   * @param s input buffer\n   * @param len length of input buffer\n   * @return new length of input buffer after stemming\n   */\n  public int stemSuffix(char s[], int len) {\n    for (int i = 0; i < suffixes.length; i++) \n      if (endsWithCheckLength(s, len, suffixes[i]))\n        len = deleteN(s, len - suffixes[i].length, len, suffixes[i].length);\n    return len;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d8864af8de677008c534d14fc77568b83a6c1361"],"d8864af8de677008c534d14fc77568b83a6c1361":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f4e87790277826a2aea119328600dfb07761f32":["0f080986da691a3bba7b757f43ab72cdc82b57ce","d8864af8de677008c534d14fc77568b83a6c1361"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8864af8de677008c534d14fc77568b83a6c1361":["b89678825b68eccaf09e6ab71675fc0b0af1e099","5f4e87790277826a2aea119328600dfb07761f32"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"5f4e87790277826a2aea119328600dfb07761f32":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["d8864af8de677008c534d14fc77568b83a6c1361","5f4e87790277826a2aea119328600dfb07761f32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}