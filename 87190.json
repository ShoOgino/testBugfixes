{"path":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/PackedIntValues.PackedIntsReader#PackedIntsReader(Directory,String,int,IOContext).mjava","commits":[{"id":"f9efc72acdea22f5285be0a808f8bba51bb8e367","date":1323217280,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/PackedIntValues.PackedIntsReader#PackedIntsReader(Directory,String,int,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntValues.PackedIntsReader#PackedIntsReader(Directory,String,int,IOContext).mjava","sourceNew":"    protected PackedIntsReader(Directory dir, String id, int numDocs,\n        IOContext context) throws IOException {\n      datIn = dir.openInput(\n                IndexFileNames.segmentFileName(id, Bytes.DV_SEGMENT_SUFFIX, Writer.DATA_EXTENSION),\n          context);\n      this.numDocs = numDocs;\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        type = datIn.readByte();\n        values = type == FIXED_64 ? new LongValues() : null;\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(datIn);\n        }\n      }\n    }\n\n","sourceOld":"    protected PackedIntsReader(Directory dir, String id, int numDocs,\n        IOContext context) throws IOException {\n      datIn = dir.openInput(\n                IndexFileNames.segmentFileName(id, Bytes.DV_SEGMENT_SUFFIX, Writer.DATA_EXTENSION),\n          context);\n      this.numDocs = numDocs;\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        type = datIn.readByte();\n        values = type == FIXED_64 ? new LongValues() : null;\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/PackedIntValues.PackedIntsReader#PackedIntsReader(Directory,String,int,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/PackedIntValues.PackedIntsReader#PackedIntsReader(Directory,String,int,IOContext).mjava","sourceNew":"    protected PackedIntsReader(Directory dir, String id, int numDocs,\n        IOContext context) throws IOException {\n      datIn = dir.openInput(\n                IndexFileNames.segmentFileName(id, Bytes.DV_SEGMENT_SUFFIX, Writer.DATA_EXTENSION),\n          context);\n      this.numDocs = numDocs;\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        type = datIn.readByte();\n        values = type == FIXED_64 ? new LongValues() : null;\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(datIn);\n        }\n      }\n    }\n\n","sourceOld":"    protected PackedIntsReader(Directory dir, String id, int numDocs,\n        IOContext context) throws IOException {\n      datIn = dir.openInput(\n                IndexFileNames.segmentFileName(id, Bytes.DV_SEGMENT_SUFFIX, Writer.DATA_EXTENSION),\n          context);\n      this.numDocs = numDocs;\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        type = datIn.readByte();\n        values = type == FIXED_64 ? new LongValues() : null;\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/PackedIntValues.PackedIntsReader#PackedIntsReader(Directory,String,int,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/PackedIntValues.PackedIntsReader#PackedIntsReader(Directory,String,int,IOContext).mjava","sourceNew":"    protected PackedIntsReader(Directory dir, String id, int numDocs,\n        IOContext context) throws IOException {\n      datIn = dir.openInput(\n                IndexFileNames.segmentFileName(id, Bytes.DV_SEGMENT_SUFFIX, Writer.DATA_EXTENSION),\n          context);\n      this.numDocs = numDocs;\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        type = datIn.readByte();\n        values = type == FIXED_64 ? new LongValues() : null;\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(datIn);\n        }\n      }\n    }\n\n","sourceOld":"    protected PackedIntsReader(Directory dir, String id, int numDocs,\n        IOContext context) throws IOException {\n      datIn = dir.openInput(\n                IndexFileNames.segmentFileName(id, Bytes.DV_SEGMENT_SUFFIX, Writer.DATA_EXTENSION),\n          context);\n      this.numDocs = numDocs;\n      boolean success = false;\n      try {\n        CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n        type = datIn.readByte();\n        values = type == FIXED_64 ? new LongValues() : null;\n        success = true;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f9efc72acdea22f5285be0a808f8bba51bb8e367"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f9efc72acdea22f5285be0a808f8bba51bb8e367","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}