{"path":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#stripIllegalOperators(CharSequence).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#stripIllegalOperators(CharSequence).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#stripIllegalOperators(CharSequence).mjava","sourceNew":"  /**\n   * Strips operators that are used illegally, otherwise reuturns it's\n   * input.  Some examples of illegal user queries are: \"chocolate +-\n   * chip\", \"chocolate - - chip\", and \"chocolate chip -\".\n   */\n  public static CharSequence stripIllegalOperators(CharSequence s) {\n    String temp = CONSECUTIVE_OP_PATTERN.matcher( s ).replaceAll( \" \" );\n    return DANGLING_OP_PATTERN.matcher( temp ).replaceAll( \"\" );\n  }\n\n","sourceOld":"  /**\n   * Strips operators that are used illegally, otherwise reuturns it's\n   * input.  Some examples of illegal user queries are: \"chocolate +-\n   * chip\", \"chocolate - - chip\", and \"chocolate chip -\".\n   */\n  public static CharSequence stripIllegalOperators(CharSequence s) {\n    String temp = CONSECUTIVE_OP_PATTERN.matcher( s ).replaceAll( \" \" );\n    return DANGLING_OP_PATTERN.matcher( temp ).replaceAll( \"\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#stripIllegalOperators(CharSequence).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#stripIllegalOperators(CharSequence).mjava","sourceNew":"  /**\n   * Strips operators that are used illegally, otherwise reuturns it's\n   * input.  Some examples of illegal user queries are: \"chocolate +-\n   * chip\", \"chocolate - - chip\", and \"chocolate chip -\".\n   */\n  public static CharSequence stripIllegalOperators(CharSequence s) {\n    String temp = CONSECUTIVE_OP_PATTERN.matcher( s ).replaceAll( \" \" );\n    return DANGLING_OP_PATTERN.matcher( temp ).replaceAll( \"\" );\n  }\n\n","sourceOld":"  /**\n   * Strips operators that are used illegally, otherwise reuturns it's\n   * input.  Some examples of illegal user queries are: \"chocolate +-\n   * chip\", \"chocolate - - chip\", and \"chocolate chip -\".\n   */\n  public static CharSequence stripIllegalOperators(CharSequence s) {\n    String temp = CONSECUTIVE_OP_PATTERN.matcher( s ).replaceAll( \" \" );\n    return DANGLING_OP_PATTERN.matcher( temp ).replaceAll( \"\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#stripIllegalOperators(CharSequence).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#stripIllegalOperators(CharSequence).mjava","sourceNew":"  /**\n   * Strips operators that are used illegally, otherwise reuturns it's\n   * input.  Some examples of illegal user queries are: \"chocolate +-\n   * chip\", \"chocolate - - chip\", and \"chocolate chip -\".\n   */\n  public static CharSequence stripIllegalOperators(CharSequence s) {\n    String temp = CONSECUTIVE_OP_PATTERN.matcher( s ).replaceAll( \" \" );\n    return DANGLING_OP_PATTERN.matcher( temp ).replaceAll( \"\" );\n  }\n\n","sourceOld":"  /**\n   * Strips operators that are used illegally, otherwise reuturns it's\n   * input.  Some examples of illegal user queries are: \"chocolate +-\n   * chip\", \"chocolate - - chip\", and \"chocolate chip -\".\n   */\n  public static CharSequence stripIllegalOperators(CharSequence s) {\n    String temp = CONSECUTIVE_OP_PATTERN.matcher( s ).replaceAll( \" \" );\n    return DANGLING_OP_PATTERN.matcher( temp ).replaceAll( \"\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"500fd58639fd3628adbf7471f274e5baaffddf71","date":1357731488,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#stripIllegalOperators(CharSequence).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#stripIllegalOperators(CharSequence).mjava","sourceNew":"  /**\n   * Strips operators that are used illegally, otherwise returns its\n   * input.  Some examples of illegal user queries are: \"chocolate +-\n   * chip\", \"chocolate - - chip\", and \"chocolate chip -\".\n   */\n  public static CharSequence stripIllegalOperators(CharSequence s) {\n    String temp = CONSECUTIVE_OP_PATTERN.matcher( s ).replaceAll( \" \" );\n    return DANGLING_OP_PATTERN.matcher( temp ).replaceAll( \"\" );\n  }\n\n","sourceOld":"  /**\n   * Strips operators that are used illegally, otherwise reuturns it's\n   * input.  Some examples of illegal user queries are: \"chocolate +-\n   * chip\", \"chocolate - - chip\", and \"chocolate chip -\".\n   */\n  public static CharSequence stripIllegalOperators(CharSequence s) {\n    String temp = CONSECUTIVE_OP_PATTERN.matcher( s ).replaceAll( \" \" );\n    return DANGLING_OP_PATTERN.matcher( temp ).replaceAll( \"\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#stripIllegalOperators(CharSequence).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#stripIllegalOperators(CharSequence).mjava","sourceNew":"  /**\n   * Strips operators that are used illegally, otherwise returns its\n   * input.  Some examples of illegal user queries are: \"chocolate +-\n   * chip\", \"chocolate - - chip\", and \"chocolate chip -\".\n   */\n  public static CharSequence stripIllegalOperators(CharSequence s) {\n    String temp = CONSECUTIVE_OP_PATTERN.matcher( s ).replaceAll( \" \" );\n    return DANGLING_OP_PATTERN.matcher( temp ).replaceAll( \"\" );\n  }\n\n","sourceOld":"  /**\n   * Strips operators that are used illegally, otherwise reuturns it's\n   * input.  Some examples of illegal user queries are: \"chocolate +-\n   * chip\", \"chocolate - - chip\", and \"chocolate chip -\".\n   */\n  public static CharSequence stripIllegalOperators(CharSequence s) {\n    String temp = CONSECUTIVE_OP_PATTERN.matcher( s ).replaceAll( \" \" );\n    return DANGLING_OP_PATTERN.matcher( temp ).replaceAll( \"\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"500fd58639fd3628adbf7471f274e5baaffddf71":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["c26f00b574427b55127e869b935845554afde1fa","500fd58639fd3628adbf7471f274e5baaffddf71"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["500fd58639fd3628adbf7471f274e5baaffddf71"]},"commit2Childs":{"500fd58639fd3628adbf7471f274e5baaffddf71":["4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["500fd58639fd3628adbf7471f274e5baaffddf71","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}