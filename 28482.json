{"path":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsWriter#finish(FieldInfos,int).mjava","commits":[{"id":"129c6e8ac0c0d9a110ba29e4b5f1889374f30076","date":1337725510,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsWriter#finish(int).mjava","sourceNew":"  @Override\n  public void finish(FieldInfos fis, int numDocs) throws IOException {\n    if (numDocsWritten != numDocs) {\n      throw new RuntimeException(\"mergeFields produced an invalid result: docCount is \" + numDocs \n          + \" but only saw \" + numDocsWritten + \" file=\" + out.toString() + \"; now aborting this merge to prevent index corruption\");\n    }\n    write(END);\n    newLine();\n  }\n\n","sourceOld":"  @Override\n  public void finish(int numDocs) throws IOException {\n    if (numDocsWritten != numDocs) {\n      throw new RuntimeException(\"mergeFields produced an invalid result: docCount is \" + numDocs \n          + \" but only saw \" + numDocsWritten + \" file=\" + out.toString() + \"; now aborting this merge to prevent index corruption\");\n    }\n    write(END);\n    newLine();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsWriter#finish(int).mjava","sourceNew":"  @Override\n  public void finish(FieldInfos fis, int numDocs) throws IOException {\n    if (numDocsWritten != numDocs) {\n      throw new RuntimeException(\"mergeFields produced an invalid result: docCount is \" + numDocs \n          + \" but only saw \" + numDocsWritten + \" file=\" + out.toString() + \"; now aborting this merge to prevent index corruption\");\n    }\n    write(END);\n    newLine();\n  }\n\n","sourceOld":"  @Override\n  public void finish(int numDocs) throws IOException {\n    if (numDocsWritten != numDocs) {\n      throw new RuntimeException(\"mergeFields produced an invalid result: docCount is \" + numDocs \n          + \" but only saw \" + numDocsWritten + \" file=\" + out.toString() + \"; now aborting this merge to prevent index corruption\");\n    }\n    write(END);\n    newLine();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsWriter#finish(FieldInfos,int).mjava","sourceNew":"  @Override\n  public void finish(FieldInfos fis, int numDocs) throws IOException {\n    if (numDocsWritten != numDocs) {\n      throw new RuntimeException(\"mergeFields produced an invalid result: docCount is \" + numDocs \n          + \" but only saw \" + numDocsWritten + \" file=\" + out.toString() + \"; now aborting this merge to prevent index corruption\");\n    }\n    write(END);\n    newLine();\n  }\n\n","sourceOld":"  @Override\n  public void finish(FieldInfos fis, int numDocs) throws IOException {\n    if (numDocsWritten != numDocs) {\n      throw new RuntimeException(\"mergeFields produced an invalid result: docCount is \" + numDocs \n          + \" but only saw \" + numDocsWritten + \" file=\" + out.toString() + \"; now aborting this merge to prevent index corruption\");\n    }\n    write(END);\n    newLine();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}