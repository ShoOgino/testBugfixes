{"path":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/IntersectTermsEnum#copyTerm().mjava","commits":[{"id":"7266c313bb3b4fbcde3dcc82556182e1fae90080","date":1400183760,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/IntersectTermsEnum#copyTerm().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/IntersectEnum#copyTerm().mjava","sourceNew":"  private void copyTerm() {\n    //System.out.println(\"      copyTerm cur.prefix=\" + currentFrame.prefix + \" cur.suffix=\" + currentFrame.suffix + \" first=\" + (char) currentFrame.suffixBytes[currentFrame.startBytePos]);\n    final int len = currentFrame.prefix + currentFrame.suffix;\n    if (term.bytes.length < len) {\n      term.bytes = ArrayUtil.grow(term.bytes, len);\n    }\n    System.arraycopy(currentFrame.suffixBytes, currentFrame.startBytePos, term.bytes, currentFrame.prefix, currentFrame.suffix);\n    term.length = len;\n  }\n\n","sourceOld":"  private void copyTerm() {\n    //System.out.println(\"      copyTerm cur.prefix=\" + currentFrame.prefix + \" cur.suffix=\" + currentFrame.suffix + \" first=\" + (char) currentFrame.suffixBytes[currentFrame.startBytePos]);\n    final int len = currentFrame.prefix + currentFrame.suffix;\n    if (term.bytes.length < len) {\n      term.bytes = ArrayUtil.grow(term.bytes, len);\n    }\n    System.arraycopy(currentFrame.suffixBytes, currentFrame.startBytePos, term.bytes, currentFrame.prefix, currentFrame.suffix);\n    term.length = len;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d637064d608752565d4f9f41b2497dfdfdde50e","date":1400798123,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/IntersectTermsEnum#copyTerm().mjava","pathOld":"/dev/null","sourceNew":"  private void copyTerm() {\n    //System.out.println(\"      copyTerm cur.prefix=\" + currentFrame.prefix + \" cur.suffix=\" + currentFrame.suffix + \" first=\" + (char) currentFrame.suffixBytes[currentFrame.startBytePos]);\n    final int len = currentFrame.prefix + currentFrame.suffix;\n    if (term.bytes.length < len) {\n      term.bytes = ArrayUtil.grow(term.bytes, len);\n    }\n    System.arraycopy(currentFrame.suffixBytes, currentFrame.startBytePos, term.bytes, currentFrame.prefix, currentFrame.suffix);\n    term.length = len;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59db5e5f780185e0155d296a323e440a6ecfd3b6","date":1435089559,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/IntersectTermsEnum#copyTerm().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/IntersectTermsEnum#copyTerm().mjava","sourceNew":"  private void copyTerm() {\n    final int len = currentFrame.prefix + currentFrame.suffix;\n    if (term.bytes.length < len) {\n      term.bytes = ArrayUtil.grow(term.bytes, len);\n    }\n    System.arraycopy(currentFrame.suffixBytes, currentFrame.startBytePos, term.bytes, currentFrame.prefix, currentFrame.suffix);\n    term.length = len;\n  }\n\n","sourceOld":"  private void copyTerm() {\n    //System.out.println(\"      copyTerm cur.prefix=\" + currentFrame.prefix + \" cur.suffix=\" + currentFrame.suffix + \" first=\" + (char) currentFrame.suffixBytes[currentFrame.startBytePos]);\n    final int len = currentFrame.prefix + currentFrame.suffix;\n    if (term.bytes.length < len) {\n      term.bytes = ArrayUtil.grow(term.bytes, len);\n    }\n    System.arraycopy(currentFrame.suffixBytes, currentFrame.startBytePos, term.bytes, currentFrame.prefix, currentFrame.suffix);\n    term.length = len;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d637064d608752565d4f9f41b2497dfdfdde50e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7266c313bb3b4fbcde3dcc82556182e1fae90080"],"59db5e5f780185e0155d296a323e440a6ecfd3b6":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"7266c313bb3b4fbcde3dcc82556182e1fae90080":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["59db5e5f780185e0155d296a323e440a6ecfd3b6"]},"commit2Childs":{"4d637064d608752565d4f9f41b2497dfdfdde50e":["59db5e5f780185e0155d296a323e440a6ecfd3b6"],"59db5e5f780185e0155d296a323e440a6ecfd3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7266c313bb3b4fbcde3dcc82556182e1fae90080":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d637064d608752565d4f9f41b2497dfdfdde50e","7266c313bb3b4fbcde3dcc82556182e1fae90080"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}