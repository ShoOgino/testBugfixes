{"path":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoConvexPolygon#createCenterPoint().mjava","commits":[{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoConvexPolygon#createCenterPoint().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoConvexPolygon#createCenterPoint().mjava","sourceNew":"  protected void createCenterPoint() {\n    // In order to naively confirm that the polygon is convex, I would need to\n    // check every edge, and verify that every point (other than the edge endpoints)\n    // is within the edge's sided plane.  This is an order n^2 operation.  That's still\n    // not wrong, though, because everything else about polygons has a similar cost.\n    for (int edgeIndex = 0; edgeIndex < edges.length; edgeIndex++) {\n      final SidedPlane edge = edges[edgeIndex];\n      for (int pointIndex = 0; pointIndex < points.size(); pointIndex++) {\n        if (pointIndex != edgeIndex && pointIndex != legalIndex(edgeIndex + 1)) {\n          if (!edge.isWithin(points.get(pointIndex)))\n            throw new IllegalArgumentException(\"Polygon is not convex: Point \" + points.get(pointIndex) + \" Edge \" + edge);\n        }\n      }\n    }\n    edgePoints = new GeoPoint[]{points.get(0)};\n  }\n\n","sourceOld":"  protected void createCenterPoint() {\n    // In order to naively confirm that the polygon is convex, I would need to\n    // check every edge, and verify that every point (other than the edge endpoints)\n    // is within the edge's sided plane.  This is an order n^2 operation.  That's still\n    // not wrong, though, because everything else about polygons has a similar cost.\n    for (int edgeIndex = 0; edgeIndex < edges.length; edgeIndex++) {\n      final SidedPlane edge = edges[edgeIndex];\n      for (int pointIndex = 0; pointIndex < points.size(); pointIndex++) {\n        if (pointIndex != edgeIndex && pointIndex != legalIndex(edgeIndex + 1)) {\n          if (!edge.isWithin(points.get(pointIndex)))\n            throw new IllegalArgumentException(\"Polygon is not convex: Point \" + points.get(pointIndex) + \" Edge \" + edge);\n        }\n      }\n    }\n    edgePoints = new GeoPoint[]{points.get(0)};\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71849bd31d150133a9a1027bf1607967b406c57","date":1436811056,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoConvexPolygon#createCenterPoint().mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoConvexPolygon#createCenterPoint().mjava","sourceNew":"  /** Compute a reasonable center point.\n   */\n  protected void createCenterPoint() {\n    // In order to naively confirm that the polygon is convex, I would need to\n    // check every edge, and verify that every point (other than the edge endpoints)\n    // is within the edge's sided plane.  This is an order n^2 operation.  That's still\n    // not wrong, though, because everything else about polygons has a similar cost.\n    for (int edgeIndex = 0; edgeIndex < edges.length; edgeIndex++) {\n      final SidedPlane edge = edges[edgeIndex];\n      for (int pointIndex = 0; pointIndex < points.size(); pointIndex++) {\n        if (pointIndex != edgeIndex && pointIndex != legalIndex(edgeIndex + 1)) {\n          if (!edge.isWithin(points.get(pointIndex)))\n            throw new IllegalArgumentException(\"Polygon is not convex: Point \" + points.get(pointIndex) + \" Edge \" + edge);\n        }\n      }\n    }\n    edgePoints = new GeoPoint[]{points.get(0)};\n  }\n\n","sourceOld":"  protected void createCenterPoint() {\n    // In order to naively confirm that the polygon is convex, I would need to\n    // check every edge, and verify that every point (other than the edge endpoints)\n    // is within the edge's sided plane.  This is an order n^2 operation.  That's still\n    // not wrong, though, because everything else about polygons has a similar cost.\n    for (int edgeIndex = 0; edgeIndex < edges.length; edgeIndex++) {\n      final SidedPlane edge = edges[edgeIndex];\n      for (int pointIndex = 0; pointIndex < points.size(); pointIndex++) {\n        if (pointIndex != edgeIndex && pointIndex != legalIndex(edgeIndex + 1)) {\n          if (!edge.isWithin(points.get(pointIndex)))\n            throw new IllegalArgumentException(\"Polygon is not convex: Point \" + points.get(pointIndex) + \" Edge \" + edge);\n        }\n      }\n    }\n    edgePoints = new GeoPoint[]{points.get(0)};\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoConvexPolygon#createCenterPoint().mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoConvexPolygon#createCenterPoint().mjava","sourceNew":"  /** Compute a reasonable center point.\n   */\n  protected void createCenterPoint() {\n    // In order to naively confirm that the polygon is convex, I would need to\n    // check every edge, and verify that every point (other than the edge endpoints)\n    // is within the edge's sided plane.  This is an order n^2 operation.  That's still\n    // not wrong, though, because everything else about polygons has a similar cost.\n    for (int edgeIndex = 0; edgeIndex < edges.length; edgeIndex++) {\n      final SidedPlane edge = edges[edgeIndex];\n      for (int pointIndex = 0; pointIndex < points.size(); pointIndex++) {\n        if (pointIndex != edgeIndex && pointIndex != legalIndex(edgeIndex + 1)) {\n          if (!edge.isWithin(points.get(pointIndex)))\n            throw new IllegalArgumentException(\"Polygon is not convex: Point \" + points.get(pointIndex) + \" Edge \" + edge);\n        }\n      }\n    }\n    edgePoints = new GeoPoint[]{points.get(0)};\n  }\n\n","sourceOld":"  /** Compute a reasonable center point.\n   */\n  protected void createCenterPoint() {\n    // In order to naively confirm that the polygon is convex, I would need to\n    // check every edge, and verify that every point (other than the edge endpoints)\n    // is within the edge's sided plane.  This is an order n^2 operation.  That's still\n    // not wrong, though, because everything else about polygons has a similar cost.\n    for (int edgeIndex = 0; edgeIndex < edges.length; edgeIndex++) {\n      final SidedPlane edge = edges[edgeIndex];\n      for (int pointIndex = 0; pointIndex < points.size(); pointIndex++) {\n        if (pointIndex != edgeIndex && pointIndex != legalIndex(edgeIndex + 1)) {\n          if (!edge.isWithin(points.get(pointIndex)))\n            throw new IllegalArgumentException(\"Polygon is not convex: Point \" + points.get(pointIndex) + \" Edge \" + edge);\n        }\n      }\n    }\n    edgePoints = new GeoPoint[]{points.get(0)};\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a71849bd31d150133a9a1027bf1607967b406c57":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3022be5842502b7c2a57a5124199bbc30236f0a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b4e444678504caf66a8060b1d514383aa4feac0c":["a71849bd31d150133a9a1027bf1607967b406c57"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4e444678504caf66a8060b1d514383aa4feac0c"]},"commit2Childs":{"a71849bd31d150133a9a1027bf1607967b406c57":["b4e444678504caf66a8060b1d514383aa4feac0c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["a71849bd31d150133a9a1027bf1607967b406c57"],"b4e444678504caf66a8060b1d514383aa4feac0c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}