{"path":"modules/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#like(int).mjava","commits":[{"id":"b7bae1b88906b69dec0d80b1a7afc3c98ec50fa1","date":1310609231,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#like(int).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#like(int).mjava","sourceNew":"  /**\n   * Return a query that will return docs like the passed lucene document ID.\n   *\n   * @param docNum the documentID of the lucene doc to generate the 'More Like This\" query for.\n   * @return a query that will return docs like the passed lucene document ID.\n   */\n  public Query like(int docNum) throws IOException {\n    if (fieldNames == null) {\n      // gather list of valid fields from lucene\n      Collection<String> fields = ir.getFieldNames(IndexReader.FieldOption.INDEXED);\n      fieldNames = fields.toArray(new String[fields.size()]);\n    }\n\n    return createQuery(retrieveTerms(docNum));\n  }\n\n","sourceOld":"  /**\n   * Return a query that will return docs like the passed lucene document ID.\n   *\n   * @param docNum the documentID of the lucene doc to generate the 'More Like This\" query for.\n   * @return a query that will return docs like the passed lucene document ID.\n   */\n  public Query like(int docNum) throws IOException {\n    if (fieldNames == null) {\n      // gather list of valid fields from lucene\n      Collection<String> fields = ir.getFieldNames(IndexReader.FieldOption.INDEXED);\n      fieldNames = fields.toArray(new String[fields.size()]);\n    }\n\n    return createQuery(retrieveTerms(docNum));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06","date":1326148180,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#like(int).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#like(int).mjava","sourceNew":"  /**\n   * Return a query that will return docs like the passed lucene document ID.\n   *\n   * @param docNum the documentID of the lucene doc to generate the 'More Like This\" query for.\n   * @return a query that will return docs like the passed lucene document ID.\n   */\n  public Query like(int docNum) throws IOException {\n    if (fieldNames == null) {\n      // gather list of valid fields from lucene\n      Collection<String> fields = ReaderUtil.getIndexedFields(ir);\n      fieldNames = fields.toArray(new String[fields.size()]);\n    }\n\n    return createQuery(retrieveTerms(docNum));\n  }\n\n","sourceOld":"  /**\n   * Return a query that will return docs like the passed lucene document ID.\n   *\n   * @param docNum the documentID of the lucene doc to generate the 'More Like This\" query for.\n   * @return a query that will return docs like the passed lucene document ID.\n   */\n  public Query like(int docNum) throws IOException {\n    if (fieldNames == null) {\n      // gather list of valid fields from lucene\n      Collection<String> fields = ir.getFieldNames(IndexReader.FieldOption.INDEXED);\n      fieldNames = fields.toArray(new String[fields.size()]);\n    }\n\n    return createQuery(retrieveTerms(docNum));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61e20f33ce8ff701576366fdb03955eded5f209b","date":1327852832,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#like(int).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#like(int).mjava","sourceNew":"  /**\n   * Return a query that will return docs like the passed lucene document ID.\n   *\n   * @param docNum the documentID of the lucene doc to generate the 'More Like This\" query for.\n   * @return a query that will return docs like the passed lucene document ID.\n   */\n  public Query like(int docNum) throws IOException {\n    if (fieldNames == null) {\n      // gather list of valid fields from lucene\n      Collection<String> fields = MultiFields.getIndexedFields(ir);\n      fieldNames = fields.toArray(new String[fields.size()]);\n    }\n\n    return createQuery(retrieveTerms(docNum));\n  }\n\n","sourceOld":"  /**\n   * Return a query that will return docs like the passed lucene document ID.\n   *\n   * @param docNum the documentID of the lucene doc to generate the 'More Like This\" query for.\n   * @return a query that will return docs like the passed lucene document ID.\n   */\n  public Query like(int docNum) throws IOException {\n    if (fieldNames == null) {\n      // gather list of valid fields from lucene\n      Collection<String> fields = ReaderUtil.getIndexedFields(ir);\n      fieldNames = fields.toArray(new String[fields.size()]);\n    }\n\n    return createQuery(retrieveTerms(docNum));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#like(int).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#like(int).mjava","sourceNew":"  /**\n   * Return a query that will return docs like the passed lucene document ID.\n   *\n   * @param docNum the documentID of the lucene doc to generate the 'More Like This\" query for.\n   * @return a query that will return docs like the passed lucene document ID.\n   */\n  public Query like(int docNum) throws IOException {\n    if (fieldNames == null) {\n      // gather list of valid fields from lucene\n      Collection<String> fields = MultiFields.getIndexedFields(ir);\n      fieldNames = fields.toArray(new String[fields.size()]);\n    }\n\n    return createQuery(retrieveTerms(docNum));\n  }\n\n","sourceOld":"  /**\n   * Return a query that will return docs like the passed lucene document ID.\n   *\n   * @param docNum the documentID of the lucene doc to generate the 'More Like This\" query for.\n   * @return a query that will return docs like the passed lucene document ID.\n   */\n  public Query like(int docNum) throws IOException {\n    if (fieldNames == null) {\n      // gather list of valid fields from lucene\n      Collection<String> fields = ReaderUtil.getIndexedFields(ir);\n      fieldNames = fields.toArray(new String[fields.size()]);\n    }\n\n    return createQuery(retrieveTerms(docNum));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#like(int).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/mlt/MoreLikeThis#like(int).mjava","sourceNew":"  /**\n   * Return a query that will return docs like the passed lucene document ID.\n   *\n   * @param docNum the documentID of the lucene doc to generate the 'More Like This\" query for.\n   * @return a query that will return docs like the passed lucene document ID.\n   */\n  public Query like(int docNum) throws IOException {\n    if (fieldNames == null) {\n      // gather list of valid fields from lucene\n      Collection<String> fields = MultiFields.getIndexedFields(ir);\n      fieldNames = fields.toArray(new String[fields.size()]);\n    }\n\n    return createQuery(retrieveTerms(docNum));\n  }\n\n","sourceOld":"  /**\n   * Return a query that will return docs like the passed lucene document ID.\n   *\n   * @param docNum the documentID of the lucene doc to generate the 'More Like This\" query for.\n   * @return a query that will return docs like the passed lucene document ID.\n   */\n  public Query like(int docNum) throws IOException {\n    if (fieldNames == null) {\n      // gather list of valid fields from lucene\n      Collection<String> fields = MultiFields.getIndexedFields(ir);\n      fieldNames = fields.toArray(new String[fields.size()]);\n    }\n\n    return createQuery(retrieveTerms(docNum));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"61e20f33ce8ff701576366fdb03955eded5f209b":["3321cfbf7f8aba27e37e7a4d6901531a97ac2b06"],"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06":["b7bae1b88906b69dec0d80b1a7afc3c98ec50fa1"],"b7bae1b88906b69dec0d80b1a7afc3c98ec50fa1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3321cfbf7f8aba27e37e7a4d6901531a97ac2b06","61e20f33ce8ff701576366fdb03955eded5f209b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b7bae1b88906b69dec0d80b1a7afc3c98ec50fa1"],"61e20f33ce8ff701576366fdb03955eded5f209b":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06":["61e20f33ce8ff701576366fdb03955eded5f209b","5cab9a86bd67202d20b6adc463008c8e982b070a"],"b7bae1b88906b69dec0d80b1a7afc3c98ec50fa1":["3321cfbf7f8aba27e37e7a4d6901531a97ac2b06"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}