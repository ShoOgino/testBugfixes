{"path":"solr/core/src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","sourceNew":"    private HttpCachingConfig(SolrConfig conf) {\n\n      never304 = conf.getBool(CACHE_PRE+\"@never304\", false);\n      \n      etagSeed = conf.get(CACHE_PRE+\"@etagSeed\", \"Solr\");\n      \n\n      lastModFrom = LastModFrom.parse(conf.get(CACHE_PRE+\"@lastModFrom\",\n                                               \"openTime\"));\n      \n      cacheControlHeader = conf.get(CACHE_PRE+\"cacheControl\",null);\n\n      Long tmp = null; // maxAge\n      if (null != cacheControlHeader) {\n        try { \n          final Matcher ttlMatcher = MAX_AGE.matcher(cacheControlHeader);\n          final String ttlStr = ttlMatcher.find() ? ttlMatcher.group(1) : null;\n          tmp = (null != ttlStr && !\"\".equals(ttlStr))\n            ? Long.valueOf(ttlStr)\n            : null;\n        } catch (Exception e) {\n          log.warn( \"Ignoring exception while attempting to \" +\n                    \"extract max-age from cacheControl config: \" +\n                    cacheControlHeader, e);\n        }\n      }\n      maxAge = tmp;\n\n    }\n\n","sourceOld":"    private HttpCachingConfig(SolrConfig conf) {\n\n      never304 = conf.getBool(CACHE_PRE+\"@never304\", false);\n      \n      etagSeed = conf.get(CACHE_PRE+\"@etagSeed\", \"Solr\");\n      \n\n      lastModFrom = LastModFrom.parse(conf.get(CACHE_PRE+\"@lastModFrom\",\n                                               \"openTime\"));\n      \n      cacheControlHeader = conf.get(CACHE_PRE+\"cacheControl\",null);\n\n      Long tmp = null; // maxAge\n      if (null != cacheControlHeader) {\n        try { \n          final Matcher ttlMatcher = MAX_AGE.matcher(cacheControlHeader);\n          final String ttlStr = ttlMatcher.find() ? ttlMatcher.group(1) : null;\n          tmp = (null != ttlStr && !\"\".equals(ttlStr))\n            ? Long.valueOf(ttlStr)\n            : null;\n        } catch (Exception e) {\n          log.warn( \"Ignoring exception while attempting to \" +\n                    \"extract max-age from cacheControl config: \" +\n                    cacheControlHeader, e);\n        }\n      }\n      maxAge = tmp;\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","sourceNew":"    private HttpCachingConfig(SolrConfig conf) {\n\n      never304 = conf.getBool(CACHE_PRE+\"@never304\", false);\n      \n      etagSeed = conf.get(CACHE_PRE+\"@etagSeed\", \"Solr\");\n      \n\n      lastModFrom = LastModFrom.parse(conf.get(CACHE_PRE+\"@lastModFrom\",\n                                               \"openTime\"));\n      \n      cacheControlHeader = conf.get(CACHE_PRE+\"cacheControl\",null);\n\n      Long tmp = null; // maxAge\n      if (null != cacheControlHeader) {\n        try { \n          final Matcher ttlMatcher = MAX_AGE.matcher(cacheControlHeader);\n          final String ttlStr = ttlMatcher.find() ? ttlMatcher.group(1) : null;\n          tmp = (null != ttlStr && !\"\".equals(ttlStr))\n            ? Long.valueOf(ttlStr)\n            : null;\n        } catch (Exception e) {\n          log.warn( \"Ignoring exception while attempting to \" +\n                    \"extract max-age from cacheControl config: \" +\n                    cacheControlHeader, e);\n        }\n      }\n      maxAge = tmp;\n\n    }\n\n","sourceOld":"    private HttpCachingConfig(SolrConfig conf) {\n\n      never304 = conf.getBool(CACHE_PRE+\"@never304\", false);\n      \n      etagSeed = conf.get(CACHE_PRE+\"@etagSeed\", \"Solr\");\n      \n\n      lastModFrom = LastModFrom.parse(conf.get(CACHE_PRE+\"@lastModFrom\",\n                                               \"openTime\"));\n      \n      cacheControlHeader = conf.get(CACHE_PRE+\"cacheControl\",null);\n\n      Long tmp = null; // maxAge\n      if (null != cacheControlHeader) {\n        try { \n          final Matcher ttlMatcher = MAX_AGE.matcher(cacheControlHeader);\n          final String ttlStr = ttlMatcher.find() ? ttlMatcher.group(1) : null;\n          tmp = (null != ttlStr && !\"\".equals(ttlStr))\n            ? Long.valueOf(ttlStr)\n            : null;\n        } catch (Exception e) {\n          log.warn( \"Ignoring exception while attempting to \" +\n                    \"extract max-age from cacheControl config: \" +\n                    cacheControlHeader, e);\n        }\n      }\n      maxAge = tmp;\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","sourceNew":"    private HttpCachingConfig(SolrConfig conf) {\n\n      never304 = conf.getBool(CACHE_PRE+\"@never304\", false);\n      \n      etagSeed = conf.get(CACHE_PRE+\"@etagSeed\", \"Solr\");\n      \n\n      lastModFrom = LastModFrom.parse(conf.get(CACHE_PRE+\"@lastModFrom\",\n                                               \"openTime\"));\n      \n      cacheControlHeader = conf.get(CACHE_PRE+\"cacheControl\",null);\n\n      Long tmp = null; // maxAge\n      if (null != cacheControlHeader) {\n        try { \n          final Matcher ttlMatcher = MAX_AGE.matcher(cacheControlHeader);\n          final String ttlStr = ttlMatcher.find() ? ttlMatcher.group(1) : null;\n          tmp = (null != ttlStr && !\"\".equals(ttlStr))\n            ? Long.valueOf(ttlStr)\n            : null;\n        } catch (Exception e) {\n          log.warn( \"Ignoring exception while attempting to \" +\n                    \"extract max-age from cacheControl config: \" +\n                    cacheControlHeader, e);\n        }\n      }\n      maxAge = tmp;\n\n    }\n\n","sourceOld":"    private HttpCachingConfig(SolrConfig conf) {\n\n      never304 = conf.getBool(CACHE_PRE+\"@never304\", false);\n      \n      etagSeed = conf.get(CACHE_PRE+\"@etagSeed\", \"Solr\");\n      \n\n      lastModFrom = LastModFrom.parse(conf.get(CACHE_PRE+\"@lastModFrom\",\n                                               \"openTime\"));\n      \n      cacheControlHeader = conf.get(CACHE_PRE+\"cacheControl\",null);\n\n      Long tmp = null; // maxAge\n      if (null != cacheControlHeader) {\n        try { \n          final Matcher ttlMatcher = MAX_AGE.matcher(cacheControlHeader);\n          final String ttlStr = ttlMatcher.find() ? ttlMatcher.group(1) : null;\n          tmp = (null != ttlStr && !\"\".equals(ttlStr))\n            ? Long.valueOf(ttlStr)\n            : null;\n        } catch (Exception e) {\n          log.warn( \"Ignoring exception while attempting to \" +\n                    \"extract max-age from cacheControl config: \" +\n                    cacheControlHeader, e);\n        }\n      }\n      maxAge = tmp;\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae2f5be890d26585d438eba0b9cc7d3c0a9775be","date":1427387954,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","sourceNew":"    private HttpCachingConfig(SolrConfig conf) {\n\n      never304 = conf.getBool(CACHE_PRE + \"@never304\", false);\n\n      etagSeed = conf.get(CACHE_PRE + \"@etagSeed\", \"Solr\");\n\n\n      lastModFrom = LastModFrom.parse(conf.get(CACHE_PRE + \"@lastModFrom\",\n          \"openTime\"));\n\n      cacheControlHeader = conf.get(CACHE_PRE + \"cacheControl\", null);\n\n      Long tmp = null; // maxAge\n      if (null != cacheControlHeader) {\n        try {\n          final Matcher ttlMatcher = MAX_AGE.matcher(cacheControlHeader);\n          final String ttlStr = ttlMatcher.find() ? ttlMatcher.group(1) : null;\n          tmp = (null != ttlStr && !\"\".equals(ttlStr))\n              ? Long.valueOf(ttlStr)\n              : null;\n        } catch (Exception e) {\n          log.warn(\"Ignoring exception while attempting to \" +\n              \"extract max-age from cacheControl config: \" +\n              cacheControlHeader, e);\n        }\n      }\n      maxAge = tmp;\n\n    }\n\n","sourceOld":"    private HttpCachingConfig(SolrConfig conf) {\n\n      never304 = conf.getBool(CACHE_PRE+\"@never304\", false);\n      \n      etagSeed = conf.get(CACHE_PRE+\"@etagSeed\", \"Solr\");\n      \n\n      lastModFrom = LastModFrom.parse(conf.get(CACHE_PRE+\"@lastModFrom\",\n                                               \"openTime\"));\n      \n      cacheControlHeader = conf.get(CACHE_PRE+\"cacheControl\",null);\n\n      Long tmp = null; // maxAge\n      if (null != cacheControlHeader) {\n        try { \n          final Matcher ttlMatcher = MAX_AGE.matcher(cacheControlHeader);\n          final String ttlStr = ttlMatcher.find() ? ttlMatcher.group(1) : null;\n          tmp = (null != ttlStr && !\"\".equals(ttlStr))\n            ? Long.valueOf(ttlStr)\n            : null;\n        } catch (Exception e) {\n          log.warn( \"Ignoring exception while attempting to \" +\n                    \"extract max-age from cacheControl config: \" +\n                    cacheControlHeader, e);\n        }\n      }\n      maxAge = tmp;\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","sourceNew":"    private HttpCachingConfig(SolrConfig conf) {\n\n      never304 = conf.getBool(CACHE_PRE + \"@never304\", false);\n\n      etagSeed = conf.get(CACHE_PRE + \"@etagSeed\", \"Solr\");\n\n\n      lastModFrom = LastModFrom.parse(conf.get(CACHE_PRE + \"@lastModFrom\",\n          \"openTime\"));\n\n      cacheControlHeader = conf.get(CACHE_PRE + \"cacheControl\", null);\n\n      Long tmp = null; // maxAge\n      if (null != cacheControlHeader) {\n        try {\n          final Matcher ttlMatcher = MAX_AGE.matcher(cacheControlHeader);\n          final String ttlStr = ttlMatcher.find() ? ttlMatcher.group(1) : null;\n          tmp = (null != ttlStr && !\"\".equals(ttlStr))\n              ? Long.valueOf(ttlStr)\n              : null;\n        } catch (Exception e) {\n          log.warn(\"Ignoring exception while attempting to \" +\n              \"extract max-age from cacheControl config: \" +\n              cacheControlHeader, e);\n        }\n      }\n      maxAge = tmp;\n\n    }\n\n","sourceOld":"    private HttpCachingConfig(SolrConfig conf) {\n\n      never304 = conf.getBool(CACHE_PRE+\"@never304\", false);\n      \n      etagSeed = conf.get(CACHE_PRE+\"@etagSeed\", \"Solr\");\n      \n\n      lastModFrom = LastModFrom.parse(conf.get(CACHE_PRE+\"@lastModFrom\",\n                                               \"openTime\"));\n      \n      cacheControlHeader = conf.get(CACHE_PRE+\"cacheControl\",null);\n\n      Long tmp = null; // maxAge\n      if (null != cacheControlHeader) {\n        try { \n          final Matcher ttlMatcher = MAX_AGE.matcher(cacheControlHeader);\n          final String ttlStr = ttlMatcher.find() ? ttlMatcher.group(1) : null;\n          tmp = (null != ttlStr && !\"\".equals(ttlStr))\n            ? Long.valueOf(ttlStr)\n            : null;\n        } catch (Exception e) {\n          log.warn( \"Ignoring exception while attempting to \" +\n                    \"extract max-age from cacheControl config: \" +\n                    cacheControlHeader, e);\n        }\n      }\n      maxAge = tmp;\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"140be51d03394488536f4aacedace29f9b318347","date":1587170432,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig.HttpCachingConfig#HttpCachingConfig(SolrConfig).mjava","sourceNew":"    private HttpCachingConfig(SolrConfig conf) {\n\n      never304 = conf.getBool(CACHE_PRE + \"@never304\", false);\n\n      etagSeed = conf.get(CACHE_PRE + \"@etagSeed\", \"Solr\");\n\n\n      lastModFrom = LastModFrom.parse(conf.get(CACHE_PRE + \"@lastModFrom\",\n          \"openTime\"));\n\n      cacheControlHeader = conf.get(CACHE_PRE + \"cacheControl\", null);\n\n      Long tmp = null; // maxAge\n      if (null != cacheControlHeader) {\n        try {\n          final Matcher ttlMatcher = MAX_AGE.matcher(cacheControlHeader);\n          final String ttlStr = ttlMatcher.find() ? ttlMatcher.group(1) : null;\n          tmp = (null != ttlStr && !\"\".equals(ttlStr))\n              ? Long.valueOf(ttlStr)\n              : null;\n        } catch (Exception e) {\n          log.warn(\"Ignoring exception while attempting to extract max-age from cacheControl config: {}\"\n              , cacheControlHeader, e);\n        }\n      }\n      maxAge = tmp;\n\n    }\n\n","sourceOld":"    private HttpCachingConfig(SolrConfig conf) {\n\n      never304 = conf.getBool(CACHE_PRE + \"@never304\", false);\n\n      etagSeed = conf.get(CACHE_PRE + \"@etagSeed\", \"Solr\");\n\n\n      lastModFrom = LastModFrom.parse(conf.get(CACHE_PRE + \"@lastModFrom\",\n          \"openTime\"));\n\n      cacheControlHeader = conf.get(CACHE_PRE + \"cacheControl\", null);\n\n      Long tmp = null; // maxAge\n      if (null != cacheControlHeader) {\n        try {\n          final Matcher ttlMatcher = MAX_AGE.matcher(cacheControlHeader);\n          final String ttlStr = ttlMatcher.find() ? ttlMatcher.group(1) : null;\n          tmp = (null != ttlStr && !\"\".equals(ttlStr))\n              ? Long.valueOf(ttlStr)\n              : null;\n        } catch (Exception e) {\n          log.warn(\"Ignoring exception while attempting to \" +\n              \"extract max-age from cacheControl config: \" +\n              cacheControlHeader, e);\n        }\n      }\n      maxAge = tmp;\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["c26f00b574427b55127e869b935845554afde1fa","ae2f5be890d26585d438eba0b9cc7d3c0a9775be"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"140be51d03394488536f4aacedace29f9b318347":["ae2f5be890d26585d438eba0b9cc7d3c0a9775be"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae2f5be890d26585d438eba0b9cc7d3c0a9775be":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["140be51d03394488536f4aacedace29f9b318347"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ae2f5be890d26585d438eba0b9cc7d3c0a9775be"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"140be51d03394488536f4aacedace29f9b318347":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ae2f5be890d26585d438eba0b9cc7d3c0a9775be":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","140be51d03394488536f4aacedace29f9b318347"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}