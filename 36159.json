{"path":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepCodec#fieldsConsumer(SegmentWriteState).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepCodec#fieldsConsumer(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n\n    StandardPostingsWriter postingsWriter = new SepPostingsWriterImpl(state, new SingleIntFactory());\n\n    boolean success = false;\n    StandardTermsIndexWriter indexWriter;\n    try {\n      indexWriter = new SimpleStandardTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsWriter.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsConsumer ret = new StandardTermsDictWriter(indexWriter, state, postingsWriter, BytesRef.getUTF8SortedAsUTF16Comparator());\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08932c793647a36953d1816b1060121f48820d3f","date":1277386540,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepCodec#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepCodec#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n\n    StandardPostingsWriter postingsWriter = new SepPostingsWriterImpl(state, new SingleIntFactory());\n\n    boolean success = false;\n    StandardTermsIndexWriter indexWriter;\n    try {\n      indexWriter = new SimpleStandardTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsWriter.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsConsumer ret = new StandardTermsDictWriter(indexWriter, state, postingsWriter, BytesRef.getUTF8SortedAsUnicodeComparator());\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n\n    StandardPostingsWriter postingsWriter = new SepPostingsWriterImpl(state, new SingleIntFactory());\n\n    boolean success = false;\n    StandardTermsIndexWriter indexWriter;\n    try {\n      indexWriter = new SimpleStandardTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsWriter.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsConsumer ret = new StandardTermsDictWriter(indexWriter, state, postingsWriter, BytesRef.getUTF8SortedAsUTF16Comparator());\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepCodec#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepCodec#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n\n    StandardPostingsWriter postingsWriter = new SepPostingsWriterImpl(state, new SingleIntFactory());\n\n    boolean success = false;\n    StandardTermsIndexWriter indexWriter;\n    try {\n      indexWriter = new SimpleStandardTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsWriter.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsConsumer ret = new StandardTermsDictWriter(indexWriter, state, postingsWriter, BytesRef.getUTF8SortedAsUnicodeComparator());\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n\n    StandardPostingsWriter postingsWriter = new SepPostingsWriterImpl(state, new SingleIntFactory());\n\n    boolean success = false;\n    StandardTermsIndexWriter indexWriter;\n    try {\n      indexWriter = new SimpleStandardTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsWriter.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsConsumer ret = new StandardTermsDictWriter(indexWriter, state, postingsWriter, BytesRef.getUTF8SortedAsUTF16Comparator());\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"108e81824177a1a9f2507addadb8894e1cdf9afc","date":1280934266,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/codecs/mocksep/MockSepCodec#fieldsConsumer(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepCodec#fieldsConsumer(SegmentWriteState).mjava","sourceNew":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n\n    StandardPostingsWriter postingsWriter = new SepPostingsWriterImpl(state, new MockSingleIntFactory());\n\n    boolean success = false;\n    StandardTermsIndexWriter indexWriter;\n    try {\n      indexWriter = new SimpleStandardTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsWriter.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsConsumer ret = new StandardTermsDictWriter(indexWriter, state, postingsWriter, BytesRef.getUTF8SortedAsUnicodeComparator());\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n\n    StandardPostingsWriter postingsWriter = new SepPostingsWriterImpl(state, new SingleIntFactory());\n\n    boolean success = false;\n    StandardTermsIndexWriter indexWriter;\n    try {\n      indexWriter = new SimpleStandardTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsWriter.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsConsumer ret = new StandardTermsDictWriter(indexWriter, state, postingsWriter, BytesRef.getUTF8SortedAsUnicodeComparator());\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepCodec#fieldsConsumer(SegmentWriteState).mjava","sourceNew":null,"sourceOld":"  @Override\n  public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {\n\n    StandardPostingsWriter postingsWriter = new SepPostingsWriterImpl(state, new SingleIntFactory());\n\n    boolean success = false;\n    StandardTermsIndexWriter indexWriter;\n    try {\n      indexWriter = new SimpleStandardTermsIndexWriter(state);\n      success = true;\n    } finally {\n      if (!success) {\n        postingsWriter.close();\n      }\n    }\n\n    success = false;\n    try {\n      FieldsConsumer ret = new StandardTermsDictWriter(indexWriter, state, postingsWriter, BytesRef.getUTF8SortedAsUnicodeComparator());\n      success = true;\n      return ret;\n    } finally {\n      if (!success) {\n        try {\n          postingsWriter.close();\n        } finally {\n          indexWriter.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"08932c793647a36953d1816b1060121f48820d3f":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"108e81824177a1a9f2507addadb8894e1cdf9afc":["08932c793647a36953d1816b1060121f48820d3f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f4e87790277826a2aea119328600dfb07761f32":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","08932c793647a36953d1816b1060121f48820d3f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","108e81824177a1a9f2507addadb8894e1cdf9afc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["108e81824177a1a9f2507addadb8894e1cdf9afc"]},"commit2Childs":{"08932c793647a36953d1816b1060121f48820d3f":["108e81824177a1a9f2507addadb8894e1cdf9afc","5f4e87790277826a2aea119328600dfb07761f32"],"108e81824177a1a9f2507addadb8894e1cdf9afc":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["08932c793647a36953d1816b1060121f48820d3f","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}