{"path":"src/webapp/src/org/apache/solr/servlet/SolrUpdateServlet#init().mjava","commits":[{"id":"cbe98c74fdb9ed434e14c3d856735ab5c437c936","date":1144423212,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrUpdateServlet#init().mjava","pathOld":"/dev/null","sourceNew":"  public void init() throws ServletException\r\n  {\r\n    core = SolrCore.getSolrCore();\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"818fa97f8efad761eafba0dad8c0f41685b8f852","date":1148248512,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrUpdateServlet#init().mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrUpdateServlet#init().mjava","sourceNew":"  public void init() throws ServletException\r\n  {\r\n    core = SolrCore.getSolrCore();\r\n    log.info(\"SolrUpdateServlet.init() done\");\r\n  }\r\n\n","sourceOld":"  public void init() throws ServletException\r\n  {\r\n    core = SolrCore.getSolrCore();\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c0e301b711811c6aaee90440cc1a7925fdd1a1e","date":1153259525,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrUpdateServlet#init().mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrUpdateServlet#init().mjava","sourceNew":"  public void init() throws ServletException\n  {\n    core = SolrCore.getSolrCore();\n    log.info(\"SolrUpdateServlet.init() done\");\n  }\n\n","sourceOld":"  public void init() throws ServletException\r\n  {\r\n    core = SolrCore.getSolrCore();\r\n    log.info(\"SolrUpdateServlet.init() done\");\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d80013b5e260def972025c93a0b08524f9c38f49","date":1170102801,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrUpdateServlet#init().mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrUpdateServlet#init().mjava","sourceNew":"  public void init() throws ServletException\n  {\n    legacyUpdateHandler = new XmlUpdateRequestHandler();\n    legacyUpdateHandler.init( null );\n    \n    log.info(\"SolrUpdateServlet.init() done\");\n  }\n\n","sourceOld":"  public void init() throws ServletException\n  {\n    core = SolrCore.getSolrCore();\n    log.info(\"SolrUpdateServlet.init() done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abbfb3ad1f90df8ebf4751c8e72b2756ace50699","date":1190497478,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrUpdateServlet#init().mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrUpdateServlet#init().mjava","sourceNew":"  @Override\n  public void init() throws ServletException\n  {\n    legacyUpdateHandler = new XmlUpdateRequestHandler();\n    legacyUpdateHandler.init( null );\n    \n    log.info(\"SolrUpdateServlet.init() done\");\n  }\n\n","sourceOld":"  public void init() throws ServletException\n  {\n    legacyUpdateHandler = new XmlUpdateRequestHandler();\n    legacyUpdateHandler.init( null );\n    \n    log.info(\"SolrUpdateServlet.init() done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e864d6c9a08b78e25cb2a239775a1213b0d0c410","date":1218655599,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrUpdateServlet#init().mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrUpdateServlet#init().mjava","sourceNew":"  @Override\n  public void init() throws ServletException\n  {\n    legacyUpdateHandler = new XmlUpdateRequestHandler();\n    legacyUpdateHandler.init( null );\n\n    // Check if the \"multicore.xml\" file exists -- if so, this is an invalid servlet\n    // (even if there is only one core...)\n    String instanceDir = SolrResourceLoader.locateInstanceDir();\n    File fconf = new File(instanceDir, \"solr.xml\");\n    hasMulticore = fconf.exists();\n    \n    log.info(\"SolrUpdateServlet.init() done\");\n  }\n\n","sourceOld":"  @Override\n  public void init() throws ServletException\n  {\n    legacyUpdateHandler = new XmlUpdateRequestHandler();\n    legacyUpdateHandler.init( null );\n    \n    log.info(\"SolrUpdateServlet.init() done\");\n  }\n\n","bugFix":null,"bugIntro":["aa235702a0d1a8a6bd98bb76af41228151323d54"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"aa235702a0d1a8a6bd98bb76af41228151323d54","date":1218656137,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/SolrUpdateServlet#init().mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrUpdateServlet#init().mjava","sourceNew":"  @Override\n  public void init() throws ServletException\n  {\n    legacyUpdateHandler = new XmlUpdateRequestHandler();\n    legacyUpdateHandler.init( null );\n\n    // Check if the \"solr.xml\" file exists -- if so, this is an invalid servlet\n    // (even if there is only one core...)\n    String instanceDir = SolrResourceLoader.locateInstanceDir();\n    File fconf = new File(instanceDir, \"solr.xml\");\n    hasMulticore = fconf.exists();\n    \n    log.info(\"SolrUpdateServlet.init() done\");\n  }\n\n","sourceOld":"  @Override\n  public void init() throws ServletException\n  {\n    legacyUpdateHandler = new XmlUpdateRequestHandler();\n    legacyUpdateHandler.init( null );\n\n    // Check if the \"multicore.xml\" file exists -- if so, this is an invalid servlet\n    // (even if there is only one core...)\n    String instanceDir = SolrResourceLoader.locateInstanceDir();\n    File fconf = new File(instanceDir, \"solr.xml\");\n    hasMulticore = fconf.exists();\n    \n    log.info(\"SolrUpdateServlet.init() done\");\n  }\n\n","bugFix":["e864d6c9a08b78e25cb2a239775a1213b0d0c410"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/SolrUpdateServlet#init().mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/SolrUpdateServlet#init().mjava","sourceNew":"  @Override\n  public void init() throws ServletException\n  {\n    legacyUpdateHandler = new XmlUpdateRequestHandler();\n    legacyUpdateHandler.init( null );\n\n    // Check if the \"solr.xml\" file exists -- if so, this is an invalid servlet\n    // (even if there is only one core...)\n    String instanceDir = SolrResourceLoader.locateInstanceDir();\n    File fconf = new File(instanceDir, \"solr.xml\");\n    hasMulticore = fconf.exists();\n    \n    log.info(\"SolrUpdateServlet.init() done\");\n  }\n\n","sourceOld":"  @Override\n  public void init() throws ServletException\n  {\n    legacyUpdateHandler = new XmlUpdateRequestHandler();\n    legacyUpdateHandler.init( null );\n\n    // Check if the \"solr.xml\" file exists -- if so, this is an invalid servlet\n    // (even if there is only one core...)\n    String instanceDir = SolrResourceLoader.locateInstanceDir();\n    File fconf = new File(instanceDir, \"solr.xml\");\n    hasMulticore = fconf.exists();\n    \n    log.info(\"SolrUpdateServlet.init() done\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aa235702a0d1a8a6bd98bb76af41228151323d54":["e864d6c9a08b78e25cb2a239775a1213b0d0c410"],"0c0e301b711811c6aaee90440cc1a7925fdd1a1e":["818fa97f8efad761eafba0dad8c0f41685b8f852"],"818fa97f8efad761eafba0dad8c0f41685b8f852":["cbe98c74fdb9ed434e14c3d856735ab5c437c936"],"e864d6c9a08b78e25cb2a239775a1213b0d0c410":["abbfb3ad1f90df8ebf4751c8e72b2756ace50699"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cbe98c74fdb9ed434e14c3d856735ab5c437c936":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["aa235702a0d1a8a6bd98bb76af41228151323d54"],"abbfb3ad1f90df8ebf4751c8e72b2756ace50699":["d80013b5e260def972025c93a0b08524f9c38f49"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d80013b5e260def972025c93a0b08524f9c38f49":["0c0e301b711811c6aaee90440cc1a7925fdd1a1e"]},"commit2Childs":{"aa235702a0d1a8a6bd98bb76af41228151323d54":["ad94625fb8d088209f46650c8097196fec67f00c"],"0c0e301b711811c6aaee90440cc1a7925fdd1a1e":["d80013b5e260def972025c93a0b08524f9c38f49"],"818fa97f8efad761eafba0dad8c0f41685b8f852":["0c0e301b711811c6aaee90440cc1a7925fdd1a1e"],"e864d6c9a08b78e25cb2a239775a1213b0d0c410":["aa235702a0d1a8a6bd98bb76af41228151323d54"],"cbe98c74fdb9ed434e14c3d856735ab5c437c936":["818fa97f8efad761eafba0dad8c0f41685b8f852"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["cbe98c74fdb9ed434e14c3d856735ab5c437c936"],"abbfb3ad1f90df8ebf4751c8e72b2756ace50699":["e864d6c9a08b78e25cb2a239775a1213b0d0c410"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"d80013b5e260def972025c93a0b08524f9c38f49":["abbfb3ad1f90df8ebf4751c8e72b2756ace50699"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}