{"path":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery#TermsIncludingScoreQuery(ScoreMode,String,boolean,BytesRefHash,float[],String,Query,Object).mjava","commits":[{"id":"00b0e2840ecbd8db96919cdfcdf2f451aa9ddfe7","date":1495529154,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery#TermsIncludingScoreQuery(ScoreMode,String,boolean,BytesRefHash,float[],String,Query,Object).mjava","pathOld":"/dev/null","sourceNew":"  TermsIncludingScoreQuery(ScoreMode scoreMode, String toField, boolean multipleValuesPerDocument, BytesRefHash terms, float[] scores,\n                           String fromField, Query fromQuery, Object indexReaderContextId) {\n    this.scoreMode = scoreMode;\n    this.toField = toField;\n    this.multipleValuesPerDocument = multipleValuesPerDocument;\n    this.terms = terms;\n    this.scores = scores;\n    this.ords = terms.sort();\n\n    this.fromField = fromField;\n    this.fromQuery = fromQuery;\n    this.topReaderContextId = indexReaderContextId;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery#TermsIncludingScoreQuery(ScoreMode,String,boolean,BytesRefHash,float[],String,Query,Object).mjava","pathOld":"/dev/null","sourceNew":"  TermsIncludingScoreQuery(ScoreMode scoreMode, String toField, boolean multipleValuesPerDocument, BytesRefHash terms, float[] scores,\n                           String fromField, Query fromQuery, Object indexReaderContextId) {\n    this.scoreMode = scoreMode;\n    this.toField = toField;\n    this.multipleValuesPerDocument = multipleValuesPerDocument;\n    this.terms = terms;\n    this.scores = scores;\n    this.ords = terms.sort();\n\n    this.fromField = fromField;\n    this.fromQuery = fromQuery;\n    this.topReaderContextId = indexReaderContextId;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe90d104db258964b96e50418b9caa0c156eafda","date":1561555614,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery#TermsIncludingScoreQuery(ScoreMode,String,boolean,BytesRefHash,float[],String,Query,Object).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery#TermsIncludingScoreQuery(ScoreMode,String,boolean,BytesRefHash,float[],String,Query,Object).mjava","sourceNew":"  TermsIncludingScoreQuery(ScoreMode scoreMode, String toField, boolean multipleValuesPerDocument, BytesRefHash terms, float[] scores,\n                           String fromField, Query fromQuery, Object indexReaderContextId) {\n    this.scoreMode = scoreMode;\n    this.toField = toField;\n    this.multipleValuesPerDocument = multipleValuesPerDocument;\n    this.terms = terms;\n    this.scores = scores;\n    this.ords = terms.sort();\n\n    this.fromField = fromField;\n    this.fromQuery = fromQuery;\n    this.topReaderContextId = indexReaderContextId;\n\n    this.ramBytesUsed = BASE_RAM_BYTES +\n        RamUsageEstimator.sizeOfObject(fromField) +\n        RamUsageEstimator.sizeOfObject(fromQuery, RamUsageEstimator.QUERY_DEFAULT_RAM_BYTES_USED) +\n        RamUsageEstimator.sizeOfObject(ords) +\n        RamUsageEstimator.sizeOfObject(scores) +\n        RamUsageEstimator.sizeOfObject(terms) +\n        RamUsageEstimator.sizeOfObject(toField);\n  }\n\n","sourceOld":"  TermsIncludingScoreQuery(ScoreMode scoreMode, String toField, boolean multipleValuesPerDocument, BytesRefHash terms, float[] scores,\n                           String fromField, Query fromQuery, Object indexReaderContextId) {\n    this.scoreMode = scoreMode;\n    this.toField = toField;\n    this.multipleValuesPerDocument = multipleValuesPerDocument;\n    this.terms = terms;\n    this.scores = scores;\n    this.ords = terms.sort();\n\n    this.fromField = fromField;\n    this.fromQuery = fromQuery;\n    this.topReaderContextId = indexReaderContextId;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","00b0e2840ecbd8db96919cdfcdf2f451aa9ddfe7"],"00b0e2840ecbd8db96919cdfcdf2f451aa9ddfe7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe90d104db258964b96e50418b9caa0c156eafda":["00b0e2840ecbd8db96919cdfcdf2f451aa9ddfe7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fe90d104db258964b96e50418b9caa0c156eafda"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"00b0e2840ecbd8db96919cdfcdf2f451aa9ddfe7":["e9017cf144952056066919f1ebc7897ff9bd71b1","fe90d104db258964b96e50418b9caa0c156eafda"],"fe90d104db258964b96e50418b9caa0c156eafda":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","00b0e2840ecbd8db96919cdfcdf2f451aa9ddfe7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}