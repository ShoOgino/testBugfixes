{"path":"lucene/core/src/java/org/apache/lucene/index/SnapshotDeletionPolicy#getSnapshots().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SnapshotDeletionPolicy#getSnapshots().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SnapshotDeletionPolicy#getSnapshots().mjava","sourceNew":"  /**\n   * Get all the snapshots in a map of snapshot IDs to the segments they\n   * 'cover.' This can be passed to\n   * {@link #SnapshotDeletionPolicy(IndexDeletionPolicy, Map)} in order to\n   * initialize snapshots at construction.\n   */\n  public synchronized Map<String, String> getSnapshots() {\n    Map<String, String> snapshots = new HashMap<String, String>();\n    for (Entry<String, SnapshotInfo> e : idToSnapshot.entrySet()) {\n      snapshots.put(e.getKey(), e.getValue().segmentsFileName);\n    }\n    return snapshots;\n  }\n\n","sourceOld":"  /**\n   * Get all the snapshots in a map of snapshot IDs to the segments they\n   * 'cover.' This can be passed to\n   * {@link #SnapshotDeletionPolicy(IndexDeletionPolicy, Map)} in order to\n   * initialize snapshots at construction.\n   */\n  public synchronized Map<String, String> getSnapshots() {\n    Map<String, String> snapshots = new HashMap<String, String>();\n    for (Entry<String, SnapshotInfo> e : idToSnapshot.entrySet()) {\n      snapshots.put(e.getKey(), e.getValue().segmentsFileName);\n    }\n    return snapshots;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a207624ce3e468bca1819861084438d936e3b1c","date":1367514967,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SnapshotDeletionPolicy#getSnapshots().mjava","sourceNew":null,"sourceOld":"  /**\n   * Get all the snapshots in a map of snapshot IDs to the segments they\n   * 'cover.' This can be passed to\n   * {@link #SnapshotDeletionPolicy(IndexDeletionPolicy, Map)} in order to\n   * initialize snapshots at construction.\n   */\n  public synchronized Map<String, String> getSnapshots() {\n    Map<String, String> snapshots = new HashMap<String, String>();\n    for (Entry<String, SnapshotInfo> e : idToSnapshot.entrySet()) {\n      snapshots.put(e.getKey(), e.getValue().segmentsFileName);\n    }\n    return snapshots;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dce99db8590cdd065839ae4e6b228b66eeee8f38","date":1367579599,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SnapshotDeletionPolicy#getSnapshots().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns all IndexCommits held by at least one snapshot. */\n  public synchronized List<IndexCommit> getSnapshots() {\n    return new ArrayList<IndexCommit>(indexCommits.values());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SnapshotDeletionPolicy#getSnapshots().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SnapshotDeletionPolicy#getSnapshots().mjava","sourceNew":"  /** Returns all IndexCommits held by at least one snapshot. */\n  public synchronized List<IndexCommit> getSnapshots() {\n    return new ArrayList<>(indexCommits.values());\n  }\n\n","sourceOld":"  /** Returns all IndexCommits held by at least one snapshot. */\n  public synchronized List<IndexCommit> getSnapshots() {\n    return new ArrayList<IndexCommit>(indexCommits.values());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["dce99db8590cdd065839ae4e6b228b66eeee8f38"],"dce99db8590cdd065839ae4e6b228b66eeee8f38":["8a207624ce3e468bca1819861084438d936e3b1c"],"8a207624ce3e468bca1819861084438d936e3b1c":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"dce99db8590cdd065839ae4e6b228b66eeee8f38":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"8a207624ce3e468bca1819861084438d936e3b1c":["dce99db8590cdd065839ae4e6b228b66eeee8f38"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8a207624ce3e468bca1819861084438d936e3b1c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}