{"path":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#getHasDocValues(String).mjava","commits":[{"id":"8f2203cb8ae87188877cfbf6ad170c5738a0aad5","date":1528117512,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#getHasDocValues(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  DocIdSetIterator getHasDocValues(String field) {\n    PerField perField = getPerField(field);\n    if (perField != null) {\n      if (perField.docValuesWriter != null) {\n        if (perField.fieldInfo.getDocValuesType() == DocValuesType.NONE) {\n          return null;\n        }\n\n        return perField.docValuesWriter.getDocIdSet();\n      }\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#getHasDocValues(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  DocIdSetIterator getHasDocValues(String field) {\n    PerField perField = getPerField(field);\n    if (perField != null) {\n      if (perField.docValuesWriter != null) {\n        if (perField.fieldInfo.getDocValuesType() == DocValuesType.NONE) {\n          return null;\n        }\n\n        return perField.docValuesWriter.getDocIdSet();\n      }\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#getHasDocValues(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  DocIdSetIterator getHasDocValues(String field) {\n    PerField perField = getPerField(field);\n    if (perField != null) {\n      if (perField.docValuesWriter != null) {\n        if (perField.fieldInfo.getDocValuesType() == DocValuesType.NONE) {\n          return null;\n        }\n\n        return perField.docValuesWriter.getDocIdSet();\n      }\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"773bf150032d3ef6c95997a154fb914b82875cb8","date":1590150786,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#getHasDocValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#getHasDocValues(String).mjava","sourceNew":"  @Override\n  DocIdSetIterator getHasDocValues(String field) {\n    PerField perField = getPerField(field);\n    if (perField != null) {\n      if (perField.docValuesWriter != null) {\n        if (perField.fieldInfo.getDocValuesType() == DocValuesType.NONE) {\n          return null;\n        }\n\n        return perField.docValuesWriter.getDocValues();\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  @Override\n  DocIdSetIterator getHasDocValues(String field) {\n    PerField perField = getPerField(field);\n    if (perField != null) {\n      if (perField.docValuesWriter != null) {\n        if (perField.fieldInfo.getDocValuesType() == DocValuesType.NONE) {\n          return null;\n        }\n\n        return perField.docValuesWriter.getDocIdSet();\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a6f8af01d9b3067b143bbdc0a492720e2af97cf","date":1600157724,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexingChain#getHasDocValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#getHasDocValues(String).mjava","sourceNew":"  DocIdSetIterator getHasDocValues(String field) {\n    PerField perField = getPerField(field);\n    if (perField != null) {\n      if (perField.docValuesWriter != null) {\n        if (perField.fieldInfo.getDocValuesType() == DocValuesType.NONE) {\n          return null;\n        }\n\n        return perField.docValuesWriter.getDocValues();\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  @Override\n  DocIdSetIterator getHasDocValues(String field) {\n    PerField perField = getPerField(field);\n    if (perField != null) {\n      if (perField.docValuesWriter != null) {\n        if (perField.fieldInfo.getDocValuesType() == DocValuesType.NONE) {\n          return null;\n        }\n\n        return perField.docValuesWriter.getDocValues();\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"680b6449f09827f58fe987aff279e014c311d966","date":1600247985,"type":5,"author":"noblepaul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexingChain#getHasDocValues(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#getHasDocValues(String).mjava","sourceNew":"  DocIdSetIterator getHasDocValues(String field) {\n    PerField perField = getPerField(field);\n    if (perField != null) {\n      if (perField.docValuesWriter != null) {\n        if (perField.fieldInfo.getDocValuesType() == DocValuesType.NONE) {\n          return null;\n        }\n\n        return perField.docValuesWriter.getDocValues();\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  @Override\n  DocIdSetIterator getHasDocValues(String field) {\n    PerField perField = getPerField(field);\n    if (perField != null) {\n      if (perField.docValuesWriter != null) {\n        if (perField.fieldInfo.getDocValuesType() == DocValuesType.NONE) {\n          return null;\n        }\n\n        return perField.docValuesWriter.getDocValues();\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"680b6449f09827f58fe987aff279e014c311d966":["773bf150032d3ef6c95997a154fb914b82875cb8","7a6f8af01d9b3067b143bbdc0a492720e2af97cf"],"7a6f8af01d9b3067b143bbdc0a492720e2af97cf":["773bf150032d3ef6c95997a154fb914b82875cb8"],"773bf150032d3ef6c95997a154fb914b82875cb8":["8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f592209545c71895260367152601e9200399776d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8f2203cb8ae87188877cfbf6ad170c5738a0aad5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["680b6449f09827f58fe987aff279e014c311d966"]},"commit2Childs":{"680b6449f09827f58fe987aff279e014c311d966":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7a6f8af01d9b3067b143bbdc0a492720e2af97cf":["680b6449f09827f58fe987aff279e014c311d966"],"773bf150032d3ef6c95997a154fb914b82875cb8":["680b6449f09827f58fe987aff279e014c311d966","7a6f8af01d9b3067b143bbdc0a492720e2af97cf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b70042a8a492f7054d480ccdd2be9796510d4327","8f2203cb8ae87188877cfbf6ad170c5738a0aad5","f592209545c71895260367152601e9200399776d"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"8f2203cb8ae87188877cfbf6ad170c5738a0aad5":["773bf150032d3ef6c95997a154fb914b82875cb8","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d"],"f592209545c71895260367152601e9200399776d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}