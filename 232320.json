{"path":"lucene/src/java/org/apache/lucene/index/DirectoryReader#getVersion().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#getVersion().mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryReader#getVersion().mjava","sourceNew":"  /** Version number when this IndexReader was opened. */\n  @Override\n  public long getVersion() {\n    ensureOpen();\n    return segmentInfos.getVersion();\n  }\n\n","sourceOld":"  /** Version number when this IndexReader was opened. */\n  @Override\n  public long getVersion() {\n    ensureOpen();\n    return segmentInfos.getVersion();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"893d07555f01912f57b453a320e4d46363a31b50","date":1327312526,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#getVersion().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#getVersion().mjava","sourceNew":"  /** Version number when this IndexReader was opened. */\n  public long getVersion() {\n    ensureOpen();\n    return segmentInfos.getVersion();\n  }\n\n","sourceOld":"  /** Version number when this IndexReader was opened. */\n  @Override\n  public long getVersion() {\n    ensureOpen();\n    return segmentInfos.getVersion();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#getVersion().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#getVersion().mjava","sourceNew":"  /**\n   * Version number when this IndexReader was opened. Not\n   * implemented in the IndexReader base class.\n   *\n   * <p>This method\n   * returns the version recorded in the commit that the\n   * reader opened.  This version is advanced every time\n   * a change is made with {@link IndexWriter}.</p>\n   */\n  public long getVersion() {\n    ensureOpen();\n    return segmentInfos.getVersion();\n  }\n\n","sourceOld":"  /** Version number when this IndexReader was opened. */\n  public long getVersion() {\n    ensureOpen();\n    return segmentInfos.getVersion();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#getVersion().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#getVersion().mjava","sourceNew":"  /**\n   * Version number when this IndexReader was opened. Not\n   * implemented in the IndexReader base class.\n   *\n   * <p>This method\n   * returns the version recorded in the commit that the\n   * reader opened.  This version is advanced every time\n   * a change is made with {@link IndexWriter}.</p>\n   */\n  public long getVersion() {\n    ensureOpen();\n    return segmentInfos.getVersion();\n  }\n\n","sourceOld":"  /** Version number when this IndexReader was opened. */\n  @Override\n  public long getVersion() {\n    ensureOpen();\n    return segmentInfos.getVersion();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3","date":1328092914,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#getVersion().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#getVersion().mjava","sourceNew":"  /**\n   * Version number when this IndexReader was opened.\n   *\n   * <p>This method\n   * returns the version recorded in the commit that the\n   * reader opened.  This version is advanced every time\n   * a change is made with {@link IndexWriter}.</p>\n   */\n  public abstract long getVersion();\n\n","sourceOld":"  /**\n   * Version number when this IndexReader was opened. Not\n   * implemented in the IndexReader base class.\n   *\n   * <p>This method\n   * returns the version recorded in the commit that the\n   * reader opened.  This version is advanced every time\n   * a change is made with {@link IndexWriter}.</p>\n   */\n  public long getVersion() {\n    ensureOpen();\n    return segmentInfos.getVersion();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#getVersion().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#getVersion().mjava","sourceNew":"  /**\n   * Version number when this IndexReader was opened.\n   *\n   * <p>This method\n   * returns the version recorded in the commit that the\n   * reader opened.  This version is advanced every time\n   * a change is made with {@link IndexWriter}.</p>\n   */\n  public abstract long getVersion();\n\n","sourceOld":"  /**\n   * Version number when this IndexReader was opened.\n   *\n   * <p>This method\n   * returns the version recorded in the commit that the\n   * reader opened.  This version is advanced every time\n   * a change is made with {@link IndexWriter}.</p>\n   */\n  public abstract long getVersion();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"817882884229bace7dc5d1b75f6b0e4aa1e47122":["893d07555f01912f57b453a320e4d46363a31b50","9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d7bbf8cffd2321f26cf9f6487f1571d325f20bc3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"893d07555f01912f57b453a320e4d46363a31b50":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["9454a6510e2db155fb01faa5c049b06ece95fab9","817882884229bace7dc5d1b75f6b0e4aa1e47122"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"817882884229bace7dc5d1b75f6b0e4aa1e47122":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"893d07555f01912f57b453a320e4d46363a31b50":["817882884229bace7dc5d1b75f6b0e4aa1e47122"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["d7bbf8cffd2321f26cf9f6487f1571d325f20bc3"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["817882884229bace7dc5d1b75f6b0e4aa1e47122","893d07555f01912f57b453a320e4d46363a31b50","5cab9a86bd67202d20b6adc463008c8e982b070a"],"d7bbf8cffd2321f26cf9f6487f1571d325f20bc3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}