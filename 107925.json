{"path":"solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent#toSolrInputDocument(StoredDocument,IndexSchema).mjava","commits":[{"id":"a7e4907084808af8fdb14b9809e6dceaccf6867b","date":1343473006,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent#toSolrInputDocument(StoredDocument,IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent#toSolrInputDocument(Document,IndexSchema).mjava","sourceNew":"  private static SolrInputDocument toSolrInputDocument(StoredDocument doc, IndexSchema schema) {\n    SolrInputDocument out = new SolrInputDocument();\n    for( StorableField f : doc.getFields() ) {\n      String fname = f.name();\n      SchemaField sf = schema.getFieldOrNull(f.name());\n      Object val = null;\n      if (sf != null) {\n        val = sf.getType().toObject(f);   // object or external string?\n      } else {\n        val = f.stringValue();\n        if (val == null) val = f.numericValue();\n        if (val == null) val = f.binaryValue();\n        if (val == null) val = f;\n      }\n\n      // todo: how to handle targets of copy fields (including polyfield sub-fields)?\n      out.addField(fname, val);\n    }\n    return out;\n  }\n\n","sourceOld":"  private static SolrInputDocument toSolrInputDocument(Document doc, IndexSchema schema) {\n    SolrInputDocument out = new SolrInputDocument();\n    for( IndexableField f : doc.getFields() ) {\n      String fname = f.name();\n      SchemaField sf = schema.getFieldOrNull(f.name());\n      Object val = null;\n      if (sf != null) {\n        val = sf.getType().toObject(f);   // object or external string?\n      } else {\n        val = f.stringValue();\n        if (val == null) val = f.numericValue();\n        if (val == null) val = f.binaryValue();\n        if (val == null) val = f;\n      }\n\n      // todo: how to handle targets of copy fields (including polyfield sub-fields)?\n      out.addField(fname, val);\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent#toSolrInputDocument(StoredDocument,IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent#toSolrInputDocument(StoredDocument,IndexSchema).mjava","sourceNew":"  private static SolrInputDocument toSolrInputDocument(StoredDocument doc, IndexSchema schema) {\n    SolrInputDocument out = new SolrInputDocument();\n    for( StorableField f : doc.getFields() ) {\n      String fname = f.name();\n      SchemaField sf = schema.getFieldOrNull(f.name());\n      Object val = null;\n      if (sf != null) {\n        if (!sf.stored() || schema.isCopyFieldTarget(sf)) continue;\n        val = sf.getType().toObject(f);   // object or external string?\n      } else {\n        val = f.stringValue();\n        if (val == null) val = f.numericValue();\n        if (val == null) val = f.binaryValue();\n        if (val == null) val = f;\n      }\n\n      // todo: how to handle targets of copy fields (including polyfield sub-fields)?\n      out.addField(fname, val);\n    }\n    return out;\n  }\n\n","sourceOld":"  private static SolrInputDocument toSolrInputDocument(StoredDocument doc, IndexSchema schema) {\n    SolrInputDocument out = new SolrInputDocument();\n    for( StorableField f : doc.getFields() ) {\n      String fname = f.name();\n      SchemaField sf = schema.getFieldOrNull(f.name());\n      Object val = null;\n      if (sf != null) {\n        val = sf.getType().toObject(f);   // object or external string?\n      } else {\n        val = f.stringValue();\n        if (val == null) val = f.numericValue();\n        if (val == null) val = f.binaryValue();\n        if (val == null) val = f;\n      }\n\n      // todo: how to handle targets of copy fields (including polyfield sub-fields)?\n      out.addField(fname, val);\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent#toSolrInputDocument(StoredDocument,IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent#toSolrInputDocument(Document,IndexSchema).mjava","sourceNew":"  private static SolrInputDocument toSolrInputDocument(StoredDocument doc, IndexSchema schema) {\n    SolrInputDocument out = new SolrInputDocument();\n    for( StorableField f : doc.getFields() ) {\n      String fname = f.name();\n      SchemaField sf = schema.getFieldOrNull(f.name());\n      Object val = null;\n      if (sf != null) {\n        if (!sf.stored() || schema.isCopyFieldTarget(sf)) continue;\n        val = sf.getType().toObject(f);   // object or external string?\n      } else {\n        val = f.stringValue();\n        if (val == null) val = f.numericValue();\n        if (val == null) val = f.binaryValue();\n        if (val == null) val = f;\n      }\n\n      // todo: how to handle targets of copy fields (including polyfield sub-fields)?\n      out.addField(fname, val);\n    }\n    return out;\n  }\n\n","sourceOld":"  private static SolrInputDocument toSolrInputDocument(Document doc, IndexSchema schema) {\n    SolrInputDocument out = new SolrInputDocument();\n    for( IndexableField f : doc.getFields() ) {\n      String fname = f.name();\n      SchemaField sf = schema.getFieldOrNull(f.name());\n      Object val = null;\n      if (sf != null) {\n        if (!sf.stored() || schema.isCopyFieldTarget(sf)) continue;\n        val = sf.getType().toObject(f);   // object or external string?\n      } else {\n        val = f.stringValue();\n        if (val == null) val = f.numericValue();\n        if (val == null) val = f.binaryValue();\n        if (val == null) val = f;\n      }\n\n      // todo: how to handle targets of copy fields (including polyfield sub-fields)?\n      out.addField(fname, val);\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae75c8a4fb0404ecd05df95a8d635f7d92fad9fe","date":1451338931,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent#toSolrInputDocument(StoredDocument,IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent#toSolrInputDocument(StoredDocument,IndexSchema).mjava","sourceNew":"  private static SolrInputDocument toSolrInputDocument(StoredDocument doc, IndexSchema schema) {\n    SolrInputDocument out = new SolrInputDocument();\n    for( StorableField f : doc.getFields() ) {\n      String fname = f.name();\n      SchemaField sf = schema.getFieldOrNull(f.name());\n      Object val = null;\n      if (sf != null) {\n        if ((!sf.hasDocValues() && !sf.stored()) || schema.isCopyFieldTarget(sf)) continue;\n        val = sf.getType().toObject(f);   // object or external string?\n      } else {\n        val = f.stringValue();\n        if (val == null) val = f.numericValue();\n        if (val == null) val = f.binaryValue();\n        if (val == null) val = f;\n      }\n\n      // todo: how to handle targets of copy fields (including polyfield sub-fields)?\n      out.addField(fname, val);\n    }\n    return out;\n  }\n\n","sourceOld":"  private static SolrInputDocument toSolrInputDocument(StoredDocument doc, IndexSchema schema) {\n    SolrInputDocument out = new SolrInputDocument();\n    for( StorableField f : doc.getFields() ) {\n      String fname = f.name();\n      SchemaField sf = schema.getFieldOrNull(f.name());\n      Object val = null;\n      if (sf != null) {\n        if (!sf.stored() || schema.isCopyFieldTarget(sf)) continue;\n        val = sf.getType().toObject(f);   // object or external string?\n      } else {\n        val = f.stringValue();\n        if (val == null) val = f.numericValue();\n        if (val == null) val = f.binaryValue();\n        if (val == null) val = f;\n      }\n\n      // todo: how to handle targets of copy fields (including polyfield sub-fields)?\n      out.addField(fname, val);\n    }\n    return out;\n  }\n\n","bugFix":["c9578f99a6012b38cadca42a29f0bc79cdd5f3c6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent#toSolrInputDocument(Document,IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent#toSolrInputDocument(StoredDocument,IndexSchema).mjava","sourceNew":"  private static SolrInputDocument toSolrInputDocument(Document doc, IndexSchema schema) {\n    SolrInputDocument out = new SolrInputDocument();\n    for( IndexableField f : doc.getFields() ) {\n      String fname = f.name();\n      SchemaField sf = schema.getFieldOrNull(f.name());\n      Object val = null;\n      if (sf != null) {\n        if ((!sf.hasDocValues() && !sf.stored()) || schema.isCopyFieldTarget(sf)) continue;\n        val = sf.getType().toObject(f);   // object or external string?\n      } else {\n        val = f.stringValue();\n        if (val == null) val = f.numericValue();\n        if (val == null) val = f.binaryValue();\n        if (val == null) val = f;\n      }\n\n      // todo: how to handle targets of copy fields (including polyfield sub-fields)?\n      out.addField(fname, val);\n    }\n    return out;\n  }\n\n","sourceOld":"  private static SolrInputDocument toSolrInputDocument(StoredDocument doc, IndexSchema schema) {\n    SolrInputDocument out = new SolrInputDocument();\n    for( StorableField f : doc.getFields() ) {\n      String fname = f.name();\n      SchemaField sf = schema.getFieldOrNull(f.name());\n      Object val = null;\n      if (sf != null) {\n        if ((!sf.hasDocValues() && !sf.stored()) || schema.isCopyFieldTarget(sf)) continue;\n        val = sf.getType().toObject(f);   // object or external string?\n      } else {\n        val = f.stringValue();\n        if (val == null) val = f.numericValue();\n        if (val == null) val = f.binaryValue();\n        if (val == null) val = f;\n      }\n\n      // todo: how to handle targets of copy fields (including polyfield sub-fields)?\n      out.addField(fname, val);\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["a7e4907084808af8fdb14b9809e6dceaccf6867b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1d028314cced5858683a1bb4741423d0f934257b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","001b25b42373b22a52f399dbf072f1224632e8e6"],"ae75c8a4fb0404ecd05df95a8d635f7d92fad9fe":["1d028314cced5858683a1bb4741423d0f934257b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a7e4907084808af8fdb14b9809e6dceaccf6867b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["ae75c8a4fb0404ecd05df95a8d635f7d92fad9fe"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":["1d028314cced5858683a1bb4741423d0f934257b"],"1d028314cced5858683a1bb4741423d0f934257b":["ae75c8a4fb0404ecd05df95a8d635f7d92fad9fe"],"ae75c8a4fb0404ecd05df95a8d635f7d92fad9fe":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["001b25b42373b22a52f399dbf072f1224632e8e6","1d028314cced5858683a1bb4741423d0f934257b","a7e4907084808af8fdb14b9809e6dceaccf6867b"],"a7e4907084808af8fdb14b9809e6dceaccf6867b":["001b25b42373b22a52f399dbf072f1224632e8e6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}