{"path":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#writeVInt(int,FastOutputStream).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#writeVInt(int,FastOutputStream).mjava","pathOld":"solr/src/common/org/apache/solr/common/util/JavaBinCodec#writeVInt(int,FastOutputStream).mjava","sourceNew":"  /**\n   * Special method for variable length int (copied from lucene). Usually used for writing the length of a\n   * collection/array/map In most of the cases the length can be represented in one byte (length < 127) so it saves 3\n   * bytes/object\n   *\n   * @param i\n   * @param out\n   *\n   * @throws IOException\n   */\n  public static void writeVInt(int i, FastOutputStream out) throws IOException {\n    while ((i & ~0x7F) != 0) {\n      out.writeByte((byte) ((i & 0x7f) | 0x80));\n      i >>>= 7;\n    }\n    out.writeByte((byte) i);\n  }\n\n","sourceOld":"  /**\n   * Special method for variable length int (copied from lucene). Usually used for writing the length of a\n   * collection/array/map In most of the cases the length can be represented in one byte (length < 127) so it saves 3\n   * bytes/object\n   *\n   * @param i\n   * @param out\n   *\n   * @throws IOException\n   */\n  public static void writeVInt(int i, FastOutputStream out) throws IOException {\n    while ((i & ~0x7F) != 0) {\n      out.writeByte((byte) ((i & 0x7f) | 0x80));\n      i >>>= 7;\n    }\n    out.writeByte((byte) i);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#writeVInt(int,FastOutputStream).mjava","pathOld":"solr/src/common/org/apache/solr/common/util/JavaBinCodec#writeVInt(int,FastOutputStream).mjava","sourceNew":"  /**\n   * Special method for variable length int (copied from lucene). Usually used for writing the length of a\n   * collection/array/map In most of the cases the length can be represented in one byte (length < 127) so it saves 3\n   * bytes/object\n   *\n   * @param i\n   * @param out\n   *\n   * @throws IOException\n   */\n  public static void writeVInt(int i, FastOutputStream out) throws IOException {\n    while ((i & ~0x7F) != 0) {\n      out.writeByte((byte) ((i & 0x7f) | 0x80));\n      i >>>= 7;\n    }\n    out.writeByte((byte) i);\n  }\n\n","sourceOld":"  /**\n   * Special method for variable length int (copied from lucene). Usually used for writing the length of a\n   * collection/array/map In most of the cases the length can be represented in one byte (length < 127) so it saves 3\n   * bytes/object\n   *\n   * @param i\n   * @param out\n   *\n   * @throws IOException\n   */\n  public static void writeVInt(int i, FastOutputStream out) throws IOException {\n    while ((i & ~0x7F) != 0) {\n      out.writeByte((byte) ((i & 0x7f) | 0x80));\n      i >>>= 7;\n    }\n    out.writeByte((byte) i);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#writeVInt(int,FastOutputStream).mjava","pathOld":"solr/src/common/org/apache/solr/common/util/JavaBinCodec#writeVInt(int,FastOutputStream).mjava","sourceNew":"  /**\n   * Special method for variable length int (copied from lucene). Usually used for writing the length of a\n   * collection/array/map In most of the cases the length can be represented in one byte (length < 127) so it saves 3\n   * bytes/object\n   *\n   * @param i\n   * @param out\n   *\n   * @throws IOException\n   */\n  public static void writeVInt(int i, FastOutputStream out) throws IOException {\n    while ((i & ~0x7F) != 0) {\n      out.writeByte((byte) ((i & 0x7f) | 0x80));\n      i >>>= 7;\n    }\n    out.writeByte((byte) i);\n  }\n\n","sourceOld":"  /**\n   * Special method for variable length int (copied from lucene). Usually used for writing the length of a\n   * collection/array/map In most of the cases the length can be represented in one byte (length < 127) so it saves 3\n   * bytes/object\n   *\n   * @param i\n   * @param out\n   *\n   * @throws IOException\n   */\n  public static void writeVInt(int i, FastOutputStream out) throws IOException {\n    while ((i & ~0x7F) != 0) {\n      out.writeByte((byte) ((i & 0x7f) | 0x80));\n      i >>>= 7;\n    }\n    out.writeByte((byte) i);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#writeVInt(int,FastOutputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#writeVInt(int,FastOutputStream).mjava","sourceNew":"  /**\n   * Special method for variable length int (copied from lucene). Usually used for writing the length of a\n   * collection/array/map In most of the cases the length can be represented in one byte (length < 127) so it saves 3\n   * bytes/object\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static void writeVInt(int i, FastOutputStream out) throws IOException {\n    while ((i & ~0x7F) != 0) {\n      out.writeByte((byte) ((i & 0x7f) | 0x80));\n      i >>>= 7;\n    }\n    out.writeByte((byte) i);\n  }\n\n","sourceOld":"  /**\n   * Special method for variable length int (copied from lucene). Usually used for writing the length of a\n   * collection/array/map In most of the cases the length can be represented in one byte (length < 127) so it saves 3\n   * bytes/object\n   *\n   * @param i\n   * @param out\n   *\n   * @throws IOException\n   */\n  public static void writeVInt(int i, FastOutputStream out) throws IOException {\n    while ((i & ~0x7F) != 0) {\n      out.writeByte((byte) ((i & 0x7f) | 0x80));\n      i >>>= 7;\n    }\n    out.writeByte((byte) i);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#writeVInt(int,FastOutputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#writeVInt(int,FastOutputStream).mjava","sourceNew":"  /**\n   * Special method for variable length int (copied from lucene). Usually used for writing the length of a\n   * collection/array/map In most of the cases the length can be represented in one byte (length < 127) so it saves 3\n   * bytes/object\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static void writeVInt(int i, FastOutputStream out) throws IOException {\n    while ((i & ~0x7F) != 0) {\n      out.writeByte((byte) ((i & 0x7f) | 0x80));\n      i >>>= 7;\n    }\n    out.writeByte((byte) i);\n  }\n\n","sourceOld":"  /**\n   * Special method for variable length int (copied from lucene). Usually used for writing the length of a\n   * collection/array/map In most of the cases the length can be represented in one byte (length < 127) so it saves 3\n   * bytes/object\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static void writeVInt(int i, FastOutputStream out) throws IOException {\n    while ((i & ~0x7F) != 0) {\n      out.writeByte((byte) ((i & 0x7f) | 0x80));\n      i >>>= 7;\n    }\n    out.writeByte((byte) i);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#writeVInt(int,FastOutputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#writeVInt(int,FastOutputStream).mjava","sourceNew":"  /**\n   * Special method for variable length int (copied from lucene). Usually used for writing the length of a\n   * collection/array/map In most of the cases the length can be represented in one byte (length < 127) so it saves 3\n   * bytes/object\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static void writeVInt(int i, FastOutputStream out) throws IOException {\n    while ((i & ~0x7F) != 0) {\n      out.writeByte((byte) ((i & 0x7f) | 0x80));\n      i >>>= 7;\n    }\n    out.writeByte((byte) i);\n  }\n\n","sourceOld":"  /**\n   * Special method for variable length int (copied from lucene). Usually used for writing the length of a\n   * collection/array/map In most of the cases the length can be represented in one byte (length < 127) so it saves 3\n   * bytes/object\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static void writeVInt(int i, FastOutputStream out) throws IOException {\n    while ((i & ~0x7F) != 0) {\n      out.writeByte((byte) ((i & 0x7f) | 0x80));\n      i >>>= 7;\n    }\n    out.writeByte((byte) i);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","date":1423508552,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#writeVInt(int,FastOutputStream).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JavaBinCodec#writeVInt(int,FastOutputStream).mjava","sourceNew":"  /**\n   * Special method for variable length int (copied from lucene). Usually used for writing the length of a\n   * collection/array/map In most of the cases the length can be represented in one byte (length &lt; 127) so it saves 3\n   * bytes/object\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static void writeVInt(int i, FastOutputStream out) throws IOException {\n    while ((i & ~0x7F) != 0) {\n      out.writeByte((byte) ((i & 0x7f) | 0x80));\n      i >>>= 7;\n    }\n    out.writeByte((byte) i);\n  }\n\n","sourceOld":"  /**\n   * Special method for variable length int (copied from lucene). Usually used for writing the length of a\n   * collection/array/map In most of the cases the length can be represented in one byte (length < 127) so it saves 3\n   * bytes/object\n   *\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static void writeVInt(int i, FastOutputStream out) throws IOException {\n    while ((i & ~0x7F) != 0) {\n      out.writeByte((byte) ((i & 0x7f) | 0x80));\n      i >>>= 7;\n    }\n    out.writeByte((byte) i);\n  }\n\n","bugFix":["18a1b51b47d1035bf90ecfc7d16c739fe983647a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["c26f00b574427b55127e869b935845554afde1fa"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}