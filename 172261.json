{"path":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#hashCode().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#hashCode().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiPhraseQuery#hashCode().mjava","sourceNew":"  /** Returns a hash code value for this object.*/\n  @Override\n  public int hashCode() {\n    return Float.floatToIntBits(getBoost())\n      ^ slop\n      ^ termArraysHashCode()\n      ^ positions.hashCode()\n      ^ 0x4AC65113;\n  }\n\n","sourceOld":"  /** Returns a hash code value for this object.*/\n  @Override\n  public int hashCode() {\n    return Float.floatToIntBits(getBoost())\n      ^ slop\n      ^ termArraysHashCode()\n      ^ positions.hashCode()\n      ^ 0x4AC65113;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fdd0e99daabe8cd52cd4d7755679337bede8abe0","date":1425571318,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#hashCode().mjava","sourceNew":"  /** Returns a hash code value for this object.*/\n  @Override\n  public int hashCode() {\n    return super.hashCode()\n      ^ slop\n      ^ termArraysHashCode()\n      ^ positions.hashCode();\n  }\n\n","sourceOld":"  /** Returns a hash code value for this object.*/\n  @Override\n  public int hashCode() {\n    return Float.floatToIntBits(getBoost())\n      ^ slop\n      ^ termArraysHashCode()\n      ^ positions.hashCode()\n      ^ 0x4AC65113;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#hashCode().mjava","sourceNew":"  /** Returns a hash code value for this object.*/\n  @Override\n  public int hashCode() {\n    return super.hashCode()\n      ^ slop\n      ^ termArraysHashCode()\n      ^ positions.hashCode();\n  }\n\n","sourceOld":"  /** Returns a hash code value for this object.*/\n  @Override\n  public int hashCode() {\n    return Float.floatToIntBits(getBoost())\n      ^ slop\n      ^ termArraysHashCode()\n      ^ positions.hashCode()\n      ^ 0x4AC65113;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92b4a131f1796dd57cc6698aae3d589d32a29deb","date":1457087316,"type":3,"author":"Luc Vanlerberghe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#hashCode().mjava","sourceNew":"  /** Returns a hash code value for this object.*/\n  @Override\n  public int hashCode() {\n    return super.hashCode()\n      ^ slop\n      ^ termArraysHashCode() // terms equal implies field equal\n      ^ Arrays.hashCode(positions);\n  }\n\n","sourceOld":"  /** Returns a hash code value for this object.*/\n  @Override\n  public int hashCode() {\n    return super.hashCode()\n      ^ slop\n      ^ termArraysHashCode()\n      ^ positions.hashCode();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#hashCode().mjava","sourceNew":"  /** Returns a hash code value for this object.*/\n  @Override\n  public int hashCode() {\n    return super.hashCode()\n      ^ slop\n      ^ termArraysHashCode() // terms equal implies field equal\n      ^ Arrays.hashCode(positions);\n  }\n\n","sourceOld":"  /** Returns a hash code value for this object.*/\n  @Override\n  public int hashCode() {\n    return super.hashCode()\n      ^ slop\n      ^ termArraysHashCode()\n      ^ positions.hashCode();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#hashCode().mjava","sourceNew":"  /** Returns a hash code value for this object.*/\n  @Override\n  public int hashCode() {\n    return classHash()\n      ^ slop\n      ^ termArraysHashCode() // terms equal implies field equal\n      ^ Arrays.hashCode(positions);\n  }\n\n","sourceOld":"  /** Returns a hash code value for this object.*/\n  @Override\n  public int hashCode() {\n    return super.hashCode()\n      ^ slop\n      ^ termArraysHashCode() // terms equal implies field equal\n      ^ Arrays.hashCode(positions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#hashCode().mjava","sourceNew":"  /** Returns a hash code value for this object.*/\n  @Override\n  public int hashCode() {\n    return classHash()\n      ^ slop\n      ^ termArraysHashCode() // terms equal implies field equal\n      ^ Arrays.hashCode(positions);\n  }\n\n","sourceOld":"  /** Returns a hash code value for this object.*/\n  @Override\n  public int hashCode() {\n    return super.hashCode()\n      ^ slop\n      ^ termArraysHashCode() // terms equal implies field equal\n      ^ Arrays.hashCode(positions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fdd0e99daabe8cd52cd4d7755679337bede8abe0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","fdd0e99daabe8cd52cd4d7755679337bede8abe0"],"92b4a131f1796dd57cc6698aae3d589d32a29deb":["fdd0e99daabe8cd52cd4d7755679337bede8abe0"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["fdd0e99daabe8cd52cd4d7755679337bede8abe0","92b4a131f1796dd57cc6698aae3d589d32a29deb"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","0e7bc21595222ae4f75509300fbb7726691f387f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e7bc21595222ae4f75509300fbb7726691f387f"]},"commit2Childs":{"fdd0e99daabe8cd52cd4d7755679337bede8abe0":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","92b4a131f1796dd57cc6698aae3d589d32a29deb","cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"92b4a131f1796dd57cc6698aae3d589d32a29deb":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fdd0e99daabe8cd52cd4d7755679337bede8abe0","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"0e7bc21595222ae4f75509300fbb7726691f387f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}