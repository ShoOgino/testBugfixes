{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/SparseDISI#advance(int).mjava","commits":[{"id":"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262","date":1475755647,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/SparseDISI#advance(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int advance(int target) throws IOException {\n    if (target >= maxDoc) {\n      return doc = NO_MORE_DOCS;\n    }\n\n    final int targetWordIndex = target >>> 6;\n    for (int i = wordIndex + 1; i <= targetWordIndex; ++i) {\n      word = slice.readLong(i << 3);\n      index += Long.bitCount(word);\n    }\n    wordIndex = targetWordIndex;\n\n    long leftBits = word >>> target;\n    if (leftBits != 0L) {\n      return doc = target + Long.numberOfTrailingZeros(leftBits);\n    }\n\n    while (++wordIndex < numWords) {\n      word = slice.readLong(wordIndex << 3);\n      if (word != 0) {\n        index += Long.bitCount(word);\n        return doc = (wordIndex << 6) + Long.numberOfTrailingZeros(word);\n      }\n    }\n\n    return doc = NO_MORE_DOCS;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b570f3cdcfa524f70dd8bda93f4872464e0a44e0","date":1475772265,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/SparseDISI#advance(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/SparseDISI#advance(int).mjava","sourceNew":"  @Override\n  public int advance(int target) throws IOException {\n    if (target >= maxDoc) {\n      return doc = NO_MORE_DOCS;\n    }\n\n    final int targetWordIndex = target >>> 6;\n    for (int i = wordIndex + 1; i <= targetWordIndex; ++i) {\n      word = slice.readLong();\n      index += Long.bitCount(word);\n    }\n    wordIndex = targetWordIndex;\n\n    long leftBits = word >>> target;\n    if (leftBits != 0L) {\n      return doc = target + Long.numberOfTrailingZeros(leftBits);\n    }\n\n    while (++wordIndex < numWords) {\n      word = slice.readLong();\n      if (word != 0) {\n        index += Long.bitCount(word);\n        return doc = (wordIndex << 6) + Long.numberOfTrailingZeros(word);\n      }\n    }\n\n    return doc = NO_MORE_DOCS;\n  }\n\n","sourceOld":"  @Override\n  public int advance(int target) throws IOException {\n    if (target >= maxDoc) {\n      return doc = NO_MORE_DOCS;\n    }\n\n    final int targetWordIndex = target >>> 6;\n    for (int i = wordIndex + 1; i <= targetWordIndex; ++i) {\n      word = slice.readLong(i << 3);\n      index += Long.bitCount(word);\n    }\n    wordIndex = targetWordIndex;\n\n    long leftBits = word >>> target;\n    if (leftBits != 0L) {\n      return doc = target + Long.numberOfTrailingZeros(leftBits);\n    }\n\n    while (++wordIndex < numWords) {\n      word = slice.readLong(wordIndex << 3);\n      if (word != 0) {\n        index += Long.bitCount(word);\n        return doc = (wordIndex << 6) + Long.numberOfTrailingZeros(word);\n      }\n    }\n\n    return doc = NO_MORE_DOCS;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"feec55b6e9aaab41be57a5001b31fa14c3925ae4","date":1476170434,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/SparseDISI#advance(int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public int advance(int target) throws IOException {\n    if (target >= maxDoc) {\n      return doc = NO_MORE_DOCS;\n    }\n\n    final int targetWordIndex = target >>> 6;\n    for (int i = wordIndex + 1; i <= targetWordIndex; ++i) {\n      word = slice.readLong();\n      index += Long.bitCount(word);\n    }\n    wordIndex = targetWordIndex;\n\n    long leftBits = word >>> target;\n    if (leftBits != 0L) {\n      return doc = target + Long.numberOfTrailingZeros(leftBits);\n    }\n\n    while (++wordIndex < numWords) {\n      word = slice.readLong();\n      if (word != 0) {\n        index += Long.bitCount(word);\n        return doc = (wordIndex << 6) + Long.numberOfTrailingZeros(word);\n      }\n    }\n\n    return doc = NO_MORE_DOCS;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b570f3cdcfa524f70dd8bda93f4872464e0a44e0":["7f3090f7e0cab5b1f5acf12d21f31f00fe74a262"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"feec55b6e9aaab41be57a5001b31fa14c3925ae4":["b570f3cdcfa524f70dd8bda93f4872464e0a44e0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["feec55b6e9aaab41be57a5001b31fa14c3925ae4"]},"commit2Childs":{"7f3090f7e0cab5b1f5acf12d21f31f00fe74a262":["b570f3cdcfa524f70dd8bda93f4872464e0a44e0"],"b570f3cdcfa524f70dd8bda93f4872464e0a44e0":["feec55b6e9aaab41be57a5001b31fa14c3925ae4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7f3090f7e0cab5b1f5acf12d21f31f00fe74a262"],"feec55b6e9aaab41be57a5001b31fa14c3925ae4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}