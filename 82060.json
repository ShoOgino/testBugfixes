{"path":"lucene/core/src/test/org/apache/lucene/search/TestMultiTermQueryRewrites#checkBooleanQueryBoosts(BooleanQuery).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiTermQueryRewrites#checkBooleanQueryBoosts(BooleanQuery).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiTermQueryRewrites#checkBooleanQueryBoosts(BooleanQuery).mjava","sourceNew":"  private void checkBooleanQueryBoosts(BooleanQuery bq) {\n    for (BooleanClause clause : bq.clauses()) {\n      final TermQuery mtq = (TermQuery) clause.getQuery();\n      assertEquals(\"Parallel sorting of boosts in rewrite mode broken\",\n        Float.parseFloat(mtq.getTerm().text()), mtq.getBoost(), 0);\n    }\n  }\n\n","sourceOld":"  private void checkBooleanQueryBoosts(BooleanQuery bq) {\n    for (BooleanClause clause : bq.clauses()) {\n      final TermQuery mtq = (TermQuery) clause.getQuery();\n      assertEquals(\"Parallel sorting of boosts in rewrite mode broken\",\n        Float.parseFloat(mtq.getTerm().text()), mtq.getBoost(), 0);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiTermQueryRewrites#checkBooleanQueryBoosts(BooleanQuery).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestMultiTermQueryRewrites#checkBooleanQueryBoosts(BooleanQuery).mjava","sourceNew":"  private void checkBooleanQueryBoosts(BooleanQuery bq) {\n    for (BooleanClause clause : bq.clauses()) {\n      final BoostQuery boostQ = (BoostQuery) clause.getQuery();\n      final TermQuery mtq = (TermQuery) boostQ.getQuery();\n      assertEquals(\"Parallel sorting of boosts in rewrite mode broken\",\n        Float.parseFloat(mtq.getTerm().text()), boostQ.getBoost(), 0);\n    }\n  }\n\n","sourceOld":"  private void checkBooleanQueryBoosts(BooleanQuery bq) {\n    for (BooleanClause clause : bq.clauses()) {\n      final TermQuery mtq = (TermQuery) clause.getQuery();\n      assertEquals(\"Parallel sorting of boosts in rewrite mode broken\",\n        Float.parseFloat(mtq.getTerm().text()), mtq.getBoost(), 0);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2dfdf766e55e943d942055d7de53c7ad6bc45283"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}