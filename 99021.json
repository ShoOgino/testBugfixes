{"path":"backwards/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#getString(int).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#getString(int).mjava","pathOld":"/dev/null","sourceNew":"    public String getString(int nTokens) {\n      nTokens = nTokens!=0 ? nTokens : r.nextInt(4)+1;\n\n      // Half the time make a random UTF8 string\n      if (r.nextBoolean())\n        return getUTF8String(nTokens);\n\n      // avoid StringBuffer because it adds extra synchronization.\n      char[] arr = new char[nTokens*2];\n      for (int i=0; i<nTokens; i++) {\n        arr[i*2] = (char)('A' + r.nextInt(10));\n        arr[i*2+1] = ' ';\n      }\n      return new String(arr);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#getString(int).mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestStressIndexing2.IndexingThread#getString(int).mjava","sourceNew":"    public String getString(int nTokens) {\n      nTokens = nTokens!=0 ? nTokens : r.nextInt(4)+1;\n\n      // Half the time make a random UTF8 string\n      if (r.nextBoolean())\n        return getUTF8String(nTokens);\n\n      // avoid StringBuffer because it adds extra synchronization.\n      char[] arr = new char[nTokens*2];\n      for (int i=0; i<nTokens; i++) {\n        arr[i*2] = (char)('A' + r.nextInt(10));\n        arr[i*2+1] = ' ';\n      }\n      return new String(arr);\n    }\n\n","sourceOld":"    public String getString(int nTokens) {\n      nTokens = nTokens!=0 ? nTokens : r.nextInt(4)+1;\n\n      // Half the time make a random UTF8 string\n      if (r.nextBoolean())\n        return getUTF8String(nTokens);\n\n      // avoid StringBuffer because it adds extra synchronization.\n      char[] arr = new char[nTokens*2];\n      for (int i=0; i<nTokens; i++) {\n        arr[i*2] = (char)('A' + r.nextInt(10));\n        arr[i*2+1] = ' ';\n      }\n      return new String(arr);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}