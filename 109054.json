{"path":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","sourceNew":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    FieldsEnum fieldsEnum = leftFields.iterator();\n    String field;\n    while ((field = fieldsEnum.next()) != null) {\n      DocValues leftNorms = MultiDocValues.getNormDocValues(leftReader, field);\n      DocValues rightNorms = MultiDocValues.getNormDocValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftNorms, rightNorms);\n      } else {\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","sourceOld":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    FieldsEnum fieldsEnum = leftFields.iterator();\n    String field;\n    while ((field = fieldsEnum.next()) != null) {\n      DocValues leftNorms = MultiDocValues.getNormDocValues(leftReader, field);\n      DocValues rightNorms = MultiDocValues.getNormDocValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftNorms, rightNorms);\n      } else {\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d08eba3d52b63561ebf936481ce73e6b6a14aa03","date":1333879759,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","sourceNew":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    InvertedFields leftFields = MultiFields.getFields(leftReader);\n    InvertedFields rightFields = MultiFields.getFields(rightReader);\n    // InvertedFields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    FieldsEnum fieldsEnum = leftFields.iterator();\n    String field;\n    while ((field = fieldsEnum.next()) != null) {\n      DocValues leftNorms = MultiDocValues.getNormDocValues(leftReader, field);\n      DocValues rightNorms = MultiDocValues.getNormDocValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftNorms, rightNorms);\n      } else {\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","sourceOld":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    FieldsEnum fieldsEnum = leftFields.iterator();\n    String field;\n    while ((field = fieldsEnum.next()) != null) {\n      DocValues leftNorms = MultiDocValues.getNormDocValues(leftReader, field);\n      DocValues rightNorms = MultiDocValues.getNormDocValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftNorms, rightNorms);\n      } else {\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","date":1333892281,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","sourceNew":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    FieldsEnum fieldsEnum = leftFields.iterator();\n    String field;\n    while ((field = fieldsEnum.next()) != null) {\n      DocValues leftNorms = MultiDocValues.getNormDocValues(leftReader, field);\n      DocValues rightNorms = MultiDocValues.getNormDocValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftNorms, rightNorms);\n      } else {\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","sourceOld":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    InvertedFields leftFields = MultiFields.getFields(leftReader);\n    InvertedFields rightFields = MultiFields.getFields(rightReader);\n    // InvertedFields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    FieldsEnum fieldsEnum = leftFields.iterator();\n    String field;\n    while ((field = fieldsEnum.next()) != null) {\n      DocValues leftNorms = MultiDocValues.getNormDocValues(leftReader, field);\n      DocValues rightNorms = MultiDocValues.getNormDocValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftNorms, rightNorms);\n      } else {\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fb07ab105350b80ed9d63ca64b117084ed7391bc","date":1344824719,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","sourceNew":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      DocValues leftNorms = MultiDocValues.getNormDocValues(leftReader, field);\n      DocValues rightNorms = MultiDocValues.getNormDocValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftNorms, rightNorms);\n      } else {\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","sourceOld":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    FieldsEnum fieldsEnum = leftFields.iterator();\n    String field;\n    while ((field = fieldsEnum.next()) != null) {\n      DocValues leftNorms = MultiDocValues.getNormDocValues(leftReader, field);\n      DocValues rightNorms = MultiDocValues.getNormDocValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftNorms, rightNorms);\n      } else {\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","sourceNew":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      DocValues leftNorms = MultiDocValues.getNormDocValues(leftReader, field);\n      DocValues rightNorms = MultiDocValues.getNormDocValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftNorms, rightNorms);\n      } else {\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","sourceOld":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    FieldsEnum fieldsEnum = leftFields.iterator();\n    String field;\n    while ((field = fieldsEnum.next()) != null) {\n      DocValues leftNorms = MultiDocValues.getNormDocValues(leftReader, field);\n      DocValues rightNorms = MultiDocValues.getNormDocValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftNorms, rightNorms);\n      } else {\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","sourceNew":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      DocValues leftNorms = MultiDocValues.getNormDocValues(leftReader, field);\n      DocValues rightNorms = MultiDocValues.getNormDocValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftNorms, rightNorms);\n      } else {\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","sourceOld":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    FieldsEnum fieldsEnum = leftFields.iterator();\n    String field;\n    while ((field = fieldsEnum.next()) != null) {\n      DocValues leftNorms = MultiDocValues.getNormDocValues(leftReader, field);\n      DocValues rightNorms = MultiDocValues.getNormDocValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftNorms, rightNorms);\n      } else {\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7178a82d1134111f4511f28bb9ad57573a57d93","date":1354112608,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","sourceNew":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      // nocommit cutover to per-segment comparison\n      DocValues leftNorms = MultiDocValues.getNormDocValues(leftReader, field);\n      DocValues rightNorms = MultiDocValues.getNormDocValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftNorms, rightNorms);\n      } else {\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","sourceOld":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      DocValues leftNorms = MultiDocValues.getNormDocValues(leftReader, field);\n      DocValues rightNorms = MultiDocValues.getNormDocValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftNorms, rightNorms);\n      } else {\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad7de846867bd14c63f9dd19df082f72c5ea9c54","date":1355517454,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","sourceNew":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Assume.assumeTrue(_TestUtil.canUseSimpleNorms());\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      // nocommit cutover to per-segment comparison\n      NumericDocValues leftNorms = MultiSimpleDocValues.simpleNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiSimpleDocValues.simpleNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftNorms, rightNorms);\n      } else {\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","sourceOld":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      // nocommit cutover to per-segment comparison\n      DocValues leftNorms = MultiDocValues.getNormDocValues(leftReader, field);\n      DocValues rightNorms = MultiDocValues.getNormDocValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftNorms, rightNorms);\n      } else {\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"32608e0a08e76fe8668cd1dcca0e7a8f6d7f3f0a","date":1357739321,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","sourceNew":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Assume.assumeTrue(_TestUtil.canUseSimpleNorms());\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      // nocommit cutover to per-segment comparison\n      NumericDocValues leftNorms = MultiSimpleDocValues.simpleNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiSimpleDocValues.simpleNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftReader.maxDoc(), leftNorms, rightNorms);\n      } else {\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","sourceOld":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Assume.assumeTrue(_TestUtil.canUseSimpleNorms());\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      // nocommit cutover to per-segment comparison\n      NumericDocValues leftNorms = MultiSimpleDocValues.simpleNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiSimpleDocValues.simpleNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftNorms, rightNorms);\n      } else {\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9f83659f3ad9c8b35c13c733190c805185b287f4","date":1357839018,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","sourceNew":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Assume.assumeTrue(_TestUtil.canUseSimpleNorms());\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      // nocommit cutover to per-segment comparison\n      NumericDocValues leftNorms = MultiSimpleDocValues.simpleNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiSimpleDocValues.simpleNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftReader.maxDoc(), leftNorms, rightNorms);\n      } else {\n        // nocommit: figure out WTF is going on here, maybe a bug in MultiSimpleDocValues?\n        // ant test  -Dtestcase=TestDuelingCodecs -Dtests.method=testEquals -Dtests.seed=CCA808E6ADF64354 -Dtests.slow=true -Dtests.codec=Lucene41 -Dtests.locale=en_GB -Dtests.timezone=Asia/Pyongyang -Dtests.file.encoding=US-ASCII\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","sourceOld":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Assume.assumeTrue(_TestUtil.canUseSimpleNorms());\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      // nocommit cutover to per-segment comparison\n      NumericDocValues leftNorms = MultiSimpleDocValues.simpleNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiSimpleDocValues.simpleNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftReader.maxDoc(), leftNorms, rightNorms);\n      } else {\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ff8fcbb5ae20d2286cb666d4694f0a8c3c552f6","date":1357912799,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","sourceNew":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Assume.assumeTrue(_TestUtil.canUseSimpleNorms());\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      // nocommit cutover to per-segment comparison\n      NumericDocValues leftNorms = MultiSimpleDocValues.simpleNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiSimpleDocValues.simpleNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftReader.maxDoc(), leftNorms, rightNorms);\n      } else {\n        assertNull(info, leftNorms);\n        assertNull(info, rightNorms);\n      }\n    }\n  }\n\n","sourceOld":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Assume.assumeTrue(_TestUtil.canUseSimpleNorms());\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      // nocommit cutover to per-segment comparison\n      NumericDocValues leftNorms = MultiSimpleDocValues.simpleNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiSimpleDocValues.simpleNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftReader.maxDoc(), leftNorms, rightNorms);\n      } else {\n        // nocommit: figure out WTF is going on here, maybe a bug in MultiSimpleDocValues?\n        // ant test  -Dtestcase=TestDuelingCodecs -Dtests.method=testEquals -Dtests.seed=CCA808E6ADF64354 -Dtests.slow=true -Dtests.codec=Lucene41 -Dtests.locale=en_GB -Dtests.timezone=Asia/Pyongyang -Dtests.file.encoding=US-ASCII\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0837ab0472feecb3a54260729d845f839e1cbd72","date":1358283639,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","sourceNew":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      // nocommit cutover to per-segment comparison\n      NumericDocValues leftNorms = MultiSimpleDocValues.simpleNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiSimpleDocValues.simpleNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftReader.maxDoc(), leftNorms, rightNorms);\n      } else {\n        assertNull(info, leftNorms);\n        assertNull(info, rightNorms);\n      }\n    }\n  }\n\n","sourceOld":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Assume.assumeTrue(_TestUtil.canUseSimpleNorms());\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      // nocommit cutover to per-segment comparison\n      NumericDocValues leftNorms = MultiSimpleDocValues.simpleNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiSimpleDocValues.simpleNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftReader.maxDoc(), leftNorms, rightNorms);\n      } else {\n        assertNull(info, leftNorms);\n        assertNull(info, rightNorms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200","date":1358521790,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","sourceNew":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      // nocommit cutover to per-segment comparison\n      NumericDocValues leftNorms = MultiDocValues.getNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiDocValues.getNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftReader.maxDoc(), leftNorms, rightNorms);\n      } else {\n        assertNull(info, leftNorms);\n        assertNull(info, rightNorms);\n      }\n    }\n  }\n\n","sourceOld":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      // nocommit cutover to per-segment comparison\n      NumericDocValues leftNorms = MultiSimpleDocValues.simpleNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiSimpleDocValues.simpleNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftReader.maxDoc(), leftNorms, rightNorms);\n      } else {\n        assertNull(info, leftNorms);\n        assertNull(info, rightNorms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"71c36a54dc1069e83a3c0aa8194a7319aba642ea","date":1358781390,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","sourceNew":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      NumericDocValues leftNorms = MultiDocValues.getNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiDocValues.getNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftReader.maxDoc(), leftNorms, rightNorms);\n      } else {\n        assertNull(info, leftNorms);\n        assertNull(info, rightNorms);\n      }\n    }\n  }\n\n","sourceOld":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      // nocommit cutover to per-segment comparison\n      NumericDocValues leftNorms = MultiDocValues.getNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiDocValues.getNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftReader.maxDoc(), leftNorms, rightNorms);\n      } else {\n        assertNull(info, leftNorms);\n        assertNull(info, rightNorms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","sourceNew":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      NumericDocValues leftNorms = MultiDocValues.getNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiDocValues.getNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftReader.maxDoc(), leftNorms, rightNorms);\n      } else {\n        assertNull(info, leftNorms);\n        assertNull(info, rightNorms);\n      }\n    }\n  }\n\n","sourceOld":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      DocValues leftNorms = MultiDocValues.getNormDocValues(leftReader, field);\n      DocValues rightNorms = MultiDocValues.getNormDocValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftNorms, rightNorms);\n      } else {\n        assertNull(leftNorms);\n        assertNull(rightNorms);\n      }\n    }\n  }\n\n","bugFix":["0f4b223b56d0c7927ae8baced5e1b1dd4c693b1d","868186558eb3a854ce7e720a52bb445795d54910"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51c8450b3b616b6777f722ff4083c0bf946381a2","date":1363812022,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertNormsEquals(String,IndexReader,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","sourceNew":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNormsEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      NumericDocValues leftNorms = MultiDocValues.getNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiDocValues.getNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValuesEquals(info, leftReader.maxDoc(), leftNorms, rightNorms);\n      } else {\n        assertNull(info, leftNorms);\n        assertNull(info, rightNorms);\n      }\n    }\n  }\n\n","sourceOld":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      NumericDocValues leftNorms = MultiDocValues.getNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiDocValues.getNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftReader.maxDoc(), leftNorms, rightNorms);\n      } else {\n        assertNull(info, leftNorms);\n        assertNull(info, rightNorms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f7178a82d1134111f4511f28bb9ad57573a57d93":["fb07ab105350b80ed9d63ca64b117084ed7391bc"],"fb07ab105350b80ed9d63ca64b117084ed7391bc":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4ff8fcbb5ae20d2286cb666d4694f0a8c3c552f6":["9f83659f3ad9c8b35c13c733190c805185b287f4"],"71c36a54dc1069e83a3c0aa8194a7319aba642ea":["b8acf0807ca5f38beda8e0f7d5ab46ff39f81200"],"51c8450b3b616b6777f722ff4083c0bf946381a2":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"32608e0a08e76fe8668cd1dcca0e7a8f6d7f3f0a":["ad7de846867bd14c63f9dd19df082f72c5ea9c54"],"9f83659f3ad9c8b35c13c733190c805185b287f4":["32608e0a08e76fe8668cd1dcca0e7a8f6d7f3f0a"],"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200":["0837ab0472feecb3a54260729d845f839e1cbd72"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","fb07ab105350b80ed9d63ca64b117084ed7391bc"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["fb07ab105350b80ed9d63ca64b117084ed7391bc","71c36a54dc1069e83a3c0aa8194a7319aba642ea"],"ad7de846867bd14c63f9dd19df082f72c5ea9c54":["f7178a82d1134111f4511f28bb9ad57573a57d93"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"0837ab0472feecb3a54260729d845f839e1cbd72":["4ff8fcbb5ae20d2286cb666d4694f0a8c3c552f6"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","fb07ab105350b80ed9d63ca64b117084ed7391bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["51c8450b3b616b6777f722ff4083c0bf946381a2"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"f7178a82d1134111f4511f28bb9ad57573a57d93":["ad7de846867bd14c63f9dd19df082f72c5ea9c54"],"fb07ab105350b80ed9d63ca64b117084ed7391bc":["f7178a82d1134111f4511f28bb9ad57573a57d93","c7869f64c874ebf7f317d22c00baf2b6857797a6","d4d69c535930b5cce125cff868d40f6373dc27d4","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"4ff8fcbb5ae20d2286cb666d4694f0a8c3c552f6":["0837ab0472feecb3a54260729d845f839e1cbd72"],"71c36a54dc1069e83a3c0aa8194a7319aba642ea":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"51c8450b3b616b6777f722ff4083c0bf946381a2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"32608e0a08e76fe8668cd1dcca0e7a8f6d7f3f0a":["9f83659f3ad9c8b35c13c733190c805185b287f4"],"9f83659f3ad9c8b35c13c733190c805185b287f4":["4ff8fcbb5ae20d2286cb666d4694f0a8c3c552f6"],"b8acf0807ca5f38beda8e0f7d5ab46ff39f81200":["71c36a54dc1069e83a3c0aa8194a7319aba642ea"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"d4d69c535930b5cce125cff868d40f6373dc27d4":["51c8450b3b616b6777f722ff4083c0bf946381a2"],"ad7de846867bd14c63f9dd19df082f72c5ea9c54":["32608e0a08e76fe8668cd1dcca0e7a8f6d7f3f0a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["fb07ab105350b80ed9d63ca64b117084ed7391bc","c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"0837ab0472feecb3a54260729d845f839e1cbd72":["b8acf0807ca5f38beda8e0f7d5ab46ff39f81200"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}