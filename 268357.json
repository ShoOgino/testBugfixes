{"path":"src/java/org/apache/solr/core/Config#openResource(String).mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#openResource(String).mjava","pathOld":"/dev/null","sourceNew":"  public static InputStream openResource(String resource) {\n    ClassLoader loader = Thread.currentThread().getContextClassLoader();\n    InputStream is = loader.getResourceAsStream(resource);\n    if (is==null) {\n      throw new SolrException(500,\"Can't open \" + resource);\n    }\n    return is;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"268776364d28ac43d2fac972c45f929978145470","date":1139281135,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#openResource(String).mjava","pathOld":"src/java/org/apache/solr/core/Config#openResource(String).mjava","sourceNew":"  public static InputStream openResource(String resource) {\n    InputStream is=null;\n\n    try {\n      File f = new File(resource);\n      if (!f.isAbsolute()) {\n        // try $CWD/conf/\n        f = new File(\"conf/\" + resource);\n      }\n      if (f.isFile() && f.canRead()) {\n        return new FileInputStream(f);\n      } else {\n        // try $CWD\n        f = new File(resource);\n        if (f.isFile() && f.canRead()) {\n          return new FileInputStream(f);\n        }\n      }\n\n      ClassLoader loader = Thread.currentThread().getContextClassLoader();\n      is = loader.getResourceAsStream(resource);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error opening \" + resource, e);\n    }\n    if (is==null) {\n      throw new RuntimeException(\"Can't find resource \" + resource);\n    }\n    return is;\n  }\n\n","sourceOld":"  public static InputStream openResource(String resource) {\n    ClassLoader loader = Thread.currentThread().getContextClassLoader();\n    InputStream is = loader.getResourceAsStream(resource);\n    if (is==null) {\n      throw new SolrException(500,\"Can't open \" + resource);\n    }\n    return is;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d81293d59d4253018737d724982838bf76ce5c1","date":1142521005,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#openResource(String).mjava","pathOld":"src/java/org/apache/solr/core/Config#openResource(String).mjava","sourceNew":"  public static InputStream openResource(String resource) {\n    InputStream is=null;\n\n    try {\n      File f = new File(resource);\n      if (!f.isAbsolute()) {\n        // try $CWD/solrconf/\n        f = new File(configDir + resource);\n      }\n      if (f.isFile() && f.canRead()) {\n        return new FileInputStream(f);\n      } else {\n        // try $CWD\n        f = new File(resource);\n        if (f.isFile() && f.canRead()) {\n          return new FileInputStream(f);\n        }\n      }\n\n      ClassLoader loader = Thread.currentThread().getContextClassLoader();\n      is = loader.getResourceAsStream(resource);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error opening \" + resource, e);\n    }\n    if (is==null) {\n      throw new RuntimeException(\"Can't find resource \" + resource);\n    }\n    return is;\n  }\n\n","sourceOld":"  public static InputStream openResource(String resource) {\n    InputStream is=null;\n\n    try {\n      File f = new File(resource);\n      if (!f.isAbsolute()) {\n        // try $CWD/conf/\n        f = new File(\"conf/\" + resource);\n      }\n      if (f.isFile() && f.canRead()) {\n        return new FileInputStream(f);\n      } else {\n        // try $CWD\n        f = new File(resource);\n        if (f.isFile() && f.canRead()) {\n          return new FileInputStream(f);\n        }\n      }\n\n      ClassLoader loader = Thread.currentThread().getContextClassLoader();\n      is = loader.getResourceAsStream(resource);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error opening \" + resource, e);\n    }\n    if (is==null) {\n      throw new RuntimeException(\"Can't find resource \" + resource);\n    }\n    return is;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04a954a68448c7f3d03c375dc4320f2c0b13cc60","date":1143819936,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#openResource(String).mjava","pathOld":"src/java/org/apache/solr/core/Config#openResource(String).mjava","sourceNew":"  public static InputStream openResource(String resource) {\n    InputStream is=null;\n\n    try {\n      File f = new File(resource);\n      if (!f.isAbsolute()) {\n        // try $CWD/solrconf/\n        f = new File(getConfigDir() + resource);\n      }\n      if (f.isFile() && f.canRead()) {\n        return new FileInputStream(f);\n      } else {\n        // try $CWD\n        f = new File(resource);\n        if (f.isFile() && f.canRead()) {\n          return new FileInputStream(f);\n        }\n      }\n\n      ClassLoader loader = Thread.currentThread().getContextClassLoader();\n      is = loader.getResourceAsStream(resource);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error opening \" + resource, e);\n    }\n    if (is==null) {\n      throw new RuntimeException(\"Can't find resource '\" + resource + \"' in classpath or '\" + getConfigDir() + \"', cwd=\"+System.getProperty(\"user.dir\"));\n    }\n    return is;\n  }\n\n","sourceOld":"  public static InputStream openResource(String resource) {\n    InputStream is=null;\n\n    try {\n      File f = new File(resource);\n      if (!f.isAbsolute()) {\n        // try $CWD/solrconf/\n        f = new File(configDir + resource);\n      }\n      if (f.isFile() && f.canRead()) {\n        return new FileInputStream(f);\n      } else {\n        // try $CWD\n        f = new File(resource);\n        if (f.isFile() && f.canRead()) {\n          return new FileInputStream(f);\n        }\n      }\n\n      ClassLoader loader = Thread.currentThread().getContextClassLoader();\n      is = loader.getResourceAsStream(resource);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error opening \" + resource, e);\n    }\n    if (is==null) {\n      throw new RuntimeException(\"Can't find resource \" + resource);\n    }\n    return is;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"88e7c7b9fdd71ab3f2261395347caff22f89cce0","date":1163469932,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#openResource(String).mjava","pathOld":"src/java/org/apache/solr/core/Config#openResource(String).mjava","sourceNew":"  public static InputStream openResource(String resource) {\n    InputStream is=null;\n\n    try {\n      File f = new File(resource);\n      if (!f.isAbsolute()) {\n        // try $CWD/solrconf/\n        f = new File(getConfigDir() + resource);\n      }\n      if (f.isFile() && f.canRead()) {\n        return new FileInputStream(f);\n      } else {\n        // try $CWD\n        f = new File(resource);\n        if (f.isFile() && f.canRead()) {\n          return new FileInputStream(f);\n        }\n      }\n\n      ClassLoader loader = getClassLoader();\n      is = loader.getResourceAsStream(resource);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error opening \" + resource, e);\n    }\n    if (is==null) {\n      throw new RuntimeException(\"Can't find resource '\" + resource + \"' in classpath or '\" + getConfigDir() + \"', cwd=\"+System.getProperty(\"user.dir\"));\n    }\n    return is;\n  }\n\n","sourceOld":"  public static InputStream openResource(String resource) {\n    InputStream is=null;\n\n    try {\n      File f = new File(resource);\n      if (!f.isAbsolute()) {\n        // try $CWD/solrconf/\n        f = new File(getConfigDir() + resource);\n      }\n      if (f.isFile() && f.canRead()) {\n        return new FileInputStream(f);\n      } else {\n        // try $CWD\n        f = new File(resource);\n        if (f.isFile() && f.canRead()) {\n          return new FileInputStream(f);\n        }\n      }\n\n      ClassLoader loader = Thread.currentThread().getContextClassLoader();\n      is = loader.getResourceAsStream(resource);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error opening \" + resource, e);\n    }\n    if (is==null) {\n      throw new RuntimeException(\"Can't find resource '\" + resource + \"' in classpath or '\" + getConfigDir() + \"', cwd=\"+System.getProperty(\"user.dir\"));\n    }\n    return is;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d6338c87060be5f66757a94945975f3bbd377a9","date":1189278234,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#openResource(String).mjava","pathOld":"src/java/org/apache/solr/core/Config#openResource(String).mjava","sourceNew":"  public InputStream openResource(String resource) {\n    InputStream is=null;\n    \n    try {\n      File f = new File(resource);\n      if (!f.isAbsolute()) {\n        // try $CWD/solrconf/\n        f = new File(getConfigDir() + resource);\n      }\n      if (f.isFile() && f.canRead()) {\n        return new FileInputStream(f);\n      } else {\n        // try $CWD\n        f = new File(resource);\n        if (f.isFile() && f.canRead()) {\n          return new FileInputStream(f);\n        }\n      }\n      \n      ClassLoader loader = getClassLoader();\n      is = loader.getResourceAsStream(resource);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error opening \" + resource, e);\n    }\n    if (is==null) {\n      throw new RuntimeException(\"Can't find resource '\" + resource + \"' in classpath or '\" + getConfigDir() + \"', cwd=\"+System.getProperty(\"user.dir\"));\n    }\n    return is;\n  }\n\n","sourceOld":"  public static InputStream openResource(String resource) {\n    InputStream is=null;\n\n    try {\n      File f = new File(resource);\n      if (!f.isAbsolute()) {\n        // try $CWD/solrconf/\n        f = new File(getConfigDir() + resource);\n      }\n      if (f.isFile() && f.canRead()) {\n        return new FileInputStream(f);\n      } else {\n        // try $CWD\n        f = new File(resource);\n        if (f.isFile() && f.canRead()) {\n          return new FileInputStream(f);\n        }\n      }\n\n      ClassLoader loader = getClassLoader();\n      is = loader.getResourceAsStream(resource);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error opening \" + resource, e);\n    }\n    if (is==null) {\n      throw new RuntimeException(\"Can't find resource '\" + resource + \"' in classpath or '\" + getConfigDir() + \"', cwd=\"+System.getProperty(\"user.dir\"));\n    }\n    return is;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014","date":1195912306,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#openResource(String).mjava","pathOld":"src/java/org/apache/solr/core/Config#openResource(String).mjava","sourceNew":"  @Deprecated\n  public InputStream openResource(String resource) {\n    return loader.openResource(resource);\n  }\n\n","sourceOld":"  public InputStream openResource(String resource) {\n    InputStream is=null;\n    \n    try {\n      File f = new File(resource);\n      if (!f.isAbsolute()) {\n        // try $CWD/solrconf/\n        f = new File(getConfigDir() + resource);\n      }\n      if (f.isFile() && f.canRead()) {\n        return new FileInputStream(f);\n      } else {\n        // try $CWD\n        f = new File(resource);\n        if (f.isFile() && f.canRead()) {\n          return new FileInputStream(f);\n        }\n      }\n      \n      ClassLoader loader = getClassLoader();\n      is = loader.getResourceAsStream(resource);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error opening \" + resource, e);\n    }\n    if (is==null) {\n      throw new RuntimeException(\"Can't find resource '\" + resource + \"' in classpath or '\" + getConfigDir() + \"', cwd=\"+System.getProperty(\"user.dir\"));\n    }\n    return is;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"166e7267ee953339ce7ff2febc91aee7576425f5","date":1218487056,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#openResource(String).mjava","pathOld":"src/java/org/apache/solr/core/Config#openResource(String).mjava","sourceNew":"  /**\n   * @deprecated Use {@link SolrResourceLoader#openResource(String)} instead.\n   */\n  @Deprecated\n  public InputStream openResource(String resource) {\n    return loader.openResource(resource);\n  }\n\n","sourceOld":"  @Deprecated\n  public InputStream openResource(String resource) {\n    return loader.openResource(resource);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/Config#openResource(String).mjava","pathOld":"src/java/org/apache/solr/core/Config#openResource(String).mjava","sourceNew":"  /**\n   * @deprecated Use {@link SolrResourceLoader#openResource(String)} instead.\n   */\n  @Deprecated\n  public InputStream openResource(String resource) {\n    return loader.openResource(resource);\n  }\n\n","sourceOld":"  /**\n   * @deprecated Use {@link SolrResourceLoader#openResource(String)} instead.\n   */\n  @Deprecated\n  public InputStream openResource(String resource) {\n    return loader.openResource(resource);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"88e7c7b9fdd71ab3f2261395347caff22f89cce0":["04a954a68448c7f3d03c375dc4320f2c0b13cc60"],"6d6338c87060be5f66757a94945975f3bbd377a9":["88e7c7b9fdd71ab3f2261395347caff22f89cce0"],"268776364d28ac43d2fac972c45f929978145470":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"3d81293d59d4253018737d724982838bf76ce5c1":["268776364d28ac43d2fac972c45f929978145470"],"166e7267ee953339ce7ff2febc91aee7576425f5":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"04a954a68448c7f3d03c375dc4320f2c0b13cc60":["3d81293d59d4253018737d724982838bf76ce5c1"],"ad94625fb8d088209f46650c8097196fec67f00c":["166e7267ee953339ce7ff2febc91aee7576425f5"],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["6d6338c87060be5f66757a94945975f3bbd377a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"88e7c7b9fdd71ab3f2261395347caff22f89cce0":["6d6338c87060be5f66757a94945975f3bbd377a9"],"6d6338c87060be5f66757a94945975f3bbd377a9":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"268776364d28ac43d2fac972c45f929978145470":["3d81293d59d4253018737d724982838bf76ce5c1"],"3d81293d59d4253018737d724982838bf76ce5c1":["04a954a68448c7f3d03c375dc4320f2c0b13cc60"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["268776364d28ac43d2fac972c45f929978145470"],"166e7267ee953339ce7ff2febc91aee7576425f5":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"04a954a68448c7f3d03c375dc4320f2c0b13cc60":["88e7c7b9fdd71ab3f2261395347caff22f89cce0"],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["166e7267ee953339ce7ff2febc91aee7576425f5"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}