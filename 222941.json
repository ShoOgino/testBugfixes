{"path":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#printUsage().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#printUsage().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#printUsage().mjava","sourceNew":"  private static void printUsage() {\n    System.err.println(\"Upgrades an index so all segments created with a previous Lucene version are rewritten.\");\n    System.err.println(\"Usage:\");\n    System.err.println(\"  java \" + IndexUpgrader.class.getName() + \" [-delete-prior-commits] [-verbose] [-dir-impl X] indexDir\");\n    System.err.println(\"This tool keeps only the last commit in an index; for this\");\n    System.err.println(\"reason, if the incoming index has more than one commit, the tool\");\n    System.err.println(\"refuses to run by default. Specify -delete-prior-commits to override\");\n    System.err.println(\"this, allowing the tool to delete all but the last commit.\");\n    System.err.println(\"Specify a \" + FSDirectory.class.getSimpleName() + \n        \" implementation through the -dir-impl option to force its use. If no package is specified the \" \n        + FSDirectory.class.getPackage().getName() + \" package will be used.\");\n    System.err.println(\"WARNING: This tool may reorder document IDs!\");\n    System.exit(1);\n  }\n\n","sourceOld":"  private static void printUsage() {\n    System.err.println(\"Upgrades an index so all segments created with a previous Lucene version are rewritten.\");\n    System.err.println(\"Usage:\");\n    System.err.println(\"  java \" + IndexUpgrader.class.getName() + \" [-delete-prior-commits] [-verbose] [-dir-impl X] indexDir\");\n    System.err.println(\"This tool keeps only the last commit in an index; for this\");\n    System.err.println(\"reason, if the incoming index has more than one commit, the tool\");\n    System.err.println(\"refuses to run by default. Specify -delete-prior-commits to override\");\n    System.err.println(\"this, allowing the tool to delete all but the last commit.\");\n    System.err.println(\"Specify a \" + FSDirectory.class.getSimpleName() + \n        \" implementation through the -dir-impl option to force its use. If no package is specified the \" \n        + FSDirectory.class.getPackage().getName() + \" package will be used.\");\n    System.err.println(\"WARNING: This tool may reorder document IDs!\");\n    System.exit(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e6d6f6217dc04f29ee177d2837147dd47627787","date":1429543326,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#printUsage().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#printUsage().mjava","sourceNew":"  @SuppressForbidden(reason = \"System.out required: command line tool\")\n  private static void printUsage() {\n    System.err.println(\"Upgrades an index so all segments created with a previous Lucene version are rewritten.\");\n    System.err.println(\"Usage:\");\n    System.err.println(\"  java \" + IndexUpgrader.class.getName() + \" [-delete-prior-commits] [-verbose] [-dir-impl X] indexDir\");\n    System.err.println(\"This tool keeps only the last commit in an index; for this\");\n    System.err.println(\"reason, if the incoming index has more than one commit, the tool\");\n    System.err.println(\"refuses to run by default. Specify -delete-prior-commits to override\");\n    System.err.println(\"this, allowing the tool to delete all but the last commit.\");\n    System.err.println(\"Specify a \" + FSDirectory.class.getSimpleName() + \n        \" implementation through the -dir-impl option to force its use. If no package is specified the \" \n        + FSDirectory.class.getPackage().getName() + \" package will be used.\");\n    System.err.println(\"WARNING: This tool may reorder document IDs!\");\n    System.exit(1);\n  }\n\n","sourceOld":"  private static void printUsage() {\n    System.err.println(\"Upgrades an index so all segments created with a previous Lucene version are rewritten.\");\n    System.err.println(\"Usage:\");\n    System.err.println(\"  java \" + IndexUpgrader.class.getName() + \" [-delete-prior-commits] [-verbose] [-dir-impl X] indexDir\");\n    System.err.println(\"This tool keeps only the last commit in an index; for this\");\n    System.err.println(\"reason, if the incoming index has more than one commit, the tool\");\n    System.err.println(\"refuses to run by default. Specify -delete-prior-commits to override\");\n    System.err.println(\"this, allowing the tool to delete all but the last commit.\");\n    System.err.println(\"Specify a \" + FSDirectory.class.getSimpleName() + \n        \" implementation through the -dir-impl option to force its use. If no package is specified the \" \n        + FSDirectory.class.getPackage().getName() + \" package will be used.\");\n    System.err.println(\"WARNING: This tool may reorder document IDs!\");\n    System.exit(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e6d6f6217dc04f29ee177d2837147dd47627787":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7e6d6f6217dc04f29ee177d2837147dd47627787"]},"commit2Childs":{"7e6d6f6217dc04f29ee177d2837147dd47627787":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7e6d6f6217dc04f29ee177d2837147dd47627787"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}