{"path":"lucene/core/src/java/org/apache/lucene/index/LeafReader#postings(Term).mjava","commits":[{"id":"e73063b92d958076ef4ae8beb5f493e8ccdcecb4","date":1424177215,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LeafReader#postings(Term).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns {@link PostingsEnum} for the specified term\n   *  with {@link PostingsEnum#FREQS}. */\n  public final PostingsEnum postings(Term term) throws IOException {\n    return postings(term, PostingsEnum.FREQS);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0110a7839f213742dd59218a086a4f569ac18184","date":1427826733,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LeafReader#postings(Term).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LeafReader#postings(Term).mjava","sourceNew":"  /** Returns {@link PostingsEnum} for the specified term\n   *  with {@link PostingsEnum#FREQS}.\n   *  <p>\n   *  Use this method if you only require documents and frequencies,\n   *  and do not need any proximity data.\n   *  This method is equivalent to \n   *  {@link #postings(Term, int) postings(term, PostingsEnum.FREQS)}\n   *  @see #postings(Term, int)\n   */\n  public final PostingsEnum postings(Term term) throws IOException {\n    return postings(term, PostingsEnum.FREQS);\n  }\n\n","sourceOld":"  /** Returns {@link PostingsEnum} for the specified term\n   *  with {@link PostingsEnum#FREQS}. */\n  public final PostingsEnum postings(Term term) throws IOException {\n    return postings(term, PostingsEnum.FREQS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b4e3cd382d0d075a0f1725649c084bb6510c483","date":1428096423,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LeafReader#postings(Term).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LeafReader#postings(Term).mjava","sourceNew":"  /** Returns {@link PostingsEnum} for the specified term\n   *  with {@link PostingsEnum#FREQS}.\n   *  <p>\n   *  Use this method if you only require documents and frequencies,\n   *  and do not need any proximity data.\n   *  This method is equivalent to \n   *  {@link #postings(Term, int) postings(term, PostingsEnum.FREQS)}\n   *  @see #postings(Term, int)\n   */\n  public final PostingsEnum postings(Term term) throws IOException {\n    return postings(term, PostingsEnum.FREQS);\n  }\n\n","sourceOld":"  /** Returns {@link PostingsEnum} for the specified term\n   *  with {@link PostingsEnum#FREQS}. */\n  public final PostingsEnum postings(Term term) throws IOException {\n    return postings(term, PostingsEnum.FREQS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LeafReader#postings(Term).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LeafReader#postings(Term).mjava","sourceNew":"  /** Returns {@link PostingsEnum} for the specified term\n   *  with {@link PostingsEnum#FREQS}.\n   *  <p>\n   *  Use this method if you only require documents and frequencies,\n   *  and do not need any proximity data.\n   *  This method is equivalent to \n   *  {@link #postings(Term, int) postings(term, PostingsEnum.FREQS)}\n   *  <p><b>NOTE:</b> The returned {@link PostingsEnum} may contain deleted docs.\n   *  @see #postings(Term, int)\n   */\n  public final PostingsEnum postings(Term term) throws IOException {\n    return postings(term, PostingsEnum.FREQS);\n  }\n\n","sourceOld":"  /** Returns {@link PostingsEnum} for the specified term\n   *  with {@link PostingsEnum#FREQS}.\n   *  <p>\n   *  Use this method if you only require documents and frequencies,\n   *  and do not need any proximity data.\n   *  This method is equivalent to \n   *  {@link #postings(Term, int) postings(term, PostingsEnum.FREQS)}\n   *  @see #postings(Term, int)\n   */\n  public final PostingsEnum postings(Term term) throws IOException {\n    return postings(term, PostingsEnum.FREQS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["6b4e3cd382d0d075a0f1725649c084bb6510c483"],"e73063b92d958076ef4ae8beb5f493e8ccdcecb4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6b4e3cd382d0d075a0f1725649c084bb6510c483":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4","0110a7839f213742dd59218a086a4f569ac18184"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0110a7839f213742dd59218a086a4f569ac18184":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4464508ee83288c8c4585b533f9faaa93aa314"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e73063b92d958076ef4ae8beb5f493e8ccdcecb4":["6b4e3cd382d0d075a0f1725649c084bb6510c483","0110a7839f213742dd59218a086a4f569ac18184"],"6b4e3cd382d0d075a0f1725649c084bb6510c483":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4"],"0110a7839f213742dd59218a086a4f569ac18184":["6b4e3cd382d0d075a0f1725649c084bb6510c483"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}