{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","commits":[{"id":"7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa","date":1349450075,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a random instance.\n   */\n  public static CompressingCodec randomInstance(Random random) {\n    final CompressionMode mode = RandomPicks.randomFrom(random, CompressionMode.values());\n    final int chunkSize = RandomInts.randomIntBetween(random, 1, 500);\n    final CompressingStoredFieldsIndex index = RandomPicks.randomFrom(random, CompressingStoredFieldsIndex.values());\n    return new CompressingCodec(mode, chunkSize, index);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a96cceee825e15cd8e042b683d404086e2a58d1","date":1351872237,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","sourceNew":"  /**\n   * Create a random instance.\n   */\n  public static CompressingCodec randomInstance(Random random) {\n    final CompressionMode mode = RandomPicks.randomFrom(random, CompressionMode.values());\n    final int chunkSize = RandomInts.randomIntBetween(random, 1, 500);\n    return new CompressingCodec(mode, chunkSize);\n  }\n\n","sourceOld":"  /**\n   * Create a random instance.\n   */\n  public static CompressingCodec randomInstance(Random random) {\n    final CompressionMode mode = RandomPicks.randomFrom(random, CompressionMode.values());\n    final int chunkSize = RandomInts.randomIntBetween(random, 1, 500);\n    final CompressingStoredFieldsIndex index = RandomPicks.randomFrom(random, CompressingStoredFieldsIndex.values());\n    return new CompressingCodec(mode, chunkSize, index);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"672d7b75cc3198c053fd48a3138a50f4ec7bf4c6","date":1353340695,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","sourceNew":"  public static CompressingCodec randomInstance(Random random) {\n    return randomInstance(random, RandomInts.randomIntBetween(random, 1, 500));\n  }\n\n","sourceOld":"  /**\n   * Create a random instance.\n   */\n  public static CompressingCodec randomInstance(Random random) {\n    final CompressionMode mode = RandomPicks.randomFrom(random, CompressionMode.values());\n    final int chunkSize = RandomInts.randomIntBetween(random, 1, 500);\n    return new CompressingCodec(mode, chunkSize);\n  }\n\n","bugFix":null,"bugIntro":["25308800fd7565ab31e6353077a56bba68fb0668"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","sourceNew":"  public static CompressingCodec randomInstance(Random random) {\n    return randomInstance(random, RandomInts.randomIntBetween(random, 1, 500));\n  }\n\n","sourceOld":"  /**\n   * Create a random instance.\n   */\n  public static CompressingCodec randomInstance(Random random) {\n    final CompressionMode mode = RandomPicks.randomFrom(random, CompressionMode.values());\n    final int chunkSize = RandomInts.randomIntBetween(random, 1, 500);\n    return new CompressingCodec(mode, chunkSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"25308800fd7565ab31e6353077a56bba68fb0668","date":1355337658,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","sourceNew":"  /**\n   * Creates a random {@link CompressingCodec} that is using an empty segment \n   * suffix\n   */\n  public static CompressingCodec randomInstance(Random random) {\n    return randomInstance(random, RandomInts.randomIntBetween(random, 1, 500), false);\n  }\n\n","sourceOld":"  public static CompressingCodec randomInstance(Random random) {\n    return randomInstance(random, RandomInts.randomIntBetween(random, 1, 500));\n  }\n\n","bugFix":["672d7b75cc3198c053fd48a3138a50f4ec7bf4c6"],"bugIntro":["699a2199028b8eadcc558eebcf669e5fc708524a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","sourceNew":"  /**\n   * Creates a random {@link CompressingCodec} that is using an empty segment \n   * suffix\n   */\n  public static CompressingCodec randomInstance(Random random) {\n    return randomInstance(random, RandomInts.randomIntBetween(random, 1, 500), false);\n  }\n\n","sourceOld":"  public static CompressingCodec randomInstance(Random random) {\n    return randomInstance(random, RandomInts.randomIntBetween(random, 1, 500));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"699a2199028b8eadcc558eebcf669e5fc708524a","date":1417544403,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","sourceNew":"  /**\n   * Creates a random {@link CompressingCodec} that is using an empty segment \n   * suffix\n   */\n  public static CompressingCodec randomInstance(Random random) {\n    return randomInstance(random, RandomInts.randomIntBetween(random, 1, 1 << 15), RandomInts.randomIntBetween(random, 64, 1024), false);\n  }\n\n","sourceOld":"  /**\n   * Creates a random {@link CompressingCodec} that is using an empty segment \n   * suffix\n   */\n  public static CompressingCodec randomInstance(Random random) {\n    return randomInstance(random, RandomInts.randomIntBetween(random, 1, 500), false);\n  }\n\n","bugFix":["25308800fd7565ab31e6353077a56bba68fb0668"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f09f483a0844bb9dc34fb10380cb053aa96219b","date":1418894001,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","sourceNew":"  /**\n   * Creates a random {@link CompressingCodec} that is using an empty segment \n   * suffix\n   */\n  public static CompressingCodec randomInstance(Random random) {\n    final int chunkSize = random.nextBoolean() ? RandomInts.randomIntBetween(random, 1, 10) : RandomInts.randomIntBetween(random, 1, 1 << 15);\n    final int chunkDocs = random.nextBoolean() ? RandomInts.randomIntBetween(random, 1, 10) : RandomInts.randomIntBetween(random, 64, 1024);\n    return randomInstance(random, chunkSize, chunkDocs, false);\n  }\n\n","sourceOld":"  /**\n   * Creates a random {@link CompressingCodec} that is using an empty segment \n   * suffix\n   */\n  public static CompressingCodec randomInstance(Random random) {\n    return randomInstance(random, RandomInts.randomIntBetween(random, 1, 1 << 15), RandomInts.randomIntBetween(random, 64, 1024), false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59d4661023aa9541b0a759e4d2e11dcf83b923a0","date":1420124226,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","sourceNew":"  /**\n   * Creates a random {@link CompressingCodec} that is using an empty segment \n   * suffix\n   */\n  public static CompressingCodec randomInstance(Random random) {\n    final int chunkSize = random.nextBoolean() ? RandomInts.randomIntBetween(random, 1, 10) : RandomInts.randomIntBetween(random, 1, 1 << 15);\n    final int chunkDocs = random.nextBoolean() ? RandomInts.randomIntBetween(random, 1, 10) : RandomInts.randomIntBetween(random, 64, 1024);\n    final int blockSize = random.nextBoolean() ? RandomInts.randomIntBetween(random, 1, 10) : RandomInts.randomIntBetween(random, 1, 1024);\n    return randomInstance(random, chunkSize, chunkDocs, false, blockSize);\n  }\n\n","sourceOld":"  /**\n   * Creates a random {@link CompressingCodec} that is using an empty segment \n   * suffix\n   */\n  public static CompressingCodec randomInstance(Random random) {\n    final int chunkSize = random.nextBoolean() ? RandomInts.randomIntBetween(random, 1, 10) : RandomInts.randomIntBetween(random, 1, 1 << 15);\n    final int chunkDocs = random.nextBoolean() ? RandomInts.randomIntBetween(random, 1, 10) : RandomInts.randomIntBetween(random, 64, 1024);\n    return randomInstance(random, chunkSize, chunkDocs, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6448f67be45147de82a85cd903fec34e8930da75","date":1477041277,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","sourceNew":"  /**\n   * Creates a random {@link CompressingCodec} that is using an empty segment \n   * suffix\n   */\n  public static CompressingCodec randomInstance(Random random) {\n    final int chunkSize = random.nextBoolean() ? RandomNumbers.randomIntBetween(random, 1, 10) : RandomNumbers.randomIntBetween(random, 1, 1 << 15);\n    final int chunkDocs = random.nextBoolean() ? RandomNumbers.randomIntBetween(random, 1, 10) : RandomNumbers.randomIntBetween(random, 64, 1024);\n    final int blockSize = random.nextBoolean() ? RandomNumbers.randomIntBetween(random, 1, 10) : RandomNumbers.randomIntBetween(random, 1, 1024);\n    return randomInstance(random, chunkSize, chunkDocs, false, blockSize);\n  }\n\n","sourceOld":"  /**\n   * Creates a random {@link CompressingCodec} that is using an empty segment \n   * suffix\n   */\n  public static CompressingCodec randomInstance(Random random) {\n    final int chunkSize = random.nextBoolean() ? RandomInts.randomIntBetween(random, 1, 10) : RandomInts.randomIntBetween(random, 1, 1 << 15);\n    final int chunkDocs = random.nextBoolean() ? RandomInts.randomIntBetween(random, 1, 10) : RandomInts.randomIntBetween(random, 64, 1024);\n    final int blockSize = random.nextBoolean() ? RandomInts.randomIntBetween(random, 1, 10) : RandomInts.randomIntBetween(random, 1, 1024);\n    return randomInstance(random, chunkSize, chunkDocs, false, blockSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","sourceNew":"  /**\n   * Creates a random {@link CompressingCodec} that is using an empty segment \n   * suffix\n   */\n  public static CompressingCodec randomInstance(Random random) {\n    final int chunkSize = random.nextBoolean() ? RandomNumbers.randomIntBetween(random, 1, 10) : RandomNumbers.randomIntBetween(random, 1, 1 << 15);\n    final int chunkDocs = random.nextBoolean() ? RandomNumbers.randomIntBetween(random, 1, 10) : RandomNumbers.randomIntBetween(random, 64, 1024);\n    final int blockSize = random.nextBoolean() ? RandomNumbers.randomIntBetween(random, 1, 10) : RandomNumbers.randomIntBetween(random, 1, 1024);\n    return randomInstance(random, chunkSize, chunkDocs, false, blockSize);\n  }\n\n","sourceOld":"  /**\n   * Creates a random {@link CompressingCodec} that is using an empty segment \n   * suffix\n   */\n  public static CompressingCodec randomInstance(Random random) {\n    final int chunkSize = random.nextBoolean() ? RandomInts.randomIntBetween(random, 1, 10) : RandomInts.randomIntBetween(random, 1, 1 << 15);\n    final int chunkDocs = random.nextBoolean() ? RandomInts.randomIntBetween(random, 1, 10) : RandomInts.randomIntBetween(random, 64, 1024);\n    final int blockSize = random.nextBoolean() ? RandomInts.randomIntBetween(random, 1, 10) : RandomInts.randomIntBetween(random, 1, 1024);\n    return randomInstance(random, chunkSize, chunkDocs, false, blockSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70a4487b07c49a1861c05720e04624826ecbe9fa","date":1580924108,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/CompressingCodec#randomInstance(Random).mjava","sourceNew":"  /**\n   * Creates a random {@link CompressingCodec} that is using an empty segment \n   * suffix\n   */\n  public static CompressingCodec randomInstance(Random random) {\n    final int chunkSize = random.nextBoolean() ? RandomNumbers.randomIntBetween(random, 1, 10) : RandomNumbers.randomIntBetween(random, 1, 1 << 15);\n    final int chunkDocs = random.nextBoolean() ? RandomNumbers.randomIntBetween(random, 1, 10) : RandomNumbers.randomIntBetween(random, 64, 1024);\n    final int blockSize = random.nextBoolean()\n        ? RandomNumbers.randomIntBetween(random, DirectMonotonicWriter.MIN_BLOCK_SHIFT, 10)\n        : RandomNumbers.randomIntBetween(random, DirectMonotonicWriter.MIN_BLOCK_SHIFT, DirectMonotonicWriter.MAX_BLOCK_SHIFT);\n    return randomInstance(random, chunkSize, chunkDocs, false, blockSize);\n  }\n\n","sourceOld":"  /**\n   * Creates a random {@link CompressingCodec} that is using an empty segment \n   * suffix\n   */\n  public static CompressingCodec randomInstance(Random random) {\n    final int chunkSize = random.nextBoolean() ? RandomNumbers.randomIntBetween(random, 1, 10) : RandomNumbers.randomIntBetween(random, 1, 1 << 15);\n    final int chunkDocs = random.nextBoolean() ? RandomNumbers.randomIntBetween(random, 1, 10) : RandomNumbers.randomIntBetween(random, 64, 1024);\n    final int blockSize = random.nextBoolean() ? RandomNumbers.randomIntBetween(random, 1, 10) : RandomNumbers.randomIntBetween(random, 1, 1024);\n    return randomInstance(random, chunkSize, chunkDocs, false, blockSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["407687e67faf6e1f02a211ca078d8e3eed631027","25308800fd7565ab31e6353077a56bba68fb0668"],"7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"407687e67faf6e1f02a211ca078d8e3eed631027":["0a96cceee825e15cd8e042b683d404086e2a58d1","672d7b75cc3198c053fd48a3138a50f4ec7bf4c6"],"699a2199028b8eadcc558eebcf669e5fc708524a":["25308800fd7565ab31e6353077a56bba68fb0668"],"70a4487b07c49a1861c05720e04624826ecbe9fa":["6448f67be45147de82a85cd903fec34e8930da75"],"25308800fd7565ab31e6353077a56bba68fb0668":["672d7b75cc3198c053fd48a3138a50f4ec7bf4c6"],"0a96cceee825e15cd8e042b683d404086e2a58d1":["7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa"],"6448f67be45147de82a85cd903fec34e8930da75":["59d4661023aa9541b0a759e4d2e11dcf83b923a0"],"59d4661023aa9541b0a759e4d2e11dcf83b923a0":["1f09f483a0844bb9dc34fb10380cb053aa96219b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["59d4661023aa9541b0a759e4d2e11dcf83b923a0","6448f67be45147de82a85cd903fec34e8930da75"],"1f09f483a0844bb9dc34fb10380cb053aa96219b":["699a2199028b8eadcc558eebcf669e5fc708524a"],"672d7b75cc3198c053fd48a3138a50f4ec7bf4c6":["0a96cceee825e15cd8e042b683d404086e2a58d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["70a4487b07c49a1861c05720e04624826ecbe9fa"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa":["0a96cceee825e15cd8e042b683d404086e2a58d1"],"699a2199028b8eadcc558eebcf669e5fc708524a":["1f09f483a0844bb9dc34fb10380cb053aa96219b"],"70a4487b07c49a1861c05720e04624826ecbe9fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"25308800fd7565ab31e6353077a56bba68fb0668":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","699a2199028b8eadcc558eebcf669e5fc708524a"],"0a96cceee825e15cd8e042b683d404086e2a58d1":["407687e67faf6e1f02a211ca078d8e3eed631027","672d7b75cc3198c053fd48a3138a50f4ec7bf4c6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa"],"6448f67be45147de82a85cd903fec34e8930da75":["70a4487b07c49a1861c05720e04624826ecbe9fa","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"59d4661023aa9541b0a759e4d2e11dcf83b923a0":["6448f67be45147de82a85cd903fec34e8930da75","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"1f09f483a0844bb9dc34fb10380cb053aa96219b":["59d4661023aa9541b0a759e4d2e11dcf83b923a0"],"672d7b75cc3198c053fd48a3138a50f4ec7bf4c6":["407687e67faf6e1f02a211ca078d8e3eed631027","25308800fd7565ab31e6353077a56bba68fb0668"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}