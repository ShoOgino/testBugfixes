{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testNestedAndClausesFoo().mjava","commits":[{"id":"ee76d213d935c68932ca13b55fa0a8a32bf6af1a","date":1343572717,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testNestedAndClausesFoo().mjava","pathOld":"/dev/null","sourceNew":"  public void testNestedAndClausesFoo() throws Exception {\n    String query = \"(field1:[1 TO *] AND field1:[* TO 2]) AND field2:(z)\";\n    BooleanQuery q = new BooleanQuery();\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(TermRangeQuery.newStringRange(\"field1\", \"1\", null, true, true), BooleanClause.Occur.MUST);\n    bq.add(TermRangeQuery.newStringRange(\"field1\", null, \"2\", true, true), BooleanClause.Occur.MUST);\n    q.add(bq, BooleanClause.Occur.MUST);\n    q.add(new TermQuery(new Term(\"field2\", \"z\")), BooleanClause.Occur.MUST);\n    assertEquals(q, getQuery(query, new MockAnalyzer(random())));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testNestedAndClausesFoo().mjava","pathOld":"/dev/null","sourceNew":"  public void testNestedAndClausesFoo() throws Exception {\n    String query = \"(field1:[1 TO *] AND field1:[* TO 2]) AND field2:(z)\";\n    BooleanQuery q = new BooleanQuery();\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(TermRangeQuery.newStringRange(\"field1\", \"1\", null, true, true), BooleanClause.Occur.MUST);\n    bq.add(TermRangeQuery.newStringRange(\"field1\", null, \"2\", true, true), BooleanClause.Occur.MUST);\n    q.add(bq, BooleanClause.Occur.MUST);\n    q.add(new TermQuery(new Term(\"field2\", \"z\")), BooleanClause.Occur.MUST);\n    assertEquals(q, getQuery(query, new MockAnalyzer(random())));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testNestedAndClausesFoo().mjava","pathOld":"/dev/null","sourceNew":"  public void testNestedAndClausesFoo() throws Exception {\n    String query = \"(field1:[1 TO *] AND field1:[* TO 2]) AND field2:(z)\";\n    BooleanQuery q = new BooleanQuery();\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(TermRangeQuery.newStringRange(\"field1\", \"1\", null, true, true), BooleanClause.Occur.MUST);\n    bq.add(TermRangeQuery.newStringRange(\"field1\", null, \"2\", true, true), BooleanClause.Occur.MUST);\n    q.add(bq, BooleanClause.Occur.MUST);\n    q.add(new TermQuery(new Term(\"field2\", \"z\")), BooleanClause.Occur.MUST);\n    assertEquals(q, getQuery(query, new MockAnalyzer(random())));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testNestedAndClausesFoo().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testNestedAndClausesFoo().mjava","sourceNew":"  public void testNestedAndClausesFoo() throws Exception {\n    String query = \"(field1:[1 TO *] AND field1:[* TO 2]) AND field2:(z)\";\n    BooleanQuery.Builder q = new BooleanQuery.Builder();\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(TermRangeQuery.newStringRange(\"field1\", \"1\", null, true, true), BooleanClause.Occur.MUST);\n    bq.add(TermRangeQuery.newStringRange(\"field1\", null, \"2\", true, true), BooleanClause.Occur.MUST);\n    q.add(bq.build(), BooleanClause.Occur.MUST);\n    q.add(new TermQuery(new Term(\"field2\", \"z\")), BooleanClause.Occur.MUST);\n    assertEquals(q.build(), getQuery(query, new MockAnalyzer(random())));\n  }\n\n","sourceOld":"  public void testNestedAndClausesFoo() throws Exception {\n    String query = \"(field1:[1 TO *] AND field1:[* TO 2]) AND field2:(z)\";\n    BooleanQuery q = new BooleanQuery();\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(TermRangeQuery.newStringRange(\"field1\", \"1\", null, true, true), BooleanClause.Occur.MUST);\n    bq.add(TermRangeQuery.newStringRange(\"field1\", null, \"2\", true, true), BooleanClause.Occur.MUST);\n    q.add(bq, BooleanClause.Occur.MUST);\n    q.add(new TermQuery(new Term(\"field2\", \"z\")), BooleanClause.Occur.MUST);\n    assertEquals(q, getQuery(query, new MockAnalyzer(random())));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee76d213d935c68932ca13b55fa0a8a32bf6af1a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"]},"commit2Childs":{"ee76d213d935c68932ca13b55fa0a8a32bf6af1a":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}