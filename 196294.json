{"path":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#checkPendingDeletions().mjava","commits":[{"id":"6bfe104fc023fadc9e709f8d17403d2cc61133fe","date":1454446396,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#checkPendingDeletions().mjava","pathOld":"/dev/null","sourceNew":"  /** Tries to delete any pending deleted files, and returns true if\n   *  there are still files that could not be deleted. */\n  public boolean checkPendingDeletions() throws IOException {\n    deletePendingFiles();\n    return pendingDeletes.isEmpty() == false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#checkPendingDeletions().mjava","pathOld":"/dev/null","sourceNew":"  /** Tries to delete any pending deleted files, and returns true if\n   *  there are still files that could not be deleted. */\n  public boolean checkPendingDeletions() throws IOException {\n    deletePendingFiles();\n    return pendingDeletes.isEmpty() == false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#checkPendingDeletions().mjava","pathOld":"/dev/null","sourceNew":"  /** Tries to delete any pending deleted files, and returns true if\n   *  there are still files that could not be deleted. */\n  public boolean checkPendingDeletions() throws IOException {\n    deletePendingFiles();\n    return pendingDeletes.isEmpty() == false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":0,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#checkPendingDeletions().mjava","pathOld":"/dev/null","sourceNew":"  /** Tries to delete any pending deleted files, and returns true if\n   *  there are still files that could not be deleted. */\n  public boolean checkPendingDeletions() throws IOException {\n    deletePendingFiles();\n    return pendingDeletes.isEmpty() == false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3306bdef6cff9218671c5972462d4ff115785dd0","date":1524667585,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#checkPendingDeletions().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#checkPendingDeletions().mjava","sourceNew":"  @Override\n  public boolean checkPendingDeletions() throws IOException {\n    deletePendingFiles();\n    return pendingDeletes.isEmpty() == false;\n  }\n\n","sourceOld":"  /** Tries to delete any pending deleted files, and returns true if\n   *  there are still files that could not be deleted. */\n  public boolean checkPendingDeletions() throws IOException {\n    deletePendingFiles();\n    return pendingDeletes.isEmpty() == false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5e84aa7f651de6493590da495bcbe46d32cf038","date":1526462263,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#checkPendingDeletions().mjava","sourceNew":null,"sourceOld":"  @Override\n  public boolean checkPendingDeletions() throws IOException {\n    deletePendingFiles();\n    return pendingDeletes.isEmpty() == false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3306bdef6cff9218671c5972462d4ff115785dd0":["5a207d19eac354d649c3f0e2cce070017c78125e"],"5a207d19eac354d649c3f0e2cce070017c78125e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b470f36a9372c97283360b1304eacbde22df6c0d"],"b470f36a9372c97283360b1304eacbde22df6c0d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b470f36a9372c97283360b1304eacbde22df6c0d"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c5e84aa7f651de6493590da495bcbe46d32cf038"],"c5e84aa7f651de6493590da495bcbe46d32cf038":["3306bdef6cff9218671c5972462d4ff115785dd0"]},"commit2Childs":{"3306bdef6cff9218671c5972462d4ff115785dd0":["c5e84aa7f651de6493590da495bcbe46d32cf038"],"5a207d19eac354d649c3f0e2cce070017c78125e":["3306bdef6cff9218671c5972462d4ff115785dd0"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a207d19eac354d649c3f0e2cce070017c78125e","b470f36a9372c97283360b1304eacbde22df6c0d","1e6acbaae7af722f17204ceccf0f7db5753eccf3","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["b470f36a9372c97283360b1304eacbde22df6c0d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"c5e84aa7f651de6493590da495bcbe46d32cf038":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}