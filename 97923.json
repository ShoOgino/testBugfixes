{"path":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testCommitWithin().mjava","commits":[{"id":"251f2ea0d985ea4779dd1d940baf62d4a628faec","date":1315326440,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testCommitWithin().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCommitWithin() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    // Load plain text specifying filename\n    loadLocal(\"extraction/version_control.txt\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"one\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.content\", \"extractedContent\",\n            ExtractingParams.RESOURCE_NAME, \"extraction/version_control.txt\",\n            \"commitWithin\", \"200\"\n    );\n    assertQ(req(\"id:one\"), \"//*[@numFound='0']\");\n    // TODO: Find better way of testing commitWithin without sleeping?\n    Thread.sleep(1000);\n    assertQ(req(\"id:one\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59d746b56b1b70649ffea3dc5f2c461ee18c9f16","date":1316100575,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testCommitWithin().mjava","pathOld":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testCommitWithin().mjava","sourceNew":"  @Test\n  public void testCommitWithin() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    \n    SolrQueryRequest req = req(\"literal.id\", \"one\",\n                               ExtractingParams.RESOURCE_NAME, \"extraction/version_control.txt\",\n                               \"commitWithin\", \"200\"\n                               );\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n\n    ExtractingDocumentLoader loader = (ExtractingDocumentLoader) handler.newLoader(req, p);\n    loader.load(req, rsp, new ContentStreamBase.FileStream(getFile(\"extraction/version_control.txt\")));\n\n    AddUpdateCommand add = p.addCommands.get(0);\n    assertEquals(200, add.commitWithin);\n\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCommitWithin() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n\n    // Load plain text specifying filename\n    loadLocal(\"extraction/version_control.txt\", \"fmap.created\", \"extractedDate\", \"fmap.producer\", \"extractedProducer\",\n            \"fmap.creator\", \"extractedCreator\", \"fmap.Keywords\", \"extractedKeywords\",\n            \"fmap.Author\", \"extractedAuthor\",\n            \"literal.id\", \"one\",\n            \"fmap.language\", \"extractedLanguage\",\n            \"fmap.content\", \"extractedContent\",\n            ExtractingParams.RESOURCE_NAME, \"extraction/version_control.txt\",\n            \"commitWithin\", \"200\"\n    );\n    assertQ(req(\"id:one\"), \"//*[@numFound='0']\");\n    // TODO: Find better way of testing commitWithin without sleeping?\n    Thread.sleep(1000);\n    assertQ(req(\"id:one\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"042e4d934397657ba04c82b46cc5665076bc5c58","date":1336511170,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testCommitWithin().mjava","pathOld":"solr/contrib/extraction/src/test/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#testCommitWithin().mjava","sourceNew":"  @Test\n  public void testCommitWithin() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    \n    SolrQueryRequest req = req(\"literal.id\", \"one\",\n                               ExtractingParams.RESOURCE_NAME, \"extraction/version_control.txt\",\n                               \"commitWithin\", \"200\"\n                               );\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n\n    ExtractingDocumentLoader loader = (ExtractingDocumentLoader) handler.newLoader(req, p);\n    loader.load(req, rsp, new ContentStreamBase.FileStream(getFile(\"extraction/version_control.txt\")),p);\n\n    AddUpdateCommand add = p.addCommands.get(0);\n    assertEquals(200, add.commitWithin);\n\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCommitWithin() throws Exception {\n    ExtractingRequestHandler handler = (ExtractingRequestHandler) h.getCore().getRequestHandler(\"/update/extract\");\n    assertTrue(\"handler is null and it shouldn't be\", handler != null);\n    \n    SolrQueryRequest req = req(\"literal.id\", \"one\",\n                               ExtractingParams.RESOURCE_NAME, \"extraction/version_control.txt\",\n                               \"commitWithin\", \"200\"\n                               );\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n\n    ExtractingDocumentLoader loader = (ExtractingDocumentLoader) handler.newLoader(req, p);\n    loader.load(req, rsp, new ContentStreamBase.FileStream(getFile(\"extraction/version_control.txt\")));\n\n    AddUpdateCommand add = p.addCommands.get(0);\n    assertEquals(200, add.commitWithin);\n\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"251f2ea0d985ea4779dd1d940baf62d4a628faec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"042e4d934397657ba04c82b46cc5665076bc5c58":["59d746b56b1b70649ffea3dc5f2c461ee18c9f16"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["042e4d934397657ba04c82b46cc5665076bc5c58"],"59d746b56b1b70649ffea3dc5f2c461ee18c9f16":["251f2ea0d985ea4779dd1d940baf62d4a628faec"]},"commit2Childs":{"251f2ea0d985ea4779dd1d940baf62d4a628faec":["59d746b56b1b70649ffea3dc5f2c461ee18c9f16"],"042e4d934397657ba04c82b46cc5665076bc5c58":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["251f2ea0d985ea4779dd1d940baf62d4a628faec"],"59d746b56b1b70649ffea3dc5f2c461ee18c9f16":["042e4d934397657ba04c82b46cc5665076bc5c58"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}