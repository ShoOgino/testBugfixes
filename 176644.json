{"path":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","sourceNew":"  public void initReader(ByteSliceReader reader, int termID, int stream) {\n    assert stream < streamCount;\n    int intStart = postingsArray.intStarts[termID];\n    final int[] ints = intPool.buffers[intStart >> DocumentsWriterPerThread.INT_BLOCK_SHIFT];\n    final int upto = intStart & DocumentsWriterPerThread.INT_BLOCK_MASK;\n    reader.init(bytePool,\n                postingsArray.byteStarts[termID]+stream*ByteBlockPool.FIRST_LEVEL_SIZE,\n                ints[upto+stream]);\n  }\n\n","sourceOld":"  public void initReader(ByteSliceReader reader, int termID, int stream) {\n    assert stream < streamCount;\n    int intStart = postingsArray.intStarts[termID];\n    final int[] ints = intPool.buffers[intStart >> DocumentsWriterPerThread.INT_BLOCK_SHIFT];\n    final int upto = intStart & DocumentsWriterPerThread.INT_BLOCK_MASK;\n    reader.init(bytePool,\n                postingsArray.byteStarts[termID]+stream*ByteBlockPool.FIRST_LEVEL_SIZE,\n                ints[upto+stream]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30fd30bfbfa6b9e036bcd99c8339712e965d4a63","date":1351859294,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","sourceNew":"  public void initReader(ByteSliceReader reader, int termID, int stream) {\n    assert stream < streamCount;\n    int intStart = postingsArray.intStarts[termID];\n    final int[] ints = intPool.buffers[intStart >> IntBlockPool.INT_BLOCK_SHIFT];\n    final int upto = intStart & IntBlockPool.INT_BLOCK_MASK;\n    reader.init(bytePool,\n                postingsArray.byteStarts[termID]+stream*ByteBlockPool.FIRST_LEVEL_SIZE,\n                ints[upto+stream]);\n  }\n\n","sourceOld":"  public void initReader(ByteSliceReader reader, int termID, int stream) {\n    assert stream < streamCount;\n    int intStart = postingsArray.intStarts[termID];\n    final int[] ints = intPool.buffers[intStart >> DocumentsWriterPerThread.INT_BLOCK_SHIFT];\n    final int upto = intStart & DocumentsWriterPerThread.INT_BLOCK_MASK;\n    reader.init(bytePool,\n                postingsArray.byteStarts[termID]+stream*ByteBlockPool.FIRST_LEVEL_SIZE,\n                ints[upto+stream]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3cc3fa1ecad75b99ec55169e44628808f9866ad","date":1592311545,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#initReader(ByteSliceReader,int,int).mjava","sourceNew":"  final void initReader(ByteSliceReader reader, int termID, int stream) {\n    assert stream < streamCount;\n    int streamStartOffset = postingsArray.addressOffset[termID];\n    final int[] streamAddressBuffer = intPool.buffers[streamStartOffset >> IntBlockPool.INT_BLOCK_SHIFT];\n    final int offsetInAddressBuffer = streamStartOffset & IntBlockPool.INT_BLOCK_MASK;\n    reader.init(bytePool,\n                postingsArray.byteStarts[termID]+stream*ByteBlockPool.FIRST_LEVEL_SIZE,\n                streamAddressBuffer[offsetInAddressBuffer+stream]);\n  }\n\n","sourceOld":"  public void initReader(ByteSliceReader reader, int termID, int stream) {\n    assert stream < streamCount;\n    int intStart = postingsArray.intStarts[termID];\n    final int[] ints = intPool.buffers[intStart >> IntBlockPool.INT_BLOCK_SHIFT];\n    final int upto = intStart & IntBlockPool.INT_BLOCK_MASK;\n    reader.init(bytePool,\n                postingsArray.byteStarts[termID]+stream*ByteBlockPool.FIRST_LEVEL_SIZE,\n                ints[upto+stream]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"30fd30bfbfa6b9e036bcd99c8339712e965d4a63":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d3cc3fa1ecad75b99ec55169e44628808f9866ad":["30fd30bfbfa6b9e036bcd99c8339712e965d4a63"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3cc3fa1ecad75b99ec55169e44628808f9866ad"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["30fd30bfbfa6b9e036bcd99c8339712e965d4a63"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"30fd30bfbfa6b9e036bcd99c8339712e965d4a63":["d3cc3fa1ecad75b99ec55169e44628808f9866ad"],"d3cc3fa1ecad75b99ec55169e44628808f9866ad":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}