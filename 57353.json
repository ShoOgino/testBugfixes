{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/id/IndonesianStemmer#stem(char[],int,boolean).mjava","commits":[{"id":"6e8e258b654b0b6794c9f4a980fdd9a1de6f10e0","date":1273267272,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/id/IndonesianStemmer#stem(char[],int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Stem a term (returning its new length).\n   * <p>\n   * Use <code>stemDerivational</code> to control whether full stemming\n   * or only light inflectional stemming is done.\n   */\n  public int stem(char text[], int length, boolean stemDerivational) {\n    flags = 0;\n    numSyllables = 0;\n    for (int i = 0; i < length; i++)\n      if (isVowel(text[i]))\n          numSyllables++;\n    \n    if (numSyllables > 2) length = removeParticle(text, length);\n    if (numSyllables > 2) length = removePossessivePronoun(text, length);\n    \n    if (stemDerivational)\n      length = stemDerivational(text, length);\n    return length;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/id/IndonesianStemmer#stem(char[],int,boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/id/IndonesianStemmer#stem(char[],int,boolean).mjava","sourceNew":"  /**\n   * Stem a term (returning its new length).\n   * <p>\n   * Use <code>stemDerivational</code> to control whether full stemming\n   * or only light inflectional stemming is done.\n   */\n  public int stem(char text[], int length, boolean stemDerivational) {\n    flags = 0;\n    numSyllables = 0;\n    for (int i = 0; i < length; i++)\n      if (isVowel(text[i]))\n          numSyllables++;\n    \n    if (numSyllables > 2) length = removeParticle(text, length);\n    if (numSyllables > 2) length = removePossessivePronoun(text, length);\n    \n    if (stemDerivational)\n      length = stemDerivational(text, length);\n    return length;\n  }\n\n","sourceOld":"  /**\n   * Stem a term (returning its new length).\n   * <p>\n   * Use <code>stemDerivational</code> to control whether full stemming\n   * or only light inflectional stemming is done.\n   */\n  public int stem(char text[], int length, boolean stemDerivational) {\n    flags = 0;\n    numSyllables = 0;\n    for (int i = 0; i < length; i++)\n      if (isVowel(text[i]))\n          numSyllables++;\n    \n    if (numSyllables > 2) length = removeParticle(text, length);\n    if (numSyllables > 2) length = removePossessivePronoun(text, length);\n    \n    if (stemDerivational)\n      length = stemDerivational(text, length);\n    return length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["6e8e258b654b0b6794c9f4a980fdd9a1de6f10e0"],"6e8e258b654b0b6794c9f4a980fdd9a1de6f10e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6e8e258b654b0b6794c9f4a980fdd9a1de6f10e0":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e8e258b654b0b6794c9f4a980fdd9a1de6f10e0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}