{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestZKPropertiesWriter#localQuery(String,SolrQueryRequest).mjava","commits":[{"id":"60ea5ab7e7b4b94aba6a057f59cee528a1028b3b","date":1592841746,"type":0,"author":"Ilan Ginzburg","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestZKPropertiesWriter#localQuery(String,SolrQueryRequest).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Code copied from {@link org.apache.solr.util.TestHarness#query(String, SolrQueryRequest)} because it is not\n   * <code>static</code> there (it could have been) and we do not have an instance of {@link org.apache.solr.util.TestHarness}.\n   */\n  private static String localQuery(String handler, SolrQueryRequest req) throws Exception {\n    try {\n      SolrCore core = req.getCore();\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(req, rsp));\n      core.execute(core.getRequestHandler(handler),req,rsp); // TODO the core doesn't have the request handler\n      if (rsp.getException() != null) {\n        throw rsp.getException();\n      }\n      QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n      if (responseWriter instanceof BinaryQueryResponseWriter) {\n        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream(32000);\n        BinaryQueryResponseWriter writer = (BinaryQueryResponseWriter) responseWriter;\n        writer.write(byteArrayOutputStream, req, rsp);\n        return new String(byteArrayOutputStream.toByteArray(), StandardCharsets.UTF_8);\n      } else {\n        StringWriter sw = new StringWriter(32000);\n        responseWriter.write(sw,req,rsp);\n        return sw.toString();\n      }\n\n    } finally {\n      req.close();\n      SolrRequestInfo.clearRequestInfo();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestZKPropertiesWriter#localQuery(String,SolrQueryRequest).mjava","sourceNew":null,"sourceOld":"  /**\n   * Code copied from {@link org.apache.solr.util.TestHarness#query(String, SolrQueryRequest)} because it is not\n   * <code>static</code> there (it could have been) and we do not have an instance of {@link org.apache.solr.util.TestHarness}.\n   */\n  private static String localQuery(String handler, SolrQueryRequest req) throws Exception {\n    try {\n      SolrCore core = req.getCore();\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(req, rsp));\n      core.execute(core.getRequestHandler(handler),req,rsp); // TODO the core doesn't have the request handler\n      if (rsp.getException() != null) {\n        throw rsp.getException();\n      }\n      QueryResponseWriter responseWriter = core.getQueryResponseWriter(req);\n      if (responseWriter instanceof BinaryQueryResponseWriter) {\n        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream(32000);\n        BinaryQueryResponseWriter writer = (BinaryQueryResponseWriter) responseWriter;\n        writer.write(byteArrayOutputStream, req, rsp);\n        return new String(byteArrayOutputStream.toByteArray(), StandardCharsets.UTF_8);\n      } else {\n        StringWriter sw = new StringWriter(32000);\n        responseWriter.write(sw,req,rsp);\n        return sw.toString();\n      }\n\n    } finally {\n      req.close();\n      SolrRequestInfo.clearRequestInfo();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["60ea5ab7e7b4b94aba6a057f59cee528a1028b3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"60ea5ab7e7b4b94aba6a057f59cee528a1028b3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["60ea5ab7e7b4b94aba6a057f59cee528a1028b3b"],"60ea5ab7e7b4b94aba6a057f59cee528a1028b3b":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}