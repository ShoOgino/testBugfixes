{"path":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","commits":[{"id":"3ec71d4701edbd96cfea97384101d13611393552","date":1444686705,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testStringLiteralFields().mjava","sourceNew":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n      Map params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select id, Field_i, Str_s from Collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, params);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple = null;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select Str_s, sum(Field_i) from Collection1 where 'id'='(1 8)' group by Str_s having (sum(Field_i) = 7 OR 'sum(Field_i)' = 60) order by 'sum(Field_i)' desc\");\n\n      solrStream = new SolrStream(jetty.url, params);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n      params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select Str_s, sum(Field_i) from Collection1 where 'id'='(1 8)' group by 'Str_s' having (sum(Field_i) = 7 OR 'sum(Field_i)' = 60) order by 'sum(Field_i)' desc\");\n\n      solrStream = new SolrStream(jetty.url, params);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  private void testStringLiteralFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n      Map params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"sql\", \"select id, 'Field_i', str_s from Collection1 where 'Text_t'='XXXX' order by 'Field_i' desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, params);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple = null;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"str_s\").equals(\"a\"));\n\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d984627825732e682759c22df7a3b171a80f3812","date":1461857653,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","sourceNew":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n      Map params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, params);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple = null;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select Str_s, sum(Field_i) as `sum(Field_i)` from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, params);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n      params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select Str_s, sum(Field_i) as `sum(Field_i)` from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, params);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n      Map params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select id, Field_i, Str_s from Collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, params);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple = null;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select Str_s, sum(Field_i) from Collection1 where 'id'='(1 8)' group by Str_s having (sum(Field_i) = 7 OR 'sum(Field_i)' = 60) order by 'sum(Field_i)' desc\");\n\n      solrStream = new SolrStream(jetty.url, params);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n      params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select Str_s, sum(Field_i) from Collection1 where 'id'='(1 8)' group by 'Str_s' having (sum(Field_i) = 7 OR 'sum(Field_i)' = 60) order by 'sum(Field_i)' desc\");\n\n      solrStream = new SolrStream(jetty.url, params);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b67f9cce921a1f94ec0a28c4eb85bcd887c8aa4","date":1461940050,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","sourceNew":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n      Map params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, params);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple = null;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select Str_s, sum(Field_i) as `sum(Field_i)` from collection1 where id='(1 8)' group by Str_s \" +\n          \"having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, params);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n      params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select Str_s, sum(Field_i) as `sum(Field_i)` from collection1 where id='(1 8)' group by Str_s \" +\n          \"having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, params);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n      Map params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, params);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple = null;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select Str_s, sum(Field_i) as `sum(Field_i)` from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, params);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n      params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select Str_s, sum(Field_i) as `sum(Field_i)` from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, params);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"826d15444ddf61716dc768c229cd54b2c2ccce1c","date":1462822652,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","sourceNew":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n      SolrParams sParams = mapParams(CommonParams.QT, \"/sql\",\n          \"stmt\", \"select id, Field_i, Str_s from Collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple = null;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      sParams = mapParams(CommonParams.QT, \"/sql\", \n          \"stmt\", \"select Str_s, sum(Field_i) from Collection1 where 'id'='(1 8)' group by Str_s having (sum(Field_i) = 7 OR 'sum(Field_i)' = 60) order by 'sum(Field_i)' desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n      sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\", \"select Str_s, sum(Field_i) from Collection1 where 'id'='(1 8)' group by 'Str_s' having (sum(Field_i) = 7 OR 'sum(Field_i)' = 60) order by 'sum(Field_i)' desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n      Map params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select id, Field_i, Str_s from Collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, params);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple = null;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select Str_s, sum(Field_i) from Collection1 where 'id'='(1 8)' group by Str_s having (sum(Field_i) = 7 OR 'sum(Field_i)' = 60) order by 'sum(Field_i)' desc\");\n\n      solrStream = new SolrStream(jetty.url, params);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n      params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select Str_s, sum(Field_i) from Collection1 where 'id'='(1 8)' group by 'Str_s' having (sum(Field_i) = 7 OR 'sum(Field_i)' = 60) order by 'sum(Field_i)' desc\");\n\n      solrStream = new SolrStream(jetty.url, params);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e66a459d38c1c4a2f97128433dab546f683a9fed","date":1462873476,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","sourceNew":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n      SolrParams sParams = mapParams(CommonParams.QT, \"/sql\",\n          \"stmt\", \"select id, Field_i, Str_s from Collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple = null;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      sParams = mapParams(CommonParams.QT, \"/sql\", \n          \"stmt\", \"select Str_s, sum(Field_i) from Collection1 where 'id'='(1 8)' group by Str_s having (sum(Field_i) = 7 OR 'sum(Field_i)' = 60) order by 'sum(Field_i)' desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n      sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\", \"select Str_s, sum(Field_i) from Collection1 where 'id'='(1 8)' group by 'Str_s' having (sum(Field_i) = 7 OR 'sum(Field_i)' = 60) order by 'sum(Field_i)' desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n      Map params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select id, Field_i, Str_s from Collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, params);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple = null;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select Str_s, sum(Field_i) from Collection1 where 'id'='(1 8)' group by Str_s having (sum(Field_i) = 7 OR 'sum(Field_i)' = 60) order by 'sum(Field_i)' desc\");\n\n      solrStream = new SolrStream(jetty.url, params);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n      params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select Str_s, sum(Field_i) from Collection1 where 'id'='(1 8)' group by 'Str_s' having (sum(Field_i) = 7 OR 'sum(Field_i)' = 60) order by 'sum(Field_i)' desc\");\n\n      solrStream = new SolrStream(jetty.url, params);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","sourceNew":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n      SolrParams sParams = mapParams(CommonParams.QT, \"/sql\",\n          \"stmt\", \"select id, Field_i, Str_s from Collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple = null;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      sParams = mapParams(CommonParams.QT, \"/sql\", \n          \"stmt\", \"select Str_s, sum(Field_i) from Collection1 where 'id'='(1 8)' group by Str_s having (sum(Field_i) = 7 OR 'sum(Field_i)' = 60) order by 'sum(Field_i)' desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n      sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\", \"select Str_s, sum(Field_i) from Collection1 where 'id'='(1 8)' group by 'Str_s' having (sum(Field_i) = 7 OR 'sum(Field_i)' = 60) order by 'sum(Field_i)' desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n      Map params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select id, Field_i, Str_s from Collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, params);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple = null;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select Str_s, sum(Field_i) from Collection1 where 'id'='(1 8)' group by Str_s having (sum(Field_i) = 7 OR 'sum(Field_i)' = 60) order by 'sum(Field_i)' desc\");\n\n      solrStream = new SolrStream(jetty.url, params);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n      params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select Str_s, sum(Field_i) from Collection1 where 'id'='(1 8)' group by 'Str_s' having (sum(Field_i) = 7 OR 'sum(Field_i)' = 60) order by 'sum(Field_i)' desc\");\n\n      solrStream = new SolrStream(jetty.url, params);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","sourceNew":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n\n      SolrParams sParams = mapParams(CommonParams.QT, \"/sql\",\n          \"stmt\", \"select id, Field_i, Str_s from Collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple = null;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      sParams = mapParams(CommonParams.QT, \"/sql\", \n          \"stmt\", \"select Str_s, sum(Field_i) as `sum(Field_i)` from Collection1 where 'id'='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n      sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\", \"select Str_s, sum(Field_i) as `sum(Field_i)` from Collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n      Map params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, params);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple = null;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select Str_s, sum(Field_i) as `sum(Field_i)` from collection1 where id='(1 8)' group by Str_s \" +\n          \"having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, params);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n      params = new HashMap();\n      params.put(CommonParams.QT, \"/sql\");\n      params.put(\"stmt\", \"select Str_s, sum(Field_i) as `sum(Field_i)` from collection1 where id='(1 8)' group by Str_s \" +\n          \"having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, params);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"612da0a0a2d5f4409da55729b9833e799f905ac5","date":1479142562,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","sourceNew":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n\n      SolrParams sParams = mapParams(CommonParams.QT, \"/sql\",\n          \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      // TODO get sum(Field_i) as named one\n      sParams = mapParams(CommonParams.QT, \"/sql\",\n          \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n\n      sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n\n      SolrParams sParams = mapParams(CommonParams.QT, \"/sql\",\n          \"stmt\", \"select id, Field_i, Str_s from Collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple = null;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      sParams = mapParams(CommonParams.QT, \"/sql\", \n          \"stmt\", \"select Str_s, sum(Field_i) as `sum(Field_i)` from Collection1 where 'id'='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n      sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\", \"select Str_s, sum(Field_i) as `sum(Field_i)` from Collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f20deebda1cf327549c84cb60464135abd31c71","date":1487004368,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","sourceNew":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n\n      SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n          \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      // TODO get sum(Field_i) as named one\n      sParams = mapParams(CommonParams.QT, \"/sql\",\n          \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n\n      sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n\n      SolrParams sParams = mapParams(CommonParams.QT, \"/sql\",\n          \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      // TODO get sum(Field_i) as named one\n      sParams = mapParams(CommonParams.QT, \"/sql\",\n          \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n\n      sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"116fdd6b9e04e18a6547a5650bc0afd3fda020aa","date":1487184909,"type":3,"author":"Joel Bernstein","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","sourceNew":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n\n      SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n          \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      // TODO get sum(Field_i) as named one\n      sParams = mapParams(CommonParams.QT, \"/sql\",\n          \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n\n      sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n      SolrParams sParams = mapParams(CommonParams.QT, \"/sql\",\n          \"stmt\", \"select id, Field_i, Str_s from Collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple = null;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      sParams = mapParams(CommonParams.QT, \"/sql\", \n          \"stmt\", \"select Str_s, sum(Field_i) from Collection1 where 'id'='(1 8)' group by Str_s having (sum(Field_i) = 7 OR 'sum(Field_i)' = 60) order by 'sum(Field_i)' desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n      sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\", \"select Str_s, sum(Field_i) from Collection1 where 'id'='(1 8)' group by 'Str_s' having (sum(Field_i) = 7 OR 'sum(Field_i)' = 60) order by 'sum(Field_i)' desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"sum(Field_i)\") == 7);\n\n\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","sourceNew":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n\n      SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n          \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple;\n      \n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      // TODO get sum(Field_i) as named one\n      sParams = mapParams(CommonParams.QT, \"/sql\",\n          \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n\n      sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n\n      SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n          \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      // TODO get sum(Field_i) as named one\n      sParams = mapParams(CommonParams.QT, \"/sql\",\n          \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n\n      sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","sourceNew":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n\n      SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n          \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple;\n      \n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      // TODO get sum(Field_i) as named one\n      sParams = mapParams(CommonParams.QT, \"/sql\",\n          \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n\n      sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n\n      SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n          \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      // TODO get sum(Field_i) as named one\n      sParams = mapParams(CommonParams.QT, \"/sql\",\n          \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n\n      sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","sourceNew":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n\n      SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n          \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple;\n      \n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      // TODO get sum(Field_i) as named one\n      sParams = mapParams(CommonParams.QT, \"/sql\",\n          \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n\n      sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n\n      SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n          \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple;\n\n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      // TODO get sum(Field_i) as named one\n      sParams = mapParams(CommonParams.QT, \"/sql\",\n          \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n\n      sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c58a62203315881cce5089ef67ffee6b8a988a75","date":1544601986,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","sourceNew":"  private void testMixedCaseFields() throws Exception {\n\n    CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n    del(\"*:*\");\n\n    commit();\n\n    indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n    indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n    indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n    indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n    indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n    indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n    indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n    indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n    commit();\n\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n    SolrStream solrStream = new SolrStream(jetty.url, sParams);\n    List<Tuple> tuples = getTuples(solrStream);\n\n    assert (tuples.size() == 8);\n\n    Tuple tuple;\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"id\") == 8);\n    assert (tuple.getLong(\"Field_i\") == 60);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"id\") == 7);\n    assert (tuple.getLong(\"Field_i\") == 50);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(2);\n    assert (tuple.getLong(\"id\") == 6);\n    assert (tuple.getLong(\"Field_i\") == 40);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(3);\n    assert (tuple.getLong(\"id\") == 5);\n    assert (tuple.getLong(\"Field_i\") == 30);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(4);\n    assert (tuple.getLong(\"id\") == 3);\n    assert (tuple.getLong(\"Field_i\") == 20);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    tuple = tuples.get(5);\n    assert (tuple.getLong(\"id\") == 4);\n    assert (tuple.getLong(\"Field_i\") == 11);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(6);\n    assert (tuple.getLong(\"id\") == 2);\n    assert (tuple.getLong(\"Field_i\") == 8);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(7);\n    assert (tuple.getLong(\"id\") == 1);\n    assert (tuple.getLong(\"Field_i\") == 7);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    // TODO get sum(Field_i) as named one\n    sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    solrStream = new SolrStream(jetty.url, sParams);\n    tuples = getTuples(solrStream);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n    sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    solrStream = new SolrStream(jetty.url, sParams);\n    tuples = getTuples(solrStream);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n  }\n\n","sourceOld":"  private void testMixedCaseFields() throws Exception {\n    try {\n\n      CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n      del(\"*:*\");\n\n      commit();\n\n      indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n      indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n      indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n      indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n      indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n      indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n      indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n      indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n      commit();\n\n      SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n          \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n      SolrStream solrStream = new SolrStream(jetty.url, sParams);\n      List<Tuple> tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 8);\n\n      Tuple tuple;\n      \n      tuple = tuples.get(0);\n      assert(tuple.getLong(\"id\") == 8);\n      assert(tuple.getLong(\"Field_i\") == 60);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(1);\n      assert(tuple.getLong(\"id\") == 7);\n      assert(tuple.getLong(\"Field_i\") == 50);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(2);\n      assert(tuple.getLong(\"id\") == 6);\n      assert(tuple.getLong(\"Field_i\") == 40);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(3);\n      assert(tuple.getLong(\"id\") == 5);\n      assert(tuple.getLong(\"Field_i\") == 30);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n\n      tuple = tuples.get(4);\n      assert(tuple.getLong(\"id\") == 3);\n      assert(tuple.getLong(\"Field_i\") == 20);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      tuple = tuples.get(5);\n      assert(tuple.getLong(\"id\") == 4);\n      assert(tuple.getLong(\"Field_i\") == 11);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(6);\n      assert(tuple.getLong(\"id\") == 2);\n      assert(tuple.getLong(\"Field_i\") == 8);\n      assert(tuple.get(\"Str_s\").equals(\"b\"));\n\n      tuple = tuples.get(7);\n      assert(tuple.getLong(\"id\") == 1);\n      assert(tuple.getLong(\"Field_i\") == 7);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n\n      // TODO get sum(Field_i) as named one\n      sParams = mapParams(CommonParams.QT, \"/sql\",\n          \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n\n      sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n      solrStream = new SolrStream(jetty.url, sParams);\n      tuples = getTuples(solrStream);\n\n      assert(tuples.size() == 2);\n\n      tuple = tuples.get(0);\n      assert(tuple.get(\"Str_s\").equals(\"c\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 60);\n\n      tuple = tuples.get(1);\n      assert(tuple.get(\"Str_s\").equals(\"a\"));\n      assert(tuple.getDouble(\"EXPR$1\") == 7);\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"600937be95b5a041815220371fa7882e73031d56","date":1551734162,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","sourceNew":"  private void testMixedCaseFields() throws Exception {\n\n    del(\"*:*\");\n\n    commit();\n\n    indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n    indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n    indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n    indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n    indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n    indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n    indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n    indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n    commit();\n\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n    List<Tuple> tuples = getTuples(sParams);\n\n    assert (tuples.size() == 8);\n\n    Tuple tuple;\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"id\") == 8);\n    assert (tuple.getLong(\"Field_i\") == 60);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"id\") == 7);\n    assert (tuple.getLong(\"Field_i\") == 50);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(2);\n    assert (tuple.getLong(\"id\") == 6);\n    assert (tuple.getLong(\"Field_i\") == 40);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(3);\n    assert (tuple.getLong(\"id\") == 5);\n    assert (tuple.getLong(\"Field_i\") == 30);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(4);\n    assert (tuple.getLong(\"id\") == 3);\n    assert (tuple.getLong(\"Field_i\") == 20);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    tuple = tuples.get(5);\n    assert (tuple.getLong(\"id\") == 4);\n    assert (tuple.getLong(\"Field_i\") == 11);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(6);\n    assert (tuple.getLong(\"id\") == 2);\n    assert (tuple.getLong(\"Field_i\") == 8);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(7);\n    assert (tuple.getLong(\"id\") == 1);\n    assert (tuple.getLong(\"Field_i\") == 7);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    // TODO get sum(Field_i) as named one\n    sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    tuples = getTuples(sParams);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n    sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    tuples = getTuples(sParams);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n  }\n\n","sourceOld":"  private void testMixedCaseFields() throws Exception {\n\n    CloudJettyRunner jetty = this.cloudJettys.get(0);\n\n    del(\"*:*\");\n\n    commit();\n\n    indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n    indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n    indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n    indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n    indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n    indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n    indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n    indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n    commit();\n\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n    SolrStream solrStream = new SolrStream(jetty.url, sParams);\n    List<Tuple> tuples = getTuples(solrStream);\n\n    assert (tuples.size() == 8);\n\n    Tuple tuple;\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"id\") == 8);\n    assert (tuple.getLong(\"Field_i\") == 60);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"id\") == 7);\n    assert (tuple.getLong(\"Field_i\") == 50);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(2);\n    assert (tuple.getLong(\"id\") == 6);\n    assert (tuple.getLong(\"Field_i\") == 40);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(3);\n    assert (tuple.getLong(\"id\") == 5);\n    assert (tuple.getLong(\"Field_i\") == 30);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(4);\n    assert (tuple.getLong(\"id\") == 3);\n    assert (tuple.getLong(\"Field_i\") == 20);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    tuple = tuples.get(5);\n    assert (tuple.getLong(\"id\") == 4);\n    assert (tuple.getLong(\"Field_i\") == 11);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(6);\n    assert (tuple.getLong(\"id\") == 2);\n    assert (tuple.getLong(\"Field_i\") == 8);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(7);\n    assert (tuple.getLong(\"id\") == 1);\n    assert (tuple.getLong(\"Field_i\") == 7);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    // TODO get sum(Field_i) as named one\n    sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    solrStream = new SolrStream(jetty.url, sParams);\n    tuples = getTuples(solrStream);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n    sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    solrStream = new SolrStream(jetty.url, sParams);\n    tuples = getTuples(solrStream);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22191e72f6c40dec88c9b94f9bb55c7527772a47","date":1553715407,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler2[TestSQLHandler]#testMixedCaseFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","sourceNew":"  @Test\n  public void testMixedCaseFields() throws Exception {\n\n    new UpdateRequest()\n        .add(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\")\n        .add(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\")\n        .add(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\")\n        .add(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\")\n        .add(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\")\n        .add(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\")\n        .add(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\")\n        .add(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String baseUrl = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n    List<Tuple> tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 8);\n\n    Tuple tuple;\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"id\") == 8);\n    assert (tuple.getLong(\"Field_i\") == 60);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"id\") == 7);\n    assert (tuple.getLong(\"Field_i\") == 50);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(2);\n    assert (tuple.getLong(\"id\") == 6);\n    assert (tuple.getLong(\"Field_i\") == 40);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(3);\n    assert (tuple.getLong(\"id\") == 5);\n    assert (tuple.getLong(\"Field_i\") == 30);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(4);\n    assert (tuple.getLong(\"id\") == 3);\n    assert (tuple.getLong(\"Field_i\") == 20);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    tuple = tuples.get(5);\n    assert (tuple.getLong(\"id\") == 4);\n    assert (tuple.getLong(\"Field_i\") == 11);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(6);\n    assert (tuple.getLong(\"id\") == 2);\n    assert (tuple.getLong(\"Field_i\") == 8);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(7);\n    assert (tuple.getLong(\"id\") == 1);\n    assert (tuple.getLong(\"Field_i\") == 7);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    // TODO get sum(Field_i) as named one\n    sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n    sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n  }\n\n","sourceOld":"  private void testMixedCaseFields() throws Exception {\n\n    del(\"*:*\");\n\n    commit();\n\n    indexDoc(sdoc(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\"));\n    indexDoc(sdoc(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\"));\n    indexDoc(sdoc(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\"));\n    indexDoc(sdoc(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\"));\n    indexDoc(sdoc(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\"));\n    indexDoc(sdoc(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\"));\n    indexDoc(sdoc(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\"));\n    indexDoc(sdoc(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\"));\n    commit();\n\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n    List<Tuple> tuples = getTuples(sParams);\n\n    assert (tuples.size() == 8);\n\n    Tuple tuple;\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"id\") == 8);\n    assert (tuple.getLong(\"Field_i\") == 60);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"id\") == 7);\n    assert (tuple.getLong(\"Field_i\") == 50);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(2);\n    assert (tuple.getLong(\"id\") == 6);\n    assert (tuple.getLong(\"Field_i\") == 40);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(3);\n    assert (tuple.getLong(\"id\") == 5);\n    assert (tuple.getLong(\"Field_i\") == 30);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(4);\n    assert (tuple.getLong(\"id\") == 3);\n    assert (tuple.getLong(\"Field_i\") == 20);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    tuple = tuples.get(5);\n    assert (tuple.getLong(\"id\") == 4);\n    assert (tuple.getLong(\"Field_i\") == 11);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(6);\n    assert (tuple.getLong(\"id\") == 2);\n    assert (tuple.getLong(\"Field_i\") == 8);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(7);\n    assert (tuple.getLong(\"id\") == 1);\n    assert (tuple.getLong(\"Field_i\") == 7);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    // TODO get sum(Field_i) as named one\n    sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    tuples = getTuples(sParams);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n    sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    tuples = getTuples(sParams);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94e31112925a65b1d36f9064772080e25b5ef373","date":1553715407,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#testMixedCaseFields().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler2[TestSQLHandler]#testMixedCaseFields().mjava","sourceNew":"  @Test\n  public void testMixedCaseFields() throws Exception {\n\n    new UpdateRequest()\n        .add(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\")\n        .add(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\")\n        .add(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\")\n        .add(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\")\n        .add(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\")\n        .add(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\")\n        .add(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\")\n        .add(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String baseUrl = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n    List<Tuple> tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 8);\n\n    Tuple tuple;\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"id\") == 8);\n    assert (tuple.getLong(\"Field_i\") == 60);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"id\") == 7);\n    assert (tuple.getLong(\"Field_i\") == 50);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(2);\n    assert (tuple.getLong(\"id\") == 6);\n    assert (tuple.getLong(\"Field_i\") == 40);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(3);\n    assert (tuple.getLong(\"id\") == 5);\n    assert (tuple.getLong(\"Field_i\") == 30);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(4);\n    assert (tuple.getLong(\"id\") == 3);\n    assert (tuple.getLong(\"Field_i\") == 20);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    tuple = tuples.get(5);\n    assert (tuple.getLong(\"id\") == 4);\n    assert (tuple.getLong(\"Field_i\") == 11);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(6);\n    assert (tuple.getLong(\"id\") == 2);\n    assert (tuple.getLong(\"Field_i\") == 8);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(7);\n    assert (tuple.getLong(\"id\") == 1);\n    assert (tuple.getLong(\"Field_i\") == 7);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    // TODO get sum(Field_i) as named one\n    sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n    sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n  }\n\n","sourceOld":"  @Test\n  public void testMixedCaseFields() throws Exception {\n\n    new UpdateRequest()\n        .add(\"id\", \"1\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"7\")\n        .add(\"id\", \"2\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"8\")\n        .add(\"id\", \"3\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"a\", \"Field_i\", \"20\")\n        .add(\"id\", \"4\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"b\", \"Field_i\", \"11\")\n        .add(\"id\", \"5\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"30\")\n        .add(\"id\", \"6\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"40\")\n        .add(\"id\", \"7\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"50\")\n        .add(\"id\", \"8\", \"Text_t\", \"XXXX XXXX\", \"Str_s\", \"c\", \"Field_i\", \"60\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String baseUrl = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\", \"select id, Field_i, Str_s from collection1 where Text_t='XXXX' order by Field_i desc\");\n\n    List<Tuple> tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 8);\n\n    Tuple tuple;\n\n    tuple = tuples.get(0);\n    assert (tuple.getLong(\"id\") == 8);\n    assert (tuple.getLong(\"Field_i\") == 60);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(1);\n    assert (tuple.getLong(\"id\") == 7);\n    assert (tuple.getLong(\"Field_i\") == 50);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(2);\n    assert (tuple.getLong(\"id\") == 6);\n    assert (tuple.getLong(\"Field_i\") == 40);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(3);\n    assert (tuple.getLong(\"id\") == 5);\n    assert (tuple.getLong(\"Field_i\") == 30);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n\n    tuple = tuples.get(4);\n    assert (tuple.getLong(\"id\") == 3);\n    assert (tuple.getLong(\"Field_i\") == 20);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    tuple = tuples.get(5);\n    assert (tuple.getLong(\"id\") == 4);\n    assert (tuple.getLong(\"Field_i\") == 11);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(6);\n    assert (tuple.getLong(\"id\") == 2);\n    assert (tuple.getLong(\"Field_i\") == 8);\n    assert (tuple.get(\"Str_s\").equals(\"b\"));\n\n    tuple = tuples.get(7);\n    assert (tuple.getLong(\"id\") == 1);\n    assert (tuple.getLong(\"Field_i\") == 7);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n\n    // TODO get sum(Field_i) as named one\n    sParams = mapParams(CommonParams.QT, \"/sql\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n    sParams = mapParams(CommonParams.QT, \"/sql\", \"aggregationMode\", \"map_reduce\",\n        \"stmt\",\n        \"select Str_s, sum(Field_i) from collection1 where id='(1 8)' group by Str_s having (sum(Field_i) = 7 OR sum(Field_i) = 60) order by sum(Field_i) desc\");\n\n    tuples = getTuples(sParams, baseUrl);\n\n    assert (tuples.size() == 2);\n\n    tuple = tuples.get(0);\n    assert (tuple.get(\"Str_s\").equals(\"c\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 60);\n\n    tuple = tuples.get(1);\n    assert (tuple.get(\"Str_s\").equals(\"a\"));\n    assert (tuple.getDouble(\"EXPR$1\") == 7);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"22191e72f6c40dec88c9b94f9bb55c7527772a47":["600937be95b5a041815220371fa7882e73031d56"],"612da0a0a2d5f4409da55729b9833e799f905ac5":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"826d15444ddf61716dc768c229cd54b2c2ccce1c":["3ec71d4701edbd96cfea97384101d13611393552"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7b67f9cce921a1f94ec0a28c4eb85bcd887c8aa4","d470c8182e92b264680e34081b75e70a9f2b3c89"],"28288370235ed02234a64753cdbf0c6ec096304a":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa","a71f63026529f3c1f03cfdd664910873ab2369ae"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["3ec71d4701edbd96cfea97384101d13611393552","826d15444ddf61716dc768c229cd54b2c2ccce1c"],"3ec71d4701edbd96cfea97384101d13611393552":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7b67f9cce921a1f94ec0a28c4eb85bcd887c8aa4":["d984627825732e682759c22df7a3b171a80f3812"],"600937be95b5a041815220371fa7882e73031d56":["c58a62203315881cce5089ef67ffee6b8a988a75"],"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["d470c8182e92b264680e34081b75e70a9f2b3c89","3f20deebda1cf327549c84cb60464135abd31c71"],"d984627825732e682759c22df7a3b171a80f3812":["3ec71d4701edbd96cfea97384101d13611393552"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c58a62203315881cce5089ef67ffee6b8a988a75":["28288370235ed02234a64753cdbf0c6ec096304a"],"3f20deebda1cf327549c84cb60464135abd31c71":["612da0a0a2d5f4409da55729b9833e799f905ac5"],"e66a459d38c1c4a2f97128433dab546f683a9fed":["3ec71d4701edbd96cfea97384101d13611393552","826d15444ddf61716dc768c229cd54b2c2ccce1c"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa","a71f63026529f3c1f03cfdd664910873ab2369ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["94e31112925a65b1d36f9064772080e25b5ef373"],"94e31112925a65b1d36f9064772080e25b5ef373":["22191e72f6c40dec88c9b94f9bb55c7527772a47"]},"commit2Childs":{"22191e72f6c40dec88c9b94f9bb55c7527772a47":["94e31112925a65b1d36f9064772080e25b5ef373"],"612da0a0a2d5f4409da55729b9833e799f905ac5":["3f20deebda1cf327549c84cb60464135abd31c71"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["612da0a0a2d5f4409da55729b9833e799f905ac5"],"826d15444ddf61716dc768c229cd54b2c2ccce1c":["d470c8182e92b264680e34081b75e70a9f2b3c89","e66a459d38c1c4a2f97128433dab546f683a9fed"],"28288370235ed02234a64753cdbf0c6ec096304a":["c58a62203315881cce5089ef67ffee6b8a988a75"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"3ec71d4701edbd96cfea97384101d13611393552":["826d15444ddf61716dc768c229cd54b2c2ccce1c","d470c8182e92b264680e34081b75e70a9f2b3c89","d984627825732e682759c22df7a3b171a80f3812","e66a459d38c1c4a2f97128433dab546f683a9fed"],"7b67f9cce921a1f94ec0a28c4eb85bcd887c8aa4":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"600937be95b5a041815220371fa7882e73031d56":["22191e72f6c40dec88c9b94f9bb55c7527772a47"],"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["a71f63026529f3c1f03cfdd664910873ab2369ae","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"d984627825732e682759c22df7a3b171a80f3812":["7b67f9cce921a1f94ec0a28c4eb85bcd887c8aa4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3ec71d4701edbd96cfea97384101d13611393552"],"c58a62203315881cce5089ef67ffee6b8a988a75":["600937be95b5a041815220371fa7882e73031d56"],"3f20deebda1cf327549c84cb60464135abd31c71":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"e66a459d38c1c4a2f97128433dab546f683a9fed":[],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"94e31112925a65b1d36f9064772080e25b5ef373":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["e66a459d38c1c4a2f97128433dab546f683a9fed","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}