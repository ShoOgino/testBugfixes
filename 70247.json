{"path":"lucene/src/java/org/apache/lucene/index/values/FixedDerefBytesImpl.Reader.Source#getBytes(int,BytesRef).mjava","commits":[{"id":"2d84736c4614acce6720851cbd2c823d7cd516e4","date":1290551630,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedDerefBytesImpl.Reader.Source#getBytes(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/FixedDerefBytesImpl.Reader.Source#getBytes(int).mjava","sourceNew":"      @Override\n      public BytesRef getBytes(int docID, BytesRef bytesRef) {\n        final int id = (int) index.get(docID);\n        if (id == 0) {\n          return null;\n        }\n        return data.fill(bytesRef, ((id - 1) * size), size);\n      }\n\n","sourceOld":"      @Override\n      public BytesRef getBytes(int docID) {\n        final int id = (int) index.get(docID);\n        if (id == 0) {\n          return defaultValue;\n        }\n        return data.fill(bytesRef, ((id - 1) * size), size);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedDerefBytesImpl.Reader.Source#getBytes(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/FixedDerefBytesImpl.Reader.Source#getBytes(int,BytesRef).mjava","sourceNew":"      @Override\n      public BytesRef getBytes(int docID, BytesRef bytesRef) {\n        final int id = (int) index.get(docID);\n        if (id == 0) {\n          return null;\n        }\n        return data.fillSlice(bytesRef, ((id - 1) * size), size);\n      }\n\n","sourceOld":"      @Override\n      public BytesRef getBytes(int docID, BytesRef bytesRef) {\n        final int id = (int) index.get(docID);\n        if (id == 0) {\n          return null;\n        }\n        return data.fill(bytesRef, ((id - 1) * size), size);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4034ca0f8f74fdf56e25be73822f2441fc1c1b46","date":1307111599,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedDerefBytesImpl.Reader.Source#getBytes(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/FixedDerefBytesImpl.Reader.Source#getBytes(int,BytesRef).mjava","sourceNew":"      @Override\n      public BytesRef getBytes(int docID, BytesRef bytesRef) {\n        final int id = (int) index.get(docID);\n        if (id == 0) {\n          bytesRef.length = 0;\n          return bytesRef;\n        }\n        return data.fillSlice(bytesRef, ((id - 1) * size), size);\n      }\n\n","sourceOld":"      @Override\n      public BytesRef getBytes(int docID, BytesRef bytesRef) {\n        final int id = (int) index.get(docID);\n        if (id == 0) {\n          return null;\n        }\n        return data.fillSlice(bytesRef, ((id - 1) * size), size);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedDerefBytesImpl.Reader.Source#getBytes(int,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"      @Override\n      public BytesRef getBytes(int docID, BytesRef bytesRef) {\n        final int id = (int) index.get(docID);\n        if (id == 0) {\n          bytesRef.length = 0;\n          return bytesRef;\n        }\n        return data.fillSlice(bytesRef, ((id - 1) * size), size);\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedDerefBytesImpl.Reader.Source#getBytes(int,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"      @Override\n      public BytesRef getBytes(int docID, BytesRef bytesRef) {\n        final int id = (int) index.get(docID);\n        if (id == 0) {\n          bytesRef.length = 0;\n          return bytesRef;\n        }\n        return data.fillSlice(bytesRef, ((id - 1) * size), size);\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85eb75e0c0203e44dcf686f35876cf6080f3a671","date":1317221550,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/FixedDerefBytesImpl.Reader.Source#getBytes(int,BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/FixedDerefBytesImpl.Reader.Source#getBytes(int,BytesRef).mjava","sourceNew":"      @Override\n      public BytesRef getBytes(int docID, BytesRef bytesRef) {\n        final int id = (int) addresses.get(docID);\n        if (id == 0) {\n          bytesRef.length = 0;\n          return bytesRef;\n        }\n        return data.fillSlice(bytesRef, ((id - 1) * size), size);\n      }\n\n","sourceOld":"      @Override\n      public BytesRef getBytes(int docID, BytesRef bytesRef) {\n        final int id = (int) index.get(docID);\n        if (id == 0) {\n          bytesRef.length = 0;\n          return bytesRef;\n        }\n        return data.fillSlice(bytesRef, ((id - 1) * size), size);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e128967bca58657bc0039d4bfe631e63e81f1977","date":1317978310,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/values/FixedDerefBytesImpl.Reader.Source#getBytes(int,BytesRef).mjava","sourceNew":null,"sourceOld":"      @Override\n      public BytesRef getBytes(int docID, BytesRef bytesRef) {\n        final int id = (int) addresses.get(docID);\n        if (id == 0) {\n          bytesRef.length = 0;\n          return bytesRef;\n        }\n        return data.fillSlice(bytesRef, ((id - 1) * size), size);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"2d84736c4614acce6720851cbd2c823d7cd516e4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4034ca0f8f74fdf56e25be73822f2441fc1c1b46"],"4034ca0f8f74fdf56e25be73822f2441fc1c1b46":["3bb13258feba31ab676502787ab2e1779f129b7a"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e128967bca58657bc0039d4bfe631e63e81f1977":["85eb75e0c0203e44dcf686f35876cf6080f3a671"],"3bb13258feba31ab676502787ab2e1779f129b7a":["2d84736c4614acce6720851cbd2c823d7cd516e4","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e128967bca58657bc0039d4bfe631e63e81f1977"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"2d84736c4614acce6720851cbd2c823d7cd516e4":["3bb13258feba31ab676502787ab2e1779f129b7a"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","85eb75e0c0203e44dcf686f35876cf6080f3a671"],"4034ca0f8f74fdf56e25be73822f2441fc1c1b46":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2d84736c4614acce6720851cbd2c823d7cd516e4","2e8d7ba2175f47e280231533f7d3016249cea88b","3bb13258feba31ab676502787ab2e1779f129b7a"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["e128967bca58657bc0039d4bfe631e63e81f1977"],"e128967bca58657bc0039d4bfe631e63e81f1977":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3bb13258feba31ab676502787ab2e1779f129b7a":["4034ca0f8f74fdf56e25be73822f2441fc1c1b46"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}