{"path":"src/java/org/apache/solr/spelling/IndexBasedSpellChecker#init(NamedList,SolrResourceLoader).mjava","commits":[{"id":"84b6c001c19319635b53dd80ee9fc1ba9a5b4574","date":1213883214,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/spelling/IndexBasedSpellChecker#init(NamedList,SolrResourceLoader).mjava","pathOld":"/dev/null","sourceNew":"  public String init(NamedList config, SolrResourceLoader loader) {\n    super.init(config, loader);\n    String accuracy = (String) config.get(ACCURACY);\n    threshold = config.get(THRESHOLD_TOKEN_FREQUENCY) == null ? 0.0f\n            : (Float) config.get(THRESHOLD_TOKEN_FREQUENCY);\n    if (accuracy != null) {\n      try {\n        this.accuracy = Float.parseFloat(accuracy);\n        spellChecker.setAccuracy(this.accuracy);\n\n      } catch (NumberFormatException e) {\n        throw new RuntimeException(\n                \"Unparseable accuracy given for dictionary: \" + name, e);\n      }\n    }\n    initSourceReader();\n    return name;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b3d510537f70066395832b2b46e58473c373e8b2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b3d510537f70066395832b2b46e58473c373e8b2","date":1216580762,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/spelling/IndexBasedSpellChecker#init(NamedList,SolrResourceLoader).mjava","pathOld":"src/java/org/apache/solr/spelling/IndexBasedSpellChecker#init(NamedList,SolrResourceLoader).mjava","sourceNew":"  public String init(NamedList config, SolrResourceLoader loader) {\n    super.init(config, loader);\n    threshold = config.get(THRESHOLD_TOKEN_FREQUENCY) == null ? 0.0f\n            : (Float) config.get(THRESHOLD_TOKEN_FREQUENCY);\n    initSourceReader();\n    return name;\n  }\n\n","sourceOld":"  public String init(NamedList config, SolrResourceLoader loader) {\n    super.init(config, loader);\n    String accuracy = (String) config.get(ACCURACY);\n    threshold = config.get(THRESHOLD_TOKEN_FREQUENCY) == null ? 0.0f\n            : (Float) config.get(THRESHOLD_TOKEN_FREQUENCY);\n    if (accuracy != null) {\n      try {\n        this.accuracy = Float.parseFloat(accuracy);\n        spellChecker.setAccuracy(this.accuracy);\n\n      } catch (NumberFormatException e) {\n        throw new RuntimeException(\n                \"Unparseable accuracy given for dictionary: \" + name, e);\n      }\n    }\n    initSourceReader();\n    return name;\n  }\n\n","bugFix":["84b6c001c19319635b53dd80ee9fc1ba9a5b4574"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6a7ae0a5e41f95f1e5771fcbbe60d9bdba7be90","date":1216996119,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/spelling/IndexBasedSpellChecker#init(NamedList,SolrCore).mjava","pathOld":"src/java/org/apache/solr/spelling/IndexBasedSpellChecker#init(NamedList,SolrResourceLoader).mjava","sourceNew":"  public String init(NamedList config, SolrCore core) {\n    super.init(config, core);\n    threshold = config.get(THRESHOLD_TOKEN_FREQUENCY) == null ? 0.0f\n            : (Float) config.get(THRESHOLD_TOKEN_FREQUENCY);\n    initSourceReader();\n    return name;\n  }\n\n","sourceOld":"  public String init(NamedList config, SolrResourceLoader loader) {\n    super.init(config, loader);\n    threshold = config.get(THRESHOLD_TOKEN_FREQUENCY) == null ? 0.0f\n            : (Float) config.get(THRESHOLD_TOKEN_FREQUENCY);\n    initSourceReader();\n    return name;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b3d510537f70066395832b2b46e58473c373e8b2":["84b6c001c19319635b53dd80ee9fc1ba9a5b4574"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"84b6c001c19319635b53dd80ee9fc1ba9a5b4574":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"d6a7ae0a5e41f95f1e5771fcbbe60d9bdba7be90":["b3d510537f70066395832b2b46e58473c373e8b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b3d510537f70066395832b2b46e58473c373e8b2":["d6a7ae0a5e41f95f1e5771fcbbe60d9bdba7be90"],"84b6c001c19319635b53dd80ee9fc1ba9a5b4574":["b3d510537f70066395832b2b46e58473c373e8b2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["84b6c001c19319635b53dd80ee9fc1ba9a5b4574"],"d6a7ae0a5e41f95f1e5771fcbbe60d9bdba7be90":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6a7ae0a5e41f95f1e5771fcbbe60d9bdba7be90","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}