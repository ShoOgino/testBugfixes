{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl#cloneTree().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl#cloneTree().mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl#cloneTree().mjava","sourceNew":"  public QueryNode cloneTree() throws CloneNotSupportedException {\n    QueryNodeImpl clone = (QueryNodeImpl) super.clone();\n    clone.isLeaf = this.isLeaf;\n\n    // Reset all tags\n    clone.tags = new Hashtable<String, Object>();\n\n    // copy children\n    if (this.clauses != null) {\n      List<QueryNode> localClauses = new ArrayList<QueryNode>();\n      for (QueryNode clause : this.clauses) {\n        localClauses.add(clause.cloneTree());\n      }\n      clone.clauses = localClauses;\n    }\n\n    return clone;\n  }\n\n","sourceOld":"  public QueryNode cloneTree() throws CloneNotSupportedException {\n    QueryNodeImpl clone = (QueryNodeImpl) super.clone();\n    clone.isLeaf = this.isLeaf;\n\n    // Reset all tags\n    clone.tags = new Hashtable<String, Object>();\n\n    // copy children\n    if (this.clauses != null) {\n      List<QueryNode> localClauses = new ArrayList<QueryNode>();\n      for (QueryNode clause : this.clauses) {\n        localClauses.add(clause.cloneTree());\n      }\n      clone.clauses = localClauses;\n    }\n\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl#cloneTree().mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl#cloneTree().mjava","sourceNew":"  @Override\n  public QueryNode cloneTree() throws CloneNotSupportedException {\n    QueryNodeImpl clone = (QueryNodeImpl) super.clone();\n    clone.isLeaf = this.isLeaf;\n\n    // Reset all tags\n    clone.tags = new Hashtable<String, Object>();\n\n    // copy children\n    if (this.clauses != null) {\n      List<QueryNode> localClauses = new ArrayList<QueryNode>();\n      for (QueryNode clause : this.clauses) {\n        localClauses.add(clause.cloneTree());\n      }\n      clone.clauses = localClauses;\n    }\n\n    return clone;\n  }\n\n","sourceOld":"  public QueryNode cloneTree() throws CloneNotSupportedException {\n    QueryNodeImpl clone = (QueryNodeImpl) super.clone();\n    clone.isLeaf = this.isLeaf;\n\n    // Reset all tags\n    clone.tags = new Hashtable<String, Object>();\n\n    // copy children\n    if (this.clauses != null) {\n      List<QueryNode> localClauses = new ArrayList<QueryNode>();\n      for (QueryNode clause : this.clauses) {\n        localClauses.add(clause.cloneTree());\n      }\n      clone.clauses = localClauses;\n    }\n\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl#cloneTree().mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl#cloneTree().mjava","sourceNew":"  @Override\n  public QueryNode cloneTree() throws CloneNotSupportedException {\n    QueryNodeImpl clone = (QueryNodeImpl) super.clone();\n    clone.isLeaf = this.isLeaf;\n\n    // Reset all tags\n    clone.tags = new Hashtable<String, Object>();\n\n    // copy children\n    if (this.clauses != null) {\n      List<QueryNode> localClauses = new ArrayList<QueryNode>();\n      for (QueryNode clause : this.clauses) {\n        localClauses.add(clause.cloneTree());\n      }\n      clone.clauses = localClauses;\n    }\n\n    return clone;\n  }\n\n","sourceOld":"  public QueryNode cloneTree() throws CloneNotSupportedException {\n    QueryNodeImpl clone = (QueryNodeImpl) super.clone();\n    clone.isLeaf = this.isLeaf;\n\n    // Reset all tags\n    clone.tags = new Hashtable<String, Object>();\n\n    // copy children\n    if (this.clauses != null) {\n      List<QueryNode> localClauses = new ArrayList<QueryNode>();\n      for (QueryNode clause : this.clauses) {\n        localClauses.add(clause.cloneTree());\n      }\n      clone.clauses = localClauses;\n    }\n\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl#cloneTree().mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl#cloneTree().mjava","sourceNew":"  @Override\n  public QueryNode cloneTree() throws CloneNotSupportedException {\n    QueryNodeImpl clone = (QueryNodeImpl) super.clone();\n    clone.isLeaf = this.isLeaf;\n\n    // Reset all tags\n    clone.tags = new Hashtable<>();\n\n    // copy children\n    if (this.clauses != null) {\n      List<QueryNode> localClauses = new ArrayList<>();\n      for (QueryNode clause : this.clauses) {\n        localClauses.add(clause.cloneTree());\n      }\n      clone.clauses = localClauses;\n    }\n\n    return clone;\n  }\n\n","sourceOld":"  @Override\n  public QueryNode cloneTree() throws CloneNotSupportedException {\n    QueryNodeImpl clone = (QueryNodeImpl) super.clone();\n    clone.isLeaf = this.isLeaf;\n\n    // Reset all tags\n    clone.tags = new Hashtable<String, Object>();\n\n    // copy children\n    if (this.clauses != null) {\n      List<QueryNode> localClauses = new ArrayList<QueryNode>();\n      for (QueryNode clause : this.clauses) {\n        localClauses.add(clause.cloneTree());\n      }\n      clone.clauses = localClauses;\n    }\n\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7530de27b87b961b51f01bd1299b7004d46e8823"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["7530de27b87b961b51f01bd1299b7004d46e8823"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}