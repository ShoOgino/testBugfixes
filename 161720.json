{"path":"lucene/facet/src/java/org/apache/lucene/facet/sortedset/SortedSetDocValuesAccumulator#SortedSetDocValuesAccumulator(FacetSearchParams,SortedSetDocValuesReaderState).mjava","commits":[{"id":"fb8457dd0880f5547d70dbf40ea4f1c5e7787798","date":1363378339,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/sortedset/SortedSetDocValuesAccumulator#SortedSetDocValuesAccumulator(FacetSearchParams,SortedSetDocValuesReaderState).mjava","pathOld":"/dev/null","sourceNew":"  public SortedSetDocValuesAccumulator(FacetSearchParams fsp, SortedSetDocValuesReaderState state) throws IOException {\n    super(fsp, null, null, new FacetArrays((int) state.getDocValues().getValueCount()));\n    this.state = state;\n    this.field = state.getField();\n    dv = state.getDocValues();\n\n    // Check params:\n    for(FacetRequest request : fsp.facetRequests) {\n      if (!(request instanceof CountFacetRequest)) {\n        throw new IllegalArgumentException(\"this collector only supports CountFacetRequest; got \" + request);\n      }\n      if (request.categoryPath.length != 1) {\n        throw new IllegalArgumentException(\"this collector only supports depth 1 CategoryPath; got \" + request.categoryPath);\n      }\n      if (request.getDepth() != 1) {\n        throw new IllegalArgumentException(\"this collector only supports depth=1; got \" + request.getDepth());\n      }\n      String dim = request.categoryPath.components[0];\n\n      SortedSetDocValuesReaderState.OrdRange ordRange = state.getOrdRange(dim);\n      if (ordRange == null) {\n        throw new IllegalArgumentException(\"dim \\\"\" + dim + \"\\\" does not exist\");\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c557e6f970bbfb1e81bf6b491874ed620a4bb5","date":1373906832,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/sortedset/SortedSetDocValuesAccumulator#SortedSetDocValuesAccumulator(FacetSearchParams,SortedSetDocValuesReaderState).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/sortedset/SortedSetDocValuesAccumulator#SortedSetDocValuesAccumulator(FacetSearchParams,SortedSetDocValuesReaderState).mjava","sourceNew":"  public SortedSetDocValuesAccumulator(FacetSearchParams fsp, SortedSetDocValuesReaderState state) throws IOException {\n    super(fsp, null, null, new FacetArrays(state.getSize()));\n    this.state = state;\n    this.field = state.getField();\n    dv = state.getDocValues();\n\n    // Check params:\n    for(FacetRequest request : fsp.facetRequests) {\n      if (!(request instanceof CountFacetRequest)) {\n        throw new IllegalArgumentException(\"this collector only supports CountFacetRequest; got \" + request);\n      }\n      if (request.categoryPath.length != 1) {\n        throw new IllegalArgumentException(\"this collector only supports depth 1 CategoryPath; got \" + request.categoryPath);\n      }\n      if (request.getDepth() != 1) {\n        throw new IllegalArgumentException(\"this collector only supports depth=1; got \" + request.getDepth());\n      }\n      String dim = request.categoryPath.components[0];\n\n      SortedSetDocValuesReaderState.OrdRange ordRange = state.getOrdRange(dim);\n      if (ordRange == null) {\n        throw new IllegalArgumentException(\"dim \\\"\" + dim + \"\\\" does not exist\");\n      }\n    }\n  }\n\n","sourceOld":"  public SortedSetDocValuesAccumulator(FacetSearchParams fsp, SortedSetDocValuesReaderState state) throws IOException {\n    super(fsp, null, null, new FacetArrays((int) state.getDocValues().getValueCount()));\n    this.state = state;\n    this.field = state.getField();\n    dv = state.getDocValues();\n\n    // Check params:\n    for(FacetRequest request : fsp.facetRequests) {\n      if (!(request instanceof CountFacetRequest)) {\n        throw new IllegalArgumentException(\"this collector only supports CountFacetRequest; got \" + request);\n      }\n      if (request.categoryPath.length != 1) {\n        throw new IllegalArgumentException(\"this collector only supports depth 1 CategoryPath; got \" + request.categoryPath);\n      }\n      if (request.getDepth() != 1) {\n        throw new IllegalArgumentException(\"this collector only supports depth=1; got \" + request.getDepth());\n      }\n      String dim = request.categoryPath.components[0];\n\n      SortedSetDocValuesReaderState.OrdRange ordRange = state.getOrdRange(dim);\n      if (ordRange == null) {\n        throw new IllegalArgumentException(\"dim \\\"\" + dim + \"\\\" does not exist\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/sortedset/SortedSetDocValuesAccumulator#SortedSetDocValuesAccumulator(FacetSearchParams,SortedSetDocValuesReaderState).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/sortedset/SortedSetDocValuesAccumulator#SortedSetDocValuesAccumulator(FacetSearchParams,SortedSetDocValuesReaderState).mjava","sourceNew":"  public SortedSetDocValuesAccumulator(FacetSearchParams fsp, SortedSetDocValuesReaderState state) throws IOException {\n    super(fsp, null, null, new FacetArrays(state.getSize()));\n    this.state = state;\n    this.field = state.getField();\n    dv = state.getDocValues();\n\n    // Check params:\n    for(FacetRequest request : fsp.facetRequests) {\n      if (!(request instanceof CountFacetRequest)) {\n        throw new IllegalArgumentException(\"this collector only supports CountFacetRequest; got \" + request);\n      }\n      if (request.categoryPath.length != 1) {\n        throw new IllegalArgumentException(\"this collector only supports depth 1 CategoryPath; got \" + request.categoryPath);\n      }\n      if (request.getDepth() != 1) {\n        throw new IllegalArgumentException(\"this collector only supports depth=1; got \" + request.getDepth());\n      }\n      String dim = request.categoryPath.components[0];\n\n      SortedSetDocValuesReaderState.OrdRange ordRange = state.getOrdRange(dim);\n      if (ordRange == null) {\n        throw new IllegalArgumentException(\"dim \\\"\" + dim + \"\\\" does not exist\");\n      }\n    }\n  }\n\n","sourceOld":"  public SortedSetDocValuesAccumulator(FacetSearchParams fsp, SortedSetDocValuesReaderState state) throws IOException {\n    super(fsp, null, null, new FacetArrays((int) state.getDocValues().getValueCount()));\n    this.state = state;\n    this.field = state.getField();\n    dv = state.getDocValues();\n\n    // Check params:\n    for(FacetRequest request : fsp.facetRequests) {\n      if (!(request instanceof CountFacetRequest)) {\n        throw new IllegalArgumentException(\"this collector only supports CountFacetRequest; got \" + request);\n      }\n      if (request.categoryPath.length != 1) {\n        throw new IllegalArgumentException(\"this collector only supports depth 1 CategoryPath; got \" + request.categoryPath);\n      }\n      if (request.getDepth() != 1) {\n        throw new IllegalArgumentException(\"this collector only supports depth=1; got \" + request.getDepth());\n      }\n      String dim = request.categoryPath.components[0];\n\n      SortedSetDocValuesReaderState.OrdRange ordRange = state.getOrdRange(dim);\n      if (ordRange == null) {\n        throw new IllegalArgumentException(\"dim \\\"\" + dim + \"\\\" does not exist\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6249cba93d7ad1bf6f5a225c34fbe3d547ed9f49","date":1375103250,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/sortedset/SortedSetDocValuesAccumulator#SortedSetDocValuesAccumulator(SortedSetDocValuesReaderState,FacetSearchParams,FacetArrays).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/sortedset/SortedSetDocValuesAccumulator#SortedSetDocValuesAccumulator(FacetSearchParams,SortedSetDocValuesReaderState).mjava","sourceNew":"  public SortedSetDocValuesAccumulator(SortedSetDocValuesReaderState state, FacetSearchParams fsp, FacetArrays arrays) \n      throws IOException {\n    super(fsp);\n    this.state = state;\n    this.field = state.getField();\n    this.facetArrays = arrays == null ? new FacetArrays(state.getSize()) : arrays;\n    dv = state.getDocValues();\n\n    // Check params:\n    for (FacetRequest fr : fsp.facetRequests) {\n      if (!(fr instanceof CountFacetRequest)) {\n        throw new IllegalArgumentException(\"this accumulator only supports CountFacetRequest; got \" + fr);\n      }\n      if (fr.categoryPath.length != 1) {\n        throw new IllegalArgumentException(\"this accumulator only supports 1-level CategoryPath; got \" + fr.categoryPath);\n      }\n      if (fr.getDepth() != 1) {\n        throw new IllegalArgumentException(\"this accumulator only supports depth=1; got \" + fr.getDepth());\n      }\n      String dim = fr.categoryPath.components[0];\n\n      SortedSetDocValuesReaderState.OrdRange ordRange = state.getOrdRange(dim);\n      if (ordRange == null) {\n        throw new IllegalArgumentException(\"dim \\\"\" + dim + \"\\\" does not exist\");\n      }\n    }\n  }\n\n","sourceOld":"  public SortedSetDocValuesAccumulator(FacetSearchParams fsp, SortedSetDocValuesReaderState state) throws IOException {\n    super(fsp, null, null, new FacetArrays(state.getSize()));\n    this.state = state;\n    this.field = state.getField();\n    dv = state.getDocValues();\n\n    // Check params:\n    for(FacetRequest request : fsp.facetRequests) {\n      if (!(request instanceof CountFacetRequest)) {\n        throw new IllegalArgumentException(\"this collector only supports CountFacetRequest; got \" + request);\n      }\n      if (request.categoryPath.length != 1) {\n        throw new IllegalArgumentException(\"this collector only supports depth 1 CategoryPath; got \" + request.categoryPath);\n      }\n      if (request.getDepth() != 1) {\n        throw new IllegalArgumentException(\"this collector only supports depth=1; got \" + request.getDepth());\n      }\n      String dim = request.categoryPath.components[0];\n\n      SortedSetDocValuesReaderState.OrdRange ordRange = state.getOrdRange(dim);\n      if (ordRange == null) {\n        throw new IllegalArgumentException(\"dim \\\"\" + dim + \"\\\" does not exist\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/sortedset/SortedSetDocValuesAccumulator#SortedSetDocValuesAccumulator(SortedSetDocValuesReaderState,FacetSearchParams,FacetArrays).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/sortedset/SortedSetDocValuesAccumulator#SortedSetDocValuesAccumulator(FacetSearchParams,SortedSetDocValuesReaderState).mjava","sourceNew":"  public SortedSetDocValuesAccumulator(SortedSetDocValuesReaderState state, FacetSearchParams fsp, FacetArrays arrays) \n      throws IOException {\n    super(fsp);\n    this.state = state;\n    this.field = state.getField();\n    this.facetArrays = arrays == null ? new FacetArrays(state.getSize()) : arrays;\n    dv = state.getDocValues();\n\n    // Check params:\n    for (FacetRequest fr : fsp.facetRequests) {\n      if (!(fr instanceof CountFacetRequest)) {\n        throw new IllegalArgumentException(\"this accumulator only supports CountFacetRequest; got \" + fr);\n      }\n      if (fr.categoryPath.length != 1) {\n        throw new IllegalArgumentException(\"this accumulator only supports 1-level CategoryPath; got \" + fr.categoryPath);\n      }\n      if (fr.getDepth() != 1) {\n        throw new IllegalArgumentException(\"this accumulator only supports depth=1; got \" + fr.getDepth());\n      }\n      String dim = fr.categoryPath.components[0];\n\n      SortedSetDocValuesReaderState.OrdRange ordRange = state.getOrdRange(dim);\n      if (ordRange == null) {\n        throw new IllegalArgumentException(\"dim \\\"\" + dim + \"\\\" does not exist\");\n      }\n    }\n  }\n\n","sourceOld":"  public SortedSetDocValuesAccumulator(FacetSearchParams fsp, SortedSetDocValuesReaderState state) throws IOException {\n    super(fsp, null, null, new FacetArrays(state.getSize()));\n    this.state = state;\n    this.field = state.getField();\n    dv = state.getDocValues();\n\n    // Check params:\n    for(FacetRequest request : fsp.facetRequests) {\n      if (!(request instanceof CountFacetRequest)) {\n        throw new IllegalArgumentException(\"this collector only supports CountFacetRequest; got \" + request);\n      }\n      if (request.categoryPath.length != 1) {\n        throw new IllegalArgumentException(\"this collector only supports depth 1 CategoryPath; got \" + request.categoryPath);\n      }\n      if (request.getDepth() != 1) {\n        throw new IllegalArgumentException(\"this collector only supports depth=1; got \" + request.getDepth());\n      }\n      String dim = request.categoryPath.components[0];\n\n      SortedSetDocValuesReaderState.OrdRange ordRange = state.getOrdRange(dim);\n      if (ordRange == null) {\n        throw new IllegalArgumentException(\"dim \\\"\" + dim + \"\\\" does not exist\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["fb8457dd0880f5547d70dbf40ea4f1c5e7787798","a3c557e6f970bbfb1e81bf6b491874ed620a4bb5"],"a3c557e6f970bbfb1e81bf6b491874ed620a4bb5":["fb8457dd0880f5547d70dbf40ea4f1c5e7787798"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["37a0f60745e53927c4c876cfe5b5a58170f0646c"],"fb8457dd0880f5547d70dbf40ea4f1c5e7787798":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6249cba93d7ad1bf6f5a225c34fbe3d547ed9f49":["a3c557e6f970bbfb1e81bf6b491874ed620a4bb5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6249cba93d7ad1bf6f5a225c34fbe3d547ed9f49"]},"commit2Childs":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"a3c557e6f970bbfb1e81bf6b491874ed620a4bb5":["37a0f60745e53927c4c876cfe5b5a58170f0646c","6249cba93d7ad1bf6f5a225c34fbe3d547ed9f49"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb8457dd0880f5547d70dbf40ea4f1c5e7787798"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"fb8457dd0880f5547d70dbf40ea4f1c5e7787798":["37a0f60745e53927c4c876cfe5b5a58170f0646c","a3c557e6f970bbfb1e81bf6b491874ed620a4bb5"],"6249cba93d7ad1bf6f5a225c34fbe3d547ed9f49":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}