{"path":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseMatcher#repeatingTerms().mjava","commits":[{"id":"3b11b9d5eaf9707760ca5151530830a825197023","date":1525941319,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseMatcher#repeatingTerms().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseScorer#repeatingTerms().mjava","sourceNew":"  /** find repeating terms and assign them ordinal values */\n  private LinkedHashMap<Term,Integer> repeatingTerms() {\n    LinkedHashMap<Term,Integer> tord = new LinkedHashMap<>();\n    HashMap<Term,Integer> tcnt = new HashMap<>();\n    for (PhrasePositions pp : phrasePositions) {\n      for (Term t : pp.terms) {\n        Integer cnt0 = tcnt.get(t);\n        Integer cnt = cnt0==null ? new Integer(1) : new Integer(1+cnt0.intValue());\n        tcnt.put(t, cnt);\n        if (cnt==2) {\n          tord.put(t,tord.size());\n        }\n      }\n    }\n    return tord;\n  }\n\n","sourceOld":"  /** find repeating terms and assign them ordinal values */\n  private LinkedHashMap<Term,Integer> repeatingTerms() {\n    LinkedHashMap<Term,Integer> tord = new LinkedHashMap<>();\n    HashMap<Term,Integer> tcnt = new HashMap<>();\n    for (PhrasePositions pp : phrasePositions) {\n      for (Term t : pp.terms) {\n        Integer cnt0 = tcnt.get(t);\n        Integer cnt = cnt0==null ? new Integer(1) : new Integer(1+cnt0.intValue());\n        tcnt.put(t, cnt);\n        if (cnt==2) {\n          tord.put(t,tord.size());\n        }\n      }\n    }\n    return tord;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","date":1528054850,"type":3,"author":"Michael Braun","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseMatcher#repeatingTerms().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseMatcher#repeatingTerms().mjava","sourceNew":"  /** find repeating terms and assign them ordinal values */\n  private LinkedHashMap<Term,Integer> repeatingTerms() {\n    LinkedHashMap<Term,Integer> tord = new LinkedHashMap<>();\n    HashMap<Term,Integer> tcnt = new HashMap<>();\n    for (PhrasePositions pp : phrasePositions) {\n      for (Term t : pp.terms) {\n        Integer cnt = tcnt.compute(t, (key, old) -> old == null ? 1 : 1 + old);\n        if (cnt==2) {\n          tord.put(t,tord.size());\n        }\n      }\n    }\n    return tord;\n  }\n\n","sourceOld":"  /** find repeating terms and assign them ordinal values */\n  private LinkedHashMap<Term,Integer> repeatingTerms() {\n    LinkedHashMap<Term,Integer> tord = new LinkedHashMap<>();\n    HashMap<Term,Integer> tcnt = new HashMap<>();\n    for (PhrasePositions pp : phrasePositions) {\n      for (Term t : pp.terms) {\n        Integer cnt0 = tcnt.get(t);\n        Integer cnt = cnt0==null ? new Integer(1) : new Integer(1+cnt0.intValue());\n        tcnt.put(t, cnt);\n        if (cnt==2) {\n          tord.put(t,tord.size());\n        }\n      }\n    }\n    return tord;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"628903f37b6c442da0d390db1c6af9a0e74d41a7","date":1531736685,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseMatcher#repeatingTerms().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseMatcher#repeatingTerms().mjava","sourceNew":"  /** find repeating terms and assign them ordinal values */\n  private LinkedHashMap<Term,Integer> repeatingTerms() {\n    LinkedHashMap<Term,Integer> tord = new LinkedHashMap<>();\n    HashMap<Term,Integer> tcnt = new HashMap<>();\n    for (PhrasePositions pp : phrasePositions) {\n      for (Term t : pp.terms) {\n        Integer cnt = tcnt.compute(t, (key, old) -> old == null ? 1 : 1 + old);\n        if (cnt==2) {\n          tord.put(t,tord.size());\n        }\n      }\n    }\n    return tord;\n  }\n\n","sourceOld":"  /** find repeating terms and assign them ordinal values */\n  private LinkedHashMap<Term,Integer> repeatingTerms() {\n    LinkedHashMap<Term,Integer> tord = new LinkedHashMap<>();\n    HashMap<Term,Integer> tcnt = new HashMap<>();\n    for (PhrasePositions pp : phrasePositions) {\n      for (Term t : pp.terms) {\n        Integer cnt0 = tcnt.get(t);\n        Integer cnt = cnt0==null ? new Integer(1) : new Integer(1+cnt0.intValue());\n        tcnt.put(t, cnt);\n        if (cnt==2) {\n          tord.put(t,tord.size());\n        }\n      }\n    }\n    return tord;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseMatcher#repeatingTerms().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/SloppyPhraseMatcher#repeatingTerms().mjava","sourceNew":"  /** find repeating terms and assign them ordinal values */\n  private LinkedHashMap<Term,Integer> repeatingTerms() {\n    LinkedHashMap<Term,Integer> tord = new LinkedHashMap<>();\n    HashMap<Term,Integer> tcnt = new HashMap<>();\n    for (PhrasePositions pp : phrasePositions) {\n      for (Term t : pp.terms) {\n        Integer cnt = tcnt.compute(t, (key, old) -> old == null ? 1 : 1 + old);\n        if (cnt==2) {\n          tord.put(t,tord.size());\n        }\n      }\n    }\n    return tord;\n  }\n\n","sourceOld":"  /** find repeating terms and assign them ordinal values */\n  private LinkedHashMap<Term,Integer> repeatingTerms() {\n    LinkedHashMap<Term,Integer> tord = new LinkedHashMap<>();\n    HashMap<Term,Integer> tcnt = new HashMap<>();\n    for (PhrasePositions pp : phrasePositions) {\n      for (Term t : pp.terms) {\n        Integer cnt0 = tcnt.get(t);\n        Integer cnt = cnt0==null ? new Integer(1) : new Integer(1+cnt0.intValue());\n        tcnt.put(t, cnt);\n        if (cnt==2) {\n          tord.put(t,tord.size());\n        }\n      }\n    }\n    return tord;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["3b11b9d5eaf9707760ca5151530830a825197023"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["3b11b9d5eaf9707760ca5151530830a825197023","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"3b11b9d5eaf9707760ca5151530830a825197023":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["3b11b9d5eaf9707760ca5151530830a825197023","b6a269c1ddba3f8c9fa9a40572ecc538eddda41a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["628903f37b6c442da0d390db1c6af9a0e74d41a7"]},"commit2Childs":{"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["628903f37b6c442da0d390db1c6af9a0e74d41a7"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"3b11b9d5eaf9707760ca5151530830a825197023":["b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b11b9d5eaf9707760ca5151530830a825197023"],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}