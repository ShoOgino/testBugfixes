{"path":"solr/core/src/java/org/apache/solr/core/ConfigSetService#createSolrConfig(CoreDescriptor,SolrResourceLoader,boolean).mjava","commits":[{"id":"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96","date":1576143009,"type":1,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSetService#createSolrConfig(CoreDescriptor,SolrResourceLoader,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSetService#createSolrConfig(CoreDescriptor,SolrResourceLoader).mjava","sourceNew":"  /**\n   * Create a SolrConfig object for a core\n   * @param cd the core's CoreDescriptor\n   * @param loader the core's resource loader\n   * @param isTrusted is the configset trusted?\n   * @return a SolrConfig object\n   */\n  protected SolrConfig createSolrConfig(CoreDescriptor cd, SolrResourceLoader loader, boolean isTrusted) {\n    return SolrConfig.readFromResourceLoader(loader, cd.getConfigName(), isTrusted);\n  }\n\n","sourceOld":"  /**\n   * Create a SolrConfig object for a core\n   * @param cd the core's CoreDescriptor\n   * @param loader the core's resource loader\n   * @return a SolrConfig object\n   */\n  protected SolrConfig createSolrConfig(CoreDescriptor cd, SolrResourceLoader loader) {\n    return SolrConfig.readFromResourceLoader(loader, cd.getConfigName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df724d84dab24a0cc54bec95a8680867adc7f171","date":1576156608,"type":1,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSetService#createSolrConfig(CoreDescriptor,SolrResourceLoader,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSetService#createSolrConfig(CoreDescriptor,SolrResourceLoader).mjava","sourceNew":"  /**\n   * Create a SolrConfig object for a core\n   * @param cd the core's CoreDescriptor\n   * @param loader the core's resource loader\n   * @param isTrusted is the configset trusted?\n   * @return a SolrConfig object\n   */\n  protected SolrConfig createSolrConfig(CoreDescriptor cd, SolrResourceLoader loader, boolean isTrusted) {\n    return SolrConfig.readFromResourceLoader(loader, cd.getConfigName(), isTrusted);\n  }\n\n","sourceOld":"  /**\n   * Create a SolrConfig object for a core\n   * @param cd the core's CoreDescriptor\n   * @param loader the core's resource loader\n   * @return a SolrConfig object\n   */\n  protected SolrConfig createSolrConfig(CoreDescriptor cd, SolrResourceLoader loader) {\n    return SolrConfig.readFromResourceLoader(loader, cd.getConfigName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSetService#createSolrConfig(CoreDescriptor,SolrResourceLoader,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSetService#createSolrConfig(CoreDescriptor,SolrResourceLoader,boolean).mjava","sourceNew":"  /**\n   * Create a SolrConfig object for a core\n   * @param cd the core's CoreDescriptor\n   * @param loader the core's resource loader\n   * @param isTrusted is the configset trusted?\n   * @return a SolrConfig object\n   */\n  protected SolrConfig createSolrConfig(CoreDescriptor cd, SolrResourceLoader loader, boolean isTrusted) {\n    return SolrConfig.readFromResourceLoader(loader, cd.getConfigName(), isTrusted, cd.getSubstitutableProperties());\n  }\n\n","sourceOld":"  /**\n   * Create a SolrConfig object for a core\n   * @param cd the core's CoreDescriptor\n   * @param loader the core's resource loader\n   * @param isTrusted is the configset trusted?\n   * @return a SolrConfig object\n   */\n  protected SolrConfig createSolrConfig(CoreDescriptor cd, SolrResourceLoader loader, boolean isTrusted) {\n    return SolrConfig.readFromResourceLoader(loader, cd.getConfigName(), isTrusted);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df724d84dab24a0cc54bec95a8680867adc7f171":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"]},"commit2Childs":{"df724d84dab24a0cc54bec95a8680867adc7f171":[],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["df724d84dab24a0cc54bec95a8680867adc7f171","ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96":["df724d84dab24a0cc54bec95a8680867adc7f171","ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["df724d84dab24a0cc54bec95a8680867adc7f171","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}