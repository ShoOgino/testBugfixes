{"path":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#jj_consume_token(int).mjava","commits":[{"id":"b3d2f5b0b95e82cde4724fb6e7020cfdd2bb5a07","date":1270909388,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#jj_consume_token(int).mjava","pathOld":"lucene/contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#jj_consume_token(int).mjava","sourceNew":"  private Token jj_consume_token(int kind) throws ParseException {\n    Token oldToken;\n    if ((oldToken = token).next != null) token = token.next;\n    else token = token.next = token_source.getNextToken();\n    jj_ntk = -1;\n    if (token.kind == kind) {\n      jj_gen++;\n      if (++jj_gc > 100) {\n        jj_gc = 0;\n        for (int i = 0; i < jj_2_rtns.length; i++) {\n          JJCalls c = jj_2_rtns[i];\n          while (c != null) {\n            if (c.gen < jj_gen) c.first = null;\n            c = c.next;\n          }\n        }\n      }\n      return token;\n    }\n    token = oldToken;\n    jj_kind = kind;\n    throw generateParseException();\n  }\n\n","sourceOld":"  private Token jj_consume_token(int kind) throws ParseException {\n    Token oldToken;\n    if ((oldToken = token).next != null) token = token.next;\n    else token = token.next = token_source.getNextToken();\n    jj_ntk = -1;\n    if (token.kind == kind) {\n      jj_gen++;\n      if (++jj_gc > 100) {\n        jj_gc = 0;\n        for (int i = 0; i < jj_2_rtns.length; i++) {\n          JJCalls c = jj_2_rtns[i];\n          while (c != null) {\n            if (c.gen < jj_gen) c.first = null;\n            c = c.next;\n          }\n        }\n      }\n      return token;\n    }\n    token = oldToken;\n    jj_kind = kind;\n    throw generateParseException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a53a291ad9b1cc050d846b68758c061a55d52734","date":1310437344,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#jj_consume_token(int).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#jj_consume_token(int).mjava","sourceNew":"  private Token jj_consume_token(int kind) throws ParseException {\n    Token oldToken;\n    if ((oldToken = token).next != null) token = token.next;\n    else token = token.next = token_source.getNextToken();\n    jj_ntk = -1;\n    if (token.kind == kind) {\n      jj_gen++;\n      if (++jj_gc > 100) {\n        jj_gc = 0;\n        for (int i = 0; i < jj_2_rtns.length; i++) {\n          JJCalls c = jj_2_rtns[i];\n          while (c != null) {\n            if (c.gen < jj_gen) c.first = null;\n            c = c.next;\n          }\n        }\n      }\n      return token;\n    }\n    token = oldToken;\n    jj_kind = kind;\n    throw generateParseException();\n  }\n\n","sourceOld":"  private Token jj_consume_token(int kind) throws ParseException {\n    Token oldToken;\n    if ((oldToken = token).next != null) token = token.next;\n    else token = token.next = token_source.getNextToken();\n    jj_ntk = -1;\n    if (token.kind == kind) {\n      jj_gen++;\n      if (++jj_gc > 100) {\n        jj_gc = 0;\n        for (int i = 0; i < jj_2_rtns.length; i++) {\n          JJCalls c = jj_2_rtns[i];\n          while (c != null) {\n            if (c.gen < jj_gen) c.first = null;\n            c = c.next;\n          }\n        }\n      }\n      return token;\n    }\n    token = oldToken;\n    jj_kind = kind;\n    throw generateParseException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b3d2f5b0b95e82cde4724fb6e7020cfdd2bb5a07":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a53a291ad9b1cc050d846b68758c061a55d52734":["b3d2f5b0b95e82cde4724fb6e7020cfdd2bb5a07"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a53a291ad9b1cc050d846b68758c061a55d52734"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b3d2f5b0b95e82cde4724fb6e7020cfdd2bb5a07"],"b3d2f5b0b95e82cde4724fb6e7020cfdd2bb5a07":["a53a291ad9b1cc050d846b68758c061a55d52734"],"a53a291ad9b1cc050d846b68758c061a55d52734":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}