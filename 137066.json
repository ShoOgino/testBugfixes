{"path":"solr/core/src/test/org/apache/solr/search/CursorMarkTest#getRandomCollation(SchemaField).mjava","commits":[{"id":"cd3693b696a64d987bf4b3a14399d2105f16b05e","date":1396054865,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/CursorMarkTest#getRandomCollation(SchemaField).mjava","pathOld":"/dev/null","sourceNew":"  private static Object getRandomCollation(SchemaField sf) throws IOException {\n    Object val;\n    Analyzer analyzer = sf.getType().getAnalyzer();\n    String term = TestUtil.randomRealisticUnicodeString(random());\n    try (TokenStream ts = analyzer.tokenStream(\"fake\", term)) {\n      TermToBytesRefAttribute termAtt = ts.addAttribute(TermToBytesRefAttribute.class);\n      val = termAtt.getBytesRef();\n      ts.reset();\n      assertTrue(ts.incrementToken());\n    }\n    return val;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36cb8b995c0446df125de639a5765194acdec67a","date":1396056924,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/CursorMarkTest#getRandomCollation(SchemaField).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/CursorMarkTest#getRandomCollation(SchemaField).mjava","sourceNew":"  private static Object getRandomCollation(SchemaField sf) throws IOException {\n    Object val;\n    Analyzer analyzer = sf.getType().getAnalyzer();\n    String term = TestUtil.randomRealisticUnicodeString(random());\n    try (TokenStream ts = analyzer.tokenStream(\"fake\", term)) {\n      TermToBytesRefAttribute termAtt = ts.addAttribute(TermToBytesRefAttribute.class);\n      val = termAtt.getBytesRef();\n      ts.reset();\n      assertTrue(ts.incrementToken());\n      termAtt.fillBytesRef();\n      assertFalse(ts.incrementToken());\n      ts.end();\n    }\n    return val;\n  }\n\n","sourceOld":"  private static Object getRandomCollation(SchemaField sf) throws IOException {\n    Object val;\n    Analyzer analyzer = sf.getType().getAnalyzer();\n    String term = TestUtil.randomRealisticUnicodeString(random());\n    try (TokenStream ts = analyzer.tokenStream(\"fake\", term)) {\n      TermToBytesRefAttribute termAtt = ts.addAttribute(TermToBytesRefAttribute.class);\n      val = termAtt.getBytesRef();\n      ts.reset();\n      assertTrue(ts.incrementToken());\n    }\n    return val;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/CursorMarkTest#getRandomCollation(SchemaField).mjava","pathOld":"/dev/null","sourceNew":"  private static Object getRandomCollation(SchemaField sf) throws IOException {\n    Object val;\n    Analyzer analyzer = sf.getType().getAnalyzer();\n    String term = TestUtil.randomRealisticUnicodeString(random());\n    try (TokenStream ts = analyzer.tokenStream(\"fake\", term)) {\n      TermToBytesRefAttribute termAtt = ts.addAttribute(TermToBytesRefAttribute.class);\n      val = termAtt.getBytesRef();\n      ts.reset();\n      assertTrue(ts.incrementToken());\n      termAtt.fillBytesRef();\n      assertFalse(ts.incrementToken());\n      ts.end();\n    }\n    return val;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"123698fbe83b595f9e084f0019cd35ab4a01d7f7","date":1399070065,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/CursorMarkTest#getRandomCollation(SchemaField).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/CursorMarkTest#getRandomCollation(SchemaField).mjava","sourceNew":"  private static Object getRandomCollation(SchemaField sf) throws IOException {\n    Object val;\n    Analyzer analyzer = sf.getType().getIndexAnalyzer();\n    String term = TestUtil.randomRealisticUnicodeString(random());\n    try (TokenStream ts = analyzer.tokenStream(\"fake\", term)) {\n      TermToBytesRefAttribute termAtt = ts.addAttribute(TermToBytesRefAttribute.class);\n      val = termAtt.getBytesRef();\n      ts.reset();\n      assertTrue(ts.incrementToken());\n      termAtt.fillBytesRef();\n      assertFalse(ts.incrementToken());\n      ts.end();\n    }\n    return val;\n  }\n\n","sourceOld":"  private static Object getRandomCollation(SchemaField sf) throws IOException {\n    Object val;\n    Analyzer analyzer = sf.getType().getAnalyzer();\n    String term = TestUtil.randomRealisticUnicodeString(random());\n    try (TokenStream ts = analyzer.tokenStream(\"fake\", term)) {\n      TermToBytesRefAttribute termAtt = ts.addAttribute(TermToBytesRefAttribute.class);\n      val = termAtt.getBytesRef();\n      ts.reset();\n      assertTrue(ts.incrementToken());\n      termAtt.fillBytesRef();\n      assertFalse(ts.incrementToken());\n      ts.end();\n    }\n    return val;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"804b857d1066ab5185b3b9101bde41b0b71426ec","date":1435846169,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/CursorMarkTest#getRandomCollation(SchemaField).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/CursorMarkTest#getRandomCollation(SchemaField).mjava","sourceNew":"  private static Object getRandomCollation(SchemaField sf) throws IOException {\n    Object val;\n    Analyzer analyzer = sf.getType().getIndexAnalyzer();\n    String term = TestUtil.randomRealisticUnicodeString(random());\n    try (TokenStream ts = analyzer.tokenStream(\"fake\", term)) {\n      TermToBytesRefAttribute termAtt = ts.addAttribute(TermToBytesRefAttribute.class);\n      ts.reset();\n      assertTrue(ts.incrementToken());\n      val = BytesRef.deepCopyOf(termAtt.getBytesRef());\n      assertFalse(ts.incrementToken());\n      ts.end();\n    }\n    return val;\n  }\n\n","sourceOld":"  private static Object getRandomCollation(SchemaField sf) throws IOException {\n    Object val;\n    Analyzer analyzer = sf.getType().getIndexAnalyzer();\n    String term = TestUtil.randomRealisticUnicodeString(random());\n    try (TokenStream ts = analyzer.tokenStream(\"fake\", term)) {\n      TermToBytesRefAttribute termAtt = ts.addAttribute(TermToBytesRefAttribute.class);\n      val = termAtt.getBytesRef();\n      ts.reset();\n      assertTrue(ts.incrementToken());\n      termAtt.fillBytesRef();\n      assertFalse(ts.incrementToken());\n      ts.end();\n    }\n    return val;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"804b857d1066ab5185b3b9101bde41b0b71426ec":["123698fbe83b595f9e084f0019cd35ab4a01d7f7"],"5eb2511ababf862ea11e10761c70ee560cd84510":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","36cb8b995c0446df125de639a5765194acdec67a"],"123698fbe83b595f9e084f0019cd35ab4a01d7f7":["36cb8b995c0446df125de639a5765194acdec67a"],"36cb8b995c0446df125de639a5765194acdec67a":["cd3693b696a64d987bf4b3a14399d2105f16b05e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd3693b696a64d987bf4b3a14399d2105f16b05e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["804b857d1066ab5185b3b9101bde41b0b71426ec"]},"commit2Childs":{"804b857d1066ab5185b3b9101bde41b0b71426ec":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5eb2511ababf862ea11e10761c70ee560cd84510":[],"123698fbe83b595f9e084f0019cd35ab4a01d7f7":["804b857d1066ab5185b3b9101bde41b0b71426ec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5eb2511ababf862ea11e10761c70ee560cd84510","cd3693b696a64d987bf4b3a14399d2105f16b05e"],"36cb8b995c0446df125de639a5765194acdec67a":["5eb2511ababf862ea11e10761c70ee560cd84510","123698fbe83b595f9e084f0019cd35ab4a01d7f7"],"cd3693b696a64d987bf4b3a14399d2105f16b05e":["36cb8b995c0446df125de639a5765194acdec67a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}