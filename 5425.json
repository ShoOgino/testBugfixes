{"path":"solr/core/src/java/org/apache/solr/handler/SnapPuller#moveAFile(Directory,Directory,String).mjava","commits":[{"id":"dea8e36e8c36d610840396c282a5affe3f722f4e","date":1422297045,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapPuller#moveAFile(Directory,Directory,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#moveAFile(Directory,Directory,String,List[String]).mjava","sourceNew":"  /**\n   * Copy a file by the File#renameTo() method. If it fails, it is considered a failure\n   * <p/>\n   */\n  private boolean moveAFile(Directory tmpIdxDir, Directory indexDir, String fname) {\n    LOG.debug(\"Moving file: {}\", fname);\n    boolean success = false;\n    try {\n      if (slowFileExists(indexDir, fname)) {\n        LOG.info(\"Skipping move file - it already exists:\" + fname);\n        return true;\n      }\n    } catch (IOException e) {\n      SolrException.log(LOG, \"could not check if a file exists\", e);\n      return false;\n    }\n    try {\n      solrCore.getDirectoryFactory().move(tmpIdxDir, indexDir, fname, DirectoryFactory.IOCONTEXT_NO_CACHE);\n      success = true;\n    } catch (IOException e) {\n      SolrException.log(LOG, \"Could not move file\", e);\n    }\n    return success;\n  }\n\n","sourceOld":"  /**\n   * Copy a file by the File#renameTo() method. If it fails, it is considered a failure\n   * <p/>\n   */\n  private boolean moveAFile(Directory tmpIdxDir, Directory indexDir, String fname, List<String> copiedfiles) {\n    LOG.debug(\"Moving file: {}\", fname);\n    boolean success = false;\n    try {\n      if (slowFileExists(indexDir, fname)) {\n        LOG.info(\"Skipping move file - it already exists:\" + fname);\n        return true;\n      }\n    } catch (IOException e) {\n      SolrException.log(LOG, \"could not check if a file exists\", e);\n      return false;\n    }\n    try {\n      solrCore.getDirectoryFactory().move(tmpIdxDir, indexDir, fname, DirectoryFactory.IOCONTEXT_NO_CACHE);\n      success = true;\n    } catch (IOException e) {\n      SolrException.log(LOG, \"Could not move file\", e);\n    }\n    return success;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20f6b7cff3771384f27af0f059795d7e64aff6b9","date":1425498309,"type":5,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher#moveAFile(Directory,Directory,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#moveAFile(Directory,Directory,String).mjava","sourceNew":"  /**\n   * Copy a file by the File#renameTo() method. If it fails, it is considered a failure\n   * <p/>\n   */\n  private boolean moveAFile(Directory tmpIdxDir, Directory indexDir, String fname) {\n    LOG.debug(\"Moving file: {}\", fname);\n    boolean success = false;\n    try {\n      if (slowFileExists(indexDir, fname)) {\n        LOG.info(\"Skipping move file - it already exists:\" + fname);\n        return true;\n      }\n    } catch (IOException e) {\n      SolrException.log(LOG, \"could not check if a file exists\", e);\n      return false;\n    }\n    try {\n      solrCore.getDirectoryFactory().move(tmpIdxDir, indexDir, fname, DirectoryFactory.IOCONTEXT_NO_CACHE);\n      success = true;\n    } catch (IOException e) {\n      SolrException.log(LOG, \"Could not move file\", e);\n    }\n    return success;\n  }\n\n","sourceOld":"  /**\n   * Copy a file by the File#renameTo() method. If it fails, it is considered a failure\n   * <p/>\n   */\n  private boolean moveAFile(Directory tmpIdxDir, Directory indexDir, String fname) {\n    LOG.debug(\"Moving file: {}\", fname);\n    boolean success = false;\n    try {\n      if (slowFileExists(indexDir, fname)) {\n        LOG.info(\"Skipping move file - it already exists:\" + fname);\n        return true;\n      }\n    } catch (IOException e) {\n      SolrException.log(LOG, \"could not check if a file exists\", e);\n      return false;\n    }\n    try {\n      solrCore.getDirectoryFactory().move(tmpIdxDir, indexDir, fname, DirectoryFactory.IOCONTEXT_NO_CACHE);\n      success = true;\n    } catch (IOException e) {\n      SolrException.log(LOG, \"Could not move file\", e);\n    }\n    return success;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":5,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher#moveAFile(Directory,Directory,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#moveAFile(Directory,Directory,String).mjava","sourceNew":"  /**\n   * Copy a file by the File#renameTo() method. If it fails, it is considered a failure\n   * <p/>\n   */\n  private boolean moveAFile(Directory tmpIdxDir, Directory indexDir, String fname) {\n    LOG.debug(\"Moving file: {}\", fname);\n    boolean success = false;\n    try {\n      if (slowFileExists(indexDir, fname)) {\n        LOG.info(\"Skipping move file - it already exists:\" + fname);\n        return true;\n      }\n    } catch (IOException e) {\n      SolrException.log(LOG, \"could not check if a file exists\", e);\n      return false;\n    }\n    try {\n      solrCore.getDirectoryFactory().move(tmpIdxDir, indexDir, fname, DirectoryFactory.IOCONTEXT_NO_CACHE);\n      success = true;\n    } catch (IOException e) {\n      SolrException.log(LOG, \"Could not move file\", e);\n    }\n    return success;\n  }\n\n","sourceOld":"  /**\n   * Copy a file by the File#renameTo() method. If it fails, it is considered a failure\n   * <p/>\n   */\n  private boolean moveAFile(Directory tmpIdxDir, Directory indexDir, String fname) {\n    LOG.debug(\"Moving file: {}\", fname);\n    boolean success = false;\n    try {\n      if (slowFileExists(indexDir, fname)) {\n        LOG.info(\"Skipping move file - it already exists:\" + fname);\n        return true;\n      }\n    } catch (IOException e) {\n      SolrException.log(LOG, \"could not check if a file exists\", e);\n      return false;\n    }\n    try {\n      solrCore.getDirectoryFactory().move(tmpIdxDir, indexDir, fname, DirectoryFactory.IOCONTEXT_NO_CACHE);\n      success = true;\n    } catch (IOException e) {\n      SolrException.log(LOG, \"Could not move file\", e);\n    }\n    return success;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["dea8e36e8c36d610840396c282a5affe3f722f4e","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["dea8e36e8c36d610840396c282a5affe3f722f4e"],"dea8e36e8c36d610840396c282a5affe3f722f4e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20f6b7cff3771384f27af0f059795d7e64aff6b9"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"dea8e36e8c36d610840396c282a5affe3f722f4e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dea8e36e8c36d610840396c282a5affe3f722f4e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}