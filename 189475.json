{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/SetValueEvaluator#doWork(Object...).mjava","commits":[{"id":"c342c287203eb8daa79003afd740654bc7baa7f9","date":1527528566,"type":0,"author":"Joel","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/SetValueEvaluator#doWork(Object...).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object doWork(Object... values) throws IOException {\n    if(values[0] instanceof Tuple) {\n      Tuple tuple = (Tuple)values[0];\n      String key = (String)values[1];\n      Object value = values[2];\n      if(value instanceof String) {\n        value = ((String)value).replace(\"\\\"\", \"\");\n      }\n      key = key.replace(\"\\\"\", \"\");\n      Map map = new HashMap();\n      map.putAll(tuple.fields);\n      map.put(key, value);\n      return new Tuple(map);\n    } else {\n      throw new IOException(\"The setValue function expects a Tuple as the first parameter\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23b14fc1cb7939c2aad1d3a40f6282dee0bfda2e","date":1571071547,"type":3,"author":"Koen De Groote","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/SetValueEvaluator#doWork(Object...).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/SetValueEvaluator#doWork(Object...).mjava","sourceNew":"  @Override\n  public Object doWork(Object... values) throws IOException {\n    if(values[0] instanceof Tuple) {\n      Tuple tuple = (Tuple)values[0];\n      String key = (String)values[1];\n      Object value = values[2];\n      if(value instanceof String) {\n        value = ((String)value).replace(\"\\\"\", \"\");\n      }\n      key = key.replace(\"\\\"\", \"\");\n      Map map = new HashMap(tuple.fields);\n      map.put(key, value);\n      return new Tuple(map);\n    } else {\n      throw new IOException(\"The setValue function expects a Tuple as the first parameter\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object doWork(Object... values) throws IOException {\n    if(values[0] instanceof Tuple) {\n      Tuple tuple = (Tuple)values[0];\n      String key = (String)values[1];\n      Object value = values[2];\n      if(value instanceof String) {\n        value = ((String)value).replace(\"\\\"\", \"\");\n      }\n      key = key.replace(\"\\\"\", \"\");\n      Map map = new HashMap();\n      map.putAll(tuple.fields);\n      map.put(key, value);\n      return new Tuple(map);\n    } else {\n      throw new IOException(\"The setValue function expects a Tuple as the first parameter\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/SetValueEvaluator#doWork(Object...).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/SetValueEvaluator#doWork(Object...).mjava","sourceNew":"  @Override\n  public Object doWork(Object... values) throws IOException {\n    if(values[0] instanceof Tuple) {\n      Tuple tuple = (Tuple)values[0];\n      String key = (String)values[1];\n      Object value = values[2];\n      if(value instanceof String) {\n        value = ((String)value).replace(\"\\\"\", \"\");\n      }\n      key = key.replace(\"\\\"\", \"\");\n      Map map = new HashMap(tuple.fields);\n      map.put(key, value);\n      return new Tuple(map);\n    } else {\n      throw new IOException(\"The setValue function expects a Tuple as the first parameter\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object doWork(Object... values) throws IOException {\n    if(values[0] instanceof Tuple) {\n      Tuple tuple = (Tuple)values[0];\n      String key = (String)values[1];\n      Object value = values[2];\n      if(value instanceof String) {\n        value = ((String)value).replace(\"\\\"\", \"\");\n      }\n      key = key.replace(\"\\\"\", \"\");\n      Map map = new HashMap();\n      map.putAll(tuple.fields);\n      map.put(key, value);\n      return new Tuple(map);\n    } else {\n      throw new IOException(\"The setValue function expects a Tuple as the first parameter\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885","date":1591579911,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/SetValueEvaluator#doWork(Object...).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/SetValueEvaluator#doWork(Object...).mjava","sourceNew":"  @Override\n  @SuppressWarnings({\"unchecked\"})\n  public Object doWork(Object... values) throws IOException {\n    if(values[0] instanceof Tuple) {\n      Tuple tuple = (Tuple)values[0];\n      String key = (String)values[1];\n      Object value = values[2];\n      if(value instanceof String) {\n        value = ((String)value).replace(\"\\\"\", \"\");\n      }\n      key = key.replace(\"\\\"\", \"\");\n      @SuppressWarnings({\"rawtypes\"})\n      Map map = new HashMap(tuple.fields);\n      map.put(key, value);\n      return new Tuple(map);\n    } else {\n      throw new IOException(\"The setValue function expects a Tuple as the first parameter\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object doWork(Object... values) throws IOException {\n    if(values[0] instanceof Tuple) {\n      Tuple tuple = (Tuple)values[0];\n      String key = (String)values[1];\n      Object value = values[2];\n      if(value instanceof String) {\n        value = ((String)value).replace(\"\\\"\", \"\");\n      }\n      key = key.replace(\"\\\"\", \"\");\n      Map map = new HashMap(tuple.fields);\n      map.put(key, value);\n      return new Tuple(map);\n    } else {\n      throw new IOException(\"The setValue function expects a Tuple as the first parameter\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"804a8d5358fe7b7563b85ee7838714d720b89272","date":1591624987,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/SetValueEvaluator#doWork(Object...).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/SetValueEvaluator#doWork(Object...).mjava","sourceNew":"  @Override\n  public Object doWork(Object... values) throws IOException {\n    if(values[0] instanceof Tuple) {\n      Tuple tuple = (Tuple)values[0];\n      String key = (String)values[1];\n      Object value = values[2];\n      if(value instanceof String) {\n        value = ((String)value).replace(\"\\\"\", \"\");\n      }\n      key = key.replace(\"\\\"\", \"\");\n      Tuple newTuple = tuple.clone();\n      newTuple.put(key, value);\n      return newTuple;\n    } else {\n      throw new IOException(\"The setValue function expects a Tuple as the first parameter\");\n    }\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings({\"unchecked\"})\n  public Object doWork(Object... values) throws IOException {\n    if(values[0] instanceof Tuple) {\n      Tuple tuple = (Tuple)values[0];\n      String key = (String)values[1];\n      Object value = values[2];\n      if(value instanceof String) {\n        value = ((String)value).replace(\"\\\"\", \"\");\n      }\n      key = key.replace(\"\\\"\", \"\");\n      @SuppressWarnings({\"rawtypes\"})\n      Map map = new HashMap(tuple.fields);\n      map.put(key, value);\n      return new Tuple(map);\n    } else {\n      throw new IOException(\"The setValue function expects a Tuple as the first parameter\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"23b14fc1cb7939c2aad1d3a40f6282dee0bfda2e":["c342c287203eb8daa79003afd740654bc7baa7f9"],"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885":["23b14fc1cb7939c2aad1d3a40f6282dee0bfda2e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c342c287203eb8daa79003afd740654bc7baa7f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"804a8d5358fe7b7563b85ee7838714d720b89272":["df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["804a8d5358fe7b7563b85ee7838714d720b89272"],"b0b597c65628ca9e73913a07e81691f8229bae35":["c342c287203eb8daa79003afd740654bc7baa7f9","23b14fc1cb7939c2aad1d3a40f6282dee0bfda2e"]},"commit2Childs":{"23b14fc1cb7939c2aad1d3a40f6282dee0bfda2e":["df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885","b0b597c65628ca9e73913a07e81691f8229bae35"],"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885":["804a8d5358fe7b7563b85ee7838714d720b89272"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c342c287203eb8daa79003afd740654bc7baa7f9"],"c342c287203eb8daa79003afd740654bc7baa7f9":["23b14fc1cb7939c2aad1d3a40f6282dee0bfda2e","b0b597c65628ca9e73913a07e81691f8229bae35"],"804a8d5358fe7b7563b85ee7838714d720b89272":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}