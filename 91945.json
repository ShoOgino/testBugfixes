{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SqlStream#constructStream().mjava","commits":[{"id":"37ba6c2d18fe05b92cb264c3d67e4cae76f75136","date":1495126259,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SqlStream#constructStream().mjava","pathOld":"/dev/null","sourceNew":"  protected void constructStream() throws IOException {\n    try {\n\n      List<String> shardUrls = getShards(this.zkHost, this.collection, this.streamContext);\n      Collections.shuffle(shardUrls);\n      String url  = shardUrls.get(0);\n      ModifiableSolrParams mParams = new ModifiableSolrParams(params);\n      mParams.add(CommonParams.QT, \"/sql\");\n      this.tupleStream = new SolrStream(url, mParams);\n      if(streamContext != null) {\n        tupleStream.setStreamContext(streamContext);\n      }\n    } catch (Exception e) {\n      throw new IOException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fd1da02e42caa0e9ed75bd0be810e930e5ec414","date":1495126259,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SqlStream#constructStream().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SqlStream#constructStream().mjava","sourceNew":"  protected void constructStream() throws IOException {\n    try {\n\n      List<String> shardUrls = getShards(this.zkHost, this.collection, this.streamContext);\n      Collections.shuffle(shardUrls, new Random());\n      String url  = shardUrls.get(0);\n      ModifiableSolrParams mParams = new ModifiableSolrParams(params);\n      mParams.add(CommonParams.QT, \"/sql\");\n      this.tupleStream = new SolrStream(url, mParams);\n      if(streamContext != null) {\n        tupleStream.setStreamContext(streamContext);\n      }\n    } catch (Exception e) {\n      throw new IOException(e);\n    }\n  }\n\n","sourceOld":"  protected void constructStream() throws IOException {\n    try {\n\n      List<String> shardUrls = getShards(this.zkHost, this.collection, this.streamContext);\n      Collections.shuffle(shardUrls);\n      String url  = shardUrls.get(0);\n      ModifiableSolrParams mParams = new ModifiableSolrParams(params);\n      mParams.add(CommonParams.QT, \"/sql\");\n      this.tupleStream = new SolrStream(url, mParams);\n      if(streamContext != null) {\n        tupleStream.setStreamContext(streamContext);\n      }\n    } catch (Exception e) {\n      throw new IOException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SqlStream#constructStream().mjava","pathOld":"/dev/null","sourceNew":"  protected void constructStream() throws IOException {\n    try {\n\n      List<String> shardUrls = getShards(this.zkHost, this.collection, this.streamContext);\n      Collections.shuffle(shardUrls, new Random());\n      String url  = shardUrls.get(0);\n      ModifiableSolrParams mParams = new ModifiableSolrParams(params);\n      mParams.add(CommonParams.QT, \"/sql\");\n      this.tupleStream = new SolrStream(url, mParams);\n      if(streamContext != null) {\n        tupleStream.setStreamContext(streamContext);\n      }\n    } catch (Exception e) {\n      throw new IOException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70d9c44f68e848648da304352cf7c045c33148f4","date":1557331987,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SqlStream#constructStream().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/SqlStream#constructStream().mjava","sourceNew":"  protected void constructStream() throws IOException {\n    try {\n\n      List<String> shardUrls = getShards(this.zkHost, this.collection, this.streamContext);\n      Collections.shuffle(shardUrls, new Random());\n      String url  = shardUrls.get(0);\n      ModifiableSolrParams mParams = new ModifiableSolrParams(params);\n      mParams.add(CommonParams.QT, \"/sql\");\n      this.tupleStream = new SolrStream(url, mParams);\n      if(streamContext != null) {\n        tupleStream.setStreamContext(streamContext);\n        if(streamContext.isLocal()) {\n          mParams.add(\"distrib\", \"false\");\n        }\n      }\n    } catch (Exception e) {\n      throw new IOException(e);\n    }\n  }\n\n","sourceOld":"  protected void constructStream() throws IOException {\n    try {\n\n      List<String> shardUrls = getShards(this.zkHost, this.collection, this.streamContext);\n      Collections.shuffle(shardUrls, new Random());\n      String url  = shardUrls.get(0);\n      ModifiableSolrParams mParams = new ModifiableSolrParams(params);\n      mParams.add(CommonParams.QT, \"/sql\");\n      this.tupleStream = new SolrStream(url, mParams);\n      if(streamContext != null) {\n        tupleStream.setStreamContext(streamContext);\n      }\n    } catch (Exception e) {\n      throw new IOException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9fd1da02e42caa0e9ed75bd0be810e930e5ec414"],"9fd1da02e42caa0e9ed75bd0be810e930e5ec414":["37ba6c2d18fe05b92cb264c3d67e4cae76f75136"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"37ba6c2d18fe05b92cb264c3d67e4cae76f75136":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["70d9c44f68e848648da304352cf7c045c33148f4"],"70d9c44f68e848648da304352cf7c045c33148f4":["9fd1da02e42caa0e9ed75bd0be810e930e5ec414"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"9fd1da02e42caa0e9ed75bd0be810e930e5ec414":["e9017cf144952056066919f1ebc7897ff9bd71b1","70d9c44f68e848648da304352cf7c045c33148f4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","37ba6c2d18fe05b92cb264c3d67e4cae76f75136"],"37ba6c2d18fe05b92cb264c3d67e4cae76f75136":["9fd1da02e42caa0e9ed75bd0be810e930e5ec414"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"70d9c44f68e848648da304352cf7c045c33148f4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}