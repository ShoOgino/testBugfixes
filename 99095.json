{"path":"src/java/org/apache/solr/handler/XppUpdateRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"2b27e1327d2a2f9ea6abc93e203d0219091f09f3","date":1183228826,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/XppUpdateRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/XmlUpdateRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    Iterable<ContentStream> streams = req.getContentStreams();\n    if( streams == null ) {\n      if( !RequestHandlerUtils.handleCommit(req, rsp, false) ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"missing content stream\" );\n      }\n      return;\n    }\n\n    // Cycle through each stream\n    for( ContentStream stream : req.getContentStreams() ) {\n      Reader reader = stream.getReader();\n      try {\n        NamedList out = this.update( reader );\n        // TODO -- return useful info.  \n        // rsp.add( \"update\", out );\n      }\n      finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n    \n    // perhaps commit when we are done\n    RequestHandlerUtils.handleCommit(req, rsp, false);\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    Iterable<ContentStream> streams = req.getContentStreams();\n    if( streams == null ) {\n      if( !RequestHandlerUtils.handleCommit(req, rsp, false) ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"missing content stream\" );\n      }\n      return;\n    }\n\n    // Cycle through each stream\n    for( ContentStream stream : req.getContentStreams() ) {\n      Reader reader = stream.getReader();\n      try {\n        NamedList out = this.update( reader );\n        // TODO -- return useful info.  \n        // rsp.add( \"update\", out );\n      }\n      finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n    \n    // perhaps commit when we are done\n    RequestHandlerUtils.handleCommit(req, rsp, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5885124115570b7d9ef89b27bc02cbbf0fc9b7a7","date":1198778275,"type":4,"author":"Ryan McKinley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/handler/XppUpdateRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    Iterable<ContentStream> streams = req.getContentStreams();\n    if( streams == null ) {\n      if( !RequestHandlerUtils.handleCommit(req, rsp, false) ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"missing content stream\" );\n      }\n      return;\n    }\n\n    // Cycle through each stream\n    for( ContentStream stream : req.getContentStreams() ) {\n      Reader reader = stream.getReader();\n      try {\n        NamedList out = this.update( reader );\n        // TODO -- return useful info.  \n        // rsp.add( \"update\", out );\n      }\n      finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n    \n    // perhaps commit when we are done\n    RequestHandlerUtils.handleCommit(req, rsp, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"2b27e1327d2a2f9ea6abc93e203d0219091f09f3":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"5885124115570b7d9ef89b27bc02cbbf0fc9b7a7":["2b27e1327d2a2f9ea6abc93e203d0219091f09f3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["2b27e1327d2a2f9ea6abc93e203d0219091f09f3"],"2b27e1327d2a2f9ea6abc93e203d0219091f09f3":["5885124115570b7d9ef89b27bc02cbbf0fc9b7a7"],"5885124115570b7d9ef89b27bc02cbbf0fc9b7a7":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5885124115570b7d9ef89b27bc02cbbf0fc9b7a7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}