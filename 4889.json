{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Dictionary.DoubleASCIIFlagParsingStrategy#parseFlags(String).mjava","commits":[{"id":"c214bc712d04c78c4d434119d560d0a4dd2fce4f","date":1393216863,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Dictionary.DoubleASCIIFlagParsingStrategy#parseFlags(String).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public char[] parseFlags(String rawFlags) {\n      if (rawFlags.length() == 0) {\n        return new char[0];\n      }\n\n      StringBuilder builder = new StringBuilder();\n      for (int i = 0; i < rawFlags.length(); i+=2) {\n        char cookedFlag = (char) ((int) rawFlags.charAt(i) + (int) rawFlags.charAt(i + 1));\n        builder.append(cookedFlag);\n      }\n      \n      char flags[] = new char[builder.length()];\n      builder.getChars(0, builder.length(), flags, 0);\n      return flags;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0356bd2218e302f7f19dee9ab659b404bdac798c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e","date":1393532367,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell/Dictionary.DoubleASCIIFlagParsingStrategy#parseFlags(String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/hunspell2/Dictionary.DoubleASCIIFlagParsingStrategy#parseFlags(String).mjava","sourceNew":"    @Override\n    public char[] parseFlags(String rawFlags) {\n      if (rawFlags.length() == 0) {\n        return new char[0];\n      }\n\n      StringBuilder builder = new StringBuilder();\n      for (int i = 0; i < rawFlags.length(); i+=2) {\n        char cookedFlag = (char) ((int) rawFlags.charAt(i) + (int) rawFlags.charAt(i + 1));\n        builder.append(cookedFlag);\n      }\n      \n      char flags[] = new char[builder.length()];\n      builder.getChars(0, builder.length(), flags, 0);\n      return flags;\n    }\n\n","sourceOld":"    @Override\n    public char[] parseFlags(String rawFlags) {\n      if (rawFlags.length() == 0) {\n        return new char[0];\n      }\n\n      StringBuilder builder = new StringBuilder();\n      for (int i = 0; i < rawFlags.length(); i+=2) {\n        char cookedFlag = (char) ((int) rawFlags.charAt(i) + (int) rawFlags.charAt(i + 1));\n        builder.append(cookedFlag);\n      }\n      \n      char flags[] = new char[builder.length()];\n      builder.getChars(0, builder.length(), flags, 0);\n      return flags;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e":["c214bc712d04c78c4d434119d560d0a4dd2fce4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c214bc712d04c78c4d434119d560d0a4dd2fce4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c214bc712d04c78c4d434119d560d0a4dd2fce4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c214bc712d04c78c4d434119d560d0a4dd2fce4f":["dc3f094cafa4a87b4066e1d6710fa4e6afe6260e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["dc3f094cafa4a87b4066e1d6710fa4e6afe6260e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}