{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#reset(int,long).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#reset(int,long).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#reset(int,long).mjava","sourceNew":"    public void reset(int numTerms, long tvfFPStart) throws IOException {\n      this.numTerms = numTerms;\n      nextTerm = 0;\n      tvf.seek(tvfFPStart);\n      final byte bits = tvf.readByte();\n      storePositions = (bits & STORE_POSITIONS_WITH_TERMVECTOR) != 0;\n      storeOffsets = (bits & STORE_OFFSET_WITH_TERMVECTOR) != 0;\n      tvfFP = 1+tvfFPStart;\n      positions = null;\n      startOffsets = null;\n      endOffsets = null;\n    }\n\n","sourceOld":"    public void reset(int numTerms, long tvfFPStart) throws IOException {\n      this.numTerms = numTerms;\n      nextTerm = 0;\n      tvf.seek(tvfFPStart);\n      final byte bits = tvf.readByte();\n      storePositions = (bits & STORE_POSITIONS_WITH_TERMVECTOR) != 0;\n      storeOffsets = (bits & STORE_OFFSET_WITH_TERMVECTOR) != 0;\n      tvfFP = 1+tvfFPStart;\n      positions = null;\n      startOffsets = null;\n      endOffsets = null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5699a2da08aaf5a165f2ceefe7cf8f5c70a12efc","date":1344608180,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#reset(int,long,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#reset(int,long).mjava","sourceNew":"    public void reset(int numTerms, long tvfFPStart, boolean storePositions, boolean storeOffsets) throws IOException {\n      this.numTerms = numTerms;\n      this.storePositions = storePositions;\n      this.storeOffsets = storeOffsets;\n      nextTerm = 0;\n      tvf.seek(tvfFPStart);\n      tvfFP = 1+tvfFPStart;\n      positions = null;\n      startOffsets = null;\n      endOffsets = null;\n    }\n\n","sourceOld":"    public void reset(int numTerms, long tvfFPStart) throws IOException {\n      this.numTerms = numTerms;\n      nextTerm = 0;\n      tvf.seek(tvfFPStart);\n      final byte bits = tvf.readByte();\n      storePositions = (bits & STORE_POSITIONS_WITH_TERMVECTOR) != 0;\n      storeOffsets = (bits & STORE_OFFSET_WITH_TERMVECTOR) != 0;\n      tvfFP = 1+tvfFPStart;\n      positions = null;\n      startOffsets = null;\n      endOffsets = null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#reset(int,long,boolean,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#reset(int,long).mjava","sourceNew":"    public void reset(int numTerms, long tvfFPStart, boolean storePositions, boolean storeOffsets, boolean storePayloads) throws IOException {\n      this.numTerms = numTerms;\n      this.storePositions = storePositions;\n      this.storeOffsets = storeOffsets;\n      this.storePayloads = storePayloads;\n      nextTerm = 0;\n      tvf.seek(tvfFPStart);\n      tvfFP = 1+tvfFPStart;\n      positions = null;\n      startOffsets = null;\n      endOffsets = null;\n      payloadOffsets = null;\n      payloadData = null;\n      lastPayloadLength = -1;\n    }\n\n","sourceOld":"    public void reset(int numTerms, long tvfFPStart) throws IOException {\n      this.numTerms = numTerms;\n      nextTerm = 0;\n      tvf.seek(tvfFPStart);\n      final byte bits = tvf.readByte();\n      storePositions = (bits & STORE_POSITIONS_WITH_TERMVECTOR) != 0;\n      storeOffsets = (bits & STORE_OFFSET_WITH_TERMVECTOR) != 0;\n      tvfFP = 1+tvfFPStart;\n      positions = null;\n      startOffsets = null;\n      endOffsets = null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#reset(int,long,boolean,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsReader.TVTermsEnum#reset(int,long).mjava","sourceNew":"    public void reset(int numTerms, long tvfFPStart, boolean storePositions, boolean storeOffsets, boolean storePayloads) throws IOException {\n      this.numTerms = numTerms;\n      this.storePositions = storePositions;\n      this.storeOffsets = storeOffsets;\n      this.storePayloads = storePayloads;\n      nextTerm = 0;\n      tvf.seek(tvfFPStart);\n      tvfFP = 1+tvfFPStart;\n      positions = null;\n      startOffsets = null;\n      endOffsets = null;\n      payloadOffsets = null;\n      payloadData = null;\n      lastPayloadLength = -1;\n    }\n\n","sourceOld":"    public void reset(int numTerms, long tvfFPStart) throws IOException {\n      this.numTerms = numTerms;\n      nextTerm = 0;\n      tvf.seek(tvfFPStart);\n      final byte bits = tvf.readByte();\n      storePositions = (bits & STORE_POSITIONS_WITH_TERMVECTOR) != 0;\n      storeOffsets = (bits & STORE_OFFSET_WITH_TERMVECTOR) != 0;\n      tvfFP = 1+tvfFPStart;\n      positions = null;\n      startOffsets = null;\n      endOffsets = null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","5699a2da08aaf5a165f2ceefe7cf8f5c70a12efc"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5699a2da08aaf5a165f2ceefe7cf8f5c70a12efc":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","5699a2da08aaf5a165f2ceefe7cf8f5c70a12efc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5699a2da08aaf5a165f2ceefe7cf8f5c70a12efc"]},"commit2Childs":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c7869f64c874ebf7f317d22c00baf2b6857797a6","5699a2da08aaf5a165f2ceefe7cf8f5c70a12efc","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5699a2da08aaf5a165f2ceefe7cf8f5c70a12efc":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}