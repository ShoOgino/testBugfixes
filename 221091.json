{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPathTest#testLUCEN8696().mjava","commits":[{"id":"02879fbaa002d36979cec07beff9b5ee02ab35c8","date":1551083615,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPathTest#testLUCEN8696().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/LUCENE-8696\")\n  public void testLUCEN8696() {\n    GeoPoint[] points = new GeoPoint[4];\n    points[0] = new GeoPoint(PlanetModel.WGS84, 2.4457272005608357E-47, 0.017453291479645996);\n    points[1] = new GeoPoint(PlanetModel.WGS84, 2.4457272005608357E-47, 0.8952476719156919);\n    points[2] = new GeoPoint(PlanetModel.WGS84, 2.4457272005608357E-47, 0.6491968536639036);\n    points[3] = new GeoPoint(PlanetModel.WGS84, -0.7718789008737459, 0.9236607495528212);\n    GeoPath path  = GeoPathFactory.makeGeoPath(PlanetModel.WGS84, 1.3439035240356338, points);\n    GeoPoint check = new GeoPoint(0.02071783020158524, 0.9523290535474472, 0.30699177256064203);\n    // Construct a bounding box from the shape\n    XYZBounds bounds = new XYZBounds();\n    path.getBounds(bounds);\n    XYZSolid solid = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds);\n    \n    // If point is within solid, it must be within shape\n    assertTrue(solid.isWithin(check));\n    assertTrue(path.isWithin(check));\n\n    //GeoPoint surfaceCheck = PlanetModel.WGS84.createSurfacePoint(check);\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc92bd783e2091ecedaae7bc4ac0683032cc7253","date":1551085556,"type":5,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPathTest#testLUCENE8696().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPathTest#testLUCEN8696().mjava","sourceNew":"  @Test\n  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/LUCENE-8696\")\n  public void testLUCENE8696() {\n    GeoPoint[] points = new GeoPoint[4];\n    points[0] = new GeoPoint(PlanetModel.WGS84, 2.4457272005608357E-47, 0.017453291479645996);\n    points[1] = new GeoPoint(PlanetModel.WGS84, 2.4457272005608357E-47, 0.8952476719156919);\n    points[2] = new GeoPoint(PlanetModel.WGS84, 2.4457272005608357E-47, 0.6491968536639036);\n    points[3] = new GeoPoint(PlanetModel.WGS84, -0.7718789008737459, 0.9236607495528212);\n    GeoPath path  = GeoPathFactory.makeGeoPath(PlanetModel.WGS84, 1.3439035240356338, points);\n    GeoPoint check = new GeoPoint(0.02071783020158524, 0.9523290535474472, 0.30699177256064203);\n    /*\n   [junit4]   1>   cycle: cell=12502 parentCellID=12500 x: -1658490249 TO 2147483041, y: 2042111310 TO 2147483041, z: -2140282940 TO 2140277970, splits: 1 queue.size()=1\n   [junit4]   1>     minx=-0.7731590077686981 maxx=1.0011188539924791 miny=0.9519964046486451 maxy=1.0011188539924791 minz=-0.9977622932859775 maxz=0.9977599768255027\n   [junit4]   1>     GeoArea.CONTAINS: now addAll\n    */\n    XYZSolid solid = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84,\n      -0.7731590077686981, 1.0011188539924791,\n      0.9519964046486451, 1.0011188539924791,\n      -0.9977622932859775, 0.9977599768255027);\n    // Verify that the point is within it\n    assertTrue(solid.isWithin(check));\n    // Check the relationship\n    int relationship = solid.getRelationship(path);\n    assertTrue(relationship == GeoArea.CONTAINS);\n    // If relationship is CONTAINS then any point in the solid must also be within the path\n    // If point is within solid, it must be within shape\n    assertTrue(path.isWithin(check));\n\n    //GeoPoint surfaceCheck = PlanetModel.WGS84.createSurfacePoint(check);\n    \n  }\n\n","sourceOld":"  @Test\n  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/LUCENE-8696\")\n  public void testLUCEN8696() {\n    GeoPoint[] points = new GeoPoint[4];\n    points[0] = new GeoPoint(PlanetModel.WGS84, 2.4457272005608357E-47, 0.017453291479645996);\n    points[1] = new GeoPoint(PlanetModel.WGS84, 2.4457272005608357E-47, 0.8952476719156919);\n    points[2] = new GeoPoint(PlanetModel.WGS84, 2.4457272005608357E-47, 0.6491968536639036);\n    points[3] = new GeoPoint(PlanetModel.WGS84, -0.7718789008737459, 0.9236607495528212);\n    GeoPath path  = GeoPathFactory.makeGeoPath(PlanetModel.WGS84, 1.3439035240356338, points);\n    GeoPoint check = new GeoPoint(0.02071783020158524, 0.9523290535474472, 0.30699177256064203);\n    // Construct a bounding box from the shape\n    XYZBounds bounds = new XYZBounds();\n    path.getBounds(bounds);\n    XYZSolid solid = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds);\n    \n    // If point is within solid, it must be within shape\n    assertTrue(solid.isWithin(check));\n    assertTrue(path.isWithin(check));\n\n    //GeoPoint surfaceCheck = PlanetModel.WGS84.createSurfacePoint(check);\n    \n  }\n\n","bugFix":null,"bugIntro":["16ea2fdbebde471a600f8884a86a2ac728ead27f"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"bc92bd783e2091ecedaae7bc4ac0683032cc7253":["02879fbaa002d36979cec07beff9b5ee02ab35c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"02879fbaa002d36979cec07beff9b5ee02ab35c8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bc92bd783e2091ecedaae7bc4ac0683032cc7253"]},"commit2Childs":{"bc92bd783e2091ecedaae7bc4ac0683032cc7253":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["02879fbaa002d36979cec07beff9b5ee02ab35c8"],"02879fbaa002d36979cec07beff9b5ee02ab35c8":["bc92bd783e2091ecedaae7bc4ac0683032cc7253"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}