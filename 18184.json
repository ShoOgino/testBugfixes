{"path":"src/java/org/apache/lucene/store/MMapDirectory#openInput(String,int).mjava","commits":[{"id":"f67425a2b6c29f8ae10c96351f190a6b85f1cebc","date":1186784435,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/MMapDirectory#openInput(String,int).mjava","pathOld":"/dev/null","sourceNew":"  public IndexInput openInput(String name, int bufferSize) throws IOException {\n    return openInput(name);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02","date":1243677645,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/MMapDirectory#openInput(String,int).mjava","pathOld":"src/java/org/apache/lucene/store/MMapDirectory#openInput(String,int).mjava","sourceNew":"  public IndexInput openInput(String name, int bufferSize) throws IOException {\n    ensureOpen();\n    File f =  new File(getFile(), name);\n    RandomAccessFile raf = new RandomAccessFile(f, \"r\");\n    try {\n      return (raf.length() <= MAX_BBUF)\n             ? (IndexInput) new MMapIndexInput(raf)\n             : (IndexInput) new MultiMMapIndexInput(raf, MAX_BBUF);\n    } finally {\n      raf.close();\n    }\n  }\n\n","sourceOld":"  public IndexInput openInput(String name, int bufferSize) throws IOException {\n    return openInput(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"416d032f85b7ea8efc272f86ba46bc460589aff7","date":1243881250,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/MMapDirectory#openInput(String,int).mjava","pathOld":"src/java/org/apache/lucene/store/MMapDirectory#openInput(String,int).mjava","sourceNew":"  /** Creates an IndexInput for the file with the given name. */\n  public IndexInput openInput(String name, int bufferSize) throws IOException {\n    ensureOpen();\n    File f =  new File(getFile(), name);\n    RandomAccessFile raf = new RandomAccessFile(f, \"r\");\n    try {\n      return (raf.length() <= MAX_BBUF)\n             ? (IndexInput) new MMapIndexInput(raf)\n             : (IndexInput) new MultiMMapIndexInput(raf, MAX_BBUF);\n    } finally {\n      raf.close();\n    }\n  }\n\n","sourceOld":"  public IndexInput openInput(String name, int bufferSize) throws IOException {\n    ensureOpen();\n    File f =  new File(getFile(), name);\n    RandomAccessFile raf = new RandomAccessFile(f, \"r\");\n    try {\n      return (raf.length() <= MAX_BBUF)\n             ? (IndexInput) new MMapIndexInput(raf)\n             : (IndexInput) new MultiMMapIndexInput(raf, MAX_BBUF);\n    } finally {\n      raf.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a0b43ea2919ba5260503927e2e05a7506d36571","date":1247563831,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/MMapDirectory#openInput(String,int).mjava","pathOld":"src/java/org/apache/lucene/store/MMapDirectory#openInput(String,int).mjava","sourceNew":"  /** Creates an IndexInput for the file with the given name. */\n  public IndexInput openInput(String name, int bufferSize) throws IOException {\n    ensureOpen();\n    File f =  new File(getFile(), name);\n    RandomAccessFile raf = new RandomAccessFile(f, \"r\");\n    try {\n      return (raf.length() <= (long) maxBBuf)\n             ? (IndexInput) new MMapIndexInput(raf)\n             : (IndexInput) new MultiMMapIndexInput(raf, maxBBuf);\n    } finally {\n      raf.close();\n    }\n  }\n\n","sourceOld":"  /** Creates an IndexInput for the file with the given name. */\n  public IndexInput openInput(String name, int bufferSize) throws IOException {\n    ensureOpen();\n    File f =  new File(getFile(), name);\n    RandomAccessFile raf = new RandomAccessFile(f, \"r\");\n    try {\n      return (raf.length() <= MAX_BBUF)\n             ? (IndexInput) new MMapIndexInput(raf)\n             : (IndexInput) new MultiMMapIndexInput(raf, MAX_BBUF);\n    } finally {\n      raf.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/MMapDirectory#openInput(String,int).mjava","pathOld":"src/java/org/apache/lucene/store/MMapDirectory#openInput(String,int).mjava","sourceNew":"  /** Creates an IndexInput for the file with the given name. */\n  @Override\n  public IndexInput openInput(String name, int bufferSize) throws IOException {\n    ensureOpen();\n    File f =  new File(getFile(), name);\n    RandomAccessFile raf = new RandomAccessFile(f, \"r\");\n    try {\n      return (raf.length() <= (long) maxBBuf)\n             ? (IndexInput) new MMapIndexInput(raf)\n             : (IndexInput) new MultiMMapIndexInput(raf, maxBBuf);\n    } finally {\n      raf.close();\n    }\n  }\n\n","sourceOld":"  /** Creates an IndexInput for the file with the given name. */\n  public IndexInput openInput(String name, int bufferSize) throws IOException {\n    ensureOpen();\n    File f =  new File(getFile(), name);\n    RandomAccessFile raf = new RandomAccessFile(f, \"r\");\n    try {\n      return (raf.length() <= (long) maxBBuf)\n             ? (IndexInput) new MMapIndexInput(raf)\n             : (IndexInput) new MultiMMapIndexInput(raf, maxBBuf);\n    } finally {\n      raf.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb646dc909d12de07ffb146debd9c26b9860652","date":1261824215,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/MMapDirectory#openInput(String,int).mjava","pathOld":"src/java/org/apache/lucene/store/MMapDirectory#openInput(String,int).mjava","sourceNew":"  /** Creates an IndexInput for the file with the given name. */\n  @Override\n  public IndexInput openInput(String name, int bufferSize) throws IOException {\n    ensureOpen();\n    File f =  new File(getDirectory(), name);\n    RandomAccessFile raf = new RandomAccessFile(f, \"r\");\n    try {\n      return (raf.length() <= (long) maxBBuf)\n             ? (IndexInput) new MMapIndexInput(raf)\n             : (IndexInput) new MultiMMapIndexInput(raf, maxBBuf);\n    } finally {\n      raf.close();\n    }\n  }\n\n","sourceOld":"  /** Creates an IndexInput for the file with the given name. */\n  @Override\n  public IndexInput openInput(String name, int bufferSize) throws IOException {\n    ensureOpen();\n    File f =  new File(getFile(), name);\n    RandomAccessFile raf = new RandomAccessFile(f, \"r\");\n    try {\n      return (raf.length() <= (long) maxBBuf)\n             ? (IndexInput) new MMapIndexInput(raf)\n             : (IndexInput) new MultiMMapIndexInput(raf, maxBBuf);\n    } finally {\n      raf.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/MMapDirectory#openInput(String,int).mjava","pathOld":"src/java/org/apache/lucene/store/MMapDirectory#openInput(String,int).mjava","sourceNew":"  /** Creates an IndexInput for the file with the given name. */\n  @Override\n  public IndexInput openInput(String name, int bufferSize) throws IOException {\n    ensureOpen();\n    File f =  new File(getDirectory(), name);\n    RandomAccessFile raf = new RandomAccessFile(f, \"r\");\n    try {\n      return (raf.length() <= maxBBuf)\n             ? (IndexInput) new MMapIndexInput(raf)\n             : (IndexInput) new MultiMMapIndexInput(raf, maxBBuf);\n    } finally {\n      raf.close();\n    }\n  }\n\n","sourceOld":"  /** Creates an IndexInput for the file with the given name. */\n  @Override\n  public IndexInput openInput(String name, int bufferSize) throws IOException {\n    ensureOpen();\n    File f =  new File(getDirectory(), name);\n    RandomAccessFile raf = new RandomAccessFile(f, \"r\");\n    try {\n      return (raf.length() <= (long) maxBBuf)\n             ? (IndexInput) new MMapIndexInput(raf)\n             : (IndexInput) new MultiMMapIndexInput(raf, maxBBuf);\n    } finally {\n      raf.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/MMapDirectory#openInput(String,int).mjava","pathOld":"src/java/org/apache/lucene/store/MMapDirectory#openInput(String,int).mjava","sourceNew":"  /** Creates an IndexInput for the file with the given name. */\n  @Override\n  public IndexInput openInput(String name, int bufferSize) throws IOException {\n    ensureOpen();\n    File f =  new File(getDirectory(), name);\n    RandomAccessFile raf = new RandomAccessFile(f, \"r\");\n    try {\n      return (raf.length() <= maxBBuf)\n             ? (IndexInput) new MMapIndexInput(raf)\n             : (IndexInput) new MultiMMapIndexInput(raf, maxBBuf);\n    } finally {\n      raf.close();\n    }\n  }\n\n","sourceOld":"  /** Creates an IndexInput for the file with the given name. */\n  @Override\n  public IndexInput openInput(String name, int bufferSize) throws IOException {\n    ensureOpen();\n    File f =  new File(getDirectory(), name);\n    RandomAccessFile raf = new RandomAccessFile(f, \"r\");\n    try {\n      return (raf.length() <= maxBBuf)\n             ? (IndexInput) new MMapIndexInput(raf)\n             : (IndexInput) new MultiMMapIndexInput(raf, maxBBuf);\n    } finally {\n      raf.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a0b43ea2919ba5260503927e2e05a7506d36571":["416d032f85b7ea8efc272f86ba46bc460589aff7"],"8a9e385641d717e641408d8fbbc62be8fc766357":["3a0b43ea2919ba5260503927e2e05a7506d36571"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["f67425a2b6c29f8ae10c96351f190a6b85f1cebc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f67425a2b6c29f8ae10c96351f190a6b85f1cebc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"416d032f85b7ea8efc272f86ba46bc460589aff7":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9bb646dc909d12de07ffb146debd9c26b9860652"],"9bb646dc909d12de07ffb146debd9c26b9860652":["8a9e385641d717e641408d8fbbc62be8fc766357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"3a0b43ea2919ba5260503927e2e05a7506d36571":["8a9e385641d717e641408d8fbbc62be8fc766357"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9bb646dc909d12de07ffb146debd9c26b9860652"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["416d032f85b7ea8efc272f86ba46bc460589aff7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f67425a2b6c29f8ae10c96351f190a6b85f1cebc"],"f67425a2b6c29f8ae10c96351f190a6b85f1cebc":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"416d032f85b7ea8efc272f86ba46bc460589aff7":["3a0b43ea2919ba5260503927e2e05a7506d36571"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9bb646dc909d12de07ffb146debd9c26b9860652":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}