{"path":"solr/core/src/java/org/apache/solr/index/SortingMergePolicyFactory#SortingMergePolicyFactory(SolrResourceLoader,MergePolicyFactoryArgs,IndexSchema).mjava","commits":[{"id":"1a9c2b42591c0db6f85041d5cfc9cba17fe45e0b","date":1455308162,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/index/SortingMergePolicyFactory#SortingMergePolicyFactory(SolrResourceLoader,MergePolicyFactoryArgs,IndexSchema).mjava","pathOld":"/dev/null","sourceNew":"  public SortingMergePolicyFactory(SolrResourceLoader resourceLoader, MergePolicyFactoryArgs args, IndexSchema schema) {\n    super(resourceLoader, args, schema);\n    final String sortArg = (String) args.remove(SORT);\n    if (sortArg == null) {\n      throw new IllegalArgumentException(SortingMergePolicyFactory.class.getSimpleName()+\" requires a '\"+SORT+ \"' argument.\");\n    }\n    this.mergeSort = SortSpecParsing.parseSortSpec(sortArg, schema).getSort();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"01624b85de12fb02335810bdf325124e59040772","date":1490254940,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/index/SortingMergePolicyFactory#SortingMergePolicyFactory(SolrResourceLoader,MergePolicyFactoryArgs,IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/index/SortingMergePolicyFactory#SortingMergePolicyFactory(SolrResourceLoader,MergePolicyFactoryArgs,IndexSchema).mjava","sourceNew":"  public SortingMergePolicyFactory(SolrResourceLoader resourceLoader, MergePolicyFactoryArgs args, IndexSchema schema) {\n    super(resourceLoader, args, schema);\n    final String sortArg = (String) args.remove(SORT);\n    if (sortArg == null) {\n      throw new IllegalArgumentException(SortingMergePolicyFactory.class.getSimpleName()+\" requires a '\"+ SORT + \"' argument.\");\n    }\n    this.mergeSort = SortSpecParsing.parseSortSpec(sortArg, schema).getSort();\n  }\n\n","sourceOld":"  public SortingMergePolicyFactory(SolrResourceLoader resourceLoader, MergePolicyFactoryArgs args, IndexSchema schema) {\n    super(resourceLoader, args, schema);\n    final String sortArg = (String) args.remove(SORT);\n    if (sortArg == null) {\n      throw new IllegalArgumentException(SortingMergePolicyFactory.class.getSimpleName()+\" requires a '\"+SORT+ \"' argument.\");\n    }\n    this.mergeSort = SortSpecParsing.parseSortSpec(sortArg, schema).getSort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f4c5d3859373c3a74734e85efa122b17514e3e8","date":1490280013,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/index/SortingMergePolicyFactory#SortingMergePolicyFactory(SolrResourceLoader,MergePolicyFactoryArgs,IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/index/SortingMergePolicyFactory#SortingMergePolicyFactory(SolrResourceLoader,MergePolicyFactoryArgs,IndexSchema).mjava","sourceNew":"  public SortingMergePolicyFactory(SolrResourceLoader resourceLoader, MergePolicyFactoryArgs args, IndexSchema schema) {\n    super(resourceLoader, args, schema);\n    final String sortArg = (String) args.remove(SORT);\n    if (sortArg == null) {\n      throw new IllegalArgumentException(SortingMergePolicyFactory.class.getSimpleName()+\" requires a '\"+ SORT + \"' argument.\");\n    }\n    this.mergeSort = SortSpecParsing.parseSortSpec(sortArg, schema).getSort();\n  }\n\n","sourceOld":"  public SortingMergePolicyFactory(SolrResourceLoader resourceLoader, MergePolicyFactoryArgs args, IndexSchema schema) {\n    super(resourceLoader, args, schema);\n    final String sortArg = (String) args.remove(SORT);\n    if (sortArg == null) {\n      throw new IllegalArgumentException(SortingMergePolicyFactory.class.getSimpleName()+\" requires a '\"+SORT+ \"' argument.\");\n    }\n    this.mergeSort = SortSpecParsing.parseSortSpec(sortArg, schema).getSort();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a9c2b42591c0db6f85041d5cfc9cba17fe45e0b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6f4c5d3859373c3a74734e85efa122b17514e3e8":["1a9c2b42591c0db6f85041d5cfc9cba17fe45e0b"],"01624b85de12fb02335810bdf325124e59040772":["1a9c2b42591c0db6f85041d5cfc9cba17fe45e0b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["01624b85de12fb02335810bdf325124e59040772"]},"commit2Childs":{"1a9c2b42591c0db6f85041d5cfc9cba17fe45e0b":["6f4c5d3859373c3a74734e85efa122b17514e3e8","01624b85de12fb02335810bdf325124e59040772"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1a9c2b42591c0db6f85041d5cfc9cba17fe45e0b"],"6f4c5d3859373c3a74734e85efa122b17514e3e8":[],"01624b85de12fb02335810bdf325124e59040772":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6f4c5d3859373c3a74734e85efa122b17514e3e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}