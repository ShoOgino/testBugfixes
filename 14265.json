{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testListStream().mjava","commits":[{"id":"014c3fc2ef9621f91a3786f1055913d8fa10d0df","date":1492893542,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testListStream().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testListStream() throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n    updateRequest.add(id, \"hello\", \"test_t\", \"l b c d c\");\n    updateRequest.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String expr = \"search(\"+COLLECTIONORALIAS+\", q=\\\"*:*\\\", fl=id, sort=\\\"id desc\\\")\";\n    String cat = \"list(\"+expr+\",\"+expr+\")\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cat);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 2);\n    String s = (String)tuples.get(0).get(\"id\");\n    assertTrue(s.equals(\"hello\"));\n    s = (String)tuples.get(1).get(\"id\");\n    assertTrue(s.equals(\"hello\"));\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbe278637547f5bdf7d76af1f55813b685a2a82a","date":1492896379,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testListStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testListStream().mjava","sourceNew":"  @Test\n  public void testListStream() throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n    updateRequest.add(id, \"hello\", \"test_t\", \"l b c d c\");\n    updateRequest.add(id, \"hello1\", \"test_t\", \"l b c d c\");\n    updateRequest.add(id, \"hello2\", \"test_t\", \"l b c d c\");\n\n    updateRequest.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"id:hello\\\",  fl=id, sort=\\\"id desc\\\")\";\n    String expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"id:hello1\\\", fl=id, sort=\\\"id desc\\\")\";\n    String expr3 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"id:hello2\\\", fl=id, sort=\\\"id desc\\\")\";\n\n    String cat = \"list(\"+expr1+\",\"+expr2+\",\"+expr3+\")\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cat);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 3);\n    String s = (String)tuples.get(0).get(\"id\");\n    assertTrue(s.equals(\"hello\"));\n    s = (String)tuples.get(1).get(\"id\");\n    assertTrue(s.equals(\"hello1\"));\n    s = (String)tuples.get(2).get(\"id\");\n    assertTrue(s.equals(\"hello2\"));\n  }\n\n","sourceOld":"  @Test\n  public void testListStream() throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n    updateRequest.add(id, \"hello\", \"test_t\", \"l b c d c\");\n    updateRequest.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String expr = \"search(\"+COLLECTIONORALIAS+\", q=\\\"*:*\\\", fl=id, sort=\\\"id desc\\\")\";\n    String cat = \"list(\"+expr+\",\"+expr+\")\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cat);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 2);\n    String s = (String)tuples.get(0).get(\"id\");\n    assertTrue(s.equals(\"hello\"));\n    s = (String)tuples.get(1).get(\"id\");\n    assertTrue(s.equals(\"hello\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testListStream().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testListStream() throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n    updateRequest.add(id, \"hello\", \"test_t\", \"l b c d c\");\n    updateRequest.add(id, \"hello1\", \"test_t\", \"l b c d c\");\n    updateRequest.add(id, \"hello2\", \"test_t\", \"l b c d c\");\n\n    updateRequest.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"id:hello\\\",  fl=id, sort=\\\"id desc\\\")\";\n    String expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"id:hello1\\\", fl=id, sort=\\\"id desc\\\")\";\n    String expr3 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"id:hello2\\\", fl=id, sort=\\\"id desc\\\")\";\n\n    String cat = \"list(\"+expr1+\",\"+expr2+\",\"+expr3+\")\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cat);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 3);\n    String s = (String)tuples.get(0).get(\"id\");\n    assertTrue(s.equals(\"hello\"));\n    s = (String)tuples.get(1).get(\"id\");\n    assertTrue(s.equals(\"hello1\"));\n    s = (String)tuples.get(2).get(\"id\");\n    assertTrue(s.equals(\"hello2\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf","date":1522951207,"type":4,"author":"Joel Bernstein","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testListStream().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testListStream() throws Exception {\n    UpdateRequest updateRequest = new UpdateRequest();\n    updateRequest.add(id, \"hello\", \"test_t\", \"l b c d c\");\n    updateRequest.add(id, \"hello1\", \"test_t\", \"l b c d c\");\n    updateRequest.add(id, \"hello2\", \"test_t\", \"l b c d c\");\n\n    updateRequest.commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    String expr1 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"id:hello\\\",  fl=id, sort=\\\"id desc\\\")\";\n    String expr2 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"id:hello1\\\", fl=id, sort=\\\"id desc\\\")\";\n    String expr3 = \"search(\"+COLLECTIONORALIAS+\", q=\\\"id:hello2\\\", fl=id, sort=\\\"id desc\\\")\";\n\n    String cat = \"list(\"+expr1+\",\"+expr2+\",\"+expr3+\")\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cat);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 3);\n    String s = (String)tuples.get(0).get(\"id\");\n    assertTrue(s.equals(\"hello\"));\n    s = (String)tuples.get(1).get(\"id\");\n    assertTrue(s.equals(\"hello1\"));\n    s = (String)tuples.get(2).get(\"id\");\n    assertTrue(s.equals(\"hello2\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dbe278637547f5bdf7d76af1f55813b685a2a82a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"014c3fc2ef9621f91a3786f1055913d8fa10d0df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"dbe278637547f5bdf7d76af1f55813b685a2a82a":["014c3fc2ef9621f91a3786f1055913d8fa10d0df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["dbe278637547f5bdf7d76af1f55813b685a2a82a"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","014c3fc2ef9621f91a3786f1055913d8fa10d0df"],"014c3fc2ef9621f91a3786f1055913d8fa10d0df":["dbe278637547f5bdf7d76af1f55813b685a2a82a"],"dbe278637547f5bdf7d76af1f55813b685a2a82a":["e9017cf144952056066919f1ebc7897ff9bd71b1","8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}