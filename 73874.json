{"path":"lucene/core/src/java/org/apache/lucene/index/MultiTermsEnum.TermMergeQueue#fillTop(TermsEnumWithSlice[]).mjava","commits":[{"id":"5a945737c80e9ec5eb2cc9b67cbb82cd6c485a8e","date":1437562988,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiTermsEnum.TermMergeQueue#fillTop(TermsEnumWithSlice[]).mjava","pathOld":"/dev/null","sourceNew":"    /** Add the {@link #top()} slice as well as all slices that are positionned\n     *  on the same term to {@code tops} and return how many of them there are. */\n    int fillTop(TermsEnumWithSlice[] tops) {\n      final int size = size();\n      if (size == 0) {\n        return 0;\n      }\n      tops[0] = top();\n      int numTop = 1;\n      stack[0] = 1;\n      int stackLen = 1;\n\n      while (stackLen != 0) {\n        final int index = stack[--stackLen];\n        final int leftChild = index << 1;\n        for (int child = leftChild, end = Math.min(size, leftChild + 1); child <= end; ++child) {\n          TermsEnumWithSlice te = get(child);\n          if (te.current.equals(tops[0].current)) {\n            tops[numTop++] = te;\n            stack[stackLen++] = child;\n          }\n        }\n      }\n      return numTop;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a945737c80e9ec5eb2cc9b67cbb82cd6c485a8e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a945737c80e9ec5eb2cc9b67cbb82cd6c485a8e"]},"commit2Childs":{"5a945737c80e9ec5eb2cc9b67cbb82cd6c485a8e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a945737c80e9ec5eb2cc9b67cbb82cd6c485a8e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}