{"path":"lucene/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#MultiLevelSkipListReader(IndexInput,int,int).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#MultiLevelSkipListReader(IndexInput,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/MultiLevelSkipListReader#MultiLevelSkipListReader(IndexInput,int,int).mjava","sourceNew":"  public MultiLevelSkipListReader(IndexInput skipStream, int maxSkipLevels, int skipInterval) {\n    this.skipStream = new IndexInput[maxSkipLevels];\n    this.skipPointer = new long[maxSkipLevels];\n    this.childPointer = new long[maxSkipLevels];\n    this.numSkipped = new int[maxSkipLevels];\n    this.maxNumberOfSkipLevels = maxSkipLevels;\n    this.skipInterval = new int[maxSkipLevels];\n    this.skipStream [0]= skipStream;\n    this.inputIsBuffered = (skipStream instanceof BufferedIndexInput);\n    this.skipInterval[0] = skipInterval;\n    for (int i = 1; i < maxSkipLevels; i++) {\n      // cache skip intervals\n      this.skipInterval[i] = this.skipInterval[i - 1] * skipInterval;\n    }\n    skipDoc = new int[maxSkipLevels];\n  }\n\n","sourceOld":"  public MultiLevelSkipListReader(IndexInput skipStream, int maxSkipLevels, int skipInterval) {\n    this.skipStream = new IndexInput[maxSkipLevels];\n    this.skipPointer = new long[maxSkipLevels];\n    this.childPointer = new long[maxSkipLevels];\n    this.numSkipped = new int[maxSkipLevels];\n    this.maxNumberOfSkipLevels = maxSkipLevels;\n    this.skipInterval = new int[maxSkipLevels];\n    this.skipStream [0]= skipStream;\n    this.inputIsBuffered = (skipStream instanceof BufferedIndexInput);\n    this.skipInterval[0] = skipInterval;\n    for (int i = 1; i < maxSkipLevels; i++) {\n      // cache skip intervals\n      this.skipInterval[i] = this.skipInterval[i - 1] * skipInterval;\n    }\n    skipDoc = new int[maxSkipLevels];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#MultiLevelSkipListReader(IndexInput,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader#MultiLevelSkipListReader(IndexInput,int,int).mjava","sourceNew":"  public MultiLevelSkipListReader(IndexInput skipStream, int maxSkipLevels, int skipInterval) {\n    this.skipStream = new IndexInput[maxSkipLevels];\n    this.skipPointer = new long[maxSkipLevels];\n    this.childPointer = new long[maxSkipLevels];\n    this.numSkipped = new int[maxSkipLevels];\n    this.maxNumberOfSkipLevels = maxSkipLevels;\n    this.skipInterval = new int[maxSkipLevels];\n    this.skipStream [0]= skipStream;\n    this.inputIsBuffered = (skipStream instanceof BufferedIndexInput);\n    this.skipInterval[0] = skipInterval;\n    for (int i = 1; i < maxSkipLevels; i++) {\n      // cache skip intervals\n      this.skipInterval[i] = this.skipInterval[i - 1] * skipInterval;\n    }\n    skipDoc = new int[maxSkipLevels];\n  }\n\n","sourceOld":"  public MultiLevelSkipListReader(IndexInput skipStream, int maxSkipLevels, int skipInterval) {\n    this.skipStream = new IndexInput[maxSkipLevels];\n    this.skipPointer = new long[maxSkipLevels];\n    this.childPointer = new long[maxSkipLevels];\n    this.numSkipped = new int[maxSkipLevels];\n    this.maxNumberOfSkipLevels = maxSkipLevels;\n    this.skipInterval = new int[maxSkipLevels];\n    this.skipStream [0]= skipStream;\n    this.inputIsBuffered = (skipStream instanceof BufferedIndexInput);\n    this.skipInterval[0] = skipInterval;\n    for (int i = 1; i < maxSkipLevels; i++) {\n      // cache skip intervals\n      this.skipInterval[i] = this.skipInterval[i - 1] * skipInterval;\n    }\n    skipDoc = new int[maxSkipLevels];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}