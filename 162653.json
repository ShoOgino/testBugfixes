{"path":"solr/core/src/java/org/apache/solr/util/SimplePostTool#execute().mjava","commits":[{"id":"c2c3a504730329ae644b009dee43024116605d47","date":1345253449,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#execute().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * After initialization, call execute to start the post job.\n   * This method delegates to the correct mode method.\n   */\n  public void execute() {\n    if (DATA_MODE_FILES.equals(mode) && args.length > 0) {\n      doFilesMode();\n    } else if(DATA_MODE_ARGS.equals(mode) && args.length > 0) {\n      doArgsMode();\n    } else if(DATA_MODE_WEB.equals(mode) && args.length > 0) {\n      doWebMode();\n    } else if(DATA_MODE_STDIN.equals(mode)) {\n      doStdinMode();\n    } else {\n      usageShort();\n      return;\n    }\n    \n    if (commit)   commit();\n    if (optimize) optimize();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70fa1c0f4d75735ff2e1485e059d9bc5efa50598","date":1345296911,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#execute().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * After initialization, call execute to start the post job.\n   * This method delegates to the correct mode method.\n   */\n  public void execute() {\n    if (DATA_MODE_FILES.equals(mode) && args.length > 0) {\n      doFilesMode();\n    } else if(DATA_MODE_ARGS.equals(mode) && args.length > 0) {\n      doArgsMode();\n    } else if(DATA_MODE_WEB.equals(mode) && args.length > 0) {\n      doWebMode();\n    } else if(DATA_MODE_STDIN.equals(mode)) {\n      doStdinMode();\n    } else {\n      usageShort();\n      return;\n    }\n    \n    if (commit)   commit();\n    if (optimize) optimize();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"616c1830142ff5c1ddedec1ed898733b73c8e23b","date":1345368925,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#execute().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * After initialization, call execute to start the post job.\n   * This method delegates to the correct mode method.\n   */\n  public void execute() {\n    if (DATA_MODE_FILES.equals(mode) && args.length > 0) {\n      doFilesMode();\n    } else if(DATA_MODE_ARGS.equals(mode) && args.length > 0) {\n      doArgsMode();\n    } else if(DATA_MODE_WEB.equals(mode) && args.length > 0) {\n      doWebMode();\n    } else if(DATA_MODE_STDIN.equals(mode)) {\n      doStdinMode();\n    } else {\n      usageShort();\n      return;\n    }\n    \n    if (commit)   commit();\n    if (optimize) optimize();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86358218bb481e768241fd45cac8aad053098183","date":1359591971,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#execute().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#execute().mjava","sourceNew":"  /**\n   * After initialization, call execute to start the post job.\n   * This method delegates to the correct mode method.\n   */\n  public void execute() {\n    final long startTime = System.currentTimeMillis();\n    if (DATA_MODE_FILES.equals(mode) && args.length > 0) {\n      doFilesMode();\n    } else if(DATA_MODE_ARGS.equals(mode) && args.length > 0) {\n      doArgsMode();\n    } else if(DATA_MODE_WEB.equals(mode) && args.length > 0) {\n      doWebMode();\n    } else if(DATA_MODE_STDIN.equals(mode)) {\n      doStdinMode();\n    } else {\n      usageShort();\n      return;\n    }\n    \n    if (commit)   commit();\n    if (optimize) optimize();\n    final long endTime = System.currentTimeMillis();\n    displayTiming(endTime - startTime);\n  }\n\n","sourceOld":"  /**\n   * After initialization, call execute to start the post job.\n   * This method delegates to the correct mode method.\n   */\n  public void execute() {\n    if (DATA_MODE_FILES.equals(mode) && args.length > 0) {\n      doFilesMode();\n    } else if(DATA_MODE_ARGS.equals(mode) && args.length > 0) {\n      doArgsMode();\n    } else if(DATA_MODE_WEB.equals(mode) && args.length > 0) {\n      doWebMode();\n    } else if(DATA_MODE_STDIN.equals(mode)) {\n      doStdinMode();\n    } else {\n      usageShort();\n      return;\n    }\n    \n    if (commit)   commit();\n    if (optimize) optimize();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61d5f95d14e5b9b046998c51e16709a398c15226","date":1359603451,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#execute().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#execute().mjava","sourceNew":"  /**\n   * After initialization, call execute to start the post job.\n   * This method delegates to the correct mode method.\n   */\n  public void execute() {\n    final long startTime = System.currentTimeMillis();\n    if (DATA_MODE_FILES.equals(mode) && args.length > 0) {\n      doFilesMode();\n    } else if(DATA_MODE_ARGS.equals(mode) && args.length > 0) {\n      doArgsMode();\n    } else if(DATA_MODE_WEB.equals(mode) && args.length > 0) {\n      doWebMode();\n    } else if(DATA_MODE_STDIN.equals(mode)) {\n      doStdinMode();\n    } else {\n      usageShort();\n      return;\n    }\n    \n    if (commit)   commit();\n    if (optimize) optimize();\n    final long endTime = System.currentTimeMillis();\n    displayTiming(endTime - startTime);\n  }\n\n","sourceOld":"  /**\n   * After initialization, call execute to start the post job.\n   * This method delegates to the correct mode method.\n   */\n  public void execute() {\n    if (DATA_MODE_FILES.equals(mode) && args.length > 0) {\n      doFilesMode();\n    } else if(DATA_MODE_ARGS.equals(mode) && args.length > 0) {\n      doArgsMode();\n    } else if(DATA_MODE_WEB.equals(mode) && args.length > 0) {\n      doWebMode();\n    } else if(DATA_MODE_STDIN.equals(mode)) {\n      doStdinMode();\n    } else {\n      usageShort();\n      return;\n    }\n    \n    if (commit)   commit();\n    if (optimize) optimize();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bcf9886c8ff537aafde14de48ebf744f5673f08b","date":1439041198,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#execute().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#execute().mjava","sourceNew":"  /**\n   * After initialization, call execute to start the post job.\n   * This method delegates to the correct mode method.\n   */\n  public void execute() {\n    final RTimer timer = new RTimer();\n    if (DATA_MODE_FILES.equals(mode) && args.length > 0) {\n      doFilesMode();\n    } else if(DATA_MODE_ARGS.equals(mode) && args.length > 0) {\n      doArgsMode();\n    } else if(DATA_MODE_WEB.equals(mode) && args.length > 0) {\n      doWebMode();\n    } else if(DATA_MODE_STDIN.equals(mode)) {\n      doStdinMode();\n    } else {\n      usageShort();\n      return;\n    }\n    \n    if (commit)   commit();\n    if (optimize) optimize();\n    displayTiming((long) timer.getTime());\n  }\n\n","sourceOld":"  /**\n   * After initialization, call execute to start the post job.\n   * This method delegates to the correct mode method.\n   */\n  public void execute() {\n    final long startTime = System.currentTimeMillis();\n    if (DATA_MODE_FILES.equals(mode) && args.length > 0) {\n      doFilesMode();\n    } else if(DATA_MODE_ARGS.equals(mode) && args.length > 0) {\n      doArgsMode();\n    } else if(DATA_MODE_WEB.equals(mode) && args.length > 0) {\n      doWebMode();\n    } else if(DATA_MODE_STDIN.equals(mode)) {\n      doStdinMode();\n    } else {\n      usageShort();\n      return;\n    }\n    \n    if (commit)   commit();\n    if (optimize) optimize();\n    final long endTime = System.currentTimeMillis();\n    displayTiming(endTime - startTime);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#execute().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#execute().mjava","sourceNew":"  /**\n   * After initialization, call execute to start the post job.\n   * This method delegates to the correct mode method.\n   */\n  public void execute() {\n    final RTimer timer = new RTimer();\n    if (DATA_MODE_FILES.equals(mode) && args.length > 0) {\n      doFilesMode();\n    } else if(DATA_MODE_ARGS.equals(mode) && args.length > 0) {\n      doArgsMode();\n    } else if(DATA_MODE_WEB.equals(mode) && args.length > 0) {\n      doWebMode();\n    } else if(DATA_MODE_STDIN.equals(mode)) {\n      doStdinMode();\n    } else {\n      usageShort();\n      return;\n    }\n\n    if (commit)   commit();\n    if (optimize) optimize();\n    displayTiming((long) timer.getTime());\n  }\n\n","sourceOld":"  /**\n   * After initialization, call execute to start the post job.\n   * This method delegates to the correct mode method.\n   */\n  public void execute() {\n    final RTimer timer = new RTimer();\n    if (DATA_MODE_FILES.equals(mode) && args.length > 0) {\n      doFilesMode();\n    } else if(DATA_MODE_ARGS.equals(mode) && args.length > 0) {\n      doArgsMode();\n    } else if(DATA_MODE_WEB.equals(mode) && args.length > 0) {\n      doWebMode();\n    } else if(DATA_MODE_STDIN.equals(mode)) {\n      doStdinMode();\n    } else {\n      usageShort();\n      return;\n    }\n    \n    if (commit)   commit();\n    if (optimize) optimize();\n    displayTiming((long) timer.getTime());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"61d5f95d14e5b9b046998c51e16709a398c15226":["c2c3a504730329ae644b009dee43024116605d47","86358218bb481e768241fd45cac8aad053098183"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c2c3a504730329ae644b009dee43024116605d47"],"86358218bb481e768241fd45cac8aad053098183":["c2c3a504730329ae644b009dee43024116605d47"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c2c3a504730329ae644b009dee43024116605d47"],"c2c3a504730329ae644b009dee43024116605d47":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["86358218bb481e768241fd45cac8aad053098183"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"]},"commit2Childs":{"61d5f95d14e5b9b046998c51e16709a398c15226":[],"616c1830142ff5c1ddedec1ed898733b73c8e23b":[],"86358218bb481e768241fd45cac8aad053098183":["61d5f95d14e5b9b046998c51e16709a398c15226","bcf9886c8ff537aafde14de48ebf744f5673f08b"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":[],"c2c3a504730329ae644b009dee43024116605d47":["61d5f95d14e5b9b046998c51e16709a398c15226","616c1830142ff5c1ddedec1ed898733b73c8e23b","86358218bb481e768241fd45cac8aad053098183","70fa1c0f4d75735ff2e1485e059d9bc5efa50598"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","c2c3a504730329ae644b009dee43024116605d47"],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["61d5f95d14e5b9b046998c51e16709a398c15226","616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}