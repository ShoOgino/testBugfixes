{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#resolveSimpleAliasGivenAliasMap(Map[String,List[String]],String).mjava","commits":[{"id":"59bad1cc1e7f90125a140496e79b06afcedb68ec","date":1554915399,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#resolveSimpleAliasGivenAliasMap(Map[String,List[String]],String).mjava","pathOld":"/dev/null","sourceNew":"  /** @lucene.internal */\n  @SuppressWarnings(\"JavaDoc\")\n  public static String resolveSimpleAliasGivenAliasMap(Map<String, List<String>> collectionAliasListMap,\n                                                       String aliasName) throws IllegalArgumentException {\n    List<String> level1 = collectionAliasListMap.get(aliasName);\n    if (level1 == null || level1.isEmpty()) {\n      return aliasName; // simple collection name\n    }\n    if (level1.size() > 1) {\n      throw new IllegalArgumentException(\"Simple alias '\" + aliasName + \"' points to more than 1 collection: \" + level1);\n    }\n    List<String> level2 = collectionAliasListMap.get(level1.get(0));\n    if (level2 == null || level2.isEmpty()) {\n      return level1.get(0); // simple alias\n    }\n    if (level2.size() > 1) {\n      throw new IllegalArgumentException(\"Simple alias '\" + aliasName + \"' resolves to '\"\n          + level1.get(0) + \"' which points to more than 1 collection: \" + level2);\n    }\n    return level2.get(0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ce0b61a2648584b34304ab915de569c63bdb36b4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ce0b61a2648584b34304ab915de569c63bdb36b4","date":1562311172,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#resolveSimpleAliasGivenAliasMap(Map[String,List[String]],String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#resolveSimpleAliasGivenAliasMap(Map[String,List[String]],String).mjava","sourceNew":"  /** @lucene.internal */\n  @SuppressWarnings(\"JavaDoc\")\n  public static String resolveSimpleAliasGivenAliasMap(Map<String, List<String>> collectionAliasListMap,\n                                                       String aliasName) throws SolrException {\n    List<String> level1 = collectionAliasListMap.get(aliasName);\n    if (level1 == null || level1.isEmpty()) {\n      return aliasName; // simple collection name\n    }\n    if (level1.size() > 1) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Simple alias '\" + aliasName + \"' points to more than 1 collection: \" + level1);\n    }\n    List<String> level2 = collectionAliasListMap.get(level1.get(0));\n    if (level2 == null || level2.isEmpty()) {\n      return level1.get(0); // simple alias\n    }\n    if (level2.size() > 1) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Simple alias '\" + aliasName + \"' resolves to '\"\n          + level1.get(0) + \"' which points to more than 1 collection: \" + level2);\n    }\n    return level2.get(0);\n  }\n\n","sourceOld":"  /** @lucene.internal */\n  @SuppressWarnings(\"JavaDoc\")\n  public static String resolveSimpleAliasGivenAliasMap(Map<String, List<String>> collectionAliasListMap,\n                                                       String aliasName) throws IllegalArgumentException {\n    List<String> level1 = collectionAliasListMap.get(aliasName);\n    if (level1 == null || level1.isEmpty()) {\n      return aliasName; // simple collection name\n    }\n    if (level1.size() > 1) {\n      throw new IllegalArgumentException(\"Simple alias '\" + aliasName + \"' points to more than 1 collection: \" + level1);\n    }\n    List<String> level2 = collectionAliasListMap.get(level1.get(0));\n    if (level2 == null || level2.isEmpty()) {\n      return level1.get(0); // simple alias\n    }\n    if (level2.size() > 1) {\n      throw new IllegalArgumentException(\"Simple alias '\" + aliasName + \"' resolves to '\"\n          + level1.get(0) + \"' which points to more than 1 collection: \" + level2);\n    }\n    return level2.get(0);\n  }\n\n","bugFix":["59bad1cc1e7f90125a140496e79b06afcedb68ec"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ce0b61a2648584b34304ab915de569c63bdb36b4":["59bad1cc1e7f90125a140496e79b06afcedb68ec"],"59bad1cc1e7f90125a140496e79b06afcedb68ec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ce0b61a2648584b34304ab915de569c63bdb36b4"]},"commit2Childs":{"ce0b61a2648584b34304ab915de569c63bdb36b4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"59bad1cc1e7f90125a140496e79b06afcedb68ec":["ce0b61a2648584b34304ab915de569c63bdb36b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["59bad1cc1e7f90125a140496e79b06afcedb68ec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}