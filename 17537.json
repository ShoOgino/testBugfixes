{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqPayloadIteratorWrapper#decodePayload(BytesRef,ByteArrayDataInput).mjava","commits":[{"id":"ada2f7352a7f964fe49bccd13227c4ec38563d39","date":1381659982,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqPayloadIteratorWrapper#decodePayload(BytesRef,ByteArrayDataInput).mjava","pathOld":"/dev/null","sourceNew":"  /** decodes the payload at the current position */\n  protected BytesRef decodePayload(BytesRef scratch, ByteArrayDataInput tmpInput) {\n    tmpInput.reset(scratch.bytes);\n    tmpInput.skipBytes(scratch.length - 2); // skip to payload size\n    short payloadLength = tmpInput.readShort(); // read payload size\n    tmpInput.setPosition(scratch.length - 2 - payloadLength); // setPosition to start of payload\n    BytesRef payloadScratch = new BytesRef(payloadLength); \n    tmpInput.readBytes(payloadScratch.bytes, 0, payloadLength); // read payload\n    payloadScratch.length = payloadLength;\n    scratch.length -= 2; // payload length info (short)\n    scratch.length -= payloadLength; // payload\n    return payloadScratch;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41aee74b5f91a096e3fd950f4a336bc763f0e7a7","date":1381772070,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedInputIterator#decodePayload(BytesRef,ByteArrayDataInput).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/SortedTermFreqPayloadIteratorWrapper#decodePayload(BytesRef,ByteArrayDataInput).mjava","sourceNew":"  /** decodes the payload at the current position */\n  protected BytesRef decodePayload(BytesRef scratch, ByteArrayDataInput tmpInput) {\n    tmpInput.reset(scratch.bytes);\n    tmpInput.skipBytes(scratch.length - 2); // skip to payload size\n    short payloadLength = tmpInput.readShort(); // read payload size\n    tmpInput.setPosition(scratch.length - 2 - payloadLength); // setPosition to start of payload\n    BytesRef payloadScratch = new BytesRef(payloadLength); \n    tmpInput.readBytes(payloadScratch.bytes, 0, payloadLength); // read payload\n    payloadScratch.length = payloadLength;\n    scratch.length -= 2; // payload length info (short)\n    scratch.length -= payloadLength; // payload\n    return payloadScratch;\n  }\n\n","sourceOld":"  /** decodes the payload at the current position */\n  protected BytesRef decodePayload(BytesRef scratch, ByteArrayDataInput tmpInput) {\n    tmpInput.reset(scratch.bytes);\n    tmpInput.skipBytes(scratch.length - 2); // skip to payload size\n    short payloadLength = tmpInput.readShort(); // read payload size\n    tmpInput.setPosition(scratch.length - 2 - payloadLength); // setPosition to start of payload\n    BytesRef payloadScratch = new BytesRef(payloadLength); \n    tmpInput.readBytes(payloadScratch.bytes, 0, payloadLength); // read payload\n    payloadScratch.length = payloadLength;\n    scratch.length -= 2; // payload length info (short)\n    scratch.length -= payloadLength; // payload\n    return payloadScratch;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}