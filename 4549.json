{"path":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTreeTermsReader.FieldReader.SegmentTermsEnum#pushFrame(FST.Arc[BytesRef],BytesRef,int).mjava","commits":[{"id":"6d01ed6d1df51191983f4dd157aedf5f4650e2b3","date":1376572546,"type":1,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTreeTermsReader.FieldReader.SegmentTermsEnum#pushFrame(FST.Arc[BytesRef],BytesRef,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTermsReader.FieldReader.SegmentTermsEnum#pushFrame(FST.Arc[BytesRef],BytesRef,int).mjava","sourceNew":"      // Pushes a frame we seek'd to\n      Frame pushFrame(FST.Arc<BytesRef> arc, BytesRef frameData, int length) throws IOException {\n        scratchReader.reset(frameData.bytes, frameData.offset, frameData.length);\n        final long code = scratchReader.readVLong();\n        final long fpSeek = code >>> TempBlockTreeTermsWriter.OUTPUT_FLAGS_NUM_BITS;\n        final Frame f = getFrame(1+currentFrame.ord);\n        f.hasTerms = (code & TempBlockTreeTermsWriter.OUTPUT_FLAG_HAS_TERMS) != 0;\n        f.hasTermsOrig = f.hasTerms;\n        f.isFloor = (code & TempBlockTreeTermsWriter.OUTPUT_FLAG_IS_FLOOR) != 0;\n        if (f.isFloor) {\n          f.setFloorData(scratchReader, frameData);\n        }\n        pushFrame(arc, fpSeek, length);\n\n        return f;\n      }\n\n","sourceOld":"      // Pushes a frame we seek'd to\n      Frame pushFrame(FST.Arc<BytesRef> arc, BytesRef frameData, int length) throws IOException {\n        scratchReader.reset(frameData.bytes, frameData.offset, frameData.length);\n        final long code = scratchReader.readVLong();\n        final long fpSeek = code >>> TempBlockTermsWriter.OUTPUT_FLAGS_NUM_BITS;\n        final Frame f = getFrame(1+currentFrame.ord);\n        f.hasTerms = (code & TempBlockTermsWriter.OUTPUT_FLAG_HAS_TERMS) != 0;\n        f.hasTermsOrig = f.hasTerms;\n        f.isFloor = (code & TempBlockTermsWriter.OUTPUT_FLAG_IS_FLOOR) != 0;\n        if (f.isFloor) {\n          f.setFloorData(scratchReader, frameData);\n        }\n        pushFrame(arc, fpSeek, length);\n\n        return f;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempBlockTreeTermsReader.FieldReader.SegmentTermsEnum#pushFrame(FST.Arc[BytesRef],BytesRef,int).mjava","sourceNew":null,"sourceOld":"      // Pushes a frame we seek'd to\n      Frame pushFrame(FST.Arc<BytesRef> arc, BytesRef frameData, int length) throws IOException {\n        scratchReader.reset(frameData.bytes, frameData.offset, frameData.length);\n        final long code = scratchReader.readVLong();\n        final long fpSeek = code >>> TempBlockTreeTermsWriter.OUTPUT_FLAGS_NUM_BITS;\n        final Frame f = getFrame(1+currentFrame.ord);\n        f.hasTerms = (code & TempBlockTreeTermsWriter.OUTPUT_FLAG_HAS_TERMS) != 0;\n        f.hasTermsOrig = f.hasTerms;\n        f.isFloor = (code & TempBlockTreeTermsWriter.OUTPUT_FLAG_IS_FLOOR) != 0;\n        if (f.isFloor) {\n          f.setFloorData(scratchReader, frameData);\n        }\n        pushFrame(arc, fpSeek, length);\n\n        return f;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["6d01ed6d1df51191983f4dd157aedf5f4650e2b3"],"6d01ed6d1df51191983f4dd157aedf5f4650e2b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6d01ed6d1df51191983f4dd157aedf5f4650e2b3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"6d01ed6d1df51191983f4dd157aedf5f4650e2b3":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}