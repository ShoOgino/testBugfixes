{"path":"lucene/join/src/java/org/apache/lucene/search/join/GenericTermsCollector#verbose(PrintStream,Function[SortedSetDocValues]).mjava","commits":[{"id":"af3f3d3f7a6a159ccf14d58544fd71ae72c89b10","date":1449514606,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/GenericTermsCollector#verbose(PrintStream,Function[SortedSetDocValues]).mjava","pathOld":"/dev/null","sourceNew":"  static Function<SortedSetDocValues> verbose(PrintStream out, Function<SortedSetDocValues> mvFunction){\n    return (ctx) -> {\n      final SortedSetDocValues target = mvFunction.apply(ctx);\n      return new SortedSetDocValues() {\n        \n        @Override\n        public void setDocument(int docID) {\n          target.setDocument(docID);\n          out.println(\"\\ndoc# \"+docID);\n        }\n        \n        @Override\n        public long nextOrd() {\n          return target.nextOrd();\n        }\n        \n        @Override\n        public BytesRef lookupOrd(long ord) {\n          final BytesRef val = target.lookupOrd(ord);\n          out.println(val.toString()+\", \");\n          return val;\n        }\n        \n        @Override\n        public long getValueCount() {\n          return target.getValueCount();\n        }\n      };\n      \n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f7558b5077dd4abd457be151475f13b541f4f13e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/GenericTermsCollector#verbose(PrintStream,Function[SortedSetDocValues]).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/GenericTermsCollector#verbose(PrintStream,Function[SortedSetDocValues]).mjava","sourceNew":"  static Function<SortedSetDocValues> verbose(PrintStream out, Function<SortedSetDocValues> mvFunction){\n    return (ctx) -> {\n      final SortedSetDocValues target = mvFunction.apply(ctx);\n      return new SortedSetDocValues() {\n        \n        @Override\n        public int docID() {\n          return target.docID();\n        }\n\n        @Override\n        public int nextDoc() throws IOException {\n          int docID = target.nextDoc();\n          out.println(\"\\nnextDoc doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public int advance(int dest) throws IOException {\n          int docID = target.advance(dest);\n          out.println(\"\\nadvance(\" + dest + \") -> doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public long cost() {\n          return target.cost();\n        }\n        \n        @Override\n        public long nextOrd() throws IOException {\n          return target.nextOrd();\n        }\n        \n        @Override\n        public BytesRef lookupOrd(long ord) {\n          final BytesRef val = target.lookupOrd(ord);\n          out.println(val.toString()+\", \");\n          return val;\n        }\n        \n        @Override\n        public long getValueCount() {\n          return target.getValueCount();\n        }\n      };\n      \n    };\n  }\n\n","sourceOld":"  static Function<SortedSetDocValues> verbose(PrintStream out, Function<SortedSetDocValues> mvFunction){\n    return (ctx) -> {\n      final SortedSetDocValues target = mvFunction.apply(ctx);\n      return new SortedSetDocValues() {\n        \n        @Override\n        public void setDocument(int docID) {\n          target.setDocument(docID);\n          out.println(\"\\ndoc# \"+docID);\n        }\n        \n        @Override\n        public long nextOrd() {\n          return target.nextOrd();\n        }\n        \n        @Override\n        public BytesRef lookupOrd(long ord) {\n          final BytesRef val = target.lookupOrd(ord);\n          out.println(val.toString()+\", \");\n          return val;\n        }\n        \n        @Override\n        public long getValueCount() {\n          return target.getValueCount();\n        }\n      };\n      \n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/GenericTermsCollector#verbose(PrintStream,Function[SortedSetDocValues]).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/GenericTermsCollector#verbose(PrintStream,Function[SortedSetDocValues]).mjava","sourceNew":"  static Function<SortedSetDocValues> verbose(PrintStream out, Function<SortedSetDocValues> mvFunction){\n    return (ctx) -> {\n      final SortedSetDocValues target = mvFunction.apply(ctx);\n      return new SortedSetDocValues() {\n        \n        @Override\n        public int docID() {\n          return target.docID();\n        }\n\n        @Override\n        public int nextDoc() throws IOException {\n          int docID = target.nextDoc();\n          out.println(\"\\nnextDoc doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public int advance(int dest) throws IOException {\n          int docID = target.advance(dest);\n          out.println(\"\\nadvance(\" + dest + \") -> doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public long cost() {\n          return target.cost();\n        }\n        \n        @Override\n        public long nextOrd() throws IOException {\n          return target.nextOrd();\n        }\n        \n        @Override\n        public BytesRef lookupOrd(long ord) {\n          final BytesRef val = target.lookupOrd(ord);\n          out.println(val.toString()+\", \");\n          return val;\n        }\n        \n        @Override\n        public long getValueCount() {\n          return target.getValueCount();\n        }\n      };\n      \n    };\n  }\n\n","sourceOld":"  static Function<SortedSetDocValues> verbose(PrintStream out, Function<SortedSetDocValues> mvFunction){\n    return (ctx) -> {\n      final SortedSetDocValues target = mvFunction.apply(ctx);\n      return new SortedSetDocValues() {\n        \n        @Override\n        public void setDocument(int docID) {\n          target.setDocument(docID);\n          out.println(\"\\ndoc# \"+docID);\n        }\n        \n        @Override\n        public long nextOrd() {\n          return target.nextOrd();\n        }\n        \n        @Override\n        public BytesRef lookupOrd(long ord) {\n          final BytesRef val = target.lookupOrd(ord);\n          out.println(val.toString()+\", \");\n          return val;\n        }\n        \n        @Override\n        public long getValueCount() {\n          return target.getValueCount();\n        }\n      };\n      \n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f7558b5077dd4abd457be151475f13b541f4f13e","date":1475830751,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/GenericTermsCollector#verbose(PrintStream,Function[SortedSetDocValues]).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/GenericTermsCollector#verbose(PrintStream,Function[SortedSetDocValues]).mjava","sourceNew":"  static Function<SortedSetDocValues> verbose(PrintStream out, Function<SortedSetDocValues> mvFunction){\n    return (ctx) -> {\n      final SortedSetDocValues target = mvFunction.apply(ctx);\n      return new SortedSetDocValues() {\n        \n        @Override\n        public int docID() {\n          return target.docID();\n        }\n\n        @Override\n        public int nextDoc() throws IOException {\n          int docID = target.nextDoc();\n          out.println(\"\\nnextDoc doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public int advance(int dest) throws IOException {\n          int docID = target.advance(dest);\n          out.println(\"\\nadvance(\" + dest + \") -> doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public long cost() {\n          return target.cost();\n        }\n        \n        @Override\n        public long nextOrd() throws IOException {\n          return target.nextOrd();\n        }\n        \n        @Override\n        public BytesRef lookupOrd(long ord) throws IOException {\n          final BytesRef val = target.lookupOrd(ord);\n          out.println(val.toString()+\", \");\n          return val;\n        }\n        \n        @Override\n        public long getValueCount() {\n          return target.getValueCount();\n        }\n      };\n      \n    };\n  }\n\n","sourceOld":"  static Function<SortedSetDocValues> verbose(PrintStream out, Function<SortedSetDocValues> mvFunction){\n    return (ctx) -> {\n      final SortedSetDocValues target = mvFunction.apply(ctx);\n      return new SortedSetDocValues() {\n        \n        @Override\n        public int docID() {\n          return target.docID();\n        }\n\n        @Override\n        public int nextDoc() throws IOException {\n          int docID = target.nextDoc();\n          out.println(\"\\nnextDoc doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public int advance(int dest) throws IOException {\n          int docID = target.advance(dest);\n          out.println(\"\\nadvance(\" + dest + \") -> doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public long cost() {\n          return target.cost();\n        }\n        \n        @Override\n        public long nextOrd() throws IOException {\n          return target.nextOrd();\n        }\n        \n        @Override\n        public BytesRef lookupOrd(long ord) {\n          final BytesRef val = target.lookupOrd(ord);\n          out.println(val.toString()+\", \");\n          return val;\n        }\n        \n        @Override\n        public long getValueCount() {\n          return target.getValueCount();\n        }\n      };\n      \n    };\n  }\n\n","bugFix":["af3f3d3f7a6a159ccf14d58544fd71ae72c89b10"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/GenericTermsCollector#verbose(PrintStream,Function[SortedSetDocValues]).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/GenericTermsCollector#verbose(PrintStream,Function[SortedSetDocValues]).mjava","sourceNew":"  static Function<SortedSetDocValues> verbose(PrintStream out, Function<SortedSetDocValues> mvFunction){\n    return (ctx) -> {\n      final SortedSetDocValues target = mvFunction.apply(ctx);\n      return new SortedSetDocValues() {\n        \n        @Override\n        public int docID() {\n          return target.docID();\n        }\n\n        @Override\n        public int nextDoc() throws IOException {\n          int docID = target.nextDoc();\n          out.println(\"\\nnextDoc doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public int advance(int dest) throws IOException {\n          int docID = target.advance(dest);\n          out.println(\"\\nadvance(\" + dest + \") -> doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public long cost() {\n          return target.cost();\n        }\n        \n        @Override\n        public long nextOrd() throws IOException {\n          return target.nextOrd();\n        }\n        \n        @Override\n        public BytesRef lookupOrd(long ord) throws IOException {\n          final BytesRef val = target.lookupOrd(ord);\n          out.println(val.toString()+\", \");\n          return val;\n        }\n        \n        @Override\n        public long getValueCount() {\n          return target.getValueCount();\n        }\n      };\n      \n    };\n  }\n\n","sourceOld":"  static Function<SortedSetDocValues> verbose(PrintStream out, Function<SortedSetDocValues> mvFunction){\n    return (ctx) -> {\n      final SortedSetDocValues target = mvFunction.apply(ctx);\n      return new SortedSetDocValues() {\n        \n        @Override\n        public void setDocument(int docID) {\n          target.setDocument(docID);\n          out.println(\"\\ndoc# \"+docID);\n        }\n        \n        @Override\n        public long nextOrd() {\n          return target.nextOrd();\n        }\n        \n        @Override\n        public BytesRef lookupOrd(long ord) {\n          final BytesRef val = target.lookupOrd(ord);\n          out.println(val.toString()+\", \");\n          return val;\n        }\n        \n        @Override\n        public long getValueCount() {\n          return target.getValueCount();\n        }\n      };\n      \n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11134e449dabe11d6d0ff6a564d84b82cbe93722","date":1477299083,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/GenericTermsCollector#verbose(PrintStream,Function[SortedSetDocValues]).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/GenericTermsCollector#verbose(PrintStream,Function[SortedSetDocValues]).mjava","sourceNew":"  static Function<SortedSetDocValues> verbose(PrintStream out, Function<SortedSetDocValues> mvFunction){\n    return (ctx) -> {\n      final SortedSetDocValues target = mvFunction.apply(ctx);\n      return new SortedSetDocValues() {\n        \n        @Override\n        public int docID() {\n          return target.docID();\n        }\n\n        @Override\n        public int nextDoc() throws IOException {\n          int docID = target.nextDoc();\n          out.println(\"\\nnextDoc doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public int advance(int dest) throws IOException {\n          int docID = target.advance(dest);\n          out.println(\"\\nadvance(\" + dest + \") -> doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public boolean advanceExact(int dest) throws IOException {\n          boolean exists = target.advanceExact(dest);\n          out.println(\"\\nadvanceExact(\" + dest + \") -> exists# \"+exists);\n          return exists;\n        }\n\n        @Override\n        public long cost() {\n          return target.cost();\n        }\n        \n        @Override\n        public long nextOrd() throws IOException {\n          return target.nextOrd();\n        }\n        \n        @Override\n        public BytesRef lookupOrd(long ord) throws IOException {\n          final BytesRef val = target.lookupOrd(ord);\n          out.println(val.toString()+\", \");\n          return val;\n        }\n        \n        @Override\n        public long getValueCount() {\n          return target.getValueCount();\n        }\n      };\n      \n    };\n  }\n\n","sourceOld":"  static Function<SortedSetDocValues> verbose(PrintStream out, Function<SortedSetDocValues> mvFunction){\n    return (ctx) -> {\n      final SortedSetDocValues target = mvFunction.apply(ctx);\n      return new SortedSetDocValues() {\n        \n        @Override\n        public int docID() {\n          return target.docID();\n        }\n\n        @Override\n        public int nextDoc() throws IOException {\n          int docID = target.nextDoc();\n          out.println(\"\\nnextDoc doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public int advance(int dest) throws IOException {\n          int docID = target.advance(dest);\n          out.println(\"\\nadvance(\" + dest + \") -> doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public long cost() {\n          return target.cost();\n        }\n        \n        @Override\n        public long nextOrd() throws IOException {\n          return target.nextOrd();\n        }\n        \n        @Override\n        public BytesRef lookupOrd(long ord) throws IOException {\n          final BytesRef val = target.lookupOrd(ord);\n          out.println(val.toString()+\", \");\n          return val;\n        }\n        \n        @Override\n        public long getValueCount() {\n          return target.getValueCount();\n        }\n      };\n      \n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2714c85633b642b29871cf5ff8d17d3ba7bfd76","date":1477307753,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/GenericTermsCollector#verbose(PrintStream,Function[SortedSetDocValues]).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/GenericTermsCollector#verbose(PrintStream,Function[SortedSetDocValues]).mjava","sourceNew":"  static Function<SortedSetDocValues> verbose(PrintStream out, Function<SortedSetDocValues> mvFunction){\n    return (ctx) -> {\n      final SortedSetDocValues target = mvFunction.apply(ctx);\n      return new SortedSetDocValues() {\n        \n        @Override\n        public int docID() {\n          return target.docID();\n        }\n\n        @Override\n        public int nextDoc() throws IOException {\n          int docID = target.nextDoc();\n          out.println(\"\\nnextDoc doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public int advance(int dest) throws IOException {\n          int docID = target.advance(dest);\n          out.println(\"\\nadvance(\" + dest + \") -> doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public boolean advanceExact(int dest) throws IOException {\n          boolean exists = target.advanceExact(dest);\n          out.println(\"\\nadvanceExact(\" + dest + \") -> exists# \"+exists);\n          return exists;\n        }\n\n        @Override\n        public long cost() {\n          return target.cost();\n        }\n        \n        @Override\n        public long nextOrd() throws IOException {\n          return target.nextOrd();\n        }\n        \n        @Override\n        public BytesRef lookupOrd(long ord) throws IOException {\n          final BytesRef val = target.lookupOrd(ord);\n          out.println(val.toString()+\", \");\n          return val;\n        }\n        \n        @Override\n        public long getValueCount() {\n          return target.getValueCount();\n        }\n      };\n      \n    };\n  }\n\n","sourceOld":"  static Function<SortedSetDocValues> verbose(PrintStream out, Function<SortedSetDocValues> mvFunction){\n    return (ctx) -> {\n      final SortedSetDocValues target = mvFunction.apply(ctx);\n      return new SortedSetDocValues() {\n        \n        @Override\n        public int docID() {\n          return target.docID();\n        }\n\n        @Override\n        public int nextDoc() throws IOException {\n          int docID = target.nextDoc();\n          out.println(\"\\nnextDoc doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public int advance(int dest) throws IOException {\n          int docID = target.advance(dest);\n          out.println(\"\\nadvance(\" + dest + \") -> doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public long cost() {\n          return target.cost();\n        }\n        \n        @Override\n        public long nextOrd() throws IOException {\n          return target.nextOrd();\n        }\n        \n        @Override\n        public BytesRef lookupOrd(long ord) throws IOException {\n          final BytesRef val = target.lookupOrd(ord);\n          out.println(val.toString()+\", \");\n          return val;\n        }\n        \n        @Override\n        public long getValueCount() {\n          return target.getValueCount();\n        }\n      };\n      \n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/GenericTermsCollector#verbose(PrintStream,Function[SortedSetDocValues]).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/GenericTermsCollector#verbose(PrintStream,Function[SortedSetDocValues]).mjava","sourceNew":"  static Function<SortedSetDocValues> verbose(PrintStream out, Function<SortedSetDocValues> mvFunction){\n    return (ctx) -> {\n      final SortedSetDocValues target = mvFunction.apply(ctx);\n      return new SortedSetDocValues() {\n        \n        @Override\n        public int docID() {\n          return target.docID();\n        }\n\n        @Override\n        public int nextDoc() throws IOException {\n          int docID = target.nextDoc();\n          out.println(\"\\nnextDoc doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public int advance(int dest) throws IOException {\n          int docID = target.advance(dest);\n          out.println(\"\\nadvance(\" + dest + \") -> doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public boolean advanceExact(int dest) throws IOException {\n          boolean exists = target.advanceExact(dest);\n          out.println(\"\\nadvanceExact(\" + dest + \") -> exists# \"+exists);\n          return exists;\n        }\n\n        @Override\n        public long cost() {\n          return target.cost();\n        }\n        \n        @Override\n        public long nextOrd() throws IOException {\n          return target.nextOrd();\n        }\n        \n        @Override\n        public BytesRef lookupOrd(long ord) throws IOException {\n          final BytesRef val = target.lookupOrd(ord);\n          out.println(val.toString()+\", \");\n          return val;\n        }\n        \n        @Override\n        public long getValueCount() {\n          return target.getValueCount();\n        }\n      };\n      \n    };\n  }\n\n","sourceOld":"  static Function<SortedSetDocValues> verbose(PrintStream out, Function<SortedSetDocValues> mvFunction){\n    return (ctx) -> {\n      final SortedSetDocValues target = mvFunction.apply(ctx);\n      return new SortedSetDocValues() {\n        \n        @Override\n        public int docID() {\n          return target.docID();\n        }\n\n        @Override\n        public int nextDoc() throws IOException {\n          int docID = target.nextDoc();\n          out.println(\"\\nnextDoc doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public int advance(int dest) throws IOException {\n          int docID = target.advance(dest);\n          out.println(\"\\nadvance(\" + dest + \") -> doc# \"+docID);\n          return docID;\n        }\n\n        @Override\n        public long cost() {\n          return target.cost();\n        }\n        \n        @Override\n        public long nextOrd() throws IOException {\n          return target.nextOrd();\n        }\n        \n        @Override\n        public BytesRef lookupOrd(long ord) throws IOException {\n          final BytesRef val = target.lookupOrd(ord);\n          out.println(val.toString()+\", \");\n          return val;\n        }\n        \n        @Override\n        public long getValueCount() {\n          return target.getValueCount();\n        }\n      };\n      \n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f7558b5077dd4abd457be151475f13b541f4f13e":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"11134e449dabe11d6d0ff6a564d84b82cbe93722":["f7558b5077dd4abd457be151475f13b541f4f13e"],"af3f3d3f7a6a159ccf14d58544fd71ae72c89b10":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["af3f3d3f7a6a159ccf14d58544fd71ae72c89b10","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["af3f3d3f7a6a159ccf14d58544fd71ae72c89b10"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"d2714c85633b642b29871cf5ff8d17d3ba7bfd76":["f7558b5077dd4abd457be151475f13b541f4f13e","11134e449dabe11d6d0ff6a564d84b82cbe93722"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["af3f3d3f7a6a159ccf14d58544fd71ae72c89b10","f7558b5077dd4abd457be151475f13b541f4f13e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2714c85633b642b29871cf5ff8d17d3ba7bfd76"]},"commit2Childs":{"f7558b5077dd4abd457be151475f13b541f4f13e":["11134e449dabe11d6d0ff6a564d84b82cbe93722","d2714c85633b642b29871cf5ff8d17d3ba7bfd76","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"11134e449dabe11d6d0ff6a564d84b82cbe93722":["d2714c85633b642b29871cf5ff8d17d3ba7bfd76"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["f7558b5077dd4abd457be151475f13b541f4f13e"],"af3f3d3f7a6a159ccf14d58544fd71ae72c89b10":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af3f3d3f7a6a159ccf14d58544fd71ae72c89b10"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"d2714c85633b642b29871cf5ff8d17d3ba7bfd76":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}