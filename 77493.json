{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"833a7987bc1c94455fde83e3311f72bddedcfb93","date":1279951470,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, \n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, \n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, \n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory(random);\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, \n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n      dir.close();\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, \n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n      dir.close();\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory(random);\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random, \n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n      dir.close();\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4ce75c5c8181cb19bc310a09f2dc44481cfa1ac","date":1290886721,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n      dir.close();\n    }\n\n","bugFix":["a30c6ea5c2c1da6d2956e42721e02ccb29910be5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(\n          dir,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(\n          dir,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( \n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      ((LogMergePolicy) writer.getMergePolicy()).setMergeFactor(10);\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","date":1292695408,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(\n          dir,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(\n          dir,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(\n          dir,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(\n          dir,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(\n          dir,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(\n          dir,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(\n          dir,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(\n          dir,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(\n          dir,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(\n          dir,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(\n          dir,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(\n          dir,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(\n          dir,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(\n          dir,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      Document doc = new Document();\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      customType.setStoreTermVectors(true);\n      customType.setStoreTermVectorPositions(true);\n      customType.setStoreTermVectorOffsets(true);\n      doc.add(newField(\"field\", \"aaa\", customType));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(\n          dir,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      Document doc = new Document();\n      doc.add(newField(\"field\", \"aaa\", Store.YES, Index.ANALYZED, TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(\n          dir,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      Document doc = new Document();\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      customType.setStoreTermVectors(true);\n      customType.setStoreTermVectorPositions(true);\n      customType.setStoreTermVectorOffsets(true);\n      doc.add(newField(\"field\", \"aaa\", customType));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = newDirectory();\n      IndexWriter writer = new IndexWriter(\n          dir,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n              setMaxBufferedDocs(2).\n              setMergePolicy(newLogMergePolicy(10))\n      );\n      Document doc = new Document();\n      FieldType customType = new FieldType(TextField.TYPE_STORED);\n      customType.setStoreTermVectors(true);\n      customType.setStoreTermVectorPositions(true);\n      customType.setStoreTermVectorOffsets(true);\n      doc.add(newField(\"field\", \"aaa\", customType));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assertEquals(10, sis.size());\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["3bb13258feba31ab676502787ab2e1779f129b7a","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["833a7987bc1c94455fde83e3311f72bddedcfb93","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"3bb13258feba31ab676502787ab2e1779f129b7a":["132903c28af3aa6f67284b78de91c0f0a99488c2","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["d4ce75c5c8181cb19bc310a09f2dc44481cfa1ac"],"d4ce75c5c8181cb19bc310a09f2dc44481cfa1ac":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"833a7987bc1c94455fde83e3311f72bddedcfb93":["d572389229127c297dd1fa5ce4758e1cec41e799"]},"commit2Childs":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"d572389229127c297dd1fa5ce4758e1cec41e799":["b21422ff1d1d56499dec481f193b402e5e8def5b","833a7987bc1c94455fde83e3311f72bddedcfb93"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["3bb13258feba31ab676502787ab2e1779f129b7a","d4ce75c5c8181cb19bc310a09f2dc44481cfa1ac"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"3bb13258feba31ab676502787ab2e1779f129b7a":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"833a7987bc1c94455fde83e3311f72bddedcfb93":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d4ce75c5c8181cb19bc310a09f2dc44481cfa1ac":["4e8cc373c801e54cec75daf9f52792cb4b17f536"]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}