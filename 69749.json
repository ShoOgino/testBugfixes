{"path":"src/java/org/apache/lucene/index/MultiLevelSkipListReader#loadNextSkip(int).mjava","commits":[{"id":"08d1ee9808e270c86ce5c9be08b8bd7a19d0a709","date":1180597733,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiLevelSkipListReader#loadNextSkip(int).mjava","pathOld":"/dev/null","sourceNew":"  private boolean loadNextSkip(int level) throws IOException {\r\n    // we have to skip, the target document is greater than the current\r\n    // skip list entry        \r\n    setLastSkipData(level);\r\n      \r\n    numSkipped[level] += skipInterval[level];\r\n      \r\n    if (numSkipped[level] > docCount) {\r\n      // this skip list is exhausted\r\n      skipDoc[level] = Integer.MAX_VALUE;\r\n      if (numberOfSkipLevels > level) numberOfSkipLevels = level; \r\n      return false;\r\n    }\r\n\r\n    // read next skip entry\r\n    skipDoc[level] += readSkipData(level, skipStream[level]);\r\n    \r\n    if (level != 0) {\r\n      // read the child pointer if we are not on the leaf level\r\n      childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\r\n    }\r\n    \r\n    return true;\r\n\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2123bddbd65dea198cac380540636ce43a880403","date":1211269254,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiLevelSkipListReader#loadNextSkip(int).mjava","pathOld":"src/java/org/apache/lucene/index/MultiLevelSkipListReader#loadNextSkip(int).mjava","sourceNew":"  private boolean loadNextSkip(int level) throws IOException {\n    // we have to skip, the target document is greater than the current\n    // skip list entry        \n    setLastSkipData(level);\n      \n    numSkipped[level] += skipInterval[level];\n      \n    if (numSkipped[level] > docCount) {\n      // this skip list is exhausted\n      skipDoc[level] = Integer.MAX_VALUE;\n      if (numberOfSkipLevels > level) numberOfSkipLevels = level; \n      return false;\n    }\n\n    // read next skip entry\n    skipDoc[level] += readSkipData(level, skipStream[level]);\n    \n    if (level != 0) {\n      // read the child pointer if we are not on the leaf level\n      childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n    \n    return true;\n\n  }\n\n","sourceOld":"  private boolean loadNextSkip(int level) throws IOException {\r\n    // we have to skip, the target document is greater than the current\r\n    // skip list entry        \r\n    setLastSkipData(level);\r\n      \r\n    numSkipped[level] += skipInterval[level];\r\n      \r\n    if (numSkipped[level] > docCount) {\r\n      // this skip list is exhausted\r\n      skipDoc[level] = Integer.MAX_VALUE;\r\n      if (numberOfSkipLevels > level) numberOfSkipLevels = level; \r\n      return false;\r\n    }\r\n\r\n    // read next skip entry\r\n    skipDoc[level] += readSkipData(level, skipStream[level]);\r\n    \r\n    if (level != 0) {\r\n      // read the child pointer if we are not on the leaf level\r\n      childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\r\n    }\r\n    \r\n    return true;\r\n\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MultiLevelSkipListReader#loadNextSkip(int).mjava","pathOld":"src/java/org/apache/lucene/index/MultiLevelSkipListReader#loadNextSkip(int).mjava","sourceNew":"  private boolean loadNextSkip(int level) throws IOException {\n    // we have to skip, the target document is greater than the current\n    // skip list entry        \n    setLastSkipData(level);\n      \n    numSkipped[level] += skipInterval[level];\n      \n    if (numSkipped[level] > docCount) {\n      // this skip list is exhausted\n      skipDoc[level] = Integer.MAX_VALUE;\n      if (numberOfSkipLevels > level) numberOfSkipLevels = level; \n      return false;\n    }\n\n    // read next skip entry\n    skipDoc[level] += readSkipData(level, skipStream[level]);\n    \n    if (level != 0) {\n      // read the child pointer if we are not on the leaf level\n      childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n    \n    return true;\n\n  }\n\n","sourceOld":"  private boolean loadNextSkip(int level) throws IOException {\n    // we have to skip, the target document is greater than the current\n    // skip list entry        \n    setLastSkipData(level);\n      \n    numSkipped[level] += skipInterval[level];\n      \n    if (numSkipped[level] > docCount) {\n      // this skip list is exhausted\n      skipDoc[level] = Integer.MAX_VALUE;\n      if (numberOfSkipLevels > level) numberOfSkipLevels = level; \n      return false;\n    }\n\n    // read next skip entry\n    skipDoc[level] += readSkipData(level, skipStream[level]);\n    \n    if (level != 0) {\n      // read the child pointer if we are not on the leaf level\n      childPointer[level] = skipStream[level].readVLong() + skipPointer[level - 1];\n    }\n    \n    return true;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2123bddbd65dea198cac380540636ce43a880403":["08d1ee9808e270c86ce5c9be08b8bd7a19d0a709"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["2123bddbd65dea198cac380540636ce43a880403"],"08d1ee9808e270c86ce5c9be08b8bd7a19d0a709":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["08d1ee9808e270c86ce5c9be08b8bd7a19d0a709"],"2123bddbd65dea198cac380540636ce43a880403":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"08d1ee9808e270c86ce5c9be08b8bd7a19d0a709":["2123bddbd65dea198cac380540636ce43a880403"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}