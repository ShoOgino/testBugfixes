{"path":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","sourceNew":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      IndexReader reader = readers.get(i);\n      if (reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        int numFieldInfos = segmentFieldInfos.size();\n        for (int j = 0; same && j < numFieldInfos; j++) {\n          same = fieldInfos.fieldName(j).equals(segmentFieldInfos.fieldName(j));\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","sourceOld":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      IndexReader reader = readers.get(i);\n      if (reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        int numFieldInfos = segmentFieldInfos.size();\n        for (int j = 0; same && j < numFieldInfos; j++) {\n          same = fieldInfos.fieldName(j).equals(segmentFieldInfos.fieldName(j));\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94cb8b3ec0439dfd8e179637ee4191cd9c6227e5","date":1292711882,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","sourceNew":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      IndexReader reader = readers.get(i);\n      if (reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        int numFieldInfos = segmentFieldInfos.size();\n        for (int j = 0; same && j < numFieldInfos; j++) {\n          same = fieldInfos.fieldName(j).equals(segmentFieldInfos.fieldName(j));\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n          matchedCount++;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","sourceOld":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      IndexReader reader = readers.get(i);\n      if (reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        int numFieldInfos = segmentFieldInfos.size();\n        for (int j = 0; same && j < numFieldInfos; j++) {\n          same = fieldInfos.fieldName(j).equals(segmentFieldInfos.fieldName(j));\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","sourceNew":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      IndexReader reader = readers.get(i);\n      if (reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        int numFieldInfos = segmentFieldInfos.size();\n        for (int j = 0; same && j < numFieldInfos; j++) {\n          same = fieldInfos.fieldName(j).equals(segmentFieldInfos.fieldName(j));\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n          matchedCount++;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","sourceOld":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      IndexReader reader = readers.get(i);\n      if (reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        int numFieldInfos = segmentFieldInfos.size();\n        for (int j = 0; same && j < numFieldInfos; j++) {\n          same = fieldInfos.fieldName(j).equals(segmentFieldInfos.fieldName(j));\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","sourceNew":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      IndexReader reader = readers.get(i);\n      if (reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        int numFieldInfos = segmentFieldInfos.size();\n        for (int j = 0; same && j < numFieldInfos; j++) {\n          same = fieldInfos.fieldName(j).equals(segmentFieldInfos.fieldName(j));\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n          matchedCount++;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","sourceOld":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      IndexReader reader = readers.get(i);\n      if (reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        int numFieldInfos = segmentFieldInfos.size();\n        for (int j = 0; same && j < numFieldInfos; j++) {\n          same = fieldInfos.fieldName(j).equals(segmentFieldInfos.fieldName(j));\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0c7a8f7304b75b1528814c5820fa23a96816c27","date":1298314239,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","sourceNew":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      IndexReader reader = readers.get(i);\n      if (reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        for (FieldInfo fi : segmentFieldInfos) {\n          same = fieldInfos.fieldName(fi.number).equals(fi.name);\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n          matchedCount++;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","sourceOld":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      IndexReader reader = readers.get(i);\n      if (reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        int numFieldInfos = segmentFieldInfos.size();\n        for (int j = 0; same && j < numFieldInfos; j++) {\n          same = fieldInfos.fieldName(j).equals(segmentFieldInfos.fieldName(j));\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n          matchedCount++;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","sourceNew":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      IndexReader reader = readers.get(i);\n      if (reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        for (FieldInfo fi : segmentFieldInfos) {\n          same = fieldInfos.fieldName(fi.number).equals(fi.name);\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n          matchedCount++;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","sourceOld":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      IndexReader reader = readers.get(i);\n      if (reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        int numFieldInfos = segmentFieldInfos.size();\n        for (int j = 0; same && j < numFieldInfos; j++) {\n          same = fieldInfos.fieldName(j).equals(segmentFieldInfos.fieldName(j));\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n          matchedCount++;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14ec33385f6fbb6ce172882d14605790418a5d31","date":1298910796,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","sourceNew":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      IndexReader reader = readers.get(i);\n      if (reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        int numFieldInfos = segmentFieldInfos.size();\n        for (int j = 0; same && j < numFieldInfos; j++) {\n          same = fieldInfos.fieldName(j).equals(segmentFieldInfos.fieldName(j));\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n          matchedCount++;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","sourceOld":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      IndexReader reader = readers.get(i);\n      if (reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        for (FieldInfo fi : segmentFieldInfos) {\n          same = fieldInfos.fieldName(fi.number).equals(fi.name);\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n          matchedCount++;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1224a4027481acce15495b03bce9b48b93b42722","date":1300792329,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","sourceNew":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      IndexReader reader = readers.get(i);\n      if (reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        for (FieldInfo fi : segmentFieldInfos) {\n          same = fieldInfos.fieldName(fi.number).equals(fi.name);\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n          matchedCount++;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","sourceOld":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      IndexReader reader = readers.get(i);\n      if (reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        int numFieldInfos = segmentFieldInfos.size();\n        for (int j = 0; same && j < numFieldInfos; j++) {\n          same = fieldInfos.fieldName(j).equals(segmentFieldInfos.fieldName(j));\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n          matchedCount++;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","sourceNew":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      IndexReader reader = readers.get(i);\n      if (reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        for (FieldInfo fi : segmentFieldInfos) {\n          same = fieldInfos.fieldName(fi.number).equals(fi.name);\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n          matchedCount++;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","sourceOld":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      IndexReader reader = readers.get(i);\n      if (reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        int numFieldInfos = segmentFieldInfos.size();\n        for (int j = 0; same && j < numFieldInfos; j++) {\n          same = fieldInfos.fieldName(j).equals(segmentFieldInfos.fieldName(j));\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n          matchedCount++;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0061262413ecc163d6eebba1b5c43ab91a0c2dc5","date":1311195279,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","sourceNew":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      MergeState.IndexReaderAndLiveDocs reader = readers.get(i);\n      if (reader.reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader.reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        for (FieldInfo fi : segmentFieldInfos) {\n          same = fieldInfos.fieldName(fi.number).equals(fi.name);\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n          matchedCount++;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","sourceOld":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      IndexReader reader = readers.get(i);\n      if (reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        for (FieldInfo fi : segmentFieldInfos) {\n          same = fieldInfos.fieldName(fi.number).equals(fi.name);\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n          matchedCount++;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","bugFix":null,"bugIntro":["c95a819869502635864dac0a788f874787e3395b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","sourceNew":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = mergeState.readers.size();\n    mergeState.matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      MergeState.IndexReaderAndLiveDocs reader = mergeState.readers.get(i);\n      if (reader.reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader.reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        for (FieldInfo fi : segmentFieldInfos) {\n          same = mergeState.fieldInfos.fieldName(fi.number).equals(fi.name);\n        }\n        if (same) {\n          mergeState.matchingSegmentReaders[i] = segmentReader;\n          mergeState.matchedCount++;\n        }\n      }\n    }\n\n    if (mergeState.infoStream != null) {\n      mergeState.infoStream.message(\"SM\", \"merge store matchedCount=\" + mergeState.matchedCount + \" vs \" + mergeState.readers.size());\n      if (mergeState.matchedCount != mergeState.readers.size()) {\n        mergeState.infoStream.message(\"SM\", \"\" + (mergeState.readers.size() - mergeState.matchedCount) + \" non-bulk merges\");\n      }\n    }\n  }\n\n","sourceOld":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = readers.size();\n    matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      MergeState.IndexReaderAndLiveDocs reader = readers.get(i);\n      if (reader.reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader.reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        for (FieldInfo fi : segmentFieldInfos) {\n          same = fieldInfos.fieldName(fi.number).equals(fi.name);\n        }\n        if (same) {\n          matchingSegmentReaders[i] = segmentReader;\n          matchedCount++;\n        }\n      }\n    }\n\n    // Used for bulk-reading raw bytes for stored fields\n    rawDocLengths = new int[MAX_RAW_MERGE_DOCS];\n    rawDocLengths2 = new int[MAX_RAW_MERGE_DOCS];\n  }\n\n","bugFix":null,"bugIntro":["c95a819869502635864dac0a788f874787e3395b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6d826728f3843425e335d7f7c856971067540dc3","date":1321315952,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","sourceNew":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = mergeState.readers.size();\n    mergeState.matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      MergeState.IndexReaderAndLiveDocs reader = mergeState.readers.get(i);\n      if (reader.reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader.reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        for (FieldInfo fi : segmentFieldInfos) {\n          if (!mergeState.fieldInfos.fieldName(fi.number).equals(fi.name)) {\n            same = false;\n            break;\n          }\n        }\n        if (same) {\n          mergeState.matchingSegmentReaders[i] = segmentReader;\n          mergeState.matchedCount++;\n        }\n      }\n    }\n\n    if (mergeState.infoStream != null) {\n      mergeState.infoStream.message(\"SM\", \"merge store matchedCount=\" + mergeState.matchedCount + \" vs \" + mergeState.readers.size());\n      if (mergeState.matchedCount != mergeState.readers.size()) {\n        mergeState.infoStream.message(\"SM\", \"\" + (mergeState.readers.size() - mergeState.matchedCount) + \" non-bulk merges\");\n      }\n    }\n  }\n\n","sourceOld":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = mergeState.readers.size();\n    mergeState.matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      MergeState.IndexReaderAndLiveDocs reader = mergeState.readers.get(i);\n      if (reader.reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader.reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        for (FieldInfo fi : segmentFieldInfos) {\n          same = mergeState.fieldInfos.fieldName(fi.number).equals(fi.name);\n        }\n        if (same) {\n          mergeState.matchingSegmentReaders[i] = segmentReader;\n          mergeState.matchedCount++;\n        }\n      }\n    }\n\n    if (mergeState.infoStream != null) {\n      mergeState.infoStream.message(\"SM\", \"merge store matchedCount=\" + mergeState.matchedCount + \" vs \" + mergeState.readers.size());\n      if (mergeState.matchedCount != mergeState.readers.size()) {\n        mergeState.infoStream.message(\"SM\", \"\" + (mergeState.readers.size() - mergeState.matchedCount) + \" non-bulk merges\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"58c6bbc222f074c844e736e6fb23647e3db9cfe3","date":1322743940,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","sourceNew":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = mergeState.readers.size();\n    mergeState.matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      MergeState.IndexReaderAndLiveDocs reader = mergeState.readers.get(i);\n      if (reader.reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader.reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        for (FieldInfo fi : segmentFieldInfos) {\n          if (!mergeState.fieldInfos.fieldName(fi.number).equals(fi.name)) {\n            same = false;\n            break;\n          }\n        }\n        if (same) {\n          mergeState.matchingSegmentReaders[i] = segmentReader;\n          mergeState.matchedCount++;\n        }\n      }\n    }\n\n    if (mergeState.infoStream.isEnabled(\"SM\")) {\n      mergeState.infoStream.message(\"SM\", \"merge store matchedCount=\" + mergeState.matchedCount + \" vs \" + mergeState.readers.size());\n      if (mergeState.matchedCount != mergeState.readers.size()) {\n        mergeState.infoStream.message(\"SM\", \"\" + (mergeState.readers.size() - mergeState.matchedCount) + \" non-bulk merges\");\n      }\n    }\n  }\n\n","sourceOld":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = mergeState.readers.size();\n    mergeState.matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      MergeState.IndexReaderAndLiveDocs reader = mergeState.readers.get(i);\n      if (reader.reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader.reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        for (FieldInfo fi : segmentFieldInfos) {\n          if (!mergeState.fieldInfos.fieldName(fi.number).equals(fi.name)) {\n            same = false;\n            break;\n          }\n        }\n        if (same) {\n          mergeState.matchingSegmentReaders[i] = segmentReader;\n          mergeState.matchedCount++;\n        }\n      }\n    }\n\n    if (mergeState.infoStream != null) {\n      mergeState.infoStream.message(\"SM\", \"merge store matchedCount=\" + mergeState.matchedCount + \" vs \" + mergeState.readers.size());\n      if (mergeState.matchedCount != mergeState.readers.size()) {\n        mergeState.infoStream.message(\"SM\", \"\" + (mergeState.readers.size() - mergeState.matchedCount) + \" non-bulk merges\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06","date":1326148180,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","sourceNew":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = mergeState.readers.size();\n    mergeState.matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      MergeState.IndexReaderAndLiveDocs reader = mergeState.readers.get(i);\n      // TODO: we may be able to broaden this to\n      // non-SegmentReaders, since FieldInfos is now\n      // required?  But... this'd also require exposing\n      // bulk-copy (TVs and stored fields) API in foreign\n      // readers..\n      if (reader.reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader.reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.getFieldInfos();\n        for (FieldInfo fi : segmentFieldInfos) {\n          if (!mergeState.fieldInfos.fieldName(fi.number).equals(fi.name)) {\n            same = false;\n            break;\n          }\n        }\n        if (same) {\n          mergeState.matchingSegmentReaders[i] = segmentReader;\n          mergeState.matchedCount++;\n        }\n      }\n    }\n\n    if (mergeState.infoStream.isEnabled(\"SM\")) {\n      mergeState.infoStream.message(\"SM\", \"merge store matchedCount=\" + mergeState.matchedCount + \" vs \" + mergeState.readers.size());\n      if (mergeState.matchedCount != mergeState.readers.size()) {\n        mergeState.infoStream.message(\"SM\", \"\" + (mergeState.readers.size() - mergeState.matchedCount) + \" non-bulk merges\");\n      }\n    }\n  }\n\n","sourceOld":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = mergeState.readers.size();\n    mergeState.matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      MergeState.IndexReaderAndLiveDocs reader = mergeState.readers.get(i);\n      if (reader.reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader.reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.fieldInfos();\n        for (FieldInfo fi : segmentFieldInfos) {\n          if (!mergeState.fieldInfos.fieldName(fi.number).equals(fi.name)) {\n            same = false;\n            break;\n          }\n        }\n        if (same) {\n          mergeState.matchingSegmentReaders[i] = segmentReader;\n          mergeState.matchedCount++;\n        }\n      }\n    }\n\n    if (mergeState.infoStream.isEnabled(\"SM\")) {\n      mergeState.infoStream.message(\"SM\", \"merge store matchedCount=\" + mergeState.matchedCount + \" vs \" + mergeState.readers.size());\n      if (mergeState.matchedCount != mergeState.readers.size()) {\n        mergeState.infoStream.message(\"SM\", \"\" + (mergeState.readers.size() - mergeState.matchedCount) + \" non-bulk merges\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentMerger#setMatchingSegmentReaders().mjava","sourceNew":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = mergeState.readers.size();\n    mergeState.matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      MergeState.IndexReaderAndLiveDocs reader = mergeState.readers.get(i);\n      // TODO: we may be able to broaden this to\n      // non-SegmentReaders, since FieldInfos is now\n      // required?  But... this'd also require exposing\n      // bulk-copy (TVs and stored fields) API in foreign\n      // readers..\n      if (reader.reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader.reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.getFieldInfos();\n        for (FieldInfo fi : segmentFieldInfos) {\n          if (!mergeState.fieldInfos.fieldName(fi.number).equals(fi.name)) {\n            same = false;\n            break;\n          }\n        }\n        if (same) {\n          mergeState.matchingSegmentReaders[i] = segmentReader;\n          mergeState.matchedCount++;\n        }\n      }\n    }\n\n    if (mergeState.infoStream.isEnabled(\"SM\")) {\n      mergeState.infoStream.message(\"SM\", \"merge store matchedCount=\" + mergeState.matchedCount + \" vs \" + mergeState.readers.size());\n      if (mergeState.matchedCount != mergeState.readers.size()) {\n        mergeState.infoStream.message(\"SM\", \"\" + (mergeState.readers.size() - mergeState.matchedCount) + \" non-bulk merges\");\n      }\n    }\n  }\n\n","sourceOld":"  private void setMatchingSegmentReaders() {\n    // If the i'th reader is a SegmentReader and has\n    // identical fieldName -> number mapping, then this\n    // array will be non-null at position i:\n    int numReaders = mergeState.readers.size();\n    mergeState.matchingSegmentReaders = new SegmentReader[numReaders];\n\n    // If this reader is a SegmentReader, and all of its\n    // field name -> number mappings match the \"merged\"\n    // FieldInfos, then we can do a bulk copy of the\n    // stored fields:\n    for (int i = 0; i < numReaders; i++) {\n      MergeState.IndexReaderAndLiveDocs reader = mergeState.readers.get(i);\n      // TODO: we may be able to broaden this to\n      // non-SegmentReaders, since FieldInfos is now\n      // required?  But... this'd also require exposing\n      // bulk-copy (TVs and stored fields) API in foreign\n      // readers..\n      if (reader.reader instanceof SegmentReader) {\n        SegmentReader segmentReader = (SegmentReader) reader.reader;\n        boolean same = true;\n        FieldInfos segmentFieldInfos = segmentReader.getFieldInfos();\n        for (FieldInfo fi : segmentFieldInfos) {\n          if (!mergeState.fieldInfos.fieldName(fi.number).equals(fi.name)) {\n            same = false;\n            break;\n          }\n        }\n        if (same) {\n          mergeState.matchingSegmentReaders[i] = segmentReader;\n          mergeState.matchedCount++;\n        }\n      }\n    }\n\n    if (mergeState.infoStream.isEnabled(\"SM\")) {\n      mergeState.infoStream.message(\"SM\", \"merge store matchedCount=\" + mergeState.matchedCount + \" vs \" + mergeState.readers.size());\n      if (mergeState.matchedCount != mergeState.readers.size()) {\n        mergeState.infoStream.message(\"SM\", \"\" + (mergeState.readers.size() - mergeState.matchedCount) + \" non-bulk merges\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"58c6bbc222f074c844e736e6fb23647e3db9cfe3":["6d826728f3843425e335d7f7c856971067540dc3"],"0061262413ecc163d6eebba1b5c43ab91a0c2dc5":["1224a4027481acce15495b03bce9b48b93b42722"],"6d826728f3843425e335d7f7c856971067540dc3":["06584e6e98d592b34e1329b384182f368d2025e8"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3321cfbf7f8aba27e37e7a4d6901531a97ac2b06"],"06584e6e98d592b34e1329b384182f368d2025e8":["0061262413ecc163d6eebba1b5c43ab91a0c2dc5"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["9454a6510e2db155fb01faa5c049b06ece95fab9","94cb8b3ec0439dfd8e179637ee4191cd9c6227e5"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","94cb8b3ec0439dfd8e179637ee4191cd9c6227e5"],"14ec33385f6fbb6ce172882d14605790418a5d31":["b0c7a8f7304b75b1528814c5820fa23a96816c27"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","1224a4027481acce15495b03bce9b48b93b42722"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["94cb8b3ec0439dfd8e179637ee4191cd9c6227e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"94cb8b3ec0439dfd8e179637ee4191cd9c6227e5":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06":["58c6bbc222f074c844e736e6fb23647e3db9cfe3"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b0c7a8f7304b75b1528814c5820fa23a96816c27"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1224a4027481acce15495b03bce9b48b93b42722":["14ec33385f6fbb6ce172882d14605790418a5d31"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"58c6bbc222f074c844e736e6fb23647e3db9cfe3":["3321cfbf7f8aba27e37e7a4d6901531a97ac2b06"],"0061262413ecc163d6eebba1b5c43ab91a0c2dc5":["06584e6e98d592b34e1329b384182f368d2025e8"],"6d826728f3843425e335d7f7c856971067540dc3":["58c6bbc222f074c844e736e6fb23647e3db9cfe3"],"06584e6e98d592b34e1329b384182f368d2025e8":["6d826728f3843425e335d7f7c856971067540dc3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"14ec33385f6fbb6ce172882d14605790418a5d31":["1224a4027481acce15495b03bce9b48b93b42722"],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["14ec33385f6fbb6ce172882d14605790418a5d31","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"94cb8b3ec0439dfd8e179637ee4191cd9c6227e5":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b0c7a8f7304b75b1528814c5820fa23a96816c27"],"3321cfbf7f8aba27e37e7a4d6901531a97ac2b06":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"1224a4027481acce15495b03bce9b48b93b42722":["0061262413ecc163d6eebba1b5c43ab91a0c2dc5","d619839baa8ce5503e496b94a9e42ad6f079293f"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","94cb8b3ec0439dfd8e179637ee4191cd9c6227e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d619839baa8ce5503e496b94a9e42ad6f079293f","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}