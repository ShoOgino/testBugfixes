{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testRetainMockAttribute().mjava","commits":[{"id":"1e15bea9339982eec538668b67ae252b28e0003e","date":1319539476,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testRetainMockAttribute().mjava","pathOld":"/dev/null","sourceNew":"  public void testRetainMockAttribute() throws Exception {\n    String[] dict = { \"abc\", \"d\", \"efg\" };\n    Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        new StringReader(\"abcdefg\"));\n    TokenStream stream = new MockRetainAttributeFilter(tokenizer);\n    stream = new DictionaryCompoundWordTokenFilter(\n        TEST_VERSION_CURRENT, stream, dict,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n    MockRetainAttribute retAtt = stream.addAttribute(MockRetainAttribute.class);\n    while (stream.incrementToken()) {\n      assertTrue(\"Custom attribute value was lost\", retAtt.getRetain());\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"906468dad7061882fe0b86de96423c16d5e9bc1e","date":1319542276,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testRetainMockAttribute().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testRetainMockAttribute().mjava","sourceNew":"  public void testRetainMockAttribute() throws Exception {\n    CharArraySet dict = makeDictionary(\"abc\", \"d\", \"efg\");\n    Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        new StringReader(\"abcdefg\"));\n    TokenStream stream = new MockRetainAttributeFilter(tokenizer);\n    stream = new DictionaryCompoundWordTokenFilter(\n        TEST_VERSION_CURRENT, stream, dict,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n    MockRetainAttribute retAtt = stream.addAttribute(MockRetainAttribute.class);\n    while (stream.incrementToken()) {\n      assertTrue(\"Custom attribute value was lost\", retAtt.getRetain());\n    }\n\n  }\n\n","sourceOld":"  public void testRetainMockAttribute() throws Exception {\n    String[] dict = { \"abc\", \"d\", \"efg\" };\n    Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        new StringReader(\"abcdefg\"));\n    TokenStream stream = new MockRetainAttributeFilter(tokenizer);\n    stream = new DictionaryCompoundWordTokenFilter(\n        TEST_VERSION_CURRENT, stream, dict,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n    MockRetainAttribute retAtt = stream.addAttribute(MockRetainAttribute.class);\n    while (stream.incrementToken()) {\n      assertTrue(\"Custom attribute value was lost\", retAtt.getRetain());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testRetainMockAttribute().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testRetainMockAttribute().mjava","sourceNew":"  public void testRetainMockAttribute() throws Exception {\n    CharArraySet dict = makeDictionary(\"abc\", \"d\", \"efg\");\n    Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        new StringReader(\"abcdefg\"));\n    TokenStream stream = new MockRetainAttributeFilter(tokenizer);\n    stream = new DictionaryCompoundWordTokenFilter(\n        TEST_VERSION_CURRENT, stream, dict,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n    MockRetainAttribute retAtt = stream.addAttribute(MockRetainAttribute.class);\n    while (stream.incrementToken()) {\n      assertTrue(\"Custom attribute value was lost\", retAtt.getRetain());\n    }\n\n  }\n\n","sourceOld":"  public void testRetainMockAttribute() throws Exception {\n    CharArraySet dict = makeDictionary(\"abc\", \"d\", \"efg\");\n    Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT,\n        new StringReader(\"abcdefg\"));\n    TokenStream stream = new MockRetainAttributeFilter(tokenizer);\n    stream = new DictionaryCompoundWordTokenFilter(\n        TEST_VERSION_CURRENT, stream, dict,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, false);\n    MockRetainAttribute retAtt = stream.addAttribute(MockRetainAttribute.class);\n    while (stream.incrementToken()) {\n      assertTrue(\"Custom attribute value was lost\", retAtt.getRetain());\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["906468dad7061882fe0b86de96423c16d5e9bc1e"],"1e15bea9339982eec538668b67ae252b28e0003e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"906468dad7061882fe0b86de96423c16d5e9bc1e":["1e15bea9339982eec538668b67ae252b28e0003e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1e15bea9339982eec538668b67ae252b28e0003e":["906468dad7061882fe0b86de96423c16d5e9bc1e"],"906468dad7061882fe0b86de96423c16d5e9bc1e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e15bea9339982eec538668b67ae252b28e0003e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}