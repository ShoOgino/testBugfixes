{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoWideNorthRectangle#getRelationship(GeoShape).mjava","commits":[{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoWideNorthRectangle#getRelationship(GeoShape).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoWideNorthRectangle#getRelationship(GeoShape).mjava","sourceNew":"  @Override\n  public int getRelationship(final GeoShape path) {\n    //System.err.println(this+\" comparing to \"+path);\n    final int insideRectangle = isShapeInsideBBox(path);\n    if (insideRectangle == SOME_INSIDE) {\n      //System.err.println(\" some inside\");\n      return OVERLAPS;\n    }\n\n    final boolean insideShape = path.isWithin(planetModel.NORTH_POLE);\n\n    if (insideRectangle == ALL_INSIDE && insideShape) {\n      //System.err.println(\" both inside each other\");\n      return OVERLAPS;\n    }\n\n    if (\n        path.intersects(bottomPlane, bottomPlanePoints, eitherBound) ||\n            path.intersects(leftPlane, leftPlanePoints, bottomPlane) ||\n            path.intersects(rightPlane, rightPlanePoints, bottomPlane)) {\n      //System.err.println(\" edges intersect\");\n      return OVERLAPS;\n    }\n\n    if (insideRectangle == ALL_INSIDE) {\n      //System.err.println(\" shape inside rectangle\");\n      return WITHIN;\n    }\n\n    if (insideShape) {\n      //System.err.println(\" rectangle inside shape\");\n      return CONTAINS;\n    }\n\n    //System.err.println(\" disjoint\");\n    return DISJOINT;\n  }\n\n","sourceOld":"  @Override\n  public int getRelationship(final GeoShape path) {\n    //System.err.println(this+\" comparing to \"+path);\n    final int insideRectangle = isShapeInsideBBox(path);\n    if (insideRectangle == SOME_INSIDE) {\n      //System.err.println(\" some inside\");\n      return OVERLAPS;\n    }\n\n    final boolean insideShape = path.isWithin(planetModel.NORTH_POLE);\n\n    if (insideRectangle == ALL_INSIDE && insideShape) {\n      //System.err.println(\" both inside each other\");\n      return OVERLAPS;\n    }\n\n    if (\n        path.intersects(bottomPlane, bottomPlanePoints, eitherBound) ||\n            path.intersects(leftPlane, leftPlanePoints, bottomPlane) ||\n            path.intersects(rightPlane, rightPlanePoints, bottomPlane)) {\n      //System.err.println(\" edges intersect\");\n      return OVERLAPS;\n    }\n\n    if (insideRectangle == ALL_INSIDE) {\n      //System.err.println(\" shape inside rectangle\");\n      return WITHIN;\n    }\n\n    if (insideShape) {\n      //System.err.println(\" rectangle inside shape\");\n      return CONTAINS;\n    }\n\n    //System.err.println(\" disjoint\");\n    return DISJOINT;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ca94ad4d6120f10fa13ce40a60a7fd1ede51705","date":1501767131,"type":4,"author":"Karl Wright","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoWideNorthRectangle#getRelationship(GeoShape).mjava","sourceNew":null,"sourceOld":"  @Override\n  public int getRelationship(final GeoShape path) {\n    //System.err.println(this+\" comparing to \"+path);\n    final int insideRectangle = isShapeInsideBBox(path);\n    if (insideRectangle == SOME_INSIDE) {\n      //System.err.println(\" some inside\");\n      return OVERLAPS;\n    }\n\n    final boolean insideShape = path.isWithin(planetModel.NORTH_POLE);\n\n    if (insideRectangle == ALL_INSIDE && insideShape) {\n      //System.err.println(\" both inside each other\");\n      return OVERLAPS;\n    }\n\n    if (\n        path.intersects(bottomPlane, bottomPlanePoints, eitherBound) ||\n            path.intersects(leftPlane, leftPlanePoints, bottomPlane) ||\n            path.intersects(rightPlane, rightPlanePoints, bottomPlane)) {\n      //System.err.println(\" edges intersect\");\n      return OVERLAPS;\n    }\n\n    if (insideRectangle == ALL_INSIDE) {\n      //System.err.println(\" shape inside rectangle\");\n      return WITHIN;\n    }\n\n    if (insideShape) {\n      //System.err.println(\" rectangle inside shape\");\n      return CONTAINS;\n    }\n\n    //System.err.println(\" disjoint\");\n    return DISJOINT;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoWideNorthRectangle#getRelationship(GeoShape).mjava","sourceNew":null,"sourceOld":"  @Override\n  public int getRelationship(final GeoShape path) {\n    //System.err.println(this+\" comparing to \"+path);\n    final int insideRectangle = isShapeInsideBBox(path);\n    if (insideRectangle == SOME_INSIDE) {\n      //System.err.println(\" some inside\");\n      return OVERLAPS;\n    }\n\n    final boolean insideShape = path.isWithin(planetModel.NORTH_POLE);\n\n    if (insideRectangle == ALL_INSIDE && insideShape) {\n      //System.err.println(\" both inside each other\");\n      return OVERLAPS;\n    }\n\n    if (\n        path.intersects(bottomPlane, bottomPlanePoints, eitherBound) ||\n            path.intersects(leftPlane, leftPlanePoints, bottomPlane) ||\n            path.intersects(rightPlane, rightPlanePoints, bottomPlane)) {\n      //System.err.println(\" edges intersect\");\n      return OVERLAPS;\n    }\n\n    if (insideRectangle == ALL_INSIDE) {\n      //System.err.println(\" shape inside rectangle\");\n      return WITHIN;\n    }\n\n    if (insideShape) {\n      //System.err.println(\" rectangle inside shape\");\n      return CONTAINS;\n    }\n\n    //System.err.println(\" disjoint\");\n    return DISJOINT;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["b4e444678504caf66a8060b1d514383aa4feac0c","0ca94ad4d6120f10fa13ce40a60a7fd1ede51705"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ca94ad4d6120f10fa13ce40a60a7fd1ede51705":["b4e444678504caf66a8060b1d514383aa4feac0c"],"b4e444678504caf66a8060b1d514383aa4feac0c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0ca94ad4d6120f10fa13ce40a60a7fd1ede51705"]},"commit2Childs":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4e444678504caf66a8060b1d514383aa4feac0c"],"0ca94ad4d6120f10fa13ce40a60a7fd1ede51705":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b4e444678504caf66a8060b1d514383aa4feac0c":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","0ca94ad4d6120f10fa13ce40a60a7fd1ede51705"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}