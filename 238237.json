{"path":"lucene/core/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(Term).mjava","commits":[{"id":"b6a0e3c1c21aac8ecf75706605133012833585c7","date":1347535263,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(Term).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the number of documents containing the term\n   * <code>term</code>.  This method returns 0 if the term or\n   * field does not exists, or -1 if the Codec does not support\n   * the measure.  This method does not take into account deleted \n   * documents that have not yet been merged away.\n   * @see TermsEnum#totalTermFreq() \n   */\n  public abstract long totalTermFreq(Term term) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a3e5fc521691c5f50cc9df6289743edef8cbe2b","date":1366314092,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(Term).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(Term).mjava","sourceNew":"  /**\n   * Returns the total number of occurrences of {@code term} across all\n   * documents (the sum of the freq() for each doc that has this term). This\n   * will be -1 if the codec doesn't support this measure. Note that, like other\n   * term measures, this measure does not take deleted documents into account.\n   */\n  public abstract long totalTermFreq(Term term) throws IOException;\n\n","sourceOld":"  /** Returns the number of documents containing the term\n   * <code>term</code>.  This method returns 0 if the term or\n   * field does not exists, or -1 if the Codec does not support\n   * the measure.  This method does not take into account deleted \n   * documents that have not yet been merged away.\n   * @see TermsEnum#totalTermFreq() \n   */\n  public abstract long totalTermFreq(Term term) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"086ffe31d8fba0110227db122974163709ecc1b4","date":1509678141,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(Term).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(Term).mjava","sourceNew":"  /**\n   * Returns the total number of occurrences of {@code term} across all\n   * documents (the sum of the freq() for each doc that has this term).\n   * Note that, like other term measures, this measure does not take\n   * deleted documents into account.\n   */\n  public abstract long totalTermFreq(Term term) throws IOException;\n\n","sourceOld":"  /**\n   * Returns the total number of occurrences of {@code term} across all\n   * documents (the sum of the freq() for each doc that has this term). This\n   * will be -1 if the codec doesn't support this measure. Note that, like other\n   * term measures, this measure does not take deleted documents into account.\n   */\n  public abstract long totalTermFreq(Term term) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d523b8189b211dd1630166aa77b8c88bb48b3fcc","date":1510144168,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(Term).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#totalTermFreq(Term).mjava","sourceNew":"  /**\n   * Returns the total number of occurrences of {@code term} across all\n   * documents (the sum of the freq() for each doc that has this term).\n   * Note that, like other term measures, this measure does not take\n   * deleted documents into account.\n   */\n  public abstract long totalTermFreq(Term term) throws IOException;\n\n","sourceOld":"  /**\n   * Returns the total number of occurrences of {@code term} across all\n   * documents (the sum of the freq() for each doc that has this term). This\n   * will be -1 if the codec doesn't support this measure. Note that, like other\n   * term measures, this measure does not take deleted documents into account.\n   */\n  public abstract long totalTermFreq(Term term) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"086ffe31d8fba0110227db122974163709ecc1b4":["6a3e5fc521691c5f50cc9df6289743edef8cbe2b"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["6a3e5fc521691c5f50cc9df6289743edef8cbe2b","086ffe31d8fba0110227db122974163709ecc1b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6a3e5fc521691c5f50cc9df6289743edef8cbe2b":["b6a0e3c1c21aac8ecf75706605133012833585c7"],"b6a0e3c1c21aac8ecf75706605133012833585c7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"]},"commit2Childs":{"086ffe31d8fba0110227db122974163709ecc1b4":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b6a0e3c1c21aac8ecf75706605133012833585c7"],"6a3e5fc521691c5f50cc9df6289743edef8cbe2b":["086ffe31d8fba0110227db122974163709ecc1b4","d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"b6a0e3c1c21aac8ecf75706605133012833585c7":["6a3e5fc521691c5f50cc9df6289743edef8cbe2b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}