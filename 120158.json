{"path":"solr/core/src/java/org/apache/solr/core/NRTCachingDirectoryFactory#init(NamedList).mjava","commits":[{"id":"ad7c814227ff52b4c806677434f09cc5e59a3dca","date":1354768770,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NRTCachingDirectoryFactory#init(NamedList).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(NamedList args) {\n    SolrParams params = SolrParams.toSolrParams(args);\n    maxMergeSizeMB = params.getDouble(\"maxMergeSizeMB\", 4);\n    if (maxMergeSizeMB <= 0){\n      throw new IllegalArgumentException(\"maxMergeSizeMB must be greater than 0\");\n    }\n    maxCachedMB = params.getDouble(\"maxCachedMB\", 48);\n    if (maxCachedMB <= 0){\n      throw new IllegalArgumentException(\"maxCachedMB must be greater than 0\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["8a2aa62adae37d76223cb8262bada0799a413179"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/NRTCachingDirectoryFactory#init(NamedList).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(NamedList args) {\n    SolrParams params = SolrParams.toSolrParams(args);\n    maxMergeSizeMB = params.getDouble(\"maxMergeSizeMB\", 4);\n    if (maxMergeSizeMB <= 0){\n      throw new IllegalArgumentException(\"maxMergeSizeMB must be greater than 0\");\n    }\n    maxCachedMB = params.getDouble(\"maxCachedMB\", 48);\n    if (maxCachedMB <= 0){\n      throw new IllegalArgumentException(\"maxCachedMB must be greater than 0\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eafe65017ee691866644025d85b041b4880c5e3","date":1355253547,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NRTCachingDirectoryFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NRTCachingDirectoryFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(NamedList args) {\n    super.init(args);\n    SolrParams params = SolrParams.toSolrParams(args);\n    maxMergeSizeMB = params.getDouble(\"maxMergeSizeMB\", 4);\n    if (maxMergeSizeMB <= 0){\n      throw new IllegalArgumentException(\"maxMergeSizeMB must be greater than 0\");\n    }\n    maxCachedMB = params.getDouble(\"maxCachedMB\", 48);\n    if (maxCachedMB <= 0){\n      throw new IllegalArgumentException(\"maxCachedMB must be greater than 0\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    SolrParams params = SolrParams.toSolrParams(args);\n    maxMergeSizeMB = params.getDouble(\"maxMergeSizeMB\", 4);\n    if (maxMergeSizeMB <= 0){\n      throw new IllegalArgumentException(\"maxMergeSizeMB must be greater than 0\");\n    }\n    maxCachedMB = params.getDouble(\"maxCachedMB\", 48);\n    if (maxCachedMB <= 0){\n      throw new IllegalArgumentException(\"maxCachedMB must be greater than 0\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/NRTCachingDirectoryFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NRTCachingDirectoryFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(NamedList args) {\n    super.init(args);\n    SolrParams params = SolrParams.toSolrParams(args);\n    maxMergeSizeMB = params.getDouble(\"maxMergeSizeMB\", 4);\n    if (maxMergeSizeMB <= 0){\n      throw new IllegalArgumentException(\"maxMergeSizeMB must be greater than 0\");\n    }\n    maxCachedMB = params.getDouble(\"maxCachedMB\", 48);\n    if (maxCachedMB <= 0){\n      throw new IllegalArgumentException(\"maxCachedMB must be greater than 0\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    SolrParams params = SolrParams.toSolrParams(args);\n    maxMergeSizeMB = params.getDouble(\"maxMergeSizeMB\", 4);\n    if (maxMergeSizeMB <= 0){\n      throw new IllegalArgumentException(\"maxMergeSizeMB must be greater than 0\");\n    }\n    maxCachedMB = params.getDouble(\"maxCachedMB\", 48);\n    if (maxCachedMB <= 0){\n      throw new IllegalArgumentException(\"maxCachedMB must be greater than 0\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a2aa62adae37d76223cb8262bada0799a413179","date":1360592937,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NRTCachingDirectoryFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NRTCachingDirectoryFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(NamedList args) {\n    super.init(args);\n    SolrParams params = SolrParams.toSolrParams(args);\n    maxMergeSizeMB = params.getDouble(\"maxMergeSizeMB\", DEFAULT_MAX_MERGE_SIZE_MB);\n    if (maxMergeSizeMB <= 0){\n      throw new IllegalArgumentException(\"maxMergeSizeMB must be greater than 0\");\n    }\n    maxCachedMB = params.getDouble(\"maxCachedMB\", DEFAULT_MAX_CACHED_MB);\n    if (maxCachedMB <= 0){\n      throw new IllegalArgumentException(\"maxCachedMB must be greater than 0\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    super.init(args);\n    SolrParams params = SolrParams.toSolrParams(args);\n    maxMergeSizeMB = params.getDouble(\"maxMergeSizeMB\", 4);\n    if (maxMergeSizeMB <= 0){\n      throw new IllegalArgumentException(\"maxMergeSizeMB must be greater than 0\");\n    }\n    maxCachedMB = params.getDouble(\"maxCachedMB\", 48);\n    if (maxCachedMB <= 0){\n      throw new IllegalArgumentException(\"maxCachedMB must be greater than 0\");\n    }\n  }\n\n","bugFix":["ad7c814227ff52b4c806677434f09cc5e59a3dca"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbff44e659c8599e09913b321ce89b65763b68d8","date":1360634589,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/NRTCachingDirectoryFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NRTCachingDirectoryFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(NamedList args) {\n    super.init(args);\n    SolrParams params = SolrParams.toSolrParams(args);\n    maxMergeSizeMB = params.getDouble(\"maxMergeSizeMB\", DEFAULT_MAX_MERGE_SIZE_MB);\n    if (maxMergeSizeMB <= 0){\n      throw new IllegalArgumentException(\"maxMergeSizeMB must be greater than 0\");\n    }\n    maxCachedMB = params.getDouble(\"maxCachedMB\", DEFAULT_MAX_CACHED_MB);\n    if (maxCachedMB <= 0){\n      throw new IllegalArgumentException(\"maxCachedMB must be greater than 0\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    super.init(args);\n    SolrParams params = SolrParams.toSolrParams(args);\n    maxMergeSizeMB = params.getDouble(\"maxMergeSizeMB\", 4);\n    if (maxMergeSizeMB <= 0){\n      throw new IllegalArgumentException(\"maxMergeSizeMB must be greater than 0\");\n    }\n    maxCachedMB = params.getDouble(\"maxCachedMB\", 48);\n    if (maxCachedMB <= 0){\n      throw new IllegalArgumentException(\"maxCachedMB must be greater than 0\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"129e5b874f99ae4e04f39c337c940dda690f2d38","date":1524504409,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NRTCachingDirectoryFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NRTCachingDirectoryFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(NamedList args) {\n    super.init(args);\n    SolrParams params = args.toSolrParams();\n    maxMergeSizeMB = params.getDouble(\"maxMergeSizeMB\", DEFAULT_MAX_MERGE_SIZE_MB);\n    if (maxMergeSizeMB <= 0){\n      throw new IllegalArgumentException(\"maxMergeSizeMB must be greater than 0\");\n    }\n    maxCachedMB = params.getDouble(\"maxCachedMB\", DEFAULT_MAX_CACHED_MB);\n    if (maxCachedMB <= 0){\n      throw new IllegalArgumentException(\"maxCachedMB must be greater than 0\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    super.init(args);\n    SolrParams params = SolrParams.toSolrParams(args);\n    maxMergeSizeMB = params.getDouble(\"maxMergeSizeMB\", DEFAULT_MAX_MERGE_SIZE_MB);\n    if (maxMergeSizeMB <= 0){\n      throw new IllegalArgumentException(\"maxMergeSizeMB must be greater than 0\");\n    }\n    maxCachedMB = params.getDouble(\"maxCachedMB\", DEFAULT_MAX_CACHED_MB);\n    if (maxCachedMB <= 0){\n      throw new IllegalArgumentException(\"maxCachedMB must be greater than 0\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75237075d8425856bf4bbf52a6be4f9162b8187d","date":1591103291,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/NRTCachingDirectoryFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/NRTCachingDirectoryFactory#init(NamedList).mjava","sourceNew":"  @Override\n  @SuppressWarnings({\"rawtypes\"})\n  public void init(NamedList args) {\n    super.init(args);\n    SolrParams params = args.toSolrParams();\n    maxMergeSizeMB = params.getDouble(\"maxMergeSizeMB\", DEFAULT_MAX_MERGE_SIZE_MB);\n    if (maxMergeSizeMB <= 0){\n      throw new IllegalArgumentException(\"maxMergeSizeMB must be greater than 0\");\n    }\n    maxCachedMB = params.getDouble(\"maxCachedMB\", DEFAULT_MAX_CACHED_MB);\n    if (maxCachedMB <= 0){\n      throw new IllegalArgumentException(\"maxCachedMB must be greater than 0\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    super.init(args);\n    SolrParams params = args.toSolrParams();\n    maxMergeSizeMB = params.getDouble(\"maxMergeSizeMB\", DEFAULT_MAX_MERGE_SIZE_MB);\n    if (maxMergeSizeMB <= 0){\n      throw new IllegalArgumentException(\"maxMergeSizeMB must be greater than 0\");\n    }\n    maxCachedMB = params.getDouble(\"maxCachedMB\", DEFAULT_MAX_CACHED_MB);\n    if (maxCachedMB <= 0){\n      throw new IllegalArgumentException(\"maxCachedMB must be greater than 0\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1eafe65017ee691866644025d85b041b4880c5e3":["ad7c814227ff52b4c806677434f09cc5e59a3dca"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["407687e67faf6e1f02a211ca078d8e3eed631027","1eafe65017ee691866644025d85b041b4880c5e3"],"75237075d8425856bf4bbf52a6be4f9162b8187d":["129e5b874f99ae4e04f39c337c940dda690f2d38"],"dbff44e659c8599e09913b321ce89b65763b68d8":["1eafe65017ee691866644025d85b041b4880c5e3","8a2aa62adae37d76223cb8262bada0799a413179"],"8a2aa62adae37d76223cb8262bada0799a413179":["1eafe65017ee691866644025d85b041b4880c5e3"],"129e5b874f99ae4e04f39c337c940dda690f2d38":["8a2aa62adae37d76223cb8262bada0799a413179"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ad7c814227ff52b4c806677434f09cc5e59a3dca"],"ad7c814227ff52b4c806677434f09cc5e59a3dca":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["75237075d8425856bf4bbf52a6be4f9162b8187d"]},"commit2Childs":{"1eafe65017ee691866644025d85b041b4880c5e3":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","dbff44e659c8599e09913b321ce89b65763b68d8","8a2aa62adae37d76223cb8262bada0799a413179"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"75237075d8425856bf4bbf52a6be4f9162b8187d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"dbff44e659c8599e09913b321ce89b65763b68d8":[],"8a2aa62adae37d76223cb8262bada0799a413179":["dbff44e659c8599e09913b321ce89b65763b68d8","129e5b874f99ae4e04f39c337c940dda690f2d38"],"129e5b874f99ae4e04f39c337c940dda690f2d38":["75237075d8425856bf4bbf52a6be4f9162b8187d"],"407687e67faf6e1f02a211ca078d8e3eed631027":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["407687e67faf6e1f02a211ca078d8e3eed631027","ad7c814227ff52b4c806677434f09cc5e59a3dca"],"ad7c814227ff52b4c806677434f09cc5e59a3dca":["1eafe65017ee691866644025d85b041b4880c5e3","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","dbff44e659c8599e09913b321ce89b65763b68d8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}