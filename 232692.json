{"path":"lucene/core/src/test/org/apache/lucene/codecs/lucene70/TestLucene70DocValuesFormat#blocksOfVariousBPV().mjava","commits":[{"id":"740ee098a9980924f1de3e712c61e1bdd3869b9c","date":1481818674,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene70/TestLucene70DocValuesFormat#blocksOfVariousBPV().mjava","pathOld":"/dev/null","sourceNew":"  private static LongSupplier blocksOfVariousBPV() {\n    final long mul = TestUtil.nextInt(random(), 1, 100);\n    final long min = random().nextInt();\n    return new LongSupplier() {\n      int i = Lucene70DocValuesFormat.NUMERIC_BLOCK_SIZE;\n      int maxDelta;\n      @Override\n      public long getAsLong() {\n        if (i == Lucene70DocValuesFormat.NUMERIC_BLOCK_SIZE) {\n          maxDelta = 1 << random().nextInt(5);\n          i = 0;\n        }\n        i++;\n        return min + mul * random().nextInt(maxDelta);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene70/TestLucene70DocValuesFormat#blocksOfVariousBPV().mjava","pathOld":"/dev/null","sourceNew":"  private static LongSupplier blocksOfVariousBPV() {\n    final long mul = TestUtil.nextInt(random(), 1, 100);\n    final long min = random().nextInt();\n    return new LongSupplier() {\n      int i = Lucene70DocValuesFormat.NUMERIC_BLOCK_SIZE;\n      int maxDelta;\n      @Override\n      public long getAsLong() {\n        if (i == Lucene70DocValuesFormat.NUMERIC_BLOCK_SIZE) {\n          maxDelta = 1 << random().nextInt(5);\n          i = 0;\n        }\n        i++;\n        return min + mul * random().nextInt(maxDelta);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03e17b020972a0d6e8d6823f545571a66646a167","date":1547847724,"type":5,"author":"Toke Eskildsen","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene70/TestLucene70DocValuesFormat#blocksOfVariousBPV().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene70/TestLucene70DocValuesFormat#blocksOfVariousBPV().mjava","sourceNew":"  private static LongSupplier blocksOfVariousBPV() {\n    final long mul = TestUtil.nextInt(random(), 1, 100);\n    final long min = random().nextInt();\n    return new LongSupplier() {\n      int i = Lucene70DocValuesFormat.NUMERIC_BLOCK_SIZE;\n      int maxDelta;\n      @Override\n      public long getAsLong() {\n        if (i == Lucene70DocValuesFormat.NUMERIC_BLOCK_SIZE) {\n          maxDelta = 1 << random().nextInt(5);\n          i = 0;\n        }\n        i++;\n        return min + mul * random().nextInt(maxDelta);\n      }\n    };\n  }\n\n","sourceOld":"  private static LongSupplier blocksOfVariousBPV() {\n    final long mul = TestUtil.nextInt(random(), 1, 100);\n    final long min = random().nextInt();\n    return new LongSupplier() {\n      int i = Lucene70DocValuesFormat.NUMERIC_BLOCK_SIZE;\n      int maxDelta;\n      @Override\n      public long getAsLong() {\n        if (i == Lucene70DocValuesFormat.NUMERIC_BLOCK_SIZE) {\n          maxDelta = 1 << random().nextInt(5);\n          i = 0;\n        }\n        i++;\n        return min + mul * random().nextInt(maxDelta);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c89f1ef80a9432f4eabaeda9a1e135cd72e60836","date":1547972642,"type":5,"author":"Tommaso Teofili","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene70/TestLucene70DocValuesFormat#blocksOfVariousBPV().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene70/TestLucene70DocValuesFormat#blocksOfVariousBPV().mjava","sourceNew":"  private static LongSupplier blocksOfVariousBPV() {\n    final long mul = TestUtil.nextInt(random(), 1, 100);\n    final long min = random().nextInt();\n    return new LongSupplier() {\n      int i = Lucene70DocValuesFormat.NUMERIC_BLOCK_SIZE;\n      int maxDelta;\n      @Override\n      public long getAsLong() {\n        if (i == Lucene70DocValuesFormat.NUMERIC_BLOCK_SIZE) {\n          maxDelta = 1 << random().nextInt(5);\n          i = 0;\n        }\n        i++;\n        return min + mul * random().nextInt(maxDelta);\n      }\n    };\n  }\n\n","sourceOld":"  private static LongSupplier blocksOfVariousBPV() {\n    final long mul = TestUtil.nextInt(random(), 1, 100);\n    final long min = random().nextInt();\n    return new LongSupplier() {\n      int i = Lucene70DocValuesFormat.NUMERIC_BLOCK_SIZE;\n      int maxDelta;\n      @Override\n      public long getAsLong() {\n        if (i == Lucene70DocValuesFormat.NUMERIC_BLOCK_SIZE) {\n          maxDelta = 1 << random().nextInt(5);\n          i = 0;\n        }\n        i++;\n        return min + mul * random().nextInt(maxDelta);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"03e17b020972a0d6e8d6823f545571a66646a167":["740ee098a9980924f1de3e712c61e1bdd3869b9c"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":["740ee098a9980924f1de3e712c61e1bdd3869b9c","03e17b020972a0d6e8d6823f545571a66646a167"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9856095f7afb5a607bf5e65077615ed91273508c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","740ee098a9980924f1de3e712c61e1bdd3869b9c"],"740ee098a9980924f1de3e712c61e1bdd3869b9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["03e17b020972a0d6e8d6823f545571a66646a167"]},"commit2Childs":{"03e17b020972a0d6e8d6823f545571a66646a167":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9856095f7afb5a607bf5e65077615ed91273508c","740ee098a9980924f1de3e712c61e1bdd3869b9c"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"740ee098a9980924f1de3e712c61e1bdd3869b9c":["03e17b020972a0d6e8d6823f545571a66646a167","c89f1ef80a9432f4eabaeda9a1e135cd72e60836","9856095f7afb5a607bf5e65077615ed91273508c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}