{"path":"lucene/src/java/org/apache/lucene/util/IntsRef#compareTo(IntsRef).mjava","commits":[{"id":"d4769bdea5a853f1841c485bc1fd9d79cb7022fc","date":1292168168,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/IntsRef#compareTo(IntsRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Signed int order comparison */\n  public int compareTo(IntsRef other) {\n    if (this == other) return 0;\n\n    final int[] aInts = this.ints;\n    int aUpto = this.offset;\n    final int[] bInts = other.ints;\n    int bUpto = other.offset;\n\n    final int aStop = aUpto + Math.min(this.length, other.length);\n\n    while(aUpto < aStop) {\n      int aInt = aInts[aUpto++];\n      int bInt = bInts[bUpto++];\n      if (aInt > bInt) {\n        return 1;\n      } else if (aInt < bInt) {\n        return -1;\n      }\n    }\n\n    // One is a prefix of the other, or, they are equal:\n    return this.length - other.length;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/IntsRef#compareTo(IntsRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Signed int order comparison */\n  public int compareTo(IntsRef other) {\n    if (this == other) return 0;\n\n    final int[] aInts = this.ints;\n    int aUpto = this.offset;\n    final int[] bInts = other.ints;\n    int bUpto = other.offset;\n\n    final int aStop = aUpto + Math.min(this.length, other.length);\n\n    while(aUpto < aStop) {\n      int aInt = aInts[aUpto++];\n      int bInt = bInts[bUpto++];\n      if (aInt > bInt) {\n        return 1;\n      } else if (aInt < bInt) {\n        return -1;\n      }\n    }\n\n    // One is a prefix of the other, or, they are equal:\n    return this.length - other.length;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/IntsRef#compareTo(IntsRef).mjava","pathOld":"/dev/null","sourceNew":"  /** Signed int order comparison */\n  public int compareTo(IntsRef other) {\n    if (this == other) return 0;\n\n    final int[] aInts = this.ints;\n    int aUpto = this.offset;\n    final int[] bInts = other.ints;\n    int bUpto = other.offset;\n\n    final int aStop = aUpto + Math.min(this.length, other.length);\n\n    while(aUpto < aStop) {\n      int aInt = aInts[aUpto++];\n      int bInt = bInts[bUpto++];\n      if (aInt > bInt) {\n        return 1;\n      } else if (aInt < bInt) {\n        return -1;\n      }\n    }\n\n    // One is a prefix of the other, or, they are equal:\n    return this.length - other.length;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IntsRef#compareTo(IntsRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/IntsRef#compareTo(IntsRef).mjava","sourceNew":"  /** Signed int order comparison */\n  public int compareTo(IntsRef other) {\n    if (this == other) return 0;\n\n    final int[] aInts = this.ints;\n    int aUpto = this.offset;\n    final int[] bInts = other.ints;\n    int bUpto = other.offset;\n\n    final int aStop = aUpto + Math.min(this.length, other.length);\n\n    while(aUpto < aStop) {\n      int aInt = aInts[aUpto++];\n      int bInt = bInts[bUpto++];\n      if (aInt > bInt) {\n        return 1;\n      } else if (aInt < bInt) {\n        return -1;\n      }\n    }\n\n    // One is a prefix of the other, or, they are equal:\n    return this.length - other.length;\n  }\n\n","sourceOld":"  /** Signed int order comparison */\n  public int compareTo(IntsRef other) {\n    if (this == other) return 0;\n\n    final int[] aInts = this.ints;\n    int aUpto = this.offset;\n    final int[] bInts = other.ints;\n    int bUpto = other.offset;\n\n    final int aStop = aUpto + Math.min(this.length, other.length);\n\n    while(aUpto < aStop) {\n      int aInt = aInts[aUpto++];\n      int bInt = bInts[bUpto++];\n      if (aInt > bInt) {\n        return 1;\n      } else if (aInt < bInt) {\n        return -1;\n      }\n    }\n\n    // One is a prefix of the other, or, they are equal:\n    return this.length - other.length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"d4769bdea5a853f1841c485bc1fd9d79cb7022fc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d4769bdea5a853f1841c485bc1fd9d79cb7022fc"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"d4769bdea5a853f1841c485bc1fd9d79cb7022fc":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}