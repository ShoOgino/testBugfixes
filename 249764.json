{"path":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter#startTerm(BytesRef,int).mjava","commits":[{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter#startTerm(BytesRef,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter#startTerm(BytesRef,int).mjava","sourceNew":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    final int prefix = StringHelper.bytesDifference(lastTerm.get(), term);\n    final int suffix = term.length - prefix;\n    tvf.writeVInt(prefix);\n    tvf.writeVInt(suffix);\n    tvf.writeBytes(term.bytes, term.offset + prefix, suffix);\n    tvf.writeVInt(freq);\n    lastTerm.copyBytes(term);\n    lastPosition = lastOffset = 0;\n    \n    if (offsets && positions) {\n      // we might need to buffer if its a non-bulk merge\n      offsetStartBuffer = ArrayUtil.grow(offsetStartBuffer, freq);\n      offsetEndBuffer = ArrayUtil.grow(offsetEndBuffer, freq);\n    }\n    bufferedIndex = 0;\n    bufferedFreq = freq;\n    payloadData.clear();\n  }\n\n","sourceOld":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    final int prefix = StringHelper.bytesDifference(lastTerm.get(), term);\n    final int suffix = term.length - prefix;\n    tvf.writeVInt(prefix);\n    tvf.writeVInt(suffix);\n    tvf.writeBytes(term.bytes, term.offset + prefix, suffix);\n    tvf.writeVInt(freq);\n    lastTerm.copyBytes(term);\n    lastPosition = lastOffset = 0;\n    \n    if (offsets && positions) {\n      // we might need to buffer if its a non-bulk merge\n      offsetStartBuffer = ArrayUtil.grow(offsetStartBuffer, freq);\n      offsetEndBuffer = ArrayUtil.grow(offsetEndBuffer, freq);\n    }\n    bufferedIndex = 0;\n    bufferedFreq = freq;\n    payloadData.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter#startTerm(BytesRef,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter#startTerm(BytesRef,int).mjava","sourceNew":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    final int prefix = StringHelper.bytesDifference(lastTerm.get(), term);\n    final int suffix = term.length - prefix;\n    tvf.writeVInt(prefix);\n    tvf.writeVInt(suffix);\n    tvf.writeBytes(term.bytes, term.offset + prefix, suffix);\n    tvf.writeVInt(freq);\n    lastTerm.copyBytes(term);\n    lastPosition = lastOffset = 0;\n    \n    if (offsets && positions) {\n      // we might need to buffer if its a non-bulk merge\n      offsetStartBuffer = ArrayUtil.grow(offsetStartBuffer, freq);\n      offsetEndBuffer = ArrayUtil.grow(offsetEndBuffer, freq);\n    }\n    bufferedIndex = 0;\n    bufferedFreq = freq;\n    payloadData.clear();\n  }\n\n","sourceOld":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    final int prefix = StringHelper.bytesDifference(lastTerm.get(), term);\n    final int suffix = term.length - prefix;\n    tvf.writeVInt(prefix);\n    tvf.writeVInt(suffix);\n    tvf.writeBytes(term.bytes, term.offset + prefix, suffix);\n    tvf.writeVInt(freq);\n    lastTerm.copyBytes(term);\n    lastPosition = lastOffset = 0;\n    \n    if (offsets && positions) {\n      // we might need to buffer if its a non-bulk merge\n      offsetStartBuffer = ArrayUtil.grow(offsetStartBuffer, freq);\n      offsetEndBuffer = ArrayUtil.grow(offsetEndBuffer, freq);\n    }\n    bufferedIndex = 0;\n    bufferedFreq = freq;\n    payloadData.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71387d8cb6923eb831b17a8b734608ba2e21c653","date":1414126093,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter#startTerm(BytesRef,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    final int prefix = StringHelper.bytesDifference(lastTerm.get(), term);\n    final int suffix = term.length - prefix;\n    tvf.writeVInt(prefix);\n    tvf.writeVInt(suffix);\n    tvf.writeBytes(term.bytes, term.offset + prefix, suffix);\n    tvf.writeVInt(freq);\n    lastTerm.copyBytes(term);\n    lastPosition = lastOffset = 0;\n    \n    if (offsets && positions) {\n      // we might need to buffer if its a non-bulk merge\n      offsetStartBuffer = ArrayUtil.grow(offsetStartBuffer, freq);\n      offsetEndBuffer = ArrayUtil.grow(offsetEndBuffer, freq);\n    }\n    bufferedIndex = 0;\n    bufferedFreq = freq;\n    payloadData.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}