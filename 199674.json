{"path":"solr/core/src/test/org/apache/solr/cloud/api/collections/ConcurrentCreateCollectionTest#createCollectionRequest(String,int,int).mjava","commits":[{"id":"1983c3206274e794a3d58501a0c4c3d4fd56555f","date":1576276664,"type":0,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/ConcurrentCreateCollectionTest#createCollectionRequest(String,int,int).mjava","pathOld":"/dev/null","sourceNew":"  private CollectionAdminRequest.Create createCollectionRequest(String cname, int numShards, int numReplicas) throws Exception {\n    CollectionAdminRequest.Create creq = CollectionAdminRequest\n        // nocommit .createCollection(cname, \"conf\", NODES - 1, NODES - 1)\n        .createCollection(cname, \"conf\", numShards, numReplicas)\n        .setMaxShardsPerNode(100);\n    creq.setWaitForFinalState(true);\n    creq.setAutoAddReplicas(true);\n    return creq;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["67a8d31cfc3fe149dba4b571b310a8d7b9c2a227"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"67a8d31cfc3fe149dba4b571b310a8d7b9c2a227","date":1576333873,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/ConcurrentCreateCollectionTest#createCollectionRequest(String,int,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/api/collections/ConcurrentCreateCollectionTest#createCollectionRequest(String,int,int).mjava","sourceNew":"  private CollectionAdminRequest.Create createCollectionRequest(String cname, int numShards, int numReplicas) throws Exception {\n    CollectionAdminRequest.Create creq = CollectionAdminRequest\n        //  .createCollection(cname, \"conf\", NODES - 1, NODES - 1)\n        .createCollection(cname, \"conf\", numShards, numReplicas)\n        .setMaxShardsPerNode(100);\n    creq.setWaitForFinalState(true);\n    creq.setAutoAddReplicas(true);\n    return creq;\n  }\n\n","sourceOld":"  private CollectionAdminRequest.Create createCollectionRequest(String cname, int numShards, int numReplicas) throws Exception {\n    CollectionAdminRequest.Create creq = CollectionAdminRequest\n        // nocommit .createCollection(cname, \"conf\", NODES - 1, NODES - 1)\n        .createCollection(cname, \"conf\", numShards, numReplicas)\n        .setMaxShardsPerNode(100);\n    creq.setWaitForFinalState(true);\n    creq.setAutoAddReplicas(true);\n    return creq;\n  }\n\n","bugFix":["1983c3206274e794a3d58501a0c4c3d4fd56555f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06595b0c22c7d3075c4104d3820cccf95d9d8a43","date":1576491645,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/ConcurrentCreateCollectionTest#createCollectionRequest(String,int,int).mjava","pathOld":"/dev/null","sourceNew":"  private CollectionAdminRequest.Create createCollectionRequest(String cname, int numShards, int numReplicas) throws Exception {\n    CollectionAdminRequest.Create creq = CollectionAdminRequest\n        //  .createCollection(cname, \"conf\", NODES - 1, NODES - 1)\n        .createCollection(cname, \"conf\", numShards, numReplicas)\n        .setMaxShardsPerNode(100);\n    creq.setWaitForFinalState(true);\n    creq.setAutoAddReplicas(true);\n    return creq;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e","date":1594223844,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/api/collections/ConcurrentCreateCollectionTest#createCollectionRequest(String,int,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/api/collections/ConcurrentCreateCollectionTest#createCollectionRequest(String,int,int).mjava","sourceNew":"  private CollectionAdminRequest.Create createCollectionRequest(String cname, int numShards, int numReplicas) throws Exception {\n    CollectionAdminRequest.Create creq = CollectionAdminRequest\n        //  .createCollection(cname, \"conf\", NODES - 1, NODES - 1)\n        .createCollection(cname, \"conf\", numShards, numReplicas);\n    creq.setWaitForFinalState(true);\n    creq.setAutoAddReplicas(true);\n    return creq;\n  }\n\n","sourceOld":"  private CollectionAdminRequest.Create createCollectionRequest(String cname, int numShards, int numReplicas) throws Exception {\n    CollectionAdminRequest.Create creq = CollectionAdminRequest\n        //  .createCollection(cname, \"conf\", NODES - 1, NODES - 1)\n        .createCollection(cname, \"conf\", numShards, numReplicas)\n        .setMaxShardsPerNode(100);\n    creq.setWaitForFinalState(true);\n    creq.setAutoAddReplicas(true);\n    return creq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/api/collections/ConcurrentCreateCollectionTest#createCollectionRequest(String,int,int).mjava","sourceNew":null,"sourceOld":"  private CollectionAdminRequest.Create createCollectionRequest(String cname, int numShards, int numReplicas) throws Exception {\n    CollectionAdminRequest.Create creq = CollectionAdminRequest\n        //  .createCollection(cname, \"conf\", NODES - 1, NODES - 1)\n        .createCollection(cname, \"conf\", numShards, numReplicas);\n    creq.setWaitForFinalState(true);\n    creq.setAutoAddReplicas(true);\n    return creq;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"06595b0c22c7d3075c4104d3820cccf95d9d8a43":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","67a8d31cfc3fe149dba4b571b310a8d7b9c2a227"],"67a8d31cfc3fe149dba4b571b310a8d7b9c2a227":["1983c3206274e794a3d58501a0c4c3d4fd56555f"],"1983c3206274e794a3d58501a0c4c3d4fd56555f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["67a8d31cfc3fe149dba4b571b310a8d7b9c2a227"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06595b0c22c7d3075c4104d3820cccf95d9d8a43","1983c3206274e794a3d58501a0c4c3d4fd56555f"],"06595b0c22c7d3075c4104d3820cccf95d9d8a43":[],"67a8d31cfc3fe149dba4b571b310a8d7b9c2a227":["06595b0c22c7d3075c4104d3820cccf95d9d8a43","e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"],"1983c3206274e794a3d58501a0c4c3d4fd56555f":["67a8d31cfc3fe149dba4b571b310a8d7b9c2a227"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["3f504512a03d978990cbff30db0522b354e846db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["06595b0c22c7d3075c4104d3820cccf95d9d8a43","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}