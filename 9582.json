{"path":"solr/core/src/test/org/apache/solr/search/TestRealTimeGet#clearIndex().mjava","commits":[{"id":"fb999ed3fc6e419b9104de9ebfe62ace27f31d5f","date":1341327930,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRealTimeGet#clearIndex().mjava","pathOld":"/dev/null","sourceNew":"  // since we make up fake versions in these tests, we can get messed up by a DBQ with a real version\n  // since Solr can think following updates were reordered.\n  @Override\n  public void clearIndex() {\n    try {\n      deleteByQueryAndGetVersion(\"*:*\", params(\"_version_\", Long.toString(-Long.MAX_VALUE), DISTRIB_UPDATE_PARAM,FROM_LEADER));\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b2e7536fb06d1abad6c7543a0657bdad5242c5e","date":1341417762,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRTGBase#clearIndex().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRealTimeGet#clearIndex().mjava","sourceNew":"  // since we make up fake versions in these tests, we can get messed up by a DBQ with a real version\n  // since Solr can think following updates were reordered.\n  @Override\n  public void clearIndex() {\n    try {\n      deleteByQueryAndGetVersion(\"*:*\", params(\"_version_\", Long.toString(-Long.MAX_VALUE), DISTRIB_UPDATE_PARAM,FROM_LEADER));\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  // since we make up fake versions in these tests, we can get messed up by a DBQ with a real version\n  // since Solr can think following updates were reordered.\n  @Override\n  public void clearIndex() {\n    try {\n      deleteByQueryAndGetVersion(\"*:*\", params(\"_version_\", Long.toString(-Long.MAX_VALUE), DISTRIB_UPDATE_PARAM,FROM_LEADER));\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb999ed3fc6e419b9104de9ebfe62ace27f31d5f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2b2e7536fb06d1abad6c7543a0657bdad5242c5e":["fb999ed3fc6e419b9104de9ebfe62ace27f31d5f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2b2e7536fb06d1abad6c7543a0657bdad5242c5e"]},"commit2Childs":{"fb999ed3fc6e419b9104de9ebfe62ace27f31d5f":["2b2e7536fb06d1abad6c7543a0657bdad5242c5e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb999ed3fc6e419b9104de9ebfe62ace27f31d5f"],"2b2e7536fb06d1abad6c7543a0657bdad5242c5e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}