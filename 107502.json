{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","sourceNew":"  @Test\n  public void testRecreateAndRefresh() throws Exception {\n    // DirTaxoWriter lost the INDEX_CREATE_TIME property if it was opened in\n    // CREATE_OR_APPEND (or commit(userData) called twice), which could lead to\n    // DirTaxoReader succeeding to refresh().\n    Directory dir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, new NoOpCache());\n    touchTaxo(taxoWriter, new CategoryPath(\"a\"));\n    \n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n\n    touchTaxo(taxoWriter, new CategoryPath(\"b\"));\n    \n    // this should not fail\n    taxoReader.refresh();\n\n    // now recreate the taxonomy, and check that the timestamp is preserved after opening DirTW again.\n    taxoWriter.close();\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, new NoOpCache());\n    touchTaxo(taxoWriter, new CategoryPath(\"c\"));\n    taxoWriter.close();\n    \n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, new NoOpCache());\n    touchTaxo(taxoWriter, new CategoryPath(\"d\"));\n    taxoWriter.close();\n\n    // this should fail\n    try {\n      taxoReader.refresh();\n      fail(\"IconsistentTaxonomyException should have been thrown\");\n    } catch (InconsistentTaxonomyException e) {\n      // ok, expected\n    }\n    \n    taxoReader.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRecreateAndRefresh() throws Exception {\n    // DirTaxoWriter lost the INDEX_CREATE_TIME property if it was opened in\n    // CREATE_OR_APPEND (or commit(userData) called twice), which could lead to\n    // DirTaxoReader succeeding to refresh().\n    Directory dir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, new NoOpCache());\n    touchTaxo(taxoWriter, new CategoryPath(\"a\"));\n    \n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n\n    touchTaxo(taxoWriter, new CategoryPath(\"b\"));\n    \n    // this should not fail\n    taxoReader.refresh();\n\n    // now recreate the taxonomy, and check that the timestamp is preserved after opening DirTW again.\n    taxoWriter.close();\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, new NoOpCache());\n    touchTaxo(taxoWriter, new CategoryPath(\"c\"));\n    taxoWriter.close();\n    \n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, new NoOpCache());\n    touchTaxo(taxoWriter, new CategoryPath(\"d\"));\n    taxoWriter.close();\n\n    // this should fail\n    try {\n      taxoReader.refresh();\n      fail(\"IconsistentTaxonomyException should have been thrown\");\n    } catch (InconsistentTaxonomyException e) {\n      // ok, expected\n    }\n    \n    taxoReader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b52ea8b7f80d4a0600efc9765dc896387008ebd4","date":1340109038,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","sourceNew":"  @Test\n  public void testRecreateAndRefresh() throws Exception {\n    // DirTaxoWriter lost the INDEX_CREATE_TIME property if it was opened in\n    // CREATE_OR_APPEND (or commit(userData) called twice), which could lead to\n    // DirTaxoReader succeeding to refresh().\n    Directory dir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"a\"));\n    \n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n\n    touchTaxo(taxoWriter, new CategoryPath(\"b\"));\n    \n    // this should not fail\n    taxoReader.refresh();\n\n    // now recreate the taxonomy, and check that the timestamp is preserved after opening DirTW again.\n    taxoWriter.close();\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"c\"));\n    taxoWriter.close();\n    \n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"d\"));\n    taxoWriter.close();\n\n    // this should fail\n    try {\n      taxoReader.refresh();\n      fail(\"IconsistentTaxonomyException should have been thrown\");\n    } catch (InconsistentTaxonomyException e) {\n      // ok, expected\n    }\n    \n    taxoReader.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRecreateAndRefresh() throws Exception {\n    // DirTaxoWriter lost the INDEX_CREATE_TIME property if it was opened in\n    // CREATE_OR_APPEND (or commit(userData) called twice), which could lead to\n    // DirTaxoReader succeeding to refresh().\n    Directory dir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, new NoOpCache());\n    touchTaxo(taxoWriter, new CategoryPath(\"a\"));\n    \n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n\n    touchTaxo(taxoWriter, new CategoryPath(\"b\"));\n    \n    // this should not fail\n    taxoReader.refresh();\n\n    // now recreate the taxonomy, and check that the timestamp is preserved after opening DirTW again.\n    taxoWriter.close();\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, new NoOpCache());\n    touchTaxo(taxoWriter, new CategoryPath(\"c\"));\n    taxoWriter.close();\n    \n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, new NoOpCache());\n    touchTaxo(taxoWriter, new CategoryPath(\"d\"));\n    taxoWriter.close();\n\n    // this should fail\n    try {\n      taxoReader.refresh();\n      fail(\"IconsistentTaxonomyException should have been thrown\");\n    } catch (InconsistentTaxonomyException e) {\n      // ok, expected\n    }\n    \n    taxoReader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"78e3613d9274c0d98ca67d976e415c82e9f9cf46","date":1352285414,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","sourceNew":"  @Test\n  public void testRecreateAndRefresh() throws Exception {\n    // DirTaxoWriter lost the INDEX_EPOCH property if it was opened in\n    // CREATE_OR_APPEND (or commit(userData) called twice), which could lead to\n    // DirTaxoReader succeeding to refresh().\n    Directory dir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"a\"));\n    \n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n\n    touchTaxo(taxoWriter, new CategoryPath(\"b\"));\n    \n    // this should not fail\n    taxoReader.refresh();\n\n    // now recreate the taxonomy, and check that the epoch is preserved after opening DirTW again.\n    taxoWriter.close();\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"c\"));\n    taxoWriter.close();\n    \n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"d\"));\n    taxoWriter.close();\n\n    // this should fail\n    try {\n      taxoReader.refresh();\n      fail(\"IconsistentTaxonomyException should have been thrown\");\n    } catch (InconsistentTaxonomyException e) {\n      // ok, expected\n    }\n    \n    taxoReader.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRecreateAndRefresh() throws Exception {\n    // DirTaxoWriter lost the INDEX_CREATE_TIME property if it was opened in\n    // CREATE_OR_APPEND (or commit(userData) called twice), which could lead to\n    // DirTaxoReader succeeding to refresh().\n    Directory dir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"a\"));\n    \n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n\n    touchTaxo(taxoWriter, new CategoryPath(\"b\"));\n    \n    // this should not fail\n    taxoReader.refresh();\n\n    // now recreate the taxonomy, and check that the timestamp is preserved after opening DirTW again.\n    taxoWriter.close();\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"c\"));\n    taxoWriter.close();\n    \n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"d\"));\n    taxoWriter.close();\n\n    // this should fail\n    try {\n      taxoReader.refresh();\n      fail(\"IconsistentTaxonomyException should have been thrown\");\n    } catch (InconsistentTaxonomyException e) {\n      // ok, expected\n    }\n    \n    taxoReader.close();\n    dir.close();\n  }\n\n","bugFix":["e26e3b5080bfb6fcabdc46d0072efe441de1a21b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1","date":1353511594,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","sourceNew":"  @Test\n  public void testRecreateAndRefresh() throws Exception {\n    // DirTaxoWriter lost the INDEX_EPOCH property if it was opened in\n    // CREATE_OR_APPEND (or commit(userData) called twice), which could lead to\n    // DirTaxoReader succeeding to refresh().\n    Directory dir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"a\"));\n    \n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n\n    touchTaxo(taxoWriter, new CategoryPath(\"b\"));\n    \n    TaxonomyReader newtr = TaxonomyReader.openIfChanged(taxoReader);\n    taxoReader.close();\n    taxoReader = newtr;\n    assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n\n    // now recreate the taxonomy, and check that the epoch is preserved after opening DirTW again.\n    taxoWriter.close();\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"c\"));\n    taxoWriter.close();\n    \n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"d\"));\n    taxoWriter.close();\n\n    newtr = TaxonomyReader.openIfChanged(taxoReader);\n    taxoReader.close();\n    taxoReader = newtr;\n    assertEquals(2, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n\n    taxoReader.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRecreateAndRefresh() throws Exception {\n    // DirTaxoWriter lost the INDEX_EPOCH property if it was opened in\n    // CREATE_OR_APPEND (or commit(userData) called twice), which could lead to\n    // DirTaxoReader succeeding to refresh().\n    Directory dir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"a\"));\n    \n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n\n    touchTaxo(taxoWriter, new CategoryPath(\"b\"));\n    \n    // this should not fail\n    taxoReader.refresh();\n\n    // now recreate the taxonomy, and check that the epoch is preserved after opening DirTW again.\n    taxoWriter.close();\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"c\"));\n    taxoWriter.close();\n    \n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"d\"));\n    taxoWriter.close();\n\n    // this should fail\n    try {\n      taxoReader.refresh();\n      fail(\"IconsistentTaxonomyException should have been thrown\");\n    } catch (InconsistentTaxonomyException e) {\n      // ok, expected\n    }\n    \n    taxoReader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","sourceNew":"  @Test\n  public void testRecreateAndRefresh() throws Exception {\n    // DirTaxoWriter lost the INDEX_EPOCH property if it was opened in\n    // CREATE_OR_APPEND (or commit(userData) called twice), which could lead to\n    // DirTaxoReader succeeding to refresh().\n    Directory dir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"a\"));\n    \n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n\n    touchTaxo(taxoWriter, new CategoryPath(\"b\"));\n    \n    TaxonomyReader newtr = TaxonomyReader.openIfChanged(taxoReader);\n    taxoReader.close();\n    taxoReader = newtr;\n    assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n\n    // now recreate the taxonomy, and check that the epoch is preserved after opening DirTW again.\n    taxoWriter.close();\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"c\"));\n    taxoWriter.close();\n    \n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"d\"));\n    taxoWriter.close();\n\n    newtr = TaxonomyReader.openIfChanged(taxoReader);\n    taxoReader.close();\n    taxoReader = newtr;\n    assertEquals(2, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n\n    taxoReader.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRecreateAndRefresh() throws Exception {\n    // DirTaxoWriter lost the INDEX_EPOCH property if it was opened in\n    // CREATE_OR_APPEND (or commit(userData) called twice), which could lead to\n    // DirTaxoReader succeeding to refresh().\n    Directory dir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"a\"));\n    \n    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n\n    touchTaxo(taxoWriter, new CategoryPath(\"b\"));\n    \n    // this should not fail\n    taxoReader.refresh();\n\n    // now recreate the taxonomy, and check that the epoch is preserved after opening DirTW again.\n    taxoWriter.close();\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"c\"));\n    taxoWriter.close();\n    \n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"d\"));\n    taxoWriter.close();\n\n    // this should fail\n    try {\n      taxoReader.refresh();\n      fail(\"IconsistentTaxonomyException should have been thrown\");\n    } catch (InconsistentTaxonomyException e) {\n      // ok, expected\n    }\n    \n    taxoReader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","sourceNew":"  @Test\n  public void testRecreateAndRefresh() throws Exception {\n    // DirTaxoWriter lost the INDEX_EPOCH property if it was opened in\n    // CREATE_OR_APPEND (or commit(userData) called twice), which could lead to\n    // DirTaxoReader succeeding to refresh().\n    Directory dir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new FacetLabel(\"a\"));\n    \n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n\n    touchTaxo(taxoWriter, new FacetLabel(\"b\"));\n    \n    TaxonomyReader newtr = TaxonomyReader.openIfChanged(taxoReader);\n    taxoReader.close();\n    taxoReader = newtr;\n    assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n\n    // now recreate the taxonomy, and check that the epoch is preserved after opening DirTW again.\n    taxoWriter.close();\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new FacetLabel(\"c\"));\n    taxoWriter.close();\n    \n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new FacetLabel(\"d\"));\n    taxoWriter.close();\n\n    newtr = TaxonomyReader.openIfChanged(taxoReader);\n    taxoReader.close();\n    taxoReader = newtr;\n    assertEquals(2, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n\n    taxoReader.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRecreateAndRefresh() throws Exception {\n    // DirTaxoWriter lost the INDEX_EPOCH property if it was opened in\n    // CREATE_OR_APPEND (or commit(userData) called twice), which could lead to\n    // DirTaxoReader succeeding to refresh().\n    Directory dir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"a\"));\n    \n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n\n    touchTaxo(taxoWriter, new CategoryPath(\"b\"));\n    \n    TaxonomyReader newtr = TaxonomyReader.openIfChanged(taxoReader);\n    taxoReader.close();\n    taxoReader = newtr;\n    assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n\n    // now recreate the taxonomy, and check that the epoch is preserved after opening DirTW again.\n    taxoWriter.close();\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"c\"));\n    taxoWriter.close();\n    \n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"d\"));\n    taxoWriter.close();\n\n    newtr = TaxonomyReader.openIfChanged(taxoReader);\n    taxoReader.close();\n    taxoReader = newtr;\n    assertEquals(2, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n\n    taxoReader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","sourceNew":"  @Test\n  public void testRecreateAndRefresh() throws Exception {\n    // DirTaxoWriter lost the INDEX_EPOCH property if it was opened in\n    // CREATE_OR_APPEND (or commit(userData) called twice), which could lead to\n    // DirTaxoReader succeeding to refresh().\n    Directory dir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new FacetLabel(\"a\"));\n    \n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n\n    touchTaxo(taxoWriter, new FacetLabel(\"b\"));\n    \n    TaxonomyReader newtr = TaxonomyReader.openIfChanged(taxoReader);\n    taxoReader.close();\n    taxoReader = newtr;\n    assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n\n    // now recreate the taxonomy, and check that the epoch is preserved after opening DirTW again.\n    taxoWriter.close();\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new FacetLabel(\"c\"));\n    taxoWriter.close();\n    \n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new FacetLabel(\"d\"));\n    taxoWriter.close();\n\n    newtr = TaxonomyReader.openIfChanged(taxoReader);\n    taxoReader.close();\n    taxoReader = newtr;\n    assertEquals(2, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n\n    taxoReader.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRecreateAndRefresh() throws Exception {\n    // DirTaxoWriter lost the INDEX_EPOCH property if it was opened in\n    // CREATE_OR_APPEND (or commit(userData) called twice), which could lead to\n    // DirTaxoReader succeeding to refresh().\n    Directory dir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"a\"));\n    \n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n\n    touchTaxo(taxoWriter, new CategoryPath(\"b\"));\n    \n    TaxonomyReader newtr = TaxonomyReader.openIfChanged(taxoReader);\n    taxoReader.close();\n    taxoReader = newtr;\n    assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n\n    // now recreate the taxonomy, and check that the epoch is preserved after opening DirTW again.\n    taxoWriter.close();\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"c\"));\n    taxoWriter.close();\n    \n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new CategoryPath(\"d\"));\n    taxoWriter.close();\n\n    newtr = TaxonomyReader.openIfChanged(taxoReader);\n    taxoReader.close();\n    taxoReader = newtr;\n    assertEquals(2, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n\n    taxoReader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"545b3a0ce9588bb2e4e6ed589e8f3a2233965a70","date":1525082896,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","sourceNew":"  @Test\n  public void testRecreateAndRefresh() throws Exception {\n    // DirTaxoWriter lost the INDEX_EPOCH property if it was opened in\n    // CREATE_OR_APPEND (or commit(userData) called twice), which could lead to\n    // DirTaxoReader succeeding to refresh().\n    try (Directory dir = newDirectory()) {\n\n      DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n      touchTaxo(taxoWriter, new FacetLabel(\"a\"));\n\n      TaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n\n      touchTaxo(taxoWriter, new FacetLabel(\"b\"));\n\n      TaxonomyReader newtr = TaxonomyReader.openIfChanged(taxoReader);\n      taxoReader.close();\n      taxoReader = newtr;\n      assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n\n      // now recreate the taxonomy, and check that the epoch is preserved after opening DirTW again.\n      taxoWriter.close();\n\n      assumeFalse(\"if we are on windows and we have pending deletions we can't execute this test\",\n          Constants.WINDOWS && dir.checkPendingDeletions());\n      taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n      touchTaxo(taxoWriter, new FacetLabel(\"c\"));\n      taxoWriter.close();\n\n      assumeFalse(\"if we are on windows and we have pending deletions we can't execute this test\",\n          Constants.WINDOWS && dir.checkPendingDeletions());\n      taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n      touchTaxo(taxoWriter, new FacetLabel(\"d\"));\n      taxoWriter.close();\n\n      newtr = TaxonomyReader.openIfChanged(taxoReader);\n      taxoReader.close();\n      taxoReader = newtr;\n      assertEquals(2, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n      taxoReader.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testRecreateAndRefresh() throws Exception {\n    // DirTaxoWriter lost the INDEX_EPOCH property if it was opened in\n    // CREATE_OR_APPEND (or commit(userData) called twice), which could lead to\n    // DirTaxoReader succeeding to refresh().\n    Directory dir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new FacetLabel(\"a\"));\n    \n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n\n    touchTaxo(taxoWriter, new FacetLabel(\"b\"));\n    \n    TaxonomyReader newtr = TaxonomyReader.openIfChanged(taxoReader);\n    taxoReader.close();\n    taxoReader = newtr;\n    assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n\n    // now recreate the taxonomy, and check that the epoch is preserved after opening DirTW again.\n    taxoWriter.close();\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new FacetLabel(\"c\"));\n    taxoWriter.close();\n    \n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new FacetLabel(\"d\"));\n    taxoWriter.close();\n\n    newtr = TaxonomyReader.openIfChanged(taxoReader);\n    taxoReader.close();\n    taxoReader = newtr;\n    assertEquals(2, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n\n    taxoReader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f42883db49d143abc1a0f176ba47e3388dafb608","date":1525083166,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","sourceNew":"  @Test\n  public void testRecreateAndRefresh() throws Exception {\n    // DirTaxoWriter lost the INDEX_EPOCH property if it was opened in\n    // CREATE_OR_APPEND (or commit(userData) called twice), which could lead to\n    // DirTaxoReader succeeding to refresh().\n    try (Directory dir = newDirectory()) {\n\n      DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n      touchTaxo(taxoWriter, new FacetLabel(\"a\"));\n\n      TaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n\n      touchTaxo(taxoWriter, new FacetLabel(\"b\"));\n\n      TaxonomyReader newtr = TaxonomyReader.openIfChanged(taxoReader);\n      taxoReader.close();\n      taxoReader = newtr;\n      assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n\n      // now recreate the taxonomy, and check that the epoch is preserved after opening DirTW again.\n      taxoWriter.close();\n\n      assumeFalse(\"if we are on windows and we have pending deletions we can't execute this test\",\n          Constants.WINDOWS && dir.checkPendingDeletions());\n      taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n      touchTaxo(taxoWriter, new FacetLabel(\"c\"));\n      taxoWriter.close();\n\n      assumeFalse(\"if we are on windows and we have pending deletions we can't execute this test\",\n          Constants.WINDOWS && dir.checkPendingDeletions());\n      taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n      touchTaxo(taxoWriter, new FacetLabel(\"d\"));\n      taxoWriter.close();\n\n      newtr = TaxonomyReader.openIfChanged(taxoReader);\n      taxoReader.close();\n      taxoReader = newtr;\n      assertEquals(2, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n      taxoReader.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testRecreateAndRefresh() throws Exception {\n    // DirTaxoWriter lost the INDEX_EPOCH property if it was opened in\n    // CREATE_OR_APPEND (or commit(userData) called twice), which could lead to\n    // DirTaxoReader succeeding to refresh().\n    Directory dir = newDirectory();\n    \n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new FacetLabel(\"a\"));\n    \n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n\n    touchTaxo(taxoWriter, new FacetLabel(\"b\"));\n    \n    TaxonomyReader newtr = TaxonomyReader.openIfChanged(taxoReader);\n    taxoReader.close();\n    taxoReader = newtr;\n    assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n\n    // now recreate the taxonomy, and check that the epoch is preserved after opening DirTW again.\n    taxoWriter.close();\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new FacetLabel(\"c\"));\n    taxoWriter.close();\n    \n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    touchTaxo(taxoWriter, new FacetLabel(\"d\"));\n    taxoWriter.close();\n\n    newtr = TaxonomyReader.openIfChanged(taxoReader);\n    taxoReader.close();\n    taxoReader = newtr;\n    assertEquals(2, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n\n    taxoReader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5e84aa7f651de6493590da495bcbe46d32cf038","date":1526462263,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testRecreateAndRefresh().mjava","sourceNew":"  @Test\n  public void testRecreateAndRefresh() throws Exception {\n    // DirTaxoWriter lost the INDEX_EPOCH property if it was opened in\n    // CREATE_OR_APPEND (or commit(userData) called twice), which could lead to\n    // DirTaxoReader succeeding to refresh().\n    try (Directory dir = newDirectory()) {\n\n      DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n      touchTaxo(taxoWriter, new FacetLabel(\"a\"));\n\n      TaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n\n      touchTaxo(taxoWriter, new FacetLabel(\"b\"));\n\n      TaxonomyReader newtr = TaxonomyReader.openIfChanged(taxoReader);\n      taxoReader.close();\n      taxoReader = newtr;\n      assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n\n      // now recreate the taxonomy, and check that the epoch is preserved after opening DirTW again.\n      taxoWriter.close();\n\n      taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n      touchTaxo(taxoWriter, new FacetLabel(\"c\"));\n      taxoWriter.close();\n\n      taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n      touchTaxo(taxoWriter, new FacetLabel(\"d\"));\n      taxoWriter.close();\n\n      newtr = TaxonomyReader.openIfChanged(taxoReader);\n      taxoReader.close();\n      taxoReader = newtr;\n      assertEquals(2, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n      taxoReader.close();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testRecreateAndRefresh() throws Exception {\n    // DirTaxoWriter lost the INDEX_EPOCH property if it was opened in\n    // CREATE_OR_APPEND (or commit(userData) called twice), which could lead to\n    // DirTaxoReader succeeding to refresh().\n    try (Directory dir = newDirectory()) {\n\n      DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n      touchTaxo(taxoWriter, new FacetLabel(\"a\"));\n\n      TaxonomyReader taxoReader = new DirectoryTaxonomyReader(dir);\n\n      touchTaxo(taxoWriter, new FacetLabel(\"b\"));\n\n      TaxonomyReader newtr = TaxonomyReader.openIfChanged(taxoReader);\n      taxoReader.close();\n      taxoReader = newtr;\n      assertEquals(1, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n\n      // now recreate the taxonomy, and check that the epoch is preserved after opening DirTW again.\n      taxoWriter.close();\n\n      assumeFalse(\"if we are on windows and we have pending deletions we can't execute this test\",\n          Constants.WINDOWS && dir.checkPendingDeletions());\n      taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE, NO_OP_CACHE);\n      touchTaxo(taxoWriter, new FacetLabel(\"c\"));\n      taxoWriter.close();\n\n      assumeFalse(\"if we are on windows and we have pending deletions we can't execute this test\",\n          Constants.WINDOWS && dir.checkPendingDeletions());\n      taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n      touchTaxo(taxoWriter, new FacetLabel(\"d\"));\n      taxoWriter.close();\n\n      newtr = TaxonomyReader.openIfChanged(taxoReader);\n      taxoReader.close();\n      taxoReader = newtr;\n      assertEquals(2, Integer.parseInt(taxoReader.getCommitUserData().get(DirectoryTaxonomyWriter.INDEX_EPOCH)));\n      taxoReader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"78e3613d9274c0d98ca67d976e415c82e9f9cf46":["b52ea8b7f80d4a0600efc9765dc896387008ebd4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["78e3613d9274c0d98ca67d976e415c82e9f9cf46","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"b52ea8b7f80d4a0600efc9765dc896387008ebd4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"f42883db49d143abc1a0f176ba47e3388dafb608":["3cc728b07df73b197e6d940d27f9b08b63918f13","545b3a0ce9588bb2e4e6ed589e8f3a2233965a70"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["219dcddcdf2fc13f6271d9e5836bd19c53a4abf1","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["78e3613d9274c0d98ca67d976e415c82e9f9cf46"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c5e84aa7f651de6493590da495bcbe46d32cf038"],"c5e84aa7f651de6493590da495bcbe46d32cf038":["f42883db49d143abc1a0f176ba47e3388dafb608"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"545b3a0ce9588bb2e4e6ed589e8f3a2233965a70":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b52ea8b7f80d4a0600efc9765dc896387008ebd4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"78e3613d9274c0d98ca67d976e415c82e9f9cf46":["407687e67faf6e1f02a211ca078d8e3eed631027","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"b52ea8b7f80d4a0600efc9765dc896387008ebd4":["78e3613d9274c0d98ca67d976e415c82e9f9cf46"],"f42883db49d143abc1a0f176ba47e3388dafb608":["c5e84aa7f651de6493590da495bcbe46d32cf038"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["f42883db49d143abc1a0f176ba47e3388dafb608","545b3a0ce9588bb2e4e6ed589e8f3a2233965a70"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["407687e67faf6e1f02a211ca078d8e3eed631027","3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"545b3a0ce9588bb2e4e6ed589e8f3a2233965a70":["f42883db49d143abc1a0f176ba47e3388dafb608"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"c5e84aa7f651de6493590da495bcbe46d32cf038":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}