{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testPolyToBBox().mjava","commits":[{"id":"ad0d09e969f4763b0df4230f8e3f74357872a4e4","date":1459188769,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testPolyToBBox().mjava","pathOld":"/dev/null","sourceNew":"  public void testPolyToBBox() throws Exception {\n    for (int i = 0; i < 1000; i++) {\n      double[][] polygon = GeoTestUtil.nextPolygon();\n      GeoRect box = GeoUtils.polyToBBox(polygon[0], polygon[1]);\n      assertFalse(box.crossesDateline());\n      \n      for (int j = 0; j < 1000; j++) {\n        double latitude = GeoTestUtil.nextLatitude();\n        double longitude = GeoTestUtil.nextLongitude();\n        // if the point is within poly, then it should be in our bounding box\n        if (GeoRelationUtils.pointInPolygon(polygon[0], polygon[1], latitude, longitude)) {\n          assertTrue(latitude >= box.minLat && latitude <= box.maxLat);\n          assertTrue(longitude >= box.minLon && longitude <= box.maxLon);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95ddcac9ac08381985af6eac8f8b77ba881d4ad8","date":1459477726,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestPolygon#testBoundingBox().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testPolyToBBox().mjava","sourceNew":"  public void testBoundingBox() throws Exception {\n    for (int i = 0; i < 100; i++) {\n      Polygon polygon = GeoTestUtil.nextPolygon();\n      \n      for (int j = 0; j < 100; j++) {\n        double latitude = GeoTestUtil.nextLatitude();\n        double longitude = GeoTestUtil.nextLongitude();\n        // if the point is within poly, then it should be in our bounding box\n        if (polygon.contains(latitude, longitude)) {\n          assertTrue(latitude >= polygon.minLat && latitude <= polygon.maxLat);\n          assertTrue(longitude >= polygon.minLon && longitude <= polygon.maxLon);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void testPolyToBBox() throws Exception {\n    for (int i = 0; i < 1000; i++) {\n      double[][] polygon = GeoTestUtil.nextPolygon();\n      GeoRect box = GeoUtils.polyToBBox(polygon[0], polygon[1]);\n      assertFalse(box.crossesDateline());\n      \n      for (int j = 0; j < 1000; j++) {\n        double latitude = GeoTestUtil.nextLatitude();\n        double longitude = GeoTestUtil.nextLongitude();\n        // if the point is within poly, then it should be in our bounding box\n        if (GeoRelationUtils.pointInPolygon(polygon[0], polygon[1], latitude, longitude)) {\n          assertTrue(latitude >= box.minLat && latitude <= box.maxLat);\n          assertTrue(longitude >= box.minLon && longitude <= box.maxLon);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"95ddcac9ac08381985af6eac8f8b77ba881d4ad8":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad0d09e969f4763b0df4230f8e3f74357872a4e4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["95ddcac9ac08381985af6eac8f8b77ba881d4ad8"]},"commit2Childs":{"95ddcac9ac08381985af6eac8f8b77ba881d4ad8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"],"ad0d09e969f4763b0df4230f8e3f74357872a4e4":["95ddcac9ac08381985af6eac8f8b77ba881d4ad8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}