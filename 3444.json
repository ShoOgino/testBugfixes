{"path":"lucene/src/test-framework/org/apache/lucene/util/automaton/AutomatonTestUtil#isFiniteSlow(Automaton).mjava","commits":[{"id":"f89574d69843793efb77e8611441f8aee3aad1e8","date":1300294286,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/automaton/AutomatonTestUtil#isFiniteSlow(Automaton).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns true if the language of this automaton is finite.\n   * <p>\n   * WARNING: this method is slow, it will blow up if the automaton is large.\n   * this is only used to test the correctness of our faster implementation.\n   */\n  public static boolean isFiniteSlow(Automaton a) {\n    if (a.isSingleton()) return true;\n    return isFiniteSlow(a.initial, new HashSet<State>());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/automaton/AutomatonTestUtil#isFiniteSlow(Automaton).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns true if the language of this automaton is finite.\n   * <p>\n   * WARNING: this method is slow, it will blow up if the automaton is large.\n   * this is only used to test the correctness of our faster implementation.\n   */\n  public static boolean isFiniteSlow(Automaton a) {\n    if (a.isSingleton()) return true;\n    return isFiniteSlow(a.initial, new HashSet<State>());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/automaton/AutomatonTestUtil#isFiniteSlow(Automaton).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns true if the language of this automaton is finite.\n   * <p>\n   * WARNING: this method is slow, it will blow up if the automaton is large.\n   * this is only used to test the correctness of our faster implementation.\n   */\n  public static boolean isFiniteSlow(Automaton a) {\n    if (a.isSingleton()) return true;\n    return isFiniteSlow(a.initial, new HashSet<State>());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/automaton/AutomatonTestUtil#isFiniteSlow(Automaton).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/automaton/AutomatonTestUtil#isFiniteSlow(Automaton).mjava","sourceNew":"  /**\n   * Returns true if the language of this automaton is finite.\n   * <p>\n   * WARNING: this method is slow, it will blow up if the automaton is large.\n   * this is only used to test the correctness of our faster implementation.\n   */\n  public static boolean isFiniteSlow(Automaton a) {\n    if (a.isSingleton()) return true;\n    return isFiniteSlow(a.initial, new HashSet<State>());\n  }\n\n","sourceOld":"  /**\n   * Returns true if the language of this automaton is finite.\n   * <p>\n   * WARNING: this method is slow, it will blow up if the automaton is large.\n   * this is only used to test the correctness of our faster implementation.\n   */\n  public static boolean isFiniteSlow(Automaton a) {\n    if (a.isSingleton()) return true;\n    return isFiniteSlow(a.initial, new HashSet<State>());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["f89574d69843793efb77e8611441f8aee3aad1e8"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f89574d69843793efb77e8611441f8aee3aad1e8"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f89574d69843793efb77e8611441f8aee3aad1e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f89574d69843793efb77e8611441f8aee3aad1e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","f89574d69843793efb77e8611441f8aee3aad1e8"],"f89574d69843793efb77e8611441f8aee3aad1e8":["7b91922b55d15444d554721b352861d028eb8278","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}