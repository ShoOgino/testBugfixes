{"path":"src/test/org/apache/solr/core/TestSolrDeletionPolicy1#addDocs().mjava","commits":[{"id":"97fc5a00245e9b31c118c53df88b1376237ea87b","date":1222659461,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/test/org/apache/solr/core/TestSolrDeletionPolicy1#addDocs().mjava","pathOld":"/dev/null","sourceNew":"  private void addDocs() {\n\n    assertU(adoc(\"id\", String.valueOf(1),\n            \"name\", \"name\" + String.valueOf(1)));\n    assertU(commit());\n    assertQ(\"return all docs\",\n            req(\"id:[0 TO 1]\"),\n            \"*[count(//doc)=1]\"\n    );\n\n    assertU(adoc(\"id\", String.valueOf(2),\n            \"name\", \"name\" + String.valueOf(2)));\n    assertU(commit());\n    assertQ(\"return all docs\",\n            req(\"id:[0 TO 2]\"),\n            \"*[count(//doc)=2]\"\n    );\n\n    assertU(adoc(\"id\", String.valueOf(3),\n            \"name\", \"name\" + String.valueOf(3)));\n    assertU(optimize());\n    assertQ(\"return all docs\",\n            req(\"id:[0 TO 3]\"),\n            \"*[count(//doc)=3]\"\n    );\n\n    assertU(adoc(\"id\", String.valueOf(4),\n            \"name\", \"name\" + String.valueOf(4)));\n    assertU(optimize());\n    assertQ(\"return all docs\",\n            req(\"id:[0 TO 4]\"),\n            \"*[count(//doc)=4]\"\n    );\n\n    assertU(adoc(\"id\", String.valueOf(5),\n            \"name\", \"name\" + String.valueOf(5)));\n    assertU(optimize());\n    assertQ(\"return all docs\",\n            req(\"id:[0 TO 5]\"),\n            \"*[count(//doc)=5]\"\n    );\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestSolrDeletionPolicy1#addDocs().mjava","pathOld":"src/test/org/apache/solr/core/TestSolrDeletionPolicy1#addDocs().mjava","sourceNew":"  private void addDocs() {\n\n    assertU(adoc(\"id\", String.valueOf(1),\n            \"name\", \"name\" + String.valueOf(1)));\n    assertU(commit());\n    assertQ(\"return all docs\",\n            req(\"id:[0 TO 1]\"),\n            \"*[count(//doc)=1]\"\n    );\n\n    assertU(adoc(\"id\", String.valueOf(2),\n            \"name\", \"name\" + String.valueOf(2)));\n    assertU(commit());\n    assertQ(\"return all docs\",\n            req(\"id:[0 TO 2]\"),\n            \"*[count(//doc)=2]\"\n    );\n\n    assertU(adoc(\"id\", String.valueOf(3),\n            \"name\", \"name\" + String.valueOf(3)));\n    assertU(optimize());\n    assertQ(\"return all docs\",\n            req(\"id:[0 TO 3]\"),\n            \"*[count(//doc)=3]\"\n    );\n\n    assertU(adoc(\"id\", String.valueOf(4),\n            \"name\", \"name\" + String.valueOf(4)));\n    assertU(optimize());\n    assertQ(\"return all docs\",\n            req(\"id:[0 TO 4]\"),\n            \"*[count(//doc)=4]\"\n    );\n\n    assertU(adoc(\"id\", String.valueOf(5),\n            \"name\", \"name\" + String.valueOf(5)));\n    assertU(optimize());\n    assertQ(\"return all docs\",\n            req(\"id:[0 TO 5]\"),\n            \"*[count(//doc)=5]\"\n    );\n\n  }\n\n","sourceOld":"  private void addDocs() {\n\n    assertU(adoc(\"id\", String.valueOf(1),\n            \"name\", \"name\" + String.valueOf(1)));\n    assertU(commit());\n    assertQ(\"return all docs\",\n            req(\"id:[0 TO 1]\"),\n            \"*[count(//doc)=1]\"\n    );\n\n    assertU(adoc(\"id\", String.valueOf(2),\n            \"name\", \"name\" + String.valueOf(2)));\n    assertU(commit());\n    assertQ(\"return all docs\",\n            req(\"id:[0 TO 2]\"),\n            \"*[count(//doc)=2]\"\n    );\n\n    assertU(adoc(\"id\", String.valueOf(3),\n            \"name\", \"name\" + String.valueOf(3)));\n    assertU(optimize());\n    assertQ(\"return all docs\",\n            req(\"id:[0 TO 3]\"),\n            \"*[count(//doc)=3]\"\n    );\n\n    assertU(adoc(\"id\", String.valueOf(4),\n            \"name\", \"name\" + String.valueOf(4)));\n    assertU(optimize());\n    assertQ(\"return all docs\",\n            req(\"id:[0 TO 4]\"),\n            \"*[count(//doc)=4]\"\n    );\n\n    assertU(adoc(\"id\", String.valueOf(5),\n            \"name\", \"name\" + String.valueOf(5)));\n    assertU(optimize());\n    assertQ(\"return all docs\",\n            req(\"id:[0 TO 5]\"),\n            \"*[count(//doc)=5]\"\n    );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97fc5a00245e9b31c118c53df88b1376237ea87b":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["97fc5a00245e9b31c118c53df88b1376237ea87b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"97fc5a00245e9b31c118c53df88b1376237ea87b":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["97fc5a00245e9b31c118c53df88b1376237ea87b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}