{"path":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseAdd().mjava","commits":[{"id":"042e4d934397657ba04c82b46cc5665076bc5c58","date":1336511170,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseAdd().mjava","pathOld":"/dev/null","sourceNew":"    AddUpdateCommand parseAdd() throws IOException\n    {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.commitWithin = commitWithin;\n      cmd.overwrite = overwrite;\n  \n      float boost = 1.0f;\n      \n      while( true ) {\n        int ev = parser.nextEvent();\n        if( ev == JSONParser.STRING ) {\n          if( parser.wasKey() ) {\n            String key = parser.getString();\n            if( \"doc\".equals( key ) ) {\n              if( cmd.solrDoc != null ) {\n                throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"multiple docs in same add command\" );\n              }\n              ev = assertNextEvent( JSONParser.OBJECT_START );\n              cmd.solrDoc = parseDoc( ev );\n            }\n            else if( UpdateRequestHandler.OVERWRITE.equals( key ) ) {\n              cmd.overwrite = parser.getBoolean(); // reads next boolean\n            }\n            else if( UpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n              cmd.commitWithin = (int)parser.getLong();\n            }\n            else if( \"boost\".equals( key ) ) {\n              boost = Float.parseFloat( parser.getNumberChars().toString() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown key: \"+key+\" [\"+parser.getPosition()+\"]\" );\n            }\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"Should be a key \"\n                +\" at [\"+parser.getPosition()+\"]\" );\n          }\n        }\n        else if( ev == JSONParser.OBJECT_END ) {\n          if( cmd.solrDoc == null ) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"missing solr document. \"+parser.getPosition() );\n          }\n          cmd.solrDoc.setDocumentBoost( boost ); \n          return cmd;\n        }\n        else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Got: \"+JSONParser.getEventString( ev  )\n              +\" at [\"+parser.getPosition()+\"]\" );\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab10d7c14ce9f8db61956611a57a5a377362a633","date":1413903184,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseAdd().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseAdd().mjava","sourceNew":"    AddUpdateCommand parseAdd() throws IOException\n    {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.commitWithin = commitWithin;\n      cmd.overwrite = overwrite;\n\n      float boost = 1.0f;\n\n      while( true ) {\n        int ev = parser.nextEvent();\n        if( ev == JSONParser.STRING ) {\n          if( parser.wasKey() ) {\n            String key = parser.getString();\n            if( \"doc\".equals( key ) ) {\n              if( cmd.solrDoc != null ) {\n                throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"multiple docs in same add command\" );\n              }\n              ev = assertNextEvent( JSONParser.OBJECT_START );\n              cmd.solrDoc = parseDoc( ev );\n            }\n            else if( UpdateRequestHandler.OVERWRITE.equals( key ) ) {\n              cmd.overwrite = parser.getBoolean(); // reads next boolean\n            }\n            else if( UpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n              cmd.commitWithin = (int)parser.getLong();\n            }\n            else if( \"boost\".equals( key ) ) {\n              boost = Float.parseFloat( parser.getNumberChars().toString() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown key: \"+key+\" [\"+parser.getPosition()+\"]\" );\n            }\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"Should be a key \"\n                +\" at [\"+parser.getPosition()+\"]\" );\n          }\n        }\n        else if( ev == JSONParser.OBJECT_END ) {\n          if( cmd.solrDoc == null ) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"missing solr document. \"+parser.getPosition() );\n          }\n          cmd.solrDoc.setDocumentBoost( boost );\n          return cmd;\n        }\n        else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Got: \"+JSONParser.getEventString( ev  )\n              +\" at [\"+parser.getPosition()+\"]\" );\n        }\n      }\n    }\n\n","sourceOld":"    AddUpdateCommand parseAdd() throws IOException\n    {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.commitWithin = commitWithin;\n      cmd.overwrite = overwrite;\n  \n      float boost = 1.0f;\n      \n      while( true ) {\n        int ev = parser.nextEvent();\n        if( ev == JSONParser.STRING ) {\n          if( parser.wasKey() ) {\n            String key = parser.getString();\n            if( \"doc\".equals( key ) ) {\n              if( cmd.solrDoc != null ) {\n                throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"multiple docs in same add command\" );\n              }\n              ev = assertNextEvent( JSONParser.OBJECT_START );\n              cmd.solrDoc = parseDoc( ev );\n            }\n            else if( UpdateRequestHandler.OVERWRITE.equals( key ) ) {\n              cmd.overwrite = parser.getBoolean(); // reads next boolean\n            }\n            else if( UpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n              cmd.commitWithin = (int)parser.getLong();\n            }\n            else if( \"boost\".equals( key ) ) {\n              boost = Float.parseFloat( parser.getNumberChars().toString() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown key: \"+key+\" [\"+parser.getPosition()+\"]\" );\n            }\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"Should be a key \"\n                +\" at [\"+parser.getPosition()+\"]\" );\n          }\n        }\n        else if( ev == JSONParser.OBJECT_END ) {\n          if( cmd.solrDoc == null ) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"missing solr document. \"+parser.getPosition() );\n          }\n          cmd.solrDoc.setDocumentBoost( boost ); \n          return cmd;\n        }\n        else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Got: \"+JSONParser.getEventString( ev  )\n              +\" at [\"+parser.getPosition()+\"]\" );\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseAdd().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseAdd().mjava","sourceNew":"    AddUpdateCommand parseAdd() throws IOException\n    {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.commitWithin = commitWithin;\n      cmd.overwrite = overwrite;\n\n      float boost = 1.0f;\n\n      while( true ) {\n        int ev = parser.nextEvent();\n        if( ev == JSONParser.STRING ) {\n          if( parser.wasKey() ) {\n            String key = parser.getString();\n            if( \"doc\".equals( key ) ) {\n              if( cmd.solrDoc != null ) {\n                throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"multiple docs in same add command\" );\n              }\n              ev = assertNextEvent( JSONParser.OBJECT_START );\n              cmd.solrDoc = parseDoc( ev );\n            }\n            else if( UpdateRequestHandler.OVERWRITE.equals( key ) ) {\n              cmd.overwrite = parser.getBoolean(); // reads next boolean\n            }\n            else if( UpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n              cmd.commitWithin = (int)parser.getLong();\n            }\n            else if( \"boost\".equals( key ) ) {\n              boost = Float.parseFloat( parser.getNumberChars().toString() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown key: \"+key+\" [\"+parser.getPosition()+\"]\" );\n            }\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"Should be a key \"\n                +\" at [\"+parser.getPosition()+\"]\" );\n          }\n        }\n        else if( ev == JSONParser.OBJECT_END ) {\n          if( cmd.solrDoc == null ) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"missing solr document. \"+parser.getPosition() );\n          }\n          cmd.solrDoc.setDocumentBoost( boost );\n          return cmd;\n        }\n        else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Got: \"+JSONParser.getEventString( ev  )\n              +\" at [\"+parser.getPosition()+\"]\" );\n        }\n      }\n    }\n\n","sourceOld":"    AddUpdateCommand parseAdd() throws IOException\n    {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.commitWithin = commitWithin;\n      cmd.overwrite = overwrite;\n  \n      float boost = 1.0f;\n      \n      while( true ) {\n        int ev = parser.nextEvent();\n        if( ev == JSONParser.STRING ) {\n          if( parser.wasKey() ) {\n            String key = parser.getString();\n            if( \"doc\".equals( key ) ) {\n              if( cmd.solrDoc != null ) {\n                throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"multiple docs in same add command\" );\n              }\n              ev = assertNextEvent( JSONParser.OBJECT_START );\n              cmd.solrDoc = parseDoc( ev );\n            }\n            else if( UpdateRequestHandler.OVERWRITE.equals( key ) ) {\n              cmd.overwrite = parser.getBoolean(); // reads next boolean\n            }\n            else if( UpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n              cmd.commitWithin = (int)parser.getLong();\n            }\n            else if( \"boost\".equals( key ) ) {\n              boost = Float.parseFloat( parser.getNumberChars().toString() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown key: \"+key+\" [\"+parser.getPosition()+\"]\" );\n            }\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"Should be a key \"\n                +\" at [\"+parser.getPosition()+\"]\" );\n          }\n        }\n        else if( ev == JSONParser.OBJECT_END ) {\n          if( cmd.solrDoc == null ) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"missing solr document. \"+parser.getPosition() );\n          }\n          cmd.solrDoc.setDocumentBoost( boost ); \n          return cmd;\n        }\n        else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Got: \"+JSONParser.getEventString( ev  )\n              +\" at [\"+parser.getPosition()+\"]\" );\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a63f62e9f506b7a15c76fddc8ad5f22112070c2","date":1423521689,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseAdd().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseAdd().mjava","sourceNew":"    AddUpdateCommand parseAdd() throws IOException\n    {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.commitWithin = commitWithin;\n      cmd.overwrite = overwrite;\n\n      float boost = 1.0f;\n\n      while( true ) {\n        int ev = parser.nextEvent();\n        if( ev == JSONParser.STRING ) {\n          if( parser.wasKey() ) {\n            String key = parser.getString();\n            if( \"doc\".equals( key ) ) {\n              if( cmd.solrDoc != null ) {\n                throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Multiple documents in same\"\n                    + \" add command at [\"+parser.getPosition()+\"]\" );\n              }\n              ev = assertNextEvent( JSONParser.OBJECT_START );\n              cmd.solrDoc = parseDoc( ev );\n            }\n            else if( UpdateRequestHandler.OVERWRITE.equals( key ) ) {\n              cmd.overwrite = parser.getBoolean(); // reads next boolean\n            }\n            else if( UpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n              cmd.commitWithin = (int)parser.getLong();\n            }\n            else if( \"boost\".equals( key ) ) {\n              boost = Float.parseFloat( parser.getNumberChars().toString() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown key '\"+key+\"' at [\"+parser.getPosition()+\"]\" );\n            }\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"Should be a key \"\n                +\" at [\"+parser.getPosition()+\"]\" );\n          }\n        }\n        else if( ev == JSONParser.OBJECT_END ) {\n          if( cmd.solrDoc == null ) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Missing solr document at [\"+parser.getPosition()+\"]\" );\n          }\n          cmd.solrDoc.setDocumentBoost( boost );\n          return cmd;\n        }\n        else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Got: \"+JSONParser.getEventString( ev  )\n              +\" at [\"+parser.getPosition()+\"]\" );\n        }\n      }\n    }\n\n","sourceOld":"    AddUpdateCommand parseAdd() throws IOException\n    {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.commitWithin = commitWithin;\n      cmd.overwrite = overwrite;\n\n      float boost = 1.0f;\n\n      while( true ) {\n        int ev = parser.nextEvent();\n        if( ev == JSONParser.STRING ) {\n          if( parser.wasKey() ) {\n            String key = parser.getString();\n            if( \"doc\".equals( key ) ) {\n              if( cmd.solrDoc != null ) {\n                throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"multiple docs in same add command\" );\n              }\n              ev = assertNextEvent( JSONParser.OBJECT_START );\n              cmd.solrDoc = parseDoc( ev );\n            }\n            else if( UpdateRequestHandler.OVERWRITE.equals( key ) ) {\n              cmd.overwrite = parser.getBoolean(); // reads next boolean\n            }\n            else if( UpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n              cmd.commitWithin = (int)parser.getLong();\n            }\n            else if( \"boost\".equals( key ) ) {\n              boost = Float.parseFloat( parser.getNumberChars().toString() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown key: \"+key+\" [\"+parser.getPosition()+\"]\" );\n            }\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"Should be a key \"\n                +\" at [\"+parser.getPosition()+\"]\" );\n          }\n        }\n        else if( ev == JSONParser.OBJECT_END ) {\n          if( cmd.solrDoc == null ) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"missing solr document. \"+parser.getPosition() );\n          }\n          cmd.solrDoc.setDocumentBoost( boost );\n          return cmd;\n        }\n        else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Got: \"+JSONParser.getEventString( ev  )\n              +\" at [\"+parser.getPosition()+\"]\" );\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f5f8e831e266692b649e39dad7a64f525aa6d21","date":1427506910,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseAdd().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseAdd().mjava","sourceNew":"    AddUpdateCommand parseAdd() throws IOException {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.commitWithin = commitWithin;\n      cmd.overwrite = overwrite;\n\n      float boost = 1.0f;\n\n      while (true) {\n        int ev = parser.nextEvent();\n        if (ev == JSONParser.STRING) {\n          if (parser.wasKey()) {\n            String key = parser.getString();\n            if (\"doc\".equals(key)) {\n              if (cmd.solrDoc != null) {\n                throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Multiple documents in same\"\n                    + \" add command at [\" + parser.getPosition() + \"]\");\n              }\n              ev = assertNextEvent(JSONParser.OBJECT_START);\n              cmd.solrDoc = parseDoc(ev);\n            } else if (UpdateRequestHandler.OVERWRITE.equals(key)) {\n              cmd.overwrite = parser.getBoolean(); // reads next boolean\n            } else if (UpdateRequestHandler.COMMIT_WITHIN.equals(key)) {\n              cmd.commitWithin = (int) parser.getLong();\n            } else if (\"boost\".equals(key)) {\n              boost = Float.parseFloat(parser.getNumberChars().toString());\n            } else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown key '\" + key + \"' at [\" + parser.getPosition() + \"]\");\n            }\n          } else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"Should be a key \"\n                    + \" at [\" + parser.getPosition() + \"]\");\n          }\n        } else if (ev == JSONParser.OBJECT_END) {\n          if (cmd.solrDoc == null) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Missing solr document at [\" + parser.getPosition() + \"]\");\n          }\n          cmd.solrDoc.setDocumentBoost(boost);\n          return cmd;\n        } else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Got: \" + JSONParser.getEventString(ev)\n                  + \" at [\" + parser.getPosition() + \"]\");\n        }\n      }\n    }\n\n","sourceOld":"    AddUpdateCommand parseAdd() throws IOException\n    {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.commitWithin = commitWithin;\n      cmd.overwrite = overwrite;\n\n      float boost = 1.0f;\n\n      while( true ) {\n        int ev = parser.nextEvent();\n        if( ev == JSONParser.STRING ) {\n          if( parser.wasKey() ) {\n            String key = parser.getString();\n            if( \"doc\".equals( key ) ) {\n              if( cmd.solrDoc != null ) {\n                throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Multiple documents in same\"\n                    + \" add command at [\"+parser.getPosition()+\"]\" );\n              }\n              ev = assertNextEvent( JSONParser.OBJECT_START );\n              cmd.solrDoc = parseDoc( ev );\n            }\n            else if( UpdateRequestHandler.OVERWRITE.equals( key ) ) {\n              cmd.overwrite = parser.getBoolean(); // reads next boolean\n            }\n            else if( UpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n              cmd.commitWithin = (int)parser.getLong();\n            }\n            else if( \"boost\".equals( key ) ) {\n              boost = Float.parseFloat( parser.getNumberChars().toString() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown key '\"+key+\"' at [\"+parser.getPosition()+\"]\" );\n            }\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"Should be a key \"\n                +\" at [\"+parser.getPosition()+\"]\" );\n          }\n        }\n        else if( ev == JSONParser.OBJECT_END ) {\n          if( cmd.solrDoc == null ) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Missing solr document at [\"+parser.getPosition()+\"]\" );\n          }\n          cmd.solrDoc.setDocumentBoost( boost );\n          return cmd;\n        }\n        else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Got: \"+JSONParser.getEventString( ev  )\n              +\" at [\"+parser.getPosition()+\"]\" );\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseAdd().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseAdd().mjava","sourceNew":"    AddUpdateCommand parseAdd() throws IOException {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.commitWithin = commitWithin;\n      cmd.overwrite = overwrite;\n\n      float boost = 1.0f;\n\n      while (true) {\n        int ev = parser.nextEvent();\n        if (ev == JSONParser.STRING) {\n          if (parser.wasKey()) {\n            String key = parser.getString();\n            if (\"doc\".equals(key)) {\n              if (cmd.solrDoc != null) {\n                throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Multiple documents in same\"\n                    + \" add command at [\" + parser.getPosition() + \"]\");\n              }\n              ev = assertNextEvent(JSONParser.OBJECT_START);\n              cmd.solrDoc = parseDoc(ev);\n            } else if (UpdateRequestHandler.OVERWRITE.equals(key)) {\n              cmd.overwrite = parser.getBoolean(); // reads next boolean\n            } else if (UpdateRequestHandler.COMMIT_WITHIN.equals(key)) {\n              cmd.commitWithin = (int) parser.getLong();\n            } else if (\"boost\".equals(key)) {\n              boost = Float.parseFloat(parser.getNumberChars().toString());\n            } else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown key '\" + key + \"' at [\" + parser.getPosition() + \"]\");\n            }\n          } else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"Should be a key \"\n                    + \" at [\" + parser.getPosition() + \"]\");\n          }\n        } else if (ev == JSONParser.OBJECT_END) {\n          if (cmd.solrDoc == null) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Missing solr document at [\" + parser.getPosition() + \"]\");\n          }\n          cmd.solrDoc.setDocumentBoost(boost);\n          return cmd;\n        } else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Got: \" + JSONParser.getEventString(ev)\n                  + \" at [\" + parser.getPosition() + \"]\");\n        }\n      }\n    }\n\n","sourceOld":"    AddUpdateCommand parseAdd() throws IOException\n    {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.commitWithin = commitWithin;\n      cmd.overwrite = overwrite;\n\n      float boost = 1.0f;\n\n      while( true ) {\n        int ev = parser.nextEvent();\n        if( ev == JSONParser.STRING ) {\n          if( parser.wasKey() ) {\n            String key = parser.getString();\n            if( \"doc\".equals( key ) ) {\n              if( cmd.solrDoc != null ) {\n                throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Multiple documents in same\"\n                    + \" add command at [\"+parser.getPosition()+\"]\" );\n              }\n              ev = assertNextEvent( JSONParser.OBJECT_START );\n              cmd.solrDoc = parseDoc( ev );\n            }\n            else if( UpdateRequestHandler.OVERWRITE.equals( key ) ) {\n              cmd.overwrite = parser.getBoolean(); // reads next boolean\n            }\n            else if( UpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n              cmd.commitWithin = (int)parser.getLong();\n            }\n            else if( \"boost\".equals( key ) ) {\n              boost = Float.parseFloat( parser.getNumberChars().toString() );\n            }\n            else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown key '\"+key+\"' at [\"+parser.getPosition()+\"]\" );\n            }\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"Should be a key \"\n                +\" at [\"+parser.getPosition()+\"]\" );\n          }\n        }\n        else if( ev == JSONParser.OBJECT_END ) {\n          if( cmd.solrDoc == null ) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Missing solr document at [\"+parser.getPosition()+\"]\" );\n          }\n          cmd.solrDoc.setDocumentBoost( boost );\n          return cmd;\n        }\n        else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Got: \"+JSONParser.getEventString( ev  )\n              +\" at [\"+parser.getPosition()+\"]\" );\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseAdd().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseAdd().mjava","sourceNew":"    AddUpdateCommand parseAdd() throws IOException {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.commitWithin = commitWithin;\n      cmd.overwrite = overwrite;\n\n      while (true) {\n        int ev = parser.nextEvent();\n        if (ev == JSONParser.STRING) {\n          if (parser.wasKey()) {\n            String key = parser.getString();\n            if (\"doc\".equals(key)) {\n              if (cmd.solrDoc != null) {\n                throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Multiple documents in same\"\n                    + \" add command at [\" + parser.getPosition() + \"]\");\n              }\n              ev = assertNextEvent(JSONParser.OBJECT_START);\n              cmd.solrDoc = parseDoc(ev);\n            } else if (UpdateRequestHandler.OVERWRITE.equals(key)) {\n              cmd.overwrite = parser.getBoolean(); // reads next boolean\n            } else if (UpdateRequestHandler.COMMIT_WITHIN.equals(key)) {\n              cmd.commitWithin = (int) parser.getLong();\n            } else if (\"boost\".equals(key)) {\n              String boost = parser.getNumberChars().toString();\n              String message = \"Ignoring document boost: \" + boost + \" as index-time boosts are not supported anymore\";\n              if (WARNED_ABOUT_INDEX_TIME_BOOSTS.compareAndSet(false, true)) {\n                log.warn(message);\n              } else {\n                log.debug(message);\n              }\n            } else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown key '\" + key + \"' at [\" + parser.getPosition() + \"]\");\n            }\n          } else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"Should be a key \"\n                    + \" at [\" + parser.getPosition() + \"]\");\n          }\n        } else if (ev == JSONParser.OBJECT_END) {\n          if (cmd.solrDoc == null) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Missing solr document at [\" + parser.getPosition() + \"]\");\n          }\n          return cmd;\n        } else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Got: \" + JSONParser.getEventString(ev)\n                  + \" at [\" + parser.getPosition() + \"]\");\n        }\n      }\n    }\n\n","sourceOld":"    AddUpdateCommand parseAdd() throws IOException {\n      AddUpdateCommand cmd = new AddUpdateCommand(req);\n      cmd.commitWithin = commitWithin;\n      cmd.overwrite = overwrite;\n\n      float boost = 1.0f;\n\n      while (true) {\n        int ev = parser.nextEvent();\n        if (ev == JSONParser.STRING) {\n          if (parser.wasKey()) {\n            String key = parser.getString();\n            if (\"doc\".equals(key)) {\n              if (cmd.solrDoc != null) {\n                throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Multiple documents in same\"\n                    + \" add command at [\" + parser.getPosition() + \"]\");\n              }\n              ev = assertNextEvent(JSONParser.OBJECT_START);\n              cmd.solrDoc = parseDoc(ev);\n            } else if (UpdateRequestHandler.OVERWRITE.equals(key)) {\n              cmd.overwrite = parser.getBoolean(); // reads next boolean\n            } else if (UpdateRequestHandler.COMMIT_WITHIN.equals(key)) {\n              cmd.commitWithin = (int) parser.getLong();\n            } else if (\"boost\".equals(key)) {\n              boost = Float.parseFloat(parser.getNumberChars().toString());\n            } else {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown key '\" + key + \"' at [\" + parser.getPosition() + \"]\");\n            }\n          } else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"Should be a key \"\n                    + \" at [\" + parser.getPosition() + \"]\");\n          }\n        } else if (ev == JSONParser.OBJECT_END) {\n          if (cmd.solrDoc == null) {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Missing solr document at [\" + parser.getPosition() + \"]\");\n          }\n          cmd.solrDoc.setDocumentBoost(boost);\n          return cmd;\n        } else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Got: \" + JSONParser.getEventString(ev)\n                  + \" at [\" + parser.getPosition() + \"]\");\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["2a63f62e9f506b7a15c76fddc8ad5f22112070c2","6f5f8e831e266692b649e39dad7a64f525aa6d21"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["042e4d934397657ba04c82b46cc5665076bc5c58","ab10d7c14ce9f8db61956611a57a5a377362a633"],"6f5f8e831e266692b649e39dad7a64f525aa6d21":["2a63f62e9f506b7a15c76fddc8ad5f22112070c2"],"ab10d7c14ce9f8db61956611a57a5a377362a633":["042e4d934397657ba04c82b46cc5665076bc5c58"],"042e4d934397657ba04c82b46cc5665076bc5c58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2a63f62e9f506b7a15c76fddc8ad5f22112070c2":["ab10d7c14ce9f8db61956611a57a5a377362a633"],"acd9883560fd89e6448b2b447302fe543040cd4f":["6f5f8e831e266692b649e39dad7a64f525aa6d21"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acd9883560fd89e6448b2b447302fe543040cd4f"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"6f5f8e831e266692b649e39dad7a64f525aa6d21":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","acd9883560fd89e6448b2b447302fe543040cd4f"],"042e4d934397657ba04c82b46cc5665076bc5c58":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","ab10d7c14ce9f8db61956611a57a5a377362a633"],"ab10d7c14ce9f8db61956611a57a5a377362a633":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","2a63f62e9f506b7a15c76fddc8ad5f22112070c2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["042e4d934397657ba04c82b46cc5665076bc5c58"],"2a63f62e9f506b7a15c76fddc8ad5f22112070c2":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","6f5f8e831e266692b649e39dad7a64f525aa6d21"],"acd9883560fd89e6448b2b447302fe543040cd4f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}