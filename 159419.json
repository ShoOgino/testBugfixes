{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","commits":[{"id":"5da0b42730b6b99b31389ef94cb97384e83b9ede","date":1337107665,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClassSolrTestCase().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n  }\n\n","sourceOld":"  @AfterClass\n  public static void afterClassSolrTestCase() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b71270589e15ba8ded04828dc24cd7d9d5d7cdaf","date":1341697699,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    resetFactory();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22659e4b60cbbd3c13216360578240ddeca2d8b4","date":1341827398,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    resetFactory();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e7f30683f53928b2fce016e6430c9795caff22","date":1341839598,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    resetFactory();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"27540936a0520bb54b2173565e1d0b473602e47f","date":1342641911,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    resetFactory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    resetFactory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db8c3036d7a71259ececaf30a59e9543ddba4131","date":1348441120,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    System.clearProperty(\"jetty.testMode\");\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"49830162444b5448f722915f220148d9c4e3db51","date":1363047168,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    System.clearProperty(\"jetty.testMode\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0383cd09ec14aa4b39144430fd2bf7f866eb5ec","date":1363621241,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea7b027695d1003f32a2b5587762e9d51d0d60e8","date":1370029251,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f33ef255480d446ae7aa03506be85d0356a9850f","date":1371880818,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92a4da96826f502cf1a56a096929b37ce73e523a","date":1374584011,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b28f0928f1f17bf5af380ad693363268fbb7b91","date":1385935125,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","date":1391985588,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n    System.clearProperty(\"urlScheme\");\n    \n    if(sslConfig != null && sslConfig.useSsl) {\n      HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9dee311b2816356910363a8d15fc076caf6367eb","date":1392012517,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n    System.clearProperty(\"urlScheme\");\n    \n    if(isSSLMode()) {\n      HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n    }\n    // clean up static\n    sslConfig = null;\n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n    System.clearProperty(\"urlScheme\");\n    \n    if(sslConfig != null && sslConfig.useSsl) {\n      HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"236d6327bc94efef78508850865e102f2d707d9d","date":1392077671,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n    System.clearProperty(\"urlScheme\");\n    \n    if(isSSLMode()) {\n      HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n    }\n    // clean up static\n    sslConfig = null;\n    \n    // reset SSL\n    ALLOW_SSL = true;\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n    System.clearProperty(\"urlScheme\");\n    \n    if(isSSLMode()) {\n      HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n    }\n    // clean up static\n    sslConfig = null;\n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dd11e7960929492abc00f2eda654753532e95742","date":1393336203,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n    System.clearProperty(\"urlScheme\");\n    \n    if(isSSLMode()) {\n      HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n    }\n    // clean up static\n    sslConfig = null;\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n    System.clearProperty(\"urlScheme\");\n    \n    if(isSSLMode()) {\n      HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n    }\n    // clean up static\n    sslConfig = null;\n    \n    // reset SSL\n    ALLOW_SSL = true;\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8","date":1393532551,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n    System.clearProperty(\"urlScheme\");\n    \n    if(isSSLMode()) {\n      HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n    }\n    // clean up static\n    sslConfig = null;\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n    System.clearProperty(\"urlScheme\");\n    \n    if(isSSLMode()) {\n      HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n    }\n    // clean up static\n    sslConfig = null;\n    \n    // reset SSL\n    ALLOW_SSL = true;\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec4f25a2171450fd11fca6ecb7a809922c9ec694","date":1395865816,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      endTrackingZkClients();\n      resetFactory();\n      coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    } finally {\n      try {\n        if (dataDir != null && dataDir.exists() && !recurseDelete(dataDir)) {\n          String msg = \"!!!! WARNING: best effort to remove \"\n              + dataDir.getAbsolutePath() + \" FAILED !!!!!\";\n          if (RandomizedContext.current().getTargetClass()\n              .isAnnotationPresent(SuppressTempDirCleanUp.class)) {\n            System.err.println(msg);\n          } else {\n            fail(msg);\n          }\n        }\n      } finally {\n        dataDir = null;\n        System.clearProperty(\"jetty.testMode\");\n        System.clearProperty(\"tests.shardhandler.randomSeed\");\n        System.clearProperty(\"enable.update.log\");\n        System.clearProperty(\"useCompoundFile\");\n        System.clearProperty(\"urlScheme\");\n        \n        if (isSSLMode()) {\n          HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n        }\n        // clean up static\n        sslConfig = null;\n      }\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    deleteCore();\n    resetExceptionIgnores();\n    endTrackingSearchers();\n    endTrackingZkClients();\n    resetFactory();\n    coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    System.clearProperty(\"jetty.testMode\");\n    System.clearProperty(\"tests.shardhandler.randomSeed\");\n    System.clearProperty(\"enable.update.log\");\n    System.clearProperty(\"useCompoundFile\");\n    System.clearProperty(\"urlScheme\");\n    \n    if(isSSLMode()) {\n      HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n    }\n    // clean up static\n    sslConfig = null;\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164","bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      endTrackingZkClients();\n      resetFactory();\n      coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    } finally {\n      try {\n        boolean skip = Boolean.getBoolean(\"solr.test.leavedatadir\");\n        if (skip) {\n          System.err\n              .println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \"\n                  + dataDir.getAbsolutePath());\n        } else {\n          \n          if (dataDir != null && dataDir.exists() && !recurseDelete(dataDir)) {\n            String msg = \"!!!! WARNING: best effort to remove \"\n                + dataDir.getAbsolutePath() + \" FAILED !!!!!\";\n            if (RandomizedContext.current().getTargetClass()\n                .isAnnotationPresent(SuppressTempDirCleanUp.class)) {\n              System.err.println(msg);\n            } else {\n              fail(msg);\n            }\n          }\n        }\n      } finally {\n        dataDir = null;\n        System.clearProperty(\"jetty.testMode\");\n        System.clearProperty(\"tests.shardhandler.randomSeed\");\n        System.clearProperty(\"enable.update.log\");\n        System.clearProperty(\"useCompoundFile\");\n        System.clearProperty(\"urlScheme\");\n        \n        if (isSSLMode()) {\n          HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n        }\n        // clean up static\n        sslConfig = null;\n      }\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      endTrackingZkClients();\n      resetFactory();\n      coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    } finally {\n      try {\n        if (dataDir != null && dataDir.exists() && !recurseDelete(dataDir)) {\n          String msg = \"!!!! WARNING: best effort to remove \"\n              + dataDir.getAbsolutePath() + \" FAILED !!!!!\";\n          if (RandomizedContext.current().getTargetClass()\n              .isAnnotationPresent(SuppressTempDirCleanUp.class)) {\n            System.err.println(msg);\n          } else {\n            fail(msg);\n          }\n        }\n      } finally {\n        dataDir = null;\n        System.clearProperty(\"jetty.testMode\");\n        System.clearProperty(\"tests.shardhandler.randomSeed\");\n        System.clearProperty(\"enable.update.log\");\n        System.clearProperty(\"useCompoundFile\");\n        System.clearProperty(\"urlScheme\");\n        \n        if (isSSLMode()) {\n          HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n        }\n        // clean up static\n        sslConfig = null;\n      }\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      endTrackingZkClients();\n      resetFactory();\n      coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    } finally {\n      try {\n\n        if (LEAVE_TEST_TMP_DIR) {\n          System.err\n              .println(\"NOTE: per solr.test.leavetmpdir, the test tmp directory will not be removed: \"\n                  + rootTmpDir.getAbsolutePath());\n        } else {\n          // TODO: tmp files should already get cleaned up by the test framework, but\n          // we still do it here as well, so that we clean up as much as we can, even\n          // when a test is the SuppressTempDirCleanUp annotation\n          if (rootTmpDir != null && rootTmpDir.exists() && !recurseDelete(rootTmpDir)) {\n            String msg = \"!!!! WARNING: best effort to remove \"\n                + rootTmpDir.getAbsolutePath() + \" FAILED !!!!!\";\n            if (LEAVE_TEST_TMP_DIR_ANNOTATION) {\n              System.err.println(msg);\n            } else {\n              // TODO: do we want to fail here with this message? Is the test framework\n              // fail that should happen better?\n              fail(msg);\n            }\n          }\n        }\n      } finally {\n        initCoreDataDir = null;\n        System.clearProperty(\"jetty.testMode\");\n        System.clearProperty(\"tests.shardhandler.randomSeed\");\n        System.clearProperty(\"enable.update.log\");\n        System.clearProperty(\"useCompoundFile\");\n        System.clearProperty(\"urlScheme\");\n        \n        if (isSSLMode()) {\n          HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n        }\n        // clean up static\n        sslConfig = null;\n      }\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      endTrackingZkClients();\n      resetFactory();\n      coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    } finally {\n      try {\n        if (dataDir != null && dataDir.exists() && !recurseDelete(dataDir)) {\n          String msg = \"!!!! WARNING: best effort to remove \"\n              + dataDir.getAbsolutePath() + \" FAILED !!!!!\";\n          if (RandomizedContext.current().getTargetClass()\n              .isAnnotationPresent(SuppressTempDirCleanUp.class)) {\n            System.err.println(msg);\n          } else {\n            fail(msg);\n          }\n        }\n      } finally {\n        dataDir = null;\n        System.clearProperty(\"jetty.testMode\");\n        System.clearProperty(\"tests.shardhandler.randomSeed\");\n        System.clearProperty(\"enable.update.log\");\n        System.clearProperty(\"useCompoundFile\");\n        System.clearProperty(\"urlScheme\");\n        \n        if (isSSLMode()) {\n          HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n        }\n        // clean up static\n        sslConfig = null;\n      }\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"be04a7534a8a0679382542b62556ea5fba6cfb7f","date":1396613089,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      endTrackingZkClients();\n      resetFactory();\n      coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    } finally {\n      initCoreDataDir = null;\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      endTrackingZkClients();\n      resetFactory();\n      coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    } finally {\n      try {\n\n        if (LEAVE_TEST_TMP_DIR) {\n          System.err\n              .println(\"NOTE: per solr.test.leavetmpdir, the test tmp directory will not be removed: \"\n                  + rootTmpDir.getAbsolutePath());\n        } else {\n          // TODO: tmp files should already get cleaned up by the test framework, but\n          // we still do it here as well, so that we clean up as much as we can, even\n          // when a test is the SuppressTempDirCleanUp annotation\n          if (rootTmpDir != null && rootTmpDir.exists() && !recurseDelete(rootTmpDir)) {\n            String msg = \"!!!! WARNING: best effort to remove \"\n                + rootTmpDir.getAbsolutePath() + \" FAILED !!!!!\";\n            if (LEAVE_TEST_TMP_DIR_ANNOTATION) {\n              System.err.println(msg);\n            } else {\n              // TODO: do we want to fail here with this message? Is the test framework\n              // fail that should happen better?\n              fail(msg);\n            }\n          }\n        }\n      } finally {\n        initCoreDataDir = null;\n        System.clearProperty(\"jetty.testMode\");\n        System.clearProperty(\"tests.shardhandler.randomSeed\");\n        System.clearProperty(\"enable.update.log\");\n        System.clearProperty(\"useCompoundFile\");\n        System.clearProperty(\"urlScheme\");\n        \n        if (isSSLMode()) {\n          HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n        }\n        // clean up static\n        sslConfig = null;\n      }\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      endTrackingZkClients();\n      resetFactory();\n      coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    } finally {\n      initCoreDataDir = null;\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      endTrackingZkClients();\n      resetFactory();\n      coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    } finally {\n      try {\n        boolean skip = Boolean.getBoolean(\"solr.test.leavedatadir\");\n        if (skip) {\n          System.err\n              .println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \"\n                  + dataDir.getAbsolutePath());\n        } else {\n          \n          if (dataDir != null && dataDir.exists() && !recurseDelete(dataDir)) {\n            String msg = \"!!!! WARNING: best effort to remove \"\n                + dataDir.getAbsolutePath() + \" FAILED !!!!!\";\n            if (RandomizedContext.current().getTargetClass()\n                .isAnnotationPresent(SuppressTempDirCleanUp.class)) {\n              System.err.println(msg);\n            } else {\n              fail(msg);\n            }\n          }\n        }\n      } finally {\n        dataDir = null;\n        System.clearProperty(\"jetty.testMode\");\n        System.clearProperty(\"tests.shardhandler.randomSeed\");\n        System.clearProperty(\"enable.update.log\");\n        System.clearProperty(\"useCompoundFile\");\n        System.clearProperty(\"urlScheme\");\n        \n        if (isSSLMode()) {\n          HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n        }\n        // clean up static\n        sslConfig = null;\n      }\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0a9bd08fa75ea56615262bc147a18b8837cd7f11","date":1404759706,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      endTrackingZkClients();\n      resetFactory();\n      coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    } finally {\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      endTrackingZkClients();\n      resetFactory();\n      coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    } finally {\n      initCoreDataDir = null;\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6784d0cc613dc1ee97030eaaa5e0754edc22d164","date":1420824784,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      assertTrue(\"Some resources were not closed, shutdown, or released.\", ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty());\n      resetFactory();\n      coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    } finally {\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      endTrackingZkClients();\n      resetFactory();\n      coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    } finally {\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":["ec4f25a2171450fd11fca6ecb7a809922c9ec694"],"bugIntro":["70505a4870244b22d4d0f1a98951b08b197d5bb0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      assertTrue(\"Some resources were not closed, shutdown, or released.\", ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty());\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      assertTrue(\"Some resources were not closed, shutdown, or released.\", ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty());\n      resetFactory();\n      coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n    } finally {\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"70505a4870244b22d4d0f1a98951b08b197d5bb0","date":1424906348,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n        assertTrue(\"Some resources were not closed, shutdown, or released.\", ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty());\n      } else {\n        if (!ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty()) {\n          log.warn(\"Some resources were not closed, shutdown, or released. Remove the SuppressObjectReleaseTracker annotation to get more information on the fail.\");\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      assertTrue(\"Some resources were not closed, shutdown, or released.\", ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty());\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n        assertTrue(\"Some resources were not closed, shutdown, or released.\", ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty());\n      } else {\n        if (!ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty()) {\n          log.warn(\"Some resources were not closed, shutdown, or released. Remove the SuppressObjectReleaseTracker annotation to get more information on the fail.\");\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      assertTrue(\"Some resources were not closed, shutdown, or released.\", ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty());\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc499bd8067d298046baf241df80d75c3085e378","date":1432557761,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      String orr = ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty();\n      if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n        assertNull(orr, orr);\n      } else {\n        if (orr != null) {\n          log.warn(\"Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation.\");\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n        assertTrue(\"Some resources were not closed, shutdown, or released.\", ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty());\n      } else {\n        if (!ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty()) {\n          log.warn(\"Some resources were not closed, shutdown, or released. Remove the SuppressObjectReleaseTracker annotation to get more information on the fail.\");\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"17b96e14c03baace1d03ac0e7655d751818f9685","date":1432905489,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      \n      if (suiteFailureMarker.wasSuccessful()) {\n        // if the tests passed, make sure everything was closed / released\n        endTrackingSearchers();\n        String orr = ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty();\n        if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n          assertNull(orr, orr);\n        } else {\n          if (orr != null) {\n            log.warn(\n                \"Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation.\");\n          }\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      endTrackingSearchers();\n      String orr = ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty();\n      if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n        assertNull(orr, orr);\n      } else {\n        if (orr != null) {\n          log.warn(\"Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation.\");\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"536b47681314488eb94706248be6047a3f142841","date":1450372090,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      \n      if (suiteFailureMarker.wasSuccessful()) {\n        // if the tests passed, make sure everything was closed / released\n        if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n          String orr = ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty();\n          endTrackingSearchers(120, true);\n          assertNull(orr, orr);\n        } else {\n          endTrackingSearchers(15, false);\n          String orr = ObjectReleaseTracker.checkEmpty();\n          if (orr != null) {\n            log.warn(\n                \"Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation, trying to close them now.\");\n            ObjectReleaseTracker.tryClose();\n          }\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      ObjectReleaseTracker.clear();\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      \n      if (suiteFailureMarker.wasSuccessful()) {\n        // if the tests passed, make sure everything was closed / released\n        endTrackingSearchers();\n        String orr = ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty();\n        if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n          assertNull(orr, orr);\n        } else {\n          if (orr != null) {\n            log.warn(\n                \"Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation.\");\n          }\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2319d8709b8b355cbed6fd561e6c2535a76844b4","date":1450377720,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      \n      if (suiteFailureMarker.wasSuccessful()) {\n        // if the tests passed, make sure everything was closed / released\n        if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n          endTrackingSearchers(120, true);\n          String orr = ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty();\n          assertNull(orr, orr);\n        } else {\n          endTrackingSearchers(15, false);\n          String orr = ObjectReleaseTracker.checkEmpty();\n          if (orr != null) {\n            log.warn(\n                \"Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation, trying to close them now.\");\n            ObjectReleaseTracker.tryClose();\n          }\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      ObjectReleaseTracker.clear();\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      \n      if (suiteFailureMarker.wasSuccessful()) {\n        // if the tests passed, make sure everything was closed / released\n        if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n          String orr = ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty();\n          endTrackingSearchers(120, true);\n          assertNull(orr, orr);\n        } else {\n          endTrackingSearchers(15, false);\n          String orr = ObjectReleaseTracker.checkEmpty();\n          if (orr != null) {\n            log.warn(\n                \"Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation, trying to close them now.\");\n            ObjectReleaseTracker.tryClose();\n          }\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      ObjectReleaseTracker.clear();\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":["03eba9c92a74d53b4960d4098c9dd0f67b459468"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0a03f58459ebf98d638c41ef6699097f10cea8c3","date":1450379323,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      \n      if (suiteFailureMarker.wasSuccessful()) {\n        // if the tests passed, make sure everything was closed / released\n        if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n          endTrackingSearchers(120, false);\n          String orr = ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty();\n          assertNull(orr, orr);\n        } else {\n          endTrackingSearchers(15, false);\n          String orr = ObjectReleaseTracker.checkEmpty();\n          if (orr != null) {\n            log.warn(\n                \"Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation, trying to close them now.\");\n            ObjectReleaseTracker.tryClose();\n          }\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      ObjectReleaseTracker.clear();\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      \n      if (suiteFailureMarker.wasSuccessful()) {\n        // if the tests passed, make sure everything was closed / released\n        if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n          endTrackingSearchers(120, true);\n          String orr = ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty();\n          assertNull(orr, orr);\n        } else {\n          endTrackingSearchers(15, false);\n          String orr = ObjectReleaseTracker.checkEmpty();\n          if (orr != null) {\n            log.warn(\n                \"Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation, trying to close them now.\");\n            ObjectReleaseTracker.tryClose();\n          }\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      ObjectReleaseTracker.clear();\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"47b70a4528a72cd63da47289d2bf18cd2f710b45","date":1450465350,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      \n      if (suiteFailureMarker.wasSuccessful()) {\n        // if the tests passed, make sure everything was closed / released\n        if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n          endTrackingSearchers(120, false);\n          String orr = ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty();\n          assertNull(orr, orr);\n        } else {\n          endTrackingSearchers(15, false);\n          String orr = ObjectReleaseTracker.checkEmpty();\n          if (orr != null) {\n            log.warn(\n                \"Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation, trying to close them now.\");\n            ObjectReleaseTracker.tryClose();\n          }\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      ObjectReleaseTracker.clear();\n      TestInjection.reset();\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      \n      if (suiteFailureMarker.wasSuccessful()) {\n        // if the tests passed, make sure everything was closed / released\n        if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n          endTrackingSearchers(120, false);\n          String orr = ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty();\n          assertNull(orr, orr);\n        } else {\n          endTrackingSearchers(15, false);\n          String orr = ObjectReleaseTracker.checkEmpty();\n          if (orr != null) {\n            log.warn(\n                \"Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation, trying to close them now.\");\n            ObjectReleaseTracker.tryClose();\n          }\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      ObjectReleaseTracker.clear();\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"302d8fdf94f74714767c82c227021c197dee85a3","date":1458395639,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      \n      if (suiteFailureMarker.wasSuccessful()) {\n        // if the tests passed, make sure everything was closed / released\n        if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n          endTrackingSearchers(120, false);\n          String orr = ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty();\n          assertNull(orr, orr);\n        } else {\n          endTrackingSearchers(15, false);\n          String orr = ObjectReleaseTracker.checkEmpty();\n          if (orr != null) {\n            log.warn(\n                \"Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation, trying to close them now.\");\n            ObjectReleaseTracker.tryClose();\n          }\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      ObjectReleaseTracker.clear();\n      TestInjection.reset();\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n      testSolrHome = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      \n      if (suiteFailureMarker.wasSuccessful()) {\n        // if the tests passed, make sure everything was closed / released\n        if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n          endTrackingSearchers(120, false);\n          String orr = ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty();\n          assertNull(orr, orr);\n        } else {\n          endTrackingSearchers(15, false);\n          String orr = ObjectReleaseTracker.checkEmpty();\n          if (orr != null) {\n            log.warn(\n                \"Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation, trying to close them now.\");\n            ObjectReleaseTracker.tryClose();\n          }\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      ObjectReleaseTracker.clear();\n      TestInjection.reset();\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"859081acf00749f5dd462772c571d611d4a4d2db","date":1459527719,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      \n      if (suiteFailureMarker.wasSuccessful()) {\n        // if the tests passed, make sure everything was closed / released\n        if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n          endTrackingSearchers(120, false);\n          String orr = ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty();\n          assertNull(orr, orr);\n        } else {\n          endTrackingSearchers(15, false);\n          String orr = ObjectReleaseTracker.checkEmpty();\n          if (orr != null) {\n            log.warn(\n                \"Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation, trying to close them now.\");\n            ObjectReleaseTracker.tryClose();\n          }\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      ObjectReleaseTracker.clear();\n      TestInjection.reset();\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      HttpClientUtil.resetHttpClientBuilder();\n\n      // clean up static\n      sslConfig = null;\n      testSolrHome = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      \n      if (suiteFailureMarker.wasSuccessful()) {\n        // if the tests passed, make sure everything was closed / released\n        if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n          endTrackingSearchers(120, false);\n          String orr = ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty();\n          assertNull(orr, orr);\n        } else {\n          endTrackingSearchers(15, false);\n          String orr = ObjectReleaseTracker.checkEmpty();\n          if (orr != null) {\n            log.warn(\n                \"Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation, trying to close them now.\");\n            ObjectReleaseTracker.tryClose();\n          }\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      ObjectReleaseTracker.clear();\n      TestInjection.reset();\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      if (isSSLMode()) {\n        HttpClientUtil.setConfigurer(new HttpClientConfigurer());\n      }\n\n      // clean up static\n      sslConfig = null;\n      testSolrHome = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"80ef99614729c6d6fb7f8a9055a7a442efa87cf8","date":1464951274,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#teardownTestCases().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":"  @AfterClass\n  public static void teardownTestCases() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      \n      if (suiteFailureMarker.wasSuccessful()) {\n        // if the tests passed, make sure everything was closed / released\n        if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n          endTrackingSearchers(120, false);\n          String orr = ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty();\n          assertNull(orr, orr);\n        } else {\n          endTrackingSearchers(15, false);\n          String orr = ObjectReleaseTracker.checkEmpty();\n          if (orr != null) {\n            log.warn(\n                \"Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation, trying to close them now.\");\n            ObjectReleaseTracker.tryClose();\n          }\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      ObjectReleaseTracker.clear();\n      TestInjection.reset();\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      HttpClientUtil.resetHttpClientBuilder();\n\n      // clean up static\n      sslConfig = null;\n      testSolrHome = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      \n      if (suiteFailureMarker.wasSuccessful()) {\n        // if the tests passed, make sure everything was closed / released\n        if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n          endTrackingSearchers(120, false);\n          String orr = ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty();\n          assertNull(orr, orr);\n        } else {\n          endTrackingSearchers(15, false);\n          String orr = ObjectReleaseTracker.checkEmpty();\n          if (orr != null) {\n            log.warn(\n                \"Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation, trying to close them now.\");\n            ObjectReleaseTracker.tryClose();\n          }\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      ObjectReleaseTracker.clear();\n      TestInjection.reset();\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      HttpClientUtil.resetHttpClientBuilder();\n\n      // clean up static\n      sslConfig = null;\n      testSolrHome = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#afterClass().mjava","sourceNew":null,"sourceOld":"  @AfterClass\n  @SuppressWarnings(\"unused\")\n  private static void afterClass() throws Exception {\n    try {\n      deleteCore();\n      resetExceptionIgnores();\n      \n      if (suiteFailureMarker.wasSuccessful()) {\n        // if the tests passed, make sure everything was closed / released\n        if (!RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {\n          endTrackingSearchers(120, false);\n          String orr = ObjectReleaseTracker.clearObjectTrackerAndCheckEmpty();\n          assertNull(orr, orr);\n        } else {\n          endTrackingSearchers(15, false);\n          String orr = ObjectReleaseTracker.checkEmpty();\n          if (orr != null) {\n            log.warn(\n                \"Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation, trying to close them now.\");\n            ObjectReleaseTracker.tryClose();\n          }\n        }\n      }\n      resetFactory();\n      coreName = DEFAULT_TEST_CORENAME;\n    } finally {\n      ObjectReleaseTracker.clear();\n      TestInjection.reset();\n      initCoreDataDir = null;\n      System.clearProperty(\"zookeeper.forceSync\");\n      System.clearProperty(\"jetty.testMode\");\n      System.clearProperty(\"tests.shardhandler.randomSeed\");\n      System.clearProperty(\"enable.update.log\");\n      System.clearProperty(\"useCompoundFile\");\n      System.clearProperty(\"urlScheme\");\n      \n      HttpClientUtil.resetHttpClientBuilder();\n\n      // clean up static\n      sslConfig = null;\n      testSolrHome = null;\n    }\n    \n    IpTables.unblockAllPorts();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bc499bd8067d298046baf241df80d75c3085e378":["70505a4870244b22d4d0f1a98951b08b197d5bb0"],"3b28f0928f1f17bf5af380ad693363268fbb7b91":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"04e7f30683f53928b2fce016e6430c9795caff22":["5da0b42730b6b99b31389ef94cb97384e83b9ede","b71270589e15ba8ded04828dc24cd7d9d5d7cdaf"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["1416f9d09d016a6894cd17e1caac137dad2bba59","be04a7534a8a0679382542b62556ea5fba6cfb7f"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["ea7b027695d1003f32a2b5587762e9d51d0d60e8","f33ef255480d446ae7aa03506be85d0356a9850f"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"b71270589e15ba8ded04828dc24cd7d9d5d7cdaf":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"17b96e14c03baace1d03ac0e7655d751818f9685":["bc499bd8067d298046baf241df80d75c3085e378"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["92a4da96826f502cf1a56a096929b37ce73e523a"],"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8":["236d6327bc94efef78508850865e102f2d707d9d","dd11e7960929492abc00f2eda654753532e95742"],"0a03f58459ebf98d638c41ef6699097f10cea8c3":["2319d8709b8b355cbed6fd561e6c2535a76844b4"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39","70505a4870244b22d4d0f1a98951b08b197d5bb0"],"aba371508186796cc6151d8223a5b4e16d02e26e":["04e7f30683f53928b2fce016e6430c9795caff22","27540936a0520bb54b2173565e1d0b473602e47f"],"f33ef255480d446ae7aa03506be85d0356a9850f":["ea7b027695d1003f32a2b5587762e9d51d0d60e8"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["ec4f25a2171450fd11fca6ecb7a809922c9ec694"],"2319d8709b8b355cbed6fd561e6c2535a76844b4":["536b47681314488eb94706248be6047a3f142841"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22659e4b60cbbd3c13216360578240ddeca2d8b4":["5da0b42730b6b99b31389ef94cb97384e83b9ede","b71270589e15ba8ded04828dc24cd7d9d5d7cdaf"],"0a9bd08fa75ea56615262bc147a18b8837cd7f11":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["0a9bd08fa75ea56615262bc147a18b8837cd7f11"],"80ef99614729c6d6fb7f8a9055a7a442efa87cf8":["859081acf00749f5dd462772c571d611d4a4d2db"],"ec4f25a2171450fd11fca6ecb7a809922c9ec694":["dd11e7960929492abc00f2eda654753532e95742"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["37a0f60745e53927c4c876cfe5b5a58170f0646c","19275ba31e621f6da1b83bf13af75233876fd3d4"],"536b47681314488eb94706248be6047a3f142841":["17b96e14c03baace1d03ac0e7655d751818f9685"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["ec4f25a2171450fd11fca6ecb7a809922c9ec694"],"dd11e7960929492abc00f2eda654753532e95742":["236d6327bc94efef78508850865e102f2d707d9d"],"92a4da96826f502cf1a56a096929b37ce73e523a":["f33ef255480d446ae7aa03506be85d0356a9850f"],"9dee311b2816356910363a8d15fc076caf6367eb":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"],"db8c3036d7a71259ececaf30a59e9543ddba4131":["27540936a0520bb54b2173565e1d0b473602e47f"],"47b70a4528a72cd63da47289d2bf18cd2f710b45":["0a03f58459ebf98d638c41ef6699097f10cea8c3"],"ea7b027695d1003f32a2b5587762e9d51d0d60e8":["d0383cd09ec14aa4b39144430fd2bf7f866eb5ec"],"be04a7534a8a0679382542b62556ea5fba6cfb7f":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"d0383cd09ec14aa4b39144430fd2bf7f866eb5ec":["49830162444b5448f722915f220148d9c4e3db51"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["859081acf00749f5dd462772c571d611d4a4d2db","80ef99614729c6d6fb7f8a9055a7a442efa87cf8"],"49830162444b5448f722915f220148d9c4e3db51":["db8c3036d7a71259ececaf30a59e9543ddba4131"],"859081acf00749f5dd462772c571d611d4a4d2db":["302d8fdf94f74714767c82c227021c197dee85a3"],"236d6327bc94efef78508850865e102f2d707d9d":["9dee311b2816356910363a8d15fc076caf6367eb"],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["3b28f0928f1f17bf5af380ad693363268fbb7b91"],"70505a4870244b22d4d0f1a98951b08b197d5bb0":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["5da0b42730b6b99b31389ef94cb97384e83b9ede","27540936a0520bb54b2173565e1d0b473602e47f"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["19275ba31e621f6da1b83bf13af75233876fd3d4","3b28f0928f1f17bf5af380ad693363268fbb7b91"],"27540936a0520bb54b2173565e1d0b473602e47f":["b71270589e15ba8ded04828dc24cd7d9d5d7cdaf"],"302d8fdf94f74714767c82c227021c197dee85a3":["47b70a4528a72cd63da47289d2bf18cd2f710b45"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["80ef99614729c6d6fb7f8a9055a7a442efa87cf8"]},"commit2Childs":{"bc499bd8067d298046baf241df80d75c3085e378":["17b96e14c03baace1d03ac0e7655d751818f9685"],"3b28f0928f1f17bf5af380ad693363268fbb7b91":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"04e7f30683f53928b2fce016e6430c9795caff22":["aba371508186796cc6151d8223a5b4e16d02e26e"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["0a9bd08fa75ea56615262bc147a18b8837cd7f11"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"b71270589e15ba8ded04828dc24cd7d9d5d7cdaf":["04e7f30683f53928b2fce016e6430c9795caff22","22659e4b60cbbd3c13216360578240ddeca2d8b4","27540936a0520bb54b2173565e1d0b473602e47f"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","70505a4870244b22d4d0f1a98951b08b197d5bb0"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["3b28f0928f1f17bf5af380ad693363268fbb7b91","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"17b96e14c03baace1d03ac0e7655d751818f9685":["536b47681314488eb94706248be6047a3f142841"],"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8":[],"0a03f58459ebf98d638c41ef6699097f10cea8c3":["47b70a4528a72cd63da47289d2bf18cd2f710b45"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"f33ef255480d446ae7aa03506be85d0356a9850f":["37a0f60745e53927c4c876cfe5b5a58170f0646c","92a4da96826f502cf1a56a096929b37ce73e523a"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["04e7f30683f53928b2fce016e6430c9795caff22","b71270589e15ba8ded04828dc24cd7d9d5d7cdaf","22659e4b60cbbd3c13216360578240ddeca2d8b4","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2319d8709b8b355cbed6fd561e6c2535a76844b4":["0a03f58459ebf98d638c41ef6699097f10cea8c3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"22659e4b60cbbd3c13216360578240ddeca2d8b4":[],"0a9bd08fa75ea56615262bc147a18b8837cd7f11":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"ec4f25a2171450fd11fca6ecb7a809922c9ec694":["1416f9d09d016a6894cd17e1caac137dad2bba59","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"80ef99614729c6d6fb7f8a9055a7a442efa87cf8":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"536b47681314488eb94706248be6047a3f142841":["2319d8709b8b355cbed6fd561e6c2535a76844b4"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["be04a7534a8a0679382542b62556ea5fba6cfb7f"],"dd11e7960929492abc00f2eda654753532e95742":["13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8","ec4f25a2171450fd11fca6ecb7a809922c9ec694"],"92a4da96826f502cf1a56a096929b37ce73e523a":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"9dee311b2816356910363a8d15fc076caf6367eb":["236d6327bc94efef78508850865e102f2d707d9d"],"db8c3036d7a71259ececaf30a59e9543ddba4131":["49830162444b5448f722915f220148d9c4e3db51"],"47b70a4528a72cd63da47289d2bf18cd2f710b45":["302d8fdf94f74714767c82c227021c197dee85a3"],"be04a7534a8a0679382542b62556ea5fba6cfb7f":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"ea7b027695d1003f32a2b5587762e9d51d0d60e8":["37a0f60745e53927c4c876cfe5b5a58170f0646c","f33ef255480d446ae7aa03506be85d0356a9850f"],"d0383cd09ec14aa4b39144430fd2bf7f866eb5ec":["ea7b027695d1003f32a2b5587762e9d51d0d60e8"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"49830162444b5448f722915f220148d9c4e3db51":["d0383cd09ec14aa4b39144430fd2bf7f866eb5ec"],"859081acf00749f5dd462772c571d611d4a4d2db":["80ef99614729c6d6fb7f8a9055a7a442efa87cf8","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"236d6327bc94efef78508850865e102f2d707d9d":["13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8","dd11e7960929492abc00f2eda654753532e95742"],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["9dee311b2816356910363a8d15fc076caf6367eb"],"70505a4870244b22d4d0f1a98951b08b197d5bb0":["bc499bd8067d298046baf241df80d75c3085e378","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"27540936a0520bb54b2173565e1d0b473602e47f":["aba371508186796cc6151d8223a5b4e16d02e26e","db8c3036d7a71259ececaf30a59e9543ddba4131","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"302d8fdf94f74714767c82c227021c197dee85a3":["859081acf00749f5dd462772c571d611d4a4d2db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","aba371508186796cc6151d8223a5b4e16d02e26e","22659e4b60cbbd3c13216360578240ddeca2d8b4","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","fe33227f6805edab2036cbb80645cc4e2d1fa424","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}