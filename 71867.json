{"path":"src/java/org/apache/solr/core/SolrCore#getSearcher().mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#getSearcher().mjava","pathOld":"/dev/null","sourceNew":"  public RefCounted<SolrIndexSearcher> getSearcher() {\n    try {\n      return getSearcher(false,true,null);\n    } catch (IOException e) {\n      SolrException.log(log,null,e);\n      return null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b9ee90cb9c9196a70b1d7cc96cca56fdabaad263","date":1216648894,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#getSearcher().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#getSearcher().mjava","sourceNew":"  /**\n  * Return a registered {@link RefCounted}&lt;{@link SolrIndexSearcher}&gt; with\n  * the reference count incremented.  It <b>must</b> be decremented when no longer needed.\n  * This method should not be called from SolrCoreAware.inform() since it can result\n  * in a deadlock if useColdSearcher==false. \n  */\n  public RefCounted<SolrIndexSearcher> getSearcher() {\n    try {\n      return getSearcher(false,true,null);\n    } catch (IOException e) {\n      SolrException.log(log,null,e);\n      return null;\n    }\n  }\n\n","sourceOld":"  public RefCounted<SolrIndexSearcher> getSearcher() {\n    try {\n      return getSearcher(false,true,null);\n    } catch (IOException e) {\n      SolrException.log(log,null,e);\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4b3197d0fe1ac65ebe82fa0df479a3630c10b7d6","date":1225312082,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#getSearcher().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#getSearcher().mjava","sourceNew":"  /**\n  * Return a registered {@link RefCounted}&lt;{@link SolrIndexSearcher}&gt; with\n  * the reference count incremented.  It <b>must</b> be decremented when no longer needed.\n  * This method should not be called from SolrCoreAware.inform() since it can result\n  * in a deadlock if useColdSearcher==false.\n  * If handling a normal request, the searcher should be obtained from\n   * {@link org.apache.solr.request.SolrQueryRequest#getSearcher()} instead.\n  */\n  public RefCounted<SolrIndexSearcher> getSearcher() {\n    try {\n      return getSearcher(false,true,null);\n    } catch (IOException e) {\n      SolrException.log(log,null,e);\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n  * Return a registered {@link RefCounted}&lt;{@link SolrIndexSearcher}&gt; with\n  * the reference count incremented.  It <b>must</b> be decremented when no longer needed.\n  * This method should not be called from SolrCoreAware.inform() since it can result\n  * in a deadlock if useColdSearcher==false. \n  */\n  public RefCounted<SolrIndexSearcher> getSearcher() {\n    try {\n      return getSearcher(false,true,null);\n    } catch (IOException e) {\n      SolrException.log(log,null,e);\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#getSearcher().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#getSearcher().mjava","sourceNew":"  /**\n  * Return a registered {@link RefCounted}&lt;{@link SolrIndexSearcher}&gt; with\n  * the reference count incremented.  It <b>must</b> be decremented when no longer needed.\n  * This method should not be called from SolrCoreAware.inform() since it can result\n  * in a deadlock if useColdSearcher==false.\n  * If handling a normal request, the searcher should be obtained from\n   * {@link org.apache.solr.request.SolrQueryRequest#getSearcher()} instead.\n  */\n  public RefCounted<SolrIndexSearcher> getSearcher() {\n    try {\n      return getSearcher(false,true,null);\n    } catch (IOException e) {\n      SolrException.log(log,null,e);\n      return null;\n    }\n  }\n\n","sourceOld":"  /**\n  * Return a registered {@link RefCounted}&lt;{@link SolrIndexSearcher}&gt; with\n  * the reference count incremented.  It <b>must</b> be decremented when no longer needed.\n  * This method should not be called from SolrCoreAware.inform() since it can result\n  * in a deadlock if useColdSearcher==false.\n  * If handling a normal request, the searcher should be obtained from\n   * {@link org.apache.solr.request.SolrQueryRequest#getSearcher()} instead.\n  */\n  public RefCounted<SolrIndexSearcher> getSearcher() {\n    try {\n      return getSearcher(false,true,null);\n    } catch (IOException e) {\n      SolrException.log(log,null,e);\n      return null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"4b3197d0fe1ac65ebe82fa0df479a3630c10b7d6":["b9ee90cb9c9196a70b1d7cc96cca56fdabaad263"],"ad94625fb8d088209f46650c8097196fec67f00c":["4b3197d0fe1ac65ebe82fa0df479a3630c10b7d6"],"b9ee90cb9c9196a70b1d7cc96cca56fdabaad263":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["b9ee90cb9c9196a70b1d7cc96cca56fdabaad263"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4b3197d0fe1ac65ebe82fa0df479a3630c10b7d6":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"b9ee90cb9c9196a70b1d7cc96cca56fdabaad263":["4b3197d0fe1ac65ebe82fa0df479a3630c10b7d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}