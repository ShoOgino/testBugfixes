{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/CoresVariable#postValidate(Condition).mjava","commits":[{"id":"cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb","date":1533364463,"type":0,"author":"noble","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/CoresVariable#postValidate(Condition).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String postValidate(Condition condition) {\n    Condition nodeTag = condition.getClause().getTag();\n    if (nodeTag.varType != Type.NODE) return \"'cores' attribute can only be used with 'node' attribute\";\n    if (condition.computedType == ComputedType.EQUAL) {\n      if (nodeTag.name.equals(\"node\") && (nodeTag.op == Operand.WILDCARD || nodeTag.op == Operand.IN)) {\n        return null;\n      } else {\n        return \"cores: '#EQUAL' can be used only with node: '#ANY', node :[....]\";\n      }\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29944148cc0dc98687ff45e8a1eaa937a9bcf9ff","date":1534173061,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/CoresVariable#postValidate(Condition).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/CoresVariable#postValidate(Condition).mjava","sourceNew":"  @Override\n  public String postValidate(Condition condition) {\n    Condition nodeTag = condition.getClause().getTag();\n    if (nodeTag.varType != Type.NODE) return \"'cores' attribute can only be used with 'node' attribute\";\n    if (condition.computedType == ComputedType.EQUAL) {\n      if (nodeTag.name.equals(\"node\") && (nodeTag.op == Operand.WILDCARD || nodeTag.op == Operand.IN)) {\n        return null;\n      } else {\n        return \"cores: '#EQUAL' can be used only with node: '#ANY', node :[....]\";\n      }\n    } else {\n      return ReplicaVariable.checkNonEqualOp(condition);\n    }\n  }\n\n","sourceOld":"  @Override\n  public String postValidate(Condition condition) {\n    Condition nodeTag = condition.getClause().getTag();\n    if (nodeTag.varType != Type.NODE) return \"'cores' attribute can only be used with 'node' attribute\";\n    if (condition.computedType == ComputedType.EQUAL) {\n      if (nodeTag.name.equals(\"node\") && (nodeTag.op == Operand.WILDCARD || nodeTag.op == Operand.IN)) {\n        return null;\n      } else {\n        return \"cores: '#EQUAL' can be used only with node: '#ANY', node :[....]\";\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/CoresVariable#postValidate(Condition).mjava","sourceNew":null,"sourceOld":"  @Override\n  public String postValidate(Condition condition) {\n    Condition nodeTag = condition.getClause().getTag();\n    if (nodeTag.varType != Type.NODE) return \"'cores' attribute can only be used with 'node' attribute\";\n    if (condition.computedType == ComputedType.EQUAL) {\n      if (nodeTag.name.equals(\"node\") && (nodeTag.op == Operand.WILDCARD || nodeTag.op == Operand.IN)) {\n        return null;\n      } else {\n        return \"cores: '#EQUAL' can be used only with node: '#ANY', node :[....]\";\n      }\n    } else {\n      return ReplicaVariable.checkNonEqualOp(condition);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["29944148cc0dc98687ff45e8a1eaa937a9bcf9ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29944148cc0dc98687ff45e8a1eaa937a9bcf9ff":["cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb"],"cb4df98176b6dd0ae6ceba71eaa59c9bcb8fe2eb":["29944148cc0dc98687ff45e8a1eaa937a9bcf9ff"],"29944148cc0dc98687ff45e8a1eaa937a9bcf9ff":["3f504512a03d978990cbff30db0522b354e846db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}