{"path":"lucene/src/java/org/apache/lucene/util/OpenBitSet#expandingWordNum(long).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/OpenBitSet#expandingWordNum(long).mjava","pathOld":"src/java/org/apache/lucene/util/OpenBitSet#expandingWordNum(long).mjava","sourceNew":"  protected int expandingWordNum(long index) {\n    int wordNum = (int)(index >> 6);\n    if (wordNum>=wlen) {\n      ensureCapacity(index+1);\n      wlen = wordNum+1;\n    }\n    return wordNum;\n  }\n\n","sourceOld":"  protected int expandingWordNum(long index) {\n    int wordNum = (int)(index >> 6);\n    if (wordNum>=wlen) {\n      ensureCapacity(index+1);\n      wlen = wordNum+1;\n    }\n    return wordNum;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a59af0bca17674999c8756b4d68dcbf25a88a3b2","date":1306257838,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/OpenBitSet#expandingWordNum(long).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/OpenBitSet#expandingWordNum(long).mjava","sourceNew":"  protected int expandingWordNum(long index) {\n    int wordNum = (int)(index >> 6);\n    if (wordNum>=wlen) {\n      ensureCapacity(index+1);\n      wlen = wordNum+1;\n    }\n    numBits = Math.max(numBits, index+1);\n    return wordNum;\n  }\n\n","sourceOld":"  protected int expandingWordNum(long index) {\n    int wordNum = (int)(index >> 6);\n    if (wordNum>=wlen) {\n      ensureCapacity(index+1);\n      wlen = wordNum+1;\n    }\n    return wordNum;\n  }\n\n","bugFix":null,"bugIntro":["5a15bb9fb95442b47e2fd6fe5a1118cbff684b63"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5a15bb9fb95442b47e2fd6fe5a1118cbff684b63","date":1306267559,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/OpenBitSet#expandingWordNum(long).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/OpenBitSet#expandingWordNum(long).mjava","sourceNew":"  protected int expandingWordNum(long index) {\n    int wordNum = (int)(index >> 6);\n    if (wordNum>=wlen) {\n      ensureCapacity(index+1);\n      wlen = wordNum+1;\n    }\n    assert (numBits = Math.max(numBits, index+1)) >= 0;\n    return wordNum;\n  }\n\n","sourceOld":"  protected int expandingWordNum(long index) {\n    int wordNum = (int)(index >> 6);\n    if (wordNum>=wlen) {\n      ensureCapacity(index+1);\n      wlen = wordNum+1;\n    }\n    numBits = Math.max(numBits, index+1);\n    return wordNum;\n  }\n\n","bugFix":["a59af0bca17674999c8756b4d68dcbf25a88a3b2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/OpenBitSet#expandingWordNum(long).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/OpenBitSet#expandingWordNum(long).mjava","sourceNew":"  protected int expandingWordNum(long index) {\n    int wordNum = (int)(index >> 6);\n    if (wordNum>=wlen) {\n      ensureCapacity(index+1);\n      wlen = wordNum+1;\n    }\n    assert (numBits = Math.max(numBits, index+1)) >= 0;\n    return wordNum;\n  }\n\n","sourceOld":"  protected int expandingWordNum(long index) {\n    int wordNum = (int)(index >> 6);\n    if (wordNum>=wlen) {\n      ensureCapacity(index+1);\n      wlen = wordNum+1;\n    }\n    return wordNum;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/OpenBitSet#expandingWordNum(long).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/OpenBitSet#expandingWordNum(long).mjava","sourceNew":"  protected int expandingWordNum(long index) {\n    int wordNum = (int)(index >> 6);\n    if (wordNum>=wlen) {\n      ensureCapacity(index+1);\n      wlen = wordNum+1;\n    }\n    assert (numBits = Math.max(numBits, index+1)) >= 0;\n    return wordNum;\n  }\n\n","sourceOld":"  protected int expandingWordNum(long index) {\n    int wordNum = (int)(index >> 6);\n    if (wordNum>=wlen) {\n      ensureCapacity(index+1);\n      wlen = wordNum+1;\n    }\n    return wordNum;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OpenBitSet#expandingWordNum(long).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/OpenBitSet#expandingWordNum(long).mjava","sourceNew":"  protected int expandingWordNum(long index) {\n    int wordNum = (int)(index >> 6);\n    if (wordNum>=wlen) {\n      ensureCapacity(index+1);\n      wlen = wordNum+1;\n    }\n    assert (numBits = Math.max(numBits, index+1)) >= 0;\n    return wordNum;\n  }\n\n","sourceOld":"  protected int expandingWordNum(long index) {\n    int wordNum = (int)(index >> 6);\n    if (wordNum>=wlen) {\n      ensureCapacity(index+1);\n      wlen = wordNum+1;\n    }\n    assert (numBits = Math.max(numBits, index+1)) >= 0;\n    return wordNum;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a59af0bca17674999c8756b4d68dcbf25a88a3b2":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["9454a6510e2db155fb01faa5c049b06ece95fab9","5a15bb9fb95442b47e2fd6fe5a1118cbff684b63"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5a15bb9fb95442b47e2fd6fe5a1118cbff684b63"],"5a15bb9fb95442b47e2fd6fe5a1118cbff684b63":["a59af0bca17674999c8756b4d68dcbf25a88a3b2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["9454a6510e2db155fb01faa5c049b06ece95fab9","5a15bb9fb95442b47e2fd6fe5a1118cbff684b63"]},"commit2Childs":{"a59af0bca17674999c8756b4d68dcbf25a88a3b2":["5a15bb9fb95442b47e2fd6fe5a1118cbff684b63"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5a15bb9fb95442b47e2fd6fe5a1118cbff684b63":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","3a119bbc8703c10faa329ec201c654b3a35a1e3e","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a59af0bca17674999c8756b4d68dcbf25a88a3b2","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}