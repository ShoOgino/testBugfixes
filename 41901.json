{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/beans/DocumentObjectBinder.DocField#get(Object).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/beans/DocumentObjectBinder.DocField#get(Object).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/beans/DocumentObjectBinder.DocField#get(Object).mjava","sourceNew":"    public Object get( final Object obj )\n    {\n      if (field != null) {\n        try {\n          return field.get(obj);\n        } \n        catch (Exception e) {        \n          throw new RuntimeException(\"Exception while getting value: \" + field, e);\n        }\n      }\n      else if (getter == null) {\n        throw new RuntimeException( \"Missing getter for field: \"+name+\" -- You can only call the 'get' for fields that have a field of 'get' method\" );\n      }\n      \n      try {\n        return getter.invoke( obj, (Object[])null );\n      } \n      catch (Exception e) {        \n        throw new RuntimeException(\"Exception while getting value: \" + getter, e);\n      }\n    }\n\n","sourceOld":"    public Object get( final Object obj )\n    {\n      if (field != null) {\n        try {\n          return field.get(obj);\n        } \n        catch (Exception e) {        \n          throw new RuntimeException(\"Exception while getting value: \" + field, e);\n        }\n      }\n      else if (getter == null) {\n        throw new RuntimeException( \"Missing getter for field: \"+name+\" -- You can only call the 'get' for fields that have a field of 'get' method\" );\n      }\n      \n      try {\n        return getter.invoke( obj, (Object[])null );\n      } \n      catch (Exception e) {        \n        throw new RuntimeException(\"Exception while getting value: \" + getter, e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/beans/DocumentObjectBinder.DocField#get(Object).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/beans/DocumentObjectBinder.DocField#get(Object).mjava","sourceNew":"    public Object get( final Object obj )\n    {\n      if (field != null) {\n        try {\n          return field.get(obj);\n        } \n        catch (Exception e) {        \n          throw new RuntimeException(\"Exception while getting value: \" + field, e);\n        }\n      }\n      else if (getter == null) {\n        throw new RuntimeException( \"Missing getter for field: \"+name+\" -- You can only call the 'get' for fields that have a field of 'get' method\" );\n      }\n      \n      try {\n        return getter.invoke( obj, (Object[])null );\n      } \n      catch (Exception e) {        \n        throw new RuntimeException(\"Exception while getting value: \" + getter, e);\n      }\n    }\n\n","sourceOld":"    public Object get( final Object obj )\n    {\n      if (field != null) {\n        try {\n          return field.get(obj);\n        } \n        catch (Exception e) {        \n          throw new RuntimeException(\"Exception while getting value: \" + field, e);\n        }\n      }\n      else if (getter == null) {\n        throw new RuntimeException( \"Missing getter for field: \"+name+\" -- You can only call the 'get' for fields that have a field of 'get' method\" );\n      }\n      \n      try {\n        return getter.invoke( obj, (Object[])null );\n      } \n      catch (Exception e) {        \n        throw new RuntimeException(\"Exception while getting value: \" + getter, e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/beans/DocumentObjectBinder.DocField#get(Object).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/beans/DocumentObjectBinder.DocField#get(Object).mjava","sourceNew":"    public Object get( final Object obj )\n    {\n      if (field != null) {\n        try {\n          return field.get(obj);\n        } \n        catch (Exception e) {        \n          throw new RuntimeException(\"Exception while getting value: \" + field, e);\n        }\n      }\n      else if (getter == null) {\n        throw new RuntimeException( \"Missing getter for field: \"+name+\" -- You can only call the 'get' for fields that have a field of 'get' method\" );\n      }\n      \n      try {\n        return getter.invoke( obj, (Object[])null );\n      } \n      catch (Exception e) {        \n        throw new RuntimeException(\"Exception while getting value: \" + getter, e);\n      }\n    }\n\n","sourceOld":"    public Object get( final Object obj )\n    {\n      if (field != null) {\n        try {\n          return field.get(obj);\n        } \n        catch (Exception e) {        \n          throw new RuntimeException(\"Exception while getting value: \" + field, e);\n        }\n      }\n      else if (getter == null) {\n        throw new RuntimeException( \"Missing getter for field: \"+name+\" -- You can only call the 'get' for fields that have a field of 'get' method\" );\n      }\n      \n      try {\n        return getter.invoke( obj, (Object[])null );\n      } \n      catch (Exception e) {        \n        throw new RuntimeException(\"Exception while getting value: \" + getter, e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7622cbc3a8e5ea4d57a67d99978449606ec484bc","date":1313559942,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/beans/DocumentObjectBinder.DocField#get(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/beans/DocumentObjectBinder.DocField#get(Object).mjava","sourceNew":"    public Object get(final Object obj) {\n      if (field != null) {\n        try {\n          return field.get(obj);\n        } catch (Exception e) {\n          throw new BindingException(\"Exception while getting value: \" + field, e);\n        }\n      } else if (getter == null) {\n        throw new BindingException(\"Missing getter for field: \" + name + \" -- You can only call the 'get' for fields that have a field of 'get' method\");\n      }\n\n      try {\n        return getter.invoke(obj, (Object[]) null);\n      } catch (Exception e) {\n        throw new BindingException(\"Exception while getting value: \" + getter, e);\n      }\n    }\n\n","sourceOld":"    public Object get( final Object obj )\n    {\n      if (field != null) {\n        try {\n          return field.get(obj);\n        } \n        catch (Exception e) {        \n          throw new RuntimeException(\"Exception while getting value: \" + field, e);\n        }\n      }\n      else if (getter == null) {\n        throw new RuntimeException( \"Missing getter for field: \"+name+\" -- You can only call the 'get' for fields that have a field of 'get' method\" );\n      }\n      \n      try {\n        return getter.invoke( obj, (Object[])null );\n      } \n      catch (Exception e) {        \n        throw new RuntimeException(\"Exception while getting value: \" + getter, e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7622cbc3a8e5ea4d57a67d99978449606ec484bc":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7622cbc3a8e5ea4d57a67d99978449606ec484bc"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["7622cbc3a8e5ea4d57a67d99978449606ec484bc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7622cbc3a8e5ea4d57a67d99978449606ec484bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}