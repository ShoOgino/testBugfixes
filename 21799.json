{"path":"lucene/core/src/test/org/apache/lucene/search/TestBooleanCoord#testDisjunction1OutOf3MissingOne().mjava","commits":[{"id":"bea7ece5e5fd173fc80d6cbdad8a4a03ee9a8d89","date":1400688006,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanCoord#testDisjunction1OutOf3MissingOne().mjava","pathOld":"/dev/null","sourceNew":"  public void testDisjunction1OutOf3MissingOne() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(term(\"A\"), BooleanClause.Occur.SHOULD);\n    bq.add(term(\"1\"), BooleanClause.Occur.SHOULD);\n    bq.add(term(\"Z\"), BooleanClause.Occur.SHOULD);\n    assertScore(1 * 1/3f, bq);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a656b32c3aa151037a8c52e9b134acc3cbf482bc","date":1400688195,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanCoord#testDisjunction1OutOf3MissingOne().mjava","pathOld":"/dev/null","sourceNew":"  public void testDisjunction1OutOf3MissingOne() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(term(\"A\"), BooleanClause.Occur.SHOULD);\n    bq.add(term(\"1\"), BooleanClause.Occur.SHOULD);\n    bq.add(term(\"Z\"), BooleanClause.Occur.SHOULD);\n    assertScore(1 * 1/3f, bq);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanCoord#testDisjunction1OutOf3MissingOne().mjava","pathOld":"/dev/null","sourceNew":"  public void testDisjunction1OutOf3MissingOne() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(term(\"A\"), BooleanClause.Occur.SHOULD);\n    bq.add(term(\"1\"), BooleanClause.Occur.SHOULD);\n    bq.add(term(\"Z\"), BooleanClause.Occur.SHOULD);\n    assertScore(1 * 1/3f, bq);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanCoord#testDisjunction1OutOf3MissingOne().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanCoord#testDisjunction1OutOf3MissingOne().mjava","sourceNew":"  public void testDisjunction1OutOf3MissingOne() throws Exception {\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(term(\"A\"), BooleanClause.Occur.SHOULD);\n    bq.add(term(\"1\"), BooleanClause.Occur.SHOULD);\n    bq.add(term(\"Z\"), BooleanClause.Occur.SHOULD);\n    assertScore(1 * 1/3f, bq.build());\n  }\n\n","sourceOld":"  public void testDisjunction1OutOf3MissingOne() throws Exception {\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(term(\"A\"), BooleanClause.Occur.SHOULD);\n    bq.add(term(\"1\"), BooleanClause.Occur.SHOULD);\n    bq.add(term(\"Z\"), BooleanClause.Occur.SHOULD);\n    assertScore(1 * 1/3f, bq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e08fa910967c3b157a2b59ec75dfac40515af29","date":1435191580,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanCoord#testDisjunction1OutOf3MissingOne().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanCoord#testDisjunction1OutOf3MissingOne().mjava","sourceNew":"  public void testDisjunction1OutOf3MissingOne() throws Exception {\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(term(\"A\"), BooleanClause.Occur.SHOULD);\n    bq.add(term(\"1\"), BooleanClause.Occur.SHOULD);\n    bq.add(term(\"Z\"), BooleanClause.Occur.SHOULD);\n    assertScore(1 * 1/(3f + 1), bq.build());\n  }\n\n","sourceOld":"  public void testDisjunction1OutOf3MissingOne() throws Exception {\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(term(\"A\"), BooleanClause.Occur.SHOULD);\n    bq.add(term(\"1\"), BooleanClause.Occur.SHOULD);\n    bq.add(term(\"Z\"), BooleanClause.Occur.SHOULD);\n    assertScore(1 * 1/3f, bq.build());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8a0e442f7b61f811680273b25da95994a724466","date":1467878549,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanCoord#testDisjunction1OutOf3MissingOne().mjava","sourceNew":null,"sourceOld":"  public void testDisjunction1OutOf3MissingOne() throws Exception {\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(term(\"A\"), BooleanClause.Occur.SHOULD);\n    bq.add(term(\"1\"), BooleanClause.Occur.SHOULD);\n    bq.add(term(\"Z\"), BooleanClause.Occur.SHOULD);\n    assertScore(1 * 1/(3f + 1), bq.build());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanCoord#testDisjunction1OutOf3MissingOne().mjava","sourceNew":null,"sourceOld":"  public void testDisjunction1OutOf3MissingOne() throws Exception {\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(term(\"A\"), BooleanClause.Occur.SHOULD);\n    bq.add(term(\"1\"), BooleanClause.Occur.SHOULD);\n    bq.add(term(\"Z\"), BooleanClause.Occur.SHOULD);\n    assertScore(1 * 1/(3f + 1), bq.build());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2e08fa910967c3b157a2b59ec75dfac40515af29":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["bea7ece5e5fd173fc80d6cbdad8a4a03ee9a8d89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a656b32c3aa151037a8c52e9b134acc3cbf482bc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bea7ece5e5fd173fc80d6cbdad8a4a03ee9a8d89"],"c8a0e442f7b61f811680273b25da95994a724466":["2e08fa910967c3b157a2b59ec75dfac40515af29"],"b7605579001505896d48b07160075a5c8b8e128e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bea7ece5e5fd173fc80d6cbdad8a4a03ee9a8d89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2e08fa910967c3b157a2b59ec75dfac40515af29","c8a0e442f7b61f811680273b25da95994a724466"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c8a0e442f7b61f811680273b25da95994a724466"],"bea7ece5e5fd173fc80d6cbdad8a4a03ee9a8d89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"2e08fa910967c3b157a2b59ec75dfac40515af29":["c8a0e442f7b61f811680273b25da95994a724466","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["2e08fa910967c3b157a2b59ec75dfac40515af29"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a656b32c3aa151037a8c52e9b134acc3cbf482bc","b7605579001505896d48b07160075a5c8b8e128e","bea7ece5e5fd173fc80d6cbdad8a4a03ee9a8d89"],"a656b32c3aa151037a8c52e9b134acc3cbf482bc":[],"c8a0e442f7b61f811680273b25da95994a724466":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b7605579001505896d48b07160075a5c8b8e128e":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"bea7ece5e5fd173fc80d6cbdad8a4a03ee9a8d89":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747","a656b32c3aa151037a8c52e9b134acc3cbf482bc","b7605579001505896d48b07160075a5c8b8e128e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a656b32c3aa151037a8c52e9b134acc3cbf482bc","b7605579001505896d48b07160075a5c8b8e128e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}