{"path":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/WordlistLoader#makeWordTable(String[],int).mjava","commits":[{"id":"a684698d2d785b642cc0dda9c81091abc2bd90b5","date":1078844108,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/WordlistLoader#makeWordTable(String[],int).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Builds the wordlist table.\n\t *\n\t * @param words Word that where read\n\t * @param length Amount of words that where read into <tt>words</tt>\n\t */\n\tprivate static Hashtable makeWordTable( String[] words, int length )\n\t{\n\t\tHashtable table = new Hashtable( length );\n\t\tfor ( int i = 0; i < length; i++ )\n\t\t{\n\t\t\ttable.put(words[i], words[i]);\n\t\t}\n\t\treturn table;\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37c74a185a49d74a8a2de1f102ffe2fbf8c80ff9","date":1078974336,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/WordlistLoader#makeWordTable(String[],int).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/WordlistLoader#makeWordTable(String[],int).mjava","sourceNew":"  /**\n   * Builds the wordlist table.\n   *\n   * @param words  Word that where read\n   * @param length Amount of words that where read into <tt>words</tt>\n   */\n  private static HashMap makeWordTable(String[] words, int length) {\n    HashMap table = new HashMap(length);\n    for (int i = 0; i < length; i++) {\n      table.put(words[i], words[i]);\n    }\n    return table;\n  }\n\n","sourceOld":"\t/**\n\t * Builds the wordlist table.\n\t *\n\t * @param words Word that where read\n\t * @param length Amount of words that where read into <tt>words</tt>\n\t */\n\tprivate static Hashtable makeWordTable( String[] words, int length )\n\t{\n\t\tHashtable table = new Hashtable( length );\n\t\tfor ( int i = 0; i < length; i++ )\n\t\t{\n\t\t\ttable.put(words[i], words[i]);\n\t\t}\n\t\treturn table;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/nl/WordlistLoader#makeWordTable(String[],int).mjava","pathOld":"sandbox/contributions/analyzers/src/java/org/apache/lucene/analysis/nl/WordlistLoader#makeWordTable(String[],int).mjava","sourceNew":"  /**\n   * Builds the wordlist table.\n   *\n   * @param words  Word that where read\n   * @param length Amount of words that where read into <tt>words</tt>\n   */\n  private static HashMap makeWordTable(String[] words, int length) {\n    HashMap table = new HashMap(length);\n    for (int i = 0; i < length; i++) {\n      table.put(words[i], words[i]);\n    }\n    return table;\n  }\n\n","sourceOld":"  /**\n   * Builds the wordlist table.\n   *\n   * @param words  Word that where read\n   * @param length Amount of words that where read into <tt>words</tt>\n   */\n  private static HashMap makeWordTable(String[] words, int length) {\n    HashMap table = new HashMap(length);\n    for (int i = 0; i < length; i++) {\n      table.put(words[i], words[i]);\n    }\n    return table;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["37c74a185a49d74a8a2de1f102ffe2fbf8c80ff9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a684698d2d785b642cc0dda9c81091abc2bd90b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"37c74a185a49d74a8a2de1f102ffe2fbf8c80ff9":["a684698d2d785b642cc0dda9c81091abc2bd90b5"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a684698d2d785b642cc0dda9c81091abc2bd90b5"],"a684698d2d785b642cc0dda9c81091abc2bd90b5":["37c74a185a49d74a8a2de1f102ffe2fbf8c80ff9"],"37c74a185a49d74a8a2de1f102ffe2fbf8c80ff9":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}