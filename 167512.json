{"path":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/DistanceUtils#vectorDistance(double[],double[],double).mjava","commits":[{"id":"459be89020f9023e3b60066066a892c7edb5de58","date":1279657074,"type":1,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/DistanceUtils#vectorDistance(double[],double[],double).mjava","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/DistanceUtils#vectorDistance(double[],double[],double).mjava","sourceNew":"  /**\n   * Calculate the p-norm (i.e. length) beteen two vectors\n   *\n   * @param vec1  The first vector\n   * @param vec2  The second vector\n   * @param power The power (2 for Euclidean distance, 1 for manhattan, etc.)\n   * @return The length.\n   *         <p/>\n   *         See http://en.wikipedia.org/wiki/Lp_space\n   * @see #vectorDistance(double[], double[], double, double)\n   */\n  public static double vectorDistance(double[] vec1, double[] vec2, double power) {\n    return vectorDistance(vec1, vec2, power, 1.0 / power);\n  }\n\n","sourceOld":"  /**\n   * Calculate the p-norm (i.e. length) beteen two vectors\n   *\n   * @param vec1  The first vector\n   * @param vec2  The second vector\n   * @param power The power (2 for Euclidean distance, 1 for manhattan, etc.)\n   * @return The length.\n   *         <p/>\n   *         See http://en.wikipedia.org/wiki/Lp_space\n   * @see #vectorDistance(double[], double[], double, double)\n   */\n  public static double vectorDistance(double[] vec1, double[] vec2, double power) {\n    return vectorDistance(vec1, vec2, power, 1.0 / power);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/DistanceUtils#vectorDistance(double[],double[],double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Calculate the p-norm (i.e. length) beteen two vectors\n   *\n   * @param vec1  The first vector\n   * @param vec2  The second vector\n   * @param power The power (2 for Euclidean distance, 1 for manhattan, etc.)\n   * @return The length.\n   *         <p/>\n   *         See http://en.wikipedia.org/wiki/Lp_space\n   * @see #vectorDistance(double[], double[], double, double)\n   */\n  public static double vectorDistance(double[] vec1, double[] vec2, double power) {\n    return vectorDistance(vec1, vec2, power, 1.0 / power);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fb7e38713d15939e085d376c6391e6e6262a81f","date":1329897272,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/DistanceUtils#vectorDistance(double[],double[],double).mjava","sourceNew":null,"sourceOld":"  /**\n   * Calculate the p-norm (i.e. length) beteen two vectors\n   *\n   * @param vec1  The first vector\n   * @param vec2  The second vector\n   * @param power The power (2 for Euclidean distance, 1 for manhattan, etc.)\n   * @return The length.\n   *         <p/>\n   *         See http://en.wikipedia.org/wiki/Lp_space\n   * @see #vectorDistance(double[], double[], double, double)\n   */\n  public static double vectorDistance(double[] vec1, double[] vec2, double power) {\n    return vectorDistance(vec1, vec2, power, 1.0 / power);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e47768b261c28e7e6032060e8331475c81057953","date":1331681297,"type":4,"author":"Ryan McKinley","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/DistanceUtils#vectorDistance(double[],double[],double).mjava","sourceNew":null,"sourceOld":"  /**\n   * Calculate the p-norm (i.e. length) beteen two vectors\n   *\n   * @param vec1  The first vector\n   * @param vec2  The second vector\n   * @param power The power (2 for Euclidean distance, 1 for manhattan, etc.)\n   * @return The length.\n   *         <p/>\n   *         See http://en.wikipedia.org/wiki/Lp_space\n   * @see #vectorDistance(double[], double[], double, double)\n   */\n  public static double vectorDistance(double[] vec1, double[] vec2, double power) {\n    return vectorDistance(vec1, vec2, power, 1.0 / power);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"459be89020f9023e3b60066066a892c7edb5de58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","459be89020f9023e3b60066066a892c7edb5de58"],"e47768b261c28e7e6032060e8331475c81057953":["459be89020f9023e3b60066066a892c7edb5de58","2fb7e38713d15939e085d376c6391e6e6262a81f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e47768b261c28e7e6032060e8331475c81057953"],"2fb7e38713d15939e085d376c6391e6e6262a81f":["459be89020f9023e3b60066066a892c7edb5de58"]},"commit2Childs":{"459be89020f9023e3b60066066a892c7edb5de58":["5f4e87790277826a2aea119328600dfb07761f32","e47768b261c28e7e6032060e8331475c81057953","2fb7e38713d15939e085d376c6391e6e6262a81f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["459be89020f9023e3b60066066a892c7edb5de58","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":[],"e47768b261c28e7e6032060e8331475c81057953":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2fb7e38713d15939e085d376c6391e6e6262a81f":["e47768b261c28e7e6032060e8331475c81057953"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}