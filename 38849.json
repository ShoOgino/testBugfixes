{"path":"src/java/org/apache/lucene/index/IndexReader#getVersion().mjava","commits":[{"id":"7f44c23360b159add37a77e1ba74e46599065282","date":1118177719,"type":0,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getVersion().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Version number when this IndexReader was opened.\n   */\n  public long getVersion() {\n    return segmentInfos.getVersion();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"328c1568e471f0c6eaa49ec00334ca59e573710f","date":1173897963,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getVersion().mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getVersion().mjava","sourceNew":"  /**\n   * Version number when this IndexReader was opened.\n   */\n  public long getVersion() {\n    ensureOpen();\n    return segmentInfos.getVersion();\n  }\n\n","sourceOld":"  /**\n   * Version number when this IndexReader was opened.\n   */\n  public long getVersion() {\n    return segmentInfos.getVersion();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"125b5699f11b58d9be0820c6ce8b1648812902e8","date":1190273227,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getVersion().mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getVersion().mjava","sourceNew":"  /**\n   * Version number when this IndexReader was opened. Not implemented in the IndexReader base class.\n   * @throws UnsupportedOperationException unless overridden in subclass\n   */\n  public long getVersion() {\n    throw new UnsupportedOperationException(\"This reader does not support this method.\");\n  }\n\n","sourceOld":"  /**\n   * Version number when this IndexReader was opened.\n   */\n  public long getVersion() {\n    ensureOpen();\n    return segmentInfos.getVersion();\n  }\n\n","bugFix":null,"bugIntro":["537382020d6797489b93fa8aeb62495d5018b0ba"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"537382020d6797489b93fa8aeb62495d5018b0ba","date":1255718738,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getVersion().mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getVersion().mjava","sourceNew":"  /**\n   * Version number when this IndexReader was opened. Not\n   * implemented in the IndexReader base class.\n   *\n   * <p>If this reader is based on a Directory (ie, was\n   * created by calling {@link #open}, or {@link #reopen} on\n   * a reader based on a Directory), then this method\n   * returns the version recorded in the commit that the\n   * reader opened.  This version is advanced every time\n   * {@link IndexWriter#commit} is called.</p>\n   *\n   * <p>If instead this reader is a near real-time reader\n   * (ie, obtained by a call to {@link\n   * IndexWriter#getReader}, or by calling {@link #reopen}\n   * on a near real-time reader), then this method returns\n   * the version of the last commit done by the writer.\n   * Note that even as further changes are made with the\n   * writer, the version will not changed until a commit is\n   * completed.  Thus, you should not rely on this method to\n   * determine when a near real-time reader should be\n   * opened.  Use {@link #isCurrent} instead.</p>\n   *\n   * @throws UnsupportedOperationException unless overridden in subclass\n   */\n  public long getVersion() {\n    throw new UnsupportedOperationException(\"This reader does not support this method.\");\n  }\n\n","sourceOld":"  /**\n   * Version number when this IndexReader was opened. Not implemented in the IndexReader base class.\n   * @throws UnsupportedOperationException unless overridden in subclass\n   */\n  public long getVersion() {\n    throw new UnsupportedOperationException(\"This reader does not support this method.\");\n  }\n\n","bugFix":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"bugIntro":["c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#getVersion().mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getVersion().mjava","sourceNew":"  /**\n   * Version number when this IndexReader was opened. Not\n   * implemented in the IndexReader base class.\n   *\n   * <p>If this reader is based on a Directory (ie, was\n   * created by calling {@link #open}, or {@link #reopen} on\n   * a reader based on a Directory), then this method\n   * returns the version recorded in the commit that the\n   * reader opened.  This version is advanced every time\n   * {@link IndexWriter#commit} is called.</p>\n   *\n   * <p>If instead this reader is a near real-time reader\n   * (ie, obtained by a call to {@link\n   * IndexWriter#getReader}, or by calling {@link #reopen}\n   * on a near real-time reader), then this method returns\n   * the version of the last commit done by the writer.\n   * Note that even as further changes are made with the\n   * writer, the version will not changed until a commit is\n   * completed.  Thus, you should not rely on this method to\n   * determine when a near real-time reader should be\n   * opened.  Use {@link #isCurrent} instead.</p>\n   *\n   * @throws UnsupportedOperationException unless overridden in subclass\n   */\n  public long getVersion() {\n    throw new UnsupportedOperationException(\"This reader does not support this method.\");\n  }\n\n","sourceOld":"  /**\n   * Version number when this IndexReader was opened. Not\n   * implemented in the IndexReader base class.\n   *\n   * <p>If this reader is based on a Directory (ie, was\n   * created by calling {@link #open}, or {@link #reopen} on\n   * a reader based on a Directory), then this method\n   * returns the version recorded in the commit that the\n   * reader opened.  This version is advanced every time\n   * {@link IndexWriter#commit} is called.</p>\n   *\n   * <p>If instead this reader is a near real-time reader\n   * (ie, obtained by a call to {@link\n   * IndexWriter#getReader}, or by calling {@link #reopen}\n   * on a near real-time reader), then this method returns\n   * the version of the last commit done by the writer.\n   * Note that even as further changes are made with the\n   * writer, the version will not changed until a commit is\n   * completed.  Thus, you should not rely on this method to\n   * determine when a near real-time reader should be\n   * opened.  Use {@link #isCurrent} instead.</p>\n   *\n   * @throws UnsupportedOperationException unless overridden in subclass\n   */\n  public long getVersion() {\n    throw new UnsupportedOperationException(\"This reader does not support this method.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"125b5699f11b58d9be0820c6ce8b1648812902e8":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"328c1568e471f0c6eaa49ec00334ca59e573710f":["7f44c23360b159add37a77e1ba74e46599065282"],"7f44c23360b159add37a77e1ba74e46599065282":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"537382020d6797489b93fa8aeb62495d5018b0ba":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["537382020d6797489b93fa8aeb62495d5018b0ba"]},"commit2Childs":{"125b5699f11b58d9be0820c6ce8b1648812902e8":["537382020d6797489b93fa8aeb62495d5018b0ba"],"328c1568e471f0c6eaa49ec00334ca59e573710f":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"7f44c23360b159add37a77e1ba74e46599065282":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7f44c23360b159add37a77e1ba74e46599065282"],"537382020d6797489b93fa8aeb62495d5018b0ba":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}