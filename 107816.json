{"path":"solr/src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#getAddCommand(SolrParams).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#getAddCommand(SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  private AddUpdateCommand getAddCommand(SolrParams params) {\n    AddUpdateCommand addCmd = new AddUpdateCommand();\n    boolean overwrite = true;  // the default\n\n    Boolean overwritePending = null;\n    Boolean overwriteCommitted = null;\n\n\n    overwrite = params.getBool(UpdateParams.OVERWRITE, overwrite);\n    addCmd.commitWithin = params.getInt(COMMIT_WITHIN, -1);\n    // check if these flags are set\n    if (overwritePending != null && overwriteCommitted != null) {\n      if (overwritePending != overwriteCommitted) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"can't have different values for 'overwritePending' and 'overwriteCommitted'\");\n      }\n      overwrite = overwritePending;\n    }\n    addCmd.overwriteCommitted = overwrite;\n    addCmd.overwritePending = overwrite;\n    addCmd.allowDups = !overwrite;\n    return addCmd;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#getAddCommand(SolrParams).mjava","sourceNew":null,"sourceOld":"  private AddUpdateCommand getAddCommand(SolrParams params) {\n    AddUpdateCommand addCmd = new AddUpdateCommand();\n    boolean overwrite = true;  // the default\n\n    Boolean overwritePending = null;\n    Boolean overwriteCommitted = null;\n\n\n    overwrite = params.getBool(UpdateParams.OVERWRITE, overwrite);\n    addCmd.commitWithin = params.getInt(COMMIT_WITHIN, -1);\n    // check if these flags are set\n    if (overwritePending != null && overwriteCommitted != null) {\n      if (overwritePending != overwriteCommitted) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"can't have different values for 'overwritePending' and 'overwriteCommitted'\");\n      }\n      overwrite = overwritePending;\n    }\n    addCmd.overwriteCommitted = overwrite;\n    addCmd.overwritePending = overwrite;\n    addCmd.allowDups = !overwrite;\n    return addCmd;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#getAddCommand(SolrParams).mjava","pathOld":"src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#getAddCommand(SolrParams).mjava","sourceNew":"  private AddUpdateCommand getAddCommand(SolrParams params) {\n    AddUpdateCommand addCmd = new AddUpdateCommand();\n    boolean overwrite = true;  // the default\n\n    Boolean overwritePending = null;\n    Boolean overwriteCommitted = null;\n\n\n    overwrite = params.getBool(UpdateParams.OVERWRITE, overwrite);\n    addCmd.commitWithin = params.getInt(COMMIT_WITHIN, -1);\n    // check if these flags are set\n    if (overwritePending != null && overwriteCommitted != null) {\n      if (overwritePending != overwriteCommitted) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"can't have different values for 'overwritePending' and 'overwriteCommitted'\");\n      }\n      overwrite = overwritePending;\n    }\n    addCmd.overwriteCommitted = overwrite;\n    addCmd.overwritePending = overwrite;\n    addCmd.allowDups = !overwrite;\n    return addCmd;\n  }\n\n","sourceOld":"  private AddUpdateCommand getAddCommand(SolrParams params) {\n    AddUpdateCommand addCmd = new AddUpdateCommand();\n    boolean overwrite = true;  // the default\n\n    Boolean overwritePending = null;\n    Boolean overwriteCommitted = null;\n\n\n    overwrite = params.getBool(UpdateParams.OVERWRITE, overwrite);\n    addCmd.commitWithin = params.getInt(COMMIT_WITHIN, -1);\n    // check if these flags are set\n    if (overwritePending != null && overwriteCommitted != null) {\n      if (overwritePending != overwriteCommitted) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"can't have different values for 'overwritePending' and 'overwriteCommitted'\");\n      }\n      overwrite = overwritePending;\n    }\n    addCmd.overwriteCommitted = overwrite;\n    addCmd.overwritePending = overwrite;\n    addCmd.allowDups = !overwrite;\n    return addCmd;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#getAddCommand(SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  private AddUpdateCommand getAddCommand(SolrParams params) {\n    AddUpdateCommand addCmd = new AddUpdateCommand();\n    boolean overwrite = true;  // the default\n\n    Boolean overwritePending = null;\n    Boolean overwriteCommitted = null;\n\n\n    overwrite = params.getBool(UpdateParams.OVERWRITE, overwrite);\n    addCmd.commitWithin = params.getInt(COMMIT_WITHIN, -1);\n    // check if these flags are set\n    if (overwritePending != null && overwriteCommitted != null) {\n      if (overwritePending != overwriteCommitted) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"can't have different values for 'overwritePending' and 'overwriteCommitted'\");\n      }\n      overwrite = overwritePending;\n    }\n    addCmd.overwriteCommitted = overwrite;\n    addCmd.overwritePending = overwrite;\n    addCmd.allowDups = !overwrite;\n    return addCmd;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5653af107efef582afd0bc6aff175972359fdd6","date":1293390698,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#getAddCommand(SolrParams).mjava","pathOld":"solr/src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#getAddCommand(SolrParams).mjava","sourceNew":"  private AddUpdateCommand getAddCommand(SolrParams params) {\n    AddUpdateCommand addCmd = new AddUpdateCommand();\n\n    addCmd.overwrite = params.getBool(UpdateParams.OVERWRITE, true);\n    addCmd.commitWithin = params.getInt(COMMIT_WITHIN, -1);\n    return addCmd;\n  }\n\n","sourceOld":"  private AddUpdateCommand getAddCommand(SolrParams params) {\n    AddUpdateCommand addCmd = new AddUpdateCommand();\n    boolean overwrite = true;  // the default\n\n    Boolean overwritePending = null;\n    Boolean overwriteCommitted = null;\n\n\n    overwrite = params.getBool(UpdateParams.OVERWRITE, overwrite);\n    addCmd.commitWithin = params.getInt(COMMIT_WITHIN, -1);\n    // check if these flags are set\n    if (overwritePending != null && overwriteCommitted != null) {\n      if (overwritePending != overwriteCommitted) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"can't have different values for 'overwritePending' and 'overwriteCommitted'\");\n      }\n      overwrite = overwritePending;\n    }\n    addCmd.overwriteCommitted = overwrite;\n    addCmd.overwritePending = overwrite;\n    addCmd.allowDups = !overwrite;\n    return addCmd;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa","date":1293733647,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#getAddCommand(SolrQueryRequest,SolrParams).mjava","pathOld":"solr/src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#getAddCommand(SolrParams).mjava","sourceNew":"  private AddUpdateCommand getAddCommand(SolrQueryRequest req, SolrParams params) {\n    AddUpdateCommand addCmd = new AddUpdateCommand(req);\n\n    addCmd.overwrite = params.getBool(UpdateParams.OVERWRITE, true);\n    addCmd.commitWithin = params.getInt(COMMIT_WITHIN, -1);\n    return addCmd;\n  }\n\n","sourceOld":"  private AddUpdateCommand getAddCommand(SolrParams params) {\n    AddUpdateCommand addCmd = new AddUpdateCommand();\n\n    addCmd.overwrite = params.getBool(UpdateParams.OVERWRITE, true);\n    addCmd.commitWithin = params.getInt(COMMIT_WITHIN, -1);\n    return addCmd;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#getAddCommand(SolrParams).mjava","sourceNew":null,"sourceOld":"  private AddUpdateCommand getAddCommand(SolrParams params) {\n    AddUpdateCommand addCmd = new AddUpdateCommand();\n    boolean overwrite = true;  // the default\n\n    Boolean overwritePending = null;\n    Boolean overwriteCommitted = null;\n\n\n    overwrite = params.getBool(UpdateParams.OVERWRITE, overwrite);\n    addCmd.commitWithin = params.getInt(COMMIT_WITHIN, -1);\n    // check if these flags are set\n    if (overwritePending != null && overwriteCommitted != null) {\n      if (overwritePending != overwriteCommitted) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"can't have different values for 'overwritePending' and 'overwriteCommitted'\");\n      }\n      overwrite = overwritePending;\n    }\n    addCmd.overwriteCommitted = overwrite;\n    addCmd.overwritePending = overwrite;\n    addCmd.allowDups = !overwrite;\n    return addCmd;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/handler/BinaryUpdateRequestHandler#getAddCommand(SolrParams).mjava","sourceNew":null,"sourceOld":"  private AddUpdateCommand getAddCommand(SolrParams params) {\n    AddUpdateCommand addCmd = new AddUpdateCommand();\n    boolean overwrite = true;  // the default\n\n    Boolean overwritePending = null;\n    Boolean overwriteCommitted = null;\n\n\n    overwrite = params.getBool(UpdateParams.OVERWRITE, overwrite);\n    addCmd.commitWithin = params.getInt(COMMIT_WITHIN, -1);\n    // check if these flags are set\n    if (overwritePending != null && overwriteCommitted != null) {\n      if (overwritePending != overwriteCommitted) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                \"can't have different values for 'overwritePending' and 'overwriteCommitted'\");\n      }\n      overwrite = overwritePending;\n    }\n    addCmd.overwriteCommitted = overwrite;\n    addCmd.overwritePending = overwrite;\n    addCmd.allowDups = !overwrite;\n    return addCmd;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"70ad682703b8585f5d0a637efec044d57ec05efb":["1da8d55113b689b06716246649de6f62430f15c0","5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["1da8d55113b689b06716246649de6f62430f15c0","5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"b5653af107efef582afd0bc6aff175972359fdd6":["1da8d55113b689b06716246649de6f62430f15c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa":["b5653af107efef582afd0bc6aff175972359fdd6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","b5653af107efef582afd0bc6aff175972359fdd6"],"70ad682703b8585f5d0a637efec044d57ec05efb":[],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":[],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"b5653af107efef582afd0bc6aff175972359fdd6":["5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}