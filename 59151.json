{"path":"src/test/org/apache/lucene/search/TestQueryWrapperFilter#testBasic().mjava","commits":[{"id":"512f996a2f8247d73f287fe4840951c0f55437ed","date":1250547720,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestQueryWrapperFilter#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"value\", Store.NO, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n\n    // should not throw exception with primitive query\n    QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n    TopDocs hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with non primitive query\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, Occur.MUST);\n    booleanQuery.add(new TermQuery(new Term(\"field\", \"missing\")),\n        Occur.MUST_NOT);\n    qwf = new QueryWrapperFilter(termQuery);\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with Query that doesn't implement\n    // Query#createWeight\n    qwf = new QueryWrapperFilter(new FuzzyQuery(new Term(\"field\", \"valu\")));\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56ba167a45f1c8c30526d9fa50d3bb023dfeccd6","date":1250567324,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestQueryWrapperFilter#testBasic().mjava","pathOld":"src/test/org/apache/lucene/search/TestQueryWrapperFilter#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"value\", Store.NO, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n\n    // should not throw exception with primitive query\n    QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n    TopDocs hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with complex primitive query\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, Occur.MUST);\n    booleanQuery.add(new TermQuery(new Term(\"field\", \"missing\")),\n        Occur.MUST_NOT);\n    qwf = new QueryWrapperFilter(termQuery);\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with non primitive Query (doesn't implement\n    // Query#createWeight)\n    qwf = new QueryWrapperFilter(new FuzzyQuery(new Term(\"field\", \"valu\")));\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"value\", Store.NO, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n\n    // should not throw exception with primitive query\n    QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n    TopDocs hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with non primitive query\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, Occur.MUST);\n    booleanQuery.add(new TermQuery(new Term(\"field\", \"missing\")),\n        Occur.MUST_NOT);\n    qwf = new QueryWrapperFilter(termQuery);\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with Query that doesn't implement\n    // Query#createWeight\n    qwf = new QueryWrapperFilter(new FuzzyQuery(new Term(\"field\", \"valu\")));\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a0b8ae4ac997de7adea27f34c380588fa28d646","date":1253188966,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestQueryWrapperFilter#testBasic().mjava","pathOld":"src/test/org/apache/lucene/search/TestQueryWrapperFilter#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"value\", Store.NO, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n\n    // should not throw exception with primitive query\n    QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n    TopDocs hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with complex primitive query\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, Occur.MUST);\n    booleanQuery.add(new TermQuery(new Term(\"field\", \"missing\")),\n        Occur.MUST_NOT);\n    qwf = new QueryWrapperFilter(termQuery);\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with non primitive Query (doesn't implement\n    // Query#createWeight)\n    qwf = new QueryWrapperFilter(new FuzzyQuery(new Term(\"field\", \"valu\")));\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // test a query with no hits\n    termQuery = new TermQuery(new Term(\"field\", \"not_exist\"));\n    qwf = new QueryWrapperFilter(termQuery);\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(0, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(0, hits.totalHits);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"value\", Store.NO, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n\n    // should not throw exception with primitive query\n    QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n    TopDocs hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with complex primitive query\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, Occur.MUST);\n    booleanQuery.add(new TermQuery(new Term(\"field\", \"missing\")),\n        Occur.MUST_NOT);\n    qwf = new QueryWrapperFilter(termQuery);\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with non primitive Query (doesn't implement\n    // Query#createWeight)\n    qwf = new QueryWrapperFilter(new FuzzyQuery(new Term(\"field\", \"valu\")));\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestQueryWrapperFilter#testBasic().mjava","pathOld":"src/test/org/apache/lucene/search/TestQueryWrapperFilter#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"value\", Store.NO, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n\n    // should not throw exception with primitive query\n    QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n    TopDocs hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with complex primitive query\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, Occur.MUST);\n    booleanQuery.add(new TermQuery(new Term(\"field\", \"missing\")),\n        Occur.MUST_NOT);\n    qwf = new QueryWrapperFilter(termQuery);\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with non primitive Query (doesn't implement\n    // Query#createWeight)\n    qwf = new QueryWrapperFilter(new FuzzyQuery(new Term(\"field\", \"valu\")));\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // test a query with no hits\n    termQuery = new TermQuery(new Term(\"field\", \"not_exist\"));\n    qwf = new QueryWrapperFilter(termQuery);\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(0, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(0, hits.totalHits);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"value\", Store.NO, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n\n    // should not throw exception with primitive query\n    QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n    TopDocs hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with complex primitive query\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, Occur.MUST);\n    booleanQuery.add(new TermQuery(new Term(\"field\", \"missing\")),\n        Occur.MUST_NOT);\n    qwf = new QueryWrapperFilter(termQuery);\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with non primitive Query (doesn't implement\n    // Query#createWeight)\n    qwf = new QueryWrapperFilter(new FuzzyQuery(new Term(\"field\", \"valu\")));\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // test a query with no hits\n    termQuery = new TermQuery(new Term(\"field\", \"not_exist\"));\n    qwf = new QueryWrapperFilter(termQuery);\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(0, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(0, hits.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestQueryWrapperFilter#testBasic().mjava","pathOld":"src/test/org/apache/lucene/search/TestQueryWrapperFilter#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(TEST_VERSION_CURRENT), true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"value\", Store.NO, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n\n    // should not throw exception with primitive query\n    QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n    TopDocs hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with complex primitive query\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, Occur.MUST);\n    booleanQuery.add(new TermQuery(new Term(\"field\", \"missing\")),\n        Occur.MUST_NOT);\n    qwf = new QueryWrapperFilter(termQuery);\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with non primitive Query (doesn't implement\n    // Query#createWeight)\n    qwf = new QueryWrapperFilter(new FuzzyQuery(new Term(\"field\", \"valu\")));\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // test a query with no hits\n    termQuery = new TermQuery(new Term(\"field\", \"not_exist\"));\n    qwf = new QueryWrapperFilter(termQuery);\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(0, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(0, hits.totalHits);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"value\", Store.NO, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n\n    // should not throw exception with primitive query\n    QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n    TopDocs hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with complex primitive query\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, Occur.MUST);\n    booleanQuery.add(new TermQuery(new Term(\"field\", \"missing\")),\n        Occur.MUST_NOT);\n    qwf = new QueryWrapperFilter(termQuery);\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with non primitive Query (doesn't implement\n    // Query#createWeight)\n    qwf = new QueryWrapperFilter(new FuzzyQuery(new Term(\"field\", \"valu\")));\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // test a query with no hits\n    termQuery = new TermQuery(new Term(\"field\", \"not_exist\"));\n    qwf = new QueryWrapperFilter(termQuery);\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(0, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(0, hits.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestQueryWrapperFilter#testBasic().mjava","pathOld":"src/test/org/apache/lucene/search/TestQueryWrapperFilter#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"value\", Store.NO, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n\n    // should not throw exception with primitive query\n    QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n    TopDocs hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with complex primitive query\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, Occur.MUST);\n    booleanQuery.add(new TermQuery(new Term(\"field\", \"missing\")),\n        Occur.MUST_NOT);\n    qwf = new QueryWrapperFilter(termQuery);\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with non primitive Query (doesn't implement\n    // Query#createWeight)\n    qwf = new QueryWrapperFilter(new FuzzyQuery(new Term(\"field\", \"valu\")));\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // test a query with no hits\n    termQuery = new TermQuery(new Term(\"field\", \"not_exist\"));\n    qwf = new QueryWrapperFilter(termQuery);\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(0, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(0, hits.totalHits);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(TEST_VERSION_CURRENT), true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"value\", Store.NO, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n\n    // should not throw exception with primitive query\n    QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n    TopDocs hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with complex primitive query\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, Occur.MUST);\n    booleanQuery.add(new TermQuery(new Term(\"field\", \"missing\")),\n        Occur.MUST_NOT);\n    qwf = new QueryWrapperFilter(termQuery);\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with non primitive Query (doesn't implement\n    // Query#createWeight)\n    qwf = new QueryWrapperFilter(new FuzzyQuery(new Term(\"field\", \"valu\")));\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // test a query with no hits\n    termQuery = new TermQuery(new Term(\"field\", \"not_exist\"));\n    qwf = new QueryWrapperFilter(termQuery);\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(0, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(0, hits.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestQueryWrapperFilter#testBasic().mjava","pathOld":"src/test/org/apache/lucene/search/TestQueryWrapperFilter#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(TEST_VERSION_CURRENT), true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"value\", Store.NO, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n\n    // should not throw exception with primitive query\n    QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n    TopDocs hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with complex primitive query\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, Occur.MUST);\n    booleanQuery.add(new TermQuery(new Term(\"field\", \"missing\")),\n        Occur.MUST_NOT);\n    qwf = new QueryWrapperFilter(termQuery);\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with non primitive Query (doesn't implement\n    // Query#createWeight)\n    qwf = new QueryWrapperFilter(new FuzzyQuery(new Term(\"field\", \"valu\")));\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // test a query with no hits\n    termQuery = new TermQuery(new Term(\"field\", \"not_exist\"));\n    qwf = new QueryWrapperFilter(termQuery);\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(0, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(0, hits.totalHits);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"value\", Store.NO, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n\n    // should not throw exception with primitive query\n    QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n    TopDocs hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with complex primitive query\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, Occur.MUST);\n    booleanQuery.add(new TermQuery(new Term(\"field\", \"missing\")),\n        Occur.MUST_NOT);\n    qwf = new QueryWrapperFilter(termQuery);\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with non primitive Query (doesn't implement\n    // Query#createWeight)\n    qwf = new QueryWrapperFilter(new FuzzyQuery(new Term(\"field\", \"valu\")));\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // test a query with no hits\n    termQuery = new TermQuery(new Term(\"field\", \"not_exist\"));\n    qwf = new QueryWrapperFilter(termQuery);\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(0, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(0, hits.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestQueryWrapperFilter#testBasic().mjava","pathOld":"src/test/org/apache/lucene/search/TestQueryWrapperFilter#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"value\", Store.NO, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n\n    // should not throw exception with primitive query\n    QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n    TopDocs hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with complex primitive query\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, Occur.MUST);\n    booleanQuery.add(new TermQuery(new Term(\"field\", \"missing\")),\n        Occur.MUST_NOT);\n    qwf = new QueryWrapperFilter(termQuery);\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with non primitive Query (doesn't implement\n    // Query#createWeight)\n    qwf = new QueryWrapperFilter(new FuzzyQuery(new Term(\"field\", \"valu\")));\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // test a query with no hits\n    termQuery = new TermQuery(new Term(\"field\", \"not_exist\"));\n    qwf = new QueryWrapperFilter(termQuery);\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(0, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(0, hits.totalHits);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(TEST_VERSION_CURRENT), true,\n        IndexWriter.MaxFieldLength.LIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"value\", Store.NO, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n\n    // should not throw exception with primitive query\n    QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n    TopDocs hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with complex primitive query\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, Occur.MUST);\n    booleanQuery.add(new TermQuery(new Term(\"field\", \"missing\")),\n        Occur.MUST_NOT);\n    qwf = new QueryWrapperFilter(termQuery);\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with non primitive Query (doesn't implement\n    // Query#createWeight)\n    qwf = new QueryWrapperFilter(new FuzzyQuery(new Term(\"field\", \"valu\")));\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // test a query with no hits\n    termQuery = new TermQuery(new Term(\"field\", \"not_exist\"));\n    qwf = new QueryWrapperFilter(termQuery);\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(0, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(0, hits.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestQueryWrapperFilter#testBasic().mjava","pathOld":"src/test/org/apache/lucene/search/TestQueryWrapperFilter#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"value\", Store.NO, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n\n    // should not throw exception with primitive query\n    QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n    TopDocs hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with complex primitive query\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, Occur.MUST);\n    booleanQuery.add(new TermQuery(new Term(\"field\", \"missing\")),\n        Occur.MUST_NOT);\n    qwf = new QueryWrapperFilter(termQuery);\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with non primitive Query (doesn't implement\n    // Query#createWeight)\n    qwf = new QueryWrapperFilter(new FuzzyQuery(new Term(\"field\", \"valu\")));\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // test a query with no hits\n    termQuery = new TermQuery(new Term(\"field\", \"not_exist\"));\n    qwf = new QueryWrapperFilter(termQuery);\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(0, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(0, hits.totalHits);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"value\", Store.NO, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n\n    TermQuery termQuery = new TermQuery(new Term(\"field\", \"value\"));\n\n    // should not throw exception with primitive query\n    QueryWrapperFilter qwf = new QueryWrapperFilter(termQuery);\n\n    IndexSearcher searcher = new IndexSearcher(dir, true);\n    TopDocs hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with complex primitive query\n    BooleanQuery booleanQuery = new BooleanQuery();\n    booleanQuery.add(termQuery, Occur.MUST);\n    booleanQuery.add(new TermQuery(new Term(\"field\", \"missing\")),\n        Occur.MUST_NOT);\n    qwf = new QueryWrapperFilter(termQuery);\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // should not throw exception with non primitive Query (doesn't implement\n    // Query#createWeight)\n    qwf = new QueryWrapperFilter(new FuzzyQuery(new Term(\"field\", \"valu\")));\n\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(1, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(1, hits.totalHits);\n\n    // test a query with no hits\n    termQuery = new TermQuery(new Term(\"field\", \"not_exist\"));\n    qwf = new QueryWrapperFilter(termQuery);\n    hits = searcher.search(new MatchAllDocsQuery(), qwf, 10);\n    assertEquals(0, hits.totalHits);\n    hits = searcher.search(new MatchAllDocsQuery(), new CachingWrapperFilter(qwf), 10);\n    assertEquals(0, hits.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56ba167a45f1c8c30526d9fa50d3bb023dfeccd6":["512f996a2f8247d73f287fe4840951c0f55437ed"],"512f996a2f8247d73f287fe4840951c0f55437ed":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["3a0b8ae4ac997de7adea27f34c380588fa28d646"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"3a0b8ae4ac997de7adea27f34c380588fa28d646":["56ba167a45f1c8c30526d9fa50d3bb023dfeccd6"]},"commit2Childs":{"56ba167a45f1c8c30526d9fa50d3bb023dfeccd6":["3a0b8ae4ac997de7adea27f34c380588fa28d646"],"512f996a2f8247d73f287fe4840951c0f55437ed":["56ba167a45f1c8c30526d9fa50d3bb023dfeccd6"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["512f996a2f8247d73f287fe4840951c0f55437ed"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"3a0b8ae4ac997de7adea27f34c380588fa28d646":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}