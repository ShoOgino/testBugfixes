{"path":"solr/core/src/java/org/apache/solr/parser/QueryParser#Clause(String).mjava","commits":[{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParser#Clause(String).mjava","pathOld":"/dev/null","sourceNew":"  final public Query Clause(String field) throws ParseException, SyntaxError {\n  Query q;\n  Token fieldToken=null, boost=null;\n  Token localParams=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    case LPARAMS:\n      localParams = jj_consume_token(LPARAMS);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        ;\n      }\n                                                          q=getLocalParams(field, localParams.image);\n      break;\n    default:\n      jj_la1[8] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n       {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParser#Clause(String).mjava","pathOld":"/dev/null","sourceNew":"  final public Query Clause(String field) throws ParseException, SyntaxError {\n  Query q;\n  Token fieldToken=null, boost=null;\n  Token localParams=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    case LPARAMS:\n      localParams = jj_consume_token(LPARAMS);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        ;\n      }\n                                                          q=getLocalParams(field, localParams.image);\n      break;\n    default:\n      jj_la1[8] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n       {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8a9551fb5fcfdd678f5a7c22b9b1814529b1a8c","date":1438964081,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParser#Clause(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/QueryParser#Clause(String).mjava","sourceNew":"  final public Query Clause(String field) throws ParseException, SyntaxError {\n  Query q;\n  Token fieldToken=null, boost=null;\n  Token localParams=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    case FILTER:\n      jj_consume_token(FILTER);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        ;\n      }\n                                                                   q=getFilter(q);\n      break;\n    case LPARAMS:\n      localParams = jj_consume_token(LPARAMS);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n                                                          q=getLocalParams(field, localParams.image);\n      break;\n    default:\n      jj_la1[9] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n       {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Clause(String field) throws ParseException, SyntaxError {\n  Query q;\n  Token fieldToken=null, boost=null;\n  Token localParams=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    case LPARAMS:\n      localParams = jj_consume_token(LPARAMS);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        ;\n      }\n                                                          q=getLocalParams(field, localParams.image);\n      break;\n    default:\n      jj_la1[8] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n       {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68c354ba50abc8ed5c5fe98901e61d68f93952bb","date":1479836000,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParser#Clause(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/QueryParser#Clause(String).mjava","sourceNew":"  final public Query Clause(String field) throws ParseException, SyntaxError {\n  Query q;\n  Token fieldToken=null, boost=null;\n  Token localParams=null;\n  int flags = 0;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    case FILTER:\n      jj_consume_token(FILTER);\n                 flags=startFilter();\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        ;\n      }\n                                                                                            q=getFilter(q); restoreFlags(flags);\n      break;\n    case LPARAMS:\n      localParams = jj_consume_token(LPARAMS);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n                                                          q=getLocalParams(field, localParams.image);\n      break;\n    default:\n      jj_la1[9] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n       {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Clause(String field) throws ParseException, SyntaxError {\n  Query q;\n  Token fieldToken=null, boost=null;\n  Token localParams=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    case FILTER:\n      jj_consume_token(FILTER);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        ;\n      }\n                                                                   q=getFilter(q);\n      break;\n    case LPARAMS:\n      localParams = jj_consume_token(LPARAMS);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n                                                          q=getLocalParams(field, localParams.image);\n      break;\n    default:\n      jj_la1[9] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n       {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParser#Clause(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/QueryParser#Clause(String).mjava","sourceNew":"  final public Query Clause(String field) throws ParseException, SyntaxError {\n  Query q;\n  Token fieldToken=null, boost=null;\n  Token localParams=null;\n  int flags = 0;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    case FILTER:\n      jj_consume_token(FILTER);\n                 flags=startFilter();\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        ;\n      }\n                                                                                            q=getFilter(q); restoreFlags(flags);\n      break;\n    case LPARAMS:\n      localParams = jj_consume_token(LPARAMS);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n                                                          q=getLocalParams(field, localParams.image);\n      break;\n    default:\n      jj_la1[9] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n       {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Clause(String field) throws ParseException, SyntaxError {\n  Query q;\n  Token fieldToken=null, boost=null;\n  Token localParams=null;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    case FILTER:\n      jj_consume_token(FILTER);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        ;\n      }\n                                                                   q=getFilter(q);\n      break;\n    case LPARAMS:\n      localParams = jj_consume_token(LPARAMS);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n                                                          q=getLocalParams(field, localParams.image);\n      break;\n    default:\n      jj_la1[9] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n       {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e55782fb51a6e9789542818eb2161a3247f39ace","date":1489707707,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParser#Clause(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/QueryParser#Clause(String).mjava","sourceNew":"  final public Query Clause(String field) throws ParseException, SyntaxError {\n  Query q;\n  Token fieldToken=null, boost=null;\n  Token localParams=null;\n  int flags = 0;\n    if (jj_2_3(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                                  field = discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                         field = \"*\";\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      break;\n    case FILTER:\n      jj_consume_token(FILTER);\n                 flags=startFilter();\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n                                                                                             q=getFilter(q); restoreFlags(flags);\n      break;\n    case LPARAMS:\n      localParams = jj_consume_token(LPARAMS);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n                                                           q=getLocalParams(field, localParams.image);\n      break;\n    default:\n      jj_la1[11] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Clause(String field) throws ParseException, SyntaxError {\n  Query q;\n  Token fieldToken=null, boost=null;\n  Token localParams=null;\n  int flags = 0;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    case FILTER:\n      jj_consume_token(FILTER);\n                 flags=startFilter();\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        ;\n      }\n                                                                                            q=getFilter(q); restoreFlags(flags);\n      break;\n    case LPARAMS:\n      localParams = jj_consume_token(LPARAMS);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n                                                          q=getLocalParams(field, localParams.image);\n      break;\n    default:\n      jj_la1[9] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n       {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c03778630c4604270d88c148afb8c7de35b51d3c","date":1490280010,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParser#Clause(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/QueryParser#Clause(String).mjava","sourceNew":"  final public Query Clause(String field) throws ParseException, SyntaxError {\n  Query q;\n  Token fieldToken=null, boost=null;\n  Token localParams=null;\n  int flags = 0;\n    if (jj_2_3(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                                  field = discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                         field = \"*\";\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      break;\n    case FILTER:\n      jj_consume_token(FILTER);\n                 flags=startFilter();\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n                                                                                             q=getFilter(q); restoreFlags(flags);\n      break;\n    case LPARAMS:\n      localParams = jj_consume_token(LPARAMS);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n                                                           q=getLocalParams(field, localParams.image);\n      break;\n    default:\n      jj_la1[11] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Clause(String field) throws ParseException, SyntaxError {\n  Query q;\n  Token fieldToken=null, boost=null;\n  Token localParams=null;\n  int flags = 0;\n    if (jj_2_1(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                               field=discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                      field=\"*\";\n        break;\n      default:\n        jj_la1[5] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[6] = jj_gen;\n        ;\n      }\n      break;\n    case FILTER:\n      jj_consume_token(FILTER);\n                 flags=startFilter();\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        ;\n      }\n                                                                                            q=getFilter(q); restoreFlags(flags);\n      break;\n    case LPARAMS:\n      localParams = jj_consume_token(LPARAMS);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n                                                          q=getLocalParams(field, localParams.image);\n      break;\n    default:\n      jj_la1[9] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n       {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4bf8c857cdf9b9be903cae84ef15985ad090a05","date":1600342158,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/parser/QueryParser#Clause(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/parser/QueryParser#Clause(String).mjava","sourceNew":"  final public Query Clause(String field) throws ParseException, SyntaxError {Query q;\n  Token fieldToken=null, boost=null;\n  Token localParams=null;\n  int flags = 0;\n    if (jj_2_3(2)) {\n      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {\n      case TERM:{\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\nfield = discardEscapeChar(fieldToken.image);\n        break;\n        }\n      case STAR:{\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\nfield = \"*\";\n        break;\n        }\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:{\n      q = Term(field);\n      break;\n      }\n    case LPAREN:{\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {\n      case CARAT:{\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n        }\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      break;\n      }\n    case FILTER:{\n      jj_consume_token(FILTER);\nflags=startFilter();\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {\n      case CARAT:{\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n        }\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\nq=getFilter(q); restoreFlags(flags);\n      break;\n      }\n    case LPARAMS:{\n      localParams = jj_consume_token(LPARAMS);\n      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {\n      case CARAT:{\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n        }\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\nq=getLocalParams(field, localParams.image);\n      break;\n      }\n    default:\n      jj_la1[11] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n{if (\"\" != null) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n}\n\n","sourceOld":"  final public Query Clause(String field) throws ParseException, SyntaxError {\n  Query q;\n  Token fieldToken=null, boost=null;\n  Token localParams=null;\n  int flags = 0;\n    if (jj_2_3(2)) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        fieldToken = jj_consume_token(TERM);\n        jj_consume_token(COLON);\n                                  field = discardEscapeChar(fieldToken.image);\n        break;\n      case STAR:\n        jj_consume_token(STAR);\n        jj_consume_token(COLON);\n                         field = \"*\";\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    } else {\n      ;\n    }\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case BAREOPER:\n    case STAR:\n    case QUOTED:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case REGEXPTERM:\n    case RANGEIN_START:\n    case RANGEEX_START:\n    case NUMBER:\n      q = Term(field);\n      break;\n    case LPAREN:\n      jj_consume_token(LPAREN);\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      break;\n    case FILTER:\n      jj_consume_token(FILTER);\n                 flags=startFilter();\n      q = Query(field);\n      jj_consume_token(RPAREN);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n                                                                                             q=getFilter(q); restoreFlags(flags);\n      break;\n    case LPARAMS:\n      localParams = jj_consume_token(LPARAMS);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n                                                           q=getLocalParams(field, localParams.image);\n      break;\n    default:\n      jj_la1[11] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    {if (true) return handleBoost(q, boost);}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b8a9551fb5fcfdd678f5a7c22b9b1814529b1a8c":["3cdb67100dc016748799a77218aa409478372d79"],"727bb765ff2542275f6d31f67be18d7104bae148":["b8a9551fb5fcfdd678f5a7c22b9b1814529b1a8c","68c354ba50abc8ed5c5fe98901e61d68f93952bb"],"3cdb67100dc016748799a77218aa409478372d79":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb67100dc016748799a77218aa409478372d79"],"c4bf8c857cdf9b9be903cae84ef15985ad090a05":["e55782fb51a6e9789542818eb2161a3247f39ace"],"c03778630c4604270d88c148afb8c7de35b51d3c":["68c354ba50abc8ed5c5fe98901e61d68f93952bb"],"e55782fb51a6e9789542818eb2161a3247f39ace":["68c354ba50abc8ed5c5fe98901e61d68f93952bb"],"68c354ba50abc8ed5c5fe98901e61d68f93952bb":["b8a9551fb5fcfdd678f5a7c22b9b1814529b1a8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c4bf8c857cdf9b9be903cae84ef15985ad090a05"]},"commit2Childs":{"b8a9551fb5fcfdd678f5a7c22b9b1814529b1a8c":["727bb765ff2542275f6d31f67be18d7104bae148","68c354ba50abc8ed5c5fe98901e61d68f93952bb"],"727bb765ff2542275f6d31f67be18d7104bae148":[],"3cdb67100dc016748799a77218aa409478372d79":["b8a9551fb5fcfdd678f5a7c22b9b1814529b1a8c","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"c4bf8c857cdf9b9be903cae84ef15985ad090a05":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c03778630c4604270d88c148afb8c7de35b51d3c":[],"68c354ba50abc8ed5c5fe98901e61d68f93952bb":["727bb765ff2542275f6d31f67be18d7104bae148","c03778630c4604270d88c148afb8c7de35b51d3c","e55782fb51a6e9789542818eb2161a3247f39ace"],"e55782fb51a6e9789542818eb2161a3247f39ace":["c4bf8c857cdf9b9be903cae84ef15985ad090a05"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["727bb765ff2542275f6d31f67be18d7104bae148","407687e67faf6e1f02a211ca078d8e3eed631027","c03778630c4604270d88c148afb8c7de35b51d3c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}