{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","sourceNew":"  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    //System.out.println(\"PR.readTermsBlock state=\" + _termState);\n    final PulsingTermState termState = (PulsingTermState) _termState;\n    if (termState.inlinedBytes == null) {\n      termState.inlinedBytes = new byte[128];\n      termState.inlinedBytesReader = new ByteArrayDataInput();\n    }\n    int len = termsIn.readVInt();\n    //System.out.println(\"  len=\" + len + \" fp=\" + termsIn.getFilePointer());\n    if (termState.inlinedBytes.length < len) {\n      termState.inlinedBytes = new byte[ArrayUtil.oversize(len, 1)];\n    }\n    termsIn.readBytes(termState.inlinedBytes, 0, len);\n    termState.inlinedBytesReader.reset(termState.inlinedBytes);\n    termState.wrappedTermState.termBlockOrd = 0;\n    wrappedPostingsReader.readTermsBlock(termsIn, fieldInfo, termState.wrappedTermState);\n  }\n\n","sourceOld":"  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    //System.out.println(\"PR.readTermsBlock state=\" + _termState);\n    final PulsingTermState termState = (PulsingTermState) _termState;\n    if (termState.inlinedBytes == null) {\n      termState.inlinedBytes = new byte[128];\n      termState.inlinedBytesReader = new ByteArrayDataInput();\n    }\n    int len = termsIn.readVInt();\n    //System.out.println(\"  len=\" + len + \" fp=\" + termsIn.getFilePointer());\n    if (termState.inlinedBytes.length < len) {\n      termState.inlinedBytes = new byte[ArrayUtil.oversize(len, 1)];\n    }\n    termsIn.readBytes(termState.inlinedBytes, 0, len);\n    termState.inlinedBytesReader.reset(termState.inlinedBytes);\n    termState.wrappedTermState.termBlockOrd = 0;\n    wrappedPostingsReader.readTermsBlock(termsIn, fieldInfo, termState.wrappedTermState);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98","date":1377268487,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    //System.out.println(\"PR.readTermsBlock state=\" + _termState);\n    final PulsingTermState termState = (PulsingTermState) _termState;\n    if (termState.inlinedBytes == null) {\n      termState.inlinedBytes = new byte[128];\n      termState.inlinedBytesReader = new ByteArrayDataInput();\n    }\n    int len = termsIn.readVInt();\n    //System.out.println(\"  len=\" + len + \" fp=\" + termsIn.getFilePointer());\n    if (termState.inlinedBytes.length < len) {\n      termState.inlinedBytes = new byte[ArrayUtil.oversize(len, 1)];\n    }\n    termsIn.readBytes(termState.inlinedBytes, 0, len);\n    termState.inlinedBytesReader.reset(termState.inlinedBytes);\n    termState.wrappedTermState.termBlockOrd = 0;\n    wrappedPostingsReader.readTermsBlock(termsIn, fieldInfo, termState.wrappedTermState);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f948dd442d23baa6cbb28daf77c8db78b351329","date":1378742876,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/pulsing/PulsingPostingsReader#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    //System.out.println(\"PR.readTermsBlock state=\" + _termState);\n    final PulsingTermState termState = (PulsingTermState) _termState;\n    if (termState.inlinedBytes == null) {\n      termState.inlinedBytes = new byte[128];\n      termState.inlinedBytesReader = new ByteArrayDataInput();\n    }\n    int len = termsIn.readVInt();\n    //System.out.println(\"  len=\" + len + \" fp=\" + termsIn.getFilePointer());\n    if (termState.inlinedBytes.length < len) {\n      termState.inlinedBytes = new byte[ArrayUtil.oversize(len, 1)];\n    }\n    termsIn.readBytes(termState.inlinedBytes, 0, len);\n    termState.inlinedBytesReader.reset(termState.inlinedBytes);\n    termState.wrappedTermState.termBlockOrd = 0;\n    wrappedPostingsReader.readTermsBlock(termsIn, fieldInfo, termState.wrappedTermState);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2f948dd442d23baa6cbb28daf77c8db78b351329":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2f948dd442d23baa6cbb28daf77c8db78b351329"]},"commit2Childs":{"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98","2f948dd442d23baa6cbb28daf77c8db78b351329"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}