{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetImpl#getDouble(String).mjava","commits":[{"id":"6209d9025a3f5ce74a8295606b15060efd4d7542","date":1442585859,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetImpl#getDouble(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public double getDouble(String columnLabel) throws SQLException {\n    return tuple.getDouble(columnLabel);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0bba396c158346d92cdd5ff662e97ac6166a2147","date":1443059349,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetImpl#getDouble(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetImpl#getDouble(String).mjava","sourceNew":"  @Override\n  public double getDouble(String columnLabel) throws SQLException {\n    Double d = tuple.getDouble(columnLabel);\n    if(d == null) {\n      return 0.0D;\n    } else {\n      return d.doubleValue();\n    }\n  }\n\n","sourceOld":"  @Override\n  public double getDouble(String columnLabel) throws SQLException {\n    return tuple.getDouble(columnLabel);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5738a8f61985edac306006fb13d667a26236414","date":1453775984,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetImpl#getDouble(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetImpl#getDouble(String).mjava","sourceNew":"  @Override\n  public double getDouble(String columnLabel) throws SQLException {\n    checkClosed();\n\n    Number number = (Number)getObject(columnLabel);\n    if(number == null) {\n      return 0.0D;\n    } else {\n      return number.doubleValue();\n    }\n  }\n\n","sourceOld":"  @Override\n  public double getDouble(String columnLabel) throws SQLException {\n    Double d = tuple.getDouble(columnLabel);\n    if(d == null) {\n      return 0.0D;\n    } else {\n      return d.doubleValue();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39fd399a800c79eff2beaad702c9b6190d499fd","date":1453997311,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetImpl#getDouble(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetImpl#getDouble(String).mjava","sourceNew":"  @Override\n  public double getDouble(String columnLabel) throws SQLException {\n    this.wasLastValueNull = false;\n    checkClosed();\n\n    Number number = (Number)getObject(columnLabel);\n    if(number == null) {\n      this.wasLastValueNull = true;\n      return 0.0D;\n    } else {\n      return number.doubleValue();\n    }\n  }\n\n","sourceOld":"  @Override\n  public double getDouble(String columnLabel) throws SQLException {\n    checkClosed();\n\n    Number number = (Number)getObject(columnLabel);\n    if(number == null) {\n      return 0.0D;\n    } else {\n      return number.doubleValue();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d15e34266d75e4e8b95da046cd0afc812367b38","date":1454246129,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetImpl#getDouble(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetImpl#getDouble(String).mjava","sourceNew":"  @Override\n  public double getDouble(String columnLabel) throws SQLException {\n    this.wasLastValueNull = false;\n    checkClosed();\n\n    Number number = (Number)getObject(columnLabel);\n    if(number == null) {\n      this.wasLastValueNull = true;\n      return 0.0D;\n    } else {\n      return number.doubleValue();\n    }\n  }\n\n","sourceOld":"  @Override\n  public double getDouble(String columnLabel) throws SQLException {\n    checkClosed();\n\n    Number number = (Number)getObject(columnLabel);\n    if(number == null) {\n      return 0.0D;\n    } else {\n      return number.doubleValue();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetImpl#getDouble(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/sql/ResultSetImpl#getDouble(String).mjava","sourceNew":"  @Override\n  public double getDouble(String columnLabel) throws SQLException {\n    this.wasLastValueNull = false;\n    checkClosed();\n\n    Number number = (Number)getObject(columnLabel);\n    if(number == null) {\n      this.wasLastValueNull = true;\n      return 0.0D;\n    } else {\n      return number.doubleValue();\n    }\n  }\n\n","sourceOld":"  @Override\n  public double getDouble(String columnLabel) throws SQLException {\n    Double d = tuple.getDouble(columnLabel);\n    if(d == null) {\n      return 0.0D;\n    } else {\n      return d.doubleValue();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b5738a8f61985edac306006fb13d667a26236414":["0bba396c158346d92cdd5ff662e97ac6166a2147"],"c39fd399a800c79eff2beaad702c9b6190d499fd":["b5738a8f61985edac306006fb13d667a26236414"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["0bba396c158346d92cdd5ff662e97ac6166a2147","8d15e34266d75e4e8b95da046cd0afc812367b38"],"6209d9025a3f5ce74a8295606b15060efd4d7542":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0bba396c158346d92cdd5ff662e97ac6166a2147":["6209d9025a3f5ce74a8295606b15060efd4d7542"],"8d15e34266d75e4e8b95da046cd0afc812367b38":["b5738a8f61985edac306006fb13d667a26236414","c39fd399a800c79eff2beaad702c9b6190d499fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8d15e34266d75e4e8b95da046cd0afc812367b38"]},"commit2Childs":{"b5738a8f61985edac306006fb13d667a26236414":["c39fd399a800c79eff2beaad702c9b6190d499fd","8d15e34266d75e4e8b95da046cd0afc812367b38"],"c39fd399a800c79eff2beaad702c9b6190d499fd":["8d15e34266d75e4e8b95da046cd0afc812367b38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6209d9025a3f5ce74a8295606b15060efd4d7542"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"6209d9025a3f5ce74a8295606b15060efd4d7542":["0bba396c158346d92cdd5ff662e97ac6166a2147"],"0bba396c158346d92cdd5ff662e97ac6166a2147":["b5738a8f61985edac306006fb13d667a26236414","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"8d15e34266d75e4e8b95da046cd0afc812367b38":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}