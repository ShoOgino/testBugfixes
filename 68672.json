{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#invokeEventListener(String).mjava","commits":[{"id":"66fbc600d2a14957d20cd4b21074414a3cc4dde9","date":1231419136,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#invokeEventListener(String).mjava","pathOld":"/dev/null","sourceNew":"  private void invokeEventListener(String className) {\n    try {\n      EventListener listener = (EventListener) loadClass(className, dataImporter.getCore()).newInstance();\n      int currentProcess = -1;\n      if (dataImporter.getStatus() == DataImporter.Status.RUNNING_DELTA_DUMP) {\n        currentProcess = Context.DELTA_DUMP;\n      } else  {\n        currentProcess = Context.FULL_DUMP;\n      }\n      listener.onEvent(new ContextImpl(null, getVariableResolver(), null, currentProcess, session, null, this));\n    } catch (Exception e) {\n      DataImportHandlerException.wrapAndThrow(DataImportHandlerException.SEVERE, e, \"Unable to load class : \" + className);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5","29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"35d71c83578c6e08733e7a584ca744c7c66d60a6","date":1235022186,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#invokeEventListener(String).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#invokeEventListener(String).mjava","sourceNew":"  private void invokeEventListener(String className) {\n    try {\n      EventListener listener = (EventListener) loadClass(className, dataImporter.getCore()).newInstance();\n      int currentProcess = -1;\n      if (dataImporter.getStatus() == DataImporter.Status.RUNNING_DELTA_DUMP) {\n        currentProcess = Context.DELTA_DUMP;\n      } else {\n        currentProcess = Context.FULL_DUMP;\n      }\n      listener.onEvent(new ContextImpl(null, getVariableResolver(), null, currentProcess, session, null, this));\n    } catch (Exception e) {\n      DataImportHandlerException.wrapAndThrow(DataImportHandlerException.SEVERE, e, \"Unable to load class : \" + className);\n    }\n  }\n\n","sourceOld":"  private void invokeEventListener(String className) {\n    try {\n      EventListener listener = (EventListener) loadClass(className, dataImporter.getCore()).newInstance();\n      int currentProcess = -1;\n      if (dataImporter.getStatus() == DataImporter.Status.RUNNING_DELTA_DUMP) {\n        currentProcess = Context.DELTA_DUMP;\n      } else  {\n        currentProcess = Context.FULL_DUMP;\n      }\n      listener.onEvent(new ContextImpl(null, getVariableResolver(), null, currentProcess, session, null, this));\n    } catch (Exception e) {\n      DataImportHandlerException.wrapAndThrow(DataImportHandlerException.SEVERE, e, \"Unable to load class : \" + className);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"594d4ee17b3d941ed34827ca6646e378cf7d8d2a","date":1239868870,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#invokeEventListener(String).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#invokeEventListener(String).mjava","sourceNew":"  private void invokeEventListener(String className) {\n    try {\n      EventListener listener = (EventListener) loadClass(className, dataImporter.getCore()).newInstance();\n      String currentProcess;\n      if (dataImporter.getStatus() == DataImporter.Status.RUNNING_DELTA_DUMP) {\n        currentProcess = Context.DELTA_DUMP;\n      } else {\n        currentProcess = Context.FULL_DUMP;\n      }\n      listener.onEvent(new ContextImpl(null, getVariableResolver(), null, currentProcess, session, null, this));\n    } catch (Exception e) {\n      DataImportHandlerException.wrapAndThrow(DataImportHandlerException.SEVERE, e, \"Unable to load class : \" + className);\n    }\n  }\n\n","sourceOld":"  private void invokeEventListener(String className) {\n    try {\n      EventListener listener = (EventListener) loadClass(className, dataImporter.getCore()).newInstance();\n      int currentProcess = -1;\n      if (dataImporter.getStatus() == DataImporter.Status.RUNNING_DELTA_DUMP) {\n        currentProcess = Context.DELTA_DUMP;\n      } else {\n        currentProcess = Context.FULL_DUMP;\n      }\n      listener.onEvent(new ContextImpl(null, getVariableResolver(), null, currentProcess, session, null, this));\n    } catch (Exception e) {\n      DataImportHandlerException.wrapAndThrow(DataImportHandlerException.SEVERE, e, \"Unable to load class : \" + className);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"758fdd153bb361b47f22db79ace6af6f6b7b9330","date":1240213015,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#invokeEventListener(String).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#invokeEventListener(String).mjava","sourceNew":"  private void invokeEventListener(String className) {\n    try {\n      EventListener listener = (EventListener) loadClass(className, dataImporter.getCore()).newInstance();\n      notifyListener(listener);\n    } catch (Exception e) {\n      DataImportHandlerException.wrapAndThrow(DataImportHandlerException.SEVERE, e, \"Unable to load class : \" + className);\n    }\n  }\n\n","sourceOld":"  private void invokeEventListener(String className) {\n    try {\n      EventListener listener = (EventListener) loadClass(className, dataImporter.getCore()).newInstance();\n      String currentProcess;\n      if (dataImporter.getStatus() == DataImporter.Status.RUNNING_DELTA_DUMP) {\n        currentProcess = Context.DELTA_DUMP;\n      } else {\n        currentProcess = Context.FULL_DUMP;\n      }\n      listener.onEvent(new ContextImpl(null, getVariableResolver(), null, currentProcess, session, null, this));\n    } catch (Exception e) {\n      DataImportHandlerException.wrapAndThrow(DataImportHandlerException.SEVERE, e, \"Unable to load class : \" + className);\n    }\n  }\n\n","bugFix":null,"bugIntro":["29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5","29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"65f4e997b946a4eadce22b758749046a63ba2eff","date":1263282580,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#invokeEventListener(String).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#invokeEventListener(String).mjava","sourceNew":"  private void invokeEventListener(String className) {\n    try {\n      EventListener listener = (EventListener) loadClass(className, dataImporter.getCore()).newInstance();\n      notifyListener(listener);\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e, \"Unable to load class : \" + className);\n    }\n  }\n\n","sourceOld":"  private void invokeEventListener(String className) {\n    try {\n      EventListener listener = (EventListener) loadClass(className, dataImporter.getCore()).newInstance();\n      notifyListener(listener);\n    } catch (Exception e) {\n      DataImportHandlerException.wrapAndThrow(DataImportHandlerException.SEVERE, e, \"Unable to load class : \" + className);\n    }\n  }\n\n","bugFix":null,"bugIntro":["29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5","29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#invokeEventListener(String).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#invokeEventListener(String).mjava","sourceNew":"  private void invokeEventListener(String className) {\n    try {\n      EventListener listener = (EventListener) loadClass(className, dataImporter.getCore()).newInstance();\n      notifyListener(listener);\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e, \"Unable to load class : \" + className);\n    }\n  }\n\n","sourceOld":"  private void invokeEventListener(String className) {\n    try {\n      EventListener listener = (EventListener) loadClass(className, dataImporter.getCore()).newInstance();\n      notifyListener(listener);\n    } catch (Exception e) {\n      wrapAndThrow(SEVERE, e, \"Unable to load class : \" + className);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"66fbc600d2a14957d20cd4b21074414a3cc4dde9":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"65f4e997b946a4eadce22b758749046a63ba2eff":["758fdd153bb361b47f22db79ace6af6f6b7b9330"],"35d71c83578c6e08733e7a584ca744c7c66d60a6":["66fbc600d2a14957d20cd4b21074414a3cc4dde9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"758fdd153bb361b47f22db79ace6af6f6b7b9330":["594d4ee17b3d941ed34827ca6646e378cf7d8d2a"],"ad94625fb8d088209f46650c8097196fec67f00c":["65f4e997b946a4eadce22b758749046a63ba2eff"],"594d4ee17b3d941ed34827ca6646e378cf7d8d2a":["35d71c83578c6e08733e7a584ca744c7c66d60a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"66fbc600d2a14957d20cd4b21074414a3cc4dde9":["35d71c83578c6e08733e7a584ca744c7c66d60a6"],"65f4e997b946a4eadce22b758749046a63ba2eff":["ad94625fb8d088209f46650c8097196fec67f00c"],"35d71c83578c6e08733e7a584ca744c7c66d60a6":["594d4ee17b3d941ed34827ca6646e378cf7d8d2a"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["66fbc600d2a14957d20cd4b21074414a3cc4dde9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"758fdd153bb361b47f22db79ace6af6f6b7b9330":["65f4e997b946a4eadce22b758749046a63ba2eff"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"594d4ee17b3d941ed34827ca6646e378cf7d8d2a":["758fdd153bb361b47f22db79ace6af6f6b7b9330"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}