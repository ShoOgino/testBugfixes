{"path":"solr/core/src/java/org/apache/solr/update/processor/ParseDoubleFieldUpdateProcessorFactory.ParseDoubleFieldUpdateProcessor#mutateValue(Object).mjava","commits":[{"id":"039a98d0ba2c3095541adb3e3ecbdee7812fc4b8","date":1372293867,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/ParseDoubleFieldUpdateProcessorFactory.ParseDoubleFieldUpdateProcessor#mutateValue(Object).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected Object mutateValue(Object srcVal) {\n      if (srcVal instanceof CharSequence) {\n        String stringVal = srcVal.toString(); \n        ParsePosition pos = new ParsePosition(0);\n        Number number = numberFormat.get().parse(stringVal, pos);\n        if (pos.getIndex() != stringVal.length()) {\n          log.debug(\"value '{}' is not parseable, thus not mutated; unparsed chars: '{}'\",\n                    new Object[] { srcVal, stringVal.substring(pos.getIndex())});\n          return SKIP_FIELD_VALUE_LIST_SINGLETON;\n        }\n        return number.doubleValue();\n      }\n      if (srcVal instanceof Double) {\n        return srcVal;\n      }\n      return SKIP_FIELD_VALUE_LIST_SINGLETON;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/ParseDoubleFieldUpdateProcessorFactory.ParseDoubleFieldUpdateProcessor#mutateValue(Object).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected Object mutateValue(Object srcVal) {\n      if (srcVal instanceof CharSequence) {\n        String stringVal = srcVal.toString(); \n        ParsePosition pos = new ParsePosition(0);\n        Number number = numberFormat.get().parse(stringVal, pos);\n        if (pos.getIndex() != stringVal.length()) {\n          log.debug(\"value '{}' is not parseable, thus not mutated; unparsed chars: '{}'\",\n                    new Object[] { srcVal, stringVal.substring(pos.getIndex())});\n          return SKIP_FIELD_VALUE_LIST_SINGLETON;\n        }\n        return number.doubleValue();\n      }\n      if (srcVal instanceof Double) {\n        return srcVal;\n      }\n      return SKIP_FIELD_VALUE_LIST_SINGLETON;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"740d649f013f07efbeb73ca854f106c60166e7c0","date":1587431295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/ParseDoubleFieldUpdateProcessorFactory.ParseDoubleFieldUpdateProcessor#mutateValue(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/ParseDoubleFieldUpdateProcessorFactory.ParseDoubleFieldUpdateProcessor#mutateValue(Object).mjava","sourceNew":"    @Override\n    protected Object mutateValue(Object srcVal) {\n      if (srcVal instanceof CharSequence) {\n        String stringVal = srcVal.toString(); \n        ParsePosition pos = new ParsePosition(0);\n        Number number = numberFormat.get().parse(stringVal, pos);\n        if (pos.getIndex() != stringVal.length()) {\n          if (log.isDebugEnabled()) {\n            log.debug(\"value '{}' is not parseable, thus not mutated; unparsed chars: '{}'\",\n                new Object[]{srcVal, stringVal.substring(pos.getIndex())});\n          }\n          return SKIP_FIELD_VALUE_LIST_SINGLETON;\n        }\n        return number.doubleValue();\n      }\n      if (srcVal instanceof Double) {\n        return srcVal;\n      }\n      return SKIP_FIELD_VALUE_LIST_SINGLETON;\n    }\n\n","sourceOld":"    @Override\n    protected Object mutateValue(Object srcVal) {\n      if (srcVal instanceof CharSequence) {\n        String stringVal = srcVal.toString(); \n        ParsePosition pos = new ParsePosition(0);\n        Number number = numberFormat.get().parse(stringVal, pos);\n        if (pos.getIndex() != stringVal.length()) {\n          log.debug(\"value '{}' is not parseable, thus not mutated; unparsed chars: '{}'\",\n                    new Object[] { srcVal, stringVal.substring(pos.getIndex())});\n          return SKIP_FIELD_VALUE_LIST_SINGLETON;\n        }\n        return number.doubleValue();\n      }\n      if (srcVal instanceof Double) {\n        return srcVal;\n      }\n      return SKIP_FIELD_VALUE_LIST_SINGLETON;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"740d649f013f07efbeb73ca854f106c60166e7c0":["039a98d0ba2c3095541adb3e3ecbdee7812fc4b8"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","039a98d0ba2c3095541adb3e3ecbdee7812fc4b8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"039a98d0ba2c3095541adb3e3ecbdee7812fc4b8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["740d649f013f07efbeb73ca854f106c60166e7c0"]},"commit2Childs":{"740d649f013f07efbeb73ca854f106c60166e7c0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","039a98d0ba2c3095541adb3e3ecbdee7812fc4b8"],"039a98d0ba2c3095541adb3e3ecbdee7812fc4b8":["740d649f013f07efbeb73ca854f106c60166e7c0","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}