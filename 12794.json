{"path":"src/java/org/apache/solr/core/MultiCore#persist(Writer,CoreDescriptor).mjava","commits":[{"id":"6dc6ab6902f8f70ae43365947ccf44c25986906d","date":1204603577,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/MultiCore#persist(Writer,CoreDescriptor).mjava","pathOld":"/dev/null","sourceNew":"  /** Writes the multicore configuration node for a given core. */\n  void persist(Writer writer, CoreDescriptor dcore) throws IOException {\n    writer.write(\"  <core\");\n    writer.write (\" name='\");\n    XML.escapeAttributeValue(dcore.getName(), writer);\n    writer.write(\"' instanceDir='\");\n    XML.escapeAttributeValue(dcore.getInstanceDir(), writer);\n    writer.write('\\'');\n    //write config (if not default)\n    String opt = dcore.getConfigName();\n    if (opt != null && !opt.equals(dcore.getDefaultConfigName())) {\n      writer.write(\" config='\");\n      XML.escapeAttributeValue(opt, writer);\n      writer.write('\\'');\n    }\n    //write schema (if not default)\n    opt = dcore.getSchemaName();\n    if (opt != null && !opt.equals(dcore.getDefaultSchemaName())) {\n      writer.write(\" schema='\");\n      XML.escapeAttributeValue(opt, writer);\n      writer.write('\\'');\n    }\n    writer.write(\"/>\\n\"); // core\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5","date":1218639440,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/CoreContainer#persist(Writer,CoreDescriptor).mjava","pathOld":"src/java/org/apache/solr/core/MultiCore#persist(Writer,CoreDescriptor).mjava","sourceNew":"  /** Writes the multicore configuration node for a given core. */\n  void persist(Writer writer, CoreDescriptor dcore) throws IOException {\n    writer.write(\"  <core\");\n    writer.write (\" name='\");\n    XML.escapeAttributeValue(dcore.getName(), writer);\n    writer.write(\"' instanceDir='\");\n    XML.escapeAttributeValue(dcore.getInstanceDir(), writer);\n    writer.write('\\'');\n    //write config (if not default)\n    String opt = dcore.getConfigName();\n    if (opt != null && !opt.equals(dcore.getDefaultConfigName())) {\n      writer.write(\" config='\");\n      XML.escapeAttributeValue(opt, writer);\n      writer.write('\\'');\n    }\n    //write schema (if not default)\n    opt = dcore.getSchemaName();\n    if (opt != null && !opt.equals(dcore.getDefaultSchemaName())) {\n      writer.write(\" schema='\");\n      XML.escapeAttributeValue(opt, writer);\n      writer.write('\\'');\n    }\n    writer.write(\"/>\\n\"); // core\n  }\n\n","sourceOld":"  /** Writes the multicore configuration node for a given core. */\n  void persist(Writer writer, CoreDescriptor dcore) throws IOException {\n    writer.write(\"  <core\");\n    writer.write (\" name='\");\n    XML.escapeAttributeValue(dcore.getName(), writer);\n    writer.write(\"' instanceDir='\");\n    XML.escapeAttributeValue(dcore.getInstanceDir(), writer);\n    writer.write('\\'');\n    //write config (if not default)\n    String opt = dcore.getConfigName();\n    if (opt != null && !opt.equals(dcore.getDefaultConfigName())) {\n      writer.write(\" config='\");\n      XML.escapeAttributeValue(opt, writer);\n      writer.write('\\'');\n    }\n    //write schema (if not default)\n    opt = dcore.getSchemaName();\n    if (opt != null && !opt.equals(dcore.getDefaultSchemaName())) {\n      writer.write(\" schema='\");\n      XML.escapeAttributeValue(opt, writer);\n      writer.write('\\'');\n    }\n    writer.write(\"/>\\n\"); // core\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6dc6ab6902f8f70ae43365947ccf44c25986906d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5":["6dc6ab6902f8f70ae43365947ccf44c25986906d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6dc6ab6902f8f70ae43365947ccf44c25986906d":["9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["6dc6ab6902f8f70ae43365947ccf44c25986906d"],"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}