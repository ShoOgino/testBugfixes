{"path":"lucene/facet/src/java/org/apache/lucene/facet/FacetsCollector#setNextReader(AtomicReaderContext).mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/FacetsCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleFacetsCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public final void setNextReader(AtomicReaderContext context) throws IOException {\n    if (bits != null) {\n      matchingDocs.add(new MatchingDocs(this.context, bits, totalHits, scores));\n    }\n    bits = new FixedBitSet(context.reader().maxDoc());\n    totalHits = 0;\n    if (keepScores) {\n      scores = new float[64]; // some initial size\n    }\n    this.context = context;\n  }\n\n","sourceOld":"  @Override\n  public final void setNextReader(AtomicReaderContext context) throws IOException {\n    if (bits != null) {\n      matchingDocs.add(new MatchingDocs(this.context, bits, totalHits, scores));\n    }\n    bits = new FixedBitSet(context.reader().maxDoc());\n    totalHits = 0;\n    if (keepScores) {\n      scores = new float[64]; // some initial size\n    }\n    this.context = context;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/FacetsCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public final void setNextReader(AtomicReaderContext context) throws IOException {\n    if (bits != null) {\n      matchingDocs.add(new MatchingDocs(this.context, bits, totalHits, scores));\n    }\n    bits = new FixedBitSet(context.reader().maxDoc());\n    totalHits = 0;\n    if (keepScores) {\n      scores = new float[64]; // some initial size\n    }\n    this.context = context;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0732a1e488deedeceef7f601e066085e7ac655a","date":1391629546,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/FacetsCollector#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/FacetsCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  public final void setNextReader(AtomicReaderContext context) throws IOException {\n    if (docs != null) {\n      matchingDocs.add(new MatchingDocs(this.context, docs.getDocIdSet(), totalHits, scores));\n    }\n    docs = createDocs(context.reader().maxDoc());\n    totalHits = 0;\n    if (keepScores) {\n      scores = new float[64]; // some initial size\n    }\n    this.context = context;\n  }\n\n","sourceOld":"  @Override\n  public final void setNextReader(AtomicReaderContext context) throws IOException {\n    if (bits != null) {\n      matchingDocs.add(new MatchingDocs(this.context, bits, totalHits, scores));\n    }\n    bits = new FixedBitSet(context.reader().maxDoc());\n    totalHits = 0;\n    if (keepScores) {\n      scores = new float[64]; // some initial size\n    }\n    this.context = context;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae73da626f97850c922c42736f808d0378e165f0","date":1396625460,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/FacetsCollector#doSetNextReader(AtomicReaderContext).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/FacetsCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n    if (docs != null) {\n      matchingDocs.add(new MatchingDocs(this.context, docs.getDocIdSet(), totalHits, scores));\n    }\n    docs = createDocs(context.reader().maxDoc());\n    totalHits = 0;\n    if (keepScores) {\n      scores = new float[64]; // some initial size\n    }\n    this.context = context;\n  }\n\n","sourceOld":"  @Override\n  public final void setNextReader(AtomicReaderContext context) throws IOException {\n    if (docs != null) {\n      matchingDocs.add(new MatchingDocs(this.context, docs.getDocIdSet(), totalHits, scores));\n    }\n    docs = createDocs(context.reader().maxDoc());\n    totalHits = 0;\n    if (keepScores) {\n      scores = new float[64]; // some initial size\n    }\n    this.context = context;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/FacetsCollector#doSetNextReader(AtomicReaderContext).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/FacetsCollector#setNextReader(AtomicReaderContext).mjava","sourceNew":"  @Override\n  protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n    if (docs != null) {\n      matchingDocs.add(new MatchingDocs(this.context, docs.getDocIdSet(), totalHits, scores));\n    }\n    docs = createDocs(context.reader().maxDoc());\n    totalHits = 0;\n    if (keepScores) {\n      scores = new float[64]; // some initial size\n    }\n    this.context = context;\n  }\n\n","sourceOld":"  @Override\n  public final void setNextReader(AtomicReaderContext context) throws IOException {\n    if (docs != null) {\n      matchingDocs.add(new MatchingDocs(this.context, docs.getDocIdSet(), totalHits, scores));\n    }\n    docs = createDocs(context.reader().maxDoc());\n    totalHits = 0;\n    if (keepScores) {\n      scores = new float[64]; // some initial size\n    }\n    this.context = context;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0732a1e488deedeceef7f601e066085e7ac655a":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["a0732a1e488deedeceef7f601e066085e7ac655a","ae73da626f97850c922c42736f808d0378e165f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ae73da626f97850c922c42736f808d0378e165f0":["a0732a1e488deedeceef7f601e066085e7ac655a"],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae73da626f97850c922c42736f808d0378e165f0"]},"commit2Childs":{"a0732a1e488deedeceef7f601e066085e7ac655a":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","ae73da626f97850c922c42736f808d0378e165f0"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","3cc728b07df73b197e6d940d27f9b08b63918f13"],"ae73da626f97850c922c42736f808d0378e165f0":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21d36d0db865f7b84026b447bec653469a6e66df":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0732a1e488deedeceef7f601e066085e7ac655a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}