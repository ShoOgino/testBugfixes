{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#testDistanceIllegal().mjava","commits":[{"id":"d6c59bc551f4e523ce6a321280cc6733424fb824","date":1458837690,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#testDistanceIllegal().mjava","pathOld":"/dev/null","sourceNew":"  /** distance query should not accept invalid lat/lon as origin */\n  public void testDistanceIllegal() throws Exception {\n    expectThrows(Exception.class, () -> {\n      newDistanceQuery(\"field\", 92.0, 181.0, 120000);\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e21d7642ee7e0c00429964e5b47504602fe218c","date":1460897579,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/geo/BaseGeoPointTestCase#testDistanceIllegal().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#testDistanceIllegal().mjava","sourceNew":"  /** distance query should not accept invalid lat/lon as origin */\n  public void testDistanceIllegal() throws Exception {\n    expectThrows(Exception.class, () -> {\n      newDistanceQuery(\"field\", 92.0, 181.0, 120000);\n    });\n  }\n\n","sourceOld":"  /** distance query should not accept invalid lat/lon as origin */\n  public void testDistanceIllegal() throws Exception {\n    expectThrows(Exception.class, () -> {\n      newDistanceQuery(\"field\", 92.0, 181.0, 120000);\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8cb57c50beb99a1245256e866350af8e5ea1f36","date":1460921840,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/geo/BaseGeoPointTestCase#testDistanceIllegal().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#testDistanceIllegal().mjava","sourceNew":"  /** distance query should not accept invalid lat/lon as origin */\n  public void testDistanceIllegal() throws Exception {\n    expectThrows(Exception.class, () -> {\n      newDistanceQuery(\"field\", 92.0, 181.0, 120000);\n    });\n  }\n\n","sourceOld":"  /** distance query should not accept invalid lat/lon as origin */\n  public void testDistanceIllegal() throws Exception {\n    expectThrows(Exception.class, () -> {\n      newDistanceQuery(\"field\", 92.0, 181.0, 120000);\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3e21d7642ee7e0c00429964e5b47504602fe218c":["d6c59bc551f4e523ce6a321280cc6733424fb824"],"f8cb57c50beb99a1245256e866350af8e5ea1f36":["d6c59bc551f4e523ce6a321280cc6733424fb824","3e21d7642ee7e0c00429964e5b47504602fe218c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f8cb57c50beb99a1245256e866350af8e5ea1f36"],"d6c59bc551f4e523ce6a321280cc6733424fb824":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d6c59bc551f4e523ce6a321280cc6733424fb824"],"3e21d7642ee7e0c00429964e5b47504602fe218c":["f8cb57c50beb99a1245256e866350af8e5ea1f36"],"f8cb57c50beb99a1245256e866350af8e5ea1f36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d6c59bc551f4e523ce6a321280cc6733424fb824":["3e21d7642ee7e0c00429964e5b47504602fe218c","f8cb57c50beb99a1245256e866350af8e5ea1f36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}